# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:40+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/tutorial/stdlib.rst:5
msgid "Brief Tour of the Standard Library"
msgstr "Survol de la Bibliothèque Standard"

#: ../Doc/tutorial/stdlib.rst:11
msgid "Operating System Interface"
msgstr "Interface avec le Système d'Exploitation"

#: ../Doc/tutorial/stdlib.rst:13
msgid ""
"The :mod:`os` module provides dozens of functions for interacting with the "
"operating system::"
msgstr ""
"Le modules :mod:`os` propose pléthore fonctions pour interagir avec le "
"système d'exploitation : ::"

#: ../Doc/tutorial/stdlib.rst:23
msgid ""
"Be sure to use the ``import os`` style instead of ``from os import *``.  "
"This will keep :func:`os.open` from shadowing the built-in :func:`open` "
"function which operates much differently."
msgstr ""
"Mais, encore une fois, préférez ``import os``, à ``from os import *``, sans "
"quoi :func:`os.open` cacherait la primitive :func:`open`, qui fonctionne "
"différemment."

#: ../Doc/tutorial/stdlib.rst:29
msgid ""
"The built-in :func:`dir` and :func:`help` functions are useful as "
"interactive aids for working with large modules like :mod:`os`::"
msgstr ""
"Les primitives :func:`dir` et :func:`help` sont des outils utiles lorsque "
"vous travaillez en mode interactif avez des gros modules comme :mod:`os` ::"

#: ../Doc/tutorial/stdlib.rst:38
msgid ""
"For daily file and directory management tasks, the :mod:`shutil` module "
"provides a higher level interface that is easier to use::"
msgstr ""
"Pour la gestion des fichiers et dossiers, le module :mod:`shutil` expose une "
"interface plus abstraite et plus facile à utiliser : ::"

#: ../Doc/tutorial/stdlib.rst:51
msgid "File Wildcards"
msgstr "Jokers sur les noms de Fichiers"

#: ../Doc/tutorial/stdlib.rst:53
msgid ""
"The :mod:`glob` module provides a function for making file lists from "
"directory wildcard searches::"
msgstr ""
"Le module :mod:`glob` fournit une fonction pour construire des listes de "
"fichiers à partir de motifs : ::"

#: ../Doc/tutorial/stdlib.rst:64
msgid "Command Line Arguments"
msgstr "Paramètres en ligne de Commande"

#: ../Doc/tutorial/stdlib.rst:66
msgid ""
"Common utility scripts often need to process command line arguments. These "
"arguments are stored in the :mod:`sys` module's *argv* attribute as a list.  "
"For instance the following output results from running ``python demo.py one "
"two three`` at the command line::"
msgstr ""
"Typiquement, les outils en ligne de commande ont besoin de lire les "
"paramètres qui leur sont donnés. Ces paramètres sont stockés dans la "
"variable ``argv`` dans le module :mod:`sys` sous forme de liste. Par "
"exemple, l'affichage suivant vient de l'exécution de ``python demo.py one "
"two three`` depuis la ligne de commande : ::"

#: ../Doc/tutorial/stdlib.rst:75
msgid ""
"The :mod:`getopt` module processes *sys.argv* using the conventions of the "
"Unix :func:`getopt` function.  More powerful and flexible command line "
"processing is provided by the :mod:`argparse` module."
msgstr ""
"Le module :mod:`getopt` comprend *sys.argv* en utilisant les conventions "
"habituelles de la fonction Unix :func:`getopt`. Des outils de compréhension "
"des paramètres de la ligne de commande plus flexibles et avancés sont "
"disponibles dnas le module :mod:`argparse`."

#: ../Doc/tutorial/stdlib.rst:83
msgid "Error Output Redirection and Program Termination"
msgstr "Redirection de la sortie d'erreur et fin d'exécution"

#: ../Doc/tutorial/stdlib.rst:85
msgid ""
"The :mod:`sys` module also has attributes for *stdin*, *stdout*, and "
"*stderr*. The latter is useful for emitting warnings and error messages to "
"make them visible even when *stdout* has been redirected::"
msgstr ""
"Le module :mod:`sys` à aussi des attributs pour *stdin*, *stdout*, et "
"*stderr*. Ce dernier est utile pour émettre des messages d'avertissement ou "
"d'erreur qui restent visibles même si *stdout* est redirigé : ::"

#: ../Doc/tutorial/stdlib.rst:92
msgid "The most direct way to terminate a script is to use ``sys.exit()``."
msgstr ""
"Le moyen le plus direct de terminer un script est d'utiliser ``sys.exit()``."

#: ../Doc/tutorial/stdlib.rst:98
msgid "String Pattern Matching"
msgstr "Recherche de motifs dans les Chaînes"

#: ../Doc/tutorial/stdlib.rst:100
msgid ""
"The :mod:`re` module provides regular expression tools for advanced string "
"processing. For complex matching and manipulation, regular expressions offer "
"succinct, optimized solutions::"
msgstr ""
"Le module :mod:`re` fournit des outils basés sur les expressions "
"rationnelles permettant des opérations complexes sur les chaînes. C'est une "
"solution optimisée, utilisant une syntaxe consise, pour rechercher des "
"motifs complexes, ou effectuer des remplacements complexes dans les "
"chaînes : ::"

#: ../Doc/tutorial/stdlib.rst:110
msgid ""
"When only simple capabilities are needed, string methods are preferred "
"because they are easier to read and debug::"
msgstr ""
"Lorsque les opérations sont simples, il est préférable d'utiliser les "
"méthodes des chaînes, elles sont plus lisibles et plus facile à débugger : ::"

#: ../Doc/tutorial/stdlib.rst:120
msgid "Mathematics"
msgstr "Mathématiques"

#: ../Doc/tutorial/stdlib.rst:122
msgid ""
"The :mod:`math` module gives access to the underlying C library functions "
"for floating point math::"
msgstr ""
"Le module :mod:`math` expose des fonctions d'opération sur les \"float* de "
"la bibliothèque C ::"

#: ../Doc/tutorial/stdlib.rst:131
msgid "The :mod:`random` module provides tools for making random selections::"
msgstr ""
"Le module :mod:`random` offre des outils pour faire des sélections "
"aléatoires : ::"

#: ../Doc/tutorial/stdlib.rst:143
msgid ""
"The :mod:`statistics` module calculates basic statistical properties (the "
"mean, median, variance, etc.) of numeric data::"
msgstr ""
"Le module :mod:`statistics` permet de calculer des valeurs statistiques "
"basiques (la moyenne, la médiane, la variance, ...) ::"

#: ../Doc/tutorial/stdlib.rst:155
msgid ""
"The SciPy project <https://scipy.org> has many other modules for numerical "
"computations."
msgstr ""
"Le projet SciPy <https://scipy.org> contient beaucoup d'autres modules "
"autour des calculs numériques."

#: ../Doc/tutorial/stdlib.rst:161
msgid "Internet Access"
msgstr "Accès à internet"

#: ../Doc/tutorial/stdlib.rst:163
msgid ""
"There are a number of modules for accessing the internet and processing "
"internet protocols. Two of the simplest are :mod:`urllib.request` for "
"retrieving data from URLs and :mod:`smtplib` for sending mail::"
msgstr ""
"Il existe tout un tat de modules permettant d'accéder à internet et gérer "
"des protocoles utilisés sur internet. Les deux plus simples sont :mod:"
"`urllib.request`, qui permet de télécharger à partir d'une URL, et :mod:"
"`smtplib` pour envoyer des emails : ::"

#: ../Doc/tutorial/stdlib.rst:186
msgid "(Note that the second example needs a mailserver running on localhost.)"
msgstr ""
"(Notez que le deuxième exemple a besoin d'un serveur mail tournant "
"localement.)"

#: ../Doc/tutorial/stdlib.rst:192
msgid "Dates and Times"
msgstr "Dates et heures"

#: ../Doc/tutorial/stdlib.rst:194
msgid ""
"The :mod:`datetime` module supplies classes for manipulating dates and times "
"in both simple and complex ways. While date and time arithmetic is "
"supported, the focus of the implementation is on efficient member extraction "
"for output formatting and manipulation.  The module also supports objects "
"that are timezone aware. ::"
msgstr ""
"Les module :mod:`datetime` propose des classes pour manipuler les dates et "
"les heures, que le besoin soit simple ou compliqué. Bien que faire des "
"calculs de dates est possible, l'implémentation à être optimisée pour "
"l'accès aux propriétés, le formatage et la manipulation. Le module gère "
"aussi les objets conscients des fuseaux horaires : ::"

#: ../Doc/tutorial/stdlib.rst:218
msgid "Data Compression"
msgstr "Compression de donnée"

#: ../Doc/tutorial/stdlib.rst:220
msgid ""
"Common data archiving and compression formats are directly supported by "
"modules including: :mod:`zlib`, :mod:`gzip`, :mod:`bz2`, :mod:`lzma`, :mod:"
"`zipfile` and :mod:`tarfile`. ::"
msgstr ""
"Les formats d'archivage et de compression les plus communs sont directement "
"gérés par les modules :mod:`zlib`, :mod:`gzip`, :mod:`bz2`, :mod:`lzma`, :"
"mod:`zipfile`, et :mod:`tarfile` ::"

#: ../Doc/tutorial/stdlib.rst:240
msgid "Performance Measurement"
msgstr "Mesure des Performances"

#: ../Doc/tutorial/stdlib.rst:242
msgid ""
"Some Python users develop a deep interest in knowing the relative "
"performance of different approaches to the same problem. Python provides a "
"measurement tool that answers those questions immediately."
msgstr ""
"Certains utilisateurs de Python développent un intérêt profond des "
"performances de différentes approches d'un même problème. Python propose un "
"outil de mesure répondant simplement à ces questions."

#: ../Doc/tutorial/stdlib.rst:246
msgid ""
"For example, it may be tempting to use the tuple packing and unpacking "
"feature instead of the traditional approach to swapping arguments. The :mod:"
"`timeit` module quickly demonstrates a modest performance advantage::"
msgstr ""
"Par exemple, pour échanger deux variables, il peut être tentant d'utiliser "
"l'empaquetage et le dépaquetage de tuples plutôt que la méthode "
"traditionnelle. Le module :mod:`timeit` montre simplement laquelle est la "
"plus efficace : ::"

#: ../Doc/tutorial/stdlib.rst:256
msgid ""
"In contrast to :mod:`timeit`'s fine level of granularity, the :mod:`profile` "
"and :mod:`pstats` modules provide tools for identifying time critical "
"sections in larger blocks of code."
msgstr ""
"En opposition à :mod:`timeit` et sa granularité fine, :mod:`profile` et :mod:"
"`pstats` fournissent des outils permettant d'identifier les parties les plus "
"gourmandes en temps d'exécution dans des volumes de code plus grands."

#: ../Doc/tutorial/stdlib.rst:264
msgid "Quality Control"
msgstr "Contrôle Qualité"

#: ../Doc/tutorial/stdlib.rst:266
msgid ""
"One approach for developing high quality software is to write tests for each "
"function as it is developed and to run those tests frequently during the "
"development process."
msgstr ""
"Une approche possible pour développer des application de très bonne qualité "
"est d'écrire des tests pour chaque fonction au fur et à mesure de son "
"développement, et d'exécuter ces tests fréquemment lors du processus de "
"développement."

#: ../Doc/tutorial/stdlib.rst:270
msgid ""
"The :mod:`doctest` module provides a tool for scanning a module and "
"validating tests embedded in a program's docstrings.  Test construction is "
"as simple as cutting-and-pasting a typical call along with its results into "
"the docstring. This improves the documentation by providing the user with an "
"example and it allows the doctest module to make sure the code remains true "
"to the documentation::"
msgstr ""
"Le module :mod:`doctest` permet de chercher des tests dans les chaînes de "
"documentation. Un tests ressemble à un simple copié-collé d'un appel et son "
"résultat depuis le mode interactif. Cela améliore la documentation en "
"fournissant des exemples tout en prouvant qu'ils sont justes : ::"

#: ../Doc/tutorial/stdlib.rst:288
msgid ""
"The :mod:`unittest` module is not as effortless as the :mod:`doctest` "
"module, but it allows a more comprehensive set of tests to be maintained in "
"a separate file::"
msgstr ""
"Le module :mod:`unittest` est plus lourd que le module :mod:`doctest`, mais "
"il permet de construire un jeu de tests plus complet, maintenable, et "
"compréhensible dans un fichier séparé : ::"

#: ../Doc/tutorial/stdlib.rst:310
msgid "Batteries Included"
msgstr "Piles Fournies"

#: ../Doc/tutorial/stdlib.rst:312
msgid ""
"Python has a \"batteries included\" philosophy.  This is best seen through "
"the sophisticated and robust capabilities of its larger packages. For "
"example:"
msgstr ""
"Python respecte la philosophie \"piles fournies\". C'est plus évident en "
"regardant les capacités sophistiquées et solides de ses plus gros paquets. "
"Par exemple:"

#: ../Doc/tutorial/stdlib.rst:315
msgid ""
"The :mod:`xmlrpc.client` and :mod:`xmlrpc.server` modules make implementing "
"remote procedure calls into an almost trivial task.  Despite the modules "
"names, no direct knowledge or handling of XML is needed."
msgstr ""
"Les modules :mod:`xmlrpc.client` et :mod:`xmlrpc.server` permettent "
"d'appeler des fonctions à distance quasiment sans effort. En dépit du nom "
"des modules, aucune connaissance du XML n'est nécessaire."

#: ../Doc/tutorial/stdlib.rst:319
msgid ""
"The :mod:`email` package is a library for managing email messages, including "
"MIME and other RFC 2822-based message documents. Unlike :mod:`smtplib` and :"
"mod:`poplib` which actually send and receive messages, the email package has "
"a complete toolset for building or decoding complex message structures "
"(including attachments) and for implementing internet encoding and header "
"protocols."
msgstr ""
"Le paquet :mod:`email` est une bibliothèque pour gérer les messages "
"electroniques, incluant les MIME et autre encodages basés sur la RFC 2822. "
"Contrairement à :mod:`smtplib` et :mod:`poplib`, qui envoient et reçoivent "
"des messages, le paquet email est une boite à outils pour construire, lire "
"des structures de messages complexes (comprenant des pièces jointes), ou "
"implémenter des encodages et protocoles."

#: ../Doc/tutorial/stdlib.rst:326
msgid ""
"The :mod:`json` package provides robust support for parsing this popular "
"data interchange format.  The :mod:`csv` module supports direct reading and "
"writing of files in Comma-Separated Value format, commonly supported by "
"databases and spreadsheets.  XML processing is supported by the :mod:`xml."
"etree.ElementTree`, :mod:`xml.dom` and :mod:`xml.sax` packages. Together, "
"these modules and packages greatly simplify data interchange between Python "
"applications and other tools."
msgstr ""
"Le paquet :mod:`json` permet de lire et d'écrire du JSON, format d'encodage "
"de donnée répandu. Le module :mod:`csv` gère la lecture et l'écriture de "
"données stockés sous forme de valeurs séparés par des virgules dans des "
"fichiers (Coma-Separated Values), typique des base de donnée et feuiles de "
"calculs. Pour la lecture du XML, utilisez les paquet :mod:`xml.etree."
"ElementTree`, :mod:`xml.dom` et :mod:`xml.sax`. Réunis, ces modules et "
"paquets simplifient grandement l'échange de données entre les applications "
"Python et les autres outils."

#: ../Doc/tutorial/stdlib.rst:335
msgid ""
"The :mod:`sqlite3` module is a wrapper for the SQLite database library, "
"providing a persistent database that can be updated and accessed using "
"slightly nonstandard SQL syntax."
msgstr ""
"Le module :mod:`sqlite3` est une abstraction de la bibliothèque SQLite, "
"permettant de manipuler une base de donnée persistante, accédée et manipulée "
"en utilisant une syntaxe  SQL quasi standard."

#: ../Doc/tutorial/stdlib.rst:339
msgid ""
"Internationalization is supported by a number of modules including :mod:"
"`gettext`, :mod:`locale`, and the :mod:`codecs` package."
msgstr ""
"L'internationalisation est possible grâce à moulte paquets, comme :mod:"
"`gettext`, :mod:`locale`, ou :mod:`codecs`."
