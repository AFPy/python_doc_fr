# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:40+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/whatsnew/changelog.rst:5
msgid "Changelog"
msgstr "Changements"

#: ../../../Misc/NEWS:5
msgid "Python 3.6.0 beta 3"
msgstr ""

#: ../../../Misc/NEWS:7
msgid "*Release date: XXXX-XX-XX*"
msgstr ""

#: ../../../Misc/NEWS:10 ../../../Misc/NEWS:72 ../../../Misc/NEWS:337
#: ../../../Misc/NEWS:836 ../../../Misc/NEWS:1073 ../../../Misc/NEWS:1281
#: ../../../Misc/NEWS:1576 ../../../Misc/NEWS:2861 ../../../Misc/NEWS:2879
#: ../../../Misc/NEWS:3396 ../../../Misc/NEWS:3431 ../../../Misc/NEWS:3459
#: ../../../Misc/NEWS:3550 ../../../Misc/NEWS:3633 ../../../Misc/NEWS:3738
#: ../../../Misc/NEWS:3780 ../../../Misc/NEWS:4056 ../../../Misc/NEWS:4287
#: ../../../Misc/NEWS:4473 ../../../Misc/NEWS:4613 ../../../Misc/NEWS:6452
#: ../../../Misc/NEWS:6489 ../../../Misc/NEWS:6568 ../../../Misc/NEWS:6831
#: ../../../Misc/NEWS:7071 ../../../Misc/NEWS:7447 ../../../Misc/NEWS:7921
#: ../../../Misc/NEWS:8151 ../../../Misc/NEWS:8272 ../../../Misc/NEWS:8541
msgid "Core and Builtins"
msgstr ""

#: ../../../Misc/NEWS:12
msgid ""
"`Issue #28214 <https://bugs.python.org/28214>`__: Improved exception "
"reporting for problematic __set_name__ attributes."
msgstr ""
"`Issue #28214 <https://bugs.python.org/28214>`__: Improved exception "
"reporting for problematic __set_name__ attributes."

#: ../../../Misc/NEWS:15
msgid ""
"`Issue #23782 <https://bugs.python.org/23782>`__: Fixed possible memory leak "
"in _PyTraceback_Add() and exception loss in PyTraceBack_Here()."
msgstr ""
"`Issue #23782 <https://bugs.python.org/23782>`__: Fixed possible memory leak "
"in _PyTraceback_Add() and exception loss in PyTraceBack_Here()."

#: ../../../Misc/NEWS:18
msgid ""
"`Issue #28471 <https://bugs.python.org/28471>`__: Fix \"Python memory "
"allocator called without holding the GIL\" crash in socket.setblocking."
msgstr ""
"`Issue #28471 <https://bugs.python.org/28471>`__: Fix \"Python memory "
"allocator called without holding the GIL\" crash in socket.setblocking."

#: ../../../Misc/NEWS:23 ../../../Misc/NEWS:141 ../../../Misc/NEWS:472
#: ../../../Misc/NEWS:881 ../../../Misc/NEWS:1090 ../../../Misc/NEWS:1321
#: ../../../Misc/NEWS:1860 ../../../Misc/NEWS:2945 ../../../Misc/NEWS:3379
#: ../../../Misc/NEWS:3406 ../../../Misc/NEWS:3444 ../../../Misc/NEWS:3464
#: ../../../Misc/NEWS:3571 ../../../Misc/NEWS:3660 ../../../Misc/NEWS:3756
#: ../../../Misc/NEWS:3833 ../../../Misc/NEWS:4088 ../../../Misc/NEWS:4307
#: ../../../Misc/NEWS:4480 ../../../Misc/NEWS:4840 ../../../Misc/NEWS:6435
#: ../../../Misc/NEWS:6458 ../../../Misc/NEWS:6505 ../../../Misc/NEWS:6595
#: ../../../Misc/NEWS:6852 ../../../Misc/NEWS:7116 ../../../Misc/NEWS:7508
#: ../../../Misc/NEWS:7973 ../../../Misc/NEWS:8159 ../../../Misc/NEWS:8318
#: ../../../Misc/NEWS:8958
msgid "Library"
msgstr "Biblioth√®que"

#: ../../../Misc/NEWS:25
msgid ""
"`Issue #18219 <https://bugs.python.org/18219>`__: Optimize csv.DictWriter "
"for large number of columns. Patch by Mariatta Wijaya."
msgstr ""
"`Issue #18219 <https://bugs.python.org/18219>`__: Optimize csv.DictWriter "
"for large number of columns. Patch by Mariatta Wijaya."

#: ../../../Misc/NEWS:28
msgid ""
"`Issue #28448 <https://bugs.python.org/28448>`__: Fix C implemented asyncio."
"Future didn't work on Windows."
msgstr ""
"`Issue #28448 <https://bugs.python.org/28448>`__: Fix C implemented asyncio."
"Future didn't work on Windows."

#: ../../../Misc/NEWS:30
msgid ""
"`Issue #28480 <https://bugs.python.org/28480>`__: Fix error building socket "
"module when multithreading is disabled."
msgstr ""
"`Issue #28480 <https://bugs.python.org/28480>`__: Fix error building socket "
"module when multithreading is disabled."

#: ../../../Misc/NEWS:33
msgid ""
"`Issue #24452 <https://bugs.python.org/24452>`__: Make webbrowser support "
"Chrome on Mac OS X."
msgstr ""
"`Issue #24452 <https://bugs.python.org/24452>`__: Make webbrowser support "
"Chrome on Mac OS X."

#: ../../../Misc/NEWS:35
msgid ""
"`Issue #20766 <https://bugs.python.org/20766>`__: Fix references leaked by "
"pdb in the handling of SIGINT handlers."
msgstr ""
"`Issue #20766 <https://bugs.python.org/20766>`__: Fix references leaked by "
"pdb in the handling of SIGINT handlers."

#: ../../../Misc/NEWS:38
msgid ""
"`Issue #28492 <https://bugs.python.org/28492>`__: Fix how StopIteration "
"exception is raised in _asyncio.Future."
msgstr ""
"`Issue #28492 <https://bugs.python.org/28492>`__: Fix how StopIteration "
"exception is raised in _asyncio.Future."

#: ../../../Misc/NEWS:40
msgid ""
"`Issue #28500 <https://bugs.python.org/28500>`__: Fix asyncio to handle "
"async gens GC from another thread."
msgstr ""
"`Issue #28500 <https://bugs.python.org/28500>`__: Fix asyncio to handle "
"async gens GC from another thread."

#: ../../../Misc/NEWS:42
msgid ""
"`Issue #26923 <https://bugs.python.org/26923>`__: Fix asyncio.Gather to "
"refuse being cancelled once all children are done. Patch by Johannes Ebke."
msgstr ""
"`Issue #26923 <https://bugs.python.org/26923>`__: Fix asyncio.Gather to "
"refuse being cancelled once all children are done. Patch by Johannes Ebke."

#: ../../../Misc/NEWS:46
msgid ""
"`Issue #26796 <https://bugs.python.org/26796>`__: Don't configure the number "
"of workers for default threadpool executor. Initial patch by Hans Lawrenz."
msgstr ""
"`Issue #26796 <https://bugs.python.org/26796>`__: Don't configure the number "
"of workers for default threadpool executor. Initial patch by Hans Lawrenz."

#: ../../../Misc/NEWS:51 ../../../Misc/NEWS:315 ../../../Misc/NEWS:759
#: ../../../Misc/NEWS:1045 ../../../Misc/NEWS:1229 ../../../Misc/NEWS:1541
#: ../../../Misc/NEWS:2741 ../../../Misc/NEWS:3307 ../../../Misc/NEWS:3367
#: ../../../Misc/NEWS:3384 ../../../Misc/NEWS:3622 ../../../Misc/NEWS:3726
#: ../../../Misc/NEWS:4236 ../../../Misc/NEWS:4448 ../../../Misc/NEWS:4584
#: ../../../Misc/NEWS:6108 ../../../Misc/NEWS:6465 ../../../Misc/NEWS:6550
#: ../../../Misc/NEWS:6803 ../../../Misc/NEWS:7059 ../../../Misc/NEWS:7397
#: ../../../Misc/NEWS:7853 ../../../Misc/NEWS:8127 ../../../Misc/NEWS:8253
#: ../../../Misc/NEWS:8518 ../../../Misc/NEWS:10431
msgid "Build"
msgstr "Build"

#: ../../../Misc/NEWS:53
msgid ""
"`Issue #28208 <https://bugs.python.org/28208>`__: Update Windows build to "
"use SQLite 3.14.2.0."
msgstr ""
"`Issue #28208 <https://bugs.python.org/28208>`__: Update Windows build to "
"use SQLite 3.14.2.0."

#: ../../../Misc/NEWS:55
msgid ""
"`Issue #28248 <https://bugs.python.org/28248>`__: Update Windows build to "
"use OpenSSL 1.0.2j."
msgstr ""
"`Issue #28248 <https://bugs.python.org/28248>`__: Update Windows build to "
"use OpenSSL 1.0.2j."

#: ../../../Misc/NEWS:58 ../../../Misc/NEWS:326 ../../../Misc/NEWS:745
#: ../../../Misc/NEWS:1018 ../../../Misc/NEWS:1269 ../../../Misc/NEWS:1524
#: ../../../Misc/NEWS:2698 ../../../Misc/NEWS:3294 ../../../Misc/NEWS:3537
#: ../../../Misc/NEWS:3710 ../../../Misc/NEWS:4018 ../../../Misc/NEWS:4244
#: ../../../Misc/NEWS:4453 ../../../Misc/NEWS:6257 ../../../Misc/NEWS:6759
#: ../../../Misc/NEWS:6958 ../../../Misc/NEWS:7361 ../../../Misc/NEWS:7821
#: ../../../Misc/NEWS:8108 ../../../Misc/NEWS:8232 ../../../Misc/NEWS:8485
#: ../../../Misc/NEWS:10210
msgid "Tests"
msgstr "Tests"

#: ../../../Misc/NEWS:60
msgid ""
"`Issue #26944 <https://bugs.python.org/26944>`__: Fix test_posix for Android "
"where 'id -G' is entirely wrong or missing the effective gid."
msgstr ""
"`Issue #26944 <https://bugs.python.org/26944>`__: Fix test_posix for Android "
"where 'id -G' is entirely wrong or missing the effective gid."

#: ../../../Misc/NEWS:63
msgid ""
"`Issue #28409 <https://bugs.python.org/28409>`__: regrtest: fix the parser "
"of command line arguments."
msgstr ""
"`Issue #28409 <https://bugs.python.org/28409>`__: regrtest: fix the parser "
"of command line arguments."

#: ../../../Misc/NEWS:67
msgid "Python 3.6.0 beta 2"
msgstr ""

#: ../../../Misc/NEWS:69
msgid "*Release date: 2016-10-10*"
msgstr ""

#: ../../../Misc/NEWS:74
msgid ""
"`Issue #28183 <https://bugs.python.org/28183>`__: Optimize and cleanup dict "
"iteration."
msgstr ""
"`Issue #28183 <https://bugs.python.org/28183>`__: Optimize and cleanup dict "
"iteration."

#: ../../../Misc/NEWS:76
msgid ""
"`Issue #26081 <https://bugs.python.org/26081>`__: Added C implementation of "
"asyncio.Future. Original patch by Yury Selivanov."
msgstr ""
"`Issue #26081 <https://bugs.python.org/26081>`__: Added C implementation of "
"asyncio.Future. Original patch by Yury Selivanov."

#: ../../../Misc/NEWS:79
msgid ""
"`Issue #28379 <https://bugs.python.org/28379>`__: Added sanity checks and "
"tests for PyUnicode_CopyCharacters(). Patch by Xiang Zhang."
msgstr ""
"`Issue #28379 <https://bugs.python.org/28379>`__: Added sanity checks and "
"tests for PyUnicode_CopyCharacters(). Patch by Xiang Zhang."

#: ../../../Misc/NEWS:82
msgid ""
"`Issue #28376 <https://bugs.python.org/28376>`__: The type of long range "
"iterator is now registered as Iterator. Patch by Oren Milman."
msgstr ""
"`Issue #28376 <https://bugs.python.org/28376>`__: The type of long range "
"iterator is now registered as Iterator. Patch by Oren Milman."

#: ../../../Misc/NEWS:85
msgid ""
"`Issue #28376 <https://bugs.python.org/28376>`__: Creating instances of "
"range_iterator by calling range_iterator type now is deprecated.  Patch by "
"Oren Milman."
msgstr ""
"`Issue #28376 <https://bugs.python.org/28376>`__: Creating instances of "
"range_iterator by calling range_iterator type now is deprecated.  Patch by "
"Oren Milman."

#: ../../../Misc/NEWS:88
msgid ""
"`Issue #28376 <https://bugs.python.org/28376>`__: The constructor of "
"range_iterator now checks that step is not 0. Patch by Oren Milman."
msgstr ""
"`Issue #28376 <https://bugs.python.org/28376>`__: The constructor of "
"range_iterator now checks that step is not 0. Patch by Oren Milman."

#: ../../../Misc/NEWS:91
msgid ""
"`Issue #26906 <https://bugs.python.org/26906>`__: Resolving special methods "
"of uninitialized type now causes implicit initialization of the type instead "
"of a fail."
msgstr ""
"`Issue #26906 <https://bugs.python.org/26906>`__: Resolving special methods "
"of uninitialized type now causes implicit initialization of the type instead "
"of a fail."

#: ../../../Misc/NEWS:94
msgid ""
"`Issue #18287 <https://bugs.python.org/18287>`__: PyType_Ready() now checks "
"that tp_name is not NULL. Original patch by Niklas Koep."
msgstr ""
"`Issue #18287 <https://bugs.python.org/18287>`__: PyType_Ready() now checks "
"that tp_name is not NULL. Original patch by Niklas Koep."

#: ../../../Misc/NEWS:97
msgid ""
"`Issue #24098 <https://bugs.python.org/24098>`__: Fixed possible crash when "
"AST is changed in process of compiling it."
msgstr ""
"`Issue #24098 <https://bugs.python.org/24098>`__: Fixed possible crash when "
"AST is changed in process of compiling it."

#: ../../../Misc/NEWS:100
msgid ""
"`Issue #28201 <https://bugs.python.org/28201>`__: Dict reduces possibility "
"of 2nd conflict in hash table when hashes have same lower bits."
msgstr ""
"`Issue #28201 <https://bugs.python.org/28201>`__: Dict reduces possibility "
"of 2nd conflict in hash table when hashes have same lower bits."

#: ../../../Misc/NEWS:103
msgid ""
"`Issue #28350 <https://bugs.python.org/28350>`__: String constants with null "
"character no longer interned."
msgstr ""
"`Issue #28350 <https://bugs.python.org/28350>`__: String constants with null "
"character no longer interned."

#: ../../../Misc/NEWS:105
msgid ""
"`Issue #26617 <https://bugs.python.org/26617>`__: Fix crash when GC runs "
"during weakref callbacks."
msgstr ""
"`Issue #26617 <https://bugs.python.org/26617>`__: Fix crash when GC runs "
"during weakref callbacks."

#: ../../../Misc/NEWS:107
msgid ""
"`Issue #27942 <https://bugs.python.org/27942>`__: String constants now "
"interned recursively in tuples and frozensets."
msgstr ""
"`Issue #27942 <https://bugs.python.org/27942>`__: String constants now "
"interned recursively in tuples and frozensets."

#: ../../../Misc/NEWS:109
msgid ""
"`Issue #21578 <https://bugs.python.org/21578>`__: Fixed misleading error "
"message when ImportError called with invalid keyword args."
msgstr ""
"`Issue #21578 <https://bugs.python.org/21578>`__: Fixed misleading error "
"message when ImportError called with invalid keyword args."

#: ../../../Misc/NEWS:112
msgid ""
"`Issue #28203 <https://bugs.python.org/28203>`__: Fix incorrect type in "
"complex(1.0, {2:3}) error message. Patch by Soumya Sharma."
msgstr ""
"`Issue #28203 <https://bugs.python.org/28203>`__: Fix incorrect type in "
"complex(1.0, {2:3}) error message. Patch by Soumya Sharma."

#: ../../../Misc/NEWS:115
msgid ""
"`Issue #28086 <https://bugs.python.org/28086>`__: Single var-positional "
"argument of tuple subtype was passed unscathed to the C-defined function.  "
"Now it is converted to exact tuple."
msgstr ""
"`Issue #28086 <https://bugs.python.org/28086>`__: Single var-positional "
"argument of tuple subtype was passed unscathed to the C-defined function.  "
"Now it is converted to exact tuple."

#: ../../../Misc/NEWS:118
msgid ""
"`Issue #28214 <https://bugs.python.org/28214>`__: Now __set_name__ is looked "
"up on the class instead of the instance."
msgstr ""
"`Issue #28214 <https://bugs.python.org/28214>`__: Now __set_name__ is looked "
"up on the class instead of the instance."

#: ../../../Misc/NEWS:121
msgid ""
"`Issue #27955 <https://bugs.python.org/27955>`__: Fallback on reading /dev/"
"urandom device when the getrandom() syscall fails with EPERM, for example "
"when blocked by SECCOMP."
msgstr ""
"`Issue #27955 <https://bugs.python.org/27955>`__: Fallback on reading /dev/"
"urandom device when the getrandom() syscall fails with EPERM, for example "
"when blocked by SECCOMP."

#: ../../../Misc/NEWS:124
msgid ""
"`Issue #28192 <https://bugs.python.org/28192>`__: Don't import readline in "
"isolated mode."
msgstr ""
"`Issue #28192 <https://bugs.python.org/28192>`__: Don't import readline in "
"isolated mode."

#: ../../../Misc/NEWS:126
msgid "Upgrade internal unicode databases to Unicode version 9.0.0."
msgstr ""

#: ../../../Misc/NEWS:128
msgid ""
"`Issue #28131 <https://bugs.python.org/28131>`__: Fix a regression in "
"zipimport's compile_source().  zipimport should use the same optimization "
"level as the interpreter."
msgstr ""
"`Issue #28131 <https://bugs.python.org/28131>`__: Fix a regression in "
"zipimport's compile_source().  zipimport should use the same optimization "
"level as the interpreter."

#: ../../../Misc/NEWS:131
msgid ""
"`Issue #28126 <https://bugs.python.org/28126>`__: Replace Py_MEMCPY with "
"memcpy(). Visual Studio can properly optimize memcpy()."
msgstr ""
"`Issue #28126 <https://bugs.python.org/28126>`__: Replace Py_MEMCPY with "
"memcpy(). Visual Studio can properly optimize memcpy()."

#: ../../../Misc/NEWS:134
msgid ""
"`Issue #28120 <https://bugs.python.org/28120>`__: Fix dict.pop() for "
"splitted dictionary when trying to remove a \"pending key\" (Not yet "
"inserted in split-table). Patch by Xiang Zhang."
msgstr ""
"`Issue #28120 <https://bugs.python.org/28120>`__: Fix dict.pop() for "
"splitted dictionary when trying to remove a \"pending key\" (Not yet "
"inserted in split-table). Patch by Xiang Zhang."

#: ../../../Misc/NEWS:137
msgid ""
"`Issue #26182 <https://bugs.python.org/26182>`__: Raise DeprecationWarning "
"when async and await keywords are used as variable/attribute/class/function "
"name."
msgstr ""
"`Issue #26182 <https://bugs.python.org/26182>`__: Raise DeprecationWarning "
"when async and await keywords are used as variable/attribute/class/function "
"name."

#: ../../../Misc/NEWS:143
msgid ""
"`Issue #27998 <https://bugs.python.org/27998>`__: Fixed bytes path support "
"in os.scandir() on Windows. Patch by Eryk Sun."
msgstr ""
"`Issue #27998 <https://bugs.python.org/27998>`__: Fixed bytes path support "
"in os.scandir() on Windows. Patch by Eryk Sun."

#: ../../../Misc/NEWS:146
msgid ""
"`Issue #28317 <https://bugs.python.org/28317>`__: The disassembler now "
"decodes FORMAT_VALUE argument."
msgstr ""
"`Issue #28317 <https://bugs.python.org/28317>`__: The disassembler now "
"decodes FORMAT_VALUE argument."

#: ../../../Misc/NEWS:148
msgid ""
"`Issue #26293 <https://bugs.python.org/26293>`__: Fixed writing ZIP files "
"that starts not from the start of the file.  Offsets in ZIP file now are "
"relative to the start of the archive in conforming to the specification."
msgstr ""
"`Issue #26293 <https://bugs.python.org/26293>`__: Fixed writing ZIP files "
"that starts not from the start of the file.  Offsets in ZIP file now are "
"relative to the start of the archive in conforming to the specification."

#: ../../../Misc/NEWS:152
msgid ""
"`Issue #28380 <https://bugs.python.org/28380>`__: unittest.mock Mock "
"autospec functions now properly support assert_called, assert_not_called, "
"and assert_called_once."
msgstr ""
"`Issue #28380 <https://bugs.python.org/28380>`__: unittest.mock Mock "
"autospec functions now properly support assert_called, assert_not_called, "
"and assert_called_once."

#: ../../../Misc/NEWS:155
msgid ""
"`Issue #27181 <https://bugs.python.org/27181>`__ remove statistics."
"geometric_mean and defer until 3.7."
msgstr ""
"`Issue #27181 <https://bugs.python.org/27181>`__ remove statistics."
"geometric_mean and defer until 3.7."

#: ../../../Misc/NEWS:157
msgid ""
"`Issue #28229 <https://bugs.python.org/28229>`__: lzma module now supports "
"pathlib."
msgstr ""
"`Issue #28229 <https://bugs.python.org/28229>`__: lzma module now supports "
"pathlib."

#: ../../../Misc/NEWS:159
msgid ""
"`Issue #28321 <https://bugs.python.org/28321>`__: Fixed writing non-BMP "
"characters with binary format in plistlib."
msgstr ""
"`Issue #28321 <https://bugs.python.org/28321>`__: Fixed writing non-BMP "
"characters with binary format in plistlib."

#: ../../../Misc/NEWS:161
msgid ""
"`Issue #28225 <https://bugs.python.org/28225>`__: bz2 module now supports "
"pathlib.  Initial patch by Ethan Furman."
msgstr ""
"`Issue #28225 <https://bugs.python.org/28225>`__: bz2 module now supports "
"pathlib.  Initial patch by Ethan Furman."

#: ../../../Misc/NEWS:163
msgid ""
"`Issue #28227 <https://bugs.python.org/28227>`__: gzip now supports "
"pathlib.  Patch by Ethan Furman."
msgstr ""
"`Issue #28227 <https://bugs.python.org/28227>`__: gzip now supports "
"pathlib.  Patch by Ethan Furman."

#: ../../../Misc/NEWS:165
msgid ""
"`Issue #27358 <https://bugs.python.org/27358>`__: Optimized merging var-"
"keyword arguments and improved error message when pass a non-mapping as a "
"var-keyword argument."
msgstr ""
"`Issue #27358 <https://bugs.python.org/27358>`__: Optimized merging var-"
"keyword arguments and improved error message when pass a non-mapping as a "
"var-keyword argument."

#: ../../../Misc/NEWS:168
msgid ""
"`Issue #28257 <https://bugs.python.org/28257>`__: Improved error message "
"when pass a non-iterable as a var-positional argument.  Added opcode "
"BUILD_TUPLE_UNPACK_WITH_CALL."
msgstr ""
"`Issue #28257 <https://bugs.python.org/28257>`__: Improved error message "
"when pass a non-iterable as a var-positional argument.  Added opcode "
"BUILD_TUPLE_UNPACK_WITH_CALL."

#: ../../../Misc/NEWS:171
msgid ""
"`Issue #28322 <https://bugs.python.org/28322>`__: Fixed possible crashes "
"when unpickle itertools objects from incorrect pickle data.  Based on patch "
"by John Leitch."
msgstr ""
"`Issue #28322 <https://bugs.python.org/28322>`__: Fixed possible crashes "
"when unpickle itertools objects from incorrect pickle data.  Based on patch "
"by John Leitch."

#: ../../../Misc/NEWS:174
msgid ""
"`Issue #28228 <https://bugs.python.org/28228>`__: imghdr now supports "
"pathlib."
msgstr ""
"`Issue #28228 <https://bugs.python.org/28228>`__: imghdr now supports "
"pathlib."

#: ../../../Misc/NEWS:176
msgid ""
"`Issue #28226 <https://bugs.python.org/28226>`__: compileall now supports "
"pathlib."
msgstr ""
"`Issue #28226 <https://bugs.python.org/28226>`__: compileall now supports "
"pathlib."

#: ../../../Misc/NEWS:178
msgid ""
"`Issue #28314 <https://bugs.python.org/28314>`__: Fix function declaration "
"(C flags) for the getiterator() method of xml.etree.ElementTree.Element."
msgstr ""
"`Issue #28314 <https://bugs.python.org/28314>`__: Fix function declaration "
"(C flags) for the getiterator() method of xml.etree.ElementTree.Element."

#: ../../../Misc/NEWS:181
msgid ""
"`Issue #28148 <https://bugs.python.org/28148>`__: Stop using localtime() and "
"gmtime() in the time module."
msgstr ""
"`Issue #28148 <https://bugs.python.org/28148>`__: Stop using localtime() and "
"gmtime() in the time module."

#: ../../../Misc/NEWS:184
msgid ""
"Introduced platform independent _PyTime_localtime API that is similar to "
"POSIX localtime_r, but available on all platforms.  Patch by Ed Schouten."
msgstr ""

#: ../../../Misc/NEWS:188
msgid ""
"`Issue #28253 <https://bugs.python.org/28253>`__: Fixed calendar functions "
"for extreme months: 0001-01 and 9999-12."
msgstr ""
"`Issue #28253 <https://bugs.python.org/28253>`__: Fixed calendar functions "
"for extreme months: 0001-01 and 9999-12."

#: ../../../Misc/NEWS:191
msgid ""
"Methods itermonthdays() and itermonthdays2() are reimplemented so that they "
"don't call itermonthdates() which can cause datetime.date under/overflow."
msgstr ""

#: ../../../Misc/NEWS:195
msgid ""
"`Issue #28275 <https://bugs.python.org/28275>`__: Fixed possible use after "
"free in the decompress() methods of the LZMADecompressor and BZ2Decompressor "
"classes. Original patch by John Leitch."
msgstr ""
"`Issue #28275 <https://bugs.python.org/28275>`__: Fixed possible use after "
"free in the decompress() methods of the LZMADecompressor and BZ2Decompressor "
"classes. Original patch by John Leitch."

#: ../../../Misc/NEWS:199
msgid ""
"`Issue #27897 <https://bugs.python.org/27897>`__: Fixed possible crash in "
"sqlite3.Connection.create_collation() if pass invalid string-like object as "
"a name.  Patch by Xiang Zhang."
msgstr ""
"`Issue #27897 <https://bugs.python.org/27897>`__: Fixed possible crash in "
"sqlite3.Connection.create_collation() if pass invalid string-like object as "
"a name.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:202
msgid ""
"`Issue #18844 <https://bugs.python.org/18844>`__: random.choices() now has k "
"as a keyword-only argument to improve the readability of common cases and "
"the come into line with the signature used in other languages."
msgstr ""
"`Issue #18844 <https://bugs.python.org/18844>`__: random.choices() now has k "
"as a keyword-only argument to improve the readability of common cases and "
"the come into line with the signature used in other languages."

#: ../../../Misc/NEWS:206
msgid ""
"`Issue #18893 <https://bugs.python.org/18893>`__: Fix invalid exception "
"handling in Lib/ctypes/macholib/dyld.py. Patch by Madison May."
msgstr ""
"`Issue #18893 <https://bugs.python.org/18893>`__: Fix invalid exception "
"handling in Lib/ctypes/macholib/dyld.py. Patch by Madison May."

#: ../../../Misc/NEWS:209
msgid ""
"`Issue #27611 <https://bugs.python.org/27611>`__: Fixed support of default "
"root window in the tkinter.tix module. Added the master parameter in the "
"DisplayStyle constructor."
msgstr ""
"`Issue #27611 <https://bugs.python.org/27611>`__: Fixed support of default "
"root window in the tkinter.tix module. Added the master parameter in the "
"DisplayStyle constructor."

#: ../../../Misc/NEWS:212
msgid ""
"`Issue #27348 <https://bugs.python.org/27348>`__: In the traceback module, "
"restore the formatting of exception messages like \"Exception: None\".  This "
"fixes a regression introduced in 3.5a2."
msgstr ""
"`Issue #27348 <https://bugs.python.org/27348>`__: In the traceback module, "
"restore the formatting of exception messages like \"Exception: None\".  This "
"fixes a regression introduced in 3.5a2."

#: ../../../Misc/NEWS:216
msgid ""
"`Issue #25651 <https://bugs.python.org/25651>`__: Allow falsy values to be "
"used for msg parameter of subTest()."
msgstr ""
"`Issue #25651 <https://bugs.python.org/25651>`__: Allow falsy values to be "
"used for msg parameter of subTest()."

#: ../../../Misc/NEWS:218
msgid ""
"`Issue #27778 <https://bugs.python.org/27778>`__: Fix a memory leak in os."
"getrandom() when the getrandom() is interrupted by a signal and a signal "
"handler raises a Python exception."
msgstr ""
"`Issue #27778 <https://bugs.python.org/27778>`__: Fix a memory leak in os."
"getrandom() when the getrandom() is interrupted by a signal and a signal "
"handler raises a Python exception."

#: ../../../Misc/NEWS:221
msgid ""
"`Issue #28200 <https://bugs.python.org/28200>`__: Fix memory leak on Windows "
"in the os module (fix path_converter() function)."
msgstr ""
"`Issue #28200 <https://bugs.python.org/28200>`__: Fix memory leak on Windows "
"in the os module (fix path_converter() function)."

#: ../../../Misc/NEWS:224
msgid ""
"`Issue #25400 <https://bugs.python.org/25400>`__: RobotFileParser now "
"correctly returns default values for crawl_delay and request_rate.  Initial "
"patch by Peter Wirtz."
msgstr ""
"`Issue #25400 <https://bugs.python.org/25400>`__: RobotFileParser now "
"correctly returns default values for crawl_delay and request_rate.  Initial "
"patch by Peter Wirtz."

#: ../../../Misc/NEWS:227
msgid ""
"`Issue #27932 <https://bugs.python.org/27932>`__: Prevent memory leak in "
"win32_ver()."
msgstr ""
"`Issue #27932 <https://bugs.python.org/27932>`__: Prevent memory leak in "
"win32_ver()."

#: ../../../Misc/NEWS:229
msgid "Fix UnboundLocalError in socket._sendfile_use_sendfile."
msgstr ""

#: ../../../Misc/NEWS:231
msgid ""
"`Issue #28075 <https://bugs.python.org/28075>`__: Check for "
"ERROR_ACCESS_DENIED in Windows implementation of os.stat().  Patch by Eryk "
"Sun."
msgstr ""
"`Issue #28075 <https://bugs.python.org/28075>`__: Check for "
"ERROR_ACCESS_DENIED in Windows implementation of os.stat().  Patch by Eryk "
"Sun."

#: ../../../Misc/NEWS:234
msgid ""
"`Issue #22493 <https://bugs.python.org/22493>`__: Warning message emitted by "
"using inline flags in the middle of regular expression now contains a "
"(truncated) regex pattern. Patch by Tim Graham."
msgstr ""
"`Issue #22493 <https://bugs.python.org/22493>`__: Warning message emitted by "
"using inline flags in the middle of regular expression now contains a "
"(truncated) regex pattern. Patch by Tim Graham."

#: ../../../Misc/NEWS:238
msgid ""
"`Issue #25270 <https://bugs.python.org/25270>`__: Prevent codecs."
"escape_encode() from raising SystemError when an empty bytestring is passed."
msgstr ""
"`Issue #25270 <https://bugs.python.org/25270>`__: Prevent codecs."
"escape_encode() from raising SystemError when an empty bytestring is passed."

#: ../../../Misc/NEWS:241
msgid ""
"`Issue #28181 <https://bugs.python.org/28181>`__: Get antigravity over "
"HTTPS. Patch by Kaartic Sivaraam."
msgstr ""
"`Issue #28181 <https://bugs.python.org/28181>`__: Get antigravity over "
"HTTPS. Patch by Kaartic Sivaraam."

#: ../../../Misc/NEWS:243
msgid ""
"`Issue #25895 <https://bugs.python.org/25895>`__: Enable WebSocket URL "
"schemes in urllib.parse.urljoin. Patch by Gergely Imreh and Markus "
"Holtermann."
msgstr ""
"`Issue #25895 <https://bugs.python.org/25895>`__: Enable WebSocket URL "
"schemes in urllib.parse.urljoin. Patch by Gergely Imreh and Markus "
"Holtermann."

#: ../../../Misc/NEWS:246
msgid ""
"`Issue #28114 <https://bugs.python.org/28114>`__: Fix a crash in "
"parse_envlist() when env contains byte strings. Patch by Eryk Sun."
msgstr ""
"`Issue #28114 <https://bugs.python.org/28114>`__: Fix a crash in "
"parse_envlist() when env contains byte strings. Patch by Eryk Sun."

#: ../../../Misc/NEWS:249
msgid ""
"`Issue #27599 <https://bugs.python.org/27599>`__: Fixed buffer overrun in "
"binascii.b2a_qp() and binascii.a2b_qp()."
msgstr ""
"`Issue #27599 <https://bugs.python.org/27599>`__: Fixed buffer overrun in "
"binascii.b2a_qp() and binascii.a2b_qp()."

#: ../../../Misc/NEWS:251
msgid ""
"`Issue #27906 <https://bugs.python.org/27906>`__: Fix socket accept "
"exhaustion during high TCP traffic. Patch by Kevin Conway."
msgstr ""
"`Issue #27906 <https://bugs.python.org/27906>`__: Fix socket accept "
"exhaustion during high TCP traffic. Patch by Kevin Conway."

#: ../../../Misc/NEWS:254
msgid ""
"`Issue #28174 <https://bugs.python.org/28174>`__: Handle when SO_REUSEPORT "
"isn't properly supported. Patch by Seth Michael Larson."
msgstr ""
"`Issue #28174 <https://bugs.python.org/28174>`__: Handle when SO_REUSEPORT "
"isn't properly supported. Patch by Seth Michael Larson."

#: ../../../Misc/NEWS:257
msgid ""
"`Issue #26654 <https://bugs.python.org/26654>`__: Inspect functools.partial "
"in asyncio.Handle.__repr__. Patch by iceboy."
msgstr ""
"`Issue #26654 <https://bugs.python.org/26654>`__: Inspect functools.partial "
"in asyncio.Handle.__repr__. Patch by iceboy."

#: ../../../Misc/NEWS:260
msgid ""
"`Issue #26909 <https://bugs.python.org/26909>`__: Fix slow pipes IO in "
"asyncio. Patch by INADA Naoki."
msgstr ""
"`Issue #26909 <https://bugs.python.org/26909>`__: Fix slow pipes IO in "
"asyncio. Patch by INADA Naoki."

#: ../../../Misc/NEWS:263
msgid ""
"`Issue #28176 <https://bugs.python.org/28176>`__: Fix callbacks race in "
"asyncio.SelectorLoop.sock_connect."
msgstr ""
"`Issue #28176 <https://bugs.python.org/28176>`__: Fix callbacks race in "
"asyncio.SelectorLoop.sock_connect."

#: ../../../Misc/NEWS:265
msgid ""
"`Issue #27759 <https://bugs.python.org/27759>`__: Fix selectors incorrectly "
"retain invalid file descriptors. Patch by Mark Williams."
msgstr ""
"`Issue #27759 <https://bugs.python.org/27759>`__: Fix selectors incorrectly "
"retain invalid file descriptors. Patch by Mark Williams."

#: ../../../Misc/NEWS:268
msgid ""
"`Issue #28368 <https://bugs.python.org/28368>`__: Refuse monitoring "
"processes if the child watcher has no loop attached. Patch by Vincent Michel."
msgstr ""
"`Issue #28368 <https://bugs.python.org/28368>`__: Refuse monitoring "
"processes if the child watcher has no loop attached. Patch by Vincent Michel."

#: ../../../Misc/NEWS:272
msgid ""
"`Issue #28369 <https://bugs.python.org/28369>`__: Raise RuntimeError when "
"transport's FD is used with add_reader, add_writer, etc."
msgstr ""
"`Issue #28369 <https://bugs.python.org/28369>`__: Raise RuntimeError when "
"transport's FD is used with add_reader, add_writer, etc."

#: ../../../Misc/NEWS:275
msgid ""
"`Issue #28370 <https://bugs.python.org/28370>`__: Speedup asyncio."
"StreamReader.readexactly. Patch by –ö–æ—Ä–µ–Ω–±–µ—Ä–≥ –ú–∞—Ä–∫."
msgstr ""
"`Issue #28370 <https://bugs.python.org/28370>`__: Speedup asyncio."
"StreamReader.readexactly. Patch by –ö–æ—Ä–µ–Ω–±–µ—Ä–≥ –ú–∞—Ä–∫."

#: ../../../Misc/NEWS:278
msgid ""
"`Issue #28371 <https://bugs.python.org/28371>`__: Deprecate passing asyncio."
"Handles to run_in_executor."
msgstr ""
"`Issue #28371 <https://bugs.python.org/28371>`__: Deprecate passing asyncio."
"Handles to run_in_executor."

#: ../../../Misc/NEWS:280
msgid ""
"`Issue #28372 <https://bugs.python.org/28372>`__: Fix asyncio to support "
"formatting of non-python coroutines."
msgstr ""
"`Issue #28372 <https://bugs.python.org/28372>`__: Fix asyncio to support "
"formatting of non-python coroutines."

#: ../../../Misc/NEWS:282
msgid ""
"`Issue #28399 <https://bugs.python.org/28399>`__: Remove UNIX socket from FS "
"before binding. Patch by –ö–æ—Ä–µ–Ω–±–µ—Ä–≥ –ú–∞—Ä–∫."
msgstr ""
"`Issue #28399 <https://bugs.python.org/28399>`__: Remove UNIX socket from FS "
"before binding. Patch by –ö–æ—Ä–µ–Ω–±–µ—Ä–≥ –ú–∞—Ä–∫."

#: ../../../Misc/NEWS:285
msgid ""
"`Issue #27972 <https://bugs.python.org/27972>`__: Prohibit Tasks to await on "
"themselves."
msgstr ""
"`Issue #27972 <https://bugs.python.org/27972>`__: Prohibit Tasks to await on "
"themselves."

#: ../../../Misc/NEWS:288 ../../../Misc/NEWS:801 ../../../Misc/NEWS:1033
#: ../../../Misc/NEWS:1534 ../../../Misc/NEWS:2804 ../../../Misc/NEWS:2867
#: ../../../Misc/NEWS:3318 ../../../Misc/NEWS:4598 ../../../Misc/NEWS:6403
#: ../../../Misc/NEWS:10724
msgid "Windows"
msgstr "Windows"

#: ../../../Misc/NEWS:290
msgid ""
"`Issue #28402 <https://bugs.python.org/28402>`__: Adds signed catalog files "
"for stdlib on Windows."
msgstr ""
"`Issue #28402 <https://bugs.python.org/28402>`__: Adds signed catalog files "
"for stdlib on Windows."

#: ../../../Misc/NEWS:292
msgid ""
"`Issue #28333 <https://bugs.python.org/28333>`__: Enables Unicode for ps1/"
"ps2 and input() prompts. (Patch by Eryk Sun)"
msgstr ""
"`Issue #28333 <https://bugs.python.org/28333>`__: Enables Unicode for ps1/"
"ps2 and input() prompts. (Patch by Eryk Sun)"

#: ../../../Misc/NEWS:295
msgid ""
"`Issue #28251 <https://bugs.python.org/28251>`__: Improvements to help "
"manuals on Windows."
msgstr ""
"`Issue #28251 <https://bugs.python.org/28251>`__: Improvements to help "
"manuals on Windows."

#: ../../../Misc/NEWS:297
msgid ""
"`Issue #28110 <https://bugs.python.org/28110>`__: launcher.msi has different "
"product codes between 32-bit and 64-bit"
msgstr ""
"`Issue #28110 <https://bugs.python.org/28110>`__: launcher.msi has different "
"product codes between 32-bit and 64-bit"

#: ../../../Misc/NEWS:300
msgid ""
"`Issue #28161 <https://bugs.python.org/28161>`__: Opening CON for write "
"access fails"
msgstr ""
"`Issue #28161 <https://bugs.python.org/28161>`__: Opening CON for write "
"access fails"

#: ../../../Misc/NEWS:302
msgid ""
"`Issue #28162 <https://bugs.python.org/28162>`__: WindowsConsoleIO readall() "
"fails if first line starts with Ctrl+Z"
msgstr ""
"`Issue #28162 <https://bugs.python.org/28162>`__: WindowsConsoleIO readall() "
"fails if first line starts with Ctrl+Z"

#: ../../../Misc/NEWS:305
msgid ""
"`Issue #28163 <https://bugs.python.org/28163>`__: WindowsConsoleIO fileno() "
"passes wrong flags to _open_osfhandle"
msgstr ""
"`Issue #28163 <https://bugs.python.org/28163>`__: WindowsConsoleIO fileno() "
"passes wrong flags to _open_osfhandle"

#: ../../../Misc/NEWS:308
msgid ""
"`Issue #28164 <https://bugs.python.org/28164>`__: _PyIO_get_console_type "
"fails for various paths"
msgstr ""
"`Issue #28164 <https://bugs.python.org/28164>`__: _PyIO_get_console_type "
"fails for various paths"

#: ../../../Misc/NEWS:310
msgid ""
"`Issue #28137 <https://bugs.python.org/28137>`__: Renames Windows path file "
"to ._pth"
msgstr ""
"`Issue #28137 <https://bugs.python.org/28137>`__: Renames Windows path file "
"to ._pth"

#: ../../../Misc/NEWS:312
msgid ""
"`Issue #28138 <https://bugs.python.org/28138>`__: Windows ._pth file should "
"allow import site"
msgstr ""
"`Issue #28138 <https://bugs.python.org/28138>`__: Windows ._pth file should "
"allow import site"

#: ../../../Misc/NEWS:317
msgid ""
"`Issue #28258 <https://bugs.python.org/28258>`__: Fixed build with Estonian "
"locale (python-config and distclean targets in Makefile).  Patch by Arfrever "
"Frehtes Taifersar Arahesis."
msgstr ""
"`Issue #28258 <https://bugs.python.org/28258>`__: Fixed build with Estonian "
"locale (python-config and distclean targets in Makefile).  Patch by Arfrever "
"Frehtes Taifersar Arahesis."

#: ../../../Misc/NEWS:320
msgid ""
"`Issue #26661 <https://bugs.python.org/26661>`__: setup.py now detects "
"system libffi with multiarch wrapper."
msgstr ""
"`Issue #26661 <https://bugs.python.org/26661>`__: setup.py now detects "
"system libffi with multiarch wrapper."

#: ../../../Misc/NEWS:322
msgid ""
"`Issue #15819 <https://bugs.python.org/15819>`__: Remove redundant include "
"search directory option for building outside the source tree."
msgstr ""
"`Issue #15819 <https://bugs.python.org/15819>`__: Remove redundant include "
"search directory option for building outside the source tree."

#: ../../../Misc/NEWS:328
msgid ""
"`Issue #28217 <https://bugs.python.org/28217>`__: Adds _testconsole module "
"to test console input."
msgstr ""
"`Issue #28217 <https://bugs.python.org/28217>`__: Adds _testconsole module "
"to test console input."

#: ../../../Misc/NEWS:332
msgid "Python 3.6.0 beta 1"
msgstr ""

#: ../../../Misc/NEWS:334
msgid "*Release date: 2016-09-12*"
msgstr ""

#: ../../../Misc/NEWS:339
msgid ""
"`Issue #23722 <https://bugs.python.org/23722>`__: The __class__ cell used by "
"zero-argument super() is now initialized from type.__new__ rather than "
"__build_class__, so class methods relying on that will now work correctly "
"when called from metaclass methods during class creation. Patch by Martin "
"Teichmann."
msgstr ""
"`Issue #23722 <https://bugs.python.org/23722>`__: The __class__ cell used by "
"zero-argument super() is now initialized from type.__new__ rather than "
"__build_class__, so class methods relying on that will now work correctly "
"when called from metaclass methods during class creation. Patch by Martin "
"Teichmann."

#: ../../../Misc/NEWS:344
msgid ""
"`Issue #25221 <https://bugs.python.org/25221>`__: Fix corrupted result from "
"PyLong_FromLong(0) when Python is compiled with NSMALLPOSINTS = 0."
msgstr ""
"`Issue #25221 <https://bugs.python.org/25221>`__: Fix corrupted result from "
"PyLong_FromLong(0) when Python is compiled with NSMALLPOSINTS = 0."

#: ../../../Misc/NEWS:347
msgid ""
"`Issue #27080 <https://bugs.python.org/27080>`__: Implement formatting "
"support for PEP 515.  Initial patch by Chris Angelico."
msgstr ""
"`Issue #27080 <https://bugs.python.org/27080>`__: Implement formatting "
"support for PEP 515.  Initial patch by Chris Angelico."

#: ../../../Misc/NEWS:350
msgid ""
"`Issue #27199 <https://bugs.python.org/27199>`__: In tarfile, expose "
"copyfileobj bufsize to improve throughput. Patch by Jason Fried."
msgstr ""
"`Issue #27199 <https://bugs.python.org/27199>`__: In tarfile, expose "
"copyfileobj bufsize to improve throughput. Patch by Jason Fried."

#: ../../../Misc/NEWS:353
msgid ""
"`Issue #27948 <https://bugs.python.org/27948>`__: In f-strings, only allow "
"backslashes inside the braces (where the expressions are).  This is a "
"breaking change from the 3.6 alpha releases, where backslashes are allowed "
"anywhere in an f-string.  Also, require that expressions inside f-strings be "
"enclosed within literal braces, and not escapes like f'\\x7b\"hi\"\\x7d'."
msgstr ""
"`Issue #27948 <https://bugs.python.org/27948>`__: In f-strings, only allow "
"backslashes inside the braces (where the expressions are).  This is a "
"breaking change from the 3.6 alpha releases, where backslashes are allowed "
"anywhere in an f-string.  Also, require that expressions inside f-strings be "
"enclosed within literal braces, and not escapes like f'\\x7b\"hi\"\\x7d'."

#: ../../../Misc/NEWS:360
msgid ""
"`Issue #28046 <https://bugs.python.org/28046>`__: Remove platform-specific "
"directories from sys.path."
msgstr ""
"`Issue #28046 <https://bugs.python.org/28046>`__: Remove platform-specific "
"directories from sys.path."

#: ../../../Misc/NEWS:362
msgid ""
"`Issue #28071 <https://bugs.python.org/28071>`__: Add early-out for "
"differencing from an empty set."
msgstr ""
"`Issue #28071 <https://bugs.python.org/28071>`__: Add early-out for "
"differencing from an empty set."

#: ../../../Misc/NEWS:364
msgid ""
"`Issue #25758 <https://bugs.python.org/25758>`__: Prevents zipimport from "
"unnecessarily encoding a filename (patch by Eryk Sun)"
msgstr ""
"`Issue #25758 <https://bugs.python.org/25758>`__: Prevents zipimport from "
"unnecessarily encoding a filename (patch by Eryk Sun)"

#: ../../../Misc/NEWS:367
msgid ""
"`Issue #25856 <https://bugs.python.org/25856>`__: The __module__ attribute "
"of extension classes and functions now is interned. This leads to more "
"compact pickle data with protocol 4."
msgstr ""
"`Issue #25856 <https://bugs.python.org/25856>`__: The __module__ attribute "
"of extension classes and functions now is interned. This leads to more "
"compact pickle data with protocol 4."

#: ../../../Misc/NEWS:370
msgid ""
"`Issue #27213 <https://bugs.python.org/27213>`__: Rework CALL_FUNCTION* "
"opcodes to produce shorter and more efficient bytecode. Patch by Demur "
"Rumed, design by Serhiy Storchaka, reviewed by Serhiy Storchaka and Victor "
"Stinner."
msgstr ""
"`Issue #27213 <https://bugs.python.org/27213>`__: Rework CALL_FUNCTION* "
"opcodes to produce shorter and more efficient bytecode. Patch by Demur "
"Rumed, design by Serhiy Storchaka, reviewed by Serhiy Storchaka and Victor "
"Stinner."

#: ../../../Misc/NEWS:374
msgid ""
"`Issue #26331 <https://bugs.python.org/26331>`__: Implement tokenizing "
"support for PEP 515. Patch by Georg Brandl."
msgstr ""
"`Issue #26331 <https://bugs.python.org/26331>`__: Implement tokenizing "
"support for PEP 515. Patch by Georg Brandl."

#: ../../../Misc/NEWS:376
msgid ""
"`Issue #27999 <https://bugs.python.org/27999>`__: Make \"global after use\" "
"a SyntaxError, and ditto for nonlocal. Patch by Ivan Levkivskyi."
msgstr ""
"`Issue #27999 <https://bugs.python.org/27999>`__: Make \"global after use\" "
"a SyntaxError, and ditto for nonlocal. Patch by Ivan Levkivskyi."

#: ../../../Misc/NEWS:379
msgid ""
"`Issue #28003 <https://bugs.python.org/28003>`__: Implement PEP 525 -- "
"Asynchronous Generators."
msgstr ""
"`Issue #28003 <https://bugs.python.org/28003>`__: Implement PEP 525 -- "
"Asynchronous Generators."

#: ../../../Misc/NEWS:381
msgid ""
"`Issue #27985 <https://bugs.python.org/27985>`__: Implement PEP 526 -- "
"Syntax for Variable Annotations. Patch by Ivan Levkivskyi."
msgstr ""
"`Issue #27985 <https://bugs.python.org/27985>`__: Implement PEP 526 -- "
"Syntax for Variable Annotations. Patch by Ivan Levkivskyi."

#: ../../../Misc/NEWS:384
msgid ""
"`Issue #26058 <https://bugs.python.org/26058>`__: Add a new private version "
"to the builtin dict type, incremented at each dictionary creation and at "
"each dictionary change. Implementation of the PEP 509."
msgstr ""
"`Issue #26058 <https://bugs.python.org/26058>`__: Add a new private version "
"to the builtin dict type, incremented at each dictionary creation and at "
"each dictionary change. Implementation of the PEP 509."

#: ../../../Misc/NEWS:388
msgid ""
"`Issue #27364 <https://bugs.python.org/27364>`__: A backslash-character pair "
"that is not a valid escape sequence now generates a DeprecationWarning.  "
"Patch by Emanuel Barry."
msgstr ""
"`Issue #27364 <https://bugs.python.org/27364>`__: A backslash-character pair "
"that is not a valid escape sequence now generates a DeprecationWarning.  "
"Patch by Emanuel Barry."

#: ../../../Misc/NEWS:391
msgid ""
"`Issue #27350 <https://bugs.python.org/27350>`__: `dict` implementation is "
"changed like PyPy. It is more compact and preserves insertion order. "
"(Concept developed by Raymond Hettinger and patch by Inada Naoki.)"
msgstr ""
"`Issue #27350 <https://bugs.python.org/27350>`__: `dict` implementation is "
"changed like PyPy. It is more compact and preserves insertion order. "
"(Concept developed by Raymond Hettinger and patch by Inada Naoki.)"

#: ../../../Misc/NEWS:395
msgid ""
"`Issue #27911 <https://bugs.python.org/27911>`__: Remove unnecessary error "
"checks in ``exec_builtin_or_dynamic()``."
msgstr ""
"`Issue #27911 <https://bugs.python.org/27911>`__: Remove unnecessary error "
"checks in ``exec_builtin_or_dynamic()``."

#: ../../../Misc/NEWS:398
msgid ""
"`Issue #27078 <https://bugs.python.org/27078>`__: Added BUILD_STRING "
"opcode.  Optimized f-strings evaluation."
msgstr ""
"`Issue #27078 <https://bugs.python.org/27078>`__: Added BUILD_STRING "
"opcode.  Optimized f-strings evaluation."

#: ../../../Misc/NEWS:400
msgid ""
"`Issue #17884 <https://bugs.python.org/17884>`__: Python now requires "
"systems with inttypes.h and stdint.h"
msgstr ""
"`Issue #17884 <https://bugs.python.org/17884>`__: Python now requires "
"systems with inttypes.h and stdint.h"

#: ../../../Misc/NEWS:402
msgid ""
"`Issue #27961 <https://bugs.python.org/27961>`__: Require platforms to "
"support ``long long``. Python hasn't compiled without ``long long`` for "
"years, so this is basically a formality."
msgstr ""
"`Issue #27961 <https://bugs.python.org/27961>`__: Require platforms to "
"support ``long long``. Python hasn't compiled without ``long long`` for "
"years, so this is basically a formality."

#: ../../../Misc/NEWS:405
msgid ""
"`Issue #27355 <https://bugs.python.org/27355>`__: Removed support for "
"Windows CE.  It was never finished, and Windows CE is no longer a relevant "
"platform for Python."
msgstr ""
"`Issue #27355 <https://bugs.python.org/27355>`__: Removed support for "
"Windows CE.  It was never finished, and Windows CE is no longer a relevant "
"platform for Python."

#: ../../../Misc/NEWS:408
msgid "Implement PEP 523."
msgstr ""

#: ../../../Misc/NEWS:410
msgid ""
"`Issue #27870 <https://bugs.python.org/27870>`__: A left shift of zero by a "
"large integer no longer attempts to allocate large amounts of memory."
msgstr ""
"`Issue #27870 <https://bugs.python.org/27870>`__: A left shift of zero by a "
"large integer no longer attempts to allocate large amounts of memory."

#: ../../../Misc/NEWS:413
msgid ""
"`Issue #25402 <https://bugs.python.org/25402>`__: In int-to-decimal-string "
"conversion, improve the estimate of the intermediate memory required, and "
"remove an unnecessarily strict overflow check. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #25402 <https://bugs.python.org/25402>`__: In int-to-decimal-string "
"conversion, improve the estimate of the intermediate memory required, and "
"remove an unnecessarily strict overflow check. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:417
msgid ""
"`Issue #27214 <https://bugs.python.org/27214>`__: In long_invert, be more "
"careful about modifying object returned by long_add, and remove an "
"unnecessary check for small longs. Thanks Oren Milman for analysis and patch."
msgstr ""
"`Issue #27214 <https://bugs.python.org/27214>`__: In long_invert, be more "
"careful about modifying object returned by long_add, and remove an "
"unnecessary check for small longs. Thanks Oren Milman for analysis and patch."

#: ../../../Misc/NEWS:421
msgid ""
"`Issue #27506 <https://bugs.python.org/27506>`__: Support passing the bytes/"
"bytearray.translate() \"delete\" argument by keyword."
msgstr ""
"`Issue #27506 <https://bugs.python.org/27506>`__: Support passing the bytes/"
"bytearray.translate() \"delete\" argument by keyword."

#: ../../../Misc/NEWS:424
msgid ""
"`Issue #27812 <https://bugs.python.org/27812>`__: Properly clear out a "
"generator's frame's backreference to the generator to prevent crashes in "
"frame.clear()."
msgstr ""
"`Issue #27812 <https://bugs.python.org/27812>`__: Properly clear out a "
"generator's frame's backreference to the generator to prevent crashes in "
"frame.clear()."

#: ../../../Misc/NEWS:427
msgid ""
"`Issue #27811 <https://bugs.python.org/27811>`__: Fix a crash when a "
"coroutine that has not been awaited is finalized with warnings-as-errors "
"enabled."
msgstr ""
"`Issue #27811 <https://bugs.python.org/27811>`__: Fix a crash when a "
"coroutine that has not been awaited is finalized with warnings-as-errors "
"enabled."

#: ../../../Misc/NEWS:430
msgid ""
"`Issue #27587 <https://bugs.python.org/27587>`__: Fix another issue found by "
"PVS-Studio: Null pointer check after use of 'def' in _PyState_AddModule(). "
"Initial patch by Christian Heimes."
msgstr ""
"`Issue #27587 <https://bugs.python.org/27587>`__: Fix another issue found by "
"PVS-Studio: Null pointer check after use of 'def' in _PyState_AddModule(). "
"Initial patch by Christian Heimes."

#: ../../../Misc/NEWS:434
msgid ""
"`Issue #27792 <https://bugs.python.org/27792>`__: The modulo operation "
"applied to ``bool`` and other ``int`` subclasses now always returns an "
"``int``. Previously the return type depended on the input values. Patch by "
"Xiang Zhang."
msgstr ""
"`Issue #27792 <https://bugs.python.org/27792>`__: The modulo operation "
"applied to ``bool`` and other ``int`` subclasses now always returns an "
"``int``. Previously the return type depended on the input values. Patch by "
"Xiang Zhang."

#: ../../../Misc/NEWS:438
msgid ""
"`Issue #26984 <https://bugs.python.org/26984>`__: int() now always returns "
"an instance of exact int."
msgstr ""
"`Issue #26984 <https://bugs.python.org/26984>`__: int() now always returns "
"an instance of exact int."

#: ../../../Misc/NEWS:440
msgid ""
"`Issue #25604 <https://bugs.python.org/25604>`__: Fix a minor bug in integer "
"true division; this bug could potentially have caused off-by-one-ulp results "
"on platforms with unreliable ldexp implementations."
msgstr ""
"`Issue #25604 <https://bugs.python.org/25604>`__: Fix a minor bug in integer "
"true division; this bug could potentially have caused off-by-one-ulp results "
"on platforms with unreliable ldexp implementations."

#: ../../../Misc/NEWS:444
msgid ""
"`Issue #24254 <https://bugs.python.org/24254>`__: Make class definition "
"namespace ordered by default."
msgstr ""
"`Issue #24254 <https://bugs.python.org/24254>`__: Make class definition "
"namespace ordered by default."

#: ../../../Misc/NEWS:446
msgid ""
"`Issue #27662 <https://bugs.python.org/27662>`__: Fix an overflow check in "
"``List_New``: the original code was checking against ``Py_SIZE_MAX`` instead "
"of the correct upper bound of ``Py_SSIZE_T_MAX``. Patch by Xiang Zhang."
msgstr ""
"`Issue #27662 <https://bugs.python.org/27662>`__: Fix an overflow check in "
"``List_New``: the original code was checking against ``Py_SIZE_MAX`` instead "
"of the correct upper bound of ``Py_SSIZE_T_MAX``. Patch by Xiang Zhang."

#: ../../../Misc/NEWS:450
msgid ""
"`Issue #27782 <https://bugs.python.org/27782>`__: Multi-phase extension "
"module import now correctly allows the ``m_methods`` field to be used to add "
"module level functions to instances of non-module types returned from "
"``Py_create_mod``. Patch by Xiang Zhang."
msgstr ""
"`Issue #27782 <https://bugs.python.org/27782>`__: Multi-phase extension "
"module import now correctly allows the ``m_methods`` field to be used to add "
"module level functions to instances of non-module types returned from "
"``Py_create_mod``. Patch by Xiang Zhang."

#: ../../../Misc/NEWS:454
msgid ""
"`Issue #27936 <https://bugs.python.org/27936>`__: The round() function "
"accepted a second None argument for some types but not for others.  Fixed "
"the inconsistency by accepting None for all numeric types."
msgstr ""
"`Issue #27936 <https://bugs.python.org/27936>`__: The round() function "
"accepted a second None argument for some types but not for others.  Fixed "
"the inconsistency by accepting None for all numeric types."

#: ../../../Misc/NEWS:458
msgid ""
"`Issue #27487 <https://bugs.python.org/27487>`__: Warn if a submodule "
"argument to \"python -m\" or runpy.run_module() is found in sys.modules "
"after parent packages are imported, but before the submodule is executed."
msgstr ""
"`Issue #27487 <https://bugs.python.org/27487>`__: Warn if a submodule "
"argument to \"python -m\" or runpy.run_module() is found in sys.modules "
"after parent packages are imported, but before the submodule is executed."

#: ../../../Misc/NEWS:462
msgid ""
"`Issue #27157 <https://bugs.python.org/27157>`__: Make only type() itself "
"accept the one-argument form. Patch by Eryk Sun and Emanuel Barry."
msgstr ""
"`Issue #27157 <https://bugs.python.org/27157>`__: Make only type() itself "
"accept the one-argument form. Patch by Eryk Sun and Emanuel Barry."

#: ../../../Misc/NEWS:465
msgid ""
"`Issue #27558 <https://bugs.python.org/27558>`__: Fix a SystemError in the "
"implementation of \"raise\" statement. In a brand new thread, raise a "
"RuntimeError since there is no active exception to reraise. Patch written by "
"Xiang Zhang."
msgstr ""
"`Issue #27558 <https://bugs.python.org/27558>`__: Fix a SystemError in the "
"implementation of \"raise\" statement. In a brand new thread, raise a "
"RuntimeError since there is no active exception to reraise. Patch written by "
"Xiang Zhang."

#: ../../../Misc/NEWS:469
msgid ""
"`Issue #28008 <https://bugs.python.org/28008>`__: Implement PEP 530 -- "
"asynchronous comprehensions."
msgstr ""
"`Issue #28008 <https://bugs.python.org/28008>`__: Implement PEP 530 -- "
"asynchronous comprehensions."

#: ../../../Misc/NEWS:474
msgid ""
"`Issue #28037 <https://bugs.python.org/28037>`__: Use "
"sqlite3_get_autocommit() instead of setting Connection->inTransaction "
"manually."
msgstr ""
"`Issue #28037 <https://bugs.python.org/28037>`__: Use "
"sqlite3_get_autocommit() instead of setting Connection->inTransaction "
"manually."

#: ../../../Misc/NEWS:477
msgid ""
"`Issue #25283 <https://bugs.python.org/25283>`__: Attributes tm_gmtoff and "
"tm_zone are now available on all platforms in the return values of time."
"localtime() and time.gmtime()."
msgstr ""
"`Issue #25283 <https://bugs.python.org/25283>`__: Attributes tm_gmtoff and "
"tm_zone are now available on all platforms in the return values of time."
"localtime() and time.gmtime()."

#: ../../../Misc/NEWS:481
msgid ""
"`Issue #24454 <https://bugs.python.org/24454>`__: Regular expression match "
"object groups are now accessible using __getitem__.  \"mo[x]\" is equivalent "
"to \"mo.group(x)\"."
msgstr ""
"`Issue #24454 <https://bugs.python.org/24454>`__: Regular expression match "
"object groups are now accessible using __getitem__.  \"mo[x]\" is equivalent "
"to \"mo.group(x)\"."

#: ../../../Misc/NEWS:485
msgid ""
"`Issue #10740 <https://bugs.python.org/10740>`__: sqlite3 no longer "
"implicitly commit an open transaction before DDL statements."
msgstr ""
"`Issue #10740 <https://bugs.python.org/10740>`__: sqlite3 no longer "
"implicitly commit an open transaction before DDL statements."

#: ../../../Misc/NEWS:488
msgid ""
"`Issue #17941 <https://bugs.python.org/17941>`__: Add a *module* parameter "
"to collections.namedtuple()."
msgstr ""
"`Issue #17941 <https://bugs.python.org/17941>`__: Add a *module* parameter "
"to collections.namedtuple()."

#: ../../../Misc/NEWS:490
msgid ""
"`Issue #22493 <https://bugs.python.org/22493>`__: Inline flags now should be "
"used only at the start of the regular expression.  Deprecation warning is "
"emitted if uses them in the middle of the regular expression."
msgstr ""
"`Issue #22493 <https://bugs.python.org/22493>`__: Inline flags now should be "
"used only at the start of the regular expression.  Deprecation warning is "
"emitted if uses them in the middle of the regular expression."

#: ../../../Misc/NEWS:494
msgid ""
"`Issue #26885 <https://bugs.python.org/26885>`__: xmlrpc now supports "
"unmarshalling additional data types used by Apache XML-RPC implementation "
"for numerics and None."
msgstr ""
"`Issue #26885 <https://bugs.python.org/26885>`__: xmlrpc now supports "
"unmarshalling additional data types used by Apache XML-RPC implementation "
"for numerics and None."

#: ../../../Misc/NEWS:497
msgid ""
"`Issue #28070 <https://bugs.python.org/28070>`__: Fixed parsing inline "
"verbose flag in regular expressions."
msgstr ""
"`Issue #28070 <https://bugs.python.org/28070>`__: Fixed parsing inline "
"verbose flag in regular expressions."

#: ../../../Misc/NEWS:499
msgid ""
"`Issue #19500 <https://bugs.python.org/19500>`__: Add client-side SSL "
"session resumption to the ssl module."
msgstr ""
"`Issue #19500 <https://bugs.python.org/19500>`__: Add client-side SSL "
"session resumption to the ssl module."

#: ../../../Misc/NEWS:501
msgid ""
"`Issue #28022 <https://bugs.python.org/28022>`__: Deprecate ssl-related "
"arguments in favor of SSLContext. The deprecation include manual creation of "
"SSLSocket and certfile/keyfile (or similar) in ftplib, httplib, imaplib, "
"smtplib, poplib and urllib."
msgstr ""
"`Issue #28022 <https://bugs.python.org/28022>`__: Deprecate ssl-related "
"arguments in favor of SSLContext. The deprecation include manual creation of "
"SSLSocket and certfile/keyfile (or similar) in ftplib, httplib, imaplib, "
"smtplib, poplib and urllib."

#: ../../../Misc/NEWS:505
msgid ""
"`Issue #28043 <https://bugs.python.org/28043>`__: SSLContext has improved "
"default settings: OP_NO_SSLv2, OP_NO_SSLv3, OP_NO_COMPRESSION, "
"OP_CIPHER_SERVER_PREFERENCE, OP_SINGLE_DH_USE, OP_SINGLE_ECDH_USE and HIGH "
"ciphers without MD5."
msgstr ""
"`Issue #28043 <https://bugs.python.org/28043>`__: SSLContext has improved "
"default settings: OP_NO_SSLv2, OP_NO_SSLv3, OP_NO_COMPRESSION, "
"OP_CIPHER_SERVER_PREFERENCE, OP_SINGLE_DH_USE, OP_SINGLE_ECDH_USE and HIGH "
"ciphers without MD5."

#: ../../../Misc/NEWS:509
msgid ""
"`Issue #24693 <https://bugs.python.org/24693>`__: Changed some "
"RuntimeError's in the zipfile module to more appropriate types. Improved "
"some error messages and debugging output."
msgstr ""
"`Issue #24693 <https://bugs.python.org/24693>`__: Changed some "
"RuntimeError's in the zipfile module to more appropriate types. Improved "
"some error messages and debugging output."

#: ../../../Misc/NEWS:512
msgid ""
"`Issue #17909 <https://bugs.python.org/17909>`__: ``json.load`` and ``json."
"loads`` now support binary input encoded as UTF-8, UTF-16 or UTF-32. Patch "
"by Serhiy Storchaka."
msgstr ""
"`Issue #17909 <https://bugs.python.org/17909>`__: ``json.load`` and ``json."
"loads`` now support binary input encoded as UTF-8, UTF-16 or UTF-32. Patch "
"by Serhiy Storchaka."

#: ../../../Misc/NEWS:515
msgid ""
"`Issue #27137 <https://bugs.python.org/27137>`__: the pure Python fallback "
"implementation of ``functools.partial`` now matches the behaviour of its "
"accelerated C counterpart for subclassing, pickling and text representation "
"purposes. Patch by Emanuel Barry and Serhiy Storchaka."
msgstr ""
"`Issue #27137 <https://bugs.python.org/27137>`__: the pure Python fallback "
"implementation of ``functools.partial`` now matches the behaviour of its "
"accelerated C counterpart for subclassing, pickling and text representation "
"purposes. Patch by Emanuel Barry and Serhiy Storchaka."

#: ../../../Misc/NEWS:520
msgid ""
"Fix possible integer overflows and crashes in the mmap module with unusual "
"usage patterns."
msgstr ""

#: ../../../Misc/NEWS:523
msgid ""
"`Issue #1703178 <https://bugs.python.org/1703178>`__: Fix the ability to "
"pass the --link-objects option to the distutils build_ext command."
msgstr ""
"`Issue #1703178 <https://bugs.python.org/1703178>`__: Fix the ability to "
"pass the --link-objects option to the distutils build_ext command."

#: ../../../Misc/NEWS:526
msgid ""
"`Issue #28019 <https://bugs.python.org/28019>`__: itertools.count() no "
"longer rounds non-integer step in range between 1.0 and 2.0 to 1."
msgstr ""
"`Issue #28019 <https://bugs.python.org/28019>`__: itertools.count() no "
"longer rounds non-integer step in range between 1.0 and 2.0 to 1."

#: ../../../Misc/NEWS:529
msgid ""
"`Issue #18401 <https://bugs.python.org/18401>`__: Pdb now supports the "
"'readrc' keyword argument to control whether .pdbrc files should be read.  "
"Patch by Martin Matusiak and Sam Kimbrel."
msgstr ""
"`Issue #18401 <https://bugs.python.org/18401>`__: Pdb now supports the "
"'readrc' keyword argument to control whether .pdbrc files should be read.  "
"Patch by Martin Matusiak and Sam Kimbrel."

#: ../../../Misc/NEWS:533
msgid ""
"`Issue #25969 <https://bugs.python.org/25969>`__: Update the lib2to3 grammar "
"to handle the unpacking generalizations added in 3.5."
msgstr ""
"`Issue #25969 <https://bugs.python.org/25969>`__: Update the lib2to3 grammar "
"to handle the unpacking generalizations added in 3.5."

#: ../../../Misc/NEWS:536
msgid ""
"`Issue #14977 <https://bugs.python.org/14977>`__: mailcap now respects the "
"order of the lines in the mailcap files (\"first match\"), as required by "
"RFC 1542.  Patch by Michael Lazar."
msgstr ""
"`Issue #14977 <https://bugs.python.org/14977>`__: mailcap now respects the "
"order of the lines in the mailcap files (\"first match\"), as required by "
"RFC 1542.  Patch by Michael Lazar."

#: ../../../Misc/NEWS:539
msgid ""
"`Issue #28025 <https://bugs.python.org/28025>`__: Convert all ssl module "
"constants to IntEnum and IntFlags. SSLContext properties now return flags "
"and enums."
msgstr ""
"`Issue #28025 <https://bugs.python.org/28025>`__: Convert all ssl module "
"constants to IntEnum and IntFlags. SSLContext properties now return flags "
"and enums."

#: ../../../Misc/NEWS:542
msgid ""
"`Issue #433028 <https://bugs.python.org/433028>`__: Added support of "
"modifier spans in regular expressions."
msgstr ""
"`Issue #433028 <https://bugs.python.org/433028>`__: Added support of "
"modifier spans in regular expressions."

#: ../../../Misc/NEWS:544
msgid ""
"`Issue #24594 <https://bugs.python.org/24594>`__: Validates persist "
"parameter when opening MSI database"
msgstr ""
"`Issue #24594 <https://bugs.python.org/24594>`__: Validates persist "
"parameter when opening MSI database"

#: ../../../Misc/NEWS:546
msgid ""
"`Issue #17582 <https://bugs.python.org/17582>`__: xml.etree.ElementTree nows "
"preserves whitespaces in attributes (Patch by Duane Griffin.  Reviewed and "
"approved by Stefan Behnel.)"
msgstr ""
"`Issue #17582 <https://bugs.python.org/17582>`__: xml.etree.ElementTree nows "
"preserves whitespaces in attributes (Patch by Duane Griffin.  Reviewed and "
"approved by Stefan Behnel.)"

#: ../../../Misc/NEWS:549
msgid ""
"`Issue #28047 <https://bugs.python.org/28047>`__: Fixed calculation of line "
"length used for the base64 CTE in the new email policies."
msgstr ""
"`Issue #28047 <https://bugs.python.org/28047>`__: Fixed calculation of line "
"length used for the base64 CTE in the new email policies."

#: ../../../Misc/NEWS:552
msgid ""
"`Issue #27576 <https://bugs.python.org/27576>`__: Fix call order in "
"OrderedDict.__init__()."
msgstr ""
"`Issue #27576 <https://bugs.python.org/27576>`__: Fix call order in "
"OrderedDict.__init__()."

#: ../../../Misc/NEWS:554
msgid "email.generator.DecodedGenerator now supports the policy keyword."
msgstr ""

#: ../../../Misc/NEWS:556
msgid ""
"`Issue #28027 <https://bugs.python.org/28027>`__: Remove undocumented "
"modules from ``Lib/plat-*``: IN, CDROM, DLFCN, TYPES, CDIO, and STROPTS."
msgstr ""
"`Issue #28027 <https://bugs.python.org/28027>`__: Remove undocumented "
"modules from ``Lib/plat-*``: IN, CDROM, DLFCN, TYPES, CDIO, and STROPTS."

#: ../../../Misc/NEWS:559
msgid ""
"`Issue #27445 <https://bugs.python.org/27445>`__: Don't pass str(_charset) "
"to MIMEText.set_payload(). Patch by Claude Paroz."
msgstr ""
"`Issue #27445 <https://bugs.python.org/27445>`__: Don't pass str(_charset) "
"to MIMEText.set_payload(). Patch by Claude Paroz."

#: ../../../Misc/NEWS:562
msgid ""
"`Issue #24277 <https://bugs.python.org/24277>`__: The new email API is no "
"longer provisional, and the docs have been reorganized and rewritten to "
"emphasize the new API."
msgstr ""
"`Issue #24277 <https://bugs.python.org/24277>`__: The new email API is no "
"longer provisional, and the docs have been reorganized and rewritten to "
"emphasize the new API."

#: ../../../Misc/NEWS:565
msgid ""
"`Issue #22450 <https://bugs.python.org/22450>`__: urllib now includes an "
"\"Accept: */*\" header among the default headers.  This makes the results of "
"REST API requests more consistent and predictable especially when proxy "
"servers are involved."
msgstr ""
"`Issue #22450 <https://bugs.python.org/22450>`__: urllib now includes an "
"\"Accept: */*\" header among the default headers.  This makes the results of "
"REST API requests more consistent and predictable especially when proxy "
"servers are involved."

#: ../../../Misc/NEWS:569
msgid ""
"lib2to3.pgen3.driver.load_grammar() now creates a stable cache file between "
"runs given the same Grammar.txt input regardless of the hash randomization "
"setting."
msgstr ""

#: ../../../Misc/NEWS:573
msgid ""
"`Issue #28005 <https://bugs.python.org/28005>`__: Allow ImportErrors in "
"encoding implementation to propagate."
msgstr ""
"`Issue #28005 <https://bugs.python.org/28005>`__: Allow ImportErrors in "
"encoding implementation to propagate."

#: ../../../Misc/NEWS:575
msgid ""
"`Issue #26667 <https://bugs.python.org/26667>`__: Support path-like objects "
"in importlib.util."
msgstr ""
"`Issue #26667 <https://bugs.python.org/26667>`__: Support path-like objects "
"in importlib.util."

#: ../../../Misc/NEWS:577
msgid ""
"`Issue #27570 <https://bugs.python.org/27570>`__: Avoid zero-length memcpy() "
"etc calls with null source pointers in the \"ctypes\" and \"array\" modules."
msgstr ""
"`Issue #27570 <https://bugs.python.org/27570>`__: Avoid zero-length memcpy() "
"etc calls with null source pointers in the \"ctypes\" and \"array\" modules."

#: ../../../Misc/NEWS:580
msgid ""
"`Issue #22233 <https://bugs.python.org/22233>`__: Break email header lines "
"*only* on the RFC specified CR and LF characters, not on arbitrary unicode "
"line breaks.  This also fixes a bug in HTTP header parsing."
msgstr ""
"`Issue #22233 <https://bugs.python.org/22233>`__: Break email header lines "
"*only* on the RFC specified CR and LF characters, not on arbitrary unicode "
"line breaks.  This also fixes a bug in HTTP header parsing."

#: ../../../Misc/NEWS:584
msgid ""
"Issue 27331: The email.mime classes now all accept an optional policy "
"keyword."
msgstr ""

#: ../../../Misc/NEWS:586
msgid ""
"Issue 27988: Fix email iter_attachments incorrect mutation of payload list."
msgstr ""

#: ../../../Misc/NEWS:588
msgid ""
"`Issue #16113 <https://bugs.python.org/16113>`__: Add SHA-3 and SHAKE "
"support to hashlib module."
msgstr ""
"`Issue #16113 <https://bugs.python.org/16113>`__: Add SHA-3 and SHAKE "
"support to hashlib module."

#: ../../../Misc/NEWS:590
msgid "Eliminate a tautological-pointer-compare warning in _scproxy.c."
msgstr ""

#: ../../../Misc/NEWS:592
msgid ""
"`Issue #27776 <https://bugs.python.org/27776>`__: The :func:`os.urandom` "
"function does now block on Linux 3.17 and newer until the system urandom "
"entropy pool is initialized to increase the security. This change is part of "
"the :pep:`524`."
msgstr ""
"`Issue #27776 <https://bugs.python.org/27776>`__: The :func:`os.urandom` "
"function does now block on Linux 3.17 and newer until the system urandom "
"entropy pool is initialized to increase the security. This change is part of "
"the :pep:`524`."

#: ../../../Misc/NEWS:596
msgid ""
"`Issue #27778 <https://bugs.python.org/27778>`__: Expose the Linux "
"``getrandom()`` syscall as a new :func:`os.getrandom` function. This change "
"is part of the :pep:`524`."
msgstr ""
"`Issue #27778 <https://bugs.python.org/27778>`__: Expose the Linux "
"``getrandom()`` syscall as a new :func:`os.getrandom` function. This change "
"is part of the :pep:`524`."

#: ../../../Misc/NEWS:599
msgid ""
"`Issue #27691 <https://bugs.python.org/27691>`__: Fix ssl module's parsing "
"of GEN_RID subject alternative name fields in X.509 certs."
msgstr ""
"`Issue #27691 <https://bugs.python.org/27691>`__: Fix ssl module's parsing "
"of GEN_RID subject alternative name fields in X.509 certs."

#: ../../../Misc/NEWS:602
msgid "`Issue #18844 <https://bugs.python.org/18844>`__: Add random.choices()."
msgstr ""
"`Issue #18844 <https://bugs.python.org/18844>`__: Add random.choices()."

#: ../../../Misc/NEWS:604
msgid ""
"`Issue #25761 <https://bugs.python.org/25761>`__: Improved error reporting "
"about truncated pickle data in C implementation of unpickler.  "
"UnpicklingError is now raised instead of AttributeError and ValueError in "
"some cases."
msgstr ""
"`Issue #25761 <https://bugs.python.org/25761>`__: Improved error reporting "
"about truncated pickle data in C implementation of unpickler.  "
"UnpicklingError is now raised instead of AttributeError and ValueError in "
"some cases."

#: ../../../Misc/NEWS:608
msgid ""
"`Issue #26798 <https://bugs.python.org/26798>`__: Add BLAKE2 (blake2b and "
"blake2s) to hashlib."
msgstr ""
"`Issue #26798 <https://bugs.python.org/26798>`__: Add BLAKE2 (blake2b and "
"blake2s) to hashlib."

#: ../../../Misc/NEWS:610
msgid ""
"`Issue #26032 <https://bugs.python.org/26032>`__: Optimized globbing in "
"pathlib by using os.scandir(); it is now about 1.5--4 times faster."
msgstr ""
"`Issue #26032 <https://bugs.python.org/26032>`__: Optimized globbing in "
"pathlib by using os.scandir(); it is now about 1.5--4 times faster."

#: ../../../Misc/NEWS:613
msgid ""
"`Issue #25596 <https://bugs.python.org/25596>`__: Optimized glob() and "
"iglob() functions in the glob module; they are now about 3--6 times faster."
msgstr ""
"`Issue #25596 <https://bugs.python.org/25596>`__: Optimized glob() and "
"iglob() functions in the glob module; they are now about 3--6 times faster."

#: ../../../Misc/NEWS:616
msgid ""
"`Issue #27928 <https://bugs.python.org/27928>`__: Add scrypt (password-based "
"key derivation function) to hashlib module (requires OpenSSL 1.1.0)."
msgstr ""
"`Issue #27928 <https://bugs.python.org/27928>`__: Add scrypt (password-based "
"key derivation function) to hashlib module (requires OpenSSL 1.1.0)."

#: ../../../Misc/NEWS:619
msgid ""
"`Issue #27850 <https://bugs.python.org/27850>`__: Remove 3DES from ssl "
"module's default cipher list to counter measure sweet32 attack "
"(CVE-2016-2183)."
msgstr ""
"`Issue #27850 <https://bugs.python.org/27850>`__: Remove 3DES from ssl "
"module's default cipher list to counter measure sweet32 attack "
"(CVE-2016-2183)."

#: ../../../Misc/NEWS:622
msgid ""
"`Issue #27766 <https://bugs.python.org/27766>`__: Add ChaCha20 Poly1305 to "
"ssl module's default ciper list. (Required OpenSSL 1.1.0 or LibreSSL)."
msgstr ""
"`Issue #27766 <https://bugs.python.org/27766>`__: Add ChaCha20 Poly1305 to "
"ssl module's default ciper list. (Required OpenSSL 1.1.0 or LibreSSL)."

#: ../../../Misc/NEWS:625
msgid ""
"`Issue #25387 <https://bugs.python.org/25387>`__: Check return value of "
"winsound.MessageBeep."
msgstr ""
"`Issue #25387 <https://bugs.python.org/25387>`__: Check return value of "
"winsound.MessageBeep."

#: ../../../Misc/NEWS:627
msgid ""
"`Issue #27866 <https://bugs.python.org/27866>`__: Add SSLContext."
"get_ciphers() method to get a list of all enabled ciphers."
msgstr ""
"`Issue #27866 <https://bugs.python.org/27866>`__: Add SSLContext."
"get_ciphers() method to get a list of all enabled ciphers."

#: ../../../Misc/NEWS:630
msgid ""
"`Issue #27744 <https://bugs.python.org/27744>`__: Add AF_ALG (Linux Kernel "
"crypto) to socket module."
msgstr ""
"`Issue #27744 <https://bugs.python.org/27744>`__: Add AF_ALG (Linux Kernel "
"crypto) to socket module."

#: ../../../Misc/NEWS:632
msgid ""
"`Issue #26470 <https://bugs.python.org/26470>`__: Port ssl and hashlib "
"module to OpenSSL 1.1.0."
msgstr ""
"`Issue #26470 <https://bugs.python.org/26470>`__: Port ssl and hashlib "
"module to OpenSSL 1.1.0."

#: ../../../Misc/NEWS:634
msgid ""
"`Issue #11620 <https://bugs.python.org/11620>`__: Fix support for SND_MEMORY "
"in winsound.PlaySound.  Based on a patch by Tim Lesher."
msgstr ""
"`Issue #11620 <https://bugs.python.org/11620>`__: Fix support for SND_MEMORY "
"in winsound.PlaySound.  Based on a patch by Tim Lesher."

#: ../../../Misc/NEWS:637
msgid ""
"`Issue #11734 <https://bugs.python.org/11734>`__: Add support for IEEE 754 "
"half-precision floats to the struct module. Based on a patch by Eli Stevens."
msgstr ""
"`Issue #11734 <https://bugs.python.org/11734>`__: Add support for IEEE 754 "
"half-precision floats to the struct module. Based on a patch by Eli Stevens."

#: ../../../Misc/NEWS:640
msgid ""
"`Issue #27919 <https://bugs.python.org/27919>`__: Deprecated ``extra_path`` "
"distribution option in distutils packaging."
msgstr ""
"`Issue #27919 <https://bugs.python.org/27919>`__: Deprecated ``extra_path`` "
"distribution option in distutils packaging."

#: ../../../Misc/NEWS:643
msgid ""
"`Issue #23229 <https://bugs.python.org/23229>`__: Add new ``cmath`` "
"constants: ``cmath.inf`` and ``cmath.nan`` to match ``math.inf`` and ``math."
"nan``, and also ``cmath.infj`` and ``cmath.nanj`` to match the format used "
"by complex repr."
msgstr ""
"`Issue #23229 <https://bugs.python.org/23229>`__: Add new ``cmath`` "
"constants: ``cmath.inf`` and ``cmath.nan`` to match ``math.inf`` and ``math."
"nan``, and also ``cmath.infj`` and ``cmath.nanj`` to match the format used "
"by complex repr."

#: ../../../Misc/NEWS:647
msgid ""
"`Issue #27842 <https://bugs.python.org/27842>`__: The csv.DictReader now "
"returns rows of type OrderedDict. (Contributed by Steve Holden.)"
msgstr ""
"`Issue #27842 <https://bugs.python.org/27842>`__: The csv.DictReader now "
"returns rows of type OrderedDict. (Contributed by Steve Holden.)"

#: ../../../Misc/NEWS:650
msgid ""
"Remove support for passing a file descriptor to os.access. It never worked "
"but previously didn't raise."
msgstr ""

#: ../../../Misc/NEWS:653
msgid ""
"`Issue #12885 <https://bugs.python.org/12885>`__: Fix error when distutils "
"encounters symlink."
msgstr ""
"`Issue #12885 <https://bugs.python.org/12885>`__: Fix error when distutils "
"encounters symlink."

#: ../../../Misc/NEWS:655
msgid ""
"`Issue #27881 <https://bugs.python.org/27881>`__: Fixed possible bugs when "
"setting sqlite3.Connection.isolation_level. Based on patch by Xiang Zhang."
msgstr ""
"`Issue #27881 <https://bugs.python.org/27881>`__: Fixed possible bugs when "
"setting sqlite3.Connection.isolation_level. Based on patch by Xiang Zhang."

#: ../../../Misc/NEWS:658
msgid ""
"`Issue #27861 <https://bugs.python.org/27861>`__: Fixed a crash in sqlite3."
"Connection.cursor() when a factory creates not a cursor.  Patch by Xiang "
"Zhang."
msgstr ""
"`Issue #27861 <https://bugs.python.org/27861>`__: Fixed a crash in sqlite3."
"Connection.cursor() when a factory creates not a cursor.  Patch by Xiang "
"Zhang."

#: ../../../Misc/NEWS:661
msgid ""
"`Issue #19884 <https://bugs.python.org/19884>`__: Avoid spurious output on "
"OS X with Gnu Readline."
msgstr ""
"`Issue #19884 <https://bugs.python.org/19884>`__: Avoid spurious output on "
"OS X with Gnu Readline."

#: ../../../Misc/NEWS:663
msgid ""
"`Issue #27706 <https://bugs.python.org/27706>`__: Restore deterministic "
"behavior of random.Random().seed() for string seeds using seeding version "
"1.  Allows sequences of calls to random() to exactly match those obtained in "
"Python 2. Patch by Nofar Schnider."
msgstr ""
"`Issue #27706 <https://bugs.python.org/27706>`__: Restore deterministic "
"behavior of random.Random().seed() for string seeds using seeding version "
"1.  Allows sequences of calls to random() to exactly match those obtained in "
"Python 2. Patch by Nofar Schnider."

#: ../../../Misc/NEWS:668
msgid ""
"`Issue #10513 <https://bugs.python.org/10513>`__: Fix a regression in "
"Connection.commit().  Statements should not be reset after a commit."
msgstr ""
"`Issue #10513 <https://bugs.python.org/10513>`__: Fix a regression in "
"Connection.commit().  Statements should not be reset after a commit."

#: ../../../Misc/NEWS:671
msgid ""
"`Issue #12319 <https://bugs.python.org/12319>`__: Chunked transfer encoding "
"support added to http.client.HTTPConnection requests.  The urllib.request."
"AbstractHTTPHandler class does not enforce a Content-Length header any "
"more.  If a HTTP request has a file or iterable body, but no Content-Length "
"header, the library now falls back to use chunked transfer- encoding."
msgstr ""
"`Issue #12319 <https://bugs.python.org/12319>`__: Chunked transfer encoding "
"support added to http.client.HTTPConnection requests.  The urllib.request."
"AbstractHTTPHandler class does not enforce a Content-Length header any "
"more.  If a HTTP request has a file or iterable body, but no Content-Length "
"header, the library now falls back to use chunked transfer- encoding."

#: ../../../Misc/NEWS:678
msgid ""
"A new version of typing.py from https://github.com/python/typing: - "
"Collection (only for 3.6) (`Issue #27598 <https://bugs.python.org/27598>`__) "
"- Add FrozenSet to __all__ (upstream #261) - fix crash in _get_type_vars() "
"(upstream #259) - Remove the dict constraint in ForwardRef._eval_type "
"(upstream #252)"
msgstr ""

#: ../../../Misc/NEWS:684
msgid ""
"`Issue #27832 <https://bugs.python.org/27832>`__: Make ``_normalize`` "
"parameter to ``Fraction`` constuctor keyword-only, so that ``Fraction(2, 3, "
"4)`` now raises ``TypeError``."
msgstr ""
"`Issue #27832 <https://bugs.python.org/27832>`__: Make ``_normalize`` "
"parameter to ``Fraction`` constuctor keyword-only, so that ``Fraction(2, 3, "
"4)`` now raises ``TypeError``."

#: ../../../Misc/NEWS:687
msgid ""
"`Issue #27539 <https://bugs.python.org/27539>`__: Fix unnormalised "
"``Fraction.__pow__`` result in the case of negative exponent and negative "
"base."
msgstr ""
"`Issue #27539 <https://bugs.python.org/27539>`__: Fix unnormalised "
"``Fraction.__pow__`` result in the case of negative exponent and negative "
"base."

#: ../../../Misc/NEWS:690
msgid ""
"`Issue #21718 <https://bugs.python.org/21718>`__: cursor.description is now "
"available for queries using CTEs."
msgstr ""
"`Issue #21718 <https://bugs.python.org/21718>`__: cursor.description is now "
"available for queries using CTEs."

#: ../../../Misc/NEWS:692
msgid ""
"`Issue #27819 <https://bugs.python.org/27819>`__: In distutils sdists, "
"simply produce the \"gztar\" (gzipped tar format) distributions on all "
"platforms unless \"formats\" is supplied."
msgstr ""
"`Issue #27819 <https://bugs.python.org/27819>`__: In distutils sdists, "
"simply produce the \"gztar\" (gzipped tar format) distributions on all "
"platforms unless \"formats\" is supplied."

#: ../../../Misc/NEWS:695
msgid ""
"`Issue #2466 <https://bugs.python.org/2466>`__: posixpath.ismount now "
"correctly recognizes mount points which the user does not have permission to "
"access."
msgstr ""
"`Issue #2466 <https://bugs.python.org/2466>`__: posixpath.ismount now "
"correctly recognizes mount points which the user does not have permission to "
"access."

#: ../../../Misc/NEWS:698
msgid ""
"`Issue #9998 <https://bugs.python.org/9998>`__: On Linux, ctypes.util."
"find_library now looks in LD_LIBRARY_PATH for shared libraries."
msgstr ""
"`Issue #9998 <https://bugs.python.org/9998>`__: On Linux, ctypes.util."
"find_library now looks in LD_LIBRARY_PATH for shared libraries."

#: ../../../Misc/NEWS:701
msgid ""
"`Issue #27573 <https://bugs.python.org/27573>`__: exit message for code."
"interact is now configurable."
msgstr ""
"`Issue #27573 <https://bugs.python.org/27573>`__: exit message for code."
"interact is now configurable."

#: ../../../Misc/NEWS:703
msgid ""
"`Issue #27930 <https://bugs.python.org/27930>`__: Improved behaviour of "
"logging.handlers.QueueListener. Thanks to Paulo Andrade and Petr Viktorin "
"for the analysis and patch."
msgstr ""
"`Issue #27930 <https://bugs.python.org/27930>`__: Improved behaviour of "
"logging.handlers.QueueListener. Thanks to Paulo Andrade and Petr Viktorin "
"for the analysis and patch."

#: ../../../Misc/NEWS:706
msgid ""
"`Issue #6766 <https://bugs.python.org/6766>`__: Distributed reference "
"counting added to multiprocessing to support nesting of shared values / "
"proxy objects."
msgstr ""
"`Issue #6766 <https://bugs.python.org/6766>`__: Distributed reference "
"counting added to multiprocessing to support nesting of shared values / "
"proxy objects."

#: ../../../Misc/NEWS:709
msgid ""
"`Issue #21201 <https://bugs.python.org/21201>`__: Improves readability of "
"multiprocessing error message.  Thanks to Wojciech Walczak for patch."
msgstr ""
"`Issue #21201 <https://bugs.python.org/21201>`__: Improves readability of "
"multiprocessing error message.  Thanks to Wojciech Walczak for patch."

#: ../../../Misc/NEWS:712
msgid "asyncio: Add set_protocol / get_protocol to Transports."
msgstr ""

#: ../../../Misc/NEWS:714
msgid ""
"`Issue #27456 <https://bugs.python.org/27456>`__: asyncio: Set TCP_NODELAY "
"by default."
msgstr ""
"`Issue #27456 <https://bugs.python.org/27456>`__: asyncio: Set TCP_NODELAY "
"by default."

#: ../../../Misc/NEWS:717 ../../../Misc/NEWS:989 ../../../Misc/NEWS:1188
#: ../../../Misc/NEWS:1444 ../../../Misc/NEWS:2570 ../../../Misc/NEWS:3175
#: ../../../Misc/NEWS:3506 ../../../Misc/NEWS:4012 ../../../Misc/NEWS:6029
#: ../../../Misc/NEWS:6747 ../../../Misc/NEWS:6949 ../../../Misc/NEWS:7351
#: ../../../Misc/NEWS:8239 ../../../Misc/NEWS:8505 ../../../Misc/NEWS:10115
msgid "IDLE"
msgstr "IDLE"

#: ../../../Misc/NEWS:719
msgid ""
"`Issue #15308 <https://bugs.python.org/15308>`__: Add 'interrupt "
"execution' (^C) to Shell menu. Patch by Roger Serwy, updated by Bayard "
"Randel."
msgstr ""
"`Issue #15308 <https://bugs.python.org/15308>`__: Add 'interrupt "
"execution' (^C) to Shell menu. Patch by Roger Serwy, updated by Bayard "
"Randel."

#: ../../../Misc/NEWS:722
msgid ""
"`Issue #27922 <https://bugs.python.org/27922>`__: Stop IDLE tests from "
"'flashing' gui widgets on the screen."
msgstr ""
"`Issue #27922 <https://bugs.python.org/27922>`__: Stop IDLE tests from "
"'flashing' gui widgets on the screen."

#: ../../../Misc/NEWS:724
msgid ""
"`Issue #27891 <https://bugs.python.org/27891>`__: Consistently group and "
"sort imports within idlelib modules."
msgstr ""
"`Issue #27891 <https://bugs.python.org/27891>`__: Consistently group and "
"sort imports within idlelib modules."

#: ../../../Misc/NEWS:726
msgid ""
"`Issue #17642 <https://bugs.python.org/17642>`__: add larger font sizes for "
"classroom projection."
msgstr ""
"`Issue #17642 <https://bugs.python.org/17642>`__: add larger font sizes for "
"classroom projection."

#: ../../../Misc/NEWS:728
msgid "Add version to title of IDLE help window."
msgstr ""

#: ../../../Misc/NEWS:730
msgid ""
"`Issue #25564 <https://bugs.python.org/25564>`__: In section on IDLE -- "
"console differences, mention that using exec means that __builtins__ is "
"defined for each statement."
msgstr ""
"`Issue #25564 <https://bugs.python.org/25564>`__: In section on IDLE -- "
"console differences, mention that using exec means that __builtins__ is "
"defined for each statement."

#: ../../../Misc/NEWS:733
msgid ""
"`Issue #27821 <https://bugs.python.org/27821>`__: Fix 3.6.0a3 regression "
"that prevented custom key sets from being selected when no custom theme was "
"defined."
msgstr ""
"`Issue #27821 <https://bugs.python.org/27821>`__: Fix 3.6.0a3 regression "
"that prevented custom key sets from being selected when no custom theme was "
"defined."

#: ../../../Misc/NEWS:737 ../../../Misc/NEWS:1223 ../../../Misc/NEWS:1556
#: ../../../Misc/NEWS:2844 ../../../Misc/NEWS:4276 ../../../Misc/NEWS:4592
#: ../../../Misc/NEWS:6188 ../../../Misc/NEWS:8098
msgid "C API"
msgstr ""

#: ../../../Misc/NEWS:739
msgid ""
"`Issue #26900 <https://bugs.python.org/26900>`__: Excluded underscored names "
"and other private API from limited API."
msgstr ""
"`Issue #26900 <https://bugs.python.org/26900>`__: Excluded underscored names "
"and other private API from limited API."

#: ../../../Misc/NEWS:741
msgid ""
"`Issue #26027 <https://bugs.python.org/26027>`__: Add support for path-like "
"objects in PyUnicode_FSConverter() & PyUnicode_FSDecoder()."
msgstr ""
"`Issue #26027 <https://bugs.python.org/26027>`__: Add support for path-like "
"objects in PyUnicode_FSConverter() & PyUnicode_FSDecoder()."

#: ../../../Misc/NEWS:747
msgid ""
"`Issue #27427 <https://bugs.python.org/27427>`__: Additional tests for the "
"math module. Patch by Francisco Couzo."
msgstr ""
"`Issue #27427 <https://bugs.python.org/27427>`__: Additional tests for the "
"math module. Patch by Francisco Couzo."

#: ../../../Misc/NEWS:749
msgid ""
"`Issue #27953 <https://bugs.python.org/27953>`__: Skip math and cmath tests "
"that fail on OS X 10.4 due to a poor libm implementation of tan."
msgstr ""
"`Issue #27953 <https://bugs.python.org/27953>`__: Skip math and cmath tests "
"that fail on OS X 10.4 due to a poor libm implementation of tan."

#: ../../../Misc/NEWS:752
msgid ""
"`Issue #26040 <https://bugs.python.org/26040>`__: Improve test_math and "
"test_cmath coverage and rigour. Patch by Jeff Allen."
msgstr ""
"`Issue #26040 <https://bugs.python.org/26040>`__: Improve test_math and "
"test_cmath coverage and rigour. Patch by Jeff Allen."

#: ../../../Misc/NEWS:755
msgid ""
"`Issue #27787 <https://bugs.python.org/27787>`__: Call gc.collect() before "
"checking each test for \"dangling threads\", since the dangling threads are "
"weak references."
msgstr ""
"`Issue #27787 <https://bugs.python.org/27787>`__: Call gc.collect() before "
"checking each test for \"dangling threads\", since the dangling threads are "
"weak references."

#: ../../../Misc/NEWS:761
msgid ""
"`Issue #27566 <https://bugs.python.org/27566>`__: Fix clean target in freeze "
"makefile (patch by Lisa Roach)"
msgstr ""
"`Issue #27566 <https://bugs.python.org/27566>`__: Fix clean target in freeze "
"makefile (patch by Lisa Roach)"

#: ../../../Misc/NEWS:763
msgid ""
"`Issue #27705 <https://bugs.python.org/27705>`__: Update message in "
"validate_ucrtbase.py"
msgstr ""
"`Issue #27705 <https://bugs.python.org/27705>`__: Update message in "
"validate_ucrtbase.py"

#: ../../../Misc/NEWS:765
msgid ""
"`Issue #27976 <https://bugs.python.org/27976>`__: Deprecate building _ctypes "
"with the bundled copy of libffi on non-OSX UNIX platforms."
msgstr ""
"`Issue #27976 <https://bugs.python.org/27976>`__: Deprecate building _ctypes "
"with the bundled copy of libffi on non-OSX UNIX platforms."

#: ../../../Misc/NEWS:768
msgid ""
"`Issue #27983 <https://bugs.python.org/27983>`__: Cause lack of llvm-"
"profdata tool when using clang as required for PGO linking to be a configure "
"time error rather than make time when --with-optimizations is enabled.  Also "
"improve our ability to find the llvm-profdata tool on MacOS and some Linuxes."
msgstr ""
"`Issue #27983 <https://bugs.python.org/27983>`__: Cause lack of llvm-"
"profdata tool when using clang as required for PGO linking to be a configure "
"time error rather than make time when --with-optimizations is enabled.  Also "
"improve our ability to find the llvm-profdata tool on MacOS and some Linuxes."

#: ../../../Misc/NEWS:773
msgid ""
"`Issue #21590 <https://bugs.python.org/21590>`__: Support for DTrace and "
"SystemTap probes."
msgstr ""
"`Issue #21590 <https://bugs.python.org/21590>`__: Support for DTrace and "
"SystemTap probes."

#: ../../../Misc/NEWS:775
msgid ""
"`Issue #26307 <https://bugs.python.org/26307>`__: The profile-opt build now "
"applies PGO to the built-in modules."
msgstr ""
"`Issue #26307 <https://bugs.python.org/26307>`__: The profile-opt build now "
"applies PGO to the built-in modules."

#: ../../../Misc/NEWS:777
msgid ""
"`Issue #26539 <https://bugs.python.org/26539>`__: Add the --with-"
"optimizations flag to turn on LTO and PGO build support when available."
msgstr ""
"`Issue #26539 <https://bugs.python.org/26539>`__: Add the --with-"
"optimizations flag to turn on LTO and PGO build support when available."

#: ../../../Misc/NEWS:780
msgid ""
"`Issue #27917 <https://bugs.python.org/27917>`__: Set platform triplets for "
"Android builds."
msgstr ""
"`Issue #27917 <https://bugs.python.org/27917>`__: Set platform triplets for "
"Android builds."

#: ../../../Misc/NEWS:782
msgid ""
"`Issue #25825 <https://bugs.python.org/25825>`__: Update references to the "
"$(LIBPL) installation path on AIX. This path was changed in 3.2a4."
msgstr ""
"`Issue #25825 <https://bugs.python.org/25825>`__: Update references to the "
"$(LIBPL) installation path on AIX. This path was changed in 3.2a4."

#: ../../../Misc/NEWS:785
msgid "Update OS X installer to use SQLite 3.14.1 and XZ 5.2.2."
msgstr ""

#: ../../../Misc/NEWS:787
msgid ""
"`Issue #21122 <https://bugs.python.org/21122>`__: Fix LTO builds on OS X."
msgstr ""
"`Issue #21122 <https://bugs.python.org/21122>`__: Fix LTO builds on OS X."

#: ../../../Misc/NEWS:789
msgid ""
"`Issue #17128 <https://bugs.python.org/17128>`__: Build OS X installer with "
"a private copy of OpenSSL. Also provide a sample Install Certificates "
"command script to install a set of root certificates from the third-party "
"certifi module."
msgstr ""
"`Issue #17128 <https://bugs.python.org/17128>`__: Build OS X installer with "
"a private copy of OpenSSL. Also provide a sample Install Certificates "
"command script to install a set of root certificates from the third-party "
"certifi module."

#: ../../../Misc/NEWS:794 ../../../Misc/NEWS:1252 ../../../Misc/NEWS:1564
#: ../../../Misc/NEWS:2823 ../../../Misc/NEWS:3356 ../../../Misc/NEWS:4037
#: ../../../Misc/NEWS:4253 ../../../Misc/NEWS:4460 ../../../Misc/NEWS:6363
#: ../../../Misc/NEWS:6771 ../../../Misc/NEWS:6969 ../../../Misc/NEWS:7433
#: ../../../Misc/NEWS:7902 ../../../Misc/NEWS:8260 ../../../Misc/NEWS:8529
#: ../../../Misc/NEWS:10673
msgid "Tools/Demos"
msgstr ""

#: ../../../Misc/NEWS:796
msgid ""
"`Issue #27952 <https://bugs.python.org/27952>`__: Get Tools/scripts/fixcid."
"py working with Python 3 and the current \"re\" module, avoid invalid Python "
"backslash escapes, and fix a bug parsing escaped C quote signs."
msgstr ""
"`Issue #27952 <https://bugs.python.org/27952>`__: Get Tools/scripts/fixcid."
"py working with Python 3 and the current \"re\" module, avoid invalid Python "
"backslash escapes, and fix a bug parsing escaped C quote signs."

#: ../../../Misc/NEWS:803
msgid ""
"`Issue #28065 <https://bugs.python.org/28065>`__: Update xz dependency to "
"5.2.2 and build it from source."
msgstr ""
"`Issue #28065 <https://bugs.python.org/28065>`__: Update xz dependency to "
"5.2.2 and build it from source."

#: ../../../Misc/NEWS:805
msgid ""
"`Issue #25144 <https://bugs.python.org/25144>`__: Ensures TargetDir is set "
"before continuing with custom install."
msgstr ""
"`Issue #25144 <https://bugs.python.org/25144>`__: Ensures TargetDir is set "
"before continuing with custom install."

#: ../../../Misc/NEWS:808
msgid ""
"`Issue #1602 <https://bugs.python.org/1602>`__: Windows console doesn't "
"input or print Unicode (PEP 528)"
msgstr ""
"`Issue #1602 <https://bugs.python.org/1602>`__: Windows console doesn't "
"input or print Unicode (PEP 528)"

#: ../../../Misc/NEWS:810
msgid ""
"`Issue #27781 <https://bugs.python.org/27781>`__: Change file system "
"encoding on Windows to UTF-8 (PEP 529)"
msgstr ""
"`Issue #27781 <https://bugs.python.org/27781>`__: Change file system "
"encoding on Windows to UTF-8 (PEP 529)"

#: ../../../Misc/NEWS:812
msgid ""
"`Issue #27731 <https://bugs.python.org/27731>`__: Opt-out of MAX_PATH on "
"Windows 10"
msgstr ""
"`Issue #27731 <https://bugs.python.org/27731>`__: Opt-out of MAX_PATH on "
"Windows 10"

#: ../../../Misc/NEWS:814
msgid ""
"`Issue #6135 <https://bugs.python.org/6135>`__: Adds encoding and errors "
"parameters to subprocess."
msgstr ""
"`Issue #6135 <https://bugs.python.org/6135>`__: Adds encoding and errors "
"parameters to subprocess."

#: ../../../Misc/NEWS:816
msgid ""
"`Issue #27959 <https://bugs.python.org/27959>`__: Adds oem encoding, alias "
"ansi to mbcs, move aliasmbcs to codec lookup."
msgstr ""
"`Issue #27959 <https://bugs.python.org/27959>`__: Adds oem encoding, alias "
"ansi to mbcs, move aliasmbcs to codec lookup."

#: ../../../Misc/NEWS:819
msgid ""
"`Issue #27982 <https://bugs.python.org/27982>`__: The functions of the "
"winsound module now accept keyword arguments."
msgstr ""
"`Issue #27982 <https://bugs.python.org/27982>`__: The functions of the "
"winsound module now accept keyword arguments."

#: ../../../Misc/NEWS:822
msgid ""
"`Issue #20366 <https://bugs.python.org/20366>`__: Build full text search "
"support into SQLite on Windows."
msgstr ""
"`Issue #20366 <https://bugs.python.org/20366>`__: Build full text search "
"support into SQLite on Windows."

#: ../../../Misc/NEWS:824
msgid ""
"`Issue #27756 <https://bugs.python.org/27756>`__: Adds new icons for Python "
"files and processes on Windows. Designs by Cherry Wang."
msgstr ""
"`Issue #27756 <https://bugs.python.org/27756>`__: Adds new icons for Python "
"files and processes on Windows. Designs by Cherry Wang."

#: ../../../Misc/NEWS:827
msgid ""
"`Issue #27883 <https://bugs.python.org/27883>`__: Update sqlite to 3.14.1.0 "
"on Windows."
msgstr ""
"`Issue #27883 <https://bugs.python.org/27883>`__: Update sqlite to 3.14.1.0 "
"on Windows."

#: ../../../Misc/NEWS:831
msgid "Python 3.6.0 alpha 4"
msgstr ""

#: ../../../Misc/NEWS:833
msgid "*Release date: 2016-08-15*"
msgstr ""

#: ../../../Misc/NEWS:838
msgid ""
"`Issue #27704 <https://bugs.python.org/27704>`__: Optimized creating bytes "
"and bytearray from byte-like objects and iterables.  Speed up to 3 times for "
"short objects.  Original patch by Naoki Inada."
msgstr ""
"`Issue #27704 <https://bugs.python.org/27704>`__: Optimized creating bytes "
"and bytearray from byte-like objects and iterables.  Speed up to 3 times for "
"short objects.  Original patch by Naoki Inada."

#: ../../../Misc/NEWS:842
msgid ""
"`Issue #26823 <https://bugs.python.org/26823>`__: Large sections of repeated "
"lines in tracebacks are now abbreviated as \"[Previous line repeated {count} "
"more times]\" by the builtin traceback rendering. Patch by Emanuel Barry."
msgstr ""
"`Issue #26823 <https://bugs.python.org/26823>`__: Large sections of repeated "
"lines in tracebacks are now abbreviated as \"[Previous line repeated {count} "
"more times]\" by the builtin traceback rendering. Patch by Emanuel Barry."

#: ../../../Misc/NEWS:846
msgid ""
"`Issue #27574 <https://bugs.python.org/27574>`__: Decreased an overhead of "
"parsing keyword arguments in functions implemented with using Argument "
"Clinic."
msgstr ""
"`Issue #27574 <https://bugs.python.org/27574>`__: Decreased an overhead of "
"parsing keyword arguments in functions implemented with using Argument "
"Clinic."

#: ../../../Misc/NEWS:849
msgid ""
"`Issue #22557 <https://bugs.python.org/22557>`__: Now importing already "
"imported modules is up to 2.5 times faster."
msgstr ""
"`Issue #22557 <https://bugs.python.org/22557>`__: Now importing already "
"imported modules is up to 2.5 times faster."

#: ../../../Misc/NEWS:852
msgid ""
"`Issue #17596 <https://bugs.python.org/17596>`__: Include <wincrypt.h> to "
"help with Min GW building."
msgstr ""
"`Issue #17596 <https://bugs.python.org/17596>`__: Include <wincrypt.h> to "
"help with Min GW building."

#: ../../../Misc/NEWS:854
msgid ""
"`Issue #17599 <https://bugs.python.org/17599>`__: On Windows, rename the "
"privately defined REPARSE_DATA_BUFFER structure to avoid conflicting with "
"the definition from Min GW."
msgstr ""
"`Issue #17599 <https://bugs.python.org/17599>`__: On Windows, rename the "
"privately defined REPARSE_DATA_BUFFER structure to avoid conflicting with "
"the definition from Min GW."

#: ../../../Misc/NEWS:857
msgid ""
"`Issue #27507 <https://bugs.python.org/27507>`__: Add integer overflow check "
"in bytearray.extend().  Patch by Xiang Zhang."
msgstr ""
"`Issue #27507 <https://bugs.python.org/27507>`__: Add integer overflow check "
"in bytearray.extend().  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:860
msgid ""
"`Issue #27581 <https://bugs.python.org/27581>`__: Don't rely on wrapping for "
"overflow check in PySequence_Tuple().  Patch by Xiang Zhang."
msgstr ""
"`Issue #27581 <https://bugs.python.org/27581>`__: Don't rely on wrapping for "
"overflow check in PySequence_Tuple().  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:863
msgid ""
"`Issue #1621 <https://bugs.python.org/1621>`__: Avoid signed integer "
"overflow in list and tuple operations. Patch by Xiang Zhang."
msgstr ""
"`Issue #1621 <https://bugs.python.org/1621>`__: Avoid signed integer "
"overflow in list and tuple operations. Patch by Xiang Zhang."

#: ../../../Misc/NEWS:866
msgid ""
"`Issue #27419 <https://bugs.python.org/27419>`__: Standard __import__() no "
"longer look up \"__import__\" in globals or builtins for importing "
"submodules or \"from import\".  Fixed a crash if raise a warning about "
"unabling to resolve package from __spec__ or __package__."
msgstr ""
"`Issue #27419 <https://bugs.python.org/27419>`__: Standard __import__() no "
"longer look up \"__import__\" in globals or builtins for importing "
"submodules or \"from import\".  Fixed a crash if raise a warning about "
"unabling to resolve package from __spec__ or __package__."

#: ../../../Misc/NEWS:871
msgid ""
"`Issue #27083 <https://bugs.python.org/27083>`__: Respect the PYTHONCASEOK "
"environment variable under Windows."
msgstr ""
"`Issue #27083 <https://bugs.python.org/27083>`__: Respect the PYTHONCASEOK "
"environment variable under Windows."

#: ../../../Misc/NEWS:873
msgid ""
"`Issue #27514 <https://bugs.python.org/27514>`__: Make having too many "
"statically nested blocks a SyntaxError instead of SystemError."
msgstr ""
"`Issue #27514 <https://bugs.python.org/27514>`__: Make having too many "
"statically nested blocks a SyntaxError instead of SystemError."

#: ../../../Misc/NEWS:876
msgid ""
"`Issue #27366 <https://bugs.python.org/27366>`__: Implemented PEP 487 "
"(Simpler customization of class creation). Upon subclassing, the "
"__init_subclass__ classmethod is called on the base class. Descriptors are "
"initialized with __set_name__ after class creation."
msgstr ""
"`Issue #27366 <https://bugs.python.org/27366>`__: Implemented PEP 487 "
"(Simpler customization of class creation). Upon subclassing, the "
"__init_subclass__ classmethod is called on the base class. Descriptors are "
"initialized with __set_name__ after class creation."

#: ../../../Misc/NEWS:883
msgid ""
"`Issue #26027 <https://bugs.python.org/26027>`__, #27524: Add PEP 519/"
"__fspath__() support to the os and os.path modules. Includes code from Jelle "
"Zijlstra."
msgstr ""
"`Issue #26027 <https://bugs.python.org/26027>`__, #27524: Add PEP 519/"
"__fspath__() support to the os and os.path modules. Includes code from Jelle "
"Zijlstra."

#: ../../../Misc/NEWS:886
msgid ""
"`Issue #27598 <https://bugs.python.org/27598>`__: Add Collections to "
"collections.abc. Patch by Ivan Levkivskyi, docs by Neil Girdhar."
msgstr ""
"`Issue #27598 <https://bugs.python.org/27598>`__: Add Collections to "
"collections.abc. Patch by Ivan Levkivskyi, docs by Neil Girdhar."

#: ../../../Misc/NEWS:889
msgid ""
"`Issue #25958 <https://bugs.python.org/25958>`__: Support \"anti-registration"
"\" of special methods from various ABCs, like __hash__, __iter__ or "
"__len__.  All these (and several more) can be set to None in an "
"implementation class and the behavior will be as if the method is not "
"defined at all. (Previously, this mechanism existed only for __hash__, to "
"make mutable classes unhashable.)  Code contributed by Andrew Barnert and "
"Ivan Levkivskyi."
msgstr ""
"`Issue #25958 <https://bugs.python.org/25958>`__: Support \"anti-registration"
"\" of special methods from various ABCs, like __hash__, __iter__ or "
"__len__.  All these (and several more) can be set to None in an "
"implementation class and the behavior will be as if the method is not "
"defined at all. (Previously, this mechanism existed only for __hash__, to "
"make mutable classes unhashable.)  Code contributed by Andrew Barnert and "
"Ivan Levkivskyi."

#: ../../../Misc/NEWS:897
msgid ""
"`Issue #16764 <https://bugs.python.org/16764>`__: Support keyword arguments "
"to zlib.decompress().  Patch by Xiang Zhang."
msgstr ""
"`Issue #16764 <https://bugs.python.org/16764>`__: Support keyword arguments "
"to zlib.decompress().  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:900
msgid ""
"`Issue #27736 <https://bugs.python.org/27736>`__: Prevent segfault after "
"interpreter re-initialization due to ref count problem introduced in code "
"for `Issue #27038 <https://bugs.python.org/27038>`__ in 3.6.0a3. Patch by "
"Xiang Zhang."
msgstr ""
"`Issue #27736 <https://bugs.python.org/27736>`__: Prevent segfault after "
"interpreter re-initialization due to ref count problem introduced in code "
"for `Issue #27038 <https://bugs.python.org/27038>`__ in 3.6.0a3. Patch by "
"Xiang Zhang."

#: ../../../Misc/NEWS:904
msgid ""
"`Issue #25628 <https://bugs.python.org/25628>`__:  The *verbose* and "
"*rename* parameters for collections.namedtuple are now keyword-only."
msgstr ""
"`Issue #25628 <https://bugs.python.org/25628>`__:  The *verbose* and "
"*rename* parameters for collections.namedtuple are now keyword-only."

#: ../../../Misc/NEWS:907
msgid ""
"`Issue #12345 <https://bugs.python.org/12345>`__: Add mathematical constant "
"tau to math and cmath. See also PEP 628."
msgstr ""
"`Issue #12345 <https://bugs.python.org/12345>`__: Add mathematical constant "
"tau to math and cmath. See also PEP 628."

#: ../../../Misc/NEWS:910
msgid ""
"`Issue #26823 <https://bugs.python.org/26823>`__: traceback.StackSummary."
"format now abbreviates large sections of repeated lines as \"[Previous line "
"repeated {count} more times]\" (this change then further affects other "
"traceback display operations in the module). Patch by Emanuel Barry."
msgstr ""
"`Issue #26823 <https://bugs.python.org/26823>`__: traceback.StackSummary."
"format now abbreviates large sections of repeated lines as \"[Previous line "
"repeated {count} more times]\" (this change then further affects other "
"traceback display operations in the module). Patch by Emanuel Barry."

#: ../../../Misc/NEWS:915
msgid ""
"`Issue #27664 <https://bugs.python.org/27664>`__: Add to concurrent.futures."
"thread.ThreadPoolExecutor() the ability to specify a thread name prefix."
msgstr ""
"`Issue #27664 <https://bugs.python.org/27664>`__: Add to concurrent.futures."
"thread.ThreadPoolExecutor() the ability to specify a thread name prefix."

#: ../../../Misc/NEWS:918
msgid ""
"`Issue #27181 <https://bugs.python.org/27181>`__: Add geometric_mean and "
"harmonic_mean to statistics module."
msgstr ""
"`Issue #27181 <https://bugs.python.org/27181>`__: Add geometric_mean and "
"harmonic_mean to statistics module."

#: ../../../Misc/NEWS:920
msgid ""
"`Issue #27573 <https://bugs.python.org/27573>`__: code.interact now prints "
"an message when exiting."
msgstr ""
"`Issue #27573 <https://bugs.python.org/27573>`__: code.interact now prints "
"an message when exiting."

#: ../../../Misc/NEWS:922
msgid ""
"`Issue #6422 <https://bugs.python.org/6422>`__: Add autorange method to "
"timeit.Timer objects."
msgstr ""
"`Issue #6422 <https://bugs.python.org/6422>`__: Add autorange method to "
"timeit.Timer objects."

#: ../../../Misc/NEWS:924
msgid ""
"`Issue #27773 <https://bugs.python.org/27773>`__: Correct some memory "
"management errors server_hostname in _ssl.wrap_socket()."
msgstr ""
"`Issue #27773 <https://bugs.python.org/27773>`__: Correct some memory "
"management errors server_hostname in _ssl.wrap_socket()."

#: ../../../Misc/NEWS:927
msgid ""
"`Issue #26750 <https://bugs.python.org/26750>`__: unittest.mock."
"create_autospec() now works properly for subclasses of property() and other "
"data descriptors.  Removes the never publicly used, never documented "
"unittest.mock.DescriptorTypes tuple."
msgstr ""
"`Issue #26750 <https://bugs.python.org/26750>`__: unittest.mock."
"create_autospec() now works properly for subclasses of property() and other "
"data descriptors.  Removes the never publicly used, never documented "
"unittest.mock.DescriptorTypes tuple."

#: ../../../Misc/NEWS:931
msgid ""
"`Issue #26754 <https://bugs.python.org/26754>`__: Undocumented support of "
"general bytes-like objects as path in compile() and similar functions is now "
"deprecated."
msgstr ""
"`Issue #26754 <https://bugs.python.org/26754>`__: Undocumented support of "
"general bytes-like objects as path in compile() and similar functions is now "
"deprecated."

#: ../../../Misc/NEWS:934
msgid ""
"`Issue #26800 <https://bugs.python.org/26800>`__: Undocumented support of "
"general bytes-like objects as paths in os functions is now deprecated."
msgstr ""
"`Issue #26800 <https://bugs.python.org/26800>`__: Undocumented support of "
"general bytes-like objects as paths in os functions is now deprecated."

#: ../../../Misc/NEWS:937
msgid ""
"`Issue #26981 <https://bugs.python.org/26981>`__: Add _order_ compatibility "
"shim to enum.Enum for Python 2/3 code bases."
msgstr ""
"`Issue #26981 <https://bugs.python.org/26981>`__: Add _order_ compatibility "
"shim to enum.Enum for Python 2/3 code bases."

#: ../../../Misc/NEWS:940
msgid ""
"`Issue #27661 <https://bugs.python.org/27661>`__: Added tzinfo keyword "
"argument to datetime.combine."
msgstr ""
"`Issue #27661 <https://bugs.python.org/27661>`__: Added tzinfo keyword "
"argument to datetime.combine."

#: ../../../Misc/NEWS:942
msgid ""
"In the curses module, raise an error if window.getstr() or window.instr() is "
"passed a negative value."
msgstr ""

#: ../../../Misc/NEWS:945
msgid ""
"`Issue #27783 <https://bugs.python.org/27783>`__: Fix possible usage of "
"uninitialized memory in operator.methodcaller."
msgstr ""
"`Issue #27783 <https://bugs.python.org/27783>`__: Fix possible usage of "
"uninitialized memory in operator.methodcaller."

#: ../../../Misc/NEWS:948
msgid ""
"`Issue #27774 <https://bugs.python.org/27774>`__: Fix possible Py_DECREF on "
"unowned object in _sre."
msgstr ""
"`Issue #27774 <https://bugs.python.org/27774>`__: Fix possible Py_DECREF on "
"unowned object in _sre."

#: ../../../Misc/NEWS:950
msgid ""
"`Issue #27760 <https://bugs.python.org/27760>`__: Fix possible integer "
"overflow in binascii.b2a_qp."
msgstr ""
"`Issue #27760 <https://bugs.python.org/27760>`__: Fix possible integer "
"overflow in binascii.b2a_qp."

#: ../../../Misc/NEWS:952
msgid ""
"`Issue #27758 <https://bugs.python.org/27758>`__: Fix possible integer "
"overflow in the _csv module for large record lengths."
msgstr ""
"`Issue #27758 <https://bugs.python.org/27758>`__: Fix possible integer "
"overflow in the _csv module for large record lengths."

#: ../../../Misc/NEWS:955
msgid ""
"`Issue #27568 <https://bugs.python.org/27568>`__: Prevent HTTPoxy attack "
"(CVE-2016-1000110). Ignore the HTTP_PROXY variable when REQUEST_METHOD "
"environment is set, which indicates that the script is in CGI mode."
msgstr ""
"`Issue #27568 <https://bugs.python.org/27568>`__: Prevent HTTPoxy attack "
"(CVE-2016-1000110). Ignore the HTTP_PROXY variable when REQUEST_METHOD "
"environment is set, which indicates that the script is in CGI mode."

#: ../../../Misc/NEWS:959
msgid ""
"`Issue #7063 <https://bugs.python.org/7063>`__: Remove dead code from the "
"\"array\" module's slice handling. Patch by Chuck."
msgstr ""
"`Issue #7063 <https://bugs.python.org/7063>`__: Remove dead code from the "
"\"array\" module's slice handling. Patch by Chuck."

#: ../../../Misc/NEWS:962
msgid ""
"`Issue #27656 <https://bugs.python.org/27656>`__: Do not assume sched.h "
"defines any SCHED_* constants."
msgstr ""
"`Issue #27656 <https://bugs.python.org/27656>`__: Do not assume sched.h "
"defines any SCHED_* constants."

#: ../../../Misc/NEWS:964
msgid ""
"`Issue #27130 <https://bugs.python.org/27130>`__: In the \"zlib\" module, "
"fix handling of large buffers (typically 4 GiB) when compressing and "
"decompressing.  Previously, inputs were limited to 4 GiB, and compression "
"and decompression operations did not properly handle results of 4 GiB."
msgstr ""
"`Issue #27130 <https://bugs.python.org/27130>`__: In the \"zlib\" module, "
"fix handling of large buffers (typically 4 GiB) when compressing and "
"decompressing.  Previously, inputs were limited to 4 GiB, and compression "
"and decompression operations did not properly handle results of 4 GiB."

#: ../../../Misc/NEWS:969
msgid ""
"`Issue #24773 <https://bugs.python.org/24773>`__: Implemented PEP 495 (Local "
"Time Disambiguation)."
msgstr ""
"`Issue #24773 <https://bugs.python.org/24773>`__: Implemented PEP 495 (Local "
"Time Disambiguation)."

#: ../../../Misc/NEWS:971
msgid ""
"Expose the EPOLLEXCLUSIVE constant (when it is defined) in the select module."
msgstr ""

#: ../../../Misc/NEWS:973
msgid ""
"`Issue #27567 <https://bugs.python.org/27567>`__: Expose the EPOLLRDHUP and "
"POLLRDHUP constants in the select module."
msgstr ""
"`Issue #27567 <https://bugs.python.org/27567>`__: Expose the EPOLLRDHUP and "
"POLLRDHUP constants in the select module."

#: ../../../Misc/NEWS:976
msgid ""
"`Issue #1621 <https://bugs.python.org/1621>`__: Avoid signed int negation "
"overflow in the \"audioop\" module."
msgstr ""
"`Issue #1621 <https://bugs.python.org/1621>`__: Avoid signed int negation "
"overflow in the \"audioop\" module."

#: ../../../Misc/NEWS:978
msgid ""
"`Issue #27533 <https://bugs.python.org/27533>`__: Release GIL in nt._isdir"
msgstr ""
"`Issue #27533 <https://bugs.python.org/27533>`__: Release GIL in nt._isdir"

#: ../../../Misc/NEWS:980
msgid ""
"`Issue #17711 <https://bugs.python.org/17711>`__: Fixed unpickling by the "
"persistent ID with protocol 0. Original patch by Alexandre Vassalotti."
msgstr ""
"`Issue #17711 <https://bugs.python.org/17711>`__: Fixed unpickling by the "
"persistent ID with protocol 0. Original patch by Alexandre Vassalotti."

#: ../../../Misc/NEWS:983
msgid ""
"`Issue #27522 <https://bugs.python.org/27522>`__: Avoid an unintentional "
"reference cycle in email.feedparser."
msgstr ""
"`Issue #27522 <https://bugs.python.org/27522>`__: Avoid an unintentional "
"reference cycle in email.feedparser."

#: ../../../Misc/NEWS:985
msgid ""
"`Issue #27512 <https://bugs.python.org/27512>`__: Fix a segfault when os."
"fspath() called an __fspath__() method that raised an exception. Patch by "
"Xiang Zhang."
msgstr ""
"`Issue #27512 <https://bugs.python.org/27512>`__: Fix a segfault when os."
"fspath() called an __fspath__() method that raised an exception. Patch by "
"Xiang Zhang."

#: ../../../Misc/NEWS:991
msgid ""
"`Issue #27714 <https://bugs.python.org/27714>`__: text_textview and "
"test_autocomplete now pass when re-run in the same process.  This occurs "
"when test_idle fails when run with the -w option but without -jn.  Fix "
"warning from test_config."
msgstr ""
"`Issue #27714 <https://bugs.python.org/27714>`__: text_textview and "
"test_autocomplete now pass when re-run in the same process.  This occurs "
"when test_idle fails when run with the -w option but without -jn.  Fix "
"warning from test_config."

#: ../../../Misc/NEWS:995
msgid ""
"`Issue #27621 <https://bugs.python.org/27621>`__: Put query response "
"validation error messages in the query box itself instead of in a separate "
"massagebox.  Redo tests to match. Add Mac OSX refinements.  Original patch "
"by Mark Roseman."
msgstr ""
"`Issue #27621 <https://bugs.python.org/27621>`__: Put query response "
"validation error messages in the query box itself instead of in a separate "
"massagebox.  Redo tests to match. Add Mac OSX refinements.  Original patch "
"by Mark Roseman."

#: ../../../Misc/NEWS:999
msgid ""
"`Issue #27620 <https://bugs.python.org/27620>`__: Escape key now closes "
"Query box as cancelled."
msgstr ""
"`Issue #27620 <https://bugs.python.org/27620>`__: Escape key now closes "
"Query box as cancelled."

#: ../../../Misc/NEWS:1001
msgid ""
"`Issue #27609 <https://bugs.python.org/27609>`__: IDLE: tab after initial "
"whitespace should tab, not autocomplete. This fixes problem with writing "
"docstrings at least twice indented."
msgstr ""
"`Issue #27609 <https://bugs.python.org/27609>`__: IDLE: tab after initial "
"whitespace should tab, not autocomplete. This fixes problem with writing "
"docstrings at least twice indented."

#: ../../../Misc/NEWS:1005
msgid ""
"`Issue #27609 <https://bugs.python.org/27609>`__: Explicitly return None "
"when there are also non-None returns. In a few cases, reverse a condition "
"and eliminate a return."
msgstr ""
"`Issue #27609 <https://bugs.python.org/27609>`__: Explicitly return None "
"when there are also non-None returns. In a few cases, reverse a condition "
"and eliminate a return."

#: ../../../Misc/NEWS:1008
msgid ""
"`Issue #25507 <https://bugs.python.org/25507>`__: IDLE no longer runs buggy "
"code because of its tkinter imports. Users must include the same imports "
"required to run directly in Python."
msgstr ""
"`Issue #25507 <https://bugs.python.org/25507>`__: IDLE no longer runs buggy "
"code because of its tkinter imports. Users must include the same imports "
"required to run directly in Python."

#: ../../../Misc/NEWS:1011 ../../../Misc/NEWS:1192
msgid ""
"`Issue #27173 <https://bugs.python.org/27173>`__: Add 'IDLE Modern Unix' to "
"the built-in key sets. Make the default key set depend on the platform. Add "
"tests for the changes to the config module."
msgstr ""
"`Issue #27173 <https://bugs.python.org/27173>`__: Add 'IDLE Modern Unix' to "
"the built-in key sets. Make the default key set depend on the platform. Add "
"tests for the changes to the config module."

#: ../../../Misc/NEWS:1015 ../../../Misc/NEWS:1199
msgid ""
"`Issue #27452 <https://bugs.python.org/27452>`__: add line counter and crc "
"to IDLE configHandler test dump."
msgstr ""
"`Issue #27452 <https://bugs.python.org/27452>`__: add line counter and crc "
"to IDLE configHandler test dump."

#: ../../../Misc/NEWS:1020
msgid ""
"`Issue #25805 <https://bugs.python.org/25805>`__: Skip a test in "
"test_pkgutil as needed that doesn't work when ``__name__ == __main__``. "
"Patch by SilentGhost."
msgstr ""
"`Issue #25805 <https://bugs.python.org/25805>`__: Skip a test in "
"test_pkgutil as needed that doesn't work when ``__name__ == __main__``. "
"Patch by SilentGhost."

#: ../../../Misc/NEWS:1023
msgid ""
"`Issue #27472 <https://bugs.python.org/27472>`__: Add test.support."
"unix_shell as the path to the default shell."
msgstr ""
"`Issue #27472 <https://bugs.python.org/27472>`__: Add test.support."
"unix_shell as the path to the default shell."

#: ../../../Misc/NEWS:1025
msgid ""
"`Issue #27369 <https://bugs.python.org/27369>`__: In test_pyexpat, avoid "
"testing an error message detail that changed in Expat 2.2.0."
msgstr ""
"`Issue #27369 <https://bugs.python.org/27369>`__: In test_pyexpat, avoid "
"testing an error message detail that changed in Expat 2.2.0."

#: ../../../Misc/NEWS:1028
msgid ""
"`Issue #27594 <https://bugs.python.org/27594>`__: Prevent assertion error "
"when running test_ast with coverage enabled: ensure code object has a valid "
"first line number. Patch suggested by Ivan Levkivskyi."
msgstr ""
"`Issue #27594 <https://bugs.python.org/27594>`__: Prevent assertion error "
"when running test_ast with coverage enabled: ensure code object has a valid "
"first line number. Patch suggested by Ivan Levkivskyi."

#: ../../../Misc/NEWS:1035
msgid ""
"`Issue #27647 <https://bugs.python.org/27647>`__: Update bundled Tcl/Tk to "
"8.6.6."
msgstr ""
"`Issue #27647 <https://bugs.python.org/27647>`__: Update bundled Tcl/Tk to "
"8.6.6."

#: ../../../Misc/NEWS:1037
msgid ""
"`Issue #27610 <https://bugs.python.org/27610>`__: Adds PEP 514 metadata to "
"Windows installer"
msgstr ""
"`Issue #27610 <https://bugs.python.org/27610>`__: Adds PEP 514 metadata to "
"Windows installer"

#: ../../../Misc/NEWS:1039
msgid ""
"`Issue #27469 <https://bugs.python.org/27469>`__: Adds a shell extension to "
"the launcher so that drag and drop works correctly."
msgstr ""
"`Issue #27469 <https://bugs.python.org/27469>`__: Adds a shell extension to "
"the launcher so that drag and drop works correctly."

#: ../../../Misc/NEWS:1042
msgid ""
"`Issue #27309 <https://bugs.python.org/27309>`__: Enables proper Windows "
"styles in python[w].exe manifest."
msgstr ""
"`Issue #27309 <https://bugs.python.org/27309>`__: Enables proper Windows "
"styles in python[w].exe manifest."

#: ../../../Misc/NEWS:1047
msgid ""
"`Issue #27713 <https://bugs.python.org/27713>`__: Suppress spurious build "
"warnings when updating importlib's bootstrap files.  Patch by Xiang Zhang"
msgstr ""
"`Issue #27713 <https://bugs.python.org/27713>`__: Suppress spurious build "
"warnings when updating importlib's bootstrap files.  Patch by Xiang Zhang"

#: ../../../Misc/NEWS:1050
msgid ""
"`Issue #25825 <https://bugs.python.org/25825>`__: Correct the references to "
"Modules/python.exp, which is required on AIX.  The references were "
"accidentally changed in 3.5.0a1."
msgstr ""
"`Issue #25825 <https://bugs.python.org/25825>`__: Correct the references to "
"Modules/python.exp, which is required on AIX.  The references were "
"accidentally changed in 3.5.0a1."

#: ../../../Misc/NEWS:1053
msgid ""
"`Issue #27453 <https://bugs.python.org/27453>`__: CPP invocation in "
"configure must use CPPFLAGS. Patch by Chi Hsuan Yen."
msgstr ""
"`Issue #27453 <https://bugs.python.org/27453>`__: CPP invocation in "
"configure must use CPPFLAGS. Patch by Chi Hsuan Yen."

#: ../../../Misc/NEWS:1056
msgid ""
"`Issue #27641 <https://bugs.python.org/27641>`__: The configure script now "
"inserts comments into the makefile to prevent the pgen and _freeze_importlib "
"executables from being cross- compiled."
msgstr ""
"`Issue #27641 <https://bugs.python.org/27641>`__: The configure script now "
"inserts comments into the makefile to prevent the pgen and _freeze_importlib "
"executables from being cross- compiled."

#: ../../../Misc/NEWS:1060
msgid ""
"`Issue #26662 <https://bugs.python.org/26662>`__: Set PYTHON_FOR_GEN in "
"configure as the Python program to be used for file generation during the "
"build."
msgstr ""
"`Issue #26662 <https://bugs.python.org/26662>`__: Set PYTHON_FOR_GEN in "
"configure as the Python program to be used for file generation during the "
"build."

#: ../../../Misc/NEWS:1063
msgid ""
"`Issue #10910 <https://bugs.python.org/10910>`__: Avoid C++ compilation "
"errors on FreeBSD and OS X. Also update FreedBSD version checks for the "
"original ctype UTF-8 workaround."
msgstr ""
"`Issue #10910 <https://bugs.python.org/10910>`__: Avoid C++ compilation "
"errors on FreeBSD and OS X. Also update FreedBSD version checks for the "
"original ctype UTF-8 workaround."

#: ../../../Misc/NEWS:1068
msgid "Python 3.6.0 alpha 3"
msgstr ""

#: ../../../Misc/NEWS:1070
msgid "*Release date: 2016-07-11*"
msgstr ""

#: ../../../Misc/NEWS:1075
msgid ""
"`Issue #27473 <https://bugs.python.org/27473>`__: Fixed possible integer "
"overflow in bytes and bytearray concatenations.  Patch by Xiang Zhang."
msgstr ""
"`Issue #27473 <https://bugs.python.org/27473>`__: Fixed possible integer "
"overflow in bytes and bytearray concatenations.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1078
msgid ""
"`Issue #23034 <https://bugs.python.org/23034>`__: The output of a special "
"Python build with defined COUNT_ALLOCS, SHOW_ALLOC_COUNT or SHOW_TRACK_COUNT "
"macros is now off by  default.  It can be re-enabled using the \"-X "
"showalloccount\" option.  It now outputs to stderr instead of stdout."
msgstr ""
"`Issue #23034 <https://bugs.python.org/23034>`__: The output of a special "
"Python build with defined COUNT_ALLOCS, SHOW_ALLOC_COUNT or SHOW_TRACK_COUNT "
"macros is now off by  default.  It can be re-enabled using the \"-X "
"showalloccount\" option.  It now outputs to stderr instead of stdout."

#: ../../../Misc/NEWS:1083
msgid ""
"`Issue #27443 <https://bugs.python.org/27443>`__: __length_hint__() of "
"bytearray iterators no longer return a negative integer for a resized "
"bytearray."
msgstr ""
"`Issue #27443 <https://bugs.python.org/27443>`__: __length_hint__() of "
"bytearray iterators no longer return a negative integer for a resized "
"bytearray."

#: ../../../Misc/NEWS:1086
msgid ""
"`Issue #27007 <https://bugs.python.org/27007>`__: The fromhex() class "
"methods of bytes and bytearray subclasses now return an instance of "
"corresponding subclass."
msgstr ""
"`Issue #27007 <https://bugs.python.org/27007>`__: The fromhex() class "
"methods of bytes and bytearray subclasses now return an instance of "
"corresponding subclass."

#: ../../../Misc/NEWS:1092
msgid ""
"`Issue #26844 <https://bugs.python.org/26844>`__: Fix error message for imp."
"find_module() to refer to 'path' instead of 'name'. Patch by Lev Maximov."
msgstr ""
"`Issue #26844 <https://bugs.python.org/26844>`__: Fix error message for imp."
"find_module() to refer to 'path' instead of 'name'. Patch by Lev Maximov."

#: ../../../Misc/NEWS:1095
msgid ""
"`Issue #23804 <https://bugs.python.org/23804>`__: Fix SSL zero-length recv() "
"calls to not block and not raise an error about unclean EOF."
msgstr ""
"`Issue #23804 <https://bugs.python.org/23804>`__: Fix SSL zero-length recv() "
"calls to not block and not raise an error about unclean EOF."

#: ../../../Misc/NEWS:1098
msgid ""
"`Issue #27466 <https://bugs.python.org/27466>`__: Change time format "
"returned by http.cookie.time2netscape, confirming the netscape cookie format "
"and making it consistent with documentation."
msgstr ""
"`Issue #27466 <https://bugs.python.org/27466>`__: Change time format "
"returned by http.cookie.time2netscape, confirming the netscape cookie format "
"and making it consistent with documentation."

#: ../../../Misc/NEWS:1102
msgid ""
"`Issue #21708 <https://bugs.python.org/21708>`__: Deprecated dbm.dumb "
"behavior that differs from common dbm behavior: creating a database in 'r' "
"and 'w' modes and modifying a database in 'r' mode."
msgstr ""
"`Issue #21708 <https://bugs.python.org/21708>`__: Deprecated dbm.dumb "
"behavior that differs from common dbm behavior: creating a database in 'r' "
"and 'w' modes and modifying a database in 'r' mode."

#: ../../../Misc/NEWS:1106
msgid ""
"`Issue #26721 <https://bugs.python.org/26721>`__: Change the socketserver."
"StreamRequestHandler.wfile attribute to implement BufferedIOBase. In "
"particular, the write() method no longer does partial writes."
msgstr ""
"`Issue #26721 <https://bugs.python.org/26721>`__: Change the socketserver."
"StreamRequestHandler.wfile attribute to implement BufferedIOBase. In "
"particular, the write() method no longer does partial writes."

#: ../../../Misc/NEWS:1110
msgid ""
"`Issue #22115 <https://bugs.python.org/22115>`__: Added methods trace_add, "
"trace_remove and trace_info in the tkinter.Variable class.  They replace old "
"methods trace_variable, trace, trace_vdelete and trace_vinfo that use "
"obsolete Tcl commands and might not work in future versions of Tcl.  Fixed "
"old tracing methods: trace_vdelete() with wrong mode no longer break "
"tracing, trace_vinfo() now always returns a list of pairs of strings, "
"tracing in the \"u\" mode now works."
msgstr ""
"`Issue #22115 <https://bugs.python.org/22115>`__: Added methods trace_add, "
"trace_remove and trace_info in the tkinter.Variable class.  They replace old "
"methods trace_variable, trace, trace_vdelete and trace_vinfo that use "
"obsolete Tcl commands and might not work in future versions of Tcl.  Fixed "
"old tracing methods: trace_vdelete() with wrong mode no longer break "
"tracing, trace_vinfo() now always returns a list of pairs of strings, "
"tracing in the \"u\" mode now works."

#: ../../../Misc/NEWS:1117
msgid ""
"`Issue #26243 <https://bugs.python.org/26243>`__: Only the level argument to "
"zlib.compress() is keyword argument now.  The first argument is positional-"
"only."
msgstr ""
"`Issue #26243 <https://bugs.python.org/26243>`__: Only the level argument to "
"zlib.compress() is keyword argument now.  The first argument is positional-"
"only."

#: ../../../Misc/NEWS:1120
msgid ""
"`Issue #27038 <https://bugs.python.org/27038>`__: Expose the DirEntry type "
"as os.DirEntry. Code patch by Jelle Zijlstra."
msgstr ""
"`Issue #27038 <https://bugs.python.org/27038>`__: Expose the DirEntry type "
"as os.DirEntry. Code patch by Jelle Zijlstra."

#: ../../../Misc/NEWS:1123
msgid ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Update os.fspath()/"
"PyOS_FSPath() to check the return value of __fspath__() to be either str or "
"bytes."
msgstr ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Update os.fspath()/"
"PyOS_FSPath() to check the return value of __fspath__() to be either str or "
"bytes."

#: ../../../Misc/NEWS:1126
msgid ""
"`Issue #18726 <https://bugs.python.org/18726>`__: All optional parameters of "
"the dump(), dumps(), load() and loads() functions and JSONEncoder and "
"JSONDecoder class constructors in the json module are now keyword-only."
msgstr ""
"`Issue #18726 <https://bugs.python.org/18726>`__: All optional parameters of "
"the dump(), dumps(), load() and loads() functions and JSONEncoder and "
"JSONDecoder class constructors in the json module are now keyword-only."

#: ../../../Misc/NEWS:1130
msgid ""
"`Issue #27319 <https://bugs.python.org/27319>`__: Methods selection_set(), "
"selection_add(), selection_remove() and selection_toggle() of ttk.TreeView "
"now allow passing multiple items as multiple arguments instead of passing "
"them as a tuple.  Deprecated undocumented ability of calling the selection() "
"method with arguments."
msgstr ""
"`Issue #27319 <https://bugs.python.org/27319>`__: Methods selection_set(), "
"selection_add(), selection_remove() and selection_toggle() of ttk.TreeView "
"now allow passing multiple items as multiple arguments instead of passing "
"them as a tuple.  Deprecated undocumented ability of calling the selection() "
"method with arguments."

#: ../../../Misc/NEWS:1135
msgid ""
"`Issue #27079 <https://bugs.python.org/27079>`__: Fixed curses.ascii "
"functions isblank(), iscntrl() and ispunct()."
msgstr ""
"`Issue #27079 <https://bugs.python.org/27079>`__: Fixed curses.ascii "
"functions isblank(), iscntrl() and ispunct()."

#: ../../../Misc/NEWS:1137
msgid ""
"`Issue #27294 <https://bugs.python.org/27294>`__: Numerical state in the "
"repr for Tkinter event objects is now represented as a combination of known "
"flags."
msgstr ""
"`Issue #27294 <https://bugs.python.org/27294>`__: Numerical state in the "
"repr for Tkinter event objects is now represented as a combination of known "
"flags."

#: ../../../Misc/NEWS:1140
msgid ""
"`Issue #27177 <https://bugs.python.org/27177>`__: Match objects in the re "
"module now support index-like objects as group indices.  Based on patches by "
"Jeroen Demeyer and Xiang Zhang."
msgstr ""
"`Issue #27177 <https://bugs.python.org/27177>`__: Match objects in the re "
"module now support index-like objects as group indices.  Based on patches by "
"Jeroen Demeyer and Xiang Zhang."

#: ../../../Misc/NEWS:1143
msgid ""
"`Issue #26754 <https://bugs.python.org/26754>`__: Some functions (compile() "
"etc) accepted a filename argument encoded as an iterable of integers. Now "
"only strings and byte-like objects are accepted."
msgstr ""
"`Issue #26754 <https://bugs.python.org/26754>`__: Some functions (compile() "
"etc) accepted a filename argument encoded as an iterable of integers. Now "
"only strings and byte-like objects are accepted."

#: ../../../Misc/NEWS:1147
msgid ""
"`Issue #26536 <https://bugs.python.org/26536>`__: socket.ioctl now supports "
"SIO_LOOPBACK_FAST_PATH. Patch by Daniel Stokes."
msgstr ""
"`Issue #26536 <https://bugs.python.org/26536>`__: socket.ioctl now supports "
"SIO_LOOPBACK_FAST_PATH. Patch by Daniel Stokes."

#: ../../../Misc/NEWS:1150
msgid ""
"`Issue #27048 <https://bugs.python.org/27048>`__: Prevents distutils failing "
"on Windows when environment variables contain non-ASCII characters"
msgstr ""
"`Issue #27048 <https://bugs.python.org/27048>`__: Prevents distutils failing "
"on Windows when environment variables contain non-ASCII characters"

#: ../../../Misc/NEWS:1153
msgid ""
"`Issue #27330 <https://bugs.python.org/27330>`__: Fixed possible leaks in "
"the ctypes module."
msgstr ""
"`Issue #27330 <https://bugs.python.org/27330>`__: Fixed possible leaks in "
"the ctypes module."

#: ../../../Misc/NEWS:1155
msgid ""
"`Issue #27238 <https://bugs.python.org/27238>`__: Got rid of bare excepts in "
"the turtle module.  Original patch by Jelle Zijlstra."
msgstr ""
"`Issue #27238 <https://bugs.python.org/27238>`__: Got rid of bare excepts in "
"the turtle module.  Original patch by Jelle Zijlstra."

#: ../../../Misc/NEWS:1158
msgid ""
"`Issue #27122 <https://bugs.python.org/27122>`__: When an exception is "
"raised within the context being managed by a contextlib.ExitStack() and one "
"of the exit stack generators catches and raises it in a chain, do not re-"
"raise the original exception when exiting, let the new chained one through.  "
"This avoids the PEP 479 bug described in issue25782."
msgstr ""
"`Issue #27122 <https://bugs.python.org/27122>`__: When an exception is "
"raised within the context being managed by a contextlib.ExitStack() and one "
"of the exit stack generators catches and raises it in a chain, do not re-"
"raise the original exception when exiting, let the new chained one through.  "
"This avoids the PEP 479 bug described in issue25782."

#: ../../../Misc/NEWS:1164
msgid ""
"[Security] `Issue #27278 <https://bugs.python.org/27278>`__: Fix os."
"urandom() implementation using getrandom() on Linux.  Truncate size to "
"INT_MAX and loop until we collected enough random bytes, instead of casting "
"a directly Py_ssize_t to int."
msgstr ""

#: ../../../Misc/NEWS:1168
msgid ""
"`Issue #16864 <https://bugs.python.org/16864>`__: sqlite3.Cursor.lastrowid "
"now supports REPLACE statement. Initial patch by Alex LordThorsen."
msgstr ""
"`Issue #16864 <https://bugs.python.org/16864>`__: sqlite3.Cursor.lastrowid "
"now supports REPLACE statement. Initial patch by Alex LordThorsen."

#: ../../../Misc/NEWS:1171
msgid ""
"`Issue #26386 <https://bugs.python.org/26386>`__: Fixed ttk.TreeView "
"selection operations with item id's containing spaces."
msgstr ""
"`Issue #26386 <https://bugs.python.org/26386>`__: Fixed ttk.TreeView "
"selection operations with item id's containing spaces."

#: ../../../Misc/NEWS:1174
msgid ""
"`Issue #8637 <https://bugs.python.org/8637>`__: Honor a pager set by the env "
"var MANPAGER (in preference to one set by the env var PAGER)."
msgstr ""
"`Issue #8637 <https://bugs.python.org/8637>`__: Honor a pager set by the env "
"var MANPAGER (in preference to one set by the env var PAGER)."

#: ../../../Misc/NEWS:1177
msgid ""
"[Security] `Issue #22636 <https://bugs.python.org/22636>`__: Avoid shell "
"injection problems with ctypes.util.find_library()."
msgstr ""

#: ../../../Misc/NEWS:1180
msgid ""
"`Issue #16182 <https://bugs.python.org/16182>`__: Fix various functions in "
"the \"readline\" module to use the locale encoding, and fix get_begidx() and "
"get_endidx() to return code point indexes."
msgstr ""
"`Issue #16182 <https://bugs.python.org/16182>`__: Fix various functions in "
"the \"readline\" module to use the locale encoding, and fix get_begidx() and "
"get_endidx() to return code point indexes."

#: ../../../Misc/NEWS:1184
msgid ""
"`Issue #27392 <https://bugs.python.org/27392>`__: Add loop."
"connect_accepted_socket(). Patch by Jim Fulton."
msgstr ""
"`Issue #27392 <https://bugs.python.org/27392>`__: Add loop."
"connect_accepted_socket(). Patch by Jim Fulton."

#: ../../../Misc/NEWS:1190
msgid ""
"`Issue #27477 <https://bugs.python.org/27477>`__: IDLE search dialogs now "
"use ttk widgets."
msgstr ""
"`Issue #27477 <https://bugs.python.org/27477>`__: IDLE search dialogs now "
"use ttk widgets."

#: ../../../Misc/NEWS:1196
msgid ""
"`Issue #27452 <https://bugs.python.org/27452>`__: make command line \"idle-"
"test> python test_help.py\" work. __file__ is relative when python is "
"started in the file's directory."
msgstr ""
"`Issue #27452 <https://bugs.python.org/27452>`__: make command line \"idle-"
"test> python test_help.py\" work. __file__ is relative when python is "
"started in the file's directory."

#: ../../../Misc/NEWS:1201
msgid ""
"`Issue #27380 <https://bugs.python.org/27380>`__: IDLE: add query.py with "
"base Query dialog and ttk widgets. Module had subclasses SectionName, "
"ModuleName, and HelpSource, which are used to get information from users by "
"configdialog and file =>Load Module. Each subclass has itw own validity "
"checks.  Using ModuleName allows users to edit bad module names instead of "
"starting over. Add tests and delete the two files combined into the new one."
msgstr ""
"`Issue #27380 <https://bugs.python.org/27380>`__: IDLE: add query.py with "
"base Query dialog and ttk widgets. Module had subclasses SectionName, "
"ModuleName, and HelpSource, which are used to get information from users by "
"configdialog and file =>Load Module. Each subclass has itw own validity "
"checks.  Using ModuleName allows users to edit bad module names instead of "
"starting over. Add tests and delete the two files combined into the new one."

#: ../../../Misc/NEWS:1208
msgid ""
"`Issue #27372 <https://bugs.python.org/27372>`__: Test_idle no longer "
"changes the locale."
msgstr ""
"`Issue #27372 <https://bugs.python.org/27372>`__: Test_idle no longer "
"changes the locale."

#: ../../../Misc/NEWS:1210
msgid ""
"`Issue #27365 <https://bugs.python.org/27365>`__: Allow non-ascii chars in "
"IDLE NEWS.txt, for contributor names."
msgstr ""
"`Issue #27365 <https://bugs.python.org/27365>`__: Allow non-ascii chars in "
"IDLE NEWS.txt, for contributor names."

#: ../../../Misc/NEWS:1212
msgid ""
"`Issue #27245 <https://bugs.python.org/27245>`__: IDLE: Cleanly delete "
"custom themes and key bindings. Previously, when IDLE was started from a "
"console or by import, a cascade of warnings was emitted.  Patch by Serhiy "
"Storchaka."
msgstr ""
"`Issue #27245 <https://bugs.python.org/27245>`__: IDLE: Cleanly delete "
"custom themes and key bindings. Previously, when IDLE was started from a "
"console or by import, a cascade of warnings was emitted.  Patch by Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:1216
msgid ""
"`Issue #24137 <https://bugs.python.org/24137>`__: Run IDLE, test_idle, and "
"htest with tkinter default root disabled.  Fix code and tests that fail with "
"this restriction.  Fix htests to not create a second and redundant root and "
"mainloop."
msgstr ""
"`Issue #24137 <https://bugs.python.org/24137>`__: Run IDLE, test_idle, and "
"htest with tkinter default root disabled.  Fix code and tests that fail with "
"this restriction.  Fix htests to not create a second and redundant root and "
"mainloop."

#: ../../../Misc/NEWS:1220
msgid ""
"`Issue #27310 <https://bugs.python.org/27310>`__: Fix IDLE.app failure to "
"launch on OS X due to vestigial import."
msgstr ""
"`Issue #27310 <https://bugs.python.org/27310>`__: Fix IDLE.app failure to "
"launch on OS X due to vestigial import."

#: ../../../Misc/NEWS:1225
msgid ""
"`Issue #26754 <https://bugs.python.org/26754>`__: PyUnicode_FSDecoder() "
"accepted a filename argument encoded as an iterable of integers. Now only "
"strings and byte-like objects are accepted."
msgstr ""
"`Issue #26754 <https://bugs.python.org/26754>`__: PyUnicode_FSDecoder() "
"accepted a filename argument encoded as an iterable of integers. Now only "
"strings and byte-like objects are accepted."

#: ../../../Misc/NEWS:1231
msgid ""
"`Issue #28066 <https://bugs.python.org/28066>`__: Fix the logic that "
"searches build directories for generated include files when building outside "
"the source tree."
msgstr ""
"`Issue #28066 <https://bugs.python.org/28066>`__: Fix the logic that "
"searches build directories for generated include files when building outside "
"the source tree."

#: ../../../Misc/NEWS:1234
msgid ""
"`Issue #27442 <https://bugs.python.org/27442>`__: Expose the Android API "
"level that python was built against, in sysconfig.get_config_vars() as "
"'ANDROID_API_LEVEL'."
msgstr ""
"`Issue #27442 <https://bugs.python.org/27442>`__: Expose the Android API "
"level that python was built against, in sysconfig.get_config_vars() as "
"'ANDROID_API_LEVEL'."

#: ../../../Misc/NEWS:1237
msgid ""
"`Issue #27434 <https://bugs.python.org/27434>`__: The interpreter that runs "
"the cross-build, found in PATH, must now be of the same feature version (e."
"g. 3.6) as the source being built."
msgstr ""
"`Issue #27434 <https://bugs.python.org/27434>`__: The interpreter that runs "
"the cross-build, found in PATH, must now be of the same feature version (e."
"g. 3.6) as the source being built."

#: ../../../Misc/NEWS:1240
msgid ""
"`Issue #26930 <https://bugs.python.org/26930>`__: Update Windows builds to "
"use OpenSSL 1.0.2h."
msgstr ""
"`Issue #26930 <https://bugs.python.org/26930>`__: Update Windows builds to "
"use OpenSSL 1.0.2h."

#: ../../../Misc/NEWS:1242
msgid ""
"`Issue #23968 <https://bugs.python.org/23968>`__: Rename the platform "
"directory from plat-$(MACHDEP) to plat-$(PLATFORM_TRIPLET). Rename the "
"config directory (LIBPL) from config-$(LDVERSION) to config-$(LDVERSION)-"
"$(PLATFORM_TRIPLET). Install the platform specifc _sysconfigdata module into "
"the platform directory and rename it to include the ABIFLAGS."
msgstr ""
"`Issue #23968 <https://bugs.python.org/23968>`__: Rename the platform "
"directory from plat-$(MACHDEP) to plat-$(PLATFORM_TRIPLET). Rename the "
"config directory (LIBPL) from config-$(LDVERSION) to config-$(LDVERSION)-"
"$(PLATFORM_TRIPLET). Install the platform specifc _sysconfigdata module into "
"the platform directory and rename it to include the ABIFLAGS."

#: ../../../Misc/NEWS:1249
msgid "Don't use largefile support for GNU/Hurd."
msgstr ""

#: ../../../Misc/NEWS:1254
msgid ""
"`Issue #27332 <https://bugs.python.org/27332>`__: Fixed the type of the "
"first argument of module-level functions generated by Argument Clinic.  "
"Patch by Petr Viktorin."
msgstr ""
"`Issue #27332 <https://bugs.python.org/27332>`__: Fixed the type of the "
"first argument of module-level functions generated by Argument Clinic.  "
"Patch by Petr Viktorin."

#: ../../../Misc/NEWS:1257
msgid ""
"`Issue #27418 <https://bugs.python.org/27418>`__: Fixed Tools/importbench/"
"importbench.py."
msgstr ""
"`Issue #27418 <https://bugs.python.org/27418>`__: Fixed Tools/importbench/"
"importbench.py."

#: ../../../Misc/NEWS:1260 ../../../Misc/NEWS:1512 ../../../Misc/NEWS:2680
#: ../../../Misc/NEWS:3272 ../../../Misc/NEWS:3522 ../../../Misc/NEWS:3717
#: ../../../Misc/NEWS:4027 ../../../Misc/NEWS:6217 ../../../Misc/NEWS:6441
#: ../../../Misc/NEWS:6815 ../../../Misc/NEWS:7414 ../../../Misc/NEWS:7846
#: ../../../Misc/NEWS:8120 ../../../Misc/NEWS:8247 ../../../Misc/NEWS:8510
#: ../../../Misc/NEWS:10561
msgid "Documentation"
msgstr "Documentation"

#: ../../../Misc/NEWS:1262
msgid ""
"`Issue #19489 <https://bugs.python.org/19489>`__: Moved the search box from "
"the sidebar to the header and footer of each page.  Patch by Ammar Askar."
msgstr ""
"`Issue #19489 <https://bugs.python.org/19489>`__: Moved the search box from "
"the sidebar to the header and footer of each page.  Patch by Ammar Askar."

#: ../../../Misc/NEWS:1265
msgid ""
"`Issue #27285 <https://bugs.python.org/27285>`__: Update documentation to "
"reflect the deprecation of ``pyvenv`` and normalize on the term \"virtual "
"environment\". Patch by Steve Piercy."
msgstr ""
"`Issue #27285 <https://bugs.python.org/27285>`__: Update documentation to "
"reflect the deprecation of ``pyvenv`` and normalize on the term \"virtual "
"environment\". Patch by Steve Piercy."

#: ../../../Misc/NEWS:1271
msgid ""
"`Issue #27027 <https://bugs.python.org/27027>`__: Added test.support."
"is_android that is True when this is an Android build."
msgstr ""
"`Issue #27027 <https://bugs.python.org/27027>`__: Added test.support."
"is_android that is True when this is an Android build."

#: ../../../Misc/NEWS:1276
msgid "Python 3.6.0 alpha 2"
msgstr ""

#: ../../../Misc/NEWS:1278
msgid "*Release date: 2016-06-13*"
msgstr ""

#: ../../../Misc/NEWS:1283
msgid ""
"`Issue #27095 <https://bugs.python.org/27095>`__: Simplified MAKE_FUNCTION "
"and removed MAKE_CLOSURE opcodes. Patch by Demur Rumed."
msgstr ""
"`Issue #27095 <https://bugs.python.org/27095>`__: Simplified MAKE_FUNCTION "
"and removed MAKE_CLOSURE opcodes. Patch by Demur Rumed."

#: ../../../Misc/NEWS:1286
msgid ""
"`Issue #27190 <https://bugs.python.org/27190>`__: Raise NotSupportedError if "
"sqlite3 is older than 3.3.1. Patch by Dave Sawyer."
msgstr ""
"`Issue #27190 <https://bugs.python.org/27190>`__: Raise NotSupportedError if "
"sqlite3 is older than 3.3.1. Patch by Dave Sawyer."

#: ../../../Misc/NEWS:1289
msgid ""
"`Issue #27286 <https://bugs.python.org/27286>`__: Fixed compiling "
"BUILD_MAP_UNPACK_WITH_CALL opcode.  Calling function with generalized "
"unpacking (PEP 448) and conflicting keyword names could cause undefined "
"behavior."
msgstr ""
"`Issue #27286 <https://bugs.python.org/27286>`__: Fixed compiling "
"BUILD_MAP_UNPACK_WITH_CALL opcode.  Calling function with generalized "
"unpacking (PEP 448) and conflicting keyword names could cause undefined "
"behavior."

#: ../../../Misc/NEWS:1293
msgid ""
"`Issue #27140 <https://bugs.python.org/27140>`__: Added BUILD_CONST_KEY_MAP "
"opcode."
msgstr ""
"`Issue #27140 <https://bugs.python.org/27140>`__: Added BUILD_CONST_KEY_MAP "
"opcode."

#: ../../../Misc/NEWS:1295
msgid ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add support for os."
"PathLike objects to open() (part of PEP 519)."
msgstr ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add support for os."
"PathLike objects to open() (part of PEP 519)."

#: ../../../Misc/NEWS:1297
msgid ""
"`Issue #27066 <https://bugs.python.org/27066>`__: Fixed SystemError if a "
"custom opener (for open()) returns a negative number without setting an "
"exception."
msgstr ""
"`Issue #27066 <https://bugs.python.org/27066>`__: Fixed SystemError if a "
"custom opener (for open()) returns a negative number without setting an "
"exception."

#: ../../../Misc/NEWS:1300
msgid ""
"`Issue #26983 <https://bugs.python.org/26983>`__: float() now always return "
"an instance of exact float. The deprecation warning is emitted if __float__ "
"returns an instance of a strict subclass of float.  In a future versions of "
"Python this can be an error."
msgstr ""
"`Issue #26983 <https://bugs.python.org/26983>`__: float() now always return "
"an instance of exact float. The deprecation warning is emitted if __float__ "
"returns an instance of a strict subclass of float.  In a future versions of "
"Python this can be an error."

#: ../../../Misc/NEWS:1305
msgid ""
"`Issue #27097 <https://bugs.python.org/27097>`__: Python interpreter is now "
"about 7% faster due to optimized instruction decoding.  Based on patch by "
"Demur Rumed."
msgstr ""
"`Issue #27097 <https://bugs.python.org/27097>`__: Python interpreter is now "
"about 7% faster due to optimized instruction decoding.  Based on patch by "
"Demur Rumed."

#: ../../../Misc/NEWS:1308
msgid ""
"`Issue #26647 <https://bugs.python.org/26647>`__: Python interpreter now "
"uses 16-bit wordcode instead of bytecode. Patch by Demur Rumed."
msgstr ""
"`Issue #26647 <https://bugs.python.org/26647>`__: Python interpreter now "
"uses 16-bit wordcode instead of bytecode. Patch by Demur Rumed."

#: ../../../Misc/NEWS:1311
msgid ""
"`Issue #23275 <https://bugs.python.org/23275>`__: Allow assigning to an "
"empty target list in round brackets: () = iterable."
msgstr ""
"`Issue #23275 <https://bugs.python.org/23275>`__: Allow assigning to an "
"empty target list in round brackets: () = iterable."

#: ../../../Misc/NEWS:1314
msgid ""
"`Issue #27243 <https://bugs.python.org/27243>`__: Update the __aiter__ "
"protocol: instead of returning an awaitable that resolves to an asynchronous "
"iterator, the asynchronous iterator should be returned directly.  Doing the "
"former will trigger a PendingDeprecationWarning."
msgstr ""
"`Issue #27243 <https://bugs.python.org/27243>`__: Update the __aiter__ "
"protocol: instead of returning an awaitable that resolves to an asynchronous "
"iterator, the asynchronous iterator should be returned directly.  Doing the "
"former will trigger a PendingDeprecationWarning."

#: ../../../Misc/NEWS:1323
msgid ""
"Comment out socket (SO_REUSEPORT) and posix (O_SHLOCK, O_EXLOCK) constants "
"exposed on the API which are not implemented on GNU/Hurd. They would not "
"work at runtime anyway."
msgstr ""

#: ../../../Misc/NEWS:1327
msgid ""
"`Issue #25455 <https://bugs.python.org/25455>`__: Fixed crashes in repr of "
"recursive ElementTree.Element and functools.partial objects."
msgstr ""
"`Issue #25455 <https://bugs.python.org/25455>`__: Fixed crashes in repr of "
"recursive ElementTree.Element and functools.partial objects."

#: ../../../Misc/NEWS:1330
msgid ""
"`Issue #27294 <https://bugs.python.org/27294>`__: Improved repr for Tkinter "
"event objects."
msgstr ""
"`Issue #27294 <https://bugs.python.org/27294>`__: Improved repr for Tkinter "
"event objects."

#: ../../../Misc/NEWS:1332
msgid ""
"`Issue #20508 <https://bugs.python.org/20508>`__: Improve exception message "
"of IPv{4,6}Network.__getitem__. Patch by Gareth Rees."
msgstr ""
"`Issue #20508 <https://bugs.python.org/20508>`__: Improve exception message "
"of IPv{4,6}Network.__getitem__. Patch by Gareth Rees."

#: ../../../Misc/NEWS:1335
msgid ""
"[Security] `Issue #26556 <https://bugs.python.org/26556>`__: Update expat to "
"2.1.1, fixes CVE-2015-1283."
msgstr ""

#: ../../../Misc/NEWS:1337
msgid ""
"[Security] Fix TLS stripping vulnerability in smtplib, CVE-2016-0772. "
"Reported by Team Oststrom."
msgstr ""

#: ../../../Misc/NEWS:1340
msgid ""
"`Issue #21386 <https://bugs.python.org/21386>`__: Implement missing "
"IPv4Address.is_global property.  It was documented since 07a5610bae9d.  "
"Initial patch by Roger Luethi."
msgstr ""
"`Issue #21386 <https://bugs.python.org/21386>`__: Implement missing "
"IPv4Address.is_global property.  It was documented since 07a5610bae9d.  "
"Initial patch by Roger Luethi."

#: ../../../Misc/NEWS:1343
msgid ""
"`Issue #27029 <https://bugs.python.org/27029>`__: Removed deprecated support "
"of universal newlines mode from ZipFile.open()."
msgstr ""
"`Issue #27029 <https://bugs.python.org/27029>`__: Removed deprecated support "
"of universal newlines mode from ZipFile.open()."

#: ../../../Misc/NEWS:1346
msgid ""
"`Issue #27030 <https://bugs.python.org/27030>`__: Unknown escapes consisting "
"of ``'\\'`` and an ASCII letter in regular expressions now are errors.  The "
"re.LOCALE flag now can be used only with bytes patterns."
msgstr ""
"`Issue #27030 <https://bugs.python.org/27030>`__: Unknown escapes consisting "
"of ``'\\'`` and an ASCII letter in regular expressions now are errors.  The "
"re.LOCALE flag now can be used only with bytes patterns."

#: ../../../Misc/NEWS:1350
msgid ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add os.PathLike support to "
"DirEntry (part of PEP 519). Initial patch by Jelle Zijlstra."
msgstr ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add os.PathLike support to "
"DirEntry (part of PEP 519). Initial patch by Jelle Zijlstra."

#: ../../../Misc/NEWS:1353
msgid ""
"`Issue #20900 <https://bugs.python.org/20900>`__: distutils register command "
"now decodes HTTP responses correctly.  Initial patch by ingrid."
msgstr ""
"`Issue #20900 <https://bugs.python.org/20900>`__: distutils register command "
"now decodes HTTP responses correctly.  Initial patch by ingrid."

#: ../../../Misc/NEWS:1356
msgid ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add os.PathLike support to "
"pathlib, removing its provisional status (part of PEP 519). Initial patch by "
"Dusty Phillips."
msgstr ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add os.PathLike support to "
"pathlib, removing its provisional status (part of PEP 519). Initial patch by "
"Dusty Phillips."

#: ../../../Misc/NEWS:1359
msgid ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add support for os."
"PathLike objects to os.fsencode() and os.fsdecode() (part of PEP 519)."
msgstr ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add support for os."
"PathLike objects to os.fsencode() and os.fsdecode() (part of PEP 519)."

#: ../../../Misc/NEWS:1362
msgid ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Introduce os.PathLike and "
"os.fspath() (part of PEP 519)."
msgstr ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Introduce os.PathLike and "
"os.fspath() (part of PEP 519)."

#: ../../../Misc/NEWS:1364
msgid ""
"A new version of typing.py provides several new classes and features: "
"@overload outside stubs, Reversible, DefaultDict, Text, ContextManager, "
"Type[], NewType(), TYPE_CHECKING, and numerous bug fixes (note that some of "
"the new features are not yet implemented in mypy or other static "
"analyzers).  Also classes for PEP 492 (Awaitable, AsyncIterable, "
"AsyncIterator) have been added (in fact they made it into 3.5.1 but were "
"never mentioned)."
msgstr ""

#: ../../../Misc/NEWS:1372
msgid ""
"`Issue #25738 <https://bugs.python.org/25738>`__: Stop http.server."
"BaseHTTPRequestHandler.send_error() from sending a message body for 205 "
"Reset Content.  Also, don't send Content header fields in responses that "
"don't have a body.  Patch by Susumu Koshiba."
msgstr ""
"`Issue #25738 <https://bugs.python.org/25738>`__: Stop http.server."
"BaseHTTPRequestHandler.send_error() from sending a message body for 205 "
"Reset Content.  Also, don't send Content header fields in responses that "
"don't have a body.  Patch by Susumu Koshiba."

#: ../../../Misc/NEWS:1377
msgid ""
"`Issue #21313 <https://bugs.python.org/21313>`__: Fix the \"platform\" "
"module to tolerate when sys.version contains truncated build information."
msgstr ""
"`Issue #21313 <https://bugs.python.org/21313>`__: Fix the \"platform\" "
"module to tolerate when sys.version contains truncated build information."

#: ../../../Misc/NEWS:1380
msgid ""
"[Security] `Issue #26839 <https://bugs.python.org/26839>`__: On Linux, :func:"
"`os.urandom` now calls ``getrandom()`` with ``GRND_NONBLOCK`` to fall back "
"on reading ``/dev/urandom`` if the urandom entropy pool is not initialized "
"yet. Patch written by Colm Buckley."
msgstr ""

#: ../../../Misc/NEWS:1385
msgid ""
"`Issue #23883 <https://bugs.python.org/23883>`__: Added missing APIs to "
"__all__ to match the documented APIs for the following modules: cgi, "
"mailbox, mimetypes, plistlib and smtpd. Patches by Jacek Ko≈Çodziej."
msgstr ""
"`Issue #23883 <https://bugs.python.org/23883>`__: Added missing APIs to "
"__all__ to match the documented APIs for the following modules: cgi, "
"mailbox, mimetypes, plistlib and smtpd. Patches by Jacek Ko≈Çodziej."

#: ../../../Misc/NEWS:1389
msgid ""
"`Issue #27164 <https://bugs.python.org/27164>`__: In the zlib module, allow "
"decompressing raw Deflate streams with a predefined zdict.  Based on patch "
"by Xiang Zhang."
msgstr ""
"`Issue #27164 <https://bugs.python.org/27164>`__: In the zlib module, allow "
"decompressing raw Deflate streams with a predefined zdict.  Based on patch "
"by Xiang Zhang."

#: ../../../Misc/NEWS:1392
msgid ""
"`Issue #24291 <https://bugs.python.org/24291>`__: Fix wsgiref.simple_server."
"WSGIRequestHandler to completely write data to the client.  Previously it "
"could do partial writes and truncate data.  Also, wsgiref.handler."
"ServerHandler can now handle stdout doing partial writes, but this is "
"deprecated."
msgstr ""
"`Issue #24291 <https://bugs.python.org/24291>`__: Fix wsgiref.simple_server."
"WSGIRequestHandler to completely write data to the client.  Previously it "
"could do partial writes and truncate data.  Also, wsgiref.handler."
"ServerHandler can now handle stdout doing partial writes, but this is "
"deprecated."

#: ../../../Misc/NEWS:1397
msgid ""
"`Issue #21272 <https://bugs.python.org/21272>`__: Use _sysconfigdata.py to "
"initialize distutils.sysconfig."
msgstr ""
"`Issue #21272 <https://bugs.python.org/21272>`__: Use _sysconfigdata.py to "
"initialize distutils.sysconfig."

#: ../../../Misc/NEWS:1399
msgid ""
"`Issue #19611 <https://bugs.python.org/19611>`__: :mod:`inspect` now reports "
"the implicit ``.0`` parameters generated by the compiler for comprehension "
"and generator expression scopes as if they were positional-only parameters "
"called ``implicit0``. Patch by Jelle Zijlstra."
msgstr ""
"`Issue #19611 <https://bugs.python.org/19611>`__: :mod:`inspect` now reports "
"the implicit ``.0`` parameters generated by the compiler for comprehension "
"and generator expression scopes as if they were positional-only parameters "
"called ``implicit0``. Patch by Jelle Zijlstra."

#: ../../../Misc/NEWS:1404
msgid ""
"`Issue #26809 <https://bugs.python.org/26809>`__: Add ``__all__`` to :mod:"
"`string`.  Patch by Emanuel Barry."
msgstr ""
"`Issue #26809 <https://bugs.python.org/26809>`__: Add ``__all__`` to :mod:"
"`string`.  Patch by Emanuel Barry."

#: ../../../Misc/NEWS:1406
msgid ""
"`Issue #26373 <https://bugs.python.org/26373>`__: subprocess.Popen."
"communicate now correctly ignores BrokenPipeError when the child process "
"dies before .communicate() is called in more/all circumstances."
msgstr ""
"`Issue #26373 <https://bugs.python.org/26373>`__: subprocess.Popen."
"communicate now correctly ignores BrokenPipeError when the child process "
"dies before .communicate() is called in more/all circumstances."

#: ../../../Misc/NEWS:1410
msgid ""
"signal, socket, and ssl module IntEnum constant name lookups now return a "
"consistent name for values having multiple names.  Ex: signal.Signals(6) now "
"refers to itself as signal.SIGALRM rather than flipping between that and "
"signal.SIGIOT based on the interpreter's hash randomization seed."
msgstr ""

#: ../../../Misc/NEWS:1415
msgid ""
"`Issue #27167 <https://bugs.python.org/27167>`__: Clarify the subprocess."
"CalledProcessError error message text when the child process died due to a "
"signal."
msgstr ""
"`Issue #27167 <https://bugs.python.org/27167>`__: Clarify the subprocess."
"CalledProcessError error message text when the child process died due to a "
"signal."

#: ../../../Misc/NEWS:1418
msgid ""
"`Issue #25931 <https://bugs.python.org/25931>`__: Don't define socketserver."
"Forking* names on platforms such as Windows that do not support os.fork()."
msgstr ""
"`Issue #25931 <https://bugs.python.org/25931>`__: Don't define socketserver."
"Forking* names on platforms such as Windows that do not support os.fork()."

#: ../../../Misc/NEWS:1421
msgid ""
"`Issue #21776 <https://bugs.python.org/21776>`__: distutils.upload now "
"correctly handles HTTPError. Initial patch by Claudiu Popa."
msgstr ""
"`Issue #21776 <https://bugs.python.org/21776>`__: distutils.upload now "
"correctly handles HTTPError. Initial patch by Claudiu Popa."

#: ../../../Misc/NEWS:1424
msgid ""
"`Issue #26526 <https://bugs.python.org/26526>`__: Replace custom parse tree "
"validation in the parser module with a simple DFA validator."
msgstr ""
"`Issue #26526 <https://bugs.python.org/26526>`__: Replace custom parse tree "
"validation in the parser module with a simple DFA validator."

#: ../../../Misc/NEWS:1427
msgid ""
"`Issue #27114 <https://bugs.python.org/27114>`__: Fix SSLContext."
"_load_windows_store_certs fails with PermissionError"
msgstr ""
"`Issue #27114 <https://bugs.python.org/27114>`__: Fix SSLContext."
"_load_windows_store_certs fails with PermissionError"

#: ../../../Misc/NEWS:1430
msgid ""
"`Issue #18383 <https://bugs.python.org/18383>`__: Avoid creating duplicate "
"filters when using filterwarnings and simplefilter.  Based on patch by Alex "
"Shkop."
msgstr ""
"`Issue #18383 <https://bugs.python.org/18383>`__: Avoid creating duplicate "
"filters when using filterwarnings and simplefilter.  Based on patch by Alex "
"Shkop."

#: ../../../Misc/NEWS:1433
msgid ""
"`Issue #23026 <https://bugs.python.org/23026>`__: winreg.QueryValueEx() now "
"return an integer for REG_QWORD type."
msgstr ""
"`Issue #23026 <https://bugs.python.org/23026>`__: winreg.QueryValueEx() now "
"return an integer for REG_QWORD type."

#: ../../../Misc/NEWS:1435
msgid ""
"`Issue #26741 <https://bugs.python.org/26741>`__: subprocess.Popen "
"destructor now emits a ResourceWarning warning if the child process is still "
"running."
msgstr ""
"`Issue #26741 <https://bugs.python.org/26741>`__: subprocess.Popen "
"destructor now emits a ResourceWarning warning if the child process is still "
"running."

#: ../../../Misc/NEWS:1438
msgid ""
"`Issue #27056 <https://bugs.python.org/27056>`__: Optimize pickle.load() and "
"pickle.loads(), up to 10% faster to deserialize a lot of small objects."
msgstr ""
"`Issue #27056 <https://bugs.python.org/27056>`__: Optimize pickle.load() and "
"pickle.loads(), up to 10% faster to deserialize a lot of small objects."

#: ../../../Misc/NEWS:1441
msgid ""
"`Issue #21271 <https://bugs.python.org/21271>`__: New keyword only "
"parameters in reset_mock call."
msgstr ""
"`Issue #21271 <https://bugs.python.org/21271>`__: New keyword only "
"parameters in reset_mock call."

#: ../../../Misc/NEWS:1446
msgid ""
"`Issue #5124 <https://bugs.python.org/5124>`__: Paste with text selected now "
"replaces the selection on X11. This matches how paste works on Windows, Mac, "
"most modern Linux apps, and ttk widgets.  Original patch by Serhiy Storchaka."
msgstr ""
"`Issue #5124 <https://bugs.python.org/5124>`__: Paste with text selected now "
"replaces the selection on X11. This matches how paste works on Windows, Mac, "
"most modern Linux apps, and ttk widgets.  Original patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:1450
msgid ""
"`Issue #24750 <https://bugs.python.org/24750>`__: Switch all scrollbars in "
"IDLE to ttk versions. Where needed, minimal tests are added to cover changes."
msgstr ""
"`Issue #24750 <https://bugs.python.org/24750>`__: Switch all scrollbars in "
"IDLE to ttk versions. Where needed, minimal tests are added to cover changes."

#: ../../../Misc/NEWS:1453
msgid ""
"`Issue #24759 <https://bugs.python.org/24759>`__: IDLE requires tk 8.5 and "
"availability ttk widgets. Delete now unneeded tk version tests and code for "
"older versions. Add test for IDLE syntax colorizoer."
msgstr ""
"`Issue #24759 <https://bugs.python.org/24759>`__: IDLE requires tk 8.5 and "
"availability ttk widgets. Delete now unneeded tk version tests and code for "
"older versions. Add test for IDLE syntax colorizoer."

#: ../../../Misc/NEWS:1457
msgid ""
"`Issue #27239 <https://bugs.python.org/27239>`__: idlelib.macosx.isXyzTk "
"functions initialize as needed."
msgstr ""
"`Issue #27239 <https://bugs.python.org/27239>`__: idlelib.macosx.isXyzTk "
"functions initialize as needed."

#: ../../../Misc/NEWS:1459
msgid ""
"`Issue #27262 <https://bugs.python.org/27262>`__: move Aqua unbinding code, "
"which enable context menus, to maxosx."
msgstr ""
"`Issue #27262 <https://bugs.python.org/27262>`__: move Aqua unbinding code, "
"which enable context menus, to maxosx."

#: ../../../Misc/NEWS:1461
msgid ""
"`Issue #24759 <https://bugs.python.org/24759>`__: Make clear in idlelib."
"idle_test.__init__ that the directory is a private implementation of test."
"test_idle and tool for maintainers."
msgstr ""
"`Issue #24759 <https://bugs.python.org/24759>`__: Make clear in idlelib."
"idle_test.__init__ that the directory is a private implementation of test."
"test_idle and tool for maintainers."

#: ../../../Misc/NEWS:1464
msgid ""
"`Issue #27196 <https://bugs.python.org/27196>`__: Stop 'ThemeChanged' "
"warnings when running IDLE tests. These persisted after other warnings were "
"suppressed in #20567. Apply Serhiy Storchaka's update_idletasks solution to "
"four test files. Record this additional advice in idle_test/README.txt"
msgstr ""
"`Issue #27196 <https://bugs.python.org/27196>`__: Stop 'ThemeChanged' "
"warnings when running IDLE tests. These persisted after other warnings were "
"suppressed in #20567. Apply Serhiy Storchaka's update_idletasks solution to "
"four test files. Record this additional advice in idle_test/README.txt"

#: ../../../Misc/NEWS:1469
msgid ""
"`Issue #20567 <https://bugs.python.org/20567>`__: Revise idle_test/README."
"txt with advice about avoiding tk warning messages from tests.  Apply advice "
"to several IDLE tests."
msgstr ""
"`Issue #20567 <https://bugs.python.org/20567>`__: Revise idle_test/README."
"txt with advice about avoiding tk warning messages from tests.  Apply advice "
"to several IDLE tests."

#: ../../../Misc/NEWS:1472
msgid ""
"`Issue #24225 <https://bugs.python.org/24225>`__: Update idlelib/README.txt "
"with new file names and event handlers."
msgstr ""
"`Issue #24225 <https://bugs.python.org/24225>`__: Update idlelib/README.txt "
"with new file names and event handlers."

#: ../../../Misc/NEWS:1475
msgid ""
"`Issue #27156 <https://bugs.python.org/27156>`__: Remove obsolete code not "
"used by IDLE.  Replacements: 1. help.txt, replaced by help.html, is out-of-"
"date and should not be used. Its dedicated viewer has be replaced by the "
"html viewer in help.py. 2. ``import idlever; I = idlever.IDLE_VERSION`` is "
"the same as ``import sys; I = version[:version.index(' ')]`` 3. After ``ob = "
"stackviewer.VariablesTreeItem(*args)``, ``ob.keys() == list(ob.object."
"keys)``. 4. In macosc, runningAsOSXAPP == isAquaTk; idCarbonAquaTk == "
"isCarbonTk"
msgstr ""
"`Issue #27156 <https://bugs.python.org/27156>`__: Remove obsolete code not "
"used by IDLE.  Replacements: 1. help.txt, replaced by help.html, is out-of-"
"date and should not be used. Its dedicated viewer has be replaced by the "
"html viewer in help.py. 2. ``import idlever; I = idlever.IDLE_VERSION`` is "
"the same as ``import sys; I = version[:version.index(' ')]`` 3. After ``ob = "
"stackviewer.VariablesTreeItem(*args)``, ``ob.keys() == list(ob.object."
"keys)``. 4. In macosc, runningAsOSXAPP == isAquaTk; idCarbonAquaTk == "
"isCarbonTk"

#: ../../../Misc/NEWS:1484
msgid ""
"`Issue #27117 <https://bugs.python.org/27117>`__: Make colorizer htest and "
"turtledemo work with dark themes. Move code for configuring text widget "
"colors to a new function."
msgstr ""
"`Issue #27117 <https://bugs.python.org/27117>`__: Make colorizer htest and "
"turtledemo work with dark themes. Move code for configuring text widget "
"colors to a new function."

#: ../../../Misc/NEWS:1487
msgid ""
"`Issue #24225 <https://bugs.python.org/24225>`__: Rename many `idlelib/*.py` "
"and `idle_test/test_*.py` files. Edit files to replace old names with new "
"names when the old name referred to the module rather than the class it "
"contained. See the issue and IDLE section in What's New in 3.6 for more."
msgstr ""
"`Issue #24225 <https://bugs.python.org/24225>`__: Rename many `idlelib/*.py` "
"and `idle_test/test_*.py` files. Edit files to replace old names with new "
"names when the old name referred to the module rather than the class it "
"contained. See the issue and IDLE section in What's New in 3.6 for more."

#: ../../../Misc/NEWS:1492
msgid ""
"`Issue #26673 <https://bugs.python.org/26673>`__: When tk reports font size "
"as 0, change to size 10. Such fonts on Linux prevented the configuration "
"dialog from opening."
msgstr ""
"`Issue #26673 <https://bugs.python.org/26673>`__: When tk reports font size "
"as 0, change to size 10. Such fonts on Linux prevented the configuration "
"dialog from opening."

#: ../../../Misc/NEWS:1495
msgid ""
"`Issue #21939 <https://bugs.python.org/21939>`__: Add test for IDLE's "
"percolator. Original patch by Saimadhav Heblikar."
msgstr ""
"`Issue #21939 <https://bugs.python.org/21939>`__: Add test for IDLE's "
"percolator. Original patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:1498
msgid ""
"`Issue #21676 <https://bugs.python.org/21676>`__: Add test for IDLE's "
"replace dialog. Original patch by Saimadhav Heblikar."
msgstr ""
"`Issue #21676 <https://bugs.python.org/21676>`__: Add test for IDLE's "
"replace dialog. Original patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:1501
msgid ""
"`Issue #18410 <https://bugs.python.org/18410>`__: Add test for IDLE's search "
"dialog. Original patch by Westley Mart√≠nez."
msgstr ""
"`Issue #18410 <https://bugs.python.org/18410>`__: Add test for IDLE's search "
"dialog. Original patch by Westley Mart√≠nez."

#: ../../../Misc/NEWS:1504
msgid ""
"`Issue #21703 <https://bugs.python.org/21703>`__: Add test for undo "
"delegator.  Patch mostly by Saimadhav Heblikar ."
msgstr ""
"`Issue #21703 <https://bugs.python.org/21703>`__: Add test for undo "
"delegator.  Patch mostly by Saimadhav Heblikar ."

#: ../../../Misc/NEWS:1507
msgid ""
"`Issue #27044 <https://bugs.python.org/27044>`__: Add ConfigDialog."
"remove_var_callbacks to stop memory leaks."
msgstr ""
"`Issue #27044 <https://bugs.python.org/27044>`__: Add ConfigDialog."
"remove_var_callbacks to stop memory leaks."

#: ../../../Misc/NEWS:1509
msgid ""
"`Issue #23977 <https://bugs.python.org/23977>`__: Add more asserts to "
"test_delegator."
msgstr ""
"`Issue #23977 <https://bugs.python.org/23977>`__: Add more asserts to "
"test_delegator."

#: ../../../Misc/NEWS:1514
msgid ""
"`Issue #16484 <https://bugs.python.org/16484>`__: Change the default "
"PYTHONDOCS URL to \"https:\", and fix the resulting links to use lowercase.  "
"Patch by Sean Rodman, test by Kaushik Nadikuditi."
msgstr ""
"`Issue #16484 <https://bugs.python.org/16484>`__: Change the default "
"PYTHONDOCS URL to \"https:\", and fix the resulting links to use lowercase.  "
"Patch by Sean Rodman, test by Kaushik Nadikuditi."

#: ../../../Misc/NEWS:1518
msgid ""
"`Issue #24136 <https://bugs.python.org/24136>`__: Document the new PEP 448 "
"unpacking syntax of 3.5."
msgstr ""
"`Issue #24136 <https://bugs.python.org/24136>`__: Document the new PEP 448 "
"unpacking syntax of 3.5."

#: ../../../Misc/NEWS:1520
msgid ""
"`Issue #22558 <https://bugs.python.org/22558>`__: Add remaining doc links to "
"source code for Python-coded modules. Patch by Yoni Lavi."
msgstr ""
"`Issue #22558 <https://bugs.python.org/22558>`__: Add remaining doc links to "
"source code for Python-coded modules. Patch by Yoni Lavi."

#: ../../../Misc/NEWS:1526
msgid ""
"`Issue #25285 <https://bugs.python.org/25285>`__: regrtest now uses "
"subprocesses when the -j1 command line option is used: each test file runs "
"in a fresh child process. Before, the -j1 option was ignored."
msgstr ""
"`Issue #25285 <https://bugs.python.org/25285>`__: regrtest now uses "
"subprocesses when the -j1 command line option is used: each test file runs "
"in a fresh child process. Before, the -j1 option was ignored."

#: ../../../Misc/NEWS:1530
msgid ""
"`Issue #25285 <https://bugs.python.org/25285>`__: Tools/buildbot/test.bat "
"script now uses -j1 by default to run each test file in fresh child process."
msgstr ""
"`Issue #25285 <https://bugs.python.org/25285>`__: Tools/buildbot/test.bat "
"script now uses -j1 by default to run each test file in fresh child process."

#: ../../../Misc/NEWS:1536
msgid ""
"`Issue #27064 <https://bugs.python.org/27064>`__: The py.exe launcher now "
"defaults to Python 3. The Windows launcher ``py.exe`` no longer prefers an "
"installed Python 2 version over Python 3 by default when used interactively."
msgstr ""
"`Issue #27064 <https://bugs.python.org/27064>`__: The py.exe launcher now "
"defaults to Python 3. The Windows launcher ``py.exe`` no longer prefers an "
"installed Python 2 version over Python 3 by default when used interactively."

#: ../../../Misc/NEWS:1543
msgid ""
"`Issue #27229 <https://bugs.python.org/27229>`__: Fix the cross-compiling "
"pgen rule for in-tree builds.  Patch by Xavier de Gaye."
msgstr ""
"`Issue #27229 <https://bugs.python.org/27229>`__: Fix the cross-compiling "
"pgen rule for in-tree builds.  Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:1546
msgid ""
"`Issue #26930 <https://bugs.python.org/26930>`__: Update OS X 10.5+ 32-bit-"
"only installer to build and link with OpenSSL 1.0.2h."
msgstr ""
"`Issue #26930 <https://bugs.python.org/26930>`__: Update OS X 10.5+ 32-bit-"
"only installer to build and link with OpenSSL 1.0.2h."

#: ../../../Misc/NEWS:1550
msgid "Misc"
msgstr ""

#: ../../../Misc/NEWS:1552
msgid ""
"`Issue #17500 <https://bugs.python.org/17500>`__, and https://github.com/"
"python/pythondotorg/issues/945: Remove unused and outdated icons."
msgstr ""
"`Issue #17500 <https://bugs.python.org/17500>`__, and https://github.com/"
"python/pythondotorg/issues/945: Remove unused and outdated icons."

#: ../../../Misc/NEWS:1558
msgid ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add the PyOS_FSPath() "
"function (part of PEP 519)."
msgstr ""
"`Issue #27186 <https://bugs.python.org/27186>`__: Add the PyOS_FSPath() "
"function (part of PEP 519)."

#: ../../../Misc/NEWS:1560
msgid ""
"`Issue #26282 <https://bugs.python.org/26282>`__: "
"PyArg_ParseTupleAndKeywords() now supports positional-only parameters."
msgstr ""
"`Issue #26282 <https://bugs.python.org/26282>`__: "
"PyArg_ParseTupleAndKeywords() now supports positional-only parameters."

#: ../../../Misc/NEWS:1566
msgid ""
"`Issue #26282 <https://bugs.python.org/26282>`__: Argument Clinic now "
"supports positional-only and keyword parameters in the same function."
msgstr ""
"`Issue #26282 <https://bugs.python.org/26282>`__: Argument Clinic now "
"supports positional-only and keyword parameters in the same function."

#: ../../../Misc/NEWS:1571
msgid "Python 3.6.0 alpha 1"
msgstr ""

#: ../../../Misc/NEWS:1573
msgid "Release date: 2016-05-16"
msgstr ""

#: ../../../Misc/NEWS:1578
msgid ""
"`Issue #20041 <https://bugs.python.org/20041>`__: Fixed TypeError when frame."
"f_trace is set to None. Patch by Xavier de Gaye."
msgstr ""
"`Issue #20041 <https://bugs.python.org/20041>`__: Fixed TypeError when frame."
"f_trace is set to None. Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:1581
msgid ""
"`Issue #26168 <https://bugs.python.org/26168>`__: Fixed possible refleaks in "
"failing Py_BuildValue() with the \"N\" format unit."
msgstr ""
"`Issue #26168 <https://bugs.python.org/26168>`__: Fixed possible refleaks in "
"failing Py_BuildValue() with the \"N\" format unit."

#: ../../../Misc/NEWS:1584
msgid ""
"`Issue #26991 <https://bugs.python.org/26991>`__: Fix possible refleak when "
"creating a function with annotations."
msgstr ""
"`Issue #26991 <https://bugs.python.org/26991>`__: Fix possible refleak when "
"creating a function with annotations."

#: ../../../Misc/NEWS:1586
msgid ""
"`Issue #27039 <https://bugs.python.org/27039>`__: Fixed bytearray.remove() "
"for values greater than 127.  Based on patch by Joe Jevnik."
msgstr ""
"`Issue #27039 <https://bugs.python.org/27039>`__: Fixed bytearray.remove() "
"for values greater than 127.  Based on patch by Joe Jevnik."

#: ../../../Misc/NEWS:1589
msgid ""
"`Issue #23640 <https://bugs.python.org/23640>`__: int.from_bytes() no longer "
"bypasses constructors for subclasses."
msgstr ""
"`Issue #23640 <https://bugs.python.org/23640>`__: int.from_bytes() no longer "
"bypasses constructors for subclasses."

#: ../../../Misc/NEWS:1591
msgid ""
"`Issue #27005 <https://bugs.python.org/27005>`__: Optimized the float."
"fromhex() class method for exact float. It is now 2 times faster."
msgstr ""
"`Issue #27005 <https://bugs.python.org/27005>`__: Optimized the float."
"fromhex() class method for exact float. It is now 2 times faster."

#: ../../../Misc/NEWS:1594
msgid ""
"`Issue #18531 <https://bugs.python.org/18531>`__: Single var-keyword "
"argument of dict subtype was passed unscathed to the C-defined function.  "
"Now it is converted to exact dict."
msgstr ""
"`Issue #18531 <https://bugs.python.org/18531>`__: Single var-keyword "
"argument of dict subtype was passed unscathed to the C-defined function.  "
"Now it is converted to exact dict."

#: ../../../Misc/NEWS:1597
msgid ""
"`Issue #26811 <https://bugs.python.org/26811>`__: gc.get_objects() no longer "
"contains a broken tuple with NULL pointer."
msgstr ""
"`Issue #26811 <https://bugs.python.org/26811>`__: gc.get_objects() no longer "
"contains a broken tuple with NULL pointer."

#: ../../../Misc/NEWS:1600
msgid ""
"`Issue #20120 <https://bugs.python.org/20120>`__: Use RawConfigParser for ."
"pypirc parsing, removing support for interpolation unintentionally added "
"with move to Python 3. Behavior no longer does any interpolation in .pypirc "
"files, matching behavior in Python 2.7 and Setuptools 19.0."
msgstr ""
"`Issue #20120 <https://bugs.python.org/20120>`__: Use RawConfigParser for ."
"pypirc parsing, removing support for interpolation unintentionally added "
"with move to Python 3. Behavior no longer does any interpolation in .pypirc "
"files, matching behavior in Python 2.7 and Setuptools 19.0."

#: ../../../Misc/NEWS:1606
msgid ""
"`Issue #26249 <https://bugs.python.org/26249>`__: Memory functions of the :c:"
"func:`PyMem_Malloc` domain (:c:data:`PYMEM_DOMAIN_MEM`) now use the :ref:"
"`pymalloc allocator <pymalloc>` rather than system :c:func:`malloc`. "
"Applications calling :c:func:`PyMem_Malloc` without holding the GIL can now "
"crash: use ``PYTHONMALLOC=debug`` environment variable to validate the usage "
"of memory allocators in your application."
msgstr ""
"`Issue #26249 <https://bugs.python.org/26249>`__: Memory functions of the :c:"
"func:`PyMem_Malloc` domain (:c:data:`PYMEM_DOMAIN_MEM`) now use the :ref:"
"`pymalloc allocator <pymalloc>` rather than system :c:func:`malloc`. "
"Applications calling :c:func:`PyMem_Malloc` without holding the GIL can now "
"crash: use ``PYTHONMALLOC=debug`` environment variable to validate the usage "
"of memory allocators in your application."

#: ../../../Misc/NEWS:1613
msgid ""
"`Issue #26802 <https://bugs.python.org/26802>`__: Optimize function calls "
"only using unpacking like ``func(*tuple)`` (no other positional argument, no "
"keyword): avoid copying the tuple. Patch written by Joe Jevnik."
msgstr ""
"`Issue #26802 <https://bugs.python.org/26802>`__: Optimize function calls "
"only using unpacking like ``func(*tuple)`` (no other positional argument, no "
"keyword): avoid copying the tuple. Patch written by Joe Jevnik."

#: ../../../Misc/NEWS:1617
msgid ""
"`Issue #26659 <https://bugs.python.org/26659>`__: Make the builtin slice "
"type support cycle collection."
msgstr ""
"`Issue #26659 <https://bugs.python.org/26659>`__: Make the builtin slice "
"type support cycle collection."

#: ../../../Misc/NEWS:1619
msgid ""
"`Issue #26718 <https://bugs.python.org/26718>`__: super.__init__ no longer "
"leaks memory if called multiple times. NOTE: A direct call of super.__init__ "
"is not endorsed!"
msgstr ""
"`Issue #26718 <https://bugs.python.org/26718>`__: super.__init__ no longer "
"leaks memory if called multiple times. NOTE: A direct call of super.__init__ "
"is not endorsed!"

#: ../../../Misc/NEWS:1622
msgid ""
"`Issue #27138 <https://bugs.python.org/27138>`__: Fix the doc comment for "
"FileFinder.find_spec()."
msgstr ""
"`Issue #27138 <https://bugs.python.org/27138>`__: Fix the doc comment for "
"FileFinder.find_spec()."

#: ../../../Misc/NEWS:1624
msgid ""
"`Issue #27147 <https://bugs.python.org/27147>`__: Mention PEP 420 in the "
"importlib docs."
msgstr ""
"`Issue #27147 <https://bugs.python.org/27147>`__: Mention PEP 420 in the "
"importlib docs."

#: ../../../Misc/NEWS:1626
msgid ""
"`Issue #25339 <https://bugs.python.org/25339>`__: PYTHONIOENCODING now has "
"priority over locale in setting the error handler for stdin and stdout."
msgstr ""
"`Issue #25339 <https://bugs.python.org/25339>`__: PYTHONIOENCODING now has "
"priority over locale in setting the error handler for stdin and stdout."

#: ../../../Misc/NEWS:1629
msgid ""
"`Issue #26494 <https://bugs.python.org/26494>`__: Fixed crash on iterating "
"exhausting iterators. Affected classes are generic sequence iterators, "
"iterators of str, bytes, bytearray, list, tuple, set, frozenset, dict, "
"OrderedDict, corresponding views and os.scandir() iterator."
msgstr ""
"`Issue #26494 <https://bugs.python.org/26494>`__: Fixed crash on iterating "
"exhausting iterators. Affected classes are generic sequence iterators, "
"iterators of str, bytes, bytearray, list, tuple, set, frozenset, dict, "
"OrderedDict, corresponding views and os.scandir() iterator."

#: ../../../Misc/NEWS:1634
msgid ""
"`Issue #26574 <https://bugs.python.org/26574>`__: Optimize ``bytes."
"replace(b'', b'.')`` and ``bytearray.replace(b'', b'.')``. Patch written by "
"Josh Snider."
msgstr ""
"`Issue #26574 <https://bugs.python.org/26574>`__: Optimize ``bytes."
"replace(b'', b'.')`` and ``bytearray.replace(b'', b'.')``. Patch written by "
"Josh Snider."

#: ../../../Misc/NEWS:1637
msgid ""
"`Issue #26581 <https://bugs.python.org/26581>`__: If coding cookie is "
"specified multiple times on a line in Python source code file, only the "
"first one is taken to account."
msgstr ""
"`Issue #26581 <https://bugs.python.org/26581>`__: If coding cookie is "
"specified multiple times on a line in Python source code file, only the "
"first one is taken to account."

#: ../../../Misc/NEWS:1640
msgid ""
"`Issue #19711 <https://bugs.python.org/19711>`__: Add tests for reloading "
"namespace packages."
msgstr ""
"`Issue #19711 <https://bugs.python.org/19711>`__: Add tests for reloading "
"namespace packages."

#: ../../../Misc/NEWS:1642
msgid ""
"`Issue #21099 <https://bugs.python.org/21099>`__: Switch applicable "
"importlib tests to use PEP 451 API."
msgstr ""
"`Issue #21099 <https://bugs.python.org/21099>`__: Switch applicable "
"importlib tests to use PEP 451 API."

#: ../../../Misc/NEWS:1644
msgid ""
"`Issue #26563 <https://bugs.python.org/26563>`__: Debug hooks on Python "
"memory allocators now raise a fatal error if functions of the :c:func:"
"`PyMem_Malloc` family are called without holding the GIL."
msgstr ""
"`Issue #26563 <https://bugs.python.org/26563>`__: Debug hooks on Python "
"memory allocators now raise a fatal error if functions of the :c:func:"
"`PyMem_Malloc` family are called without holding the GIL."

#: ../../../Misc/NEWS:1648
msgid ""
"`Issue #26564 <https://bugs.python.org/26564>`__: On error, the debug hooks "
"on Python memory allocators now use the :mod:`tracemalloc` module to get the "
"traceback where a memory block was allocated."
msgstr ""
"`Issue #26564 <https://bugs.python.org/26564>`__: On error, the debug hooks "
"on Python memory allocators now use the :mod:`tracemalloc` module to get the "
"traceback where a memory block was allocated."

#: ../../../Misc/NEWS:1652
msgid ""
"`Issue #26558 <https://bugs.python.org/26558>`__: The debug hooks on Python "
"memory allocator :c:func:`PyObject_Malloc` now detect when functions are "
"called without holding the GIL."
msgstr ""
"`Issue #26558 <https://bugs.python.org/26558>`__: The debug hooks on Python "
"memory allocator :c:func:`PyObject_Malloc` now detect when functions are "
"called without holding the GIL."

#: ../../../Misc/NEWS:1656
msgid ""
"`Issue #26516 <https://bugs.python.org/26516>`__: Add :envvar:`PYTHONMALLOC` "
"environment variable to set the Python memory allocators and/or install "
"debug hooks."
msgstr ""
"`Issue #26516 <https://bugs.python.org/26516>`__: Add :envvar:`PYTHONMALLOC` "
"environment variable to set the Python memory allocators and/or install "
"debug hooks."

#: ../../../Misc/NEWS:1659
msgid ""
"`Issue #26516 <https://bugs.python.org/26516>`__: The :c:func:"
"`PyMem_SetupDebugHooks` function can now also be used on Python compiled in "
"release mode."
msgstr ""
"`Issue #26516 <https://bugs.python.org/26516>`__: The :c:func:"
"`PyMem_SetupDebugHooks` function can now also be used on Python compiled in "
"release mode."

#: ../../../Misc/NEWS:1662
msgid ""
"`Issue #26516 <https://bugs.python.org/26516>`__: The :envvar:"
"`PYTHONMALLOCSTATS` environment variable can now also be used on Python "
"compiled in release mode. It now has no effect if set to an empty string."
msgstr ""
"`Issue #26516 <https://bugs.python.org/26516>`__: The :envvar:"
"`PYTHONMALLOCSTATS` environment variable can now also be used on Python "
"compiled in release mode. It now has no effect if set to an empty string."

#: ../../../Misc/NEWS:1666
msgid ""
"`Issue #26516 <https://bugs.python.org/26516>`__: In debug mode, debug hooks "
"are now also installed on Python memory allocators when Python is configured "
"without pymalloc."
msgstr ""
"`Issue #26516 <https://bugs.python.org/26516>`__: In debug mode, debug hooks "
"are now also installed on Python memory allocators when Python is configured "
"without pymalloc."

#: ../../../Misc/NEWS:1669
msgid ""
"`Issue #26464 <https://bugs.python.org/26464>`__: Fix str.translate() when "
"string is ASCII and first replacements removes character, but next "
"replacement uses a non-ASCII character or a string longer than 1 character. "
"Regression introduced in Python 3.5.0."
msgstr ""
"`Issue #26464 <https://bugs.python.org/26464>`__: Fix str.translate() when "
"string is ASCII and first replacements removes character, but next "
"replacement uses a non-ASCII character or a string longer than 1 character. "
"Regression introduced in Python 3.5.0."

#: ../../../Misc/NEWS:1673
msgid ""
"`Issue #22836 <https://bugs.python.org/22836>`__: Ensure exception reports "
"from PyErr_Display() and PyErr_WriteUnraisable() are sensible even when "
"formatting them produces secondary errors.  This affects the reports "
"produced by sys.__excepthook__() and when __del__() raises an exception."
msgstr ""
"`Issue #22836 <https://bugs.python.org/22836>`__: Ensure exception reports "
"from PyErr_Display() and PyErr_WriteUnraisable() are sensible even when "
"formatting them produces secondary errors.  This affects the reports "
"produced by sys.__excepthook__() and when __del__() raises an exception."

#: ../../../Misc/NEWS:1678
msgid ""
"`Issue #26302 <https://bugs.python.org/26302>`__: Correct behavior to reject "
"comma as a legal character for cookie names."
msgstr ""
"`Issue #26302 <https://bugs.python.org/26302>`__: Correct behavior to reject "
"comma as a legal character for cookie names."

#: ../../../Misc/NEWS:1681
msgid ""
"`Issue #26136 <https://bugs.python.org/26136>`__: Upgrade the warning when a "
"generator raises StopIteration from PendingDeprecationWarning to "
"DeprecationWarning.  Patch by Anish Shah."
msgstr ""
"`Issue #26136 <https://bugs.python.org/26136>`__: Upgrade the warning when a "
"generator raises StopIteration from PendingDeprecationWarning to "
"DeprecationWarning.  Patch by Anish Shah."

#: ../../../Misc/NEWS:1685
msgid ""
"`Issue #26204 <https://bugs.python.org/26204>`__: The compiler now ignores "
"all constant statements: bytes, str, int, float, complex, name constants "
"(None, False, True), Ellipsis and ast.Constant; not only str and int. For "
"example, ``1.0`` is now ignored in ``def f(): 1.0``."
msgstr ""
"`Issue #26204 <https://bugs.python.org/26204>`__: The compiler now ignores "
"all constant statements: bytes, str, int, float, complex, name constants "
"(None, False, True), Ellipsis and ast.Constant; not only str and int. For "
"example, ``1.0`` is now ignored in ``def f(): 1.0``."

#: ../../../Misc/NEWS:1690
msgid ""
"`Issue #4806 <https://bugs.python.org/4806>`__: Avoid masking the original "
"TypeError exception when using star (*) unpacking in function calls.  Based "
"on patch by Hagen F√ºrstenau and Daniel Urban."
msgstr ""
"`Issue #4806 <https://bugs.python.org/4806>`__: Avoid masking the original "
"TypeError exception when using star (*) unpacking in function calls.  Based "
"on patch by Hagen F√ºrstenau and Daniel Urban."

#: ../../../Misc/NEWS:1694
msgid ""
"`Issue #26146 <https://bugs.python.org/26146>`__: Add a new kind of AST "
"node: ``ast.Constant``. It can be used by external AST optimizers, but the "
"compiler does not emit directly such node."
msgstr ""
"`Issue #26146 <https://bugs.python.org/26146>`__: Add a new kind of AST "
"node: ``ast.Constant``. It can be used by external AST optimizers, but the "
"compiler does not emit directly such node."

#: ../../../Misc/NEWS:1698
msgid ""
"`Issue #23601 <https://bugs.python.org/23601>`__:  Sped-up allocation of "
"dict key objects by using Python's small object allocator.  (Contributed by "
"Julian Taylor.)"
msgstr ""
"`Issue #23601 <https://bugs.python.org/23601>`__:  Sped-up allocation of "
"dict key objects by using Python's small object allocator.  (Contributed by "
"Julian Taylor.)"

#: ../../../Misc/NEWS:1701
msgid ""
"`Issue #18018 <https://bugs.python.org/18018>`__: Import raises ImportError "
"instead of SystemError if a relative import is attempted without a known "
"parent package."
msgstr ""
"`Issue #18018 <https://bugs.python.org/18018>`__: Import raises ImportError "
"instead of SystemError if a relative import is attempted without a known "
"parent package."

#: ../../../Misc/NEWS:1704
msgid ""
"`Issue #25843 <https://bugs.python.org/25843>`__: When compiling code, don't "
"merge constants if they are equal but have a different types. For example, "
"``f1, f2 = lambda: 1, lambda: 1.0`` is now correctly compiled to two "
"different functions: ``f1()`` returns ``1`` (``int``) and ``f2()`` returns "
"``1.0`` (``float``), even if ``1`` and ``1.0`` are equal."
msgstr ""
"`Issue #25843 <https://bugs.python.org/25843>`__: When compiling code, don't "
"merge constants if they are equal but have a different types. For example, "
"``f1, f2 = lambda: 1, lambda: 1.0`` is now correctly compiled to two "
"different functions: ``f1()`` returns ``1`` (``int``) and ``f2()`` returns "
"``1.0`` (``float``), even if ``1`` and ``1.0`` are equal."

#: ../../../Misc/NEWS:1710
msgid ""
"`Issue #26107 <https://bugs.python.org/26107>`__: The format of the "
"``co_lnotab`` attribute of code objects changes to support negative line "
"number delta."
msgstr ""
"`Issue #26107 <https://bugs.python.org/26107>`__: The format of the "
"``co_lnotab`` attribute of code objects changes to support negative line "
"number delta."

#: ../../../Misc/NEWS:1713
msgid ""
"`Issue #26154 <https://bugs.python.org/26154>`__: Add a new private "
"_PyThreadState_UncheckedGet() function to get the current Python thread "
"state, but don't issue a fatal error if it is NULL. This new function must "
"be used instead of accessing directly the _PyThreadState_Current variable.  "
"The variable is no more exposed since Python 3.5.1 to hide the exact "
"implementation of atomic C types, to avoid compiler issues."
msgstr ""
"`Issue #26154 <https://bugs.python.org/26154>`__: Add a new private "
"_PyThreadState_UncheckedGet() function to get the current Python thread "
"state, but don't issue a fatal error if it is NULL. This new function must "
"be used instead of accessing directly the _PyThreadState_Current variable.  "
"The variable is no more exposed since Python 3.5.1 to hide the exact "
"implementation of atomic C types, to avoid compiler issues."

#: ../../../Misc/NEWS:1720
msgid ""
"`Issue #25791 <https://bugs.python.org/25791>`__: If __package__ != __spec__."
"parent or if neither __package__ or __spec__ are defined then ImportWarning "
"is raised."
msgstr ""
"`Issue #25791 <https://bugs.python.org/25791>`__: If __package__ != __spec__."
"parent or if neither __package__ or __spec__ are defined then ImportWarning "
"is raised."

#: ../../../Misc/NEWS:1723
msgid ""
"`Issue #22995 <https://bugs.python.org/22995>`__: [UPDATE] Comment out the "
"one of the pickleability tests in _PyObject_GetState() due to regressions "
"observed in Cython-based projects."
msgstr ""
"`Issue #22995 <https://bugs.python.org/22995>`__: [UPDATE] Comment out the "
"one of the pickleability tests in _PyObject_GetState() due to regressions "
"observed in Cython-based projects."

#: ../../../Misc/NEWS:1726
msgid ""
"`Issue #25961 <https://bugs.python.org/25961>`__: Disallowed null characters "
"in the type name."
msgstr ""
"`Issue #25961 <https://bugs.python.org/25961>`__: Disallowed null characters "
"in the type name."

#: ../../../Misc/NEWS:1728
msgid ""
"`Issue #25973 <https://bugs.python.org/25973>`__: Fix segfault when an "
"invalid nonlocal statement binds a name starting with two underscores."
msgstr ""
"`Issue #25973 <https://bugs.python.org/25973>`__: Fix segfault when an "
"invalid nonlocal statement binds a name starting with two underscores."

#: ../../../Misc/NEWS:1731
msgid ""
"`Issue #22995 <https://bugs.python.org/22995>`__: Instances of extension "
"types with a state that aren't subclasses of list or dict and haven't "
"implemented any pickle-related methods (__reduce__, __reduce_ex__, "
"__getnewargs__, __getnewargs_ex__, or __getstate__), can no longer be "
"pickled.  Including memoryview."
msgstr ""
"`Issue #22995 <https://bugs.python.org/22995>`__: Instances of extension "
"types with a state that aren't subclasses of list or dict and haven't "
"implemented any pickle-related methods (__reduce__, __reduce_ex__, "
"__getnewargs__, __getnewargs_ex__, or __getstate__), can no longer be "
"pickled.  Including memoryview."

#: ../../../Misc/NEWS:1736
msgid ""
"`Issue #20440 <https://bugs.python.org/20440>`__: Massive replacing unsafe "
"attribute setting code with special macro Py_SETREF."
msgstr ""
"`Issue #20440 <https://bugs.python.org/20440>`__: Massive replacing unsafe "
"attribute setting code with special macro Py_SETREF."

#: ../../../Misc/NEWS:1739
msgid ""
"`Issue #25766 <https://bugs.python.org/25766>`__: Special method __bytes__() "
"now works in str subclasses."
msgstr ""
"`Issue #25766 <https://bugs.python.org/25766>`__: Special method __bytes__() "
"now works in str subclasses."

#: ../../../Misc/NEWS:1741
msgid ""
"`Issue #25421 <https://bugs.python.org/25421>`__: __sizeof__ methods of "
"builtin types now use dynamic basic size. This allows sys.getsize() to work "
"correctly with their subclasses with __slots__ defined."
msgstr ""
"`Issue #25421 <https://bugs.python.org/25421>`__: __sizeof__ methods of "
"builtin types now use dynamic basic size. This allows sys.getsize() to work "
"correctly with their subclasses with __slots__ defined."

#: ../../../Misc/NEWS:1745 ../../../Misc/NEWS:2863
msgid ""
"`Issue #25709 <https://bugs.python.org/25709>`__: Fixed problem with in-"
"place string concatenation and utf-8 cache."
msgstr ""
"`Issue #25709 <https://bugs.python.org/25709>`__: Fixed problem with in-"
"place string concatenation and utf-8 cache."

#: ../../../Misc/NEWS:1748
msgid ""
"`Issue #5319 <https://bugs.python.org/5319>`__: New Py_FinalizeEx() API "
"allowing Python to set an exit status of 120 on failure to flush buffered "
"streams."
msgstr ""
"`Issue #5319 <https://bugs.python.org/5319>`__: New Py_FinalizeEx() API "
"allowing Python to set an exit status of 120 on failure to flush buffered "
"streams."

#: ../../../Misc/NEWS:1751
msgid ""
"`Issue #25485 <https://bugs.python.org/25485>`__: telnetlib.Telnet is now a "
"context manager."
msgstr ""
"`Issue #25485 <https://bugs.python.org/25485>`__: telnetlib.Telnet is now a "
"context manager."

#: ../../../Misc/NEWS:1753
msgid ""
"`Issue #24097 <https://bugs.python.org/24097>`__: Fixed crash in object."
"__reduce__() if slot name is freed inside __getattr__."
msgstr ""
"`Issue #24097 <https://bugs.python.org/24097>`__: Fixed crash in object."
"__reduce__() if slot name is freed inside __getattr__."

#: ../../../Misc/NEWS:1756
msgid ""
"`Issue #24731 <https://bugs.python.org/24731>`__: Fixed crash on converting "
"objects with special methods __bytes__, __trunc__, and __float__ returning "
"instances of subclasses of bytes, int, and float to subclasses of bytes, "
"int, and float correspondingly."
msgstr ""
"`Issue #24731 <https://bugs.python.org/24731>`__: Fixed crash on converting "
"objects with special methods __bytes__, __trunc__, and __float__ returning "
"instances of subclasses of bytes, int, and float to subclasses of bytes, "
"int, and float correspondingly."

#: ../../../Misc/NEWS:1760 ../../../Misc/NEWS:2881
msgid ""
"`Issue #25630 <https://bugs.python.org/25630>`__: Fix a possible segfault "
"during argument parsing in functions that accept filesystem paths."
msgstr ""
"`Issue #25630 <https://bugs.python.org/25630>`__: Fix a possible segfault "
"during argument parsing in functions that accept filesystem paths."

#: ../../../Misc/NEWS:1763 ../../../Misc/NEWS:2884
msgid ""
"`Issue #23564 <https://bugs.python.org/23564>`__: Fixed a partially broken "
"sanity check in the _posixsubprocess internals regarding how fds_to_pass "
"were passed to the child.  The bug had no actual impact as subprocess.py "
"already avoided it."
msgstr ""
"`Issue #23564 <https://bugs.python.org/23564>`__: Fixed a partially broken "
"sanity check in the _posixsubprocess internals regarding how fds_to_pass "
"were passed to the child.  The bug had no actual impact as subprocess.py "
"already avoided it."

#: ../../../Misc/NEWS:1767 ../../../Misc/NEWS:2888
msgid ""
"`Issue #25388 <https://bugs.python.org/25388>`__: Fixed tokenizer crash when "
"processing undecodable source code with a null byte."
msgstr ""
"`Issue #25388 <https://bugs.python.org/25388>`__: Fixed tokenizer crash when "
"processing undecodable source code with a null byte."

#: ../../../Misc/NEWS:1770 ../../../Misc/NEWS:2891
msgid ""
"`Issue #25462 <https://bugs.python.org/25462>`__: The hash of the key now is "
"calculated only once in most operations in C implementation of OrderedDict."
msgstr ""
"`Issue #25462 <https://bugs.python.org/25462>`__: The hash of the key now is "
"calculated only once in most operations in C implementation of OrderedDict."

#: ../../../Misc/NEWS:1773 ../../../Misc/NEWS:2894
msgid ""
"`Issue #22995 <https://bugs.python.org/22995>`__: Default implementation of "
"__reduce__ and __reduce_ex__ now rejects builtin types with not defined "
"__new__."
msgstr ""
"`Issue #22995 <https://bugs.python.org/22995>`__: Default implementation of "
"__reduce__ and __reduce_ex__ now rejects builtin types with not defined "
"__new__."

#: ../../../Misc/NEWS:1776 ../../../Misc/NEWS:2900
msgid ""
"`Issue #24802 <https://bugs.python.org/24802>`__: Avoid buffer overreads "
"when int(), float(), compile(), exec() and eval() are passed bytes-like "
"objects.  These objects are not necessarily terminated by a null byte, but "
"the functions assumed they were."
msgstr ""
"`Issue #24802 <https://bugs.python.org/24802>`__: Avoid buffer overreads "
"when int(), float(), compile(), exec() and eval() are passed bytes-like "
"objects.  These objects are not necessarily terminated by a null byte, but "
"the functions assumed they were."

#: ../../../Misc/NEWS:1780 ../../../Misc/NEWS:2897
msgid ""
"`Issue #25555 <https://bugs.python.org/25555>`__: Fix parser and AST: fill "
"lineno and col_offset of \"arg\" node when compiling AST from Python objects."
msgstr ""
"`Issue #25555 <https://bugs.python.org/25555>`__: Fix parser and AST: fill "
"lineno and col_offset of \"arg\" node when compiling AST from Python objects."

#: ../../../Misc/NEWS:1783 ../../../Misc/NEWS:2904
msgid ""
"`Issue #24726 <https://bugs.python.org/24726>`__: Fixed a crash and leaking "
"NULL in repr() of OrderedDict that was mutated by direct calls of dict "
"methods."
msgstr ""
"`Issue #24726 <https://bugs.python.org/24726>`__: Fixed a crash and leaking "
"NULL in repr() of OrderedDict that was mutated by direct calls of dict "
"methods."

#: ../../../Misc/NEWS:1786 ../../../Misc/NEWS:2907
msgid ""
"`Issue #25449 <https://bugs.python.org/25449>`__: Iterating OrderedDict with "
"keys with unstable hash now raises KeyError in C implementations as well as "
"in Python implementation."
msgstr ""
"`Issue #25449 <https://bugs.python.org/25449>`__: Iterating OrderedDict with "
"keys with unstable hash now raises KeyError in C implementations as well as "
"in Python implementation."

#: ../../../Misc/NEWS:1789 ../../../Misc/NEWS:2910
msgid ""
"`Issue #25395 <https://bugs.python.org/25395>`__: Fixed crash when highly "
"nested OrderedDict structures were garbage collected."
msgstr ""
"`Issue #25395 <https://bugs.python.org/25395>`__: Fixed crash when highly "
"nested OrderedDict structures were garbage collected."

#: ../../../Misc/NEWS:1792
msgid ""
"`Issue #25401 <https://bugs.python.org/25401>`__: Optimize bytes.fromhex() "
"and bytearray.fromhex(): they are now between 2x and 3.5x faster."
msgstr ""
"`Issue #25401 <https://bugs.python.org/25401>`__: Optimize bytes.fromhex() "
"and bytearray.fromhex(): they are now between 2x and 3.5x faster."

#: ../../../Misc/NEWS:1795
msgid ""
"`Issue #25399 <https://bugs.python.org/25399>`__: Optimize bytearray % args "
"using the new private _PyBytesWriter API. Formatting is now between 2.5 and "
"5 times faster."
msgstr ""
"`Issue #25399 <https://bugs.python.org/25399>`__: Optimize bytearray % args "
"using the new private _PyBytesWriter API. Formatting is now between 2.5 and "
"5 times faster."

#: ../../../Misc/NEWS:1798 ../../../Misc/NEWS:2913
msgid ""
"`Issue #25274 <https://bugs.python.org/25274>`__: sys.setrecursionlimit() "
"now raises a RecursionError if the new recursion limit is too low depending "
"at the current recursion depth. Modify also the \"lower-water mark\" formula "
"to make it monotonic. This mark is used to decide when the overflowed flag "
"of the thread state is reset."
msgstr ""
"`Issue #25274 <https://bugs.python.org/25274>`__: sys.setrecursionlimit() "
"now raises a RecursionError if the new recursion limit is too low depending "
"at the current recursion depth. Modify also the \"lower-water mark\" formula "
"to make it monotonic. This mark is used to decide when the overflowed flag "
"of the thread state is reset."

#: ../../../Misc/NEWS:1803 ../../../Misc/NEWS:2918
msgid ""
"`Issue #24402 <https://bugs.python.org/24402>`__: Fix input() to prompt to "
"the redirected stdout when sys.stdout.fileno() fails."
msgstr ""
"`Issue #24402 <https://bugs.python.org/24402>`__: Fix input() to prompt to "
"the redirected stdout when sys.stdout.fileno() fails."

#: ../../../Misc/NEWS:1806
msgid ""
"`Issue #25349 <https://bugs.python.org/25349>`__: Optimize bytes % args "
"using the new private _PyBytesWriter API. Formatting is now up to 2 times "
"faster."
msgstr ""
"`Issue #25349 <https://bugs.python.org/25349>`__: Optimize bytes % args "
"using the new private _PyBytesWriter API. Formatting is now up to 2 times "
"faster."

#: ../../../Misc/NEWS:1809 ../../../Misc/NEWS:2921
msgid ""
"`Issue #24806 <https://bugs.python.org/24806>`__: Prevent builtin types that "
"are not allowed to be subclassed from being subclassed through multiple "
"inheritance."
msgstr ""
"`Issue #24806 <https://bugs.python.org/24806>`__: Prevent builtin types that "
"are not allowed to be subclassed from being subclassed through multiple "
"inheritance."

#: ../../../Misc/NEWS:1812
msgid ""
"`Issue #25301 <https://bugs.python.org/25301>`__: The UTF-8 decoder is now "
"up to 15 times as fast for error handlers: ``ignore``, ``replace`` and "
"``surrogateescape``."
msgstr ""
"`Issue #25301 <https://bugs.python.org/25301>`__: The UTF-8 decoder is now "
"up to 15 times as fast for error handlers: ``ignore``, ``replace`` and "
"``surrogateescape``."

#: ../../../Misc/NEWS:1815 ../../../Misc/NEWS:2924
msgid ""
"`Issue #24848 <https://bugs.python.org/24848>`__: Fixed a number of bugs in "
"UTF-7 decoding of misformed data."
msgstr ""
"`Issue #24848 <https://bugs.python.org/24848>`__: Fixed a number of bugs in "
"UTF-7 decoding of misformed data."

#: ../../../Misc/NEWS:1817
msgid ""
"`Issue #25267 <https://bugs.python.org/25267>`__: The UTF-8 encoder is now "
"up to 75 times as fast for error handlers: ``ignore``, ``replace``, "
"``surrogateescape``, ``surrogatepass``. Patch co-written with Serhiy "
"Storchaka."
msgstr ""
"`Issue #25267 <https://bugs.python.org/25267>`__: The UTF-8 encoder is now "
"up to 75 times as fast for error handlers: ``ignore``, ``replace``, "
"``surrogateescape``, ``surrogatepass``. Patch co-written with Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:1821 ../../../Misc/NEWS:2926
msgid ""
"`Issue #25280 <https://bugs.python.org/25280>`__: Import trace messages "
"emitted in verbose (-v) mode are no longer formatted twice."
msgstr ""
"`Issue #25280 <https://bugs.python.org/25280>`__: Import trace messages "
"emitted in verbose (-v) mode are no longer formatted twice."

#: ../../../Misc/NEWS:1824
msgid ""
"`Issue #25227 <https://bugs.python.org/25227>`__: Optimize ASCII and latin1 "
"encoders with the ``surrogateescape`` error handler: the encoders are now up "
"to 3 times as fast. Initial patch written by Serhiy Storchaka."
msgstr ""
"`Issue #25227 <https://bugs.python.org/25227>`__: Optimize ASCII and latin1 "
"encoders with the ``surrogateescape`` error handler: the encoders are now up "
"to 3 times as fast. Initial patch written by Serhiy Storchaka."

#: ../../../Misc/NEWS:1828 ../../../Misc/NEWS:2929
msgid ""
"`Issue #25003 <https://bugs.python.org/25003>`__: On Solaris 11.3 or newer, "
"os.urandom() now uses the getrandom() function instead of the getentropy() "
"function. The getentropy() function is blocking to generate very good "
"quality entropy, os.urandom() doesn't need such high-quality entropy."
msgstr ""
"`Issue #25003 <https://bugs.python.org/25003>`__: On Solaris 11.3 or newer, "
"os.urandom() now uses the getrandom() function instead of the getentropy() "
"function. The getentropy() function is blocking to generate very good "
"quality entropy, os.urandom() doesn't need such high-quality entropy."

#: ../../../Misc/NEWS:1833
msgid ""
"`Issue #9232 <https://bugs.python.org/9232>`__: Modify Python's grammar to "
"allow trailing commas in the argument list of a function declaration.  For "
"example, \"def f(\\*, a = 3,): pass\" is now legal. Patch from Mark "
"Dickinson."
msgstr ""
"`Issue #9232 <https://bugs.python.org/9232>`__: Modify Python's grammar to "
"allow trailing commas in the argument list of a function declaration.  For "
"example, \"def f(\\*, a = 3,): pass\" is now legal. Patch from Mark "
"Dickinson."

#: ../../../Misc/NEWS:1837
msgid ""
"`Issue #24965 <https://bugs.python.org/24965>`__: Implement PEP 498 "
"\"Literal String Interpolation\". This allows you to embed expressions "
"inside f-strings, which are converted to normal strings at run time. Given "
"x=3, then f'value={x}' == 'value=3'. Patch by Eric V. Smith."
msgstr ""
"`Issue #24965 <https://bugs.python.org/24965>`__: Implement PEP 498 "
"\"Literal String Interpolation\". This allows you to embed expressions "
"inside f-strings, which are converted to normal strings at run time. Given "
"x=3, then f'value={x}' == 'value=3'. Patch by Eric V. Smith."

#: ../../../Misc/NEWS:1842
msgid ""
"`Issue #26478 <https://bugs.python.org/26478>`__: Fix semantic bugs when "
"using binary operators with dictionary views and tuples."
msgstr ""
"`Issue #26478 <https://bugs.python.org/26478>`__: Fix semantic bugs when "
"using binary operators with dictionary views and tuples."

#: ../../../Misc/NEWS:1845
msgid ""
"`Issue #26171 <https://bugs.python.org/26171>`__: Fix possible integer "
"overflow and heap corruption in zipimporter.get_data()."
msgstr ""
"`Issue #26171 <https://bugs.python.org/26171>`__: Fix possible integer "
"overflow and heap corruption in zipimporter.get_data()."

#: ../../../Misc/NEWS:1848
msgid ""
"`Issue #25660 <https://bugs.python.org/25660>`__: Fix TAB key behaviour in "
"REPL with readline."
msgstr ""
"`Issue #25660 <https://bugs.python.org/25660>`__: Fix TAB key behaviour in "
"REPL with readline."

#: ../../../Misc/NEWS:1850
msgid ""
"`Issue #26288 <https://bugs.python.org/26288>`__: Optimize PyLong_AsDouble."
msgstr ""
"`Issue #26288 <https://bugs.python.org/26288>`__: Optimize PyLong_AsDouble."

#: ../../../Misc/NEWS:1852
msgid ""
"Issues #26289 and #26315: Optimize floor and modulo division for single-"
"digit longs.  Microbenchmarks show 2-2.5x improvement.  Built-in 'divmod' "
"function is now also ~10% faster."
msgstr ""

#: ../../../Misc/NEWS:1856
msgid ""
"`Issue #25887 <https://bugs.python.org/25887>`__: Raise a RuntimeError when "
"a coroutine object is awaited more than once."
msgstr ""
"`Issue #25887 <https://bugs.python.org/25887>`__: Raise a RuntimeError when "
"a coroutine object is awaited more than once."

#: ../../../Misc/NEWS:1862
msgid ""
"`Issue #27057 <https://bugs.python.org/27057>`__: Fix os.set_inheritable() "
"on Android, ioctl() is blocked by SELinux and fails with EACCESS. The "
"function now falls back to fcntl(). Patch written by Micha≈Ç Bednarski."
msgstr ""
"`Issue #27057 <https://bugs.python.org/27057>`__: Fix os.set_inheritable() "
"on Android, ioctl() is blocked by SELinux and fails with EACCESS. The "
"function now falls back to fcntl(). Patch written by Micha≈Ç Bednarski."

#: ../../../Misc/NEWS:1866
msgid ""
"`Issue #27014 <https://bugs.python.org/27014>`__: Fix infinite recursion "
"using typing.py.  Thanks to Kalle Tuure!"
msgstr ""
"`Issue #27014 <https://bugs.python.org/27014>`__: Fix infinite recursion "
"using typing.py.  Thanks to Kalle Tuure!"

#: ../../../Misc/NEWS:1868
msgid ""
"`Issue #27031 <https://bugs.python.org/27031>`__: Removed dummy methods in "
"Tkinter widget classes: tk_menuBar() and tk_bindForTraversal()."
msgstr ""
"`Issue #27031 <https://bugs.python.org/27031>`__: Removed dummy methods in "
"Tkinter widget classes: tk_menuBar() and tk_bindForTraversal()."

#: ../../../Misc/NEWS:1871
msgid ""
"`Issue #14132 <https://bugs.python.org/14132>`__: Fix urllib.request "
"redirect handling when the target only has a query string.  Original fix by "
"J√°n Janech."
msgstr ""
"`Issue #14132 <https://bugs.python.org/14132>`__: Fix urllib.request "
"redirect handling when the target only has a query string.  Original fix by "
"J√°n Janech."

#: ../../../Misc/NEWS:1874
msgid ""
"`Issue #17214 <https://bugs.python.org/17214>`__: The \"urllib.request\" "
"module now percent-encodes non-ASCII bytes found in redirect target URLs.  "
"Some servers send Location header fields with non-ASCII bytes, but \"http."
"client\" requires the request target to be ASCII-encodable, otherwise a "
"UnicodeEncodeError is raised.  Based on patch by Christian Heimes."
msgstr ""
"`Issue #17214 <https://bugs.python.org/17214>`__: The \"urllib.request\" "
"module now percent-encodes non-ASCII bytes found in redirect target URLs.  "
"Some servers send Location header fields with non-ASCII bytes, but \"http."
"client\" requires the request target to be ASCII-encodable, otherwise a "
"UnicodeEncodeError is raised.  Based on patch by Christian Heimes."

#: ../../../Misc/NEWS:1880
msgid ""
"`Issue #27033 <https://bugs.python.org/27033>`__: The default value of the "
"decode_data parameter for smtpd.SMTPChannel and smtpd.SMTPServer "
"constructors is changed to False."
msgstr ""
"`Issue #27033 <https://bugs.python.org/27033>`__: The default value of the "
"decode_data parameter for smtpd.SMTPChannel and smtpd.SMTPServer "
"constructors is changed to False."

#: ../../../Misc/NEWS:1883
msgid ""
"`Issue #27034 <https://bugs.python.org/27034>`__: Removed deprecated class "
"asynchat.fifo."
msgstr ""
"`Issue #27034 <https://bugs.python.org/27034>`__: Removed deprecated class "
"asynchat.fifo."

#: ../../../Misc/NEWS:1885
msgid ""
"`Issue #26870 <https://bugs.python.org/26870>`__: Added readline."
"set_auto_history(), which can stop entries being automatically added to the "
"history list.  Based on patch by Tyler Crompton."
msgstr ""
"`Issue #26870 <https://bugs.python.org/26870>`__: Added readline."
"set_auto_history(), which can stop entries being automatically added to the "
"history list.  Based on patch by Tyler Crompton."

#: ../../../Misc/NEWS:1889
msgid ""
"`Issue #26039 <https://bugs.python.org/26039>`__: zipfile.ZipFile.open() can "
"now be used to write data into a ZIP file, as well as for extracting data.  "
"Patch by Thomas Kluyver."
msgstr ""
"`Issue #26039 <https://bugs.python.org/26039>`__: zipfile.ZipFile.open() can "
"now be used to write data into a ZIP file, as well as for extracting data.  "
"Patch by Thomas Kluyver."

#: ../../../Misc/NEWS:1892
msgid ""
"`Issue #26892 <https://bugs.python.org/26892>`__: Honor debuglevel flag in "
"urllib.request.HTTPHandler. Patch contributed by Chi Hsuan Yen."
msgstr ""
"`Issue #26892 <https://bugs.python.org/26892>`__: Honor debuglevel flag in "
"urllib.request.HTTPHandler. Patch contributed by Chi Hsuan Yen."

#: ../../../Misc/NEWS:1895
msgid ""
"`Issue #22274 <https://bugs.python.org/22274>`__: In the subprocess module, "
"allow stderr to be redirected to stdout even when stdout is not redirected.  "
"Patch by Akira Li."
msgstr ""
"`Issue #22274 <https://bugs.python.org/22274>`__: In the subprocess module, "
"allow stderr to be redirected to stdout even when stdout is not redirected.  "
"Patch by Akira Li."

#: ../../../Misc/NEWS:1898
msgid ""
"`Issue #26807 <https://bugs.python.org/26807>`__: mock_open 'files' no "
"longer error on readline at end of file. Patch from Yolanda Robla."
msgstr ""
"`Issue #26807 <https://bugs.python.org/26807>`__: mock_open 'files' no "
"longer error on readline at end of file. Patch from Yolanda Robla."

#: ../../../Misc/NEWS:1901
msgid ""
"`Issue #25745 <https://bugs.python.org/25745>`__: Fixed leaking a userptr in "
"curses panel destructor."
msgstr ""
"`Issue #25745 <https://bugs.python.org/25745>`__: Fixed leaking a userptr in "
"curses panel destructor."

#: ../../../Misc/NEWS:1903
msgid ""
"`Issue #26977 <https://bugs.python.org/26977>`__: Removed unnecessary, and "
"ignored, call to sum of squares helper in statistics.pvariance."
msgstr ""
"`Issue #26977 <https://bugs.python.org/26977>`__: Removed unnecessary, and "
"ignored, call to sum of squares helper in statistics.pvariance."

#: ../../../Misc/NEWS:1906
msgid ""
"`Issue #26002 <https://bugs.python.org/26002>`__: Use bisect in statistics."
"median instead of a linear search. Patch by Upendra Kuma."
msgstr ""
"`Issue #26002 <https://bugs.python.org/26002>`__: Use bisect in statistics."
"median instead of a linear search. Patch by Upendra Kuma."

#: ../../../Misc/NEWS:1909
msgid ""
"`Issue #25974 <https://bugs.python.org/25974>`__: Make use of new Decimal."
"as_integer_ratio() method in statistics module. Patch by Stefan Krah."
msgstr ""
"`Issue #25974 <https://bugs.python.org/25974>`__: Make use of new Decimal."
"as_integer_ratio() method in statistics module. Patch by Stefan Krah."

#: ../../../Misc/NEWS:1912
msgid ""
"`Issue #26996 <https://bugs.python.org/26996>`__: Add secrets module as "
"described in PEP 506."
msgstr ""
"`Issue #26996 <https://bugs.python.org/26996>`__: Add secrets module as "
"described in PEP 506."

#: ../../../Misc/NEWS:1914
msgid ""
"`Issue #26881 <https://bugs.python.org/26881>`__: The modulefinder module "
"now supports extended opcode arguments."
msgstr ""
"`Issue #26881 <https://bugs.python.org/26881>`__: The modulefinder module "
"now supports extended opcode arguments."

#: ../../../Misc/NEWS:1916
msgid ""
"`Issue #23815 <https://bugs.python.org/23815>`__: Fixed crashes related to "
"directly created instances of types in _tkinter and curses.panel modules."
msgstr ""
"`Issue #23815 <https://bugs.python.org/23815>`__: Fixed crashes related to "
"directly created instances of types in _tkinter and curses.panel modules."

#: ../../../Misc/NEWS:1919
msgid ""
"`Issue #17765 <https://bugs.python.org/17765>`__: weakref.ref() no longer "
"silently ignores keyword arguments. Patch by Georg Brandl."
msgstr ""
"`Issue #17765 <https://bugs.python.org/17765>`__: weakref.ref() no longer "
"silently ignores keyword arguments. Patch by Georg Brandl."

#: ../../../Misc/NEWS:1922
msgid ""
"`Issue #26873 <https://bugs.python.org/26873>`__: xmlrpc now raises "
"ResponseError on unsupported type tags instead of silently return incorrect "
"result."
msgstr ""
"`Issue #26873 <https://bugs.python.org/26873>`__: xmlrpc now raises "
"ResponseError on unsupported type tags instead of silently return incorrect "
"result."

#: ../../../Misc/NEWS:1925
msgid ""
"`Issue #26915 <https://bugs.python.org/26915>`__:  The __contains__ methods "
"in the collections ABCs now check for identity before checking equality.  "
"This better matches the behavior of the concrete classes, allows sensible "
"handling of NaNs, and makes it easier to reason about container invariants."
msgstr ""
"`Issue #26915 <https://bugs.python.org/26915>`__:  The __contains__ methods "
"in the collections ABCs now check for identity before checking equality.  "
"This better matches the behavior of the concrete classes, allows sensible "
"handling of NaNs, and makes it easier to reason about container invariants."

#: ../../../Misc/NEWS:1930
msgid ""
"`Issue #26711 <https://bugs.python.org/26711>`__: Fixed the comparison of "
"plistlib.Data with other types."
msgstr ""
"`Issue #26711 <https://bugs.python.org/26711>`__: Fixed the comparison of "
"plistlib.Data with other types."

#: ../../../Misc/NEWS:1932
msgid ""
"`Issue #24114 <https://bugs.python.org/24114>`__: Fix an uninitialized "
"variable in `ctypes.util`."
msgstr ""
"`Issue #24114 <https://bugs.python.org/24114>`__: Fix an uninitialized "
"variable in `ctypes.util`."

#: ../../../Misc/NEWS:1934
msgid ""
"The bug only occurs on SunOS when the ctypes implementation searches for the "
"`crle` program.  Patch by Xiang Zhang.  Tested on SunOS by Kees Bos."
msgstr ""

#: ../../../Misc/NEWS:1938
msgid ""
"`Issue #26864 <https://bugs.python.org/26864>`__: In urllib.request, change "
"the proxy bypass host checking against no_proxy to be case-insensitive, and "
"to not match unrelated host names that happen to have a bypassed hostname as "
"a suffix.  Patch by Xiang Zhang."
msgstr ""
"`Issue #26864 <https://bugs.python.org/26864>`__: In urllib.request, change "
"the proxy bypass host checking against no_proxy to be case-insensitive, and "
"to not match unrelated host names that happen to have a bypassed hostname as "
"a suffix.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1943
msgid ""
"`Issue #24902 <https://bugs.python.org/24902>`__: Print server URL on http."
"server startup.  Initial patch by Felix Kaiser."
msgstr ""
"`Issue #24902 <https://bugs.python.org/24902>`__: Print server URL on http."
"server startup.  Initial patch by Felix Kaiser."

#: ../../../Misc/NEWS:1946
msgid ""
"`Issue #25788 <https://bugs.python.org/25788>`__: fileinput.hook_encoded() "
"now supports an \"errors\" argument for passing to open.  Original patch by "
"Joseph Hackman."
msgstr ""
"`Issue #25788 <https://bugs.python.org/25788>`__: fileinput.hook_encoded() "
"now supports an \"errors\" argument for passing to open.  Original patch by "
"Joseph Hackman."

#: ../../../Misc/NEWS:1949
msgid ""
"`Issue #26634 <https://bugs.python.org/26634>`__: recursive_repr() now sets "
"__qualname__ of wrapper.  Patch by Xiang Zhang."
msgstr ""
"`Issue #26634 <https://bugs.python.org/26634>`__: recursive_repr() now sets "
"__qualname__ of wrapper.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1952
msgid ""
"`Issue #26804 <https://bugs.python.org/26804>`__: urllib.request will prefer "
"lower_case proxy environment variables over UPPER_CASE or Mixed_Case ones. "
"Patch contributed by Hans-Peter Jansen."
msgstr ""
"`Issue #26804 <https://bugs.python.org/26804>`__: urllib.request will prefer "
"lower_case proxy environment variables over UPPER_CASE or Mixed_Case ones. "
"Patch contributed by Hans-Peter Jansen."

#: ../../../Misc/NEWS:1956
msgid ""
"`Issue #26837 <https://bugs.python.org/26837>`__: assertSequenceEqual() now "
"correctly outputs non-stringified differing items (like bytes in the -b "
"mode).  This affects assertListEqual() and assertTupleEqual()."
msgstr ""
"`Issue #26837 <https://bugs.python.org/26837>`__: assertSequenceEqual() now "
"correctly outputs non-stringified differing items (like bytes in the -b "
"mode).  This affects assertListEqual() and assertTupleEqual()."

#: ../../../Misc/NEWS:1960
msgid ""
"`Issue #26041 <https://bugs.python.org/26041>`__: Remove \"will be removed "
"in Python 3.7\" from deprecation messages of platform.dist() and platform."
"linux_distribution(). Patch by Kumaripaba Miyurusara Athukorala."
msgstr ""
"`Issue #26041 <https://bugs.python.org/26041>`__: Remove \"will be removed "
"in Python 3.7\" from deprecation messages of platform.dist() and platform."
"linux_distribution(). Patch by Kumaripaba Miyurusara Athukorala."

#: ../../../Misc/NEWS:1964
msgid ""
"`Issue #26822 <https://bugs.python.org/26822>`__: itemgetter, attrgetter and "
"methodcaller objects no longer silently ignore keyword arguments."
msgstr ""
"`Issue #26822 <https://bugs.python.org/26822>`__: itemgetter, attrgetter and "
"methodcaller objects no longer silently ignore keyword arguments."

#: ../../../Misc/NEWS:1967
msgid ""
"`Issue #26733 <https://bugs.python.org/26733>`__: Disassembling a class now "
"disassembles class and static methods. Patch by Xiang Zhang."
msgstr ""
"`Issue #26733 <https://bugs.python.org/26733>`__: Disassembling a class now "
"disassembles class and static methods. Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1970
msgid ""
"`Issue #26801 <https://bugs.python.org/26801>`__: Fix error handling in :"
"func:`shutil.get_terminal_size`, catch :exc:`AttributeError` instead of :exc:"
"`NameError`. Patch written by Emanuel Barry."
msgstr ""
"`Issue #26801 <https://bugs.python.org/26801>`__: Fix error handling in :"
"func:`shutil.get_terminal_size`, catch :exc:`AttributeError` instead of :exc:"
"`NameError`. Patch written by Emanuel Barry."

#: ../../../Misc/NEWS:1974
msgid ""
"`Issue #24838 <https://bugs.python.org/24838>`__: tarfile's ustar and gnu "
"formats now correctly calculate name and link field limits for multibyte "
"character encodings like utf-8."
msgstr ""
"`Issue #24838 <https://bugs.python.org/24838>`__: tarfile's ustar and gnu "
"formats now correctly calculate name and link field limits for multibyte "
"character encodings like utf-8."

#: ../../../Misc/NEWS:1977
msgid ""
"[Security] `Issue #26657 <https://bugs.python.org/26657>`__: Fix directory "
"traversal vulnerability with http.server on Windows.  This fixes a "
"regression that was introduced in 3.3.4rc1 and 3.4.0rc1.  Based on patch by "
"Philipp Hagemeister."
msgstr ""

#: ../../../Misc/NEWS:1981
msgid ""
"`Issue #26717 <https://bugs.python.org/26717>`__: Stop encoding Latin-1-ized "
"WSGI paths with UTF-8.  Patch by Anthony Sottile."
msgstr ""
"`Issue #26717 <https://bugs.python.org/26717>`__: Stop encoding Latin-1-ized "
"WSGI paths with UTF-8.  Patch by Anthony Sottile."

#: ../../../Misc/NEWS:1984
msgid ""
"`Issue #26782 <https://bugs.python.org/26782>`__: Add STARTUPINFO to "
"subprocess.__all__ on Windows."
msgstr ""
"`Issue #26782 <https://bugs.python.org/26782>`__: Add STARTUPINFO to "
"subprocess.__all__ on Windows."

#: ../../../Misc/NEWS:1986
msgid ""
"`Issue #26404 <https://bugs.python.org/26404>`__: Add context manager to "
"socketserver.  Patch by Aviv Palivoda."
msgstr ""
"`Issue #26404 <https://bugs.python.org/26404>`__: Add context manager to "
"socketserver.  Patch by Aviv Palivoda."

#: ../../../Misc/NEWS:1988
msgid ""
"`Issue #26735 <https://bugs.python.org/26735>`__: Fix :func:`os.urandom` on "
"Solaris 11.3 and newer when reading more than 1,024 bytes: call "
"``getrandom()`` multiple times with a limit of 1024 bytes per call."
msgstr ""
"`Issue #26735 <https://bugs.python.org/26735>`__: Fix :func:`os.urandom` on "
"Solaris 11.3 and newer when reading more than 1,024 bytes: call "
"``getrandom()`` multiple times with a limit of 1024 bytes per call."

#: ../../../Misc/NEWS:1992
msgid ""
"`Issue #26585 <https://bugs.python.org/26585>`__: Eliminate http.server."
"_quote_html() and use html.escape(quote=False).  Patch by Xiang Zhang."
msgstr ""
"`Issue #26585 <https://bugs.python.org/26585>`__: Eliminate http.server."
"_quote_html() and use html.escape(quote=False).  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1995
msgid ""
"`Issue #26685 <https://bugs.python.org/26685>`__: Raise OSError if closing a "
"socket fails."
msgstr ""
"`Issue #26685 <https://bugs.python.org/26685>`__: Raise OSError if closing a "
"socket fails."

#: ../../../Misc/NEWS:1997
msgid ""
"`Issue #16329 <https://bugs.python.org/16329>`__: Add .webm to mimetypes."
"types_map.  Patch by Giampaolo Rodola'."
msgstr ""
"`Issue #16329 <https://bugs.python.org/16329>`__: Add .webm to mimetypes."
"types_map.  Patch by Giampaolo Rodola'."

#: ../../../Misc/NEWS:1999
msgid ""
"`Issue #13952 <https://bugs.python.org/13952>`__: Add .csv to mimetypes."
"types_map.  Patch by Geoff Wilson."
msgstr ""
"`Issue #13952 <https://bugs.python.org/13952>`__: Add .csv to mimetypes."
"types_map.  Patch by Geoff Wilson."

#: ../../../Misc/NEWS:2001
msgid ""
"`Issue #26587 <https://bugs.python.org/26587>`__: the site module now "
"allows .pth files to specify files to be added to sys.path (e.g. zip files)."
msgstr ""
"`Issue #26587 <https://bugs.python.org/26587>`__: the site module now "
"allows .pth files to specify files to be added to sys.path (e.g. zip files)."

#: ../../../Misc/NEWS:2004
msgid ""
"`Issue #25609 <https://bugs.python.org/25609>`__: Introduce contextlib."
"AbstractContextManager and typing.ContextManager."
msgstr ""
"`Issue #25609 <https://bugs.python.org/25609>`__: Introduce contextlib."
"AbstractContextManager and typing.ContextManager."

#: ../../../Misc/NEWS:2007
msgid ""
"`Issue #26709 <https://bugs.python.org/26709>`__: Fixed Y2038 problem in "
"loading binary PLists."
msgstr ""
"`Issue #26709 <https://bugs.python.org/26709>`__: Fixed Y2038 problem in "
"loading binary PLists."

#: ../../../Misc/NEWS:2009
msgid ""
"`Issue #23735 <https://bugs.python.org/23735>`__: Handle terminal resizing "
"with Readline 6.3+ by installing our own SIGWINCH handler.  Patch by Eric "
"Price."
msgstr ""
"`Issue #23735 <https://bugs.python.org/23735>`__: Handle terminal resizing "
"with Readline 6.3+ by installing our own SIGWINCH handler.  Patch by Eric "
"Price."

#: ../../../Misc/NEWS:2012
msgid ""
"`Issue #25951 <https://bugs.python.org/25951>`__: Change SSLSocket.sendall() "
"to return None, as explicitly documented for plain socket objects.  Patch by "
"Aviv Palivoda."
msgstr ""
"`Issue #25951 <https://bugs.python.org/25951>`__: Change SSLSocket.sendall() "
"to return None, as explicitly documented for plain socket objects.  Patch by "
"Aviv Palivoda."

#: ../../../Misc/NEWS:2015
msgid ""
"`Issue #26586 <https://bugs.python.org/26586>`__: In http.server, respond "
"with \"413 Request header fields too large\" if there are too many header "
"fields to parse, rather than killing the connection and raising an unhandled "
"exception.  Patch by Xiang Zhang."
msgstr ""
"`Issue #26586 <https://bugs.python.org/26586>`__: In http.server, respond "
"with \"413 Request header fields too large\" if there are too many header "
"fields to parse, rather than killing the connection and raising an unhandled "
"exception.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:2019
msgid ""
"`Issue #26676 <https://bugs.python.org/26676>`__: Added missing "
"XMLPullParser to ElementTree.__all__."
msgstr ""
"`Issue #26676 <https://bugs.python.org/26676>`__: Added missing "
"XMLPullParser to ElementTree.__all__."

#: ../../../Misc/NEWS:2021
msgid ""
"`Issue #22854 <https://bugs.python.org/22854>`__: Change BufferedReader."
"writable() and BufferedWriter.readable() to always return False."
msgstr ""
"`Issue #22854 <https://bugs.python.org/22854>`__: Change BufferedReader."
"writable() and BufferedWriter.readable() to always return False."

#: ../../../Misc/NEWS:2024
msgid ""
"`Issue #26492 <https://bugs.python.org/26492>`__: Exhausted iterator of "
"array.array now conforms with the behavior of iterators of other mutable "
"sequences: it lefts exhausted even if iterated array is extended."
msgstr ""
"`Issue #26492 <https://bugs.python.org/26492>`__: Exhausted iterator of "
"array.array now conforms with the behavior of iterators of other mutable "
"sequences: it lefts exhausted even if iterated array is extended."

#: ../../../Misc/NEWS:2028
msgid ""
"`Issue #26641 <https://bugs.python.org/26641>`__: doctest.DocFileTest and "
"doctest.testfile() now support packages (module splitted into multiple "
"directories) for the package parameter."
msgstr ""
"`Issue #26641 <https://bugs.python.org/26641>`__: doctest.DocFileTest and "
"doctest.testfile() now support packages (module splitted into multiple "
"directories) for the package parameter."

#: ../../../Misc/NEWS:2032
msgid ""
"`Issue #25195 <https://bugs.python.org/25195>`__: Fix a regression in mock."
"MagicMock. _Call is a subclass of tuple (changeset 3603bae63c13 only works "
"for classes) so we need to implement __ne__ ourselves.  Patch by Andrew "
"Plummer."
msgstr ""
"`Issue #25195 <https://bugs.python.org/25195>`__: Fix a regression in mock."
"MagicMock. _Call is a subclass of tuple (changeset 3603bae63c13 only works "
"for classes) so we need to implement __ne__ ourselves.  Patch by Andrew "
"Plummer."

#: ../../../Misc/NEWS:2036
msgid ""
"`Issue #26644 <https://bugs.python.org/26644>`__: Raise ValueError rather "
"than SystemError when a negative length is passed to SSLSocket.recv() or "
"read()."
msgstr ""
"`Issue #26644 <https://bugs.python.org/26644>`__: Raise ValueError rather "
"than SystemError when a negative length is passed to SSLSocket.recv() or "
"read()."

#: ../../../Misc/NEWS:2039
msgid ""
"`Issue #23804 <https://bugs.python.org/23804>`__: Fix SSL recv(0) and "
"read(0) methods to return zero bytes instead of up to 1024."
msgstr ""
"`Issue #23804 <https://bugs.python.org/23804>`__: Fix SSL recv(0) and "
"read(0) methods to return zero bytes instead of up to 1024."

#: ../../../Misc/NEWS:2042
msgid ""
"`Issue #26616 <https://bugs.python.org/26616>`__: Fixed a bug in datetime."
"astimezone() method."
msgstr ""
"`Issue #26616 <https://bugs.python.org/26616>`__: Fixed a bug in datetime."
"astimezone() method."

#: ../../../Misc/NEWS:2044
msgid ""
"`Issue #26637 <https://bugs.python.org/26637>`__: The :mod:`importlib` "
"module now emits an :exc:`ImportError` rather than a :exc:`TypeError` if :"
"func:`__import__` is tried during the Python shutdown process but :data:`sys."
"path` is already cleared (set to ``None``)."
msgstr ""
"`Issue #26637 <https://bugs.python.org/26637>`__: The :mod:`importlib` "
"module now emits an :exc:`ImportError` rather than a :exc:`TypeError` if :"
"func:`__import__` is tried during the Python shutdown process but :data:`sys."
"path` is already cleared (set to ``None``)."

#: ../../../Misc/NEWS:2049
msgid ""
"`Issue #21925 <https://bugs.python.org/21925>`__: :func:`warnings."
"formatwarning` now catches exceptions when calling :func:`linecache.getline` "
"and :func:`tracemalloc.get_object_traceback` to be able to log :exc:"
"`ResourceWarning` emitted late during the Python shutdown process."
msgstr ""
"`Issue #21925 <https://bugs.python.org/21925>`__: :func:`warnings."
"formatwarning` now catches exceptions when calling :func:`linecache.getline` "
"and :func:`tracemalloc.get_object_traceback` to be able to log :exc:"
"`ResourceWarning` emitted late during the Python shutdown process."

#: ../../../Misc/NEWS:2054
msgid ""
"`Issue #23848 <https://bugs.python.org/23848>`__: On Windows, faulthandler."
"enable() now also installs an exception handler to dump the traceback of all "
"Python threads on any Windows exception, not only on UNIX signals (SIGSEGV, "
"SIGFPE, SIGABRT)."
msgstr ""
"`Issue #23848 <https://bugs.python.org/23848>`__: On Windows, faulthandler."
"enable() now also installs an exception handler to dump the traceback of all "
"Python threads on any Windows exception, not only on UNIX signals (SIGSEGV, "
"SIGFPE, SIGABRT)."

#: ../../../Misc/NEWS:2058
msgid ""
"`Issue #26530 <https://bugs.python.org/26530>`__: Add C functions :c:func:"
"`_PyTraceMalloc_Track` and :c:func:`_PyTraceMalloc_Untrack` to track memory "
"blocks using the :mod:`tracemalloc` module. Add :c:func:"
"`_PyTraceMalloc_GetTraceback` to get the traceback of an object."
msgstr ""
"`Issue #26530 <https://bugs.python.org/26530>`__: Add C functions :c:func:"
"`_PyTraceMalloc_Track` and :c:func:`_PyTraceMalloc_Untrack` to track memory "
"blocks using the :mod:`tracemalloc` module. Add :c:func:"
"`_PyTraceMalloc_GetTraceback` to get the traceback of an object."

#: ../../../Misc/NEWS:2063
msgid ""
"`Issue #26588 <https://bugs.python.org/26588>`__: The _tracemalloc now "
"supports tracing memory allocations of multiple address spaces (domains)."
msgstr ""
"`Issue #26588 <https://bugs.python.org/26588>`__: The _tracemalloc now "
"supports tracing memory allocations of multiple address spaces (domains)."

#: ../../../Misc/NEWS:2066
msgid ""
"`Issue #24266 <https://bugs.python.org/24266>`__: Ctrl+C during Readline "
"history search now cancels the search mode when compiled with Readline 7."
msgstr ""
"`Issue #24266 <https://bugs.python.org/24266>`__: Ctrl+C during Readline "
"history search now cancels the search mode when compiled with Readline 7."

#: ../../../Misc/NEWS:2069
msgid ""
"`Issue #26590 <https://bugs.python.org/26590>`__: Implement a safe finalizer "
"for the _socket.socket type. It now releases the GIL to close the socket."
msgstr ""
"`Issue #26590 <https://bugs.python.org/26590>`__: Implement a safe finalizer "
"for the _socket.socket type. It now releases the GIL to close the socket."

#: ../../../Misc/NEWS:2072
msgid ""
"`Issue #18787 <https://bugs.python.org/18787>`__: spwd.getspnam() now raises "
"a PermissionError if the user doesn't have privileges."
msgstr ""
"`Issue #18787 <https://bugs.python.org/18787>`__: spwd.getspnam() now raises "
"a PermissionError if the user doesn't have privileges."

#: ../../../Misc/NEWS:2075
msgid ""
"`Issue #26560 <https://bugs.python.org/26560>`__: Avoid potential ValueError "
"in BaseHandler.start_response. Initial patch by Peter Inglesby."
msgstr ""
"`Issue #26560 <https://bugs.python.org/26560>`__: Avoid potential ValueError "
"in BaseHandler.start_response. Initial patch by Peter Inglesby."

#: ../../../Misc/NEWS:2078
msgid ""
"`Issue #26567 <https://bugs.python.org/26567>`__: Add a new function :c:func:"
"`PyErr_ResourceWarning` function to pass the destroyed object. Add a "
"*source* attribute to :class:`warnings.WarningMessage`. Add warnings."
"_showwarnmsg() which uses tracemalloc to get the traceback where source "
"object was allocated."
msgstr ""
"`Issue #26567 <https://bugs.python.org/26567>`__: Add a new function :c:func:"
"`PyErr_ResourceWarning` function to pass the destroyed object. Add a "
"*source* attribute to :class:`warnings.WarningMessage`. Add warnings."
"_showwarnmsg() which uses tracemalloc to get the traceback where source "
"object was allocated."

#: ../../../Misc/NEWS:2083
msgid ""
"[Security] `Issue #26313 <https://bugs.python.org/26313>`__: ssl.py "
"_load_windows_store_certs fails if windows cert store is empty. Patch by "
"Baji."
msgstr ""

#: ../../../Misc/NEWS:2086
msgid ""
"`Issue #26569 <https://bugs.python.org/26569>`__: Fix :func:`pyclbr."
"readmodule` and :func:`pyclbr.readmodule_ex` to support importing packages."
msgstr ""
"`Issue #26569 <https://bugs.python.org/26569>`__: Fix :func:`pyclbr."
"readmodule` and :func:`pyclbr.readmodule_ex` to support importing packages."

#: ../../../Misc/NEWS:2089
msgid ""
"`Issue #26499 <https://bugs.python.org/26499>`__: Account for remaining "
"Content-Length in HTTPResponse.readline() and read1().  Based on patch by "
"Silent Ghost. Also document that HTTPResponse now supports these methods."
msgstr ""
"`Issue #26499 <https://bugs.python.org/26499>`__: Account for remaining "
"Content-Length in HTTPResponse.readline() and read1().  Based on patch by "
"Silent Ghost. Also document that HTTPResponse now supports these methods."

#: ../../../Misc/NEWS:2093
msgid ""
"`Issue #25320 <https://bugs.python.org/25320>`__: Handle sockets in "
"directories unittest discovery is scanning. Patch from Victor van den Elzen."
msgstr ""
"`Issue #25320 <https://bugs.python.org/25320>`__: Handle sockets in "
"directories unittest discovery is scanning. Patch from Victor van den Elzen."

#: ../../../Misc/NEWS:2096
msgid ""
"`Issue #16181 <https://bugs.python.org/16181>`__: cookiejar.http2time() now "
"returns None if year is higher than datetime.MAXYEAR."
msgstr ""
"`Issue #16181 <https://bugs.python.org/16181>`__: cookiejar.http2time() now "
"returns None if year is higher than datetime.MAXYEAR."

#: ../../../Misc/NEWS:2099
msgid ""
"`Issue #26513 <https://bugs.python.org/26513>`__: Fixes platform module "
"detection of Windows Server"
msgstr ""
"`Issue #26513 <https://bugs.python.org/26513>`__: Fixes platform module "
"detection of Windows Server"

#: ../../../Misc/NEWS:2101
msgid ""
"`Issue #23718 <https://bugs.python.org/23718>`__: Fixed parsing time in week "
"0 before Jan 1.  Original patch by Tam√°s Bence Gedai."
msgstr ""
"`Issue #23718 <https://bugs.python.org/23718>`__: Fixed parsing time in week "
"0 before Jan 1.  Original patch by Tam√°s Bence Gedai."

#: ../../../Misc/NEWS:2104
msgid ""
"`Issue #26323 <https://bugs.python.org/26323>`__: Add Mock.assert_called() "
"and Mock.assert_called_once() methods to unittest.mock. Patch written by "
"Amit Saha."
msgstr ""
"`Issue #26323 <https://bugs.python.org/26323>`__: Add Mock.assert_called() "
"and Mock.assert_called_once() methods to unittest.mock. Patch written by "
"Amit Saha."

#: ../../../Misc/NEWS:2107
msgid ""
"`Issue #20589 <https://bugs.python.org/20589>`__: Invoking Path.owner() and "
"Path.group() on Windows now raise NotImplementedError instead of ImportError."
msgstr ""
"`Issue #20589 <https://bugs.python.org/20589>`__: Invoking Path.owner() and "
"Path.group() on Windows now raise NotImplementedError instead of ImportError."

#: ../../../Misc/NEWS:2110
msgid ""
"`Issue #26177 <https://bugs.python.org/26177>`__: Fixed the keys() method "
"for Canvas and Scrollbar widgets."
msgstr ""
"`Issue #26177 <https://bugs.python.org/26177>`__: Fixed the keys() method "
"for Canvas and Scrollbar widgets."

#: ../../../Misc/NEWS:2112
msgid ""
"`Issue #15068 <https://bugs.python.org/15068>`__: Got rid of excessive "
"buffering in fileinput. The bufsize parameter is now deprecated and ignored."
msgstr ""
"`Issue #15068 <https://bugs.python.org/15068>`__: Got rid of excessive "
"buffering in fileinput. The bufsize parameter is now deprecated and ignored."

#: ../../../Misc/NEWS:2115
msgid ""
"`Issue #19475 <https://bugs.python.org/19475>`__: Added an optional argument "
"timespec to the datetime isoformat() method to choose the precision of the "
"time component."
msgstr ""
"`Issue #19475 <https://bugs.python.org/19475>`__: Added an optional argument "
"timespec to the datetime isoformat() method to choose the precision of the "
"time component."

#: ../../../Misc/NEWS:2118
msgid ""
"`Issue #2202 <https://bugs.python.org/2202>`__: Fix UnboundLocalError in "
"AbstractDigestAuthHandler.get_algorithm_impls.  Initial patch by Mathieu "
"Dupuy."
msgstr ""
"`Issue #2202 <https://bugs.python.org/2202>`__: Fix UnboundLocalError in "
"AbstractDigestAuthHandler.get_algorithm_impls.  Initial patch by Mathieu "
"Dupuy."

#: ../../../Misc/NEWS:2122
msgid ""
"`Issue #26167 <https://bugs.python.org/26167>`__: Minimized overhead in copy."
"copy() and copy.deepcopy(). Optimized copying and deepcopying bytearrays, "
"NotImplemented, slices, short lists, tuples, dicts, sets."
msgstr ""
"`Issue #26167 <https://bugs.python.org/26167>`__: Minimized overhead in copy."
"copy() and copy.deepcopy(). Optimized copying and deepcopying bytearrays, "
"NotImplemented, slices, short lists, tuples, dicts, sets."

#: ../../../Misc/NEWS:2126
msgid ""
"`Issue #25718 <https://bugs.python.org/25718>`__: Fixed pickling and copying "
"the accumulate() iterator with total is None."
msgstr ""
"`Issue #25718 <https://bugs.python.org/25718>`__: Fixed pickling and copying "
"the accumulate() iterator with total is None."

#: ../../../Misc/NEWS:2129
msgid ""
"`Issue #26475 <https://bugs.python.org/26475>`__: Fixed debugging output for "
"regular expressions with the (?x) flag."
msgstr ""
"`Issue #26475 <https://bugs.python.org/26475>`__: Fixed debugging output for "
"regular expressions with the (?x) flag."

#: ../../../Misc/NEWS:2132
msgid ""
"`Issue #26482 <https://bugs.python.org/26482>`__: Allowed pickling recursive "
"dequeues."
msgstr ""
"`Issue #26482 <https://bugs.python.org/26482>`__: Allowed pickling recursive "
"dequeues."

#: ../../../Misc/NEWS:2134
msgid ""
"`Issue #26335 <https://bugs.python.org/26335>`__: Make mmap.write() return "
"the number of bytes written like other write methods.  Patch by Jakub "
"Stasiak."
msgstr ""
"`Issue #26335 <https://bugs.python.org/26335>`__: Make mmap.write() return "
"the number of bytes written like other write methods.  Patch by Jakub "
"Stasiak."

#: ../../../Misc/NEWS:2137
msgid ""
"`Issue #26457 <https://bugs.python.org/26457>`__: Fixed the subnets() "
"methods in IP network classes for the case when resulting prefix length is "
"equal to maximal prefix length. Based on patch by Xiang Zhang."
msgstr ""
"`Issue #26457 <https://bugs.python.org/26457>`__: Fixed the subnets() "
"methods in IP network classes for the case when resulting prefix length is "
"equal to maximal prefix length. Based on patch by Xiang Zhang."

#: ../../../Misc/NEWS:2141
msgid ""
"`Issue #26385 <https://bugs.python.org/26385>`__: Remove the file if the "
"internal open() call in NamedTemporaryFile() fails.  Patch by Silent Ghost."
msgstr ""
"`Issue #26385 <https://bugs.python.org/26385>`__: Remove the file if the "
"internal open() call in NamedTemporaryFile() fails.  Patch by Silent Ghost."

#: ../../../Misc/NEWS:2144
msgid ""
"`Issue #26402 <https://bugs.python.org/26402>`__: Fix XML-RPC client to "
"retry when the server shuts down a persistent connection.  This was a "
"regression related to the new http.client.RemoteDisconnected exception in "
"3.5.0a4."
msgstr ""
"`Issue #26402 <https://bugs.python.org/26402>`__: Fix XML-RPC client to "
"retry when the server shuts down a persistent connection.  This was a "
"regression related to the new http.client.RemoteDisconnected exception in "
"3.5.0a4."

#: ../../../Misc/NEWS:2148
msgid ""
"`Issue #25913 <https://bugs.python.org/25913>`__: Leading ``<~`` is optional "
"now in base64.a85decode() with adobe=True.  Patch by Swati Jaiswal."
msgstr ""
"`Issue #25913 <https://bugs.python.org/25913>`__: Leading ``<~`` is optional "
"now in base64.a85decode() with adobe=True.  Patch by Swati Jaiswal."

#: ../../../Misc/NEWS:2151
msgid ""
"`Issue #26186 <https://bugs.python.org/26186>`__: Remove an invalid type "
"check in importlib.util.LazyLoader."
msgstr ""
"`Issue #26186 <https://bugs.python.org/26186>`__: Remove an invalid type "
"check in importlib.util.LazyLoader."

#: ../../../Misc/NEWS:2153
msgid ""
"`Issue #26367 <https://bugs.python.org/26367>`__: importlib.__import__() "
"raises ImportError like builtins.__import__() when ``level`` is specified "
"but without an accompanying package specified."
msgstr ""
"`Issue #26367 <https://bugs.python.org/26367>`__: importlib.__import__() "
"raises ImportError like builtins.__import__() when ``level`` is specified "
"but without an accompanying package specified."

#: ../../../Misc/NEWS:2157
msgid ""
"`Issue #26309 <https://bugs.python.org/26309>`__: In the \"socketserver\" "
"module, shut down the request (closing the connected socket) when "
"verify_request() returns false.  Patch by Aviv Palivoda."
msgstr ""
"`Issue #26309 <https://bugs.python.org/26309>`__: In the \"socketserver\" "
"module, shut down the request (closing the connected socket) when "
"verify_request() returns false.  Patch by Aviv Palivoda."

#: ../../../Misc/NEWS:2161
msgid ""
"`Issue #23430 <https://bugs.python.org/23430>`__: Change the socketserver "
"module to only catch exceptions raised from a request handler that are "
"derived from Exception (instead of BaseException).  Therefore SystemExit and "
"KeyboardInterrupt no longer trigger the handle_error() method, and will now "
"to stop a single-threaded server."
msgstr ""
"`Issue #23430 <https://bugs.python.org/23430>`__: Change the socketserver "
"module to only catch exceptions raised from a request handler that are "
"derived from Exception (instead of BaseException).  Therefore SystemExit and "
"KeyboardInterrupt no longer trigger the handle_error() method, and will now "
"to stop a single-threaded server."

#: ../../../Misc/NEWS:2167
msgid ""
"[Security] `Issue #25939 <https://bugs.python.org/25939>`__: On Windows open "
"the cert store readonly in ssl.enum_certificates."
msgstr ""

#: ../../../Misc/NEWS:2170
msgid ""
"`Issue #25995 <https://bugs.python.org/25995>`__: os.walk() no longer uses "
"FDs proportional to the tree depth."
msgstr ""
"`Issue #25995 <https://bugs.python.org/25995>`__: os.walk() no longer uses "
"FDs proportional to the tree depth."

#: ../../../Misc/NEWS:2172
msgid ""
"`Issue #25994 <https://bugs.python.org/25994>`__: Added the close() method "
"and the support of the context manager protocol for the os.scandir() "
"iterator."
msgstr ""
"`Issue #25994 <https://bugs.python.org/25994>`__: Added the close() method "
"and the support of the context manager protocol for the os.scandir() "
"iterator."

#: ../../../Misc/NEWS:2175
msgid ""
"`Issue #23992 <https://bugs.python.org/23992>`__: multiprocessing: make "
"MapResult not fail-fast upon exception."
msgstr ""
"`Issue #23992 <https://bugs.python.org/23992>`__: multiprocessing: make "
"MapResult not fail-fast upon exception."

#: ../../../Misc/NEWS:2177
msgid ""
"`Issue #26243 <https://bugs.python.org/26243>`__: Support keyword arguments "
"to zlib.compress().  Patch by Aviv Palivoda."
msgstr ""
"`Issue #26243 <https://bugs.python.org/26243>`__: Support keyword arguments "
"to zlib.compress().  Patch by Aviv Palivoda."

#: ../../../Misc/NEWS:2180
msgid ""
"`Issue #26117 <https://bugs.python.org/26117>`__: The os.scandir() iterator "
"now closes file descriptor not only when the iteration is finished, but when "
"it was failed with error."
msgstr ""
"`Issue #26117 <https://bugs.python.org/26117>`__: The os.scandir() iterator "
"now closes file descriptor not only when the iteration is finished, but when "
"it was failed with error."

#: ../../../Misc/NEWS:2183
msgid ""
"`Issue #25949 <https://bugs.python.org/25949>`__: __dict__ for an "
"OrderedDict instance is now created only when needed."
msgstr ""
"`Issue #25949 <https://bugs.python.org/25949>`__: __dict__ for an "
"OrderedDict instance is now created only when needed."

#: ../../../Misc/NEWS:2186
msgid ""
"`Issue #25911 <https://bugs.python.org/25911>`__: Restored support of bytes "
"paths in os.walk() on Windows."
msgstr ""
"`Issue #25911 <https://bugs.python.org/25911>`__: Restored support of bytes "
"paths in os.walk() on Windows."

#: ../../../Misc/NEWS:2188
msgid ""
"`Issue #26045 <https://bugs.python.org/26045>`__: Add UTF-8 suggestion to "
"error message when posting a non-Latin-1 string with http.client."
msgstr ""
"`Issue #26045 <https://bugs.python.org/26045>`__: Add UTF-8 suggestion to "
"error message when posting a non-Latin-1 string with http.client."

#: ../../../Misc/NEWS:2191
msgid ""
"`Issue #26039 <https://bugs.python.org/26039>`__: Added zipfile.ZipInfo."
"from_file() and zipinfo.ZipInfo.is_dir(). Patch by Thomas Kluyver."
msgstr ""
"`Issue #26039 <https://bugs.python.org/26039>`__: Added zipfile.ZipInfo."
"from_file() and zipinfo.ZipInfo.is_dir(). Patch by Thomas Kluyver."

#: ../../../Misc/NEWS:2194
msgid ""
"`Issue #12923 <https://bugs.python.org/12923>`__: Reset FancyURLopener's "
"redirect counter even if there is an exception.  Based on patches by Brian "
"Brazil and Daniel Rocco."
msgstr ""
"`Issue #12923 <https://bugs.python.org/12923>`__: Reset FancyURLopener's "
"redirect counter even if there is an exception.  Based on patches by Brian "
"Brazil and Daniel Rocco."

#: ../../../Misc/NEWS:2197
msgid ""
"`Issue #25945 <https://bugs.python.org/25945>`__: Fixed a crash when "
"unpickle the functools.partial object with wrong state.  Fixed a leak in "
"failed functools.partial constructor. \"args\" and \"keywords\" attributes "
"of functools.partial have now always types tuple and dict correspondingly."
msgstr ""
"`Issue #25945 <https://bugs.python.org/25945>`__: Fixed a crash when "
"unpickle the functools.partial object with wrong state.  Fixed a leak in "
"failed functools.partial constructor. \"args\" and \"keywords\" attributes "
"of functools.partial have now always types tuple and dict correspondingly."

#: ../../../Misc/NEWS:2202
msgid ""
"`Issue #26202 <https://bugs.python.org/26202>`__: copy.deepcopy() now "
"correctly copies range() objects with non-atomic attributes."
msgstr ""
"`Issue #26202 <https://bugs.python.org/26202>`__: copy.deepcopy() now "
"correctly copies range() objects with non-atomic attributes."

#: ../../../Misc/NEWS:2205
msgid ""
"`Issue #23076 <https://bugs.python.org/23076>`__: Path.glob() now raises a "
"ValueError if it's called with an invalid pattern.  Patch by Thomas Nyberg."
msgstr ""
"`Issue #23076 <https://bugs.python.org/23076>`__: Path.glob() now raises a "
"ValueError if it's called with an invalid pattern.  Patch by Thomas Nyberg."

#: ../../../Misc/NEWS:2208
msgid ""
"`Issue #19883 <https://bugs.python.org/19883>`__: Fixed possible integer "
"overflows in zipimport."
msgstr ""
"`Issue #19883 <https://bugs.python.org/19883>`__: Fixed possible integer "
"overflows in zipimport."

#: ../../../Misc/NEWS:2210
msgid ""
"`Issue #26227 <https://bugs.python.org/26227>`__: On Windows, getnameinfo(), "
"gethostbyaddr() and gethostbyname_ex() functions of the socket module now "
"decode the hostname from the ANSI code page rather than UTF-8."
msgstr ""
"`Issue #26227 <https://bugs.python.org/26227>`__: On Windows, getnameinfo(), "
"gethostbyaddr() and gethostbyname_ex() functions of the socket module now "
"decode the hostname from the ANSI code page rather than UTF-8."

#: ../../../Misc/NEWS:2214
msgid ""
"`Issue #26099 <https://bugs.python.org/26099>`__: The site module now writes "
"an error into stderr if sitecustomize module can be imported but executing "
"the module raise an ImportError. Same change for usercustomize."
msgstr ""
"`Issue #26099 <https://bugs.python.org/26099>`__: The site module now writes "
"an error into stderr if sitecustomize module can be imported but executing "
"the module raise an ImportError. Same change for usercustomize."

#: ../../../Misc/NEWS:2218
msgid ""
"`Issue #26147 <https://bugs.python.org/26147>`__: xmlrpc now works with "
"strings not encodable with used non-UTF-8 encoding."
msgstr ""
"`Issue #26147 <https://bugs.python.org/26147>`__: xmlrpc now works with "
"strings not encodable with used non-UTF-8 encoding."

#: ../../../Misc/NEWS:2221
msgid ""
"`Issue #25935 <https://bugs.python.org/25935>`__: Garbage collector now "
"breaks reference loops with OrderedDict."
msgstr ""
"`Issue #25935 <https://bugs.python.org/25935>`__: Garbage collector now "
"breaks reference loops with OrderedDict."

#: ../../../Misc/NEWS:2223
msgid ""
"`Issue #16620 <https://bugs.python.org/16620>`__: Fixed AttributeError in "
"msilib.Directory.glob()."
msgstr ""
"`Issue #16620 <https://bugs.python.org/16620>`__: Fixed AttributeError in "
"msilib.Directory.glob()."

#: ../../../Misc/NEWS:2225
msgid ""
"`Issue #26013 <https://bugs.python.org/26013>`__: Added compatibility with "
"broken protocol 2 pickles created in old Python 3 versions (3.4.3 and lower)."
msgstr ""
"`Issue #26013 <https://bugs.python.org/26013>`__: Added compatibility with "
"broken protocol 2 pickles created in old Python 3 versions (3.4.3 and lower)."

#: ../../../Misc/NEWS:2228
msgid ""
"`Issue #26129 <https://bugs.python.org/26129>`__: Deprecated accepting non-"
"integers in grp.getgrgid()."
msgstr ""
"`Issue #26129 <https://bugs.python.org/26129>`__: Deprecated accepting non-"
"integers in grp.getgrgid()."

#: ../../../Misc/NEWS:2230
msgid ""
"`Issue #25850 <https://bugs.python.org/25850>`__: Use cross-compilation by "
"default for 64-bit Windows."
msgstr ""
"`Issue #25850 <https://bugs.python.org/25850>`__: Use cross-compilation by "
"default for 64-bit Windows."

#: ../../../Misc/NEWS:2232
msgid ""
"`Issue #25822 <https://bugs.python.org/25822>`__: Add docstrings to the "
"fields of urllib.parse results. Patch contributed by Swati Jaiswal."
msgstr ""
"`Issue #25822 <https://bugs.python.org/25822>`__: Add docstrings to the "
"fields of urllib.parse results. Patch contributed by Swati Jaiswal."

#: ../../../Misc/NEWS:2235
msgid ""
"`Issue #22642 <https://bugs.python.org/22642>`__: Convert trace module "
"option parsing mechanism to argparse. Patch contributed by SilentGhost."
msgstr ""
"`Issue #22642 <https://bugs.python.org/22642>`__: Convert trace module "
"option parsing mechanism to argparse. Patch contributed by SilentGhost."

#: ../../../Misc/NEWS:2238
msgid ""
"`Issue #24705 <https://bugs.python.org/24705>`__: Fix sysconfig."
"_parse_makefile not expanding ${} vars appearing before $() vars."
msgstr ""
"`Issue #24705 <https://bugs.python.org/24705>`__: Fix sysconfig."
"_parse_makefile not expanding ${} vars appearing before $() vars."

#: ../../../Misc/NEWS:2241
msgid ""
"`Issue #26069 <https://bugs.python.org/26069>`__: Remove the deprecated apis "
"in the trace module."
msgstr ""
"`Issue #26069 <https://bugs.python.org/26069>`__: Remove the deprecated apis "
"in the trace module."

#: ../../../Misc/NEWS:2243
msgid ""
"`Issue #22138 <https://bugs.python.org/22138>`__: Fix mock.patch behavior "
"when patching descriptors. Restore original values after patching. Patch "
"contributed by Sean McCully."
msgstr ""
"`Issue #22138 <https://bugs.python.org/22138>`__: Fix mock.patch behavior "
"when patching descriptors. Restore original values after patching. Patch "
"contributed by Sean McCully."

#: ../../../Misc/NEWS:2246
msgid ""
"`Issue #25672 <https://bugs.python.org/25672>`__: In the ssl module, enable "
"the SSL_MODE_RELEASE_BUFFERS mode option if it is safe to do so."
msgstr ""
"`Issue #25672 <https://bugs.python.org/25672>`__: In the ssl module, enable "
"the SSL_MODE_RELEASE_BUFFERS mode option if it is safe to do so."

#: ../../../Misc/NEWS:2249
msgid ""
"`Issue #26012 <https://bugs.python.org/26012>`__: Don't traverse into "
"symlinks for ** pattern in pathlib.Path.[r]glob()."
msgstr ""
"`Issue #26012 <https://bugs.python.org/26012>`__: Don't traverse into "
"symlinks for ** pattern in pathlib.Path.[r]glob()."

#: ../../../Misc/NEWS:2252
msgid ""
"`Issue #24120 <https://bugs.python.org/24120>`__: Ignore PermissionError "
"when traversing a tree with pathlib.Path.[r]glob().  Patch by Ulrich Petri."
msgstr ""
"`Issue #24120 <https://bugs.python.org/24120>`__: Ignore PermissionError "
"when traversing a tree with pathlib.Path.[r]glob().  Patch by Ulrich Petri."

#: ../../../Misc/NEWS:2255
msgid ""
"`Issue #21815 <https://bugs.python.org/21815>`__: Accept ] characters in the "
"data portion of imap responses, in order to handle the flags with square "
"brackets accepted and produced by servers such as gmail."
msgstr ""
"`Issue #21815 <https://bugs.python.org/21815>`__: Accept ] characters in the "
"data portion of imap responses, in order to handle the flags with square "
"brackets accepted and produced by servers such as gmail."

#: ../../../Misc/NEWS:2259
msgid ""
"`Issue #25447 <https://bugs.python.org/25447>`__: fileinput now uses sys."
"stdin as-is if it does not have a buffer attribute (restores backward "
"compatibility)."
msgstr ""
"`Issue #25447 <https://bugs.python.org/25447>`__: fileinput now uses sys."
"stdin as-is if it does not have a buffer attribute (restores backward "
"compatibility)."

#: ../../../Misc/NEWS:2262
msgid ""
"`Issue #25971 <https://bugs.python.org/25971>`__: Optimized creating "
"Fractions from floats by 2 times and from Decimals by 3 times."
msgstr ""
"`Issue #25971 <https://bugs.python.org/25971>`__: Optimized creating "
"Fractions from floats by 2 times and from Decimals by 3 times."

#: ../../../Misc/NEWS:2265
msgid ""
"`Issue #25802 <https://bugs.python.org/25802>`__: Document as deprecated the "
"remaining implementations of importlib.abc.Loader.load_module()."
msgstr ""
"`Issue #25802 <https://bugs.python.org/25802>`__: Document as deprecated the "
"remaining implementations of importlib.abc.Loader.load_module()."

#: ../../../Misc/NEWS:2268
msgid ""
"`Issue #25928 <https://bugs.python.org/25928>`__: Add Decimal."
"as_integer_ratio()."
msgstr ""
"`Issue #25928 <https://bugs.python.org/25928>`__: Add Decimal."
"as_integer_ratio()."

#: ../../../Misc/NEWS:2270
msgid ""
"`Issue #25447 <https://bugs.python.org/25447>`__: Copying the lru_cache() "
"wrapper object now always works, independently from the type of the wrapped "
"object (by returning the original object unchanged)."
msgstr ""
"`Issue #25447 <https://bugs.python.org/25447>`__: Copying the lru_cache() "
"wrapper object now always works, independently from the type of the wrapped "
"object (by returning the original object unchanged)."

#: ../../../Misc/NEWS:2274
msgid ""
"`Issue #25768 <https://bugs.python.org/25768>`__: Have the functions in "
"compileall return booleans instead of ints and add proper documentation and "
"tests for the return values."
msgstr ""
"`Issue #25768 <https://bugs.python.org/25768>`__: Have the functions in "
"compileall return booleans instead of ints and add proper documentation and "
"tests for the return values."

#: ../../../Misc/NEWS:2277
msgid ""
"`Issue #24103 <https://bugs.python.org/24103>`__: Fixed possible use after "
"free in ElementTree.XMLPullParser."
msgstr ""
"`Issue #24103 <https://bugs.python.org/24103>`__: Fixed possible use after "
"free in ElementTree.XMLPullParser."

#: ../../../Misc/NEWS:2279
msgid ""
"`Issue #25860 <https://bugs.python.org/25860>`__: os.fwalk() no longer skips "
"remaining directories when error occurs.  Original patch by Samson Lee."
msgstr ""
"`Issue #25860 <https://bugs.python.org/25860>`__: os.fwalk() no longer skips "
"remaining directories when error occurs.  Original patch by Samson Lee."

#: ../../../Misc/NEWS:2282
msgid ""
"`Issue #25914 <https://bugs.python.org/25914>`__: Fixed and simplified "
"OrderedDict.__sizeof__."
msgstr ""
"`Issue #25914 <https://bugs.python.org/25914>`__: Fixed and simplified "
"OrderedDict.__sizeof__."

#: ../../../Misc/NEWS:2284
msgid ""
"`Issue #25869 <https://bugs.python.org/25869>`__: Optimized deepcopying "
"ElementTree; it is now 20 times faster."
msgstr ""
"`Issue #25869 <https://bugs.python.org/25869>`__: Optimized deepcopying "
"ElementTree; it is now 20 times faster."

#: ../../../Misc/NEWS:2286
msgid ""
"`Issue #25873 <https://bugs.python.org/25873>`__: Optimized iterating "
"ElementTree.  Iterating elements Element.iter() is now 40% faster, iterating "
"text Element.itertext() is now up to 2.5 times faster."
msgstr ""
"`Issue #25873 <https://bugs.python.org/25873>`__: Optimized iterating "
"ElementTree.  Iterating elements Element.iter() is now 40% faster, iterating "
"text Element.itertext() is now up to 2.5 times faster."

#: ../../../Misc/NEWS:2290
msgid ""
"`Issue #25902 <https://bugs.python.org/25902>`__: Fixed various refcount "
"issues in ElementTree iteration."
msgstr ""
"`Issue #25902 <https://bugs.python.org/25902>`__: Fixed various refcount "
"issues in ElementTree iteration."

#: ../../../Misc/NEWS:2292
msgid ""
"`Issue #22227 <https://bugs.python.org/22227>`__: The TarFile iterator is "
"reimplemented using generator. This implementation is simpler that using "
"class."
msgstr ""
"`Issue #22227 <https://bugs.python.org/22227>`__: The TarFile iterator is "
"reimplemented using generator. This implementation is simpler that using "
"class."

#: ../../../Misc/NEWS:2295
msgid ""
"`Issue #25638 <https://bugs.python.org/25638>`__: Optimized ElementTree."
"iterparse(); it is now 2x faster. Optimized ElementTree parsing; it is now "
"10% faster."
msgstr ""
"`Issue #25638 <https://bugs.python.org/25638>`__: Optimized ElementTree."
"iterparse(); it is now 2x faster. Optimized ElementTree parsing; it is now "
"10% faster."

#: ../../../Misc/NEWS:2298
msgid ""
"`Issue #25761 <https://bugs.python.org/25761>`__: Improved detecting errors "
"in broken pickle data."
msgstr ""
"`Issue #25761 <https://bugs.python.org/25761>`__: Improved detecting errors "
"in broken pickle data."

#: ../../../Misc/NEWS:2300
msgid ""
"`Issue #25717 <https://bugs.python.org/25717>`__: Restore the previous "
"behaviour of tolerating most fstat() errors when opening files.  This was a "
"regression in 3.5a1, and stopped anonymous temporary files from working in "
"special cases."
msgstr ""
"`Issue #25717 <https://bugs.python.org/25717>`__: Restore the previous "
"behaviour of tolerating most fstat() errors when opening files.  This was a "
"regression in 3.5a1, and stopped anonymous temporary files from working in "
"special cases."

#: ../../../Misc/NEWS:2304
msgid ""
"`Issue #24903 <https://bugs.python.org/24903>`__: Fix regression in number "
"of arguments compileall accepts when '-d' is specified.  The check on the "
"number of arguments has been dropped completely as it never worked correctly "
"anyway."
msgstr ""
"`Issue #24903 <https://bugs.python.org/24903>`__: Fix regression in number "
"of arguments compileall accepts when '-d' is specified.  The check on the "
"number of arguments has been dropped completely as it never worked correctly "
"anyway."

#: ../../../Misc/NEWS:2308
msgid ""
"`Issue #25764 <https://bugs.python.org/25764>`__: In the subprocess module, "
"preserve any exception caused by fork() failure when preexec_fn is used."
msgstr ""
"`Issue #25764 <https://bugs.python.org/25764>`__: In the subprocess module, "
"preserve any exception caused by fork() failure when preexec_fn is used."

#: ../../../Misc/NEWS:2311
msgid ""
"`Issue #25771 <https://bugs.python.org/25771>`__: Tweak the exception "
"message for importlib.util.resolve_name() when 'package' isn't specified but "
"necessary."
msgstr ""
"`Issue #25771 <https://bugs.python.org/25771>`__: Tweak the exception "
"message for importlib.util.resolve_name() when 'package' isn't specified but "
"necessary."

#: ../../../Misc/NEWS:2314
msgid ""
"`Issue #6478 <https://bugs.python.org/6478>`__: _strptime's regexp cache now "
"is reset after changing timezone with time.tzset()."
msgstr ""
"`Issue #6478 <https://bugs.python.org/6478>`__: _strptime's regexp cache now "
"is reset after changing timezone with time.tzset()."

#: ../../../Misc/NEWS:2317
msgid ""
"`Issue #14285 <https://bugs.python.org/14285>`__: When executing a package "
"with the \"python -m package\" option, and package initialization fails, a "
"proper traceback is now reported.  The \"runpy\" module now lets exceptions "
"from package initialization pass back to the caller, rather than raising "
"ImportError."
msgstr ""
"`Issue #14285 <https://bugs.python.org/14285>`__: When executing a package "
"with the \"python -m package\" option, and package initialization fails, a "
"proper traceback is now reported.  The \"runpy\" module now lets exceptions "
"from package initialization pass back to the caller, rather than raising "
"ImportError."

#: ../../../Misc/NEWS:2322
msgid ""
"`Issue #19771 <https://bugs.python.org/19771>`__: Also in runpy and the \"-m"
"\" option, omit the irrelevant message \". . . is a package and cannot be "
"directly executed\" if the package could not even be initialized (e.g. due "
"to a bad ``*.pyc`` file)."
msgstr ""
"`Issue #19771 <https://bugs.python.org/19771>`__: Also in runpy and the \"-m"
"\" option, omit the irrelevant message \". . . is a package and cannot be "
"directly executed\" if the package could not even be initialized (e.g. due "
"to a bad ``*.pyc`` file)."

#: ../../../Misc/NEWS:2326
msgid ""
"`Issue #25177 <https://bugs.python.org/25177>`__: Fixed problem with the "
"mean of very small and very large numbers. As a side effect, statistics.mean "
"and statistics.variance should be significantly faster."
msgstr ""
"`Issue #25177 <https://bugs.python.org/25177>`__: Fixed problem with the "
"mean of very small and very large numbers. As a side effect, statistics.mean "
"and statistics.variance should be significantly faster."

#: ../../../Misc/NEWS:2330
msgid ""
"`Issue #25718 <https://bugs.python.org/25718>`__: Fixed copying object with "
"state with boolean value is false."
msgstr ""
"`Issue #25718 <https://bugs.python.org/25718>`__: Fixed copying object with "
"state with boolean value is false."

#: ../../../Misc/NEWS:2332
msgid ""
"`Issue #10131 <https://bugs.python.org/10131>`__: Fixed deep copying of "
"minidom documents.  Based on patch by Marian Ganisin."
msgstr ""
"`Issue #10131 <https://bugs.python.org/10131>`__: Fixed deep copying of "
"minidom documents.  Based on patch by Marian Ganisin."

#: ../../../Misc/NEWS:2335
msgid ""
"`Issue #7990 <https://bugs.python.org/7990>`__: dir() on ElementTree.Element "
"now lists properties: \"tag\", \"text\", \"tail\" and \"attrib\".  Original "
"patch by Santoso Wijaya."
msgstr ""
"`Issue #7990 <https://bugs.python.org/7990>`__: dir() on ElementTree.Element "
"now lists properties: \"tag\", \"text\", \"tail\" and \"attrib\".  Original "
"patch by Santoso Wijaya."

#: ../../../Misc/NEWS:2338
msgid ""
"`Issue #25725 <https://bugs.python.org/25725>`__: Fixed a reference leak in "
"pickle.loads() when unpickling invalid data including tuple instructions."
msgstr ""
"`Issue #25725 <https://bugs.python.org/25725>`__: Fixed a reference leak in "
"pickle.loads() when unpickling invalid data including tuple instructions."

#: ../../../Misc/NEWS:2341
msgid ""
"`Issue #25663 <https://bugs.python.org/25663>`__: In the Readline completer, "
"avoid listing duplicate global names, and search the global namespace before "
"searching builtins."
msgstr ""
"`Issue #25663 <https://bugs.python.org/25663>`__: In the Readline completer, "
"avoid listing duplicate global names, and search the global namespace before "
"searching builtins."

#: ../../../Misc/NEWS:2344
msgid ""
"`Issue #25688 <https://bugs.python.org/25688>`__: Fixed file leak in "
"ElementTree.iterparse() raising an error."
msgstr ""
"`Issue #25688 <https://bugs.python.org/25688>`__: Fixed file leak in "
"ElementTree.iterparse() raising an error."

#: ../../../Misc/NEWS:2346
msgid ""
"`Issue #23914 <https://bugs.python.org/23914>`__: Fixed SystemError raised "
"by unpickler on broken pickle data."
msgstr ""
"`Issue #23914 <https://bugs.python.org/23914>`__: Fixed SystemError raised "
"by unpickler on broken pickle data."

#: ../../../Misc/NEWS:2348
msgid ""
"`Issue #25691 <https://bugs.python.org/25691>`__: Fixed crash on deleting "
"ElementTree.Element attributes."
msgstr ""
"`Issue #25691 <https://bugs.python.org/25691>`__: Fixed crash on deleting "
"ElementTree.Element attributes."

#: ../../../Misc/NEWS:2350
msgid ""
"`Issue #25624 <https://bugs.python.org/25624>`__: ZipFile now always writes "
"a ZIP_STORED header for directory entries.  Patch by Dingyuan Wang."
msgstr ""
"`Issue #25624 <https://bugs.python.org/25624>`__: ZipFile now always writes "
"a ZIP_STORED header for directory entries.  Patch by Dingyuan Wang."

#: ../../../Misc/NEWS:2353 ../../../Misc/NEWS:2947
msgid ""
"`Issue #25626 <https://bugs.python.org/25626>`__: Change three zlib "
"functions to accept sizes that fit in Py_ssize_t, but internally cap those "
"sizes to UINT_MAX.  This resolves a regression in 3.5 where GzipFile.read() "
"failed to read chunks larger than 2 or 4 GiB.  The change affects the zlib."
"Decompress.decompress() max_length parameter, the zlib.decompress() bufsize "
"parameter, and the zlib.Decompress.flush() length parameter."
msgstr ""
"`Issue #25626 <https://bugs.python.org/25626>`__: Change three zlib "
"functions to accept sizes that fit in Py_ssize_t, but internally cap those "
"sizes to UINT_MAX.  This resolves a regression in 3.5 where GzipFile.read() "
"failed to read chunks larger than 2 or 4 GiB.  The change affects the zlib."
"Decompress.decompress() max_length parameter, the zlib.decompress() bufsize "
"parameter, and the zlib.Decompress.flush() length parameter."

#: ../../../Misc/NEWS:2360 ../../../Misc/NEWS:2954
msgid ""
"`Issue #25583 <https://bugs.python.org/25583>`__: Avoid incorrect errors "
"raised by os.makedirs(exist_ok=True) when the OS gives priority to errors "
"such as EACCES over EEXIST."
msgstr ""
"`Issue #25583 <https://bugs.python.org/25583>`__: Avoid incorrect errors "
"raised by os.makedirs(exist_ok=True) when the OS gives priority to errors "
"such as EACCES over EEXIST."

#: ../../../Misc/NEWS:2363 ../../../Misc/NEWS:2957
msgid ""
"`Issue #25593 <https://bugs.python.org/25593>`__: Change semantics of "
"EventLoop.stop() in asyncio."
msgstr ""
"`Issue #25593 <https://bugs.python.org/25593>`__: Change semantics of "
"EventLoop.stop() in asyncio."

#: ../../../Misc/NEWS:2365 ../../../Misc/NEWS:2959
msgid ""
"`Issue #6973 <https://bugs.python.org/6973>`__: When we know a subprocess."
"Popen process has died, do not allow the send_signal(), terminate(), or "
"kill() methods to do anything as they could potentially signal a different "
"process."
msgstr ""
"`Issue #6973 <https://bugs.python.org/6973>`__: When we know a subprocess."
"Popen process has died, do not allow the send_signal(), terminate(), or "
"kill() methods to do anything as they could potentially signal a different "
"process."

#: ../../../Misc/NEWS:2369
msgid ""
"`Issue #23883 <https://bugs.python.org/23883>`__: Added missing APIs to "
"__all__ to match the documented APIs for the following modules: calendar, "
"csv, enum, fileinput, ftplib, logging, optparse, tarfile, threading and "
"wave.  Also added a test.support.check__all__() helper.  Patches by Jacek "
"Ko≈Çodziej, Mauro S. M. Rodrigues and Joel Taddei."
msgstr ""
"`Issue #23883 <https://bugs.python.org/23883>`__: Added missing APIs to "
"__all__ to match the documented APIs for the following modules: calendar, "
"csv, enum, fileinput, ftplib, logging, optparse, tarfile, threading and "
"wave.  Also added a test.support.check__all__() helper.  Patches by Jacek "
"Ko≈Çodziej, Mauro S. M. Rodrigues and Joel Taddei."

#: ../../../Misc/NEWS:2375
msgid ""
"`Issue #25590 <https://bugs.python.org/25590>`__: In the Readline completer, "
"only call getattr() once per attribute.  Also complete names of attributes "
"such as properties and slots which are listed by dir() but not yet created "
"on an instance."
msgstr ""
"`Issue #25590 <https://bugs.python.org/25590>`__: In the Readline completer, "
"only call getattr() once per attribute.  Also complete names of attributes "
"such as properties and slots which are listed by dir() but not yet created "
"on an instance."

#: ../../../Misc/NEWS:2379 ../../../Misc/NEWS:2966
msgid ""
"`Issue #25498 <https://bugs.python.org/25498>`__: Fix a crash when garbage-"
"collecting ctypes objects created by wrapping a memoryview.  This was a "
"regression made in 3.5a1.  Based on patch by Eryksun."
msgstr ""
"`Issue #25498 <https://bugs.python.org/25498>`__: Fix a crash when garbage-"
"collecting ctypes objects created by wrapping a memoryview.  This was a "
"regression made in 3.5a1.  Based on patch by Eryksun."

#: ../../../Misc/NEWS:2383 ../../../Misc/NEWS:2970
msgid ""
"`Issue #25584 <https://bugs.python.org/25584>`__: Added \"escape\" to the "
"__all__ list in the glob module."
msgstr ""
"`Issue #25584 <https://bugs.python.org/25584>`__: Added \"escape\" to the "
"__all__ list in the glob module."

#: ../../../Misc/NEWS:2385 ../../../Misc/NEWS:2972
msgid ""
"`Issue #25584 <https://bugs.python.org/25584>`__: Fixed recursive glob() "
"with patterns starting with '\\*\\*'."
msgstr ""
"`Issue #25584 <https://bugs.python.org/25584>`__: Fixed recursive glob() "
"with patterns starting with '\\*\\*'."

#: ../../../Misc/NEWS:2387 ../../../Misc/NEWS:2974
msgid ""
"`Issue #25446 <https://bugs.python.org/25446>`__: Fix regression in "
"smtplib's AUTH LOGIN support."
msgstr ""
"`Issue #25446 <https://bugs.python.org/25446>`__: Fix regression in "
"smtplib's AUTH LOGIN support."

#: ../../../Misc/NEWS:2389 ../../../Misc/NEWS:2976
msgid ""
"`Issue #18010 <https://bugs.python.org/18010>`__: Fix the pydoc web server's "
"module search function to handle exceptions from importing packages."
msgstr ""
"`Issue #18010 <https://bugs.python.org/18010>`__: Fix the pydoc web server's "
"module search function to handle exceptions from importing packages."

#: ../../../Misc/NEWS:2392 ../../../Misc/NEWS:2979
msgid ""
"`Issue #25554 <https://bugs.python.org/25554>`__: Got rid of circular "
"references in regular expression parsing."
msgstr ""
"`Issue #25554 <https://bugs.python.org/25554>`__: Got rid of circular "
"references in regular expression parsing."

#: ../../../Misc/NEWS:2394
msgid ""
"`Issue #18973 <https://bugs.python.org/18973>`__: Command-line interface of "
"the calendar module now uses argparse instead of optparse."
msgstr ""
"`Issue #18973 <https://bugs.python.org/18973>`__: Command-line interface of "
"the calendar module now uses argparse instead of optparse."

#: ../../../Misc/NEWS:2397 ../../../Misc/NEWS:2981
msgid ""
"`Issue #25510 <https://bugs.python.org/25510>`__: fileinput.FileInput."
"readline() now returns b'' instead of '' at the end if the FileInput was "
"opened with binary mode. Patch by Ryosuke Ito."
msgstr ""
"`Issue #25510 <https://bugs.python.org/25510>`__: fileinput.FileInput."
"readline() now returns b'' instead of '' at the end if the FileInput was "
"opened with binary mode. Patch by Ryosuke Ito."

#: ../../../Misc/NEWS:2401 ../../../Misc/NEWS:2985
msgid ""
"`Issue #25503 <https://bugs.python.org/25503>`__: Fixed inspect.getdoc() for "
"inherited docstrings of properties. Original patch by John Mark Vandenberg."
msgstr ""
"`Issue #25503 <https://bugs.python.org/25503>`__: Fixed inspect.getdoc() for "
"inherited docstrings of properties. Original patch by John Mark Vandenberg."

#: ../../../Misc/NEWS:2404 ../../../Misc/NEWS:2988
msgid ""
"`Issue #25515 <https://bugs.python.org/25515>`__: Always use os.urandom as a "
"source of randomness in uuid.uuid4."
msgstr ""
"`Issue #25515 <https://bugs.python.org/25515>`__: Always use os.urandom as a "
"source of randomness in uuid.uuid4."

#: ../../../Misc/NEWS:2406 ../../../Misc/NEWS:2990
msgid ""
"`Issue #21827 <https://bugs.python.org/21827>`__: Fixed textwrap.dedent() "
"for the case when largest common whitespace is a substring of smallest "
"leading whitespace. Based on patch by Robert Li."
msgstr ""
"`Issue #21827 <https://bugs.python.org/21827>`__: Fixed textwrap.dedent() "
"for the case when largest common whitespace is a substring of smallest "
"leading whitespace. Based on patch by Robert Li."

#: ../../../Misc/NEWS:2410 ../../../Misc/NEWS:2994
msgid ""
"`Issue #25447 <https://bugs.python.org/25447>`__: The lru_cache() wrapper "
"objects now can be copied and pickled (by returning the original object "
"unchanged)."
msgstr ""
"`Issue #25447 <https://bugs.python.org/25447>`__: The lru_cache() wrapper "
"objects now can be copied and pickled (by returning the original object "
"unchanged)."

#: ../../../Misc/NEWS:2413 ../../../Misc/NEWS:2997
msgid ""
"`Issue #25390 <https://bugs.python.org/25390>`__: typing: Don't crash on "
"Union[str, Pattern]."
msgstr ""
"`Issue #25390 <https://bugs.python.org/25390>`__: typing: Don't crash on "
"Union[str, Pattern]."

#: ../../../Misc/NEWS:2415 ../../../Misc/NEWS:2999
msgid ""
"`Issue #25441 <https://bugs.python.org/25441>`__: asyncio: Raise error from "
"drain() when socket is closed."
msgstr ""
"`Issue #25441 <https://bugs.python.org/25441>`__: asyncio: Raise error from "
"drain() when socket is closed."

#: ../../../Misc/NEWS:2417 ../../../Misc/NEWS:3001
msgid ""
"`Issue #25410 <https://bugs.python.org/25410>`__: Cleaned up and fixed minor "
"bugs in C implementation of OrderedDict."
msgstr ""
"`Issue #25410 <https://bugs.python.org/25410>`__: Cleaned up and fixed minor "
"bugs in C implementation of OrderedDict."

#: ../../../Misc/NEWS:2420 ../../../Misc/NEWS:3004
msgid ""
"`Issue #25411 <https://bugs.python.org/25411>`__: Improved Unicode support "
"in SMTPHandler through better use of the email package. Thanks to user "
"simon04 for the patch."
msgstr ""
"`Issue #25411 <https://bugs.python.org/25411>`__: Improved Unicode support "
"in SMTPHandler through better use of the email package. Thanks to user "
"simon04 for the patch."

#: ../../../Misc/NEWS:2423
msgid ""
"Move the imp module from a PendingDeprecationWarning to DeprecationWarning."
msgstr ""

#: ../../../Misc/NEWS:2425 ../../../Misc/NEWS:3007
msgid ""
"`Issue #25407 <https://bugs.python.org/25407>`__: Remove mentions of the "
"formatter module being removed in Python 3.6."
msgstr ""
"`Issue #25407 <https://bugs.python.org/25407>`__: Remove mentions of the "
"formatter module being removed in Python 3.6."

#: ../../../Misc/NEWS:2428 ../../../Misc/NEWS:3010
msgid ""
"`Issue #25406 <https://bugs.python.org/25406>`__: Fixed a bug in C "
"implementation of OrderedDict.move_to_end() that caused segmentation fault "
"or hang in iterating after moving several items to the start of ordered dict."
msgstr ""
"`Issue #25406 <https://bugs.python.org/25406>`__: Fixed a bug in C "
"implementation of OrderedDict.move_to_end() that caused segmentation fault "
"or hang in iterating after moving several items to the start of ordered dict."

#: ../../../Misc/NEWS:2432
msgid ""
"`Issue #25382 <https://bugs.python.org/25382>`__: pickletools.dis() now "
"outputs implicit memo index for the MEMOIZE opcode."
msgstr ""
"`Issue #25382 <https://bugs.python.org/25382>`__: pickletools.dis() now "
"outputs implicit memo index for the MEMOIZE opcode."

#: ../../../Misc/NEWS:2435
msgid ""
"`Issue #25357 <https://bugs.python.org/25357>`__: Add an optional newline "
"paramer to binascii.b2a_base64(). base64.b64encode() uses it to avoid a "
"memory copy."
msgstr ""
"`Issue #25357 <https://bugs.python.org/25357>`__: Add an optional newline "
"paramer to binascii.b2a_base64(). base64.b64encode() uses it to avoid a "
"memory copy."

#: ../../../Misc/NEWS:2438
msgid ""
"`Issue #24164 <https://bugs.python.org/24164>`__: Objects that need calling "
"``__new__`` with keyword arguments, can now be pickled using pickle "
"protocols older than protocol version 4."
msgstr ""
"`Issue #24164 <https://bugs.python.org/24164>`__: Objects that need calling "
"``__new__`` with keyword arguments, can now be pickled using pickle "
"protocols older than protocol version 4."

#: ../../../Misc/NEWS:2441 ../../../Misc/NEWS:3014
msgid ""
"`Issue #25364 <https://bugs.python.org/25364>`__: zipfile now works in "
"threads disabled builds."
msgstr ""
"`Issue #25364 <https://bugs.python.org/25364>`__: zipfile now works in "
"threads disabled builds."

#: ../../../Misc/NEWS:2443 ../../../Misc/NEWS:3016
msgid ""
"`Issue #25328 <https://bugs.python.org/25328>`__: smtpd's SMTPChannel now "
"correctly raises a ValueError if both decode_data and enable_SMTPUTF8 are "
"set to true."
msgstr ""
"`Issue #25328 <https://bugs.python.org/25328>`__: smtpd's SMTPChannel now "
"correctly raises a ValueError if both decode_data and enable_SMTPUTF8 are "
"set to true."

#: ../../../Misc/NEWS:2446
msgid ""
"`Issue #16099 <https://bugs.python.org/16099>`__: RobotFileParser now "
"supports Crawl-delay and Request-rate extensions.  Patch by Nikolay "
"Bogoychev."
msgstr ""
"`Issue #16099 <https://bugs.python.org/16099>`__: RobotFileParser now "
"supports Crawl-delay and Request-rate extensions.  Patch by Nikolay "
"Bogoychev."

#: ../../../Misc/NEWS:2449 ../../../Misc/NEWS:3019
msgid ""
"`Issue #25316 <https://bugs.python.org/25316>`__: distutils raises OSError "
"instead of DistutilsPlatformError when MSVC is not installed."
msgstr ""
"`Issue #25316 <https://bugs.python.org/25316>`__: distutils raises OSError "
"instead of DistutilsPlatformError when MSVC is not installed."

#: ../../../Misc/NEWS:2452 ../../../Misc/NEWS:3022
msgid ""
"`Issue #25380 <https://bugs.python.org/25380>`__: Fixed protocol for the "
"STACK_GLOBAL opcode in pickletools.opcodes."
msgstr ""
"`Issue #25380 <https://bugs.python.org/25380>`__: Fixed protocol for the "
"STACK_GLOBAL opcode in pickletools.opcodes."

#: ../../../Misc/NEWS:2455 ../../../Misc/NEWS:3025
msgid ""
"`Issue #23972 <https://bugs.python.org/23972>`__: Updates asyncio datagram "
"create method allowing reuseport and reuseaddr socket options to be set "
"prior to binding the socket. Mirroring the existing asyncio create_server "
"method the reuseaddr option for datagram sockets defaults to True if the O/S "
"is 'posix' (except if the platform is Cygwin). Patch by Chris Laws."
msgstr ""
"`Issue #23972 <https://bugs.python.org/23972>`__: Updates asyncio datagram "
"create method allowing reuseport and reuseaddr socket options to be set "
"prior to binding the socket. Mirroring the existing asyncio create_server "
"method the reuseaddr option for datagram sockets defaults to True if the O/S "
"is 'posix' (except if the platform is Cygwin). Patch by Chris Laws."

#: ../../../Misc/NEWS:2461 ../../../Misc/NEWS:3031
msgid ""
"`Issue #25304 <https://bugs.python.org/25304>`__: Add asyncio."
"run_coroutine_threadsafe().  This lets you submit a coroutine to a loop from "
"another thread, returning a concurrent.futures.Future.  By Vincent Michel."
msgstr ""
"`Issue #25304 <https://bugs.python.org/25304>`__: Add asyncio."
"run_coroutine_threadsafe().  This lets you submit a coroutine to a loop from "
"another thread, returning a concurrent.futures.Future.  By Vincent Michel."

#: ../../../Misc/NEWS:2465 ../../../Misc/NEWS:3035
msgid ""
"`Issue #25232 <https://bugs.python.org/25232>`__: Fix CGIRequestHandler to "
"split the query from the URL at the first question mark (?) rather than the "
"last. Patch from Xiang Zhang."
msgstr ""
"`Issue #25232 <https://bugs.python.org/25232>`__: Fix CGIRequestHandler to "
"split the query from the URL at the first question mark (?) rather than the "
"last. Patch from Xiang Zhang."

#: ../../../Misc/NEWS:2468 ../../../Misc/NEWS:3038
msgid ""
"`Issue #24657 <https://bugs.python.org/24657>`__: Prevent CGIRequestHandler "
"from collapsing slashes in the query part of the URL as if it were a path. "
"Patch from Xiang Zhang."
msgstr ""
"`Issue #24657 <https://bugs.python.org/24657>`__: Prevent CGIRequestHandler "
"from collapsing slashes in the query part of the URL as if it were a path. "
"Patch from Xiang Zhang."

#: ../../../Misc/NEWS:2471
msgid ""
"`Issue #25287 <https://bugs.python.org/25287>`__: Don't add crypt."
"METHOD_CRYPT to crypt.methods if it's not supported. Check if it is "
"supported, it may not be supported on OpenBSD for example."
msgstr ""
"`Issue #25287 <https://bugs.python.org/25287>`__: Don't add crypt."
"METHOD_CRYPT to crypt.methods if it's not supported. Check if it is "
"supported, it may not be supported on OpenBSD for example."

#: ../../../Misc/NEWS:2475 ../../../Misc/NEWS:3065
msgid ""
"`Issue #23600 <https://bugs.python.org/23600>`__: Default implementation of "
"tzinfo.fromutc() was returning wrong results in some cases."
msgstr ""
"`Issue #23600 <https://bugs.python.org/23600>`__: Default implementation of "
"tzinfo.fromutc() was returning wrong results in some cases."

#: ../../../Misc/NEWS:2478 ../../../Misc/NEWS:3062
msgid ""
"`Issue #25203 <https://bugs.python.org/25203>`__: Failed readline."
"set_completer_delims() no longer left the module in inconsistent state."
msgstr ""
"`Issue #25203 <https://bugs.python.org/25203>`__: Failed readline."
"set_completer_delims() no longer left the module in inconsistent state."

#: ../../../Misc/NEWS:2481
msgid ""
"`Issue #25011 <https://bugs.python.org/25011>`__: rlcompleter now omits "
"private and special attribute names unless the prefix starts with "
"underscores."
msgstr ""
"`Issue #25011 <https://bugs.python.org/25011>`__: rlcompleter now omits "
"private and special attribute names unless the prefix starts with "
"underscores."

#: ../../../Misc/NEWS:2484
msgid ""
"`Issue #25209 <https://bugs.python.org/25209>`__: rlcompleter now can add a "
"space or a colon after completed keyword."
msgstr ""
"`Issue #25209 <https://bugs.python.org/25209>`__: rlcompleter now can add a "
"space or a colon after completed keyword."

#: ../../../Misc/NEWS:2487
msgid ""
"`Issue #22241 <https://bugs.python.org/22241>`__: timezone.utc name is now "
"plain 'UTC', not 'UTC-00:00'."
msgstr ""
"`Issue #22241 <https://bugs.python.org/22241>`__: timezone.utc name is now "
"plain 'UTC', not 'UTC-00:00'."

#: ../../../Misc/NEWS:2489
msgid ""
"`Issue #23517 <https://bugs.python.org/23517>`__: fromtimestamp() and "
"utcfromtimestamp() methods of datetime.datetime now round microseconds to "
"nearest with ties going to nearest even integer (ROUND_HALF_EVEN), as "
"round(float), instead of rounding towards -Infinity (ROUND_FLOOR)."
msgstr ""
"`Issue #23517 <https://bugs.python.org/23517>`__: fromtimestamp() and "
"utcfromtimestamp() methods of datetime.datetime now round microseconds to "
"nearest with ties going to nearest even integer (ROUND_HALF_EVEN), as "
"round(float), instead of rounding towards -Infinity (ROUND_FLOOR)."

#: ../../../Misc/NEWS:2494
msgid ""
"`Issue #23552 <https://bugs.python.org/23552>`__: Timeit now warns when "
"there is substantial (4x) variance between best and worst times. Patch from "
"Serhiy Storchaka."
msgstr ""
"`Issue #23552 <https://bugs.python.org/23552>`__: Timeit now warns when "
"there is substantial (4x) variance between best and worst times. Patch from "
"Serhiy Storchaka."

#: ../../../Misc/NEWS:2497
msgid ""
"`Issue #24633 <https://bugs.python.org/24633>`__: site-packages/README -> "
"README.txt."
msgstr ""
"`Issue #24633 <https://bugs.python.org/24633>`__: site-packages/README -> "
"README.txt."

#: ../../../Misc/NEWS:2499
msgid ""
"`Issue #24879 <https://bugs.python.org/24879>`__: help() and pydoc can now "
"list named tuple fields in the order they were defined rather than "
"alphabetically.  The ordering is determined by the _fields attribute if "
"present."
msgstr ""
"`Issue #24879 <https://bugs.python.org/24879>`__: help() and pydoc can now "
"list named tuple fields in the order they were defined rather than "
"alphabetically.  The ordering is determined by the _fields attribute if "
"present."

#: ../../../Misc/NEWS:2503
msgid ""
"`Issue #24874 <https://bugs.python.org/24874>`__: Improve speed of itertools."
"cycle() and make its pickle more compact."
msgstr ""
"`Issue #24874 <https://bugs.python.org/24874>`__: Improve speed of itertools."
"cycle() and make its pickle more compact."

#: ../../../Misc/NEWS:2506
msgid ""
"Fix crash in itertools.cycle.__setstate__() when the first argument wasn't a "
"list."
msgstr ""

#: ../../../Misc/NEWS:2509
msgid ""
"`Issue #20059 <https://bugs.python.org/20059>`__: urllib.parse raises "
"ValueError on all invalid ports. Patch by Martin Panter."
msgstr ""
"`Issue #20059 <https://bugs.python.org/20059>`__: urllib.parse raises "
"ValueError on all invalid ports. Patch by Martin Panter."

#: ../../../Misc/NEWS:2512
msgid ""
"`Issue #24360 <https://bugs.python.org/24360>`__: Improve __repr__ of "
"argparse.Namespace() for invalid identifiers.  Patch by Matthias Bussonnier."
msgstr ""
"`Issue #24360 <https://bugs.python.org/24360>`__: Improve __repr__ of "
"argparse.Namespace() for invalid identifiers.  Patch by Matthias Bussonnier."

#: ../../../Misc/NEWS:2515
msgid ""
"`Issue #23426 <https://bugs.python.org/23426>`__: run_setup was broken in "
"distutils. Patch from Alexander Belopolsky."
msgstr ""
"`Issue #23426 <https://bugs.python.org/23426>`__: run_setup was broken in "
"distutils. Patch from Alexander Belopolsky."

#: ../../../Misc/NEWS:2518
msgid ""
"`Issue #13938 <https://bugs.python.org/13938>`__: 2to3 converts StringTypes "
"to a tuple. Patch from Mark Hammond."
msgstr ""
"`Issue #13938 <https://bugs.python.org/13938>`__: 2to3 converts StringTypes "
"to a tuple. Patch from Mark Hammond."

#: ../../../Misc/NEWS:2520
msgid ""
"`Issue #2091 <https://bugs.python.org/2091>`__: open() accepted a 'U' mode "
"string containing '+', but 'U' can only be used with 'r'. Patch from Jeff "
"Balogh and John O'Connor."
msgstr ""
"`Issue #2091 <https://bugs.python.org/2091>`__: open() accepted a 'U' mode "
"string containing '+', but 'U' can only be used with 'r'. Patch from Jeff "
"Balogh and John O'Connor."

#: ../../../Misc/NEWS:2523
msgid ""
"`Issue #8585 <https://bugs.python.org/8585>`__: improved tests for "
"zipimporter2. Patch from Mark Lawrence."
msgstr ""
"`Issue #8585 <https://bugs.python.org/8585>`__: improved tests for "
"zipimporter2. Patch from Mark Lawrence."

#: ../../../Misc/NEWS:2525
msgid ""
"`Issue #18622 <https://bugs.python.org/18622>`__: unittest.mock.mock_open()."
"reset_mock would recurse infinitely. Patch from Nicola Palumbo and Laurent "
"De Buyst."
msgstr ""
"`Issue #18622 <https://bugs.python.org/18622>`__: unittest.mock.mock_open()."
"reset_mock would recurse infinitely. Patch from Nicola Palumbo and Laurent "
"De Buyst."

#: ../../../Misc/NEWS:2528
msgid ""
"`Issue #24426 <https://bugs.python.org/24426>`__: Fast searching "
"optimization in regular expressions now works for patterns that starts with "
"capturing groups.  Fast searching optimization now can't be disabled at "
"compile time."
msgstr ""
"`Issue #24426 <https://bugs.python.org/24426>`__: Fast searching "
"optimization in regular expressions now works for patterns that starts with "
"capturing groups.  Fast searching optimization now can't be disabled at "
"compile time."

#: ../../../Misc/NEWS:2532
msgid ""
"`Issue #23661 <https://bugs.python.org/23661>`__: unittest.mock side_effects "
"can now be exceptions again. This was a regression vs Python 3.4. Patch from "
"Ignacio Rossi"
msgstr ""
"`Issue #23661 <https://bugs.python.org/23661>`__: unittest.mock side_effects "
"can now be exceptions again. This was a regression vs Python 3.4. Patch from "
"Ignacio Rossi"

#: ../../../Misc/NEWS:2535
msgid ""
"`Issue #13248 <https://bugs.python.org/13248>`__: Remove deprecated inspect."
"getmoduleinfo function."
msgstr ""
"`Issue #13248 <https://bugs.python.org/13248>`__: Remove deprecated inspect."
"getmoduleinfo function."

#: ../../../Misc/NEWS:2537 ../../../Misc/NEWS:3138
msgid ""
"`Issue #25578 <https://bugs.python.org/25578>`__: Fix (another) memory leak "
"in SSLSocket.getpeercer()."
msgstr ""
"`Issue #25578 <https://bugs.python.org/25578>`__: Fix (another) memory leak "
"in SSLSocket.getpeercer()."

#: ../../../Misc/NEWS:2539 ../../../Misc/NEWS:3140
msgid ""
"`Issue #25530 <https://bugs.python.org/25530>`__: Disable the vulnerable "
"SSLv3 protocol by default when creating ssl.SSLContext."
msgstr ""
"`Issue #25530 <https://bugs.python.org/25530>`__: Disable the vulnerable "
"SSLv3 protocol by default when creating ssl.SSLContext."

#: ../../../Misc/NEWS:2542 ../../../Misc/NEWS:3143
msgid ""
"`Issue #25569 <https://bugs.python.org/25569>`__: Fix memory leak in "
"SSLSocket.getpeercert()."
msgstr ""
"`Issue #25569 <https://bugs.python.org/25569>`__: Fix memory leak in "
"SSLSocket.getpeercert()."

#: ../../../Misc/NEWS:2544 ../../../Misc/NEWS:3145
msgid ""
"`Issue #25471 <https://bugs.python.org/25471>`__: Sockets returned from "
"accept() shouldn't appear to be nonblocking."
msgstr ""
"`Issue #25471 <https://bugs.python.org/25471>`__: Sockets returned from "
"accept() shouldn't appear to be nonblocking."

#: ../../../Misc/NEWS:2547 ../../../Misc/NEWS:3148
msgid ""
"`Issue #25319 <https://bugs.python.org/25319>`__: When threading.Event is "
"reinitialized, the underlying condition should use a regular lock rather "
"than a recursive lock."
msgstr ""
"`Issue #25319 <https://bugs.python.org/25319>`__: When threading.Event is "
"reinitialized, the underlying condition should use a regular lock rather "
"than a recursive lock."

#: ../../../Misc/NEWS:2550
msgid ""
"Skip getaddrinfo if host is already resolved. Patch by A. Jesse Jiryu Davis."
msgstr ""

#: ../../../Misc/NEWS:2553
msgid ""
"`Issue #26050 <https://bugs.python.org/26050>`__: Add asyncio.StreamReader."
"readuntil() method. Patch by –ú–∞—Ä–∫ –ö–æ—Ä–µ–Ω–±–µ—Ä–≥."
msgstr ""
"`Issue #26050 <https://bugs.python.org/26050>`__: Add asyncio.StreamReader."
"readuntil() method. Patch by –ú–∞—Ä–∫ –ö–æ—Ä–µ–Ω–±–µ—Ä–≥."

#: ../../../Misc/NEWS:2556
msgid ""
"`Issue #25924 <https://bugs.python.org/25924>`__: Avoid unnecessary "
"serialization of getaddrinfo(3) calls on OS X versions 10.5 or higher.  "
"Original patch by A. Jesse Jiryu Davis."
msgstr ""
"`Issue #25924 <https://bugs.python.org/25924>`__: Avoid unnecessary "
"serialization of getaddrinfo(3) calls on OS X versions 10.5 or higher.  "
"Original patch by A. Jesse Jiryu Davis."

#: ../../../Misc/NEWS:2559
msgid ""
"`Issue #26406 <https://bugs.python.org/26406>`__: Avoid unnecessary "
"serialization of getaddrinfo(3) calls on current versions of OpenBSD and "
"NetBSD.  Patch by A. Jesse Jiryu Davis."
msgstr ""
"`Issue #26406 <https://bugs.python.org/26406>`__: Avoid unnecessary "
"serialization of getaddrinfo(3) calls on current versions of OpenBSD and "
"NetBSD.  Patch by A. Jesse Jiryu Davis."

#: ../../../Misc/NEWS:2562
msgid ""
"`Issue #26848 <https://bugs.python.org/26848>`__: Fix asyncio/subprocess."
"communicate() to handle empty input. Patch by Jack O'Connor."
msgstr ""
"`Issue #26848 <https://bugs.python.org/26848>`__: Fix asyncio/subprocess."
"communicate() to handle empty input. Patch by Jack O'Connor."

#: ../../../Misc/NEWS:2565
msgid ""
"`Issue #27040 <https://bugs.python.org/27040>`__: Add loop."
"get_exception_handler method"
msgstr ""
"`Issue #27040 <https://bugs.python.org/27040>`__: Add loop."
"get_exception_handler method"

#: ../../../Misc/NEWS:2567
msgid ""
"`Issue #27041 <https://bugs.python.org/27041>`__: asyncio: Add loop."
"create_future method"
msgstr ""
"`Issue #27041 <https://bugs.python.org/27041>`__: asyncio: Add loop."
"create_future method"

#: ../../../Misc/NEWS:2572
msgid ""
"`Issue #20640 <https://bugs.python.org/20640>`__: Add tests for idlelib."
"configHelpSourceEdit. Patch by Saimadhav Heblikar."
msgstr ""
"`Issue #20640 <https://bugs.python.org/20640>`__: Add tests for idlelib."
"configHelpSourceEdit. Patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:2575
msgid ""
"In the 'IDLE-console differences' section of the IDLE doc, clarify how "
"running with IDLE affects sys.modules and the standard streams."
msgstr ""

#: ../../../Misc/NEWS:2578
msgid ""
"`Issue #25507 <https://bugs.python.org/25507>`__: fix incorrect change in "
"IOBinding that prevented printing. Augment IOBinding htest to include all "
"major IOBinding functions."
msgstr ""
"`Issue #25507 <https://bugs.python.org/25507>`__: fix incorrect change in "
"IOBinding that prevented printing. Augment IOBinding htest to include all "
"major IOBinding functions."

#: ../../../Misc/NEWS:2581
msgid ""
"`Issue #25905 <https://bugs.python.org/25905>`__: Revert unwanted conversion "
"of ' to ‚Äô RIGHT SINGLE QUOTATION MARK in README.txt and open this and NEWS."
"txt with 'ascii'. Re-encode CREDITS.txt to utf-8 and open it with 'utf-8'."
msgstr ""
"`Issue #25905 <https://bugs.python.org/25905>`__: Revert unwanted conversion "
"of ' to ‚Äô RIGHT SINGLE QUOTATION MARK in README.txt and open this and NEWS."
"txt with 'ascii'. Re-encode CREDITS.txt to utf-8 and open it with 'utf-8'."

#: ../../../Misc/NEWS:2585 ../../../Misc/NEWS:3177
msgid ""
"`Issue #15348 <https://bugs.python.org/15348>`__: Stop the debugger engine "
"(normally in a user process) before closing the debugger window (running in "
"the IDLE process). This prevents the RuntimeErrors that were being caught "
"and ignored."
msgstr ""
"`Issue #15348 <https://bugs.python.org/15348>`__: Stop the debugger engine "
"(normally in a user process) before closing the debugger window (running in "
"the IDLE process). This prevents the RuntimeErrors that were being caught "
"and ignored."

#: ../../../Misc/NEWS:2589 ../../../Misc/NEWS:3181
msgid ""
"`Issue #24455 <https://bugs.python.org/24455>`__: Prevent IDLE from hanging "
"when a) closing the shell while the debugger is active (15347); b) closing "
"the debugger with the [X] button (15348); and c) activating the debugger "
"when already active (24455). The patch by Mark Roseman does this by making "
"two changes. 1. Suspend and resume the gui.interaction method with the tcl "
"vwait mechanism intended for this purpose (instead of root.mainloop & ."
"quit). 2. In gui.run, allow any existing interaction to terminate first."
msgstr ""
"`Issue #24455 <https://bugs.python.org/24455>`__: Prevent IDLE from hanging "
"when a) closing the shell while the debugger is active (15347); b) closing "
"the debugger with the [X] button (15348); and c) activating the debugger "
"when already active (24455). The patch by Mark Roseman does this by making "
"two changes. 1. Suspend and resume the gui.interaction method with the tcl "
"vwait mechanism intended for this purpose (instead of root.mainloop & ."
"quit). 2. In gui.run, allow any existing interaction to terminate first."

#: ../../../Misc/NEWS:2597 ../../../Misc/NEWS:3189
msgid ""
"Change 'The program' to 'Your program' in an IDLE 'kill program?' message to "
"make it clearer that the program referred to is the currently running user "
"program, not IDLE itself."
msgstr ""

#: ../../../Misc/NEWS:2601 ../../../Misc/NEWS:3193
msgid ""
"`Issue #24750 <https://bugs.python.org/24750>`__: Improve the appearance of "
"the IDLE editor window status bar. Patch by Mark Roseman."
msgstr ""
"`Issue #24750 <https://bugs.python.org/24750>`__: Improve the appearance of "
"the IDLE editor window status bar. Patch by Mark Roseman."

#: ../../../Misc/NEWS:2604 ../../../Misc/NEWS:3196
msgid ""
"`Issue #25313 <https://bugs.python.org/25313>`__: Change the handling of new "
"built-in text color themes to better address the compatibility problem "
"introduced by the addition of IDLE Dark. Consistently use the revised "
"idleConf.CurrentTheme everywhere in idlelib."
msgstr ""
"`Issue #25313 <https://bugs.python.org/25313>`__: Change the handling of new "
"built-in text color themes to better address the compatibility problem "
"introduced by the addition of IDLE Dark. Consistently use the revised "
"idleConf.CurrentTheme everywhere in idlelib."

#: ../../../Misc/NEWS:2608 ../../../Misc/NEWS:3200
msgid ""
"`Issue #24782 <https://bugs.python.org/24782>`__: Extension configuration is "
"now a tab in the IDLE Preferences dialog rather than a separate dialog.  The "
"former tabs are now a sorted list.  Patch by Mark Roseman."
msgstr ""
"`Issue #24782 <https://bugs.python.org/24782>`__: Extension configuration is "
"now a tab in the IDLE Preferences dialog rather than a separate dialog.  The "
"former tabs are now a sorted list.  Patch by Mark Roseman."

#: ../../../Misc/NEWS:2612 ../../../Misc/NEWS:3204
msgid ""
"`Issue #22726 <https://bugs.python.org/22726>`__: Re-activate the config "
"dialog help button with some content about the other buttons and the new "
"IDLE Dark theme."
msgstr ""
"`Issue #22726 <https://bugs.python.org/22726>`__: Re-activate the config "
"dialog help button with some content about the other buttons and the new "
"IDLE Dark theme."

#: ../../../Misc/NEWS:2615 ../../../Misc/NEWS:3207
msgid ""
"`Issue #24820 <https://bugs.python.org/24820>`__: IDLE now has an 'IDLE "
"Dark' built-in text color theme. It is more or less IDLE Classic inverted, "
"with a cobalt blue background. Strings, comments, keywords, ... are still "
"green, red, orange, ... . To use it with IDLEs released before November "
"2015, hit the 'Save as New Custom Theme' button and enter a new name, such "
"as 'Custom Dark'.  The custom theme will work with any IDLE release, and can "
"be modified."
msgstr ""
"`Issue #24820 <https://bugs.python.org/24820>`__: IDLE now has an 'IDLE "
"Dark' built-in text color theme. It is more or less IDLE Classic inverted, "
"with a cobalt blue background. Strings, comments, keywords, ... are still "
"green, red, orange, ... . To use it with IDLEs released before November "
"2015, hit the 'Save as New Custom Theme' button and enter a new name, such "
"as 'Custom Dark'.  The custom theme will work with any IDLE release, and can "
"be modified."

#: ../../../Misc/NEWS:2623 ../../../Misc/NEWS:3215
msgid ""
"`Issue #25224 <https://bugs.python.org/25224>`__: README.txt is now an "
"idlelib index for IDLE developers and curious users.  The previous user "
"content is now in the IDLE doc chapter. 'IDLE' now means 'Integrated "
"Development and Learning Environment'."
msgstr ""
"`Issue #25224 <https://bugs.python.org/25224>`__: README.txt is now an "
"idlelib index for IDLE developers and curious users.  The previous user "
"content is now in the IDLE doc chapter. 'IDLE' now means 'Integrated "
"Development and Learning Environment'."

#: ../../../Misc/NEWS:2627 ../../../Misc/NEWS:3219
msgid ""
"`Issue #24820 <https://bugs.python.org/24820>`__: Users can now set "
"breakpoint colors in Settings -> Custom Highlighting.  Original patch by "
"Mark Roseman."
msgstr ""
"`Issue #24820 <https://bugs.python.org/24820>`__: Users can now set "
"breakpoint colors in Settings -> Custom Highlighting.  Original patch by "
"Mark Roseman."

#: ../../../Misc/NEWS:2630 ../../../Misc/NEWS:3222
msgid ""
"`Issue #24972 <https://bugs.python.org/24972>`__: Inactive selection "
"background now matches active selection background, as configured by users, "
"on all systems.  Found items are now always highlighted on Windows.  Initial "
"patch by Mark Roseman."
msgstr ""
"`Issue #24972 <https://bugs.python.org/24972>`__: Inactive selection "
"background now matches active selection background, as configured by users, "
"on all systems.  Found items are now always highlighted on Windows.  Initial "
"patch by Mark Roseman."

#: ../../../Misc/NEWS:2634 ../../../Misc/NEWS:3226
msgid ""
"`Issue #24570 <https://bugs.python.org/24570>`__: Idle: make calltip and "
"completion boxes appear on Macs affected by a tk regression.  Initial patch "
"by Mark Roseman."
msgstr ""
"`Issue #24570 <https://bugs.python.org/24570>`__: Idle: make calltip and "
"completion boxes appear on Macs affected by a tk regression.  Initial patch "
"by Mark Roseman."

#: ../../../Misc/NEWS:2637 ../../../Misc/NEWS:3229
msgid ""
"`Issue #24988 <https://bugs.python.org/24988>`__: Idle ScrolledList context "
"menus (used in debugger) now work on Mac Aqua.  Patch by Mark Roseman."
msgstr ""
"`Issue #24988 <https://bugs.python.org/24988>`__: Idle ScrolledList context "
"menus (used in debugger) now work on Mac Aqua.  Patch by Mark Roseman."

#: ../../../Misc/NEWS:2640 ../../../Misc/NEWS:3232
msgid ""
"`Issue #24801 <https://bugs.python.org/24801>`__: Make right-click for "
"context menu work on Mac Aqua. Patch by Mark Roseman."
msgstr ""
"`Issue #24801 <https://bugs.python.org/24801>`__: Make right-click for "
"context menu work on Mac Aqua. Patch by Mark Roseman."

#: ../../../Misc/NEWS:2643 ../../../Misc/NEWS:3235
msgid ""
"`Issue #25173 <https://bugs.python.org/25173>`__: Associate tkinter "
"messageboxes with a specific widget. For Mac OSX, make them a 'sheet'.  "
"Patch by Mark Roseman."
msgstr ""
"`Issue #25173 <https://bugs.python.org/25173>`__: Associate tkinter "
"messageboxes with a specific widget. For Mac OSX, make them a 'sheet'.  "
"Patch by Mark Roseman."

#: ../../../Misc/NEWS:2646 ../../../Misc/NEWS:3238
msgid ""
"`Issue #25198 <https://bugs.python.org/25198>`__: Enhance the initial html "
"viewer now used for Idle Help. * Properly indent fixed-pitch text (patch by "
"Mark Roseman). * Give code snippet a very Sphinx-like light blueish-gray "
"background. * Re-use initial width and height set by users for shell and "
"editor. * When the Table of Contents (TOC) menu is used, put the section "
"header at the top of the screen."
msgstr ""
"`Issue #25198 <https://bugs.python.org/25198>`__: Enhance the initial html "
"viewer now used for Idle Help. * Properly indent fixed-pitch text (patch by "
"Mark Roseman). * Give code snippet a very Sphinx-like light blueish-gray "
"background. * Re-use initial width and height set by users for shell and "
"editor. * When the Table of Contents (TOC) menu is used, put the section "
"header at the top of the screen."

#: ../../../Misc/NEWS:2653 ../../../Misc/NEWS:3245
msgid ""
"`Issue #25225 <https://bugs.python.org/25225>`__: Condense and rewrite Idle "
"doc section on text colors."
msgstr ""
"`Issue #25225 <https://bugs.python.org/25225>`__: Condense and rewrite Idle "
"doc section on text colors."

#: ../../../Misc/NEWS:2655 ../../../Misc/NEWS:3247
msgid ""
"`Issue #21995 <https://bugs.python.org/21995>`__: Explain some differences "
"between IDLE and console Python."
msgstr ""
"`Issue #21995 <https://bugs.python.org/21995>`__: Explain some differences "
"between IDLE and console Python."

#: ../../../Misc/NEWS:2657 ../../../Misc/NEWS:3249
msgid ""
"`Issue #22820 <https://bugs.python.org/22820>`__: Explain need for *print* "
"when running file from Idle editor."
msgstr ""
"`Issue #22820 <https://bugs.python.org/22820>`__: Explain need for *print* "
"when running file from Idle editor."

#: ../../../Misc/NEWS:2659 ../../../Misc/NEWS:3251
msgid ""
"`Issue #25224 <https://bugs.python.org/25224>`__: Doc: augment Idle feature "
"list and no-subprocess section."
msgstr ""
"`Issue #25224 <https://bugs.python.org/25224>`__: Doc: augment Idle feature "
"list and no-subprocess section."

#: ../../../Misc/NEWS:2661 ../../../Misc/NEWS:3253
msgid ""
"`Issue #25219 <https://bugs.python.org/25219>`__: Update doc for Idle "
"command line options. Some were missing and notes were not correct."
msgstr ""
"`Issue #25219 <https://bugs.python.org/25219>`__: Update doc for Idle "
"command line options. Some were missing and notes were not correct."

#: ../../../Misc/NEWS:2664 ../../../Misc/NEWS:3256
msgid ""
"`Issue #24861 <https://bugs.python.org/24861>`__: Most of idlelib is private "
"and subject to change. Use idleib.idle.* to start Idle. See idlelib.__init__."
"__doc__."
msgstr ""
"`Issue #24861 <https://bugs.python.org/24861>`__: Most of idlelib is private "
"and subject to change. Use idleib.idle.* to start Idle. See idlelib.__init__."
"__doc__."

#: ../../../Misc/NEWS:2667 ../../../Misc/NEWS:3259
msgid ""
"`Issue #25199 <https://bugs.python.org/25199>`__: Idle: add synchronization "
"comments for future maintainers."
msgstr ""
"`Issue #25199 <https://bugs.python.org/25199>`__: Idle: add synchronization "
"comments for future maintainers."

#: ../../../Misc/NEWS:2669
msgid ""
"`Issue #16893 <https://bugs.python.org/16893>`__: Replace help.txt with help."
"html for Idle doc display. The new idlelib/help.html is rstripped Doc/build/"
"html/library/idle.html. It looks better than help.txt and will better "
"document Idle as released. The tkinter html viewer that works for this file "
"was written by Rose Roseman. The now unused EditorWindow.HelpDialog class "
"and helt.txt file are deprecated."
msgstr ""
"`Issue #16893 <https://bugs.python.org/16893>`__: Replace help.txt with help."
"html for Idle doc display. The new idlelib/help.html is rstripped Doc/build/"
"html/library/idle.html. It looks better than help.txt and will better "
"document Idle as released. The tkinter html viewer that works for this file "
"was written by Rose Roseman. The now unused EditorWindow.HelpDialog class "
"and helt.txt file are deprecated."

#: ../../../Misc/NEWS:2675 ../../../Misc/NEWS:3267
msgid ""
"`Issue #24199 <https://bugs.python.org/24199>`__: Deprecate unused idlelib."
"idlever with possible removal in 3.6."
msgstr ""
"`Issue #24199 <https://bugs.python.org/24199>`__: Deprecate unused idlelib."
"idlever with possible removal in 3.6."

#: ../../../Misc/NEWS:2677 ../../../Misc/NEWS:3269
msgid ""
"`Issue #24790 <https://bugs.python.org/24790>`__: Remove extraneous code "
"(which also create 2 & 3 conflicts)."
msgstr ""
"`Issue #24790 <https://bugs.python.org/24790>`__: Remove extraneous code "
"(which also create 2 & 3 conflicts)."

#: ../../../Misc/NEWS:2682
msgid ""
"`Issue #26736 <https://bugs.python.org/26736>`__: Used HTTPS for external "
"links in the documentation if possible."
msgstr ""
"`Issue #26736 <https://bugs.python.org/26736>`__: Used HTTPS for external "
"links in the documentation if possible."

#: ../../../Misc/NEWS:2684
msgid ""
"`Issue #6953 <https://bugs.python.org/6953>`__: Rework the Readline module "
"documentation to group related functions together, and add more details such "
"as what underlying Readline functions and variables are accessed."
msgstr ""
"`Issue #6953 <https://bugs.python.org/6953>`__: Rework the Readline module "
"documentation to group related functions together, and add more details such "
"as what underlying Readline functions and variables are accessed."

#: ../../../Misc/NEWS:2688
msgid ""
"`Issue #23606 <https://bugs.python.org/23606>`__: Adds note to ctypes "
"documentation regarding cdll.msvcrt."
msgstr ""
"`Issue #23606 <https://bugs.python.org/23606>`__: Adds note to ctypes "
"documentation regarding cdll.msvcrt."

#: ../../../Misc/NEWS:2690 ../../../Misc/NEWS:3281
msgid ""
"`Issue #24952 <https://bugs.python.org/24952>`__: Clarify the default size "
"argument of stack_size() in the \"threading\" and \"_thread\" modules. Patch "
"from Mattip."
msgstr ""
"`Issue #24952 <https://bugs.python.org/24952>`__: Clarify the default size "
"argument of stack_size() in the \"threading\" and \"_thread\" modules. Patch "
"from Mattip."

#: ../../../Misc/NEWS:2693
msgid ""
"`Issue #26014 <https://bugs.python.org/26014>`__: Update 3.x packaging "
"documentation: * \"See also\" links to the new docs are now provided in the "
"legacy pages * links to setuptools documentation have been updated"
msgstr ""
"`Issue #26014 <https://bugs.python.org/26014>`__: Update 3.x packaging "
"documentation: * \"See also\" links to the new docs are now provided in the "
"legacy pages * links to setuptools documentation have been updated"

#: ../../../Misc/NEWS:2700
msgid ""
"`Issue #21916 <https://bugs.python.org/21916>`__: Added tests for the turtle "
"module.  Patch by ingrid, Gregory Loyse and Jelle Zijlstra."
msgstr ""
"`Issue #21916 <https://bugs.python.org/21916>`__: Added tests for the turtle "
"module.  Patch by ingrid, Gregory Loyse and Jelle Zijlstra."

#: ../../../Misc/NEWS:2703
msgid ""
"`Issue #26295 <https://bugs.python.org/26295>`__: When using \"python3 -m "
"test --testdir=TESTDIR\", regrtest doesn't add \"test.\" prefix to test "
"module names."
msgstr ""
"`Issue #26295 <https://bugs.python.org/26295>`__: When using \"python3 -m "
"test --testdir=TESTDIR\", regrtest doesn't add \"test.\" prefix to test "
"module names."

#: ../../../Misc/NEWS:2706
msgid ""
"`Issue #26523 <https://bugs.python.org/26523>`__: The multiprocessing thread "
"pool (multiprocessing.dummy.Pool) was untested."
msgstr ""
"`Issue #26523 <https://bugs.python.org/26523>`__: The multiprocessing thread "
"pool (multiprocessing.dummy.Pool) was untested."

#: ../../../Misc/NEWS:2709
msgid ""
"`Issue #26015 <https://bugs.python.org/26015>`__: Added new tests for "
"pickling iterators of mutable sequences."
msgstr ""
"`Issue #26015 <https://bugs.python.org/26015>`__: Added new tests for "
"pickling iterators of mutable sequences."

#: ../../../Misc/NEWS:2711
msgid ""
"`Issue #26325 <https://bugs.python.org/26325>`__: Added test.support."
"check_no_resource_warning() to check that no ResourceWarning is emitted."
msgstr ""
"`Issue #26325 <https://bugs.python.org/26325>`__: Added test.support."
"check_no_resource_warning() to check that no ResourceWarning is emitted."

#: ../../../Misc/NEWS:2714
msgid ""
"`Issue #25940 <https://bugs.python.org/25940>`__: Changed test_ssl to use "
"its internal local server more.  This avoids relying on svn.python.org, "
"which recently changed root certificate."
msgstr ""
"`Issue #25940 <https://bugs.python.org/25940>`__: Changed test_ssl to use "
"its internal local server more.  This avoids relying on svn.python.org, "
"which recently changed root certificate."

#: ../../../Misc/NEWS:2717
msgid ""
"`Issue #25616 <https://bugs.python.org/25616>`__: Tests for OrderedDict are "
"extracted from test_collections into separate file test_ordered_dict."
msgstr ""
"`Issue #25616 <https://bugs.python.org/25616>`__: Tests for OrderedDict are "
"extracted from test_collections into separate file test_ordered_dict."

#: ../../../Misc/NEWS:2720 ../../../Misc/NEWS:3296
msgid ""
"`Issue #25449 <https://bugs.python.org/25449>`__: Added tests for "
"OrderedDict subclasses."
msgstr ""
"`Issue #25449 <https://bugs.python.org/25449>`__: Added tests for "
"OrderedDict subclasses."

#: ../../../Misc/NEWS:2722
msgid ""
"`Issue #25188 <https://bugs.python.org/25188>`__: Add -P/--pgo to test."
"regrtest to suppress error output when running the test suite for the "
"purposes of a PGO build. Initial patch by Alecsandru Patrascu."
msgstr ""
"`Issue #25188 <https://bugs.python.org/25188>`__: Add -P/--pgo to test."
"regrtest to suppress error output when running the test suite for the "
"purposes of a PGO build. Initial patch by Alecsandru Patrascu."

#: ../../../Misc/NEWS:2726
msgid ""
"`Issue #22806 <https://bugs.python.org/22806>`__: Add ``python -m test --"
"list-tests`` command to list tests."
msgstr ""
"`Issue #22806 <https://bugs.python.org/22806>`__: Add ``python -m test --"
"list-tests`` command to list tests."

#: ../../../Misc/NEWS:2728
msgid ""
"`Issue #18174 <https://bugs.python.org/18174>`__: ``python -m test --"
"huntrleaks ...`` now also checks for leak of file descriptors. Patch written "
"by Richard Oudkerk."
msgstr ""
"`Issue #18174 <https://bugs.python.org/18174>`__: ``python -m test --"
"huntrleaks ...`` now also checks for leak of file descriptors. Patch written "
"by Richard Oudkerk."

#: ../../../Misc/NEWS:2731
msgid ""
"`Issue #25260 <https://bugs.python.org/25260>`__: Fix ``python -m test --"
"coverage`` on Windows. Remove the list of ignored directories."
msgstr ""
"`Issue #25260 <https://bugs.python.org/25260>`__: Fix ``python -m test --"
"coverage`` on Windows. Remove the list of ignored directories."

#: ../../../Misc/NEWS:2734 ../../../Misc/NEWS:3303
msgid ""
"``PCbuild\\rt.bat`` now accepts an unlimited number of arguments to pass "
"along to regrtest.py.  Previously there was a limit of 9."
msgstr ""

#: ../../../Misc/NEWS:2737
msgid ""
"`Issue #26583 <https://bugs.python.org/26583>`__: Skip "
"test_timestamp_overflow in test_import if bytecode files cannot be written."
msgstr ""
"`Issue #26583 <https://bugs.python.org/26583>`__: Skip "
"test_timestamp_overflow in test_import if bytecode files cannot be written."

#: ../../../Misc/NEWS:2743
msgid ""
"`Issue #21277 <https://bugs.python.org/21277>`__: Don't try to link _ctypes "
"with a ffi_convenience library."
msgstr ""
"`Issue #21277 <https://bugs.python.org/21277>`__: Don't try to link _ctypes "
"with a ffi_convenience library."

#: ../../../Misc/NEWS:2745
msgid ""
"`Issue #26884 <https://bugs.python.org/26884>`__: Fix linking extension "
"modules for cross builds. Patch by Xavier de Gaye."
msgstr ""
"`Issue #26884 <https://bugs.python.org/26884>`__: Fix linking extension "
"modules for cross builds. Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:2748
msgid ""
"`Issue #26932 <https://bugs.python.org/26932>`__: Fixed support of RTLD_* "
"constants defined as enum values, not via macros (in particular on "
"Android).  Patch by Chi Hsuan Yen."
msgstr ""
"`Issue #26932 <https://bugs.python.org/26932>`__: Fixed support of RTLD_* "
"constants defined as enum values, not via macros (in particular on "
"Android).  Patch by Chi Hsuan Yen."

#: ../../../Misc/NEWS:2751
msgid ""
"`Issue #22359 <https://bugs.python.org/22359>`__: Disable the rules for "
"running _freeze_importlib and pgen when cross-compiling.  The output of "
"these programs is normally saved with the source code anyway, and is still "
"regenerated when doing a native build. Patch by Xavier de Gaye."
msgstr ""
"`Issue #22359 <https://bugs.python.org/22359>`__: Disable the rules for "
"running _freeze_importlib and pgen when cross-compiling.  The output of "
"these programs is normally saved with the source code anyway, and is still "
"regenerated when doing a native build. Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:2756
msgid ""
"`Issue #21668 <https://bugs.python.org/21668>`__: Link audioop, _datetime, "
"_ctypes_test modules to libm, except on Mac OS X. Patch written by Chi Hsuan "
"Yen."
msgstr ""
"`Issue #21668 <https://bugs.python.org/21668>`__: Link audioop, _datetime, "
"_ctypes_test modules to libm, except on Mac OS X. Patch written by Chi Hsuan "
"Yen."

#: ../../../Misc/NEWS:2759
msgid ""
"`Issue #25702 <https://bugs.python.org/25702>`__: A --with-lto configure "
"option has been added that will enable link time optimizations at build time "
"during a make profile-opt. Some compilers and toolchains are known to not "
"produce stable code when using LTO, be sure to test things thoroughly before "
"relying on it. It can provide a few % speed up over profile-opt alone."
msgstr ""
"`Issue #25702 <https://bugs.python.org/25702>`__: A --with-lto configure "
"option has been added that will enable link time optimizations at build time "
"during a make profile-opt. Some compilers and toolchains are known to not "
"produce stable code when using LTO, be sure to test things thoroughly before "
"relying on it. It can provide a few % speed up over profile-opt alone."

#: ../../../Misc/NEWS:2765
msgid ""
"`Issue #26624 <https://bugs.python.org/26624>`__: Adds validation of "
"ucrtbase[d].dll version with warning for old versions."
msgstr ""
"`Issue #26624 <https://bugs.python.org/26624>`__: Adds validation of "
"ucrtbase[d].dll version with warning for old versions."

#: ../../../Misc/NEWS:2768
msgid ""
"`Issue #17603 <https://bugs.python.org/17603>`__: Avoid error about "
"nonexistant fileblocks.o file by using a lower-level check for st_blocks in "
"struct stat."
msgstr ""
"`Issue #17603 <https://bugs.python.org/17603>`__: Avoid error about "
"nonexistant fileblocks.o file by using a lower-level check for st_blocks in "
"struct stat."

#: ../../../Misc/NEWS:2771
msgid ""
"`Issue #26079 <https://bugs.python.org/26079>`__: Fixing the build output "
"folder for tix-8.4.3.6. Patch by Bjoern Thiel."
msgstr ""
"`Issue #26079 <https://bugs.python.org/26079>`__: Fixing the build output "
"folder for tix-8.4.3.6. Patch by Bjoern Thiel."

#: ../../../Misc/NEWS:2774
msgid ""
"`Issue #26465 <https://bugs.python.org/26465>`__: Update Windows builds to "
"use OpenSSL 1.0.2g."
msgstr ""
"`Issue #26465 <https://bugs.python.org/26465>`__: Update Windows builds to "
"use OpenSSL 1.0.2g."

#: ../../../Misc/NEWS:2776
msgid ""
"`Issue #25348 <https://bugs.python.org/25348>`__: Added ``--pgo`` and ``--"
"pgo-job`` arguments to ``PCbuild\\build.bat`` for building with Profile-"
"Guided Optimization.  The old ``PCbuild\\build_pgo.bat`` script is removed."
msgstr ""
"`Issue #25348 <https://bugs.python.org/25348>`__: Added ``--pgo`` and ``--"
"pgo-job`` arguments to ``PCbuild\\build.bat`` for building with Profile-"
"Guided Optimization.  The old ``PCbuild\\build_pgo.bat`` script is removed."

#: ../../../Misc/NEWS:2780
msgid ""
"`Issue #25827 <https://bugs.python.org/25827>`__: Add support for building "
"with ICC to ``configure``, including a new ``--with-icc`` flag."
msgstr ""
"`Issue #25827 <https://bugs.python.org/25827>`__: Add support for building "
"with ICC to ``configure``, including a new ``--with-icc`` flag."

#: ../../../Misc/NEWS:2783
msgid ""
"`Issue #25696 <https://bugs.python.org/25696>`__: Fix installation of Python "
"on UNIX with make -j9."
msgstr ""
"`Issue #25696 <https://bugs.python.org/25696>`__: Fix installation of Python "
"on UNIX with make -j9."

#: ../../../Misc/NEWS:2785 ../../../Misc/NEWS:3314
msgid ""
"`Issue #24986 <https://bugs.python.org/24986>`__: It is now possible to "
"build Python on Windows without errors when external libraries are not "
"available."
msgstr ""
"`Issue #24986 <https://bugs.python.org/24986>`__: It is now possible to "
"build Python on Windows without errors when external libraries are not "
"available."

#: ../../../Misc/NEWS:2788
msgid ""
"`Issue #24421 <https://bugs.python.org/24421>`__: Compile Modules/_math.c "
"once, before building extensions. Previously it could fail to compile "
"properly if the math and cmath builds were concurrent."
msgstr ""
"`Issue #24421 <https://bugs.python.org/24421>`__: Compile Modules/_math.c "
"once, before building extensions. Previously it could fail to compile "
"properly if the math and cmath builds were concurrent."

#: ../../../Misc/NEWS:2792
msgid ""
"`Issue #26465 <https://bugs.python.org/26465>`__: Update OS X 10.5+ 32-bit-"
"only installer to build and link with OpenSSL 1.0.2g."
msgstr ""
"`Issue #26465 <https://bugs.python.org/26465>`__: Update OS X 10.5+ 32-bit-"
"only installer to build and link with OpenSSL 1.0.2g."

#: ../../../Misc/NEWS:2795
msgid ""
"`Issue #26268 <https://bugs.python.org/26268>`__: Update Windows builds to "
"use OpenSSL 1.0.2f."
msgstr ""
"`Issue #26268 <https://bugs.python.org/26268>`__: Update Windows builds to "
"use OpenSSL 1.0.2f."

#: ../../../Misc/NEWS:2797
msgid ""
"`Issue #25136 <https://bugs.python.org/25136>`__: Support Apple Xcode 7's "
"new textual SDK stub libraries."
msgstr ""
"`Issue #25136 <https://bugs.python.org/25136>`__: Support Apple Xcode 7's "
"new textual SDK stub libraries."

#: ../../../Misc/NEWS:2799
msgid ""
"`Issue #24324 <https://bugs.python.org/24324>`__: Do not enable unreachable "
"code warnings when using gcc as the option does not work correctly in older "
"versions of gcc and has been silently removed as of gcc-4.5."
msgstr ""
"`Issue #24324 <https://bugs.python.org/24324>`__: Do not enable unreachable "
"code warnings when using gcc as the option does not work correctly in older "
"versions of gcc and has been silently removed as of gcc-4.5."

#: ../../../Misc/NEWS:2806
msgid ""
"`Issue #27053 <https://bugs.python.org/27053>`__: Updates make_zip.py to "
"correctly generate library ZIP file."
msgstr ""
"`Issue #27053 <https://bugs.python.org/27053>`__: Updates make_zip.py to "
"correctly generate library ZIP file."

#: ../../../Misc/NEWS:2808
msgid ""
"`Issue #26268 <https://bugs.python.org/26268>`__: Update the prepare_ssl.py "
"script to handle OpenSSL releases that don't include the contents of the "
"include directory (that is, 1.0.2e and later)."
msgstr ""
"`Issue #26268 <https://bugs.python.org/26268>`__: Update the prepare_ssl.py "
"script to handle OpenSSL releases that don't include the contents of the "
"include directory (that is, 1.0.2e and later)."

#: ../../../Misc/NEWS:2812
msgid ""
"`Issue #26071 <https://bugs.python.org/26071>`__: bdist_wininst created "
"binaries fail to start and find 32bit Python"
msgstr ""
"`Issue #26071 <https://bugs.python.org/26071>`__: bdist_wininst created "
"binaries fail to start and find 32bit Python"

#: ../../../Misc/NEWS:2815
msgid ""
"`Issue #26073 <https://bugs.python.org/26073>`__: Update the list of magic "
"numbers in launcher"
msgstr ""
"`Issue #26073 <https://bugs.python.org/26073>`__: Update the list of magic "
"numbers in launcher"

#: ../../../Misc/NEWS:2817
msgid ""
"`Issue #26065 <https://bugs.python.org/26065>`__: Excludes venv from library "
"when generating embeddable distro."
msgstr ""
"`Issue #26065 <https://bugs.python.org/26065>`__: Excludes venv from library "
"when generating embeddable distro."

#: ../../../Misc/NEWS:2820 ../../../Misc/NEWS:3353
msgid ""
"`Issue #25022 <https://bugs.python.org/25022>`__: Removed very outdated PC/"
"example_nt/ directory."
msgstr ""
"`Issue #25022 <https://bugs.python.org/25022>`__: Removed very outdated PC/"
"example_nt/ directory."

#: ../../../Misc/NEWS:2825
msgid ""
"`Issue #26799 <https://bugs.python.org/26799>`__: Fix python-gdb.py: don't "
"get C types once when the Python code is loaded, but get C types on demand. "
"The C types can change if python-gdb.py is loaded before the Python "
"executable. Patch written by Thomas Ilsche."
msgstr ""
"`Issue #26799 <https://bugs.python.org/26799>`__: Fix python-gdb.py: don't "
"get C types once when the Python code is loaded, but get C types on demand. "
"The C types can change if python-gdb.py is loaded before the Python "
"executable. Patch written by Thomas Ilsche."

#: ../../../Misc/NEWS:2830
msgid ""
"`Issue #26271 <https://bugs.python.org/26271>`__: Fix the Freeze tool to "
"properly use flags passed through configure. Patch by Daniel Shaulov."
msgstr ""
"`Issue #26271 <https://bugs.python.org/26271>`__: Fix the Freeze tool to "
"properly use flags passed through configure. Patch by Daniel Shaulov."

#: ../../../Misc/NEWS:2833
msgid ""
"`Issue #26489 <https://bugs.python.org/26489>`__: Add dictionary unpacking "
"support to Tools/parser/unparse.py. Patch by Guo Ci Teo."
msgstr ""
"`Issue #26489 <https://bugs.python.org/26489>`__: Add dictionary unpacking "
"support to Tools/parser/unparse.py. Patch by Guo Ci Teo."

#: ../../../Misc/NEWS:2836
msgid ""
"`Issue #26316 <https://bugs.python.org/26316>`__: Fix variable name typo in "
"Argument Clinic."
msgstr ""
"`Issue #26316 <https://bugs.python.org/26316>`__: Fix variable name typo in "
"Argument Clinic."

#: ../../../Misc/NEWS:2838 ../../../Misc/NEWS:3358
msgid ""
"`Issue #25440 <https://bugs.python.org/25440>`__: Fix output of python-"
"config --extension-suffix."
msgstr ""
"`Issue #25440 <https://bugs.python.org/25440>`__: Fix output of python-"
"config --extension-suffix."

#: ../../../Misc/NEWS:2840
msgid ""
"`Issue #25154 <https://bugs.python.org/25154>`__: The pyvenv script has been "
"deprecated in favour of `python3 -m venv`."
msgstr ""
"`Issue #25154 <https://bugs.python.org/25154>`__: The pyvenv script has been "
"deprecated in favour of `python3 -m venv`."

#: ../../../Misc/NEWS:2846
msgid ""
"`Issue #26312 <https://bugs.python.org/26312>`__: SystemError is now raised "
"in all programming bugs with using PyArg_ParseTupleAndKeywords().  "
"RuntimeError did raised before in some programming bugs."
msgstr ""
"`Issue #26312 <https://bugs.python.org/26312>`__: SystemError is now raised "
"in all programming bugs with using PyArg_ParseTupleAndKeywords().  "
"RuntimeError did raised before in some programming bugs."

#: ../../../Misc/NEWS:2850
msgid ""
"`Issue #26198 <https://bugs.python.org/26198>`__: ValueError is now raised "
"instead of TypeError on buffer overflow in parsing \"es#\" and \"et#\" "
"format units.  SystemError is now raised instead of TypeError on "
"programmical error in parsing format string."
msgstr ""
"`Issue #26198 <https://bugs.python.org/26198>`__: ValueError is now raised "
"instead of TypeError on buffer overflow in parsing \"es#\" and \"et#\" "
"format units.  SystemError is now raised instead of TypeError on "
"programmical error in parsing format string."

#: ../../../Misc/NEWS:2856
msgid "Python 3.5.1 final"
msgstr "Python 3.5.1 final"

#: ../../../Misc/NEWS:2858
msgid "Release date: 2015-12-06"
msgstr ""

#: ../../../Misc/NEWS:2869
msgid ""
"`Issue #25715 <https://bugs.python.org/25715>`__: Python 3.5.1 installer "
"shows wrong upgrade path and incorrect logic for launcher detection."
msgstr ""
"`Issue #25715 <https://bugs.python.org/25715>`__: Python 3.5.1 installer "
"shows wrong upgrade path and incorrect logic for launcher detection."

#: ../../../Misc/NEWS:2874
msgid "Python 3.5.1 release candidate 1"
msgstr ""

#: ../../../Misc/NEWS:2876
msgid "Release date: 2015-11-22"
msgstr ""

#: ../../../Misc/NEWS:2934
msgid ""
"`Issue #25182 <https://bugs.python.org/25182>`__: The stdprinter (used as "
"sys.stderr before the io module is imported at startup) now uses the "
"backslashreplace error handler."
msgstr ""
"`Issue #25182 <https://bugs.python.org/25182>`__: The stdprinter (used as "
"sys.stderr before the io module is imported at startup) now uses the "
"backslashreplace error handler."

#: ../../../Misc/NEWS:2937
msgid ""
"`Issue #25131 <https://bugs.python.org/25131>`__: Make the line number and "
"column offset of set/dict literals and comprehensions correspond to the "
"opening brace."
msgstr ""
"`Issue #25131 <https://bugs.python.org/25131>`__: Make the line number and "
"column offset of set/dict literals and comprehensions correspond to the "
"opening brace."

#: ../../../Misc/NEWS:2940
msgid ""
"`Issue #25150 <https://bugs.python.org/25150>`__: Hide the private "
"_Py_atomic_xxx symbols from the public Python.h header to fix a compilation "
"error with OpenMP. PyThreadState_GET() becomes an alias to "
"PyThreadState_Get() to avoid ABI incompatibilies."
msgstr ""
"`Issue #25150 <https://bugs.python.org/25150>`__: Hide the private "
"_Py_atomic_xxx symbols from the public Python.h header to fix a compilation "
"error with OpenMP. PyThreadState_GET() becomes an alias to "
"PyThreadState_Get() to avoid ABI incompatibilies."

#: ../../../Misc/NEWS:2963
msgid ""
"`Issue #25590 <https://bugs.python.org/25590>`__: In the Readline completer, "
"only call getattr() once per attribute."
msgstr ""
"`Issue #25590 <https://bugs.python.org/25590>`__: In the Readline completer, "
"only call getattr() once per attribute."

#: ../../../Misc/NEWS:3041
msgid ""
"`Issue #24483 <https://bugs.python.org/24483>`__: C implementation of "
"functools.lru_cache() now calculates key's hash only once."
msgstr ""
"`Issue #24483 <https://bugs.python.org/24483>`__: C implementation of "
"functools.lru_cache() now calculates key's hash only once."

#: ../../../Misc/NEWS:3044
msgid ""
"`Issue #22958 <https://bugs.python.org/22958>`__: Constructor and update "
"method of weakref.WeakValueDictionary now accept the self and the dict "
"keyword arguments."
msgstr ""
"`Issue #22958 <https://bugs.python.org/22958>`__: Constructor and update "
"method of weakref.WeakValueDictionary now accept the self and the dict "
"keyword arguments."

#: ../../../Misc/NEWS:3047
msgid ""
"`Issue #22609 <https://bugs.python.org/22609>`__: Constructor of collections."
"UserDict now accepts the self keyword argument."
msgstr ""
"`Issue #22609 <https://bugs.python.org/22609>`__: Constructor of collections."
"UserDict now accepts the self keyword argument."

#: ../../../Misc/NEWS:3050
msgid ""
"`Issue #25111 <https://bugs.python.org/25111>`__: Fixed comparison of "
"traceback.FrameSummary."
msgstr ""
"`Issue #25111 <https://bugs.python.org/25111>`__: Fixed comparison of "
"traceback.FrameSummary."

#: ../../../Misc/NEWS:3052
msgid ""
"`Issue #25262 <https://bugs.python.org/25262>`__: Added support for "
"BINBYTES8 opcode in Python implementation of unpickler.  Highest 32 bits of "
"64-bit size for BINUNICODE8 and BINBYTES8 opcodes no longer silently ignored "
"on 32-bit platforms in C implementation."
msgstr ""
"`Issue #25262 <https://bugs.python.org/25262>`__: Added support for "
"BINBYTES8 opcode in Python implementation of unpickler.  Highest 32 bits of "
"64-bit size for BINUNICODE8 and BINBYTES8 opcodes no longer silently ignored "
"on 32-bit platforms in C implementation."

#: ../../../Misc/NEWS:3056
msgid ""
"`Issue #25034 <https://bugs.python.org/25034>`__: Fix string.Formatter "
"problem with auto-numbering and nested format_specs. Patch by Anthon van der "
"Neut."
msgstr ""
"`Issue #25034 <https://bugs.python.org/25034>`__: Fix string.Formatter "
"problem with auto-numbering and nested format_specs. Patch by Anthon van der "
"Neut."

#: ../../../Misc/NEWS:3059
msgid ""
"`Issue #25233 <https://bugs.python.org/25233>`__: Rewrite the guts of "
"asyncio.Queue and asyncio.Semaphore to be more understandable and correct."
msgstr ""
"`Issue #25233 <https://bugs.python.org/25233>`__: Rewrite the guts of "
"asyncio.Queue and asyncio.Semaphore to be more understandable and correct."

#: ../../../Misc/NEWS:3068
msgid ""
"`Issue #23329 <https://bugs.python.org/23329>`__: Allow the ssl module to be "
"built with older versions of LibreSSL."
msgstr ""
"`Issue #23329 <https://bugs.python.org/23329>`__: Allow the ssl module to be "
"built with older versions of LibreSSL."

#: ../../../Misc/NEWS:3071
msgid "Prevent overflow in _Unpickler_Read."
msgstr ""

#: ../../../Misc/NEWS:3073
msgid ""
"`Issue #25047 <https://bugs.python.org/25047>`__: The XML encoding "
"declaration written by Element Tree now respects the letter case given by "
"the user. This restores the ability to write encoding names in uppercase "
"like \"UTF-8\", which worked in Python 2."
msgstr ""
"`Issue #25047 <https://bugs.python.org/25047>`__: The XML encoding "
"declaration written by Element Tree now respects the letter case given by "
"the user. This restores the ability to write encoding names in uppercase "
"like \"UTF-8\", which worked in Python 2."

#: ../../../Misc/NEWS:3077
msgid ""
"`Issue #25135 <https://bugs.python.org/25135>`__: Make deque_clear() safer "
"by emptying the deque before clearing. This helps avoid possible reentrancy "
"issues."
msgstr ""
"`Issue #25135 <https://bugs.python.org/25135>`__: Make deque_clear() safer "
"by emptying the deque before clearing. This helps avoid possible reentrancy "
"issues."

#: ../../../Misc/NEWS:3080
msgid ""
"`Issue #19143 <https://bugs.python.org/19143>`__: platform module now reads "
"Windows version from kernel32.dll to avoid compatibility shims."
msgstr ""
"`Issue #19143 <https://bugs.python.org/19143>`__: platform module now reads "
"Windows version from kernel32.dll to avoid compatibility shims."

#: ../../../Misc/NEWS:3083
msgid ""
"`Issue #25092 <https://bugs.python.org/25092>`__: Fix datetime.strftime() "
"failure when errno was already set to EINVAL."
msgstr ""
"`Issue #25092 <https://bugs.python.org/25092>`__: Fix datetime.strftime() "
"failure when errno was already set to EINVAL."

#: ../../../Misc/NEWS:3086
msgid ""
"`Issue #23517 <https://bugs.python.org/23517>`__: Fix rounding in "
"fromtimestamp() and utcfromtimestamp() methods of datetime.datetime: "
"microseconds are now rounded to nearest with ties going to nearest even "
"integer (ROUND_HALF_EVEN), instead of being rounding towards minus infinity "
"(ROUND_FLOOR). It's important that these methods use the same rounding mode "
"than datetime.timedelta to keep the property: (datetime(1970,1,1) + "
"timedelta(seconds=t)) == datetime.utcfromtimestamp(t). It also the rounding "
"mode used by round(float) for example."
msgstr ""
"`Issue #23517 <https://bugs.python.org/23517>`__: Fix rounding in "
"fromtimestamp() and utcfromtimestamp() methods of datetime.datetime: "
"microseconds are now rounded to nearest with ties going to nearest even "
"integer (ROUND_HALF_EVEN), instead of being rounding towards minus infinity "
"(ROUND_FLOOR). It's important that these methods use the same rounding mode "
"than datetime.timedelta to keep the property: (datetime(1970,1,1) + "
"timedelta(seconds=t)) == datetime.utcfromtimestamp(t). It also the rounding "
"mode used by round(float) for example."

#: ../../../Misc/NEWS:3094
msgid ""
"`Issue #25155 <https://bugs.python.org/25155>`__: Fix datetime.datetime."
"now() and datetime.datetime.utcnow() on Windows to support date after year "
"2038. It was a regression introduced in Python 3.5.0."
msgstr ""
"`Issue #25155 <https://bugs.python.org/25155>`__: Fix datetime.datetime."
"now() and datetime.datetime.utcnow() on Windows to support date after year "
"2038. It was a regression introduced in Python 3.5.0."

#: ../../../Misc/NEWS:3098
msgid ""
"`Issue #25108 <https://bugs.python.org/25108>`__: Omitted internal frames in "
"traceback functions print_stack(), format_stack(), and extract_stack() "
"called without arguments."
msgstr ""
"`Issue #25108 <https://bugs.python.org/25108>`__: Omitted internal frames in "
"traceback functions print_stack(), format_stack(), and extract_stack() "
"called without arguments."

#: ../../../Misc/NEWS:3101
msgid ""
"`Issue #25118 <https://bugs.python.org/25118>`__: Fix a regression of Python "
"3.5.0 in os.waitpid() on Windows."
msgstr ""
"`Issue #25118 <https://bugs.python.org/25118>`__: Fix a regression of Python "
"3.5.0 in os.waitpid() on Windows."

#: ../../../Misc/NEWS:3103
msgid ""
"`Issue #24684 <https://bugs.python.org/24684>`__: socket.socket."
"getaddrinfo() now calls PyUnicode_AsEncodedString() instead of calling the "
"encode() method of the host, to handle correctly custom string with an "
"encode() method which doesn't return a byte string. The encoder of the IDNA "
"codec is now called directly instead of calling the encode() method of the "
"string."
msgstr ""
"`Issue #24684 <https://bugs.python.org/24684>`__: socket.socket."
"getaddrinfo() now calls PyUnicode_AsEncodedString() instead of calling the "
"encode() method of the host, to handle correctly custom string with an "
"encode() method which doesn't return a byte string. The encoder of the IDNA "
"codec is now called directly instead of calling the encode() method of the "
"string."

#: ../../../Misc/NEWS:3109
msgid ""
"`Issue #25060 <https://bugs.python.org/25060>`__: Correctly compute stack "
"usage of the BUILD_MAP opcode."
msgstr ""
"`Issue #25060 <https://bugs.python.org/25060>`__: Correctly compute stack "
"usage of the BUILD_MAP opcode."

#: ../../../Misc/NEWS:3111
msgid ""
"`Issue #24857 <https://bugs.python.org/24857>`__: Comparing call_args to a "
"long sequence now correctly returns a boolean result instead of raising an "
"exception.  Patch by A Kaptur."
msgstr ""
"`Issue #24857 <https://bugs.python.org/24857>`__: Comparing call_args to a "
"long sequence now correctly returns a boolean result instead of raising an "
"exception.  Patch by A Kaptur."

#: ../../../Misc/NEWS:3114
msgid ""
"`Issue #23144 <https://bugs.python.org/23144>`__: Make sure that HTMLParser."
"feed() returns all the data, even when convert_charrefs is True."
msgstr ""
"`Issue #23144 <https://bugs.python.org/23144>`__: Make sure that HTMLParser."
"feed() returns all the data, even when convert_charrefs is True."

#: ../../../Misc/NEWS:3117
msgid ""
"`Issue #24982 <https://bugs.python.org/24982>`__: shutil.make_archive() with "
"the \"zip\" format now adds entries for directories (including empty "
"directories) in ZIP file."
msgstr ""
"`Issue #24982 <https://bugs.python.org/24982>`__: shutil.make_archive() with "
"the \"zip\" format now adds entries for directories (including empty "
"directories) in ZIP file."

#: ../../../Misc/NEWS:3120
msgid ""
"`Issue #25019 <https://bugs.python.org/25019>`__: Fixed a crash caused by "
"setting non-string key of expat parser. Based on patch by John Leitch."
msgstr ""
"`Issue #25019 <https://bugs.python.org/25019>`__: Fixed a crash caused by "
"setting non-string key of expat parser. Based on patch by John Leitch."

#: ../../../Misc/NEWS:3123
msgid ""
"`Issue #16180 <https://bugs.python.org/16180>`__: Exit pdb if file has "
"syntax error, instead of trapping user in an infinite loop.  Patch by Xavier "
"de Gaye."
msgstr ""
"`Issue #16180 <https://bugs.python.org/16180>`__: Exit pdb if file has "
"syntax error, instead of trapping user in an infinite loop.  Patch by Xavier "
"de Gaye."

#: ../../../Misc/NEWS:3126
msgid ""
"`Issue #24891 <https://bugs.python.org/24891>`__: Fix a race condition at "
"Python startup if the file descriptor of stdin (0), stdout (1) or stderr (2) "
"is closed while Python is creating sys.stdin, sys.stdout and sys.stderr "
"objects. These attributes are now set to None if the creation of the object "
"failed, instead of raising an OSError exception. Initial patch written by "
"Marco Paolini."
msgstr ""
"`Issue #24891 <https://bugs.python.org/24891>`__: Fix a race condition at "
"Python startup if the file descriptor of stdin (0), stdout (1) or stderr (2) "
"is closed while Python is creating sys.stdin, sys.stdout and sys.stderr "
"objects. These attributes are now set to None if the creation of the object "
"failed, instead of raising an OSError exception. Initial patch written by "
"Marco Paolini."

#: ../../../Misc/NEWS:3132
msgid ""
"`Issue #24992 <https://bugs.python.org/24992>`__: Fix error handling and a "
"race condition (related to garbage collection) in collections.OrderedDict "
"constructor."
msgstr ""
"`Issue #24992 <https://bugs.python.org/24992>`__: Fix error handling and a "
"race condition (related to garbage collection) in collections.OrderedDict "
"constructor."

#: ../../../Misc/NEWS:3135
msgid ""
"`Issue #24881 <https://bugs.python.org/24881>`__: Fixed setting binary mode "
"in Python implementation of FileIO on Windows and Cygwin.  Patch from Akira "
"Li."
msgstr ""
"`Issue #24881 <https://bugs.python.org/24881>`__: Fixed setting binary mode "
"in Python implementation of FileIO on Windows and Cygwin.  Patch from Akira "
"Li."

#: ../../../Misc/NEWS:3151
msgid ""
"`Issue #21112 <https://bugs.python.org/21112>`__: Fix regression in unittest."
"expectedFailure on subclasses. Patch from Berker Peksag."
msgstr ""
"`Issue #21112 <https://bugs.python.org/21112>`__: Fix regression in unittest."
"expectedFailure on subclasses. Patch from Berker Peksag."

#: ../../../Misc/NEWS:3154
msgid ""
"`Issue #24764 <https://bugs.python.org/24764>`__: cgi.FieldStorage."
"read_multi() now ignores the Content-Length header in part headers. Patch "
"written by Peter Landry and reviewed by Pierre Quentel."
msgstr ""
"`Issue #24764 <https://bugs.python.org/24764>`__: cgi.FieldStorage."
"read_multi() now ignores the Content-Length header in part headers. Patch "
"written by Peter Landry and reviewed by Pierre Quentel."

#: ../../../Misc/NEWS:3158 ../../../Misc/NEWS:3421
msgid ""
"`Issue #24913 <https://bugs.python.org/24913>`__: Fix overrun error in deque."
"index(). Found by John Leitch and Bryce Darling."
msgstr ""
"`Issue #24913 <https://bugs.python.org/24913>`__: Fix overrun error in deque."
"index(). Found by John Leitch and Bryce Darling."

#: ../../../Misc/NEWS:3161
msgid ""
"`Issue #24774 <https://bugs.python.org/24774>`__: Fix docstring in http."
"server.test. Patch from Chiu-Hsiang Hsu."
msgstr ""
"`Issue #24774 <https://bugs.python.org/24774>`__: Fix docstring in http."
"server.test. Patch from Chiu-Hsiang Hsu."

#: ../../../Misc/NEWS:3163
msgid ""
"`Issue #21159 <https://bugs.python.org/21159>`__: Improve message in "
"configparser.InterpolationMissingOptionError. Patch from ÔøΩ?ukasz Langa."
msgstr ""
"`Issue #21159 <https://bugs.python.org/21159>`__: Improve message in "
"configparser.InterpolationMissingOptionError. Patch from ÔøΩ?ukasz Langa."

#: ../../../Misc/NEWS:3166
msgid ""
"`Issue #20362 <https://bugs.python.org/20362>`__: Honour TestCase."
"longMessage correctly in assertRegex. Patch from Ilia Kurenkov."
msgstr ""
"`Issue #20362 <https://bugs.python.org/20362>`__: Honour TestCase."
"longMessage correctly in assertRegex. Patch from Ilia Kurenkov."

#: ../../../Misc/NEWS:3169
msgid ""
"`Issue #23572 <https://bugs.python.org/23572>`__: Fixed functools."
"singledispatch on classes with falsy metaclasses.  Patch by Ethan Furman."
msgstr ""
"`Issue #23572 <https://bugs.python.org/23572>`__: Fixed functools."
"singledispatch on classes with falsy metaclasses.  Patch by Ethan Furman."

#: ../../../Misc/NEWS:3172
msgid "asyncio: ensure_future() now accepts awaitable objects."
msgstr ""

#: ../../../Misc/NEWS:3261
msgid ""
"`Issue #16893 <https://bugs.python.org/16893>`__: Replace help.txt with help."
"html for Idle doc display. The new idlelib/help.html is rstripped Doc/build/"
"html/library/idle.html. It looks better than help.txt and will better "
"document Idle as released. The tkinter html viewer that works for this file "
"was written by Mark Roseman. The now unused EditorWindow.HelpDialog class "
"and helt.txt file are deprecated."
msgstr ""
"`Issue #16893 <https://bugs.python.org/16893>`__: Replace help.txt with help."
"html for Idle doc display. The new idlelib/help.html is rstripped Doc/build/"
"html/library/idle.html. It looks better than help.txt and will better "
"document Idle as released. The tkinter html viewer that works for this file "
"was written by Mark Roseman. The now unused EditorWindow.HelpDialog class "
"and helt.txt file are deprecated."

#: ../../../Misc/NEWS:3274
msgid ""
"`Issue #12067 <https://bugs.python.org/12067>`__: Rewrite Comparisons "
"section in the Expressions chapter of the language reference. Some of the "
"details of comparing mixed types were incorrect or ambiguous. NotImplemented "
"is only relevant at a lower level than the Expressions chapter. Added "
"details of comparing range() objects, and default behaviour and consistency "
"suggestions for user-defined classes. Patch from Andy Maier."
msgstr ""
"`Issue #12067 <https://bugs.python.org/12067>`__: Rewrite Comparisons "
"section in the Expressions chapter of the language reference. Some of the "
"details of comparing mixed types were incorrect or ambiguous. NotImplemented "
"is only relevant at a lower level than the Expressions chapter. Added "
"details of comparing range() objects, and default behaviour and consistency "
"suggestions for user-defined classes. Patch from Andy Maier."

#: ../../../Misc/NEWS:3284
msgid ""
"`Issue #23725 <https://bugs.python.org/23725>`__: Overhaul tempfile docs. "
"Note deprecated status of mktemp. Patch from Zbigniew Jƒôdrzejewski-Szmek."
msgstr ""
"`Issue #23725 <https://bugs.python.org/23725>`__: Overhaul tempfile docs. "
"Note deprecated status of mktemp. Patch from Zbigniew Jƒôdrzejewski-Szmek."

#: ../../../Misc/NEWS:3287
msgid ""
"`Issue #24808 <https://bugs.python.org/24808>`__: Update the types of some "
"PyTypeObject fields.  Patch by Joseph Weston."
msgstr ""
"`Issue #24808 <https://bugs.python.org/24808>`__: Update the types of some "
"PyTypeObject fields.  Patch by Joseph Weston."

#: ../../../Misc/NEWS:3290
msgid ""
"`Issue #22812 <https://bugs.python.org/22812>`__: Fix unittest discovery "
"examples. Patch from Pam McA'Nulty."
msgstr ""
"`Issue #22812 <https://bugs.python.org/22812>`__: Fix unittest discovery "
"examples. Patch from Pam McA'Nulty."

#: ../../../Misc/NEWS:3298
msgid ""
"`Issue #25099 <https://bugs.python.org/25099>`__: Make test_compileall not "
"fail when an entry on sys.path cannot be written to (commonly seen in "
"administrative installs on Windows)."
msgstr ""
"`Issue #25099 <https://bugs.python.org/25099>`__: Make test_compileall not "
"fail when an entry on sys.path cannot be written to (commonly seen in "
"administrative installs on Windows)."

#: ../../../Misc/NEWS:3301
msgid ""
"`Issue #23919 <https://bugs.python.org/23919>`__: Prevents assert dialogs "
"appearing in the test suite."
msgstr ""
"`Issue #23919 <https://bugs.python.org/23919>`__: Prevents assert dialogs "
"appearing in the test suite."

#: ../../../Misc/NEWS:3309
msgid ""
"`Issue #24915 <https://bugs.python.org/24915>`__: Add LLVM support for PGO "
"builds and use the test suite to generate the profile data. Initial patch by "
"Alecsandru Patrascu of Intel."
msgstr ""
"`Issue #24915 <https://bugs.python.org/24915>`__: Add LLVM support for PGO "
"builds and use the test suite to generate the profile data. Initial patch by "
"Alecsandru Patrascu of Intel."

#: ../../../Misc/NEWS:3312
msgid ""
"`Issue #24910 <https://bugs.python.org/24910>`__: Windows MSIs now have "
"unique display names."
msgstr ""
"`Issue #24910 <https://bugs.python.org/24910>`__: Windows MSIs now have "
"unique display names."

#: ../../../Misc/NEWS:3320
msgid ""
"`Issue #25450 <https://bugs.python.org/25450>`__: Updates shortcuts to start "
"Python in installation directory."
msgstr ""
"`Issue #25450 <https://bugs.python.org/25450>`__: Updates shortcuts to start "
"Python in installation directory."

#: ../../../Misc/NEWS:3322
msgid ""
"`Issue #25164 <https://bugs.python.org/25164>`__: Changes default all-users "
"install directory to match per-user directory."
msgstr ""
"`Issue #25164 <https://bugs.python.org/25164>`__: Changes default all-users "
"install directory to match per-user directory."

#: ../../../Misc/NEWS:3325
msgid ""
"`Issue #25143 <https://bugs.python.org/25143>`__: Improves installer error "
"messages for unsupported platforms."
msgstr ""
"`Issue #25143 <https://bugs.python.org/25143>`__: Improves installer error "
"messages for unsupported platforms."

#: ../../../Misc/NEWS:3327
msgid ""
"`Issue #25163 <https://bugs.python.org/25163>`__: Display correct directory "
"in installer when using non-default settings."
msgstr ""
"`Issue #25163 <https://bugs.python.org/25163>`__: Display correct directory "
"in installer when using non-default settings."

#: ../../../Misc/NEWS:3330
msgid ""
"`Issue #25361 <https://bugs.python.org/25361>`__: Disables use of SSE2 "
"instructions in Windows 32-bit build"
msgstr ""
"`Issue #25361 <https://bugs.python.org/25361>`__: Disables use of SSE2 "
"instructions in Windows 32-bit build"

#: ../../../Misc/NEWS:3332
msgid ""
"`Issue #25089 <https://bugs.python.org/25089>`__: Adds logging to installer "
"for case where launcher is not selected on upgrade."
msgstr ""
"`Issue #25089 <https://bugs.python.org/25089>`__: Adds logging to installer "
"for case where launcher is not selected on upgrade."

#: ../../../Misc/NEWS:3335
msgid ""
"`Issue #25165 <https://bugs.python.org/25165>`__: Windows uninstallation "
"should not remove launcher if other versions remain"
msgstr ""
"`Issue #25165 <https://bugs.python.org/25165>`__: Windows uninstallation "
"should not remove launcher if other versions remain"

#: ../../../Misc/NEWS:3338
msgid ""
"`Issue #25112 <https://bugs.python.org/25112>`__: py.exe launcher is missing "
"icons"
msgstr ""
"`Issue #25112 <https://bugs.python.org/25112>`__: py.exe launcher is missing "
"icons"

#: ../../../Misc/NEWS:3340
msgid ""
"`Issue #25102 <https://bugs.python.org/25102>`__: Windows installer does not "
"precompile for -O or -OO."
msgstr ""
"`Issue #25102 <https://bugs.python.org/25102>`__: Windows installer does not "
"precompile for -O or -OO."

#: ../../../Misc/NEWS:3342
msgid ""
"`Issue #25081 <https://bugs.python.org/25081>`__: Makes Back button in "
"installer go back to upgrade page when upgrading."
msgstr ""
"`Issue #25081 <https://bugs.python.org/25081>`__: Makes Back button in "
"installer go back to upgrade page when upgrading."

#: ../../../Misc/NEWS:3345
msgid ""
"`Issue #25091 <https://bugs.python.org/25091>`__: Increases font size of the "
"installer."
msgstr ""
"`Issue #25091 <https://bugs.python.org/25091>`__: Increases font size of the "
"installer."

#: ../../../Misc/NEWS:3347
msgid ""
"`Issue #25126 <https://bugs.python.org/25126>`__: Clarifies that the non-web "
"installer will download some components."
msgstr ""
"`Issue #25126 <https://bugs.python.org/25126>`__: Clarifies that the non-web "
"installer will download some components."

#: ../../../Misc/NEWS:3350
msgid ""
"`Issue #25213 <https://bugs.python.org/25213>`__: Restores "
"requestedExecutionLevel to manifest to disable UAC virtualization."
msgstr ""
"`Issue #25213 <https://bugs.python.org/25213>`__: Restores "
"requestedExecutionLevel to manifest to disable UAC virtualization."

#: ../../../Misc/NEWS:3362
msgid "Python 3.5.0 final"
msgstr "Python 3.5.0 final"

#: ../../../Misc/NEWS:3364
msgid "Release date: 2015-09-13"
msgstr ""

#: ../../../Misc/NEWS:3369
msgid ""
"`Issue #25071 <https://bugs.python.org/25071>`__: Windows installer should "
"not require TargetDir parameter when installing quietly."
msgstr ""
"`Issue #25071 <https://bugs.python.org/25071>`__: Windows installer should "
"not require TargetDir parameter when installing quietly."

#: ../../../Misc/NEWS:3374
msgid "Python 3.5.0 release candidate 4"
msgstr ""

#: ../../../Misc/NEWS:3376
msgid "Release date: 2015-09-09"
msgstr "Date de sortie¬†: 2015-09-09"

#: ../../../Misc/NEWS:3381
msgid ""
"`Issue #25029 <https://bugs.python.org/25029>`__: Fixes MemoryError in "
"test_strptime."
msgstr ""
"`Issue #25029 <https://bugs.python.org/25029>`__: Fixes MemoryError in "
"test_strptime."

#: ../../../Misc/NEWS:3386
msgid ""
"`Issue #25027 <https://bugs.python.org/25027>`__: Reverts partial-static "
"build options and adds vcruntime140.dll to Windows installation."
msgstr ""
"`Issue #25027 <https://bugs.python.org/25027>`__: Reverts partial-static "
"build options and adds vcruntime140.dll to Windows installation."

#: ../../../Misc/NEWS:3391
msgid "Python 3.5.0 release candidate 3"
msgstr ""

#: ../../../Misc/NEWS:3393
msgid "Release date: 2015-09-07"
msgstr "Date de sortie¬†: 2015-09-07"

#: ../../../Misc/NEWS:3398
msgid ""
"`Issue #24305 <https://bugs.python.org/24305>`__: Prevent import subsystem "
"stack frames from being counted by the warnings.warn(stacklevel=) parameter."
msgstr ""
"`Issue #24305 <https://bugs.python.org/24305>`__: Prevent import subsystem "
"stack frames from being counted by the warnings.warn(stacklevel=) parameter."

#: ../../../Misc/NEWS:3401
msgid ""
"`Issue #24912 <https://bugs.python.org/24912>`__: Prevent __class__ "
"assignment to immutable built-in objects."
msgstr ""
"`Issue #24912 <https://bugs.python.org/24912>`__: Prevent __class__ "
"assignment to immutable built-in objects."

#: ../../../Misc/NEWS:3403
msgid ""
"`Issue #24975 <https://bugs.python.org/24975>`__: Fix AST compilation for "
"PEP 448 syntax."
msgstr ""
"`Issue #24975 <https://bugs.python.org/24975>`__: Fix AST compilation for "
"PEP 448 syntax."

#: ../../../Misc/NEWS:3408
msgid ""
"`Issue #24917 <https://bugs.python.org/24917>`__: time_strftime() buffer "
"over-read."
msgstr ""
"`Issue #24917 <https://bugs.python.org/24917>`__: time_strftime() buffer "
"over-read."

#: ../../../Misc/NEWS:3410
msgid ""
"`Issue #24748 <https://bugs.python.org/24748>`__: To resolve a compatibility "
"problem found with py2exe and pywin32, imp.load_dynamic() once again ignores "
"previously loaded modules to support Python modules replacing themselves "
"with extension modules. Patch by Petr Viktorin."
msgstr ""
"`Issue #24748 <https://bugs.python.org/24748>`__: To resolve a compatibility "
"problem found with py2exe and pywin32, imp.load_dynamic() once again ignores "
"previously loaded modules to support Python modules replacing themselves "
"with extension modules. Patch by Petr Viktorin."

#: ../../../Misc/NEWS:3415
msgid ""
"`Issue #24635 <https://bugs.python.org/24635>`__: Fixed a bug in typing.py "
"where isinstance([], typing.Iterable) would return True once, then False on "
"subsequent calls."
msgstr ""
"`Issue #24635 <https://bugs.python.org/24635>`__: Fixed a bug in typing.py "
"where isinstance([], typing.Iterable) would return True once, then False on "
"subsequent calls."

#: ../../../Misc/NEWS:3418
msgid ""
"`Issue #24989 <https://bugs.python.org/24989>`__: Fixed buffer overread in "
"BytesIO.readline() if a position is set beyond size.  Based on patch by John "
"Leitch."
msgstr ""
"`Issue #24989 <https://bugs.python.org/24989>`__: Fixed buffer overread in "
"BytesIO.readline() if a position is set beyond size.  Based on patch by John "
"Leitch."

#: ../../../Misc/NEWS:3426
msgid "Python 3.5.0 release candidate 2"
msgstr ""

#: ../../../Misc/NEWS:3428
msgid "Release date: 2015-08-25"
msgstr ""

#: ../../../Misc/NEWS:3433
msgid ""
"`Issue #24769 <https://bugs.python.org/24769>`__: Interpreter now starts "
"properly when dynamic loading is disabled.  Patch by Petr Viktorin."
msgstr ""
"`Issue #24769 <https://bugs.python.org/24769>`__: Interpreter now starts "
"properly when dynamic loading is disabled.  Patch by Petr Viktorin."

#: ../../../Misc/NEWS:3436
msgid ""
"`Issue #21167 <https://bugs.python.org/21167>`__: NAN operations are now "
"handled correctly when python is compiled with ICC even if -fp-model strict "
"is not specified."
msgstr ""
"`Issue #21167 <https://bugs.python.org/21167>`__: NAN operations are now "
"handled correctly when python is compiled with ICC even if -fp-model strict "
"is not specified."

#: ../../../Misc/NEWS:3439
msgid ""
"`Issue #24492 <https://bugs.python.org/24492>`__: A \"package\" lacking a "
"__name__ attribute when trying to perform a ``from .. import ...`` statement "
"will trigger an ImportError instead of an AttributeError."
msgstr ""
"`Issue #24492 <https://bugs.python.org/24492>`__: A \"package\" lacking a "
"__name__ attribute when trying to perform a ``from .. import ...`` statement "
"will trigger an ImportError instead of an AttributeError."

#: ../../../Misc/NEWS:3446
msgid ""
"`Issue #24847 <https://bugs.python.org/24847>`__: Removes vcruntime140.dll "
"dependency from Tcl/Tk."
msgstr ""
"`Issue #24847 <https://bugs.python.org/24847>`__: Removes vcruntime140.dll "
"dependency from Tcl/Tk."

#: ../../../Misc/NEWS:3448
msgid ""
"`Issue #24839 <https://bugs.python.org/24839>`__: platform._syscmd_ver "
"raises DeprecationWarning"
msgstr ""
"`Issue #24839 <https://bugs.python.org/24839>`__: platform._syscmd_ver "
"raises DeprecationWarning"

#: ../../../Misc/NEWS:3450
msgid ""
"`Issue #24867 <https://bugs.python.org/24867>`__: Fix Task.get_stack() for "
"'async def' coroutines"
msgstr ""
"`Issue #24867 <https://bugs.python.org/24867>`__: Fix Task.get_stack() for "
"'async def' coroutines"

#: ../../../Misc/NEWS:3454
msgid "Python 3.5.0 release candidate 1"
msgstr ""

#: ../../../Misc/NEWS:3456
msgid "Release date: 2015-08-09"
msgstr ""

#: ../../../Misc/NEWS:3461
msgid ""
"`Issue #24667 <https://bugs.python.org/24667>`__: Resize odict in all cases "
"that the underlying dict resizes."
msgstr ""
"`Issue #24667 <https://bugs.python.org/24667>`__: Resize odict in all cases "
"that the underlying dict resizes."

#: ../../../Misc/NEWS:3466
msgid ""
"`Issue #24824 <https://bugs.python.org/24824>`__: Signatures of codecs."
"encode() and codecs.decode() now are compatible with pydoc."
msgstr ""
"`Issue #24824 <https://bugs.python.org/24824>`__: Signatures of codecs."
"encode() and codecs.decode() now are compatible with pydoc."

#: ../../../Misc/NEWS:3469
msgid ""
"`Issue #24634 <https://bugs.python.org/24634>`__: Importing uuid should not "
"try to load libc on Windows"
msgstr ""
"`Issue #24634 <https://bugs.python.org/24634>`__: Importing uuid should not "
"try to load libc on Windows"

#: ../../../Misc/NEWS:3471
msgid ""
"`Issue #24798 <https://bugs.python.org/24798>`__: _msvccompiler.py doesn't "
"properly support manifests"
msgstr ""
"`Issue #24798 <https://bugs.python.org/24798>`__: _msvccompiler.py doesn't "
"properly support manifests"

#: ../../../Misc/NEWS:3473
msgid ""
"`Issue #4395 <https://bugs.python.org/4395>`__: Better testing and "
"documentation of binary operators. Patch by Martin Panter."
msgstr ""
"`Issue #4395 <https://bugs.python.org/4395>`__: Better testing and "
"documentation of binary operators. Patch by Martin Panter."

#: ../../../Misc/NEWS:3476
msgid ""
"`Issue #23973 <https://bugs.python.org/23973>`__: Update typing.py from "
"GitHub repo."
msgstr ""
"`Issue #23973 <https://bugs.python.org/23973>`__: Update typing.py from "
"GitHub repo."

#: ../../../Misc/NEWS:3478
msgid ""
"`Issue #23004 <https://bugs.python.org/23004>`__: mock_open() now reads "
"binary data correctly when the type of read_data is bytes.  Initial patch by "
"Aaron Hill."
msgstr ""
"`Issue #23004 <https://bugs.python.org/23004>`__: mock_open() now reads "
"binary data correctly when the type of read_data is bytes.  Initial patch by "
"Aaron Hill."

#: ../../../Misc/NEWS:3481
msgid ""
"`Issue #23888 <https://bugs.python.org/23888>`__: Handle fractional time in "
"cookie expiry. Patch by ssh."
msgstr ""
"`Issue #23888 <https://bugs.python.org/23888>`__: Handle fractional time in "
"cookie expiry. Patch by ssh."

#: ../../../Misc/NEWS:3483
msgid ""
"`Issue #23652 <https://bugs.python.org/23652>`__: Make it possible to "
"compile the select module against the libc headers from the Linux Standard "
"Base, which do not include some EPOLL macros.  Patch by Matt Frank."
msgstr ""
"`Issue #23652 <https://bugs.python.org/23652>`__: Make it possible to "
"compile the select module against the libc headers from the Linux Standard "
"Base, which do not include some EPOLL macros.  Patch by Matt Frank."

#: ../../../Misc/NEWS:3487
msgid ""
"`Issue #22932 <https://bugs.python.org/22932>`__: Fix timezones in email."
"utils.formatdate. Patch from Dmitry Shachnev."
msgstr ""
"`Issue #22932 <https://bugs.python.org/22932>`__: Fix timezones in email."
"utils.formatdate. Patch from Dmitry Shachnev."

#: ../../../Misc/NEWS:3490
msgid ""
"`Issue #23779 <https://bugs.python.org/23779>`__: imaplib raises TypeError "
"if authenticator tries to abort. Patch from Craig Holmquist."
msgstr ""
"`Issue #23779 <https://bugs.python.org/23779>`__: imaplib raises TypeError "
"if authenticator tries to abort. Patch from Craig Holmquist."

#: ../../../Misc/NEWS:3493
msgid ""
"`Issue #23319 <https://bugs.python.org/23319>`__: Fix ctypes."
"BigEndianStructure, swap correctly bytes. Patch written by Matthieu Gautier."
msgstr ""
"`Issue #23319 <https://bugs.python.org/23319>`__: Fix ctypes."
"BigEndianStructure, swap correctly bytes. Patch written by Matthieu Gautier."

#: ../../../Misc/NEWS:3496
msgid ""
"`Issue #23254 <https://bugs.python.org/23254>`__: Document how to close the "
"TCPServer listening socket. Patch from Martin Panter."
msgstr ""
"`Issue #23254 <https://bugs.python.org/23254>`__: Document how to close the "
"TCPServer listening socket. Patch from Martin Panter."

#: ../../../Misc/NEWS:3499
msgid ""
"`Issue #19450 <https://bugs.python.org/19450>`__: Update Windows and OS X "
"installer builds to use SQLite 3.8.11."
msgstr ""
"`Issue #19450 <https://bugs.python.org/19450>`__: Update Windows and OS X "
"installer builds to use SQLite 3.8.11."

#: ../../../Misc/NEWS:3501
msgid ""
"`Issue #17527 <https://bugs.python.org/17527>`__: Add PATCH to wsgiref."
"validator. Patch from Luca Sbardella."
msgstr ""
"`Issue #17527 <https://bugs.python.org/17527>`__: Add PATCH to wsgiref."
"validator. Patch from Luca Sbardella."

#: ../../../Misc/NEWS:3503
msgid ""
"`Issue #24791 <https://bugs.python.org/24791>`__: Fix grammar regression for "
"call syntax: 'g(\\*a or b)'."
msgstr ""
"`Issue #24791 <https://bugs.python.org/24791>`__: Fix grammar regression for "
"call syntax: 'g(\\*a or b)'."

#: ../../../Misc/NEWS:3508
msgid ""
"`Issue #23672 <https://bugs.python.org/23672>`__: Allow Idle to edit and run "
"files with astral chars in name. Patch by Mohd Sanad Zaki Rizvi."
msgstr ""
"`Issue #23672 <https://bugs.python.org/23672>`__: Allow Idle to edit and run "
"files with astral chars in name. Patch by Mohd Sanad Zaki Rizvi."

#: ../../../Misc/NEWS:3511
msgid ""
"`Issue #24745 <https://bugs.python.org/24745>`__: Idle editor default font. "
"Switch from Courier to platform-sensitive TkFixedFont.  This should not "
"affect current customized font selections.  If there is a problem, edit "
"$HOME/.idlerc/config-main.cfg and remove 'fontxxx' entries from [Editor "
"Window].  Patch by Mark Roseman."
msgstr ""
"`Issue #24745 <https://bugs.python.org/24745>`__: Idle editor default font. "
"Switch from Courier to platform-sensitive TkFixedFont.  This should not "
"affect current customized font selections.  If there is a problem, edit "
"$HOME/.idlerc/config-main.cfg and remove 'fontxxx' entries from [Editor "
"Window].  Patch by Mark Roseman."

#: ../../../Misc/NEWS:3516
msgid ""
"`Issue #21192 <https://bugs.python.org/21192>`__: Idle editor. When a file "
"is run, put its name in the restart bar. Do not print false prompts. "
"Original patch by Adnan Umer."
msgstr ""
"`Issue #21192 <https://bugs.python.org/21192>`__: Idle editor. When a file "
"is run, put its name in the restart bar. Do not print false prompts. "
"Original patch by Adnan Umer."

#: ../../../Misc/NEWS:3519
msgid ""
"`Issue #13884 <https://bugs.python.org/13884>`__: Idle menus. Remove tearoff "
"lines. Patch by Roger Serwy."
msgstr ""
"`Issue #13884 <https://bugs.python.org/13884>`__: Idle menus. Remove tearoff "
"lines. Patch by Roger Serwy."

#: ../../../Misc/NEWS:3524
msgid ""
"`Issue #24129 <https://bugs.python.org/24129>`__: Clarify the reference "
"documentation for name resolution. This includes removing the assumption "
"that readers will be familiar with the name resolution scheme Python used "
"prior to the introduction of lexical scoping for function namespaces. Patch "
"by Ivan Levkivskyi."
msgstr ""
"`Issue #24129 <https://bugs.python.org/24129>`__: Clarify the reference "
"documentation for name resolution. This includes removing the assumption "
"that readers will be familiar with the name resolution scheme Python used "
"prior to the introduction of lexical scoping for function namespaces. Patch "
"by Ivan Levkivskyi."

#: ../../../Misc/NEWS:3529
msgid ""
"`Issue #20769 <https://bugs.python.org/20769>`__: Improve reload() docs. "
"Patch by Dorian Pula."
msgstr ""
"`Issue #20769 <https://bugs.python.org/20769>`__: Improve reload() docs. "
"Patch by Dorian Pula."

#: ../../../Misc/NEWS:3531
msgid ""
"`Issue #23589 <https://bugs.python.org/23589>`__: Remove duplicate sentence "
"from the FAQ.  Patch by Yongzhi Pan."
msgstr ""
"`Issue #23589 <https://bugs.python.org/23589>`__: Remove duplicate sentence "
"from the FAQ.  Patch by Yongzhi Pan."

#: ../../../Misc/NEWS:3533
msgid ""
"`Issue #24729 <https://bugs.python.org/24729>`__: Correct IO tutorial to "
"match implementation regarding encoding parameter to open function."
msgstr ""
"`Issue #24729 <https://bugs.python.org/24729>`__: Correct IO tutorial to "
"match implementation regarding encoding parameter to open function."

#: ../../../Misc/NEWS:3539
msgid ""
"`Issue #24751 <https://bugs.python.org/24751>`__: When running regrtest with "
"the ``-w`` command line option, a test run is no longer marked as a failure "
"if all tests succeed when re-run."
msgstr ""
"`Issue #24751 <https://bugs.python.org/24751>`__: When running regrtest with "
"the ``-w`` command line option, a test run is no longer marked as a failure "
"if all tests succeed when re-run."

#: ../../../Misc/NEWS:3545
msgid "Python 3.5.0 beta 4"
msgstr ""

#: ../../../Misc/NEWS:3547
msgid "Release date: 2015-07-26"
msgstr ""

#: ../../../Misc/NEWS:3552
msgid ""
"`Issue #23573 <https://bugs.python.org/23573>`__: Restored optimization of "
"bytes.rfind() and bytearray.rfind() for single-byte argument on Linux."
msgstr ""
"`Issue #23573 <https://bugs.python.org/23573>`__: Restored optimization of "
"bytes.rfind() and bytearray.rfind() for single-byte argument on Linux."

#: ../../../Misc/NEWS:3555
msgid ""
"`Issue #24569 <https://bugs.python.org/24569>`__: Make PEP 448 dictionary "
"evaluation more consistent."
msgstr ""
"`Issue #24569 <https://bugs.python.org/24569>`__: Make PEP 448 dictionary "
"evaluation more consistent."

#: ../../../Misc/NEWS:3557
msgid ""
"`Issue #24583 <https://bugs.python.org/24583>`__: Fix crash when set is "
"mutated while being updated."
msgstr ""
"`Issue #24583 <https://bugs.python.org/24583>`__: Fix crash when set is "
"mutated while being updated."

#: ../../../Misc/NEWS:3559
msgid ""
"`Issue #24407 <https://bugs.python.org/24407>`__: Fix crash when dict is "
"mutated while being updated."
msgstr ""
"`Issue #24407 <https://bugs.python.org/24407>`__: Fix crash when dict is "
"mutated while being updated."

#: ../../../Misc/NEWS:3561
msgid ""
"`Issue #24619 <https://bugs.python.org/24619>`__: New approach for "
"tokenizing async/await. As a consequence, it is now possible to have one-"
"line 'async def foo(): await ..' functions."
msgstr ""
"`Issue #24619 <https://bugs.python.org/24619>`__: New approach for "
"tokenizing async/await. As a consequence, it is now possible to have one-"
"line 'async def foo(): await ..' functions."

#: ../../../Misc/NEWS:3564
msgid ""
"`Issue #24687 <https://bugs.python.org/24687>`__: Plug refleak on "
"SyntaxError in function parameters annotations."
msgstr ""
"`Issue #24687 <https://bugs.python.org/24687>`__: Plug refleak on "
"SyntaxError in function parameters annotations."

#: ../../../Misc/NEWS:3567
msgid ""
"`Issue #15944 <https://bugs.python.org/15944>`__: memoryview: Allow "
"arbitrary formats when casting to bytes. Patch by Martin Panter."
msgstr ""
"`Issue #15944 <https://bugs.python.org/15944>`__: memoryview: Allow "
"arbitrary formats when casting to bytes. Patch by Martin Panter."

#: ../../../Misc/NEWS:3573
msgid ""
"`Issue #23441 <https://bugs.python.org/23441>`__: rcompleter now prints a "
"tab character instead of displaying possible completions for an empty word.  "
"Initial patch by Martin Sekera."
msgstr ""
"`Issue #23441 <https://bugs.python.org/23441>`__: rcompleter now prints a "
"tab character instead of displaying possible completions for an empty word.  "
"Initial patch by Martin Sekera."

#: ../../../Misc/NEWS:3576
msgid ""
"`Issue #24683 <https://bugs.python.org/24683>`__: Fixed crashes in _json "
"functions called with arguments of inappropriate type."
msgstr ""
"`Issue #24683 <https://bugs.python.org/24683>`__: Fixed crashes in _json "
"functions called with arguments of inappropriate type."

#: ../../../Misc/NEWS:3579
msgid ""
"`Issue #21697 <https://bugs.python.org/21697>`__: shutil.copytree() now "
"correctly handles symbolic links that point to directories.  Patch by "
"Eduardo Seabra and Thomas Kluyver."
msgstr ""
"`Issue #21697 <https://bugs.python.org/21697>`__: shutil.copytree() now "
"correctly handles symbolic links that point to directories.  Patch by "
"Eduardo Seabra and Thomas Kluyver."

#: ../../../Misc/NEWS:3582
msgid ""
"`Issue #14373 <https://bugs.python.org/14373>`__: Fixed segmentation fault "
"when gc.collect() is called during constructing lru_cache (C implementation)."
msgstr ""
"`Issue #14373 <https://bugs.python.org/14373>`__: Fixed segmentation fault "
"when gc.collect() is called during constructing lru_cache (C implementation)."

#: ../../../Misc/NEWS:3585
msgid ""
"`Issue #24695 <https://bugs.python.org/24695>`__: Fix a regression in "
"traceback.print_exception().  If exc_traceback is None we shouldn't print a "
"traceback header like described in the documentation."
msgstr ""
"`Issue #24695 <https://bugs.python.org/24695>`__: Fix a regression in "
"traceback.print_exception().  If exc_traceback is None we shouldn't print a "
"traceback header like described in the documentation."

#: ../../../Misc/NEWS:3589
msgid ""
"`Issue #24620 <https://bugs.python.org/24620>`__: Random.setstate() now "
"validates the value of state last element."
msgstr ""
"`Issue #24620 <https://bugs.python.org/24620>`__: Random.setstate() now "
"validates the value of state last element."

#: ../../../Misc/NEWS:3591
msgid ""
"`Issue #22485 <https://bugs.python.org/22485>`__: Fixed an issue that caused "
"`inspect.getsource` to return incorrect results on nested functions."
msgstr ""
"`Issue #22485 <https://bugs.python.org/22485>`__: Fixed an issue that caused "
"`inspect.getsource` to return incorrect results on nested functions."

#: ../../../Misc/NEWS:3594
msgid ""
"`Issue #22153 <https://bugs.python.org/22153>`__: Improve unittest docs. "
"Patch from Martin Panter and evilzero."
msgstr ""
"`Issue #22153 <https://bugs.python.org/22153>`__: Improve unittest docs. "
"Patch from Martin Panter and evilzero."

#: ../../../Misc/NEWS:3596
msgid ""
"`Issue #24580 <https://bugs.python.org/24580>`__: Symbolic group references "
"to open group in re patterns now are explicitly forbidden as well as numeric "
"group references."
msgstr ""
"`Issue #24580 <https://bugs.python.org/24580>`__: Symbolic group references "
"to open group in re patterns now are explicitly forbidden as well as numeric "
"group references."

#: ../../../Misc/NEWS:3599
msgid ""
"`Issue #24206 <https://bugs.python.org/24206>`__: Fixed __eq__ and __ne__ "
"methods of inspect classes."
msgstr ""
"`Issue #24206 <https://bugs.python.org/24206>`__: Fixed __eq__ and __ne__ "
"methods of inspect classes."

#: ../../../Misc/NEWS:3601
msgid ""
"`Issue #24631 <https://bugs.python.org/24631>`__: Fixed regression in the "
"timeit module with multiline setup."
msgstr ""
"`Issue #24631 <https://bugs.python.org/24631>`__: Fixed regression in the "
"timeit module with multiline setup."

#: ../../../Misc/NEWS:3603
msgid ""
"`Issue #24608 <https://bugs.python.org/24608>`__: chunk.Chunk.read() now "
"always returns bytes, not str."
msgstr ""
"`Issue #24608 <https://bugs.python.org/24608>`__: chunk.Chunk.read() now "
"always returns bytes, not str."

#: ../../../Misc/NEWS:3605
msgid ""
"`Issue #18684 <https://bugs.python.org/18684>`__: Fixed reading out of the "
"buffer in the re module."
msgstr ""
"`Issue #18684 <https://bugs.python.org/18684>`__: Fixed reading out of the "
"buffer in the re module."

#: ../../../Misc/NEWS:3607
msgid ""
"`Issue #24259 <https://bugs.python.org/24259>`__: tarfile now raises a "
"ReadError if an archive is truncated inside a data segment."
msgstr ""
"`Issue #24259 <https://bugs.python.org/24259>`__: tarfile now raises a "
"ReadError if an archive is truncated inside a data segment."

#: ../../../Misc/NEWS:3610
msgid ""
"`Issue #15014 <https://bugs.python.org/15014>`__: SMTP.auth() and SMTP."
"login() now support RFC 4954's optional initial-response argument to the "
"SMTP AUTH command."
msgstr ""
"`Issue #15014 <https://bugs.python.org/15014>`__: SMTP.auth() and SMTP."
"login() now support RFC 4954's optional initial-response argument to the "
"SMTP AUTH command."

#: ../../../Misc/NEWS:3613
msgid ""
"`Issue #6549 <https://bugs.python.org/6549>`__: Remove hyphen from ttk."
"Style().element options.  Only return result from ttk.Style().configure if a "
"result was generated or a query submitted."
msgstr ""
"`Issue #6549 <https://bugs.python.org/6549>`__: Remove hyphen from ttk."
"Style().element options.  Only return result from ttk.Style().configure if a "
"result was generated or a query submitted."

#: ../../../Misc/NEWS:3616
msgid ""
"`Issue #24669 <https://bugs.python.org/24669>`__: Fix inspect.getsource() "
"for 'async def' functions. Patch by Kai Groner."
msgstr ""
"`Issue #24669 <https://bugs.python.org/24669>`__: Fix inspect.getsource() "
"for 'async def' functions. Patch by Kai Groner."

#: ../../../Misc/NEWS:3619
msgid ""
"`Issue #24688 <https://bugs.python.org/24688>`__: ast.get_docstring() for "
"'async def' functions."
msgstr ""
"`Issue #24688 <https://bugs.python.org/24688>`__: ast.get_docstring() for "
"'async def' functions."

#: ../../../Misc/NEWS:3624
msgid ""
"`Issue #24603 <https://bugs.python.org/24603>`__: Update Windows builds and "
"OS X 10.5 installer to use OpenSSL 1.0.2d."
msgstr ""
"`Issue #24603 <https://bugs.python.org/24603>`__: Update Windows builds and "
"OS X 10.5 installer to use OpenSSL 1.0.2d."

#: ../../../Misc/NEWS:3628
msgid "Python 3.5.0 beta 3"
msgstr "Python 3.5.0 beta 3"

#: ../../../Misc/NEWS:3630
msgid "Release date: 2015-07-05"
msgstr "Date de sortie¬†: 2015-07-05"

#: ../../../Misc/NEWS:3635
msgid ""
"`Issue #24467 <https://bugs.python.org/24467>`__: Fixed possible buffer over-"
"read in bytearray. The bytearray object now always allocates place for "
"trailing null byte and it's buffer now is always null-terminated."
msgstr ""
"`Issue #24467 <https://bugs.python.org/24467>`__: Fixed possible buffer over-"
"read in bytearray. The bytearray object now always allocates place for "
"trailing null byte and it's buffer now is always null-terminated."

#: ../../../Misc/NEWS:3639
msgid "Upgrade to Unicode 8.0.0."
msgstr ""

#: ../../../Misc/NEWS:3641
msgid ""
"`Issue #24345 <https://bugs.python.org/24345>`__: Add Py_tp_finalize slot "
"for the stable ABI."
msgstr ""
"`Issue #24345 <https://bugs.python.org/24345>`__: Add Py_tp_finalize slot "
"for the stable ABI."

#: ../../../Misc/NEWS:3643
msgid ""
"`Issue #24400 <https://bugs.python.org/24400>`__: Introduce a distinct type "
"for PEP 492 coroutines; add types.CoroutineType, inspect.getcoroutinestate, "
"inspect.getcoroutinelocals; coroutines no longer use CO_GENERATOR flag; sys."
"set_coroutine_wrapper works only for 'async def' coroutines; inspect."
"iscoroutine no longer uses collections.abc.Coroutine, it's intended to test "
"for pure 'async def' coroutines only; add new opcode: GET_YIELD_FROM_ITER; "
"fix generators wrapper used in types.coroutine to be instance of collections."
"abc.Generator; collections.abc.Awaitable and collections.abc.Coroutine can "
"no longer be used to detect generator-based coroutines--use inspect."
"isawaitable instead."
msgstr ""
"`Issue #24400 <https://bugs.python.org/24400>`__: Introduce a distinct type "
"for PEP 492 coroutines; add types.CoroutineType, inspect.getcoroutinestate, "
"inspect.getcoroutinelocals; coroutines no longer use CO_GENERATOR flag; sys."
"set_coroutine_wrapper works only for 'async def' coroutines; inspect."
"iscoroutine no longer uses collections.abc.Coroutine, it's intended to test "
"for pure 'async def' coroutines only; add new opcode: GET_YIELD_FROM_ITER; "
"fix generators wrapper used in types.coroutine to be instance of collections."
"abc.Generator; collections.abc.Awaitable and collections.abc.Coroutine can "
"no longer be used to detect generator-based coroutines--use inspect."
"isawaitable instead."

#: ../../../Misc/NEWS:3654
msgid ""
"`Issue #24450 <https://bugs.python.org/24450>`__: Add gi_yieldfrom to "
"generators and cr_await to coroutines. Contributed by Benno Leslie and Yury "
"Selivanov."
msgstr ""
"`Issue #24450 <https://bugs.python.org/24450>`__: Add gi_yieldfrom to "
"generators and cr_await to coroutines. Contributed by Benno Leslie and Yury "
"Selivanov."

#: ../../../Misc/NEWS:3657
msgid ""
"`Issue #19235 <https://bugs.python.org/19235>`__: Add new RecursionError "
"exception. Patch by Georg Brandl."
msgstr ""
"`Issue #19235 <https://bugs.python.org/19235>`__: Add new RecursionError "
"exception. Patch by Georg Brandl."

#: ../../../Misc/NEWS:3662
msgid ""
"`Issue #21750 <https://bugs.python.org/21750>`__: mock_open.read_data can "
"now be read from each instance, as it could in Python 3.3."
msgstr ""
"`Issue #21750 <https://bugs.python.org/21750>`__: mock_open.read_data can "
"now be read from each instance, as it could in Python 3.3."

#: ../../../Misc/NEWS:3665
msgid ""
"`Issue #24552 <https://bugs.python.org/24552>`__: Fix use after free in an "
"error case of the _pickle module."
msgstr ""
"`Issue #24552 <https://bugs.python.org/24552>`__: Fix use after free in an "
"error case of the _pickle module."

#: ../../../Misc/NEWS:3667
msgid ""
"`Issue #24514 <https://bugs.python.org/24514>`__: tarfile now tolerates "
"number fields consisting of only whitespace."
msgstr ""
"`Issue #24514 <https://bugs.python.org/24514>`__: tarfile now tolerates "
"number fields consisting of only whitespace."

#: ../../../Misc/NEWS:3670
msgid ""
"`Issue #19176 <https://bugs.python.org/19176>`__: Fixed doctype() related "
"bugs in C implementation of ElementTree. A deprecation warning no longer "
"issued by XMLParser subclass with default doctype() method.  Direct call of "
"doctype() now issues a warning.  Parser's doctype() now is not called if "
"target's doctype() is called.  Based on patch by Martin Panter."
msgstr ""
"`Issue #19176 <https://bugs.python.org/19176>`__: Fixed doctype() related "
"bugs in C implementation of ElementTree. A deprecation warning no longer "
"issued by XMLParser subclass with default doctype() method.  Direct call of "
"doctype() now issues a warning.  Parser's doctype() now is not called if "
"target's doctype() is called.  Based on patch by Martin Panter."

#: ../../../Misc/NEWS:3676
msgid ""
"`Issue #20387 <https://bugs.python.org/20387>`__: Restore semantic round-"
"trip correctness in tokenize/untokenize for tab-indented blocks."
msgstr ""
"`Issue #20387 <https://bugs.python.org/20387>`__: Restore semantic round-"
"trip correctness in tokenize/untokenize for tab-indented blocks."

#: ../../../Misc/NEWS:3679
msgid ""
"`Issue #24456 <https://bugs.python.org/24456>`__: Fixed possible buffer over-"
"read in adpcm2lin() and lin2adpcm() functions of the audioop module."
msgstr ""
"`Issue #24456 <https://bugs.python.org/24456>`__: Fixed possible buffer over-"
"read in adpcm2lin() and lin2adpcm() functions of the audioop module."

#: ../../../Misc/NEWS:3682
msgid ""
"`Issue #24336 <https://bugs.python.org/24336>`__: The contextmanager "
"decorator now works with functions with keyword arguments called \"func\" "
"and \"self\".  Patch by Martin Panter."
msgstr ""
"`Issue #24336 <https://bugs.python.org/24336>`__: The contextmanager "
"decorator now works with functions with keyword arguments called \"func\" "
"and \"self\".  Patch by Martin Panter."

#: ../../../Misc/NEWS:3685
msgid ""
"`Issue #24522 <https://bugs.python.org/24522>`__: Fix possible integer "
"overflow in json accelerator module."
msgstr ""
"`Issue #24522 <https://bugs.python.org/24522>`__: Fix possible integer "
"overflow in json accelerator module."

#: ../../../Misc/NEWS:3687
msgid ""
"`Issue #24489 <https://bugs.python.org/24489>`__: ensure a previously set C "
"errno doesn't disturb cmath.polar()."
msgstr ""
"`Issue #24489 <https://bugs.python.org/24489>`__: ensure a previously set C "
"errno doesn't disturb cmath.polar()."

#: ../../../Misc/NEWS:3689
msgid ""
"`Issue #24408 <https://bugs.python.org/24408>`__: Fixed AttributeError in "
"measure() and metrics() methods of tkinter.Font."
msgstr ""
"`Issue #24408 <https://bugs.python.org/24408>`__: Fixed AttributeError in "
"measure() and metrics() methods of tkinter.Font."

#: ../../../Misc/NEWS:3692
msgid ""
"`Issue #14373 <https://bugs.python.org/14373>`__: C implementation of "
"functools.lru_cache() now can be used with methods."
msgstr ""
"`Issue #14373 <https://bugs.python.org/14373>`__: C implementation of "
"functools.lru_cache() now can be used with methods."

#: ../../../Misc/NEWS:3695
msgid ""
"`Issue #24347 <https://bugs.python.org/24347>`__: Set KeyError if "
"PyDict_GetItemWithError returns NULL."
msgstr ""
"`Issue #24347 <https://bugs.python.org/24347>`__: Set KeyError if "
"PyDict_GetItemWithError returns NULL."

#: ../../../Misc/NEWS:3697
msgid ""
"`Issue #24348 <https://bugs.python.org/24348>`__: Drop superfluous incref/"
"decref."
msgstr ""
"`Issue #24348 <https://bugs.python.org/24348>`__: Drop superfluous incref/"
"decref."

#: ../../../Misc/NEWS:3699
msgid ""
"`Issue #24359 <https://bugs.python.org/24359>`__: Check for changed "
"OrderedDict size during iteration."
msgstr ""
"`Issue #24359 <https://bugs.python.org/24359>`__: Check for changed "
"OrderedDict size during iteration."

#: ../../../Misc/NEWS:3701
msgid ""
"`Issue #24368 <https://bugs.python.org/24368>`__: Support keyword arguments "
"in OrderedDict methods."
msgstr ""
"`Issue #24368 <https://bugs.python.org/24368>`__: Support keyword arguments "
"in OrderedDict methods."

#: ../../../Misc/NEWS:3703
msgid ""
"`Issue #24362 <https://bugs.python.org/24362>`__: Simplify the C OrderedDict "
"fast nodes resize logic."
msgstr ""
"`Issue #24362 <https://bugs.python.org/24362>`__: Simplify the C OrderedDict "
"fast nodes resize logic."

#: ../../../Misc/NEWS:3705
msgid ""
"`Issue #24377 <https://bugs.python.org/24377>`__: Fix a ref leak in "
"OrderedDict.__repr__."
msgstr ""
"`Issue #24377 <https://bugs.python.org/24377>`__: Fix a ref leak in "
"OrderedDict.__repr__."

#: ../../../Misc/NEWS:3707
msgid ""
"`Issue #24369 <https://bugs.python.org/24369>`__: Defend against key-changes "
"during iteration."
msgstr ""
"`Issue #24369 <https://bugs.python.org/24369>`__: Defend against key-changes "
"during iteration."

#: ../../../Misc/NEWS:3712
msgid ""
"`Issue #24373 <https://bugs.python.org/24373>`__: _testmultiphase and "
"xxlimited now use tp_traverse and tp_finalize to avoid reference leaks "
"encountered when combining tp_dealloc with PyType_FromSpec (see `issue "
"#16690 <https://bugs.python.org/16690>`__ for details)"
msgstr ""
"`Issue #24373 <https://bugs.python.org/24373>`__: _testmultiphase and "
"xxlimited now use tp_traverse and tp_finalize to avoid reference leaks "
"encountered when combining tp_dealloc with PyType_FromSpec (see `issue "
"#16690 <https://bugs.python.org/16690>`__ for details)"

#: ../../../Misc/NEWS:3719
msgid ""
"`Issue #24458 <https://bugs.python.org/24458>`__: Update documentation to "
"cover multi-phase initialization for extension modules (PEP 489). Patch by "
"Petr Viktorin."
msgstr ""
"`Issue #24458 <https://bugs.python.org/24458>`__: Update documentation to "
"cover multi-phase initialization for extension modules (PEP 489). Patch by "
"Petr Viktorin."

#: ../../../Misc/NEWS:3722
msgid ""
"`Issue #24351 <https://bugs.python.org/24351>`__: Clarify what is meant by "
"\"identifier\" in the context of string.Template instances."
msgstr ""
"`Issue #24351 <https://bugs.python.org/24351>`__: Clarify what is meant by "
"\"identifier\" in the context of string.Template instances."

#: ../../../Misc/NEWS:3728
msgid ""
"`Issue #24432 <https://bugs.python.org/24432>`__: Update Windows builds and "
"OS X 10.5 installer to use OpenSSL 1.0.2c."
msgstr ""
"`Issue #24432 <https://bugs.python.org/24432>`__: Update Windows builds and "
"OS X 10.5 installer to use OpenSSL 1.0.2c."

#: ../../../Misc/NEWS:3733
msgid "Python 3.5.0 beta 2"
msgstr ""

#: ../../../Misc/NEWS:3735
msgid "Release date: 2015-05-31"
msgstr ""

#: ../../../Misc/NEWS:3740
msgid ""
"`Issue #24284 <https://bugs.python.org/24284>`__: The startswith and "
"endswith methods of the str class no longer return True when finding the "
"empty string and the indexes are completely out of range."
msgstr ""
"`Issue #24284 <https://bugs.python.org/24284>`__: The startswith and "
"endswith methods of the str class no longer return True when finding the "
"empty string and the indexes are completely out of range."

#: ../../../Misc/NEWS:3744
msgid ""
"`Issue #24115 <https://bugs.python.org/24115>`__: Update uses of "
"PyObject_IsTrue(), PyObject_Not(), PyObject_IsInstance(), "
"PyObject_RichCompareBool() and _PyDict_Contains() to check for and handle "
"errors correctly."
msgstr ""
"`Issue #24115 <https://bugs.python.org/24115>`__: Update uses of "
"PyObject_IsTrue(), PyObject_Not(), PyObject_IsInstance(), "
"PyObject_RichCompareBool() and _PyDict_Contains() to check for and handle "
"errors correctly."

#: ../../../Misc/NEWS:3748
msgid ""
"`Issue #24328 <https://bugs.python.org/24328>`__: Fix importing one "
"character extension modules."
msgstr ""
"`Issue #24328 <https://bugs.python.org/24328>`__: Fix importing one "
"character extension modules."

#: ../../../Misc/NEWS:3750
msgid ""
"`Issue #11205 <https://bugs.python.org/11205>`__: In dictionary displays, "
"evaluate the key before the value."
msgstr ""
"`Issue #11205 <https://bugs.python.org/11205>`__: In dictionary displays, "
"evaluate the key before the value."

#: ../../../Misc/NEWS:3752
msgid ""
"`Issue #24285 <https://bugs.python.org/24285>`__: Fixed regression that "
"prevented importing extension modules from inside packages. Patch by Petr "
"Viktorin."
msgstr ""
"`Issue #24285 <https://bugs.python.org/24285>`__: Fixed regression that "
"prevented importing extension modules from inside packages. Patch by Petr "
"Viktorin."

#: ../../../Misc/NEWS:3758
msgid ""
"`Issue #23247 <https://bugs.python.org/23247>`__: Fix a crash in the "
"StreamWriter.reset() of CJK codecs."
msgstr ""
"`Issue #23247 <https://bugs.python.org/23247>`__: Fix a crash in the "
"StreamWriter.reset() of CJK codecs."

#: ../../../Misc/NEWS:3760
msgid ""
"`Issue #24270 <https://bugs.python.org/24270>`__: Add math.isclose() and "
"cmath.isclose() functions as per PEP 485. Contributed by Chris Barker and "
"Tal Einat."
msgstr ""
"`Issue #24270 <https://bugs.python.org/24270>`__: Add math.isclose() and "
"cmath.isclose() functions as per PEP 485. Contributed by Chris Barker and "
"Tal Einat."

#: ../../../Misc/NEWS:3763
msgid ""
"`Issue #5633 <https://bugs.python.org/5633>`__: Fixed timeit when the "
"statement is a string and the setup is not."
msgstr ""
"`Issue #5633 <https://bugs.python.org/5633>`__: Fixed timeit when the "
"statement is a string and the setup is not."

#: ../../../Misc/NEWS:3765
msgid ""
"`Issue #24326 <https://bugs.python.org/24326>`__: Fixed audioop.ratecv() "
"with non-default weightB argument. Original patch by David Moore."
msgstr ""
"`Issue #24326 <https://bugs.python.org/24326>`__: Fixed audioop.ratecv() "
"with non-default weightB argument. Original patch by David Moore."

#: ../../../Misc/NEWS:3768
msgid ""
"`Issue #16991 <https://bugs.python.org/16991>`__: Add a C implementation of "
"OrderedDict."
msgstr ""
"`Issue #16991 <https://bugs.python.org/16991>`__: Add a C implementation of "
"OrderedDict."

#: ../../../Misc/NEWS:3770
msgid ""
"`Issue #23934 <https://bugs.python.org/23934>`__: Fix inspect.signature to "
"fail correctly for builtin types lacking signature information.  Initial "
"patch by James Powell."
msgstr ""
"`Issue #23934 <https://bugs.python.org/23934>`__: Fix inspect.signature to "
"fail correctly for builtin types lacking signature information.  Initial "
"patch by James Powell."

#: ../../../Misc/NEWS:3775
msgid "Python 3.5.0 beta 1"
msgstr "Python 3.5.0 beta 1"

#: ../../../Misc/NEWS:3777
msgid "Release date: 2015-05-24"
msgstr ""

#: ../../../Misc/NEWS:3782
msgid ""
"`Issue #24276 <https://bugs.python.org/24276>`__: Fixed optimization of "
"property descriptor getter."
msgstr ""
"`Issue #24276 <https://bugs.python.org/24276>`__: Fixed optimization of "
"property descriptor getter."

#: ../../../Misc/NEWS:3784
msgid ""
"`Issue #24268 <https://bugs.python.org/24268>`__: PEP 489: Multi-phase "
"extension module initialization. Patch by Petr Viktorin."
msgstr ""
"`Issue #24268 <https://bugs.python.org/24268>`__: PEP 489: Multi-phase "
"extension module initialization. Patch by Petr Viktorin."

#: ../../../Misc/NEWS:3787
msgid ""
"`Issue #23359 <https://bugs.python.org/23359>`__: Optimize set object "
"internals by specializing the hash table search into a lookup function and "
"an insert function."
msgstr ""
"`Issue #23359 <https://bugs.python.org/23359>`__: Optimize set object "
"internals by specializing the hash table search into a lookup function and "
"an insert function."

#: ../../../Misc/NEWS:3790
msgid ""
"`Issue #23955 <https://bugs.python.org/23955>`__: Add pyvenv.cfg option to "
"suppress registry/environment lookup for generating sys.path on Windows."
msgstr ""
"`Issue #23955 <https://bugs.python.org/23955>`__: Add pyvenv.cfg option to "
"suppress registry/environment lookup for generating sys.path on Windows."

#: ../../../Misc/NEWS:3793
msgid ""
"`Issue #24257 <https://bugs.python.org/24257>`__: Fixed system error in the "
"comparison of faked types.SimpleNamespace."
msgstr ""
"`Issue #24257 <https://bugs.python.org/24257>`__: Fixed system error in the "
"comparison of faked types.SimpleNamespace."

#: ../../../Misc/NEWS:3796
msgid ""
"`Issue #22939 <https://bugs.python.org/22939>`__: Fixed integer overflow in "
"iterator object.  Patch by Clement Rouault."
msgstr ""
"`Issue #22939 <https://bugs.python.org/22939>`__: Fixed integer overflow in "
"iterator object.  Patch by Clement Rouault."

#: ../../../Misc/NEWS:3799
msgid ""
"`Issue #23985 <https://bugs.python.org/23985>`__: Fix a possible buffer "
"overrun when deleting a slice from the front of a bytearray and then "
"appending some other bytes data."
msgstr ""
"`Issue #23985 <https://bugs.python.org/23985>`__: Fix a possible buffer "
"overrun when deleting a slice from the front of a bytearray and then "
"appending some other bytes data."

#: ../../../Misc/NEWS:3802
msgid ""
"`Issue #24102 <https://bugs.python.org/24102>`__: Fixed exception type "
"checking in standard error handlers."
msgstr ""
"`Issue #24102 <https://bugs.python.org/24102>`__: Fixed exception type "
"checking in standard error handlers."

#: ../../../Misc/NEWS:3804
msgid ""
"`Issue #15027 <https://bugs.python.org/15027>`__: The UTF-32 encoder is now "
"3x to 7x faster."
msgstr ""
"`Issue #15027 <https://bugs.python.org/15027>`__: The UTF-32 encoder is now "
"3x to 7x faster."

#: ../../../Misc/NEWS:3806
msgid ""
"`Issue #23290 <https://bugs.python.org/23290>`__: Optimize set_merge() for "
"cases where the target is empty. (Contributed by Serhiy Storchaka.)"
msgstr ""
"`Issue #23290 <https://bugs.python.org/23290>`__: Optimize set_merge() for "
"cases where the target is empty. (Contributed by Serhiy Storchaka.)"

#: ../../../Misc/NEWS:3809
msgid ""
"`Issue #2292 <https://bugs.python.org/2292>`__: PEP 448: Additional "
"Unpacking Generalizations."
msgstr ""
"`Issue #2292 <https://bugs.python.org/2292>`__: PEP 448: Additional "
"Unpacking Generalizations."

#: ../../../Misc/NEWS:3811
msgid ""
"`Issue #24096 <https://bugs.python.org/24096>`__: Make warnings."
"warn_explicit more robust against mutation of the warnings.filters list."
msgstr ""
"`Issue #24096 <https://bugs.python.org/24096>`__: Make warnings."
"warn_explicit more robust against mutation of the warnings.filters list."

#: ../../../Misc/NEWS:3814
msgid ""
"`Issue #23996 <https://bugs.python.org/23996>`__: Avoid a crash when a "
"delegated generator raises an unnormalized StopIteration exception.  Patch "
"by Stefan Behnel."
msgstr ""
"`Issue #23996 <https://bugs.python.org/23996>`__: Avoid a crash when a "
"delegated generator raises an unnormalized StopIteration exception.  Patch "
"by Stefan Behnel."

#: ../../../Misc/NEWS:3817
msgid ""
"`Issue #23910 <https://bugs.python.org/23910>`__: Optimize property() getter "
"calls.  Patch by Joe Jevnik."
msgstr ""
"`Issue #23910 <https://bugs.python.org/23910>`__: Optimize property() getter "
"calls.  Patch by Joe Jevnik."

#: ../../../Misc/NEWS:3819
msgid ""
"`Issue #23911 <https://bugs.python.org/23911>`__: Move path-based importlib "
"bootstrap code to a separate frozen module."
msgstr ""
"`Issue #23911 <https://bugs.python.org/23911>`__: Move path-based importlib "
"bootstrap code to a separate frozen module."

#: ../../../Misc/NEWS:3822
msgid ""
"`Issue #24192 <https://bugs.python.org/24192>`__: Fix namespace package "
"imports."
msgstr ""
"`Issue #24192 <https://bugs.python.org/24192>`__: Fix namespace package "
"imports."

#: ../../../Misc/NEWS:3824
msgid ""
"`Issue #24022 <https://bugs.python.org/24022>`__: Fix tokenizer crash when "
"processing undecodable source code."
msgstr ""
"`Issue #24022 <https://bugs.python.org/24022>`__: Fix tokenizer crash when "
"processing undecodable source code."

#: ../../../Misc/NEWS:3826
msgid ""
"`Issue #9951 <https://bugs.python.org/9951>`__: Added a hex() method to "
"bytes, bytearray, and memoryview."
msgstr ""
"`Issue #9951 <https://bugs.python.org/9951>`__: Added a hex() method to "
"bytes, bytearray, and memoryview."

#: ../../../Misc/NEWS:3828
msgid ""
"`Issue #22906 <https://bugs.python.org/22906>`__: PEP 479: Change "
"StopIteration handling inside generators."
msgstr ""
"`Issue #22906 <https://bugs.python.org/22906>`__: PEP 479: Change "
"StopIteration handling inside generators."

#: ../../../Misc/NEWS:3830
msgid ""
"`Issue #24017 <https://bugs.python.org/24017>`__: PEP 492: Coroutines with "
"async and await syntax."
msgstr ""
"`Issue #24017 <https://bugs.python.org/24017>`__: PEP 492: Coroutines with "
"async and await syntax."

#: ../../../Misc/NEWS:3835
msgid ""
"`Issue #14373 <https://bugs.python.org/14373>`__: Added C implementation of "
"functools.lru_cache().  Based on patches by Matt Joiner and Alexey Kachayev."
msgstr ""
"`Issue #14373 <https://bugs.python.org/14373>`__: Added C implementation of "
"functools.lru_cache().  Based on patches by Matt Joiner and Alexey Kachayev."

#: ../../../Misc/NEWS:3838
msgid ""
"`Issue #24230 <https://bugs.python.org/24230>`__: The tempfile module now "
"accepts bytes for prefix, suffix and dir parameters and returns bytes in "
"such situations (matching the os module APIs)."
msgstr ""
"`Issue #24230 <https://bugs.python.org/24230>`__: The tempfile module now "
"accepts bytes for prefix, suffix and dir parameters and returns bytes in "
"such situations (matching the os module APIs)."

#: ../../../Misc/NEWS:3841
msgid ""
"`Issue #22189 <https://bugs.python.org/22189>`__: collections.UserString now "
"supports __getnewargs__(), __rmod__(), casefold(), format_map(), "
"isprintable(), and maketrans(). Patch by Joe Jevnik."
msgstr ""
"`Issue #22189 <https://bugs.python.org/22189>`__: collections.UserString now "
"supports __getnewargs__(), __rmod__(), casefold(), format_map(), "
"isprintable(), and maketrans(). Patch by Joe Jevnik."

#: ../../../Misc/NEWS:3845
msgid ""
"`Issue #24244 <https://bugs.python.org/24244>`__: Prevents termination when "
"an invalid format string is encountered on Windows in strftime."
msgstr ""
"`Issue #24244 <https://bugs.python.org/24244>`__: Prevents termination when "
"an invalid format string is encountered on Windows in strftime."

#: ../../../Misc/NEWS:3848
msgid ""
"`Issue #23973 <https://bugs.python.org/23973>`__: PEP 484: Add the typing "
"module."
msgstr ""
"`Issue #23973 <https://bugs.python.org/23973>`__: PEP 484: Add the typing "
"module."

#: ../../../Misc/NEWS:3850
msgid ""
"`Issue #23086 <https://bugs.python.org/23086>`__: The collections.abc."
"Sequence() abstract base class added *start* and *stop* parameters to the "
"index() mixin. Patch by Devin Jeanpierre."
msgstr ""
"`Issue #23086 <https://bugs.python.org/23086>`__: The collections.abc."
"Sequence() abstract base class added *start* and *stop* parameters to the "
"index() mixin. Patch by Devin Jeanpierre."

#: ../../../Misc/NEWS:3854
msgid ""
"`Issue #20035 <https://bugs.python.org/20035>`__: Replaced the ``tkinter."
"_fix`` module used for setting up the Tcl/Tk environment on Windows with a "
"private function in the ``_tkinter`` module that makes no permanent changes "
"to the environment."
msgstr ""
"`Issue #20035 <https://bugs.python.org/20035>`__: Replaced the ``tkinter."
"_fix`` module used for setting up the Tcl/Tk environment on Windows with a "
"private function in the ``_tkinter`` module that makes no permanent changes "
"to the environment."

#: ../../../Misc/NEWS:3858
msgid ""
"`Issue #24257 <https://bugs.python.org/24257>`__: Fixed segmentation fault "
"in sqlite3.Row constructor with faked cursor type."
msgstr ""
"`Issue #24257 <https://bugs.python.org/24257>`__: Fixed segmentation fault "
"in sqlite3.Row constructor with faked cursor type."

#: ../../../Misc/NEWS:3861
msgid ""
"`Issue #15836 <https://bugs.python.org/15836>`__: assertRaises(), "
"assertRaisesRegex(), assertWarns() and assertWarnsRegex() assertments now "
"check the type of the first argument to prevent possible user error.  Based "
"on patch by Daniel Wagner-Hall."
msgstr ""
"`Issue #15836 <https://bugs.python.org/15836>`__: assertRaises(), "
"assertRaisesRegex(), assertWarns() and assertWarnsRegex() assertments now "
"check the type of the first argument to prevent possible user error.  Based "
"on patch by Daniel Wagner-Hall."

#: ../../../Misc/NEWS:3865
msgid ""
"`Issue #9858 <https://bugs.python.org/9858>`__: Add missing method stubs to "
"_io.RawIOBase.  Patch by Laura Rupprecht."
msgstr ""
"`Issue #9858 <https://bugs.python.org/9858>`__: Add missing method stubs to "
"_io.RawIOBase.  Patch by Laura Rupprecht."

#: ../../../Misc/NEWS:3868
msgid ""
"`Issue #22955 <https://bugs.python.org/22955>`__: attrgetter, itemgetter and "
"methodcaller objects in the operator module now support pickling.  Added "
"readable and evaluable repr for these objects.  Based on patch by Josh "
"Rosenberg."
msgstr ""
"`Issue #22955 <https://bugs.python.org/22955>`__: attrgetter, itemgetter and "
"methodcaller objects in the operator module now support pickling.  Added "
"readable and evaluable repr for these objects.  Based on patch by Josh "
"Rosenberg."

#: ../../../Misc/NEWS:3872
msgid ""
"`Issue #22107 <https://bugs.python.org/22107>`__: tempfile.gettempdir() and "
"tempfile.mkdtemp() now try again when a directory with the chosen name "
"already exists on Windows as well as on Unix.  tempfile.mkstemp() now fails "
"early if parent directory is not valid (not exists or is a file) on Windows."
msgstr ""
"`Issue #22107 <https://bugs.python.org/22107>`__: tempfile.gettempdir() and "
"tempfile.mkdtemp() now try again when a directory with the chosen name "
"already exists on Windows as well as on Unix.  tempfile.mkstemp() now fails "
"early if parent directory is not valid (not exists or is a file) on Windows."

#: ../../../Misc/NEWS:3877
msgid ""
"`Issue #23780 <https://bugs.python.org/23780>`__: Improved error message in "
"os.path.join() with single argument."
msgstr ""
"`Issue #23780 <https://bugs.python.org/23780>`__: Improved error message in "
"os.path.join() with single argument."

#: ../../../Misc/NEWS:3879
msgid ""
"`Issue #6598 <https://bugs.python.org/6598>`__: Increased time precision and "
"random number range in email.utils.make_msgid() to strengthen the uniqueness "
"of the message ID."
msgstr ""
"`Issue #6598 <https://bugs.python.org/6598>`__: Increased time precision and "
"random number range in email.utils.make_msgid() to strengthen the uniqueness "
"of the message ID."

#: ../../../Misc/NEWS:3882
msgid ""
"`Issue #24091 <https://bugs.python.org/24091>`__: Fixed various crashes in "
"corner cases in C implementation of ElementTree."
msgstr ""
"`Issue #24091 <https://bugs.python.org/24091>`__: Fixed various crashes in "
"corner cases in C implementation of ElementTree."

#: ../../../Misc/NEWS:3885
msgid ""
"`Issue #21931 <https://bugs.python.org/21931>`__: msilib.FCICreate() now "
"raises TypeError in the case of a bad argument instead of a ValueError with "
"a bogus FCI error number. Patch by Jeffrey Armstrong."
msgstr ""
"`Issue #21931 <https://bugs.python.org/21931>`__: msilib.FCICreate() now "
"raises TypeError in the case of a bad argument instead of a ValueError with "
"a bogus FCI error number. Patch by Jeffrey Armstrong."

#: ../../../Misc/NEWS:3889
msgid ""
"`Issue #13866 <https://bugs.python.org/13866>`__: *quote_via* argument added "
"to urllib.parse.urlencode."
msgstr ""
"`Issue #13866 <https://bugs.python.org/13866>`__: *quote_via* argument added "
"to urllib.parse.urlencode."

#: ../../../Misc/NEWS:3891
msgid ""
"`Issue #20098 <https://bugs.python.org/20098>`__: New mangle_from policy "
"option for email, default True for compat32, but False for all other "
"policies."
msgstr ""
"`Issue #20098 <https://bugs.python.org/20098>`__: New mangle_from policy "
"option for email, default True for compat32, but False for all other "
"policies."

#: ../../../Misc/NEWS:3894
msgid ""
"`Issue #24211 <https://bugs.python.org/24211>`__: The email library now "
"supports RFC 6532: it can generate headers using utf-8 instead of encoded "
"words."
msgstr ""
"`Issue #24211 <https://bugs.python.org/24211>`__: The email library now "
"supports RFC 6532: it can generate headers using utf-8 instead of encoded "
"words."

#: ../../../Misc/NEWS:3897
msgid ""
"`Issue #16314 <https://bugs.python.org/16314>`__: Added support for the LZMA "
"compression in distutils."
msgstr ""
"`Issue #16314 <https://bugs.python.org/16314>`__: Added support for the LZMA "
"compression in distutils."

#: ../../../Misc/NEWS:3899
msgid ""
"`Issue #21804 <https://bugs.python.org/21804>`__: poplib now supports RFC "
"6856 (UTF8)."
msgstr ""
"`Issue #21804 <https://bugs.python.org/21804>`__: poplib now supports RFC "
"6856 (UTF8)."

#: ../../../Misc/NEWS:3901
msgid ""
"`Issue #18682 <https://bugs.python.org/18682>`__: Optimized pprint functions "
"for builtin scalar types."
msgstr ""
"`Issue #18682 <https://bugs.python.org/18682>`__: Optimized pprint functions "
"for builtin scalar types."

#: ../../../Misc/NEWS:3903
msgid ""
"`Issue #22027 <https://bugs.python.org/22027>`__: smtplib now supports RFC "
"6531 (SMTPUTF8)."
msgstr ""
"`Issue #22027 <https://bugs.python.org/22027>`__: smtplib now supports RFC "
"6531 (SMTPUTF8)."

#: ../../../Misc/NEWS:3905
msgid ""
"`Issue #23488 <https://bugs.python.org/23488>`__: Random generator objects "
"now consume 2x less memory on 64-bit."
msgstr ""
"`Issue #23488 <https://bugs.python.org/23488>`__: Random generator objects "
"now consume 2x less memory on 64-bit."

#: ../../../Misc/NEWS:3907
msgid ""
"`Issue #1322 <https://bugs.python.org/1322>`__: platform.dist() and platform."
"linux_distribution() functions are now deprecated.  Initial patch by "
"Vajrasky Kok."
msgstr ""
"`Issue #1322 <https://bugs.python.org/1322>`__: platform.dist() and platform."
"linux_distribution() functions are now deprecated.  Initial patch by "
"Vajrasky Kok."

#: ../../../Misc/NEWS:3910
msgid ""
"`Issue #22486 <https://bugs.python.org/22486>`__: Added the math.gcd() "
"function.  The fractions.gcd() function now is deprecated.  Based on patch "
"by Mark Dickinson."
msgstr ""
"`Issue #22486 <https://bugs.python.org/22486>`__: Added the math.gcd() "
"function.  The fractions.gcd() function now is deprecated.  Based on patch "
"by Mark Dickinson."

#: ../../../Misc/NEWS:3913
msgid ""
"`Issue #24064 <https://bugs.python.org/24064>`__: Property() docstrings are "
"now writeable. (Patch by Berker Peksag.)"
msgstr ""
"`Issue #24064 <https://bugs.python.org/24064>`__: Property() docstrings are "
"now writeable. (Patch by Berker Peksag.)"

#: ../../../Misc/NEWS:3916
msgid ""
"`Issue #22681 <https://bugs.python.org/22681>`__: Added support for the "
"koi8_t encoding."
msgstr ""
"`Issue #22681 <https://bugs.python.org/22681>`__: Added support for the "
"koi8_t encoding."

#: ../../../Misc/NEWS:3918
msgid ""
"`Issue #22682 <https://bugs.python.org/22682>`__: Added support for the "
"kz1048 encoding."
msgstr ""
"`Issue #22682 <https://bugs.python.org/22682>`__: Added support for the "
"kz1048 encoding."

#: ../../../Misc/NEWS:3920
msgid ""
"`Issue #23796 <https://bugs.python.org/23796>`__: peek and read1 methods of "
"BufferedReader now raise ValueError if they called on a closed object. Patch "
"by John Hergenroeder."
msgstr ""
"`Issue #23796 <https://bugs.python.org/23796>`__: peek and read1 methods of "
"BufferedReader now raise ValueError if they called on a closed object. Patch "
"by John Hergenroeder."

#: ../../../Misc/NEWS:3923
msgid ""
"`Issue #21795 <https://bugs.python.org/21795>`__: smtpd now supports the "
"8BITMIME extension whenever the new *decode_data* constructor argument is "
"set to False."
msgstr ""
"`Issue #21795 <https://bugs.python.org/21795>`__: smtpd now supports the "
"8BITMIME extension whenever the new *decode_data* constructor argument is "
"set to False."

#: ../../../Misc/NEWS:3926
msgid ""
"`Issue #24155 <https://bugs.python.org/24155>`__: optimize heapq.heapify() "
"for better cache performance when heapifying large lists."
msgstr ""
"`Issue #24155 <https://bugs.python.org/24155>`__: optimize heapq.heapify() "
"for better cache performance when heapifying large lists."

#: ../../../Misc/NEWS:3929
msgid ""
"`Issue #21800 <https://bugs.python.org/21800>`__: imaplib now supports RFC "
"5161 (enable), RFC 6855 (utf8/internationalized email) and automatically "
"encodes non-ASCII usernames and passwords to UTF8."
msgstr ""
"`Issue #21800 <https://bugs.python.org/21800>`__: imaplib now supports RFC "
"5161 (enable), RFC 6855 (utf8/internationalized email) and automatically "
"encodes non-ASCII usernames and passwords to UTF8."

#: ../../../Misc/NEWS:3933
msgid ""
"`Issue #20274 <https://bugs.python.org/20274>`__: When calling a _sqlite."
"Connection, it now complains if passed any keyword arguments.  Previously it "
"silently ignored them."
msgstr ""
"`Issue #20274 <https://bugs.python.org/20274>`__: When calling a _sqlite."
"Connection, it now complains if passed any keyword arguments.  Previously it "
"silently ignored them."

#: ../../../Misc/NEWS:3936
msgid ""
"`Issue #20274 <https://bugs.python.org/20274>`__: Remove ignored and "
"erroneous \"kwargs\" parameters from three METH_VARARGS methods on _sqlite."
"Connection."
msgstr ""
"`Issue #20274 <https://bugs.python.org/20274>`__: Remove ignored and "
"erroneous \"kwargs\" parameters from three METH_VARARGS methods on _sqlite."
"Connection."

#: ../../../Misc/NEWS:3939
msgid ""
"`Issue #24134 <https://bugs.python.org/24134>`__: assertRaises(), "
"assertRaisesRegex(), assertWarns() and assertWarnsRegex() checks now emits a "
"deprecation warning when callable is None or keyword arguments except msg is "
"passed in the context manager mode."
msgstr ""
"`Issue #24134 <https://bugs.python.org/24134>`__: assertRaises(), "
"assertRaisesRegex(), assertWarns() and assertWarnsRegex() checks now emits a "
"deprecation warning when callable is None or keyword arguments except msg is "
"passed in the context manager mode."

#: ../../../Misc/NEWS:3943
msgid ""
"`Issue #24018 <https://bugs.python.org/24018>`__: Add a collections.abc."
"Generator abstract base class. Contributed by Stefan Behnel."
msgstr ""
"`Issue #24018 <https://bugs.python.org/24018>`__: Add a collections.abc."
"Generator abstract base class. Contributed by Stefan Behnel."

#: ../../../Misc/NEWS:3946
msgid ""
"`Issue #23880 <https://bugs.python.org/23880>`__: Tkinter's getint() and "
"getdouble() now support Tcl_Obj. Tkinter's getdouble() now supports any "
"numbers (in particular int)."
msgstr ""
"`Issue #23880 <https://bugs.python.org/23880>`__: Tkinter's getint() and "
"getdouble() now support Tcl_Obj. Tkinter's getdouble() now supports any "
"numbers (in particular int)."

#: ../../../Misc/NEWS:3949
msgid ""
"`Issue #22619 <https://bugs.python.org/22619>`__: Added negative limit "
"support in the traceback module. Based on patch by Dmitry Kazakov."
msgstr ""
"`Issue #22619 <https://bugs.python.org/22619>`__: Added negative limit "
"support in the traceback module. Based on patch by Dmitry Kazakov."

#: ../../../Misc/NEWS:3952
msgid ""
"`Issue #24094 <https://bugs.python.org/24094>`__: Fix possible crash in json."
"encode with poorly behaved dict subclasses."
msgstr ""
"`Issue #24094 <https://bugs.python.org/24094>`__: Fix possible crash in json."
"encode with poorly behaved dict subclasses."

#: ../../../Misc/NEWS:3955
msgid ""
"`Issue #9246 <https://bugs.python.org/9246>`__: On POSIX, os.getcwd() now "
"supports paths longer than 1025 bytes. Patch written by William Orr."
msgstr ""
"`Issue #9246 <https://bugs.python.org/9246>`__: On POSIX, os.getcwd() now "
"supports paths longer than 1025 bytes. Patch written by William Orr."

#: ../../../Misc/NEWS:3958
msgid ""
"`Issue #17445 <https://bugs.python.org/17445>`__: add difflib.diff_bytes() "
"to support comparison of byte strings (fixes a regression from Python 2)."
msgstr ""
"`Issue #17445 <https://bugs.python.org/17445>`__: add difflib.diff_bytes() "
"to support comparison of byte strings (fixes a regression from Python 2)."

#: ../../../Misc/NEWS:3961
msgid ""
"`Issue #23917 <https://bugs.python.org/23917>`__: Fall back to sequential "
"compilation when ProcessPoolExecutor doesn't exist.  Patch by Claudiu Popa."
msgstr ""
"`Issue #23917 <https://bugs.python.org/23917>`__: Fall back to sequential "
"compilation when ProcessPoolExecutor doesn't exist.  Patch by Claudiu Popa."

#: ../../../Misc/NEWS:3964
msgid ""
"`Issue #23008 <https://bugs.python.org/23008>`__: Fixed resolving attributes "
"with boolean value is False in pydoc."
msgstr ""
"`Issue #23008 <https://bugs.python.org/23008>`__: Fixed resolving attributes "
"with boolean value is False in pydoc."

#: ../../../Misc/NEWS:3966
msgid ""
"Fix asyncio issue 235: LifoQueue and PriorityQueue's put didn't increment "
"unfinished tasks (this bug was introduced when JoinableQueue was merged with "
"Queue)."
msgstr ""

#: ../../../Misc/NEWS:3970
msgid ""
"`Issue #23908 <https://bugs.python.org/23908>`__: os functions now reject "
"paths with embedded null character on Windows instead of silently truncating "
"them."
msgstr ""
"`Issue #23908 <https://bugs.python.org/23908>`__: os functions now reject "
"paths with embedded null character on Windows instead of silently truncating "
"them."

#: ../../../Misc/NEWS:3973
msgid ""
"`Issue #23728 <https://bugs.python.org/23728>`__: binascii.crc_hqx() could "
"return an integer outside of the range 0-0xffff for empty data."
msgstr ""
"`Issue #23728 <https://bugs.python.org/23728>`__: binascii.crc_hqx() could "
"return an integer outside of the range 0-0xffff for empty data."

#: ../../../Misc/NEWS:3976
msgid ""
"`Issue #23887 <https://bugs.python.org/23887>`__: urllib.error.HTTPError now "
"has a proper repr() representation. Patch by Berker Peksag."
msgstr ""
"`Issue #23887 <https://bugs.python.org/23887>`__: urllib.error.HTTPError now "
"has a proper repr() representation. Patch by Berker Peksag."

#: ../../../Misc/NEWS:3979
msgid ""
"asyncio: New event loop APIs: set_task_factory() and get_task_factory()."
msgstr ""

#: ../../../Misc/NEWS:3981
msgid "asyncio: async() function is deprecated in favour of ensure_future()."
msgstr ""

#: ../../../Misc/NEWS:3983
msgid ""
"`Issue #24178 <https://bugs.python.org/24178>`__: asyncio.Lock, Condition, "
"Semaphore, and BoundedSemaphore support new 'async with' syntax.  "
"Contributed by Yury Selivanov."
msgstr ""
"`Issue #24178 <https://bugs.python.org/24178>`__: asyncio.Lock, Condition, "
"Semaphore, and BoundedSemaphore support new 'async with' syntax.  "
"Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:3986
msgid ""
"`Issue #24179 <https://bugs.python.org/24179>`__: Support 'async for' for "
"asyncio.StreamReader. Contributed by Yury Selivanov."
msgstr ""
"`Issue #24179 <https://bugs.python.org/24179>`__: Support 'async for' for "
"asyncio.StreamReader. Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:3989
msgid ""
"`Issue #24184 <https://bugs.python.org/24184>`__: Add AsyncIterator and "
"AsyncIterable ABCs to collections.abc.  Contributed by Yury Selivanov."
msgstr ""
"`Issue #24184 <https://bugs.python.org/24184>`__: Add AsyncIterator and "
"AsyncIterable ABCs to collections.abc.  Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:3992
msgid ""
"`Issue #22547 <https://bugs.python.org/22547>`__: Implement informative "
"__repr__ for inspect.BoundArguments. Contributed by Yury Selivanov."
msgstr ""
"`Issue #22547 <https://bugs.python.org/22547>`__: Implement informative "
"__repr__ for inspect.BoundArguments. Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:3995
msgid ""
"`Issue #24190 <https://bugs.python.org/24190>`__: Implement inspect."
"BoundArgument.apply_defaults() method. Contributed by Yury Selivanov."
msgstr ""
"`Issue #24190 <https://bugs.python.org/24190>`__: Implement inspect."
"BoundArgument.apply_defaults() method. Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:3998
msgid ""
"`Issue #20691 <https://bugs.python.org/20691>`__: Add 'follow_wrapped' "
"argument to inspect.Signature.from_callable() and inspect.signature(). "
"Contributed by Yury Selivanov."
msgstr ""
"`Issue #20691 <https://bugs.python.org/20691>`__: Add 'follow_wrapped' "
"argument to inspect.Signature.from_callable() and inspect.signature(). "
"Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:4002
msgid ""
"`Issue #24248 <https://bugs.python.org/24248>`__: Deprecate inspect."
"Signature.from_function() and inspect.Signature.from_builtin()."
msgstr ""
"`Issue #24248 <https://bugs.python.org/24248>`__: Deprecate inspect."
"Signature.from_function() and inspect.Signature.from_builtin()."

#: ../../../Misc/NEWS:4005
msgid ""
"`Issue #23898 <https://bugs.python.org/23898>`__: Fix inspect."
"classify_class_attrs() to support attributes with overloaded __eq__ and "
"__bool__.  Patch by Mike Bayer."
msgstr ""
"`Issue #23898 <https://bugs.python.org/23898>`__: Fix inspect."
"classify_class_attrs() to support attributes with overloaded __eq__ and "
"__bool__.  Patch by Mike Bayer."

#: ../../../Misc/NEWS:4008
msgid ""
"`Issue #24298 <https://bugs.python.org/24298>`__: Fix inspect.signature() to "
"correctly unwrap wrappers around bound methods."
msgstr ""
"`Issue #24298 <https://bugs.python.org/24298>`__: Fix inspect.signature() to "
"correctly unwrap wrappers around bound methods."

#: ../../../Misc/NEWS:4014
msgid ""
"`Issue #23184 <https://bugs.python.org/23184>`__: remove unused names and "
"imports in idlelib. Initial patch by Al Sweigart."
msgstr ""
"`Issue #23184 <https://bugs.python.org/23184>`__: remove unused names and "
"imports in idlelib. Initial patch by Al Sweigart."

#: ../../../Misc/NEWS:4020
msgid ""
"`Issue #21520 <https://bugs.python.org/21520>`__: test_zipfile no longer "
"fails if the word 'bad' appears anywhere in the name of the current "
"directory."
msgstr ""
"`Issue #21520 <https://bugs.python.org/21520>`__: test_zipfile no longer "
"fails if the word 'bad' appears anywhere in the name of the current "
"directory."

#: ../../../Misc/NEWS:4023
msgid ""
"`Issue #9517 <https://bugs.python.org/9517>`__: Move script_helper into the "
"support package. Patch by Christie Wilson."
msgstr ""
"`Issue #9517 <https://bugs.python.org/9517>`__: Move script_helper into the "
"support package. Patch by Christie Wilson."

#: ../../../Misc/NEWS:4029
msgid ""
"`Issue #22155 <https://bugs.python.org/22155>`__: Add File Handlers "
"subsection with createfilehandler to tkinter doc.  Remove obsolete example "
"from FAQ.  Patch by Martin Panter."
msgstr ""
"`Issue #22155 <https://bugs.python.org/22155>`__: Add File Handlers "
"subsection with createfilehandler to tkinter doc.  Remove obsolete example "
"from FAQ.  Patch by Martin Panter."

#: ../../../Misc/NEWS:4032
msgid ""
"`Issue #24029 <https://bugs.python.org/24029>`__: Document the name binding "
"behavior for submodule imports."
msgstr ""
"`Issue #24029 <https://bugs.python.org/24029>`__: Document the name binding "
"behavior for submodule imports."

#: ../../../Misc/NEWS:4034
msgid ""
"`Issue #24077 <https://bugs.python.org/24077>`__: Fix typo in man page for -"
"I command option: -s, not -S"
msgstr ""
"`Issue #24077 <https://bugs.python.org/24077>`__: Fix typo in man page for -"
"I command option: -s, not -S"

#: ../../../Misc/NEWS:4039
msgid ""
"`Issue #24000 <https://bugs.python.org/24000>`__: Improved Argument Clinic's "
"mapping of converters to legacy \"format units\".  Updated the documentation "
"to match."
msgstr ""
"`Issue #24000 <https://bugs.python.org/24000>`__: Improved Argument Clinic's "
"mapping of converters to legacy \"format units\".  Updated the documentation "
"to match."

#: ../../../Misc/NEWS:4042
msgid ""
"`Issue #24001 <https://bugs.python.org/24001>`__: Argument Clinic converters "
"now use accept={type} instead of types={'type'} to specify the types the "
"converter accepts."
msgstr ""
"`Issue #24001 <https://bugs.python.org/24001>`__: Argument Clinic converters "
"now use accept={type} instead of types={'type'} to specify the types the "
"converter accepts."

#: ../../../Misc/NEWS:4045
msgid ""
"`Issue #23330 <https://bugs.python.org/23330>`__: h2py now supports "
"arbitrary filenames in #include."
msgstr ""
"`Issue #23330 <https://bugs.python.org/23330>`__: h2py now supports "
"arbitrary filenames in #include."

#: ../../../Misc/NEWS:4047
msgid ""
"`Issue #24031 <https://bugs.python.org/24031>`__: make patchcheck now "
"supports git checkouts, too."
msgstr ""
"`Issue #24031 <https://bugs.python.org/24031>`__: make patchcheck now "
"supports git checkouts, too."

#: ../../../Misc/NEWS:4051
msgid "Python 3.5.0 alpha 4"
msgstr "Python 3.5.0 alpha 4"

#: ../../../Misc/NEWS:4053
msgid "Release date: 2015-04-19"
msgstr ""

#: ../../../Misc/NEWS:4058
msgid ""
"`Issue #22980 <https://bugs.python.org/22980>`__: Under Linux, GNU/KFreeBSD "
"and the Hurd, C extensions now include the architecture triplet in the "
"extension name, to make it easy to test builds for different ABIs in the "
"same working tree.  Under OS X, the extension name now includes PEP 3149-"
"style information."
msgstr ""
"`Issue #22980 <https://bugs.python.org/22980>`__: Under Linux, GNU/KFreeBSD "
"and the Hurd, C extensions now include the architecture triplet in the "
"extension name, to make it easy to test builds for different ABIs in the "
"same working tree.  Under OS X, the extension name now includes PEP 3149-"
"style information."

#: ../../../Misc/NEWS:4063
msgid ""
"`Issue #22631 <https://bugs.python.org/22631>`__: Added Linux-specific "
"socket constant CAN_RAW_FD_FRAMES. Patch courtesy of Joe Jevnik."
msgstr ""
"`Issue #22631 <https://bugs.python.org/22631>`__: Added Linux-specific "
"socket constant CAN_RAW_FD_FRAMES. Patch courtesy of Joe Jevnik."

#: ../../../Misc/NEWS:4066
msgid ""
"`Issue #23731 <https://bugs.python.org/23731>`__: Implement PEP 488: removal "
"of .pyo files."
msgstr ""
"`Issue #23731 <https://bugs.python.org/23731>`__: Implement PEP 488: removal "
"of .pyo files."

#: ../../../Misc/NEWS:4068
msgid ""
"`Issue #23726 <https://bugs.python.org/23726>`__: Don't enable GC for user "
"subclasses of non-GC types that don't add any new fields.  Patch by Eugene "
"Toder."
msgstr ""
"`Issue #23726 <https://bugs.python.org/23726>`__: Don't enable GC for user "
"subclasses of non-GC types that don't add any new fields.  Patch by Eugene "
"Toder."

#: ../../../Misc/NEWS:4071
msgid ""
"`Issue #23309 <https://bugs.python.org/23309>`__: Avoid a deadlock at "
"shutdown if a daemon thread is aborted while it is holding a lock to a "
"buffered I/O object, and the main thread tries to use the same I/O object "
"(typically stdout or stderr).  A fatal error is emitted instead."
msgstr ""
"`Issue #23309 <https://bugs.python.org/23309>`__: Avoid a deadlock at "
"shutdown if a daemon thread is aborted while it is holding a lock to a "
"buffered I/O object, and the main thread tries to use the same I/O object "
"(typically stdout or stderr).  A fatal error is emitted instead."

#: ../../../Misc/NEWS:4076
msgid ""
"`Issue #22977 <https://bugs.python.org/22977>`__: Fixed formatting Windows "
"error messages on Wine. Patch by Martin Panter."
msgstr ""
"`Issue #22977 <https://bugs.python.org/22977>`__: Fixed formatting Windows "
"error messages on Wine. Patch by Martin Panter."

#: ../../../Misc/NEWS:4079
msgid ""
"`Issue #23466 <https://bugs.python.org/23466>`__: %c, %o, %x, and %X in "
"bytes formatting now raise TypeError on non-integer input."
msgstr ""
"`Issue #23466 <https://bugs.python.org/23466>`__: %c, %o, %x, and %X in "
"bytes formatting now raise TypeError on non-integer input."

#: ../../../Misc/NEWS:4082
msgid ""
"`Issue #24044 <https://bugs.python.org/24044>`__: Fix possible null pointer "
"dereference in list.sort in out of memory conditions."
msgstr ""
"`Issue #24044 <https://bugs.python.org/24044>`__: Fix possible null pointer "
"dereference in list.sort in out of memory conditions."

#: ../../../Misc/NEWS:4085
msgid ""
"`Issue #21354 <https://bugs.python.org/21354>`__: PyCFunction_New function "
"is exposed by python DLL again."
msgstr ""
"`Issue #21354 <https://bugs.python.org/21354>`__: PyCFunction_New function "
"is exposed by python DLL again."

#: ../../../Misc/NEWS:4090
msgid ""
"`Issue #23840 <https://bugs.python.org/23840>`__: tokenize.open() now closes "
"the temporary binary file on error to fix a resource warning."
msgstr ""
"`Issue #23840 <https://bugs.python.org/23840>`__: tokenize.open() now closes "
"the temporary binary file on error to fix a resource warning."

#: ../../../Misc/NEWS:4093
msgid ""
"`Issue #16914 <https://bugs.python.org/16914>`__: new debuglevel 2 in "
"smtplib adds timestamps to debug output."
msgstr ""
"`Issue #16914 <https://bugs.python.org/16914>`__: new debuglevel 2 in "
"smtplib adds timestamps to debug output."

#: ../../../Misc/NEWS:4095
msgid ""
"`Issue #7159 <https://bugs.python.org/7159>`__: urllib.request now supports "
"sending auth credentials automatically after the first 401.  This "
"enhancement is a superset of the enhancement from `issue #19494 <https://"
"bugs.python.org/19494>`__ and supersedes that change."
msgstr ""
"`Issue #7159 <https://bugs.python.org/7159>`__: urllib.request now supports "
"sending auth credentials automatically after the first 401.  This "
"enhancement is a superset of the enhancement from `issue #19494 <https://"
"bugs.python.org/19494>`__ and supersedes that change."

#: ../../../Misc/NEWS:4099
msgid ""
"`Issue #23703 <https://bugs.python.org/23703>`__: Fix a regression in "
"urljoin() introduced in 901e4e52b20a. Patch by Demian Brecht."
msgstr ""
"`Issue #23703 <https://bugs.python.org/23703>`__: Fix a regression in "
"urljoin() introduced in 901e4e52b20a. Patch by Demian Brecht."

#: ../../../Misc/NEWS:4102
msgid ""
"`Issue #4254 <https://bugs.python.org/4254>`__: Adds _curses."
"update_lines_cols().  Patch by Arnon Yaari"
msgstr ""
"`Issue #4254 <https://bugs.python.org/4254>`__: Adds _curses."
"update_lines_cols().  Patch by Arnon Yaari"

#: ../../../Misc/NEWS:4104
msgid ""
"`Issue #19933 <https://bugs.python.org/19933>`__: Provide default argument "
"for ndigits in round. Patch by Vajrasky Kok."
msgstr ""
"`Issue #19933 <https://bugs.python.org/19933>`__: Provide default argument "
"for ndigits in round. Patch by Vajrasky Kok."

#: ../../../Misc/NEWS:4107
msgid ""
"`Issue #23193 <https://bugs.python.org/23193>`__: Add a numeric_owner "
"parameter to tarfile.TarFile.extract and tarfile.TarFile.extractall. Patch "
"by Michael Vogt and Eric Smith."
msgstr ""
"`Issue #23193 <https://bugs.python.org/23193>`__: Add a numeric_owner "
"parameter to tarfile.TarFile.extract and tarfile.TarFile.extractall. Patch "
"by Michael Vogt and Eric Smith."

#: ../../../Misc/NEWS:4111
msgid ""
"`Issue #23342 <https://bugs.python.org/23342>`__: Add a subprocess.run() "
"function than returns a CalledProcess instance for a more consistent API "
"than the existing call* functions."
msgstr ""
"`Issue #23342 <https://bugs.python.org/23342>`__: Add a subprocess.run() "
"function than returns a CalledProcess instance for a more consistent API "
"than the existing call* functions."

#: ../../../Misc/NEWS:4114
msgid ""
"`Issue #21217 <https://bugs.python.org/21217>`__: inspect.getsourcelines() "
"now tries to compute the start and end lines from the code object, fixing an "
"issue when a lambda function is used as decorator argument. Patch by Thomas "
"Ballinger and Allison Kaptur."
msgstr ""
"`Issue #21217 <https://bugs.python.org/21217>`__: inspect.getsourcelines() "
"now tries to compute the start and end lines from the code object, fixing an "
"issue when a lambda function is used as decorator argument. Patch by Thomas "
"Ballinger and Allison Kaptur."

#: ../../../Misc/NEWS:4118
msgid ""
"`Issue #24521 <https://bugs.python.org/24521>`__: Fix possible integer "
"overflows in the pickle module."
msgstr ""
"`Issue #24521 <https://bugs.python.org/24521>`__: Fix possible integer "
"overflows in the pickle module."

#: ../../../Misc/NEWS:4120
msgid ""
"`Issue #22931 <https://bugs.python.org/22931>`__: Allow '[' and ']' in "
"cookie values."
msgstr ""
"`Issue #22931 <https://bugs.python.org/22931>`__: Allow '[' and ']' in "
"cookie values."

#: ../../../Misc/NEWS:4122
msgid "The keywords attribute of functools.partial is now always a dictionary."
msgstr ""

#: ../../../Misc/NEWS:4124
msgid ""
"`Issue #23811 <https://bugs.python.org/23811>`__: Add missing newline to the "
"PyCompileError error message. Patch by Alex Shkop."
msgstr ""
"`Issue #23811 <https://bugs.python.org/23811>`__: Add missing newline to the "
"PyCompileError error message. Patch by Alex Shkop."

#: ../../../Misc/NEWS:4127
msgid ""
"`Issue #21116 <https://bugs.python.org/21116>`__: Avoid blowing memory when "
"allocating a multiprocessing shared array that's larger than 50% of the "
"available RAM.  Patch by M√©d√©ric Boquien."
msgstr ""
"`Issue #21116 <https://bugs.python.org/21116>`__: Avoid blowing memory when "
"allocating a multiprocessing shared array that's larger than 50% of the "
"available RAM.  Patch by M√©d√©ric Boquien."

#: ../../../Misc/NEWS:4130
msgid ""
"`Issue #22982 <https://bugs.python.org/22982>`__: Improve BOM handling when "
"seeking to multiple positions of a writable text file."
msgstr ""
"`Issue #22982 <https://bugs.python.org/22982>`__: Improve BOM handling when "
"seeking to multiple positions of a writable text file."

#: ../../../Misc/NEWS:4133
msgid ""
"`Issue #23464 <https://bugs.python.org/23464>`__: Removed deprecated asyncio "
"JoinableQueue."
msgstr ""
"`Issue #23464 <https://bugs.python.org/23464>`__: Removed deprecated asyncio "
"JoinableQueue."

#: ../../../Misc/NEWS:4135
msgid ""
"`Issue #23529 <https://bugs.python.org/23529>`__: Limit the size of "
"decompressed data when reading from GzipFile, BZ2File or LZMAFile.  This "
"defeats denial of service attacks using compressed bombs (i.e. compressed "
"payloads which decompress to a huge size).  Patch by Martin Panter and "
"Nikolaus Rath."
msgstr ""
"`Issue #23529 <https://bugs.python.org/23529>`__: Limit the size of "
"decompressed data when reading from GzipFile, BZ2File or LZMAFile.  This "
"defeats denial of service attacks using compressed bombs (i.e. compressed "
"payloads which decompress to a huge size).  Patch by Martin Panter and "
"Nikolaus Rath."

#: ../../../Misc/NEWS:4140
msgid ""
"`Issue #21859 <https://bugs.python.org/21859>`__: Added Python "
"implementation of io.FileIO."
msgstr ""
"`Issue #21859 <https://bugs.python.org/21859>`__: Added Python "
"implementation of io.FileIO."

#: ../../../Misc/NEWS:4142
msgid ""
"`Issue #23865 <https://bugs.python.org/23865>`__: close() methods in "
"multiple modules now are idempotent and more robust at shutdown. If they "
"need to release multiple resources, all are released even if errors occur."
msgstr ""
"`Issue #23865 <https://bugs.python.org/23865>`__: close() methods in "
"multiple modules now are idempotent and more robust at shutdown. If they "
"need to release multiple resources, all are released even if errors occur."

#: ../../../Misc/NEWS:4146
msgid ""
"`Issue #23400 <https://bugs.python.org/23400>`__: Raise same exception on "
"both Python 2 and 3 if sem_open is not available.  Patch by Davin Potts."
msgstr ""
"`Issue #23400 <https://bugs.python.org/23400>`__: Raise same exception on "
"both Python 2 and 3 if sem_open is not available.  Patch by Davin Potts."

#: ../../../Misc/NEWS:4149
msgid ""
"`Issue #10838 <https://bugs.python.org/10838>`__: The subprocess now module "
"includes SubprocessError and TimeoutError in its list of exported names for "
"the users wild enough to use ``from subprocess import *``."
msgstr ""
"`Issue #10838 <https://bugs.python.org/10838>`__: The subprocess now module "
"includes SubprocessError and TimeoutError in its list of exported names for "
"the users wild enough to use ``from subprocess import *``."

#: ../../../Misc/NEWS:4153
msgid ""
"`Issue #23411 <https://bugs.python.org/23411>`__: Added DefragResult, "
"ParseResult, SplitResult, DefragResultBytes, ParseResultBytes, and "
"SplitResultBytes to urllib.parse.__all__. Patch by Martin Panter."
msgstr ""
"`Issue #23411 <https://bugs.python.org/23411>`__: Added DefragResult, "
"ParseResult, SplitResult, DefragResultBytes, ParseResultBytes, and "
"SplitResultBytes to urllib.parse.__all__. Patch by Martin Panter."

#: ../../../Misc/NEWS:4157
msgid ""
"`Issue #23881 <https://bugs.python.org/23881>`__: urllib.request.ftpwrapper "
"constructor now closes the socket if the FTP connection failed to fix a "
"ResourceWarning."
msgstr ""
"`Issue #23881 <https://bugs.python.org/23881>`__: urllib.request.ftpwrapper "
"constructor now closes the socket if the FTP connection failed to fix a "
"ResourceWarning."

#: ../../../Misc/NEWS:4160
msgid ""
"`Issue #23853 <https://bugs.python.org/23853>`__: :meth:`socket.socket."
"sendall` does no more reset the socket timeout each time data is sent "
"successfully. The socket timeout is now the maximum total duration to send "
"all data."
msgstr ""
"`Issue #23853 <https://bugs.python.org/23853>`__: :meth:`socket.socket."
"sendall` does no more reset the socket timeout each time data is sent "
"successfully. The socket timeout is now the maximum total duration to send "
"all data."

#: ../../../Misc/NEWS:4164
msgid ""
"`Issue #22721 <https://bugs.python.org/22721>`__: An order of multiline "
"pprint output of set or dict containing orderable and non-orderable elements "
"no longer depends on iteration order of set or dict."
msgstr ""
"`Issue #22721 <https://bugs.python.org/22721>`__: An order of multiline "
"pprint output of set or dict containing orderable and non-orderable elements "
"no longer depends on iteration order of set or dict."

#: ../../../Misc/NEWS:4168
msgid ""
"`Issue #15133 <https://bugs.python.org/15133>`__: _tkinter.tkapp."
"getboolean() now supports Tcl_Obj and always returns bool.  tkinter."
"BooleanVar now validates input values (accepted bool, int, str, and "
"Tcl_Obj).  tkinter.BooleanVar.get() now always returns bool."
msgstr ""
"`Issue #15133 <https://bugs.python.org/15133>`__: _tkinter.tkapp."
"getboolean() now supports Tcl_Obj and always returns bool.  tkinter."
"BooleanVar now validates input values (accepted bool, int, str, and "
"Tcl_Obj).  tkinter.BooleanVar.get() now always returns bool."

#: ../../../Misc/NEWS:4172
msgid ""
"`Issue #10590 <https://bugs.python.org/10590>`__: xml.sax.parseString() now "
"supports string argument."
msgstr ""
"`Issue #10590 <https://bugs.python.org/10590>`__: xml.sax.parseString() now "
"supports string argument."

#: ../../../Misc/NEWS:4174
msgid ""
"`Issue #23338 <https://bugs.python.org/23338>`__: Fixed formatting ctypes "
"error messages on Cygwin. Patch by Makoto Kato."
msgstr ""
"`Issue #23338 <https://bugs.python.org/23338>`__: Fixed formatting ctypes "
"error messages on Cygwin. Patch by Makoto Kato."

#: ../../../Misc/NEWS:4177
msgid ""
"`Issue #15582 <https://bugs.python.org/15582>`__: inspect.getdoc() now "
"follows inheritance chains."
msgstr ""
"`Issue #15582 <https://bugs.python.org/15582>`__: inspect.getdoc() now "
"follows inheritance chains."

#: ../../../Misc/NEWS:4179
msgid ""
"`Issue #2175 <https://bugs.python.org/2175>`__: SAX parsers now support a "
"character stream of InputSource object."
msgstr ""
"`Issue #2175 <https://bugs.python.org/2175>`__: SAX parsers now support a "
"character stream of InputSource object."

#: ../../../Misc/NEWS:4181
msgid ""
"`Issue #16840 <https://bugs.python.org/16840>`__: Tkinter now supports 64-"
"bit integers added in Tcl 8.4 and arbitrary precision integers added in Tcl "
"8.5."
msgstr ""
"`Issue #16840 <https://bugs.python.org/16840>`__: Tkinter now supports 64-"
"bit integers added in Tcl 8.4 and arbitrary precision integers added in Tcl "
"8.5."

#: ../../../Misc/NEWS:4184
msgid ""
"`Issue #23834 <https://bugs.python.org/23834>`__: Fix socket.sendto(), use "
"the C Py_ssize_t type to store the result of sendto() instead of the C int "
"type."
msgstr ""
"`Issue #23834 <https://bugs.python.org/23834>`__: Fix socket.sendto(), use "
"the C Py_ssize_t type to store the result of sendto() instead of the C int "
"type."

#: ../../../Misc/NEWS:4187
msgid ""
"`Issue #23618 <https://bugs.python.org/23618>`__: :meth:`socket.socket."
"connect` now waits until the connection completes instead of raising :exc:"
"`InterruptedError` if the connection is interrupted by signals, signal "
"handlers don't raise an exception and the socket is blocking or has a "
"timeout. :meth:`socket.socket.connect` still raise :exc:`InterruptedError` "
"for non-blocking sockets."
msgstr ""
"`Issue #23618 <https://bugs.python.org/23618>`__: :meth:`socket.socket."
"connect` now waits until the connection completes instead of raising :exc:"
"`InterruptedError` if the connection is interrupted by signals, signal "
"handlers don't raise an exception and the socket is blocking or has a "
"timeout. :meth:`socket.socket.connect` still raise :exc:`InterruptedError` "
"for non-blocking sockets."

#: ../../../Misc/NEWS:4193
msgid ""
"`Issue #21526 <https://bugs.python.org/21526>`__: Tkinter now supports new "
"boolean type in Tcl 8.5."
msgstr ""
"`Issue #21526 <https://bugs.python.org/21526>`__: Tkinter now supports new "
"boolean type in Tcl 8.5."

#: ../../../Misc/NEWS:4195
msgid ""
"`Issue #23836 <https://bugs.python.org/23836>`__: Fix the faulthandler "
"module to handle reentrant calls to its signal handlers."
msgstr ""
"`Issue #23836 <https://bugs.python.org/23836>`__: Fix the faulthandler "
"module to handle reentrant calls to its signal handlers."

#: ../../../Misc/NEWS:4198
msgid ""
"`Issue #23838 <https://bugs.python.org/23838>`__: linecache now clears the "
"cache and returns an empty result on MemoryError."
msgstr ""
"`Issue #23838 <https://bugs.python.org/23838>`__: linecache now clears the "
"cache and returns an empty result on MemoryError."

#: ../../../Misc/NEWS:4201
msgid ""
"`Issue #10395 <https://bugs.python.org/10395>`__: Added os.path."
"commonpath(). Implemented in posixpath and ntpath. Based on patch by Rafik "
"Draoui."
msgstr ""
"`Issue #10395 <https://bugs.python.org/10395>`__: Added os.path."
"commonpath(). Implemented in posixpath and ntpath. Based on patch by Rafik "
"Draoui."

#: ../../../Misc/NEWS:4204
msgid ""
"`Issue #23611 <https://bugs.python.org/23611>`__: Serializing more "
"\"lookupable\" objects (such as unbound methods or nested classes) now are "
"supported with pickle protocols < 4."
msgstr ""
"`Issue #23611 <https://bugs.python.org/23611>`__: Serializing more "
"\"lookupable\" objects (such as unbound methods or nested classes) now are "
"supported with pickle protocols < 4."

#: ../../../Misc/NEWS:4207
msgid ""
"`Issue #13583 <https://bugs.python.org/13583>`__: sqlite3.Row now supports "
"slice indexing."
msgstr ""
"`Issue #13583 <https://bugs.python.org/13583>`__: sqlite3.Row now supports "
"slice indexing."

#: ../../../Misc/NEWS:4209
msgid ""
"`Issue #18473 <https://bugs.python.org/18473>`__: Fixed 2to3 and 3to2 "
"compatible pickle mappings.  Fixed ambigious reverse mappings.  Added many "
"new mappings.  Import mapping is no longer applied to modules already mapped "
"with full name mapping."
msgstr ""
"`Issue #18473 <https://bugs.python.org/18473>`__: Fixed 2to3 and 3to2 "
"compatible pickle mappings.  Fixed ambigious reverse mappings.  Added many "
"new mappings.  Import mapping is no longer applied to modules already mapped "
"with full name mapping."

#: ../../../Misc/NEWS:4213
msgid ""
"`Issue #23485 <https://bugs.python.org/23485>`__: select.select() is now "
"retried automatically with the recomputed timeout when interrupted by a "
"signal, except if the signal handler raises an exception. This change is "
"part of the PEP 475."
msgstr ""
"`Issue #23485 <https://bugs.python.org/23485>`__: select.select() is now "
"retried automatically with the recomputed timeout when interrupted by a "
"signal, except if the signal handler raises an exception. This change is "
"part of the PEP 475."

#: ../../../Misc/NEWS:4217
msgid ""
"`Issue #23752 <https://bugs.python.org/23752>`__: When built from an "
"existing file descriptor, io.FileIO() now only calls fstat() once. Before "
"fstat() was called twice, which was not necessary."
msgstr ""
"`Issue #23752 <https://bugs.python.org/23752>`__: When built from an "
"existing file descriptor, io.FileIO() now only calls fstat() once. Before "
"fstat() was called twice, which was not necessary."

#: ../../../Misc/NEWS:4221
msgid ""
"`Issue #23704 <https://bugs.python.org/23704>`__: collections.deque() "
"objects now support __add__, __mul__, and __imul__()."
msgstr ""
"`Issue #23704 <https://bugs.python.org/23704>`__: collections.deque() "
"objects now support __add__, __mul__, and __imul__()."

#: ../../../Misc/NEWS:4224
msgid ""
"`Issue #23171 <https://bugs.python.org/23171>`__: csv.Writer.writerow() now "
"supports arbitrary iterables."
msgstr ""
"`Issue #23171 <https://bugs.python.org/23171>`__: csv.Writer.writerow() now "
"supports arbitrary iterables."

#: ../../../Misc/NEWS:4226
msgid ""
"`Issue #23745 <https://bugs.python.org/23745>`__: The new email header "
"parser now handles duplicate MIME parameter names without error, similar to "
"how get_param behaves."
msgstr ""
"`Issue #23745 <https://bugs.python.org/23745>`__: The new email header "
"parser now handles duplicate MIME parameter names without error, similar to "
"how get_param behaves."

#: ../../../Misc/NEWS:4229
msgid ""
"`Issue #22117 <https://bugs.python.org/22117>`__: Fix os.utime(), it now "
"rounds the timestamp towards minus infinity (-inf) instead of rounding "
"towards zero."
msgstr ""
"`Issue #22117 <https://bugs.python.org/22117>`__: Fix os.utime(), it now "
"rounds the timestamp towards minus infinity (-inf) instead of rounding "
"towards zero."

#: ../../../Misc/NEWS:4232
msgid ""
"`Issue #23310 <https://bugs.python.org/23310>`__: Fix MagicMock's "
"initializer to work with __methods__, just like configure_mock().  Patch by "
"Kasia Jachim."
msgstr ""
"`Issue #23310 <https://bugs.python.org/23310>`__: Fix MagicMock's "
"initializer to work with __methods__, just like configure_mock().  Patch by "
"Kasia Jachim."

#: ../../../Misc/NEWS:4238
msgid ""
"`Issue #23817 <https://bugs.python.org/23817>`__: FreeBSD now uses \"1.0\" "
"in the SOVERSION as other operating systems, instead of just \"1\"."
msgstr ""
"`Issue #23817 <https://bugs.python.org/23817>`__: FreeBSD now uses \"1.0\" "
"in the SOVERSION as other operating systems, instead of just \"1\"."

#: ../../../Misc/NEWS:4241
msgid ""
"`Issue #23501 <https://bugs.python.org/23501>`__: Argument Clinic now "
"generates code into separate files by default."
msgstr ""
"`Issue #23501 <https://bugs.python.org/23501>`__: Argument Clinic now "
"generates code into separate files by default."

#: ../../../Misc/NEWS:4246
msgid ""
"`Issue #23799 <https://bugs.python.org/23799>`__: Added test.support."
"start_threads() for running and cleaning up multiple threads."
msgstr ""
"`Issue #23799 <https://bugs.python.org/23799>`__: Added test.support."
"start_threads() for running and cleaning up multiple threads."

#: ../../../Misc/NEWS:4249
msgid ""
"`Issue #22390 <https://bugs.python.org/22390>`__: test.regrtest now emits a "
"warning if temporary files or directories are left after running a test."
msgstr ""
"`Issue #22390 <https://bugs.python.org/22390>`__: test.regrtest now emits a "
"warning if temporary files or directories are left after running a test."

#: ../../../Misc/NEWS:4255
msgid ""
"`Issue #18128 <https://bugs.python.org/18128>`__: pygettext now uses "
"standard +NNNN format in the POT-Creation-Date header."
msgstr ""
"`Issue #18128 <https://bugs.python.org/18128>`__: pygettext now uses "
"standard +NNNN format in the POT-Creation-Date header."

#: ../../../Misc/NEWS:4258
msgid ""
"`Issue #23935 <https://bugs.python.org/23935>`__: Argument Clinic's "
"understanding of format units accepting bytes, bytearrays, and buffers is "
"now consistent with both the documentation and the implementation."
msgstr ""
"`Issue #23935 <https://bugs.python.org/23935>`__: Argument Clinic's "
"understanding of format units accepting bytes, bytearrays, and buffers is "
"now consistent with both the documentation and the implementation."

#: ../../../Misc/NEWS:4262
msgid ""
"`Issue #23944 <https://bugs.python.org/23944>`__: Argument Clinic now wraps "
"long impl prototypes at column 78."
msgstr ""
"`Issue #23944 <https://bugs.python.org/23944>`__: Argument Clinic now wraps "
"long impl prototypes at column 78."

#: ../../../Misc/NEWS:4264
msgid ""
"`Issue #20586 <https://bugs.python.org/20586>`__: Argument Clinic now "
"ensures that functions without docstrings have signatures."
msgstr ""
"`Issue #20586 <https://bugs.python.org/20586>`__: Argument Clinic now "
"ensures that functions without docstrings have signatures."

#: ../../../Misc/NEWS:4267
msgid ""
"`Issue #23492 <https://bugs.python.org/23492>`__: Argument Clinic now "
"generates argument parsing code with PyArg_Parse instead of PyArg_ParseTuple "
"if possible."
msgstr ""
"`Issue #23492 <https://bugs.python.org/23492>`__: Argument Clinic now "
"generates argument parsing code with PyArg_Parse instead of PyArg_ParseTuple "
"if possible."

#: ../../../Misc/NEWS:4270
msgid ""
"`Issue #23500 <https://bugs.python.org/23500>`__: Argument Clinic is now "
"smarter about generating the \"#ifndef\" (empty) definition of the methoddef "
"macro: it's only generated once, even if Argument Clinic processes the same "
"symbol multiple times, and it's emitted at the end of all processing rather "
"than immediately after the first use."
msgstr ""
"`Issue #23500 <https://bugs.python.org/23500>`__: Argument Clinic is now "
"smarter about generating the \"#ifndef\" (empty) definition of the methoddef "
"macro: it's only generated once, even if Argument Clinic processes the same "
"symbol multiple times, and it's emitted at the end of all processing rather "
"than immediately after the first use."

#: ../../../Misc/NEWS:4278
msgid ""
"`Issue #23998 <https://bugs.python.org/23998>`__: PyImport_ReInitLock() now "
"checks for lock allocation error"
msgstr ""
"`Issue #23998 <https://bugs.python.org/23998>`__: PyImport_ReInitLock() now "
"checks for lock allocation error"

#: ../../../Misc/NEWS:4282
msgid "Python 3.5.0 alpha 3"
msgstr "Python 3.5.0 alpha 3"

#: ../../../Misc/NEWS:4284
msgid "Release date: 2015-03-28"
msgstr ""

#: ../../../Misc/NEWS:4289
msgid ""
"`Issue #23573 <https://bugs.python.org/23573>`__: Increased performance of "
"string search operations (str.find, str.index, str.count, the in operator, "
"str.split, str.partition) with arguments of different kinds (UCS1, UCS2, "
"UCS4)."
msgstr ""
"`Issue #23573 <https://bugs.python.org/23573>`__: Increased performance of "
"string search operations (str.find, str.index, str.count, the in operator, "
"str.split, str.partition) with arguments of different kinds (UCS1, UCS2, "
"UCS4)."

#: ../../../Misc/NEWS:4293
msgid ""
"`Issue #23753 <https://bugs.python.org/23753>`__: Python doesn't support "
"anymore platforms without stat() or fstat(), these functions are always "
"required."
msgstr ""
"`Issue #23753 <https://bugs.python.org/23753>`__: Python doesn't support "
"anymore platforms without stat() or fstat(), these functions are always "
"required."

#: ../../../Misc/NEWS:4296
msgid ""
"`Issue #23681 <https://bugs.python.org/23681>`__: The -b option now affects "
"comparisons of bytes with int."
msgstr ""
"`Issue #23681 <https://bugs.python.org/23681>`__: The -b option now affects "
"comparisons of bytes with int."

#: ../../../Misc/NEWS:4298
msgid ""
"`Issue #23632 <https://bugs.python.org/23632>`__: Memoryviews now allow "
"tuple indexing (including for multi-dimensional memoryviews)."
msgstr ""
"`Issue #23632 <https://bugs.python.org/23632>`__: Memoryviews now allow "
"tuple indexing (including for multi-dimensional memoryviews)."

#: ../../../Misc/NEWS:4301
msgid ""
"`Issue #23192 <https://bugs.python.org/23192>`__: Fixed generator lambdas.  "
"Patch by Bruno Cauet."
msgstr ""
"`Issue #23192 <https://bugs.python.org/23192>`__: Fixed generator lambdas.  "
"Patch by Bruno Cauet."

#: ../../../Misc/NEWS:4303
msgid ""
"`Issue #23629 <https://bugs.python.org/23629>`__: Fix the default __sizeof__ "
"implementation for variable-sized objects."
msgstr ""
"`Issue #23629 <https://bugs.python.org/23629>`__: Fix the default __sizeof__ "
"implementation for variable-sized objects."

#: ../../../Misc/NEWS:4309
msgid ""
"`Issue #14260 <https://bugs.python.org/14260>`__: The groupindex attribute "
"of regular expression pattern object now is non-modifiable mapping."
msgstr ""
"`Issue #14260 <https://bugs.python.org/14260>`__: The groupindex attribute "
"of regular expression pattern object now is non-modifiable mapping."

#: ../../../Misc/NEWS:4312
msgid ""
"`Issue #23792 <https://bugs.python.org/23792>`__: Ignore KeyboardInterrupt "
"when the pydoc pager is active. This mimics the behavior of the standard "
"unix pagers, and prevents pipepager from shutting down while the pager "
"itself is still running."
msgstr ""
"`Issue #23792 <https://bugs.python.org/23792>`__: Ignore KeyboardInterrupt "
"when the pydoc pager is active. This mimics the behavior of the standard "
"unix pagers, and prevents pipepager from shutting down while the pager "
"itself is still running."

#: ../../../Misc/NEWS:4316
msgid ""
"`Issue #23775 <https://bugs.python.org/23775>`__: pprint() of OrderedDict "
"now outputs the same representation as repr()."
msgstr ""
"`Issue #23775 <https://bugs.python.org/23775>`__: pprint() of OrderedDict "
"now outputs the same representation as repr()."

#: ../../../Misc/NEWS:4319
msgid ""
"`Issue #23765 <https://bugs.python.org/23765>`__: Removed IsBadStringPtr "
"calls in ctypes"
msgstr ""
"`Issue #23765 <https://bugs.python.org/23765>`__: Removed IsBadStringPtr "
"calls in ctypes"

#: ../../../Misc/NEWS:4321
msgid ""
"`Issue #22364 <https://bugs.python.org/22364>`__: Improved some re error "
"messages using regex for hints."
msgstr ""
"`Issue #22364 <https://bugs.python.org/22364>`__: Improved some re error "
"messages using regex for hints."

#: ../../../Misc/NEWS:4323
msgid ""
"`Issue #23742 <https://bugs.python.org/23742>`__: ntpath.expandvars() no "
"longer loses unbalanced single quotes."
msgstr ""
"`Issue #23742 <https://bugs.python.org/23742>`__: ntpath.expandvars() no "
"longer loses unbalanced single quotes."

#: ../../../Misc/NEWS:4325
msgid ""
"`Issue #21717 <https://bugs.python.org/21717>`__: The zipfile.ZipFile.open "
"function now supports 'x' (exclusive creation) mode."
msgstr ""
"`Issue #21717 <https://bugs.python.org/21717>`__: The zipfile.ZipFile.open "
"function now supports 'x' (exclusive creation) mode."

#: ../../../Misc/NEWS:4328
msgid ""
"`Issue #21802 <https://bugs.python.org/21802>`__: The reader in "
"BufferedRWPair now is closed even when closing writer failed in "
"BufferedRWPair.close()."
msgstr ""
"`Issue #21802 <https://bugs.python.org/21802>`__: The reader in "
"BufferedRWPair now is closed even when closing writer failed in "
"BufferedRWPair.close()."

#: ../../../Misc/NEWS:4331
msgid ""
"`Issue #23622 <https://bugs.python.org/23622>`__: Unknown escapes in regular "
"expressions that consist of ``'\\'`` and an ASCII letter now raise a "
"deprecation warning and will be forbidden in Python 3.6."
msgstr ""
"`Issue #23622 <https://bugs.python.org/23622>`__: Unknown escapes in regular "
"expressions that consist of ``'\\'`` and an ASCII letter now raise a "
"deprecation warning and will be forbidden in Python 3.6."

#: ../../../Misc/NEWS:4335
msgid ""
"`Issue #23671 <https://bugs.python.org/23671>`__: string.Template now allows "
"specifying the \"self\" parameter as a keyword argument.  string.Formatter "
"now allows specifying the \"self\" and the \"format_string\" parameters as "
"keyword arguments."
msgstr ""
"`Issue #23671 <https://bugs.python.org/23671>`__: string.Template now allows "
"specifying the \"self\" parameter as a keyword argument.  string.Formatter "
"now allows specifying the \"self\" and the \"format_string\" parameters as "
"keyword arguments."

#: ../../../Misc/NEWS:4339
msgid ""
"`Issue #23502 <https://bugs.python.org/23502>`__: The pprint module now "
"supports mapping proxies."
msgstr ""
"`Issue #23502 <https://bugs.python.org/23502>`__: The pprint module now "
"supports mapping proxies."

#: ../../../Misc/NEWS:4341
msgid ""
"`Issue #17530 <https://bugs.python.org/17530>`__: pprint now wraps long "
"bytes objects and bytearrays."
msgstr ""
"`Issue #17530 <https://bugs.python.org/17530>`__: pprint now wraps long "
"bytes objects and bytearrays."

#: ../../../Misc/NEWS:4343
msgid ""
"`Issue #22687 <https://bugs.python.org/22687>`__: Fixed some corner cases in "
"breaking words in tetxtwrap. Got rid of quadratic complexity in breaking "
"long words."
msgstr ""
"`Issue #22687 <https://bugs.python.org/22687>`__: Fixed some corner cases in "
"breaking words in tetxtwrap. Got rid of quadratic complexity in breaking "
"long words."

#: ../../../Misc/NEWS:4346
msgid ""
"`Issue #4727 <https://bugs.python.org/4727>`__: The copy module now uses "
"pickle protocol 4 (PEP 3154) and supports copying of instances of classes "
"whose __new__ method takes keyword-only arguments."
msgstr ""
"`Issue #4727 <https://bugs.python.org/4727>`__: The copy module now uses "
"pickle protocol 4 (PEP 3154) and supports copying of instances of classes "
"whose __new__ method takes keyword-only arguments."

#: ../../../Misc/NEWS:4350
msgid ""
"`Issue #23491 <https://bugs.python.org/23491>`__: Added a zipapp module to "
"support creating executable zip file archives of Python code. Registered \"."
"pyz\" and \".pyzw\" extensions on Windows for these archives (PEP 441)."
msgstr ""
"`Issue #23491 <https://bugs.python.org/23491>`__: Added a zipapp module to "
"support creating executable zip file archives of Python code. Registered \"."
"pyz\" and \".pyzw\" extensions on Windows for these archives (PEP 441)."

#: ../../../Misc/NEWS:4354
msgid ""
"`Issue #23657 <https://bugs.python.org/23657>`__: Avoid explicit checks for "
"str in zipapp, adding support for pathlib.Path objects as arguments."
msgstr ""
"`Issue #23657 <https://bugs.python.org/23657>`__: Avoid explicit checks for "
"str in zipapp, adding support for pathlib.Path objects as arguments."

#: ../../../Misc/NEWS:4357
msgid ""
"`Issue #23688 <https://bugs.python.org/23688>`__: Added support of arbitrary "
"bytes-like objects and avoided unnecessary copying of memoryview in gzip."
"GzipFile.write(). Original patch by Wolfgang Maier."
msgstr ""
"`Issue #23688 <https://bugs.python.org/23688>`__: Added support of arbitrary "
"bytes-like objects and avoided unnecessary copying of memoryview in gzip."
"GzipFile.write(). Original patch by Wolfgang Maier."

#: ../../../Misc/NEWS:4361
msgid ""
"`Issue #23252 <https://bugs.python.org/23252>`__: Added support for writing "
"ZIP files to unseekable streams."
msgstr ""
"`Issue #23252 <https://bugs.python.org/23252>`__: Added support for writing "
"ZIP files to unseekable streams."

#: ../../../Misc/NEWS:4363
msgid ""
"`Issue #23647 <https://bugs.python.org/23647>`__: Increase impalib's MAXLINE "
"to accommodate modern mailbox sizes."
msgstr ""
"`Issue #23647 <https://bugs.python.org/23647>`__: Increase impalib's MAXLINE "
"to accommodate modern mailbox sizes."

#: ../../../Misc/NEWS:4365
msgid ""
"`Issue #23539 <https://bugs.python.org/23539>`__: If body is None, http."
"client.HTTPConnection.request now sets Content-Length to 0 for PUT, POST, "
"and PATCH headers to avoid 411 errors from some web servers."
msgstr ""
"`Issue #23539 <https://bugs.python.org/23539>`__: If body is None, http."
"client.HTTPConnection.request now sets Content-Length to 0 for PUT, POST, "
"and PATCH headers to avoid 411 errors from some web servers."

#: ../../../Misc/NEWS:4369
msgid ""
"`Issue #22351 <https://bugs.python.org/22351>`__: The nntplib.NNTP "
"constructor no longer leaves the connection and socket open until the "
"garbage collector cleans them up.  Patch by Martin Panter."
msgstr ""
"`Issue #22351 <https://bugs.python.org/22351>`__: The nntplib.NNTP "
"constructor no longer leaves the connection and socket open until the "
"garbage collector cleans them up.  Patch by Martin Panter."

#: ../../../Misc/NEWS:4373
msgid ""
"`Issue #23704 <https://bugs.python.org/23704>`__: collections.deque() "
"objects now support methods for index(), insert(), and copy().  This allows "
"deques to be registered as a MutableSequence and it improves their "
"substitutability for lists."
msgstr ""
"`Issue #23704 <https://bugs.python.org/23704>`__: collections.deque() "
"objects now support methods for index(), insert(), and copy().  This allows "
"deques to be registered as a MutableSequence and it improves their "
"substitutability for lists."

#: ../../../Misc/NEWS:4377
msgid ""
"`Issue #23715 <https://bugs.python.org/23715>`__: :func:`signal.sigwaitinfo` "
"and :func:`signal.sigtimedwait` are now retried when interrupted by a signal "
"not in the *sigset* parameter, if the signal handler does not raise an "
"exception. signal.sigtimedwait() recomputes the timeout with a monotonic "
"clock when it is retried."
msgstr ""
"`Issue #23715 <https://bugs.python.org/23715>`__: :func:`signal.sigwaitinfo` "
"and :func:`signal.sigtimedwait` are now retried when interrupted by a signal "
"not in the *sigset* parameter, if the signal handler does not raise an "
"exception. signal.sigtimedwait() recomputes the timeout with a monotonic "
"clock when it is retried."

#: ../../../Misc/NEWS:4382
msgid ""
"`Issue #23001 <https://bugs.python.org/23001>`__: Few functions in modules "
"mmap, ossaudiodev, socket, ssl, and codecs, that accepted only read-only "
"bytes-like object now accept writable bytes-like object too."
msgstr ""
"`Issue #23001 <https://bugs.python.org/23001>`__: Few functions in modules "
"mmap, ossaudiodev, socket, ssl, and codecs, that accepted only read-only "
"bytes-like object now accept writable bytes-like object too."

#: ../../../Misc/NEWS:4386
msgid ""
"`Issue #23646 <https://bugs.python.org/23646>`__: If time.sleep() is "
"interrupted by a signal, the sleep is now retried with the recomputed delay, "
"except if the signal handler raises an exception (PEP 475)."
msgstr ""
"`Issue #23646 <https://bugs.python.org/23646>`__: If time.sleep() is "
"interrupted by a signal, the sleep is now retried with the recomputed delay, "
"except if the signal handler raises an exception (PEP 475)."

#: ../../../Misc/NEWS:4390
msgid ""
"`Issue #23136 <https://bugs.python.org/23136>`__: _strptime now uniformly "
"handles all days in week 0, including Dec 30 of previous year.  Based on "
"patch by Jim Carroll."
msgstr ""
"`Issue #23136 <https://bugs.python.org/23136>`__: _strptime now uniformly "
"handles all days in week 0, including Dec 30 of previous year.  Based on "
"patch by Jim Carroll."

#: ../../../Misc/NEWS:4393
msgid ""
"`Issue #23700 <https://bugs.python.org/23700>`__: Iterator of "
"NamedTemporaryFile now keeps a reference to NamedTemporaryFile instance.  "
"Patch by Bohuslav Kabrda."
msgstr ""
"`Issue #23700 <https://bugs.python.org/23700>`__: Iterator of "
"NamedTemporaryFile now keeps a reference to NamedTemporaryFile instance.  "
"Patch by Bohuslav Kabrda."

#: ../../../Misc/NEWS:4396
msgid ""
"`Issue #22903 <https://bugs.python.org/22903>`__: The fake test case created "
"by unittest.loader when it fails importing a test module is now picklable."
msgstr ""
"`Issue #22903 <https://bugs.python.org/22903>`__: The fake test case created "
"by unittest.loader when it fails importing a test module is now picklable."

#: ../../../Misc/NEWS:4399
msgid ""
"`Issue #22181 <https://bugs.python.org/22181>`__: On Linux, os.urandom() now "
"uses the new getrandom() syscall if available, syscall introduced in the "
"Linux kernel 3.17. It is more reliable and more secure, because it avoids "
"the need of a file descriptor and waits until the kernel has enough entropy."
msgstr ""
"`Issue #22181 <https://bugs.python.org/22181>`__: On Linux, os.urandom() now "
"uses the new getrandom() syscall if available, syscall introduced in the "
"Linux kernel 3.17. It is more reliable and more secure, because it avoids "
"the need of a file descriptor and waits until the kernel has enough entropy."

#: ../../../Misc/NEWS:4404
msgid ""
"`Issue #2211 <https://bugs.python.org/2211>`__: Updated the implementation "
"of the http.cookies.Morsel class. Setting attributes key, value and "
"coded_value directly now is deprecated. update() and setdefault() now "
"transform and check keys.  Comparing for equality now takes into account "
"attributes key, value and coded_value. copy() now returns a Morsel, not a "
"dict.  repr() now contains all attributes. Optimized checking keys and "
"quoting values.  Added new tests. Original patch by Demian Brecht."
msgstr ""
"`Issue #2211 <https://bugs.python.org/2211>`__: Updated the implementation "
"of the http.cookies.Morsel class. Setting attributes key, value and "
"coded_value directly now is deprecated. update() and setdefault() now "
"transform and check keys.  Comparing for equality now takes into account "
"attributes key, value and coded_value. copy() now returns a Morsel, not a "
"dict.  repr() now contains all attributes. Optimized checking keys and "
"quoting values.  Added new tests. Original patch by Demian Brecht."

#: ../../../Misc/NEWS:4412
msgid ""
"`Issue #18983 <https://bugs.python.org/18983>`__: Allow selection of output "
"units in timeit. Patch by Julian Gindi."
msgstr ""
"`Issue #18983 <https://bugs.python.org/18983>`__: Allow selection of output "
"units in timeit. Patch by Julian Gindi."

#: ../../../Misc/NEWS:4415
msgid ""
"`Issue #23631 <https://bugs.python.org/23631>`__: Fix traceback.format_list "
"when a traceback has been mutated."
msgstr ""
"`Issue #23631 <https://bugs.python.org/23631>`__: Fix traceback.format_list "
"when a traceback has been mutated."

#: ../../../Misc/NEWS:4417
msgid ""
"`Issue #23568 <https://bugs.python.org/23568>`__: Add rdivmod support to "
"MagicMock() objects. Patch by H√•kan L√∂vdahl."
msgstr ""
"`Issue #23568 <https://bugs.python.org/23568>`__: Add rdivmod support to "
"MagicMock() objects. Patch by H√•kan L√∂vdahl."

#: ../../../Misc/NEWS:4420
msgid ""
"`Issue #2052 <https://bugs.python.org/2052>`__: Add charset parameter to "
"HtmlDiff.make_file()."
msgstr ""
"`Issue #2052 <https://bugs.python.org/2052>`__: Add charset parameter to "
"HtmlDiff.make_file()."

#: ../../../Misc/NEWS:4422
msgid ""
"`Issue #23668 <https://bugs.python.org/23668>`__: Support os.truncate and os."
"ftruncate on Windows."
msgstr ""
"`Issue #23668 <https://bugs.python.org/23668>`__: Support os.truncate and os."
"ftruncate on Windows."

#: ../../../Misc/NEWS:4424
msgid ""
"`Issue #23138 <https://bugs.python.org/23138>`__: Fixed parsing cookies with "
"absent keys or values in cookiejar. Patch by Demian Brecht."
msgstr ""
"`Issue #23138 <https://bugs.python.org/23138>`__: Fixed parsing cookies with "
"absent keys or values in cookiejar. Patch by Demian Brecht."

#: ../../../Misc/NEWS:4427
msgid ""
"`Issue #23051 <https://bugs.python.org/23051>`__: multiprocessing.Pool "
"methods imap() and imap_unordered() now handle exceptions raised by an "
"iterator.  Patch by Alon Diamant and Davin Potts."
msgstr ""
"`Issue #23051 <https://bugs.python.org/23051>`__: multiprocessing.Pool "
"methods imap() and imap_unordered() now handle exceptions raised by an "
"iterator.  Patch by Alon Diamant and Davin Potts."

#: ../../../Misc/NEWS:4431
msgid ""
"`Issue #23581 <https://bugs.python.org/23581>`__: Add matmul support to "
"MagicMock. Patch by H√•kan L√∂vdahl."
msgstr ""
"`Issue #23581 <https://bugs.python.org/23581>`__: Add matmul support to "
"MagicMock. Patch by H√•kan L√∂vdahl."

#: ../../../Misc/NEWS:4433
msgid ""
"`Issue #23566 <https://bugs.python.org/23566>`__: enable(), register(), "
"dump_traceback() and dump_traceback_later() functions of faulthandler now "
"accept file descriptors. Patch by Wei Wu."
msgstr ""
"`Issue #23566 <https://bugs.python.org/23566>`__: enable(), register(), "
"dump_traceback() and dump_traceback_later() functions of faulthandler now "
"accept file descriptors. Patch by Wei Wu."

#: ../../../Misc/NEWS:4437
msgid ""
"`Issue #22928 <https://bugs.python.org/22928>`__: Disabled HTTP header "
"injections in http.client. Original patch by Demian Brecht."
msgstr ""
"`Issue #22928 <https://bugs.python.org/22928>`__: Disabled HTTP header "
"injections in http.client. Original patch by Demian Brecht."

#: ../../../Misc/NEWS:4440
msgid ""
"`Issue #23615 <https://bugs.python.org/23615>`__: Modules bz2, tarfile and "
"tokenize now can be reloaded with imp.reload().  Patch by Thomas Kluyver."
msgstr ""
"`Issue #23615 <https://bugs.python.org/23615>`__: Modules bz2, tarfile and "
"tokenize now can be reloaded with imp.reload().  Patch by Thomas Kluyver."

#: ../../../Misc/NEWS:4443
msgid ""
"`Issue #23605 <https://bugs.python.org/23605>`__: os.walk() now calls os."
"scandir() instead of os.listdir(). The usage of os.scandir() reduces the "
"number of calls to os.stat(). Initial patch written by Ben Hoyt."
msgstr ""
"`Issue #23605 <https://bugs.python.org/23605>`__: os.walk() now calls os."
"scandir() instead of os.listdir(). The usage of os.scandir() reduces the "
"number of calls to os.stat(). Initial patch written by Ben Hoyt."

#: ../../../Misc/NEWS:4450
msgid ""
"`Issue #23585 <https://bugs.python.org/23585>`__: make patchcheck will "
"ensure the interpreter is built."
msgstr ""
"`Issue #23585 <https://bugs.python.org/23585>`__: make patchcheck will "
"ensure the interpreter is built."

#: ../../../Misc/NEWS:4455
msgid ""
"`Issue #23583 <https://bugs.python.org/23583>`__: Added tests for standard "
"IO streams in IDLE."
msgstr ""
"`Issue #23583 <https://bugs.python.org/23583>`__: Added tests for standard "
"IO streams in IDLE."

#: ../../../Misc/NEWS:4457
msgid ""
"`Issue #22289 <https://bugs.python.org/22289>`__: Prevent test_urllib2net "
"failures due to ftp connection timeout."
msgstr ""
"`Issue #22289 <https://bugs.python.org/22289>`__: Prevent test_urllib2net "
"failures due to ftp connection timeout."

#: ../../../Misc/NEWS:4462
msgid ""
"`Issue #22826 <https://bugs.python.org/22826>`__: The result of open() in "
"Tools/freeze/bkfile.py is now better compatible with regular files (in "
"particular it now supports the context management protocol)."
msgstr ""
"`Issue #22826 <https://bugs.python.org/22826>`__: The result of open() in "
"Tools/freeze/bkfile.py is now better compatible with regular files (in "
"particular it now supports the context management protocol)."

#: ../../../Misc/NEWS:4468
msgid "Python 3.5 alpha 2"
msgstr ""

#: ../../../Misc/NEWS:4470
msgid "Release date: 2015-03-09"
msgstr ""

#: ../../../Misc/NEWS:4475
msgid ""
"`Issue #23571 <https://bugs.python.org/23571>`__: PyObject_Call() and "
"PyCFunction_Call() now raise a SystemError if a function returns a result "
"and raises an exception. The SystemError is chained to the previous "
"exception."
msgstr ""
"`Issue #23571 <https://bugs.python.org/23571>`__: PyObject_Call() and "
"PyCFunction_Call() now raise a SystemError if a function returns a result "
"and raises an exception. The SystemError is chained to the previous "
"exception."

#: ../../../Misc/NEWS:4482
msgid ""
"`Issue #22524 <https://bugs.python.org/22524>`__: New os.scandir() function, "
"part of the PEP 471: \"os.scandir() function -- a better and faster "
"directory iterator\". Patch written by Ben Hoyt."
msgstr ""
"`Issue #22524 <https://bugs.python.org/22524>`__: New os.scandir() function, "
"part of the PEP 471: \"os.scandir() function -- a better and faster "
"directory iterator\". Patch written by Ben Hoyt."

#: ../../../Misc/NEWS:4486
msgid ""
"`Issue #23103 <https://bugs.python.org/23103>`__: Reduced the memory "
"consumption of IPv4Address and IPv6Address."
msgstr ""
"`Issue #23103 <https://bugs.python.org/23103>`__: Reduced the memory "
"consumption of IPv4Address and IPv6Address."

#: ../../../Misc/NEWS:4488
msgid ""
"`Issue #21793 <https://bugs.python.org/21793>`__: BaseHTTPRequestHandler "
"again logs response code as numeric, not as stringified enum.  Patch by "
"Demian Brecht."
msgstr ""
"`Issue #21793 <https://bugs.python.org/21793>`__: BaseHTTPRequestHandler "
"again logs response code as numeric, not as stringified enum.  Patch by "
"Demian Brecht."

#: ../../../Misc/NEWS:4491
msgid ""
"`Issue #23476 <https://bugs.python.org/23476>`__: In the ssl module, enable "
"OpenSSL's X509_V_FLAG_TRUSTED_FIRST flag on certificate stores when it is "
"available."
msgstr ""
"`Issue #23476 <https://bugs.python.org/23476>`__: In the ssl module, enable "
"OpenSSL's X509_V_FLAG_TRUSTED_FIRST flag on certificate stores when it is "
"available."

#: ../../../Misc/NEWS:4494
msgid ""
"`Issue #23576 <https://bugs.python.org/23576>`__: Avoid stalling in SSL "
"reads when EOF has been reached in the SSL layer but the underlying "
"connection hasn't been closed."
msgstr ""
"`Issue #23576 <https://bugs.python.org/23576>`__: Avoid stalling in SSL "
"reads when EOF has been reached in the SSL layer but the underlying "
"connection hasn't been closed."

#: ../../../Misc/NEWS:4497
msgid ""
"`Issue #23504 <https://bugs.python.org/23504>`__: Added an __all__ to the "
"types module."
msgstr ""
"`Issue #23504 <https://bugs.python.org/23504>`__: Added an __all__ to the "
"types module."

#: ../../../Misc/NEWS:4499
msgid ""
"`Issue #23563 <https://bugs.python.org/23563>`__: Optimized utility "
"functions in urllib.parse."
msgstr ""
"`Issue #23563 <https://bugs.python.org/23563>`__: Optimized utility "
"functions in urllib.parse."

#: ../../../Misc/NEWS:4501
msgid ""
"`Issue #7830 <https://bugs.python.org/7830>`__: Flatten nested functools."
"partial."
msgstr ""
"`Issue #7830 <https://bugs.python.org/7830>`__: Flatten nested functools."
"partial."

#: ../../../Misc/NEWS:4503
msgid ""
"`Issue #20204 <https://bugs.python.org/20204>`__: Added the __module__ "
"attribute to _tkinter classes."
msgstr ""
"`Issue #20204 <https://bugs.python.org/20204>`__: Added the __module__ "
"attribute to _tkinter classes."

#: ../../../Misc/NEWS:4505
msgid ""
"`Issue #19980 <https://bugs.python.org/19980>`__: Improved help() for non-"
"recognized strings.  help('') now shows the help on str.  help('help') now "
"shows the help on help(). Original patch by Mark Lawrence."
msgstr ""
"`Issue #19980 <https://bugs.python.org/19980>`__: Improved help() for non-"
"recognized strings.  help('') now shows the help on str.  help('help') now "
"shows the help on help(). Original patch by Mark Lawrence."

#: ../../../Misc/NEWS:4509
msgid ""
"`Issue #23521 <https://bugs.python.org/23521>`__: Corrected pure python "
"implementation of timedelta division."
msgstr ""
"`Issue #23521 <https://bugs.python.org/23521>`__: Corrected pure python "
"implementation of timedelta division."

#: ../../../Misc/NEWS:4511
msgid "Eliminated OverflowError from timedelta * float for some floats;"
msgstr ""

#: ../../../Misc/NEWS:4512
msgid "Corrected rounding in timedlta true division."
msgstr ""

#: ../../../Misc/NEWS:4514
msgid ""
"`Issue #21619 <https://bugs.python.org/21619>`__: Popen objects no longer "
"leave a zombie after exit in the with statement if the pipe was broken.  "
"Patch by Martin Panter."
msgstr ""
"`Issue #21619 <https://bugs.python.org/21619>`__: Popen objects no longer "
"leave a zombie after exit in the with statement if the pipe was broken.  "
"Patch by Martin Panter."

#: ../../../Misc/NEWS:4517
msgid ""
"`Issue #22936 <https://bugs.python.org/22936>`__: Make it possible to show "
"local variables in tracebacks for both the traceback module and unittest."
msgstr ""
"`Issue #22936 <https://bugs.python.org/22936>`__: Make it possible to show "
"local variables in tracebacks for both the traceback module and unittest."

#: ../../../Misc/NEWS:4520
msgid ""
"`Issue #15955 <https://bugs.python.org/15955>`__: Add an option to limit the "
"output size in bz2.decompress(). Patch by Nikolaus Rath."
msgstr ""
"`Issue #15955 <https://bugs.python.org/15955>`__: Add an option to limit the "
"output size in bz2.decompress(). Patch by Nikolaus Rath."

#: ../../../Misc/NEWS:4523
msgid ""
"`Issue #6639 <https://bugs.python.org/6639>`__: Module-level turtle "
"functions no longer raise TclError after closing the window."
msgstr ""
"`Issue #6639 <https://bugs.python.org/6639>`__: Module-level turtle "
"functions no longer raise TclError after closing the window."

#: ../../../Misc/NEWS:4526
msgid ""
"Issues #814253, #9179: Group references and conditional group references now "
"work in lookbehind assertions in regular expressions."
msgstr ""

#: ../../../Misc/NEWS:4529
msgid ""
"`Issue #23215 <https://bugs.python.org/23215>`__: Multibyte codecs with "
"custom error handlers that ignores errors consumed too much memory and "
"raised SystemError or MemoryError. Original patch by Aleksi Torhamo."
msgstr ""
"`Issue #23215 <https://bugs.python.org/23215>`__: Multibyte codecs with "
"custom error handlers that ignores errors consumed too much memory and "
"raised SystemError or MemoryError. Original patch by Aleksi Torhamo."

#: ../../../Misc/NEWS:4533
msgid ""
"`Issue #5700 <https://bugs.python.org/5700>`__: io.FileIO() called flush() "
"after closing the file. flush() was not called in close() if closefd=False."
msgstr ""
"`Issue #5700 <https://bugs.python.org/5700>`__: io.FileIO() called flush() "
"after closing the file. flush() was not called in close() if closefd=False."

#: ../../../Misc/NEWS:4536
msgid ""
"`Issue #23374 <https://bugs.python.org/23374>`__: Fixed pydoc failure with "
"non-ASCII files when stdout encoding differs from file system encoding (e.g. "
"on Mac OS)."
msgstr ""
"`Issue #23374 <https://bugs.python.org/23374>`__: Fixed pydoc failure with "
"non-ASCII files when stdout encoding differs from file system encoding (e.g. "
"on Mac OS)."

#: ../../../Misc/NEWS:4539
msgid ""
"`Issue #23481 <https://bugs.python.org/23481>`__: Remove RC4 from the SSL "
"module's default cipher list."
msgstr ""
"`Issue #23481 <https://bugs.python.org/23481>`__: Remove RC4 from the SSL "
"module's default cipher list."

#: ../../../Misc/NEWS:4541
msgid ""
"`Issue #21548 <https://bugs.python.org/21548>`__: Fix pydoc.synopsis() and "
"pydoc.apropos() on modules with empty docstrings."
msgstr ""
"`Issue #21548 <https://bugs.python.org/21548>`__: Fix pydoc.synopsis() and "
"pydoc.apropos() on modules with empty docstrings."

#: ../../../Misc/NEWS:4544
msgid ""
"`Issue #22885 <https://bugs.python.org/22885>`__: Fixed arbitrary code "
"execution vulnerability in the dbm.dumb module.  Original patch by Claudiu "
"Popa."
msgstr ""
"`Issue #22885 <https://bugs.python.org/22885>`__: Fixed arbitrary code "
"execution vulnerability in the dbm.dumb module.  Original patch by Claudiu "
"Popa."

#: ../../../Misc/NEWS:4547
msgid ""
"`Issue #23239 <https://bugs.python.org/23239>`__: ssl.match_hostname() now "
"supports matching of IP addresses."
msgstr ""
"`Issue #23239 <https://bugs.python.org/23239>`__: ssl.match_hostname() now "
"supports matching of IP addresses."

#: ../../../Misc/NEWS:4549
msgid ""
"`Issue #23146 <https://bugs.python.org/23146>`__: Fix mishandling of "
"absolute Windows paths with forward slashes in pathlib."
msgstr ""
"`Issue #23146 <https://bugs.python.org/23146>`__: Fix mishandling of "
"absolute Windows paths with forward slashes in pathlib."

#: ../../../Misc/NEWS:4552
msgid ""
"`Issue #23096 <https://bugs.python.org/23096>`__: Pickle representation of "
"floats with protocol 0 now is the same for both Python and C implementations."
msgstr ""
"`Issue #23096 <https://bugs.python.org/23096>`__: Pickle representation of "
"floats with protocol 0 now is the same for both Python and C implementations."

#: ../../../Misc/NEWS:4555
msgid ""
"`Issue #19105 <https://bugs.python.org/19105>`__: pprint now more "
"efficiently uses free space at the right."
msgstr ""
"`Issue #19105 <https://bugs.python.org/19105>`__: pprint now more "
"efficiently uses free space at the right."

#: ../../../Misc/NEWS:4557
msgid ""
"`Issue #14910 <https://bugs.python.org/14910>`__: Add allow_abbrev parameter "
"to argparse.ArgumentParser. Patch by Jonathan Paugh, Steven Bethard, paul j3 "
"and Daniel Eriksson."
msgstr ""
"`Issue #14910 <https://bugs.python.org/14910>`__: Add allow_abbrev parameter "
"to argparse.ArgumentParser. Patch by Jonathan Paugh, Steven Bethard, paul j3 "
"and Daniel Eriksson."

#: ../../../Misc/NEWS:4560
msgid ""
"`Issue #21717 <https://bugs.python.org/21717>`__: tarfile.open() now "
"supports 'x' (exclusive creation) mode."
msgstr ""
"`Issue #21717 <https://bugs.python.org/21717>`__: tarfile.open() now "
"supports 'x' (exclusive creation) mode."

#: ../../../Misc/NEWS:4562
msgid ""
"`Issue #23344 <https://bugs.python.org/23344>`__: marshal.dumps() is now "
"20-25% faster on average."
msgstr ""
"`Issue #23344 <https://bugs.python.org/23344>`__: marshal.dumps() is now "
"20-25% faster on average."

#: ../../../Misc/NEWS:4564
msgid ""
"`Issue #20416 <https://bugs.python.org/20416>`__: marshal.dumps() with "
"protocols 3 and 4 is now 40-50% faster on average."
msgstr ""
"`Issue #20416 <https://bugs.python.org/20416>`__: marshal.dumps() with "
"protocols 3 and 4 is now 40-50% faster on average."

#: ../../../Misc/NEWS:4567
msgid ""
"`Issue #23421 <https://bugs.python.org/23421>`__: Fixed compression in "
"tarfile CLI.  Patch by wdv4758h."
msgstr ""
"`Issue #23421 <https://bugs.python.org/23421>`__: Fixed compression in "
"tarfile CLI.  Patch by wdv4758h."

#: ../../../Misc/NEWS:4569
msgid ""
"`Issue #23367 <https://bugs.python.org/23367>`__: Fix possible overflows in "
"the unicodedata module."
msgstr ""
"`Issue #23367 <https://bugs.python.org/23367>`__: Fix possible overflows in "
"the unicodedata module."

#: ../../../Misc/NEWS:4571
msgid ""
"`Issue #23361 <https://bugs.python.org/23361>`__: Fix possible overflow in "
"Windows subprocess creation code."
msgstr ""
"`Issue #23361 <https://bugs.python.org/23361>`__: Fix possible overflow in "
"Windows subprocess creation code."

#: ../../../Misc/NEWS:4573
msgid ""
"logging.handlers.QueueListener now takes a respect_handler_level keyword "
"argument which, if set to True, will pass messages to handlers taking "
"handler levels into account."
msgstr ""

#: ../../../Misc/NEWS:4577
msgid ""
"`Issue #19705 <https://bugs.python.org/19705>`__: turtledemo now has a "
"visual sorting algorithm demo.  Original patch from Jason Yeo."
msgstr ""
"`Issue #19705 <https://bugs.python.org/19705>`__: turtledemo now has a "
"visual sorting algorithm demo.  Original patch from Jason Yeo."

#: ../../../Misc/NEWS:4580
msgid ""
"`Issue #23801 <https://bugs.python.org/23801>`__: Fix issue where cgi."
"FieldStorage did not always ignore the entire preamble to a multipart body."
msgstr ""
"`Issue #23801 <https://bugs.python.org/23801>`__: Fix issue where cgi."
"FieldStorage did not always ignore the entire preamble to a multipart body."

#: ../../../Misc/NEWS:4586
msgid ""
"`Issue #23445 <https://bugs.python.org/23445>`__: pydebug builds now use "
"\"gcc -Og\" where possible, to make the resulting executable faster."
msgstr ""
"`Issue #23445 <https://bugs.python.org/23445>`__: pydebug builds now use "
"\"gcc -Og\" where possible, to make the resulting executable faster."

#: ../../../Misc/NEWS:4589
msgid ""
"`Issue #23686 <https://bugs.python.org/23686>`__: Update OS X 10.5 installer "
"build to use OpenSSL 1.0.2a."
msgstr ""
"`Issue #23686 <https://bugs.python.org/23686>`__: Update OS X 10.5 installer "
"build to use OpenSSL 1.0.2a."

#: ../../../Misc/NEWS:4594
msgid ""
"`Issue #20204 <https://bugs.python.org/20204>`__: Deprecation warning is now "
"raised for builtin types without the __module__ attribute."
msgstr ""
"`Issue #20204 <https://bugs.python.org/20204>`__: Deprecation warning is now "
"raised for builtin types without the __module__ attribute."

#: ../../../Misc/NEWS:4600
msgid ""
"`Issue #23465 <https://bugs.python.org/23465>`__: Implement PEP 486 - Make "
"the Python Launcher aware of virtual environments. Patch by Paul Moore."
msgstr ""
"`Issue #23465 <https://bugs.python.org/23465>`__: Implement PEP 486 - Make "
"the Python Launcher aware of virtual environments. Patch by Paul Moore."

#: ../../../Misc/NEWS:4603
msgid ""
"`Issue #23437 <https://bugs.python.org/23437>`__: Make user scripts "
"directory versioned on Windows. Patch by Paul Moore."
msgstr ""
"`Issue #23437 <https://bugs.python.org/23437>`__: Make user scripts "
"directory versioned on Windows. Patch by Paul Moore."

#: ../../../Misc/NEWS:4608
msgid "Python 3.5 alpha 1"
msgstr ""

#: ../../../Misc/NEWS:4610
msgid "Release date: 2015-02-08"
msgstr ""

#: ../../../Misc/NEWS:4615
msgid ""
"`Issue #23285 <https://bugs.python.org/23285>`__: PEP 475 - EINTR handling."
msgstr ""
"`Issue #23285 <https://bugs.python.org/23285>`__: PEP 475 - EINTR handling."

#: ../../../Misc/NEWS:4617
msgid ""
"`Issue #22735 <https://bugs.python.org/22735>`__: Fix many edge cases "
"(including crashes) involving custom mro() implementations."
msgstr ""
"`Issue #22735 <https://bugs.python.org/22735>`__: Fix many edge cases "
"(including crashes) involving custom mro() implementations."

#: ../../../Misc/NEWS:4620
msgid ""
"`Issue #22896 <https://bugs.python.org/22896>`__: Avoid using "
"PyObject_AsCharBuffer(), PyObject_AsReadBuffer() and "
"PyObject_AsWriteBuffer()."
msgstr ""
"`Issue #22896 <https://bugs.python.org/22896>`__: Avoid using "
"PyObject_AsCharBuffer(), PyObject_AsReadBuffer() and "
"PyObject_AsWriteBuffer()."

#: ../../../Misc/NEWS:4623
msgid ""
"`Issue #21295 <https://bugs.python.org/21295>`__: Revert some changes "
"(`issue #16795 <https://bugs.python.org/16795>`__) to AST line numbers and "
"column offsets that constituted a regression."
msgstr ""
"`Issue #21295 <https://bugs.python.org/21295>`__: Revert some changes "
"(`issue #16795 <https://bugs.python.org/16795>`__) to AST line numbers and "
"column offsets that constituted a regression."

#: ../../../Misc/NEWS:4626
msgid ""
"`Issue #22986 <https://bugs.python.org/22986>`__: Allow changing an object's "
"__class__ between a dynamic type and static type in some cases."
msgstr ""
"`Issue #22986 <https://bugs.python.org/22986>`__: Allow changing an object's "
"__class__ between a dynamic type and static type in some cases."

#: ../../../Misc/NEWS:4629
msgid ""
"`Issue #15859 <https://bugs.python.org/15859>`__: "
"PyUnicode_EncodeFSDefault(), PyUnicode_EncodeMBCS() and "
"PyUnicode_EncodeCodePage() now raise an exception if the object is not a "
"Unicode object. For PyUnicode_EncodeFSDefault(), it was already the case on "
"platforms other than Windows. Patch written by Campbell Barton."
msgstr ""
"`Issue #15859 <https://bugs.python.org/15859>`__: "
"PyUnicode_EncodeFSDefault(), PyUnicode_EncodeMBCS() and "
"PyUnicode_EncodeCodePage() now raise an exception if the object is not a "
"Unicode object. For PyUnicode_EncodeFSDefault(), it was already the case on "
"platforms other than Windows. Patch written by Campbell Barton."

#: ../../../Misc/NEWS:4634
msgid ""
"`Issue #21408 <https://bugs.python.org/21408>`__: The default __ne__() now "
"returns NotImplemented if __eq__() returned NotImplemented.  Original patch "
"by Martin Panter."
msgstr ""
"`Issue #21408 <https://bugs.python.org/21408>`__: The default __ne__() now "
"returns NotImplemented if __eq__() returned NotImplemented.  Original patch "
"by Martin Panter."

#: ../../../Misc/NEWS:4637
msgid ""
"`Issue #23321 <https://bugs.python.org/23321>`__: Fixed a crash in str."
"decode() when error handler returned replacment string longer than "
"mailformed input data."
msgstr ""
"`Issue #23321 <https://bugs.python.org/23321>`__: Fixed a crash in str."
"decode() when error handler returned replacment string longer than "
"mailformed input data."

#: ../../../Misc/NEWS:4640
msgid ""
"`Issue #22286 <https://bugs.python.org/22286>`__: The \"backslashreplace\" "
"error handlers now works with decoding and translating."
msgstr ""
"`Issue #22286 <https://bugs.python.org/22286>`__: The \"backslashreplace\" "
"error handlers now works with decoding and translating."

#: ../../../Misc/NEWS:4643
msgid ""
"`Issue #23253 <https://bugs.python.org/23253>`__: Delay-load "
"ShellExecute[AW] in os.startfile for reduced startup overhead on Windows."
msgstr ""
"`Issue #23253 <https://bugs.python.org/23253>`__: Delay-load "
"ShellExecute[AW] in os.startfile for reduced startup overhead on Windows."

#: ../../../Misc/NEWS:4646
msgid ""
"`Issue #22038 <https://bugs.python.org/22038>`__: pyatomic.h now uses "
"stdatomic.h or GCC built-in functions for atomic memory access if available. "
"Patch written by Vitor de Lima and Gustavo Temple."
msgstr ""
"`Issue #22038 <https://bugs.python.org/22038>`__: pyatomic.h now uses "
"stdatomic.h or GCC built-in functions for atomic memory access if available. "
"Patch written by Vitor de Lima and Gustavo Temple."

#: ../../../Misc/NEWS:4650
msgid ""
"`Issue #20284 <https://bugs.python.org/20284>`__: %-interpolation (aka "
"printf) formatting added for bytes and bytearray."
msgstr ""
"`Issue #20284 <https://bugs.python.org/20284>`__: %-interpolation (aka "
"printf) formatting added for bytes and bytearray."

#: ../../../Misc/NEWS:4653
msgid ""
"`Issue #23048 <https://bugs.python.org/23048>`__: Fix jumping out of an "
"infinite while loop in the pdb."
msgstr ""
"`Issue #23048 <https://bugs.python.org/23048>`__: Fix jumping out of an "
"infinite while loop in the pdb."

#: ../../../Misc/NEWS:4655
msgid ""
"`Issue #20335 <https://bugs.python.org/20335>`__: bytes constructor now "
"raises TypeError when encoding or errors is specified with non-string "
"argument.  Based on patch by Renaud Blanch."
msgstr ""
"`Issue #20335 <https://bugs.python.org/20335>`__: bytes constructor now "
"raises TypeError when encoding or errors is specified with non-string "
"argument.  Based on patch by Renaud Blanch."

#: ../../../Misc/NEWS:4658
msgid ""
"`Issue #22834 <https://bugs.python.org/22834>`__: If the current working "
"directory ends up being set to a non-existent directory then import will no "
"longer raise FileNotFoundError."
msgstr ""
"`Issue #22834 <https://bugs.python.org/22834>`__: If the current working "
"directory ends up being set to a non-existent directory then import will no "
"longer raise FileNotFoundError."

#: ../../../Misc/NEWS:4661
msgid ""
"`Issue #22869 <https://bugs.python.org/22869>`__: Move the interpreter "
"startup & shutdown code to a new dedicated pylifecycle.c module"
msgstr ""
"`Issue #22869 <https://bugs.python.org/22869>`__: Move the interpreter "
"startup & shutdown code to a new dedicated pylifecycle.c module"

#: ../../../Misc/NEWS:4664
msgid ""
"`Issue #22847 <https://bugs.python.org/22847>`__: Improve method cache "
"efficiency."
msgstr ""
"`Issue #22847 <https://bugs.python.org/22847>`__: Improve method cache "
"efficiency."

#: ../../../Misc/NEWS:4666
msgid ""
"`Issue #22335 <https://bugs.python.org/22335>`__: Fix crash when trying to "
"enlarge a bytearray to 0x7fffffff bytes on a 32-bit platform."
msgstr ""
"`Issue #22335 <https://bugs.python.org/22335>`__: Fix crash when trying to "
"enlarge a bytearray to 0x7fffffff bytes on a 32-bit platform."

#: ../../../Misc/NEWS:4669
msgid ""
"`Issue #22653 <https://bugs.python.org/22653>`__: Fix an assertion failure "
"in debug mode when doing a reentrant dict insertion in debug mode."
msgstr ""
"`Issue #22653 <https://bugs.python.org/22653>`__: Fix an assertion failure "
"in debug mode when doing a reentrant dict insertion in debug mode."

#: ../../../Misc/NEWS:4672
msgid ""
"`Issue #22643 <https://bugs.python.org/22643>`__: Fix integer overflow in "
"Unicode case operations (upper, lower, title, swapcase, casefold)."
msgstr ""
"`Issue #22643 <https://bugs.python.org/22643>`__: Fix integer overflow in "
"Unicode case operations (upper, lower, title, swapcase, casefold)."

#: ../../../Misc/NEWS:4675
msgid ""
"`Issue #17636 <https://bugs.python.org/17636>`__: Circular imports involving "
"relative imports are now supported."
msgstr ""
"`Issue #17636 <https://bugs.python.org/17636>`__: Circular imports involving "
"relative imports are now supported."

#: ../../../Misc/NEWS:4678
msgid ""
"`Issue #22604 <https://bugs.python.org/22604>`__: Fix assertion error in "
"debug mode when dividing a complex number by (nan+0j)."
msgstr ""
"`Issue #22604 <https://bugs.python.org/22604>`__: Fix assertion error in "
"debug mode when dividing a complex number by (nan+0j)."

#: ../../../Misc/NEWS:4681
msgid ""
"`Issue #21052 <https://bugs.python.org/21052>`__: Do not raise ImportWarning "
"when sys.path_hooks or sys.meta_path are set to None."
msgstr ""
"`Issue #21052 <https://bugs.python.org/21052>`__: Do not raise ImportWarning "
"when sys.path_hooks or sys.meta_path are set to None."

#: ../../../Misc/NEWS:4684
msgid ""
"`Issue #16518 <https://bugs.python.org/16518>`__: Use 'bytes-like object "
"required' in error messages that previously used the far more cryptic \"'x' "
"does not support the buffer protocol."
msgstr ""
"`Issue #16518 <https://bugs.python.org/16518>`__: Use 'bytes-like object "
"required' in error messages that previously used the far more cryptic \"'x' "
"does not support the buffer protocol."

#: ../../../Misc/NEWS:4688
msgid ""
"`Issue #22470 <https://bugs.python.org/22470>`__: Fixed integer overflow "
"issues in \"backslashreplace\", \"xmlcharrefreplace\", and \"surrogatepass\" "
"error handlers."
msgstr ""
"`Issue #22470 <https://bugs.python.org/22470>`__: Fixed integer overflow "
"issues in \"backslashreplace\", \"xmlcharrefreplace\", and \"surrogatepass\" "
"error handlers."

#: ../../../Misc/NEWS:4691
msgid ""
"`Issue #22540 <https://bugs.python.org/22540>`__: speed up "
"`PyObject_IsInstance` and `PyObject_IsSubclass` in the common case that the "
"second argument has metaclass `type`."
msgstr ""
"`Issue #22540 <https://bugs.python.org/22540>`__: speed up "
"`PyObject_IsInstance` and `PyObject_IsSubclass` in the common case that the "
"second argument has metaclass `type`."

#: ../../../Misc/NEWS:4694
msgid ""
"`Issue #18711 <https://bugs.python.org/18711>`__: Add a new `PyErr_FormatV` "
"function, similar to `PyErr_Format` but accepting a `va_list` argument."
msgstr ""
"`Issue #18711 <https://bugs.python.org/18711>`__: Add a new `PyErr_FormatV` "
"function, similar to `PyErr_Format` but accepting a `va_list` argument."

#: ../../../Misc/NEWS:4697
msgid ""
"`Issue #22520 <https://bugs.python.org/22520>`__: Fix overflow checking when "
"generating the repr of a unicode object."
msgstr ""
"`Issue #22520 <https://bugs.python.org/22520>`__: Fix overflow checking when "
"generating the repr of a unicode object."

#: ../../../Misc/NEWS:4700
msgid ""
"`Issue #22519 <https://bugs.python.org/22519>`__: Fix overflow checking in "
"PyBytes_Repr."
msgstr ""
"`Issue #22519 <https://bugs.python.org/22519>`__: Fix overflow checking in "
"PyBytes_Repr."

#: ../../../Misc/NEWS:4702
msgid ""
"`Issue #22518 <https://bugs.python.org/22518>`__: Fix integer overflow "
"issues in latin-1 encoding."
msgstr ""
"`Issue #22518 <https://bugs.python.org/22518>`__: Fix integer overflow "
"issues in latin-1 encoding."

#: ../../../Misc/NEWS:4704
msgid ""
"`Issue #16324 <https://bugs.python.org/16324>`__: _charset parameter of "
"MIMEText now also accepts email.charset.Charset instances. Initial patch by "
"Claude Paroz."
msgstr ""
"`Issue #16324 <https://bugs.python.org/16324>`__: _charset parameter of "
"MIMEText now also accepts email.charset.Charset instances. Initial patch by "
"Claude Paroz."

#: ../../../Misc/NEWS:4707
msgid ""
"`Issue #1764286 <https://bugs.python.org/1764286>`__: Fix inspect."
"getsource() to support decorated functions. Patch by Claudiu Popa."
msgstr ""
"`Issue #1764286 <https://bugs.python.org/1764286>`__: Fix inspect."
"getsource() to support decorated functions. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:4710
msgid ""
"`Issue #18554 <https://bugs.python.org/18554>`__: os.__all__ includes posix "
"functions."
msgstr ""
"`Issue #18554 <https://bugs.python.org/18554>`__: os.__all__ includes posix "
"functions."

#: ../../../Misc/NEWS:4712
msgid ""
"`Issue #21391 <https://bugs.python.org/21391>`__: Use os.path.abspath in the "
"shutil module."
msgstr ""
"`Issue #21391 <https://bugs.python.org/21391>`__: Use os.path.abspath in the "
"shutil module."

#: ../../../Misc/NEWS:4714
msgid ""
"`Issue #11471 <https://bugs.python.org/11471>`__: avoid generating a "
"JUMP_FORWARD instruction at the end of an if-block if there is no else-"
"clause.  Original patch by Eugene Toder."
msgstr ""
"`Issue #11471 <https://bugs.python.org/11471>`__: avoid generating a "
"JUMP_FORWARD instruction at the end of an if-block if there is no else-"
"clause.  Original patch by Eugene Toder."

#: ../../../Misc/NEWS:4717
msgid ""
"`Issue #22215 <https://bugs.python.org/22215>`__: Now ValueError is raised "
"instead of TypeError when str or bytes argument contains not permitted null "
"character or byte."
msgstr ""
"`Issue #22215 <https://bugs.python.org/22215>`__: Now ValueError is raised "
"instead of TypeError when str or bytes argument contains not permitted null "
"character or byte."

#: ../../../Misc/NEWS:4720
msgid ""
"`Issue #22258 <https://bugs.python.org/22258>`__: Fix the internal function "
"set_inheritable() on Illumos. This platform exposes the function "
"``ioctl(FIOCLEX)``, but calling it fails with errno is ENOTTY: "
"\"Inappropriate ioctl for device\". set_inheritable() now falls back to the "
"slower ``fcntl()`` (``F_GETFD`` and then ``F_SETFD``)."
msgstr ""
"`Issue #22258 <https://bugs.python.org/22258>`__: Fix the internal function "
"set_inheritable() on Illumos. This platform exposes the function "
"``ioctl(FIOCLEX)``, but calling it fails with errno is ENOTTY: "
"\"Inappropriate ioctl for device\". set_inheritable() now falls back to the "
"slower ``fcntl()`` (``F_GETFD`` and then ``F_SETFD``)."

#: ../../../Misc/NEWS:4725
msgid ""
"`Issue #21389 <https://bugs.python.org/21389>`__: Displaying the "
"__qualname__ of the underlying function in the repr of a bound method."
msgstr ""
"`Issue #21389 <https://bugs.python.org/21389>`__: Displaying the "
"__qualname__ of the underlying function in the repr of a bound method."

#: ../../../Misc/NEWS:4728
msgid ""
"`Issue #22206 <https://bugs.python.org/22206>`__: Using pthread, "
"PyThread_create_key() now sets errno to ENOMEM and returns -1 (error) on "
"integer overflow."
msgstr ""
"`Issue #22206 <https://bugs.python.org/22206>`__: Using pthread, "
"PyThread_create_key() now sets errno to ENOMEM and returns -1 (error) on "
"integer overflow."

#: ../../../Misc/NEWS:4731
msgid ""
"`Issue #20184 <https://bugs.python.org/20184>`__: Argument Clinic based "
"signature introspection added for 30 of the builtin functions."
msgstr ""
"`Issue #20184 <https://bugs.python.org/20184>`__: Argument Clinic based "
"signature introspection added for 30 of the builtin functions."

#: ../../../Misc/NEWS:4734
msgid ""
"`Issue #22116 <https://bugs.python.org/22116>`__: C functions and methods "
"(of the 'builtin_function_or_method' type) can now be weakref'ed.  Patch by "
"Wei Wu."
msgstr ""
"`Issue #22116 <https://bugs.python.org/22116>`__: C functions and methods "
"(of the 'builtin_function_or_method' type) can now be weakref'ed.  Patch by "
"Wei Wu."

#: ../../../Misc/NEWS:4737
msgid ""
"`Issue #22077 <https://bugs.python.org/22077>`__: Improve index error "
"messages for bytearrays, bytes, lists, and tuples by adding 'or slices'. "
"Added ', not <typename>' for bytearrays. Original patch by Claudiu Popa."
msgstr ""
"`Issue #22077 <https://bugs.python.org/22077>`__: Improve index error "
"messages for bytearrays, bytes, lists, and tuples by adding 'or slices'. "
"Added ', not <typename>' for bytearrays. Original patch by Claudiu Popa."

#: ../../../Misc/NEWS:4741
msgid ""
"`Issue #20179 <https://bugs.python.org/20179>`__: Apply Argument Clinic to "
"bytes and bytearray. Patch by Tal Einat."
msgstr ""
"`Issue #20179 <https://bugs.python.org/20179>`__: Apply Argument Clinic to "
"bytes and bytearray. Patch by Tal Einat."

#: ../../../Misc/NEWS:4744
msgid ""
"`Issue #22082 <https://bugs.python.org/22082>`__: Clear interned strings in "
"slotdefs."
msgstr ""
"`Issue #22082 <https://bugs.python.org/22082>`__: Clear interned strings in "
"slotdefs."

#: ../../../Misc/NEWS:4746
msgid "Upgrade Unicode database to Unicode 7.0.0."
msgstr ""

#: ../../../Misc/NEWS:4748
msgid ""
"`Issue #21897 <https://bugs.python.org/21897>`__: Fix a crash with the "
"f_locals attribute with closure variables when frame.clear() has been called."
msgstr ""
"`Issue #21897 <https://bugs.python.org/21897>`__: Fix a crash with the "
"f_locals attribute with closure variables when frame.clear() has been called."

#: ../../../Misc/NEWS:4751
msgid ""
"`Issue #21205 <https://bugs.python.org/21205>`__: Add a new ``__qualname__`` "
"attribute to generator, the qualified name, and use it in the representation "
"of a generator (``repr(gen)``). The default name of the generator "
"(``__name__`` attribute) is now get from the function instead of the code. "
"Use ``gen.gi_code.co_name`` to get the name of the code."
msgstr ""
"`Issue #21205 <https://bugs.python.org/21205>`__: Add a new ``__qualname__`` "
"attribute to generator, the qualified name, and use it in the representation "
"of a generator (``repr(gen)``). The default name of the generator "
"(``__name__`` attribute) is now get from the function instead of the code. "
"Use ``gen.gi_code.co_name`` to get the name of the code."

#: ../../../Misc/NEWS:4757
msgid ""
"`Issue #21669 <https://bugs.python.org/21669>`__: With the aid of heuristics "
"in SyntaxError.__init__, the parser now attempts to generate more meaningful "
"(or at least more search engine friendly) error messages when \"exec\" and "
"\"print\" are used as statements."
msgstr ""
"`Issue #21669 <https://bugs.python.org/21669>`__: With the aid of heuristics "
"in SyntaxError.__init__, the parser now attempts to generate more meaningful "
"(or at least more search engine friendly) error messages when \"exec\" and "
"\"print\" are used as statements."

#: ../../../Misc/NEWS:4762
msgid ""
"`Issue #21642 <https://bugs.python.org/21642>`__: In the conditional if-else "
"expression, allow an integer written with no space between itself and the "
"``else`` keyword (e.g. ``True if 42else False``) to be valid syntax."
msgstr ""
"`Issue #21642 <https://bugs.python.org/21642>`__: In the conditional if-else "
"expression, allow an integer written with no space between itself and the "
"``else`` keyword (e.g. ``True if 42else False``) to be valid syntax."

#: ../../../Misc/NEWS:4766
msgid ""
"`Issue #21523 <https://bugs.python.org/21523>`__: Fix over-pessimistic "
"computation of the stack effect of some opcodes in the compiler.  This also "
"fixes a quadratic compilation time issue noticeable when compiling code with "
"a large number of \"and\" and \"or\" operators."
msgstr ""
"`Issue #21523 <https://bugs.python.org/21523>`__: Fix over-pessimistic "
"computation of the stack effect of some opcodes in the compiler.  This also "
"fixes a quadratic compilation time issue noticeable when compiling code with "
"a large number of \"and\" and \"or\" operators."

#: ../../../Misc/NEWS:4771
msgid ""
"`Issue #21418 <https://bugs.python.org/21418>`__: Fix a crash in the builtin "
"function super() when called without argument and without current frame (ex: "
"embedded Python)."
msgstr ""
"`Issue #21418 <https://bugs.python.org/21418>`__: Fix a crash in the builtin "
"function super() when called without argument and without current frame (ex: "
"embedded Python)."

#: ../../../Misc/NEWS:4774
msgid ""
"`Issue #21425 <https://bugs.python.org/21425>`__: Fix flushing of standard "
"streams in the interactive interpreter."
msgstr ""
"`Issue #21425 <https://bugs.python.org/21425>`__: Fix flushing of standard "
"streams in the interactive interpreter."

#: ../../../Misc/NEWS:4777
msgid ""
"`Issue #21435 <https://bugs.python.org/21435>`__: In rare cases, when "
"running finalizers on objects in cyclic trash a bad pointer dereference "
"could occur due to a subtle flaw in internal iteration logic."
msgstr ""
"`Issue #21435 <https://bugs.python.org/21435>`__: In rare cases, when "
"running finalizers on objects in cyclic trash a bad pointer dereference "
"could occur due to a subtle flaw in internal iteration logic."

#: ../../../Misc/NEWS:4781
msgid ""
"`Issue #21377 <https://bugs.python.org/21377>`__: PyBytes_Concat() now tries "
"to concatenate in-place when the first argument has a reference count of 1.  "
"Patch by Nikolaus Rath."
msgstr ""
"`Issue #21377 <https://bugs.python.org/21377>`__: PyBytes_Concat() now tries "
"to concatenate in-place when the first argument has a reference count of 1.  "
"Patch by Nikolaus Rath."

#: ../../../Misc/NEWS:4784
msgid ""
"`Issue #20355 <https://bugs.python.org/20355>`__: -W command line options "
"now have higher priority than the PYTHONWARNINGS environment variable.  "
"Patch by Arfrever."
msgstr ""
"`Issue #20355 <https://bugs.python.org/20355>`__: -W command line options "
"now have higher priority than the PYTHONWARNINGS environment variable.  "
"Patch by Arfrever."

#: ../../../Misc/NEWS:4787
msgid ""
"`Issue #21274 <https://bugs.python.org/21274>`__: Define PATH_MAX for GNU/"
"Hurd in Python/pythonrun.c."
msgstr ""
"`Issue #21274 <https://bugs.python.org/21274>`__: Define PATH_MAX for GNU/"
"Hurd in Python/pythonrun.c."

#: ../../../Misc/NEWS:4789
msgid ""
"`Issue #20904 <https://bugs.python.org/20904>`__: Support setting FPU "
"precision on m68k."
msgstr ""
"`Issue #20904 <https://bugs.python.org/20904>`__: Support setting FPU "
"precision on m68k."

#: ../../../Misc/NEWS:4791
msgid ""
"`Issue #21209 <https://bugs.python.org/21209>`__: Fix sending tuples to "
"custom generator objects with the yield from syntax."
msgstr ""
"`Issue #21209 <https://bugs.python.org/21209>`__: Fix sending tuples to "
"custom generator objects with the yield from syntax."

#: ../../../Misc/NEWS:4794
msgid ""
"`Issue #21193 <https://bugs.python.org/21193>`__: pow(a, b, c) now raises "
"ValueError rather than TypeError when b is negative.  Patch by Josh "
"Rosenberg."
msgstr ""
"`Issue #21193 <https://bugs.python.org/21193>`__: pow(a, b, c) now raises "
"ValueError rather than TypeError when b is negative.  Patch by Josh "
"Rosenberg."

#: ../../../Misc/NEWS:4797
msgid ""
"PEP 465 and `Issue #21176 <https://bugs.python.org/21176>`__: Add the '@' "
"operator for matrix multiplication."
msgstr ""

#: ../../../Misc/NEWS:4799
msgid ""
"`Issue #21134 <https://bugs.python.org/21134>`__: Fix segfault when str is "
"called on an uninitialized UnicodeEncodeError, UnicodeDecodeError, or "
"UnicodeTranslateError object."
msgstr ""
"`Issue #21134 <https://bugs.python.org/21134>`__: Fix segfault when str is "
"called on an uninitialized UnicodeEncodeError, UnicodeDecodeError, or "
"UnicodeTranslateError object."

#: ../../../Misc/NEWS:4802
msgid ""
"`Issue #19537 <https://bugs.python.org/19537>`__: Fix PyUnicode_DATA() "
"alignment under m68k.  Patch by Andreas Schwab."
msgstr ""
"`Issue #19537 <https://bugs.python.org/19537>`__: Fix PyUnicode_DATA() "
"alignment under m68k.  Patch by Andreas Schwab."

#: ../../../Misc/NEWS:4805
msgid ""
"`Issue #20929 <https://bugs.python.org/20929>`__: Add a type cast to avoid "
"shifting a negative number."
msgstr ""
"`Issue #20929 <https://bugs.python.org/20929>`__: Add a type cast to avoid "
"shifting a negative number."

#: ../../../Misc/NEWS:4807
msgid ""
"`Issue #20731 <https://bugs.python.org/20731>`__: Properly position in "
"source code files even if they are opened in text mode. Patch by Serhiy "
"Storchaka."
msgstr ""
"`Issue #20731 <https://bugs.python.org/20731>`__: Properly position in "
"source code files even if they are opened in text mode. Patch by Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:4810
msgid ""
"`Issue #20637 <https://bugs.python.org/20637>`__: Key-sharing now also works "
"for instance dictionaries of subclasses.  Patch by Peter Ingebretson."
msgstr ""
"`Issue #20637 <https://bugs.python.org/20637>`__: Key-sharing now also works "
"for instance dictionaries of subclasses.  Patch by Peter Ingebretson."

#: ../../../Misc/NEWS:4813
msgid ""
"`Issue #8297 <https://bugs.python.org/8297>`__: Attributes missing from "
"modules now include the module name in the error text.  Original patch by "
"ysj.ray."
msgstr ""
"`Issue #8297 <https://bugs.python.org/8297>`__: Attributes missing from "
"modules now include the module name in the error text.  Original patch by "
"ysj.ray."

#: ../../../Misc/NEWS:4816
msgid ""
"`Issue #19995 <https://bugs.python.org/19995>`__: %c, %o, %x, and %X now "
"raise TypeError on non-integer input."
msgstr ""
"`Issue #19995 <https://bugs.python.org/19995>`__: %c, %o, %x, and %X now "
"raise TypeError on non-integer input."

#: ../../../Misc/NEWS:4818
msgid ""
"`Issue #19655 <https://bugs.python.org/19655>`__: The ASDL parser - used by "
"the build process to generate code for managing the Python AST in C - was "
"rewritten. The new parser is self contained and does not require to carry "
"long the spark.py parser-generator library; spark.py was removed from the "
"source base."
msgstr ""
"`Issue #19655 <https://bugs.python.org/19655>`__: The ASDL parser - used by "
"the build process to generate code for managing the Python AST in C - was "
"rewritten. The new parser is self contained and does not require to carry "
"long the spark.py parser-generator library; spark.py was removed from the "
"source base."

#: ../../../Misc/NEWS:4823
msgid ""
"`Issue #12546 <https://bugs.python.org/12546>`__: Allow ``\\x00`` to be used "
"as a fill character when using str, int, float, and complex __format__ "
"methods."
msgstr ""
"`Issue #12546 <https://bugs.python.org/12546>`__: Allow ``\\x00`` to be used "
"as a fill character when using str, int, float, and complex __format__ "
"methods."

#: ../../../Misc/NEWS:4826
msgid ""
"`Issue #20480 <https://bugs.python.org/20480>`__: Add ipaddress."
"reverse_pointer. Patch by Leon Weber."
msgstr ""
"`Issue #20480 <https://bugs.python.org/20480>`__: Add ipaddress."
"reverse_pointer. Patch by Leon Weber."

#: ../../../Misc/NEWS:4828
msgid ""
"`Issue #13598 <https://bugs.python.org/13598>`__: Modify string.Formatter to "
"support auto-numbering of replacement fields. It now matches the behavior of "
"str.format() in this regard. Patches by Phil Elson and Ramchandra Apte."
msgstr ""
"`Issue #13598 <https://bugs.python.org/13598>`__: Modify string.Formatter to "
"support auto-numbering of replacement fields. It now matches the behavior of "
"str.format() in this regard. Patches by Phil Elson and Ramchandra Apte."

#: ../../../Misc/NEWS:4832
msgid ""
"`Issue #8931 <https://bugs.python.org/8931>`__: Make alternate formatting "
"('#') for type 'c' raise an exception. In versions prior to 3.5, '#' with "
"'c' had no effect. Now specifying it is an error.  Patch by Torsten "
"Landschoff."
msgstr ""
"`Issue #8931 <https://bugs.python.org/8931>`__: Make alternate formatting "
"('#') for type 'c' raise an exception. In versions prior to 3.5, '#' with "
"'c' had no effect. Now specifying it is an error.  Patch by Torsten "
"Landschoff."

#: ../../../Misc/NEWS:4836
msgid ""
"`Issue #23165 <https://bugs.python.org/23165>`__: Perform overflow checks "
"before allocating memory in the _Py_char2wchar function."
msgstr ""
"`Issue #23165 <https://bugs.python.org/23165>`__: Perform overflow checks "
"before allocating memory in the _Py_char2wchar function."

#: ../../../Misc/NEWS:4842
msgid ""
"`Issue #23399 <https://bugs.python.org/23399>`__: pyvenv creates relative "
"symlinks where possible."
msgstr ""
"`Issue #23399 <https://bugs.python.org/23399>`__: pyvenv creates relative "
"symlinks where possible."

#: ../../../Misc/NEWS:4844
msgid ""
"`Issue #20289 <https://bugs.python.org/20289>`__: cgi.FieldStorage() now "
"supports the context management protocol."
msgstr ""
"`Issue #20289 <https://bugs.python.org/20289>`__: cgi.FieldStorage() now "
"supports the context management protocol."

#: ../../../Misc/NEWS:4847
msgid ""
"`Issue #13128 <https://bugs.python.org/13128>`__: Print response headers for "
"CONNECT requests when debuglevel > 0. Patch by Demian Brecht."
msgstr ""
"`Issue #13128 <https://bugs.python.org/13128>`__: Print response headers for "
"CONNECT requests when debuglevel > 0. Patch by Demian Brecht."

#: ../../../Misc/NEWS:4850
msgid ""
"`Issue #15381 <https://bugs.python.org/15381>`__: Optimized io.BytesIO to "
"make less allocations and copyings."
msgstr ""
"`Issue #15381 <https://bugs.python.org/15381>`__: Optimized io.BytesIO to "
"make less allocations and copyings."

#: ../../../Misc/NEWS:4852
msgid ""
"`Issue #22818 <https://bugs.python.org/22818>`__: Splitting on a pattern "
"that could match an empty string now raises a warning.  Patterns that can "
"only match empty strings are now rejected."
msgstr ""
"`Issue #22818 <https://bugs.python.org/22818>`__: Splitting on a pattern "
"that could match an empty string now raises a warning.  Patterns that can "
"only match empty strings are now rejected."

#: ../../../Misc/NEWS:4856
msgid ""
"`Issue #23099 <https://bugs.python.org/23099>`__: Closing io.BytesIO with "
"exported buffer is rejected now to prevent corrupting exported buffer."
msgstr ""
"`Issue #23099 <https://bugs.python.org/23099>`__: Closing io.BytesIO with "
"exported buffer is rejected now to prevent corrupting exported buffer."

#: ../../../Misc/NEWS:4859
msgid ""
"`Issue #23326 <https://bugs.python.org/23326>`__: Removed __ne__ "
"implementations.  Since fixing default __ne__ implementation in `issue "
"#21408 <https://bugs.python.org/21408>`__ they are redundant."
msgstr ""
"`Issue #23326 <https://bugs.python.org/23326>`__: Removed __ne__ "
"implementations.  Since fixing default __ne__ implementation in `issue "
"#21408 <https://bugs.python.org/21408>`__ they are redundant."

#: ../../../Misc/NEWS:4862
msgid ""
"`Issue #23363 <https://bugs.python.org/23363>`__: Fix possible overflow in "
"itertools.permutations."
msgstr ""
"`Issue #23363 <https://bugs.python.org/23363>`__: Fix possible overflow in "
"itertools.permutations."

#: ../../../Misc/NEWS:4864
msgid ""
"`Issue #23364 <https://bugs.python.org/23364>`__: Fix possible overflow in "
"itertools.product."
msgstr ""
"`Issue #23364 <https://bugs.python.org/23364>`__: Fix possible overflow in "
"itertools.product."

#: ../../../Misc/NEWS:4866
msgid ""
"`Issue #23366 <https://bugs.python.org/23366>`__: Fixed possible integer "
"overflow in itertools.combinations."
msgstr ""
"`Issue #23366 <https://bugs.python.org/23366>`__: Fixed possible integer "
"overflow in itertools.combinations."

#: ../../../Misc/NEWS:4868
msgid ""
"`Issue #23369 <https://bugs.python.org/23369>`__: Fixed possible integer "
"overflow in _json.encode_basestring_ascii."
msgstr ""
"`Issue #23369 <https://bugs.python.org/23369>`__: Fixed possible integer "
"overflow in _json.encode_basestring_ascii."

#: ../../../Misc/NEWS:4871
msgid ""
"`Issue #23353 <https://bugs.python.org/23353>`__: Fix the exception handling "
"of generators in PyEval_EvalFrameEx(). At entry, save or swap the exception "
"state even if PyEval_EvalFrameEx() is called with throwflag=0. At exit, the "
"exception state is now always restored or swapped, not only if why is "
"WHY_YIELD or WHY_RETURN. Patch co-written with Antoine Pitrou."
msgstr ""
"`Issue #23353 <https://bugs.python.org/23353>`__: Fix the exception handling "
"of generators in PyEval_EvalFrameEx(). At entry, save or swap the exception "
"state even if PyEval_EvalFrameEx() is called with throwflag=0. At exit, the "
"exception state is now always restored or swapped, not only if why is "
"WHY_YIELD or WHY_RETURN. Patch co-written with Antoine Pitrou."

#: ../../../Misc/NEWS:4877
msgid ""
"`Issue #14099 <https://bugs.python.org/14099>`__: Restored support of "
"writing ZIP files to tellable but non-seekable streams."
msgstr ""
"`Issue #14099 <https://bugs.python.org/14099>`__: Restored support of "
"writing ZIP files to tellable but non-seekable streams."

#: ../../../Misc/NEWS:4880
msgid ""
"`Issue #14099 <https://bugs.python.org/14099>`__: Writing to ZipFile and "
"reading multiple ZipExtFiles is threadsafe now."
msgstr ""
"`Issue #14099 <https://bugs.python.org/14099>`__: Writing to ZipFile and "
"reading multiple ZipExtFiles is threadsafe now."

#: ../../../Misc/NEWS:4883
msgid ""
"`Issue #19361 <https://bugs.python.org/19361>`__: JSON decoder now raises "
"JSONDecodeError instead of ValueError."
msgstr ""
"`Issue #19361 <https://bugs.python.org/19361>`__: JSON decoder now raises "
"JSONDecodeError instead of ValueError."

#: ../../../Misc/NEWS:4885
msgid ""
"`Issue #18518 <https://bugs.python.org/18518>`__: timeit now rejects "
"statements which can't be compiled outside a function or a loop (e.g. "
"\"return\" or \"break\")."
msgstr ""
"`Issue #18518 <https://bugs.python.org/18518>`__: timeit now rejects "
"statements which can't be compiled outside a function or a loop (e.g. "
"\"return\" or \"break\")."

#: ../../../Misc/NEWS:4888
msgid ""
"`Issue #23094 <https://bugs.python.org/23094>`__: Fixed readline with frames "
"in Python implementation of pickle."
msgstr ""
"`Issue #23094 <https://bugs.python.org/23094>`__: Fixed readline with frames "
"in Python implementation of pickle."

#: ../../../Misc/NEWS:4890
msgid ""
"`Issue #23268 <https://bugs.python.org/23268>`__: Fixed bugs in the "
"comparison of ipaddress classes."
msgstr ""
"`Issue #23268 <https://bugs.python.org/23268>`__: Fixed bugs in the "
"comparison of ipaddress classes."

#: ../../../Misc/NEWS:4892
msgid ""
"`Issue #21408 <https://bugs.python.org/21408>`__: Removed incorrect "
"implementations of __ne__() which didn't returned NotImplemented if __eq__() "
"returned NotImplemented.  The default __ne__() now works correctly."
msgstr ""
"`Issue #21408 <https://bugs.python.org/21408>`__: Removed incorrect "
"implementations of __ne__() which didn't returned NotImplemented if __eq__() "
"returned NotImplemented.  The default __ne__() now works correctly."

#: ../../../Misc/NEWS:4896
msgid ""
"`Issue #19996 <https://bugs.python.org/19996>`__: :class:`email.feedparser."
"FeedParser` now handles (malformed) headers with no key rather than assuming "
"the body has started."
msgstr ""
"`Issue #19996 <https://bugs.python.org/19996>`__: :class:`email.feedparser."
"FeedParser` now handles (malformed) headers with no key rather than assuming "
"the body has started."

#: ../../../Misc/NEWS:4899
msgid ""
"`Issue #20188 <https://bugs.python.org/20188>`__: Support Application-Layer "
"Protocol Negotiation (ALPN) in the ssl module."
msgstr ""
"`Issue #20188 <https://bugs.python.org/20188>`__: Support Application-Layer "
"Protocol Negotiation (ALPN) in the ssl module."

#: ../../../Misc/NEWS:4902
msgid ""
"`Issue #23133 <https://bugs.python.org/23133>`__: Pickling of ipaddress "
"objects now produces more compact and portable representation."
msgstr ""
"`Issue #23133 <https://bugs.python.org/23133>`__: Pickling of ipaddress "
"objects now produces more compact and portable representation."

#: ../../../Misc/NEWS:4905
msgid ""
"`Issue #23248 <https://bugs.python.org/23248>`__: Update ssl error codes "
"from latest OpenSSL git master."
msgstr ""
"`Issue #23248 <https://bugs.python.org/23248>`__: Update ssl error codes "
"from latest OpenSSL git master."

#: ../../../Misc/NEWS:4907
msgid ""
"`Issue #23266 <https://bugs.python.org/23266>`__: Much faster implementation "
"of ipaddress.collapse_addresses() when there are many non-consecutive "
"addresses."
msgstr ""
"`Issue #23266 <https://bugs.python.org/23266>`__: Much faster implementation "
"of ipaddress.collapse_addresses() when there are many non-consecutive "
"addresses."

#: ../../../Misc/NEWS:4910
msgid ""
"`Issue #23098 <https://bugs.python.org/23098>`__: 64-bit dev_t is now "
"supported in the os module."
msgstr ""
"`Issue #23098 <https://bugs.python.org/23098>`__: 64-bit dev_t is now "
"supported in the os module."

#: ../../../Misc/NEWS:4912
msgid ""
"`Issue #21817 <https://bugs.python.org/21817>`__: When an exception is "
"raised in a task submitted to a ProcessPoolExecutor, the remote traceback is "
"now displayed in the parent process.  Patch by Claudiu Popa."
msgstr ""
"`Issue #21817 <https://bugs.python.org/21817>`__: When an exception is "
"raised in a task submitted to a ProcessPoolExecutor, the remote traceback is "
"now displayed in the parent process.  Patch by Claudiu Popa."

#: ../../../Misc/NEWS:4916
msgid ""
"`Issue #15955 <https://bugs.python.org/15955>`__: Add an option to limit "
"output size when decompressing LZMA data.  Patch by Nikolaus Rath and Martin "
"Panter."
msgstr ""
"`Issue #15955 <https://bugs.python.org/15955>`__: Add an option to limit "
"output size when decompressing LZMA data.  Patch by Nikolaus Rath and Martin "
"Panter."

#: ../../../Misc/NEWS:4919
msgid ""
"`Issue #23250 <https://bugs.python.org/23250>`__: In the http.cookies "
"module, capitalize \"HttpOnly\" and \"Secure\" as they are written in the "
"standard."
msgstr ""
"`Issue #23250 <https://bugs.python.org/23250>`__: In the http.cookies "
"module, capitalize \"HttpOnly\" and \"Secure\" as they are written in the "
"standard."

#: ../../../Misc/NEWS:4922
msgid ""
"`Issue #23063 <https://bugs.python.org/23063>`__: In the disutils' check "
"command, fix parsing of reST with code or code-block directives."
msgstr ""
"`Issue #23063 <https://bugs.python.org/23063>`__: In the disutils' check "
"command, fix parsing of reST with code or code-block directives."

#: ../../../Misc/NEWS:4925
msgid ""
"`Issue #23209 <https://bugs.python.org/23209>`__, #23225: selectors."
"BaseSelector.get_key() now raises a RuntimeError if the selector is closed. "
"And selectors.BaseSelector.close() now clears its internal reference to the "
"selector mapping to break a reference cycle. Initial patch written by Martin "
"Richard."
msgstr ""
"`Issue #23209 <https://bugs.python.org/23209>`__, #23225: selectors."
"BaseSelector.get_key() now raises a RuntimeError if the selector is closed. "
"And selectors.BaseSelector.close() now clears its internal reference to the "
"selector mapping to break a reference cycle. Initial patch written by Martin "
"Richard."

#: ../../../Misc/NEWS:4930
msgid ""
"`Issue #17911 <https://bugs.python.org/17911>`__: Provide a way to seed the "
"linecache for a PEP-302 module without actually loading the code."
msgstr ""
"`Issue #17911 <https://bugs.python.org/17911>`__: Provide a way to seed the "
"linecache for a PEP-302 module without actually loading the code."

#: ../../../Misc/NEWS:4933
msgid ""
"`Issue #17911 <https://bugs.python.org/17911>`__: Provide a new object API "
"for traceback, including the ability to not lookup lines at all until the "
"traceback is actually rendered, without any trace of the original objects "
"being kept alive."
msgstr ""
"`Issue #17911 <https://bugs.python.org/17911>`__: Provide a new object API "
"for traceback, including the ability to not lookup lines at all until the "
"traceback is actually rendered, without any trace of the original objects "
"being kept alive."

#: ../../../Misc/NEWS:4937
msgid ""
"`Issue #19777 <https://bugs.python.org/19777>`__: Provide a home() "
"classmethod on Path objects.  Contributed by Victor Salgado and Mayank "
"Tripathi."
msgstr ""
"`Issue #19777 <https://bugs.python.org/19777>`__: Provide a home() "
"classmethod on Path objects.  Contributed by Victor Salgado and Mayank "
"Tripathi."

#: ../../../Misc/NEWS:4940
msgid ""
"`Issue #23206 <https://bugs.python.org/23206>`__: Make ``json.dumps(..., "
"ensure_ascii=False)`` as fast as the default case of ``ensure_ascii=True``.  "
"Patch by Naoki Inada."
msgstr ""
"`Issue #23206 <https://bugs.python.org/23206>`__: Make ``json.dumps(..., "
"ensure_ascii=False)`` as fast as the default case of ``ensure_ascii=True``.  "
"Patch by Naoki Inada."

#: ../../../Misc/NEWS:4943
msgid ""
"`Issue #23185 <https://bugs.python.org/23185>`__: Add math.inf and math.nan "
"constants."
msgstr ""
"`Issue #23185 <https://bugs.python.org/23185>`__: Add math.inf and math.nan "
"constants."

#: ../../../Misc/NEWS:4945
msgid ""
"`Issue #23186 <https://bugs.python.org/23186>`__: Add ssl.SSLObject."
"shared_ciphers() and ssl.SSLSocket.shared_ciphers() to fetch the client's "
"list ciphers sent at handshake."
msgstr ""
"`Issue #23186 <https://bugs.python.org/23186>`__: Add ssl.SSLObject."
"shared_ciphers() and ssl.SSLSocket.shared_ciphers() to fetch the client's "
"list ciphers sent at handshake."

#: ../../../Misc/NEWS:4949
msgid ""
"`Issue #23143 <https://bugs.python.org/23143>`__: Remove compatibility with "
"OpenSSLs older than 0.9.8."
msgstr ""
"`Issue #23143 <https://bugs.python.org/23143>`__: Remove compatibility with "
"OpenSSLs older than 0.9.8."

#: ../../../Misc/NEWS:4951
msgid ""
"`Issue #23132 <https://bugs.python.org/23132>`__: Improve performance and "
"introspection support of comparison methods created by functool."
"total_ordering."
msgstr ""
"`Issue #23132 <https://bugs.python.org/23132>`__: Improve performance and "
"introspection support of comparison methods created by functool."
"total_ordering."

#: ../../../Misc/NEWS:4954
msgid ""
"`Issue #19776 <https://bugs.python.org/19776>`__: Add an expanduser() method "
"on Path objects."
msgstr ""
"`Issue #19776 <https://bugs.python.org/19776>`__: Add an expanduser() method "
"on Path objects."

#: ../../../Misc/NEWS:4956
msgid ""
"`Issue #23112 <https://bugs.python.org/23112>`__: Fix SimpleHTTPServer to "
"correctly carry the query string and fragment when it redirects to add a "
"trailing slash."
msgstr ""
"`Issue #23112 <https://bugs.python.org/23112>`__: Fix SimpleHTTPServer to "
"correctly carry the query string and fragment when it redirects to add a "
"trailing slash."

#: ../../../Misc/NEWS:4959
msgid ""
"`Issue #21793 <https://bugs.python.org/21793>`__: Added http.HTTPStatus "
"enums (i.e. HTTPStatus.OK, HTTPStatus.NOT_FOUND).  Patch by Demian Brecht."
msgstr ""
"`Issue #21793 <https://bugs.python.org/21793>`__: Added http.HTTPStatus "
"enums (i.e. HTTPStatus.OK, HTTPStatus.NOT_FOUND).  Patch by Demian Brecht."

#: ../../../Misc/NEWS:4962
msgid ""
"`Issue #23093 <https://bugs.python.org/23093>`__: In the io, module allow "
"more operations to work on detached streams."
msgstr ""
"`Issue #23093 <https://bugs.python.org/23093>`__: In the io, module allow "
"more operations to work on detached streams."

#: ../../../Misc/NEWS:4965
msgid ""
"`Issue #23111 <https://bugs.python.org/23111>`__: In the ftplib, make ssl."
"PROTOCOL_SSLv23 the default protocol version."
msgstr ""
"`Issue #23111 <https://bugs.python.org/23111>`__: In the ftplib, make ssl."
"PROTOCOL_SSLv23 the default protocol version."

#: ../../../Misc/NEWS:4968
msgid ""
"`Issue #22585 <https://bugs.python.org/22585>`__: On OpenBSD 5.6 and newer, "
"os.urandom() now calls getentropy(), instead of reading /dev/urandom, to get "
"pseudo-random bytes."
msgstr ""
"`Issue #22585 <https://bugs.python.org/22585>`__: On OpenBSD 5.6 and newer, "
"os.urandom() now calls getentropy(), instead of reading /dev/urandom, to get "
"pseudo-random bytes."

#: ../../../Misc/NEWS:4971
msgid ""
"`Issue #19104 <https://bugs.python.org/19104>`__: pprint now produces "
"evaluable output for wrapped strings."
msgstr ""
"`Issue #19104 <https://bugs.python.org/19104>`__: pprint now produces "
"evaluable output for wrapped strings."

#: ../../../Misc/NEWS:4973
msgid ""
"`Issue #23071 <https://bugs.python.org/23071>`__: Added missing names to "
"codecs.__all__.  Patch by Martin Panter."
msgstr ""
"`Issue #23071 <https://bugs.python.org/23071>`__: Added missing names to "
"codecs.__all__.  Patch by Martin Panter."

#: ../../../Misc/NEWS:4975
msgid ""
"`Issue #22783 <https://bugs.python.org/22783>`__: Pickling now uses the "
"NEWOBJ opcode instead of the NEWOBJ_EX opcode if possible."
msgstr ""
"`Issue #22783 <https://bugs.python.org/22783>`__: Pickling now uses the "
"NEWOBJ opcode instead of the NEWOBJ_EX opcode if possible."

#: ../../../Misc/NEWS:4978
msgid ""
"`Issue #15513 <https://bugs.python.org/15513>`__: Added a __sizeof__ "
"implementation for pickle classes."
msgstr ""
"`Issue #15513 <https://bugs.python.org/15513>`__: Added a __sizeof__ "
"implementation for pickle classes."

#: ../../../Misc/NEWS:4980
msgid ""
"`Issue #19858 <https://bugs.python.org/19858>`__: pickletools.optimize() now "
"aware of the MEMOIZE opcode, can produce more compact result and no longer "
"produces invalid output if input data contains MEMOIZE opcodes together with "
"PUT or BINPUT opcodes."
msgstr ""
"`Issue #19858 <https://bugs.python.org/19858>`__: pickletools.optimize() now "
"aware of the MEMOIZE opcode, can produce more compact result and no longer "
"produces invalid output if input data contains MEMOIZE opcodes together with "
"PUT or BINPUT opcodes."

#: ../../../Misc/NEWS:4984
msgid ""
"`Issue #22095 <https://bugs.python.org/22095>`__: Fixed HTTPConnection."
"set_tunnel with default port.  The port value in the host header was set to "
"\"None\".  Patch by Demian Brecht."
msgstr ""
"`Issue #22095 <https://bugs.python.org/22095>`__: Fixed HTTPConnection."
"set_tunnel with default port.  The port value in the host header was set to "
"\"None\".  Patch by Demian Brecht."

#: ../../../Misc/NEWS:4987
msgid ""
"`Issue #23016 <https://bugs.python.org/23016>`__: A warning no longer "
"produces an AttributeError when the program is run with pythonw.exe."
msgstr ""
"`Issue #23016 <https://bugs.python.org/23016>`__: A warning no longer "
"produces an AttributeError when the program is run with pythonw.exe."

#: ../../../Misc/NEWS:4990
msgid ""
"`Issue #21775 <https://bugs.python.org/21775>`__: shutil.copytree(): fix "
"crash when copying to VFAT. An exception handler assumed that OSError "
"objects always have a 'winerror' attribute. That is not the case, so the "
"exception handler itself raised AttributeError when run on Linux (and, "
"presumably, any other non-Windows OS). Patch by Greg Ward."
msgstr ""
"`Issue #21775 <https://bugs.python.org/21775>`__: shutil.copytree(): fix "
"crash when copying to VFAT. An exception handler assumed that OSError "
"objects always have a 'winerror' attribute. That is not the case, so the "
"exception handler itself raised AttributeError when run on Linux (and, "
"presumably, any other non-Windows OS). Patch by Greg Ward."

#: ../../../Misc/NEWS:4996
msgid ""
"`Issue #1218234 <https://bugs.python.org/1218234>`__: Fix inspect."
"getsource() to load updated source of reloaded module. Initial patch by "
"Berker Peksag."
msgstr ""
"`Issue #1218234 <https://bugs.python.org/1218234>`__: Fix inspect."
"getsource() to load updated source of reloaded module. Initial patch by "
"Berker Peksag."

#: ../../../Misc/NEWS:4999
msgid ""
"`Issue #21740 <https://bugs.python.org/21740>`__: Support wrapped callables "
"in doctest. Patch by Claudiu Popa."
msgstr ""
"`Issue #21740 <https://bugs.python.org/21740>`__: Support wrapped callables "
"in doctest. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:5001
msgid ""
"`Issue #23009 <https://bugs.python.org/23009>`__: Make sure selectors."
"EpollSelecrtor.select() works when no FD is registered."
msgstr ""
"`Issue #23009 <https://bugs.python.org/23009>`__: Make sure selectors."
"EpollSelecrtor.select() works when no FD is registered."

#: ../../../Misc/NEWS:5004
msgid ""
"`Issue #22959 <https://bugs.python.org/22959>`__: In the constructor of http."
"client.HTTPSConnection, prefer the context's check_hostname attribute over "
"the *check_hostname* parameter."
msgstr ""
"`Issue #22959 <https://bugs.python.org/22959>`__: In the constructor of http."
"client.HTTPSConnection, prefer the context's check_hostname attribute over "
"the *check_hostname* parameter."

#: ../../../Misc/NEWS:5007
msgid ""
"`Issue #22696 <https://bugs.python.org/22696>`__: Add function :func:`sys."
"is_finalizing` to know about interpreter shutdown."
msgstr ""
"`Issue #22696 <https://bugs.python.org/22696>`__: Add function :func:`sys."
"is_finalizing` to know about interpreter shutdown."

#: ../../../Misc/NEWS:5010
msgid ""
"`Issue #16043 <https://bugs.python.org/16043>`__: Add a default limit for "
"the amount of data xmlrpclib.gzip_decode will return. This resolves "
"CVE-2013-1753."
msgstr ""
"`Issue #16043 <https://bugs.python.org/16043>`__: Add a default limit for "
"the amount of data xmlrpclib.gzip_decode will return. This resolves "
"CVE-2013-1753."

#: ../../../Misc/NEWS:5013
msgid ""
"`Issue #14099 <https://bugs.python.org/14099>`__: ZipFile.open() no longer "
"reopen the underlying file.  Objects returned by ZipFile.open() can now "
"operate independently of the ZipFile even if the ZipFile was created by "
"passing in a file-like object as the first argument to the constructor."
msgstr ""
"`Issue #14099 <https://bugs.python.org/14099>`__: ZipFile.open() no longer "
"reopen the underlying file.  Objects returned by ZipFile.open() can now "
"operate independently of the ZipFile even if the ZipFile was created by "
"passing in a file-like object as the first argument to the constructor."

#: ../../../Misc/NEWS:5018
msgid ""
"`Issue #22966 <https://bugs.python.org/22966>`__: Fix __pycache__ pyc file "
"name clobber when pyc_compile is asked to compile a source file containing "
"multiple dots in the source file name."
msgstr ""
"`Issue #22966 <https://bugs.python.org/22966>`__: Fix __pycache__ pyc file "
"name clobber when pyc_compile is asked to compile a source file containing "
"multiple dots in the source file name."

#: ../../../Misc/NEWS:5022
msgid ""
"`Issue #21971 <https://bugs.python.org/21971>`__: Update turtledemo doc and "
"add module to the index."
msgstr ""
"`Issue #21971 <https://bugs.python.org/21971>`__: Update turtledemo doc and "
"add module to the index."

#: ../../../Misc/NEWS:5024
msgid ""
"`Issue #21032 <https://bugs.python.org/21032>`__: Fixed socket leak if "
"HTTPConnection.getresponse() fails. Original patch by Martin Panter."
msgstr ""
"`Issue #21032 <https://bugs.python.org/21032>`__: Fixed socket leak if "
"HTTPConnection.getresponse() fails. Original patch by Martin Panter."

#: ../../../Misc/NEWS:5027
msgid ""
"`Issue #22407 <https://bugs.python.org/22407>`__: Deprecated the use of re."
"LOCALE flag with str patterns or re.ASCII. It was newer worked."
msgstr ""
"`Issue #22407 <https://bugs.python.org/22407>`__: Deprecated the use of re."
"LOCALE flag with str patterns or re.ASCII. It was newer worked."

#: ../../../Misc/NEWS:5030
msgid ""
"`Issue #22902 <https://bugs.python.org/22902>`__: The \"ip\" command is now "
"used on Linux to determine MAC address in uuid.getnode().  Pach by Bruno "
"Cauet."
msgstr ""
"`Issue #22902 <https://bugs.python.org/22902>`__: The \"ip\" command is now "
"used on Linux to determine MAC address in uuid.getnode().  Pach by Bruno "
"Cauet."

#: ../../../Misc/NEWS:5033
msgid ""
"`Issue #22960 <https://bugs.python.org/22960>`__: Add a context argument to "
"xmlrpclib.ServerProxy constructor."
msgstr ""
"`Issue #22960 <https://bugs.python.org/22960>`__: Add a context argument to "
"xmlrpclib.ServerProxy constructor."

#: ../../../Misc/NEWS:5035
msgid ""
"`Issue #22389 <https://bugs.python.org/22389>`__: Add contextlib."
"redirect_stderr()."
msgstr ""
"`Issue #22389 <https://bugs.python.org/22389>`__: Add contextlib."
"redirect_stderr()."

#: ../../../Misc/NEWS:5037
msgid ""
"`Issue #21356 <https://bugs.python.org/21356>`__: Make ssl.RAND_egd() "
"optional to support LibreSSL. The availability of the function is checked "
"during the compilation. Patch written by Bernard Spil."
msgstr ""
"`Issue #21356 <https://bugs.python.org/21356>`__: Make ssl.RAND_egd() "
"optional to support LibreSSL. The availability of the function is checked "
"during the compilation. Patch written by Bernard Spil."

#: ../../../Misc/NEWS:5041
msgid ""
"`Issue #22915 <https://bugs.python.org/22915>`__: SAX parser now supports "
"files opened with file descriptor or bytes path."
msgstr ""
"`Issue #22915 <https://bugs.python.org/22915>`__: SAX parser now supports "
"files opened with file descriptor or bytes path."

#: ../../../Misc/NEWS:5044
msgid ""
"`Issue #22609 <https://bugs.python.org/22609>`__: Constructors and update "
"methods of mapping classes in the collections module now accept the self "
"keyword argument."
msgstr ""
"`Issue #22609 <https://bugs.python.org/22609>`__: Constructors and update "
"methods of mapping classes in the collections module now accept the self "
"keyword argument."

#: ../../../Misc/NEWS:5047
msgid ""
"`Issue #22940 <https://bugs.python.org/22940>`__: Add readline."
"append_history_file."
msgstr ""
"`Issue #22940 <https://bugs.python.org/22940>`__: Add readline."
"append_history_file."

#: ../../../Misc/NEWS:5049
msgid ""
"`Issue #19676 <https://bugs.python.org/19676>`__: Added the \"namereplace\" "
"error handler."
msgstr ""
"`Issue #19676 <https://bugs.python.org/19676>`__: Added the \"namereplace\" "
"error handler."

#: ../../../Misc/NEWS:5051
msgid ""
"`Issue #22788 <https://bugs.python.org/22788>`__: Add *context* parameter to "
"logging.handlers.HTTPHandler."
msgstr ""
"`Issue #22788 <https://bugs.python.org/22788>`__: Add *context* parameter to "
"logging.handlers.HTTPHandler."

#: ../../../Misc/NEWS:5053
msgid ""
"`Issue #22921 <https://bugs.python.org/22921>`__: Allow SSLContext to take "
"the *hostname* parameter even if OpenSSL doesn't support SNI."
msgstr ""
"`Issue #22921 <https://bugs.python.org/22921>`__: Allow SSLContext to take "
"the *hostname* parameter even if OpenSSL doesn't support SNI."

#: ../../../Misc/NEWS:5056
msgid ""
"`Issue #22894 <https://bugs.python.org/22894>`__: TestCase.subTest() would "
"cause the test suite to be stopped when in failfast mode, even in the "
"absence of failures."
msgstr ""
"`Issue #22894 <https://bugs.python.org/22894>`__: TestCase.subTest() would "
"cause the test suite to be stopped when in failfast mode, even in the "
"absence of failures."

#: ../../../Misc/NEWS:5059
msgid ""
"`Issue #22796 <https://bugs.python.org/22796>`__: HTTP cookie parsing is now "
"stricter, in order to protect against potential injection attacks."
msgstr ""
"`Issue #22796 <https://bugs.python.org/22796>`__: HTTP cookie parsing is now "
"stricter, in order to protect against potential injection attacks."

#: ../../../Misc/NEWS:5062
msgid ""
"`Issue #22370 <https://bugs.python.org/22370>`__: Windows detection in "
"pathlib is now more robust."
msgstr ""
"`Issue #22370 <https://bugs.python.org/22370>`__: Windows detection in "
"pathlib is now more robust."

#: ../../../Misc/NEWS:5064
msgid ""
"`Issue #22841 <https://bugs.python.org/22841>`__: Reject coroutines in "
"asyncio add_signal_handler(). Patch by Ludovic.Gasc."
msgstr ""
"`Issue #22841 <https://bugs.python.org/22841>`__: Reject coroutines in "
"asyncio add_signal_handler(). Patch by Ludovic.Gasc."

#: ../../../Misc/NEWS:5067
msgid ""
"`Issue #19494 <https://bugs.python.org/19494>`__: Added urllib.request."
"HTTPBasicPriorAuthHandler. Patch by Matej Cepl."
msgstr ""
"`Issue #19494 <https://bugs.python.org/19494>`__: Added urllib.request."
"HTTPBasicPriorAuthHandler. Patch by Matej Cepl."

#: ../../../Misc/NEWS:5070
msgid ""
"`Issue #22578 <https://bugs.python.org/22578>`__: Added attributes to the re."
"error class."
msgstr ""
"`Issue #22578 <https://bugs.python.org/22578>`__: Added attributes to the re."
"error class."

#: ../../../Misc/NEWS:5072
msgid ""
"`Issue #22849 <https://bugs.python.org/22849>`__: Fix possible double free "
"in the io.TextIOWrapper constructor."
msgstr ""
"`Issue #22849 <https://bugs.python.org/22849>`__: Fix possible double free "
"in the io.TextIOWrapper constructor."

#: ../../../Misc/NEWS:5074
msgid ""
"`Issue #12728 <https://bugs.python.org/12728>`__: Different Unicode "
"characters having the same uppercase but different lowercase are now matched "
"in case-insensitive regular expressions."
msgstr ""
"`Issue #12728 <https://bugs.python.org/12728>`__: Different Unicode "
"characters having the same uppercase but different lowercase are now matched "
"in case-insensitive regular expressions."

#: ../../../Misc/NEWS:5077
msgid ""
"`Issue #22821 <https://bugs.python.org/22821>`__: Fixed fcntl() with integer "
"argument on 64-bit big-endian platforms."
msgstr ""
"`Issue #22821 <https://bugs.python.org/22821>`__: Fixed fcntl() with integer "
"argument on 64-bit big-endian platforms."

#: ../../../Misc/NEWS:5080
msgid ""
"`Issue #21650 <https://bugs.python.org/21650>`__: Add an `--sort-keys` "
"option to json.tool CLI."
msgstr ""
"`Issue #21650 <https://bugs.python.org/21650>`__: Add an `--sort-keys` "
"option to json.tool CLI."

#: ../../../Misc/NEWS:5082
msgid ""
"`Issue #22824 <https://bugs.python.org/22824>`__: Updated reprlib output "
"format for sets to use set literals. Patch contributed by Berker Peksag."
msgstr ""
"`Issue #22824 <https://bugs.python.org/22824>`__: Updated reprlib output "
"format for sets to use set literals. Patch contributed by Berker Peksag."

#: ../../../Misc/NEWS:5085
msgid ""
"`Issue #22824 <https://bugs.python.org/22824>`__: Updated reprlib output "
"format for arrays to display empty arrays without an unnecessary empty "
"list.  Suggested by Serhiy Storchaka."
msgstr ""
"`Issue #22824 <https://bugs.python.org/22824>`__: Updated reprlib output "
"format for arrays to display empty arrays without an unnecessary empty "
"list.  Suggested by Serhiy Storchaka."

#: ../../../Misc/NEWS:5088
msgid ""
"`Issue #22406 <https://bugs.python.org/22406>`__: Fixed the uu_codec codec "
"incorrectly ported to 3.x. Based on patch by Martin Panter."
msgstr ""
"`Issue #22406 <https://bugs.python.org/22406>`__: Fixed the uu_codec codec "
"incorrectly ported to 3.x. Based on patch by Martin Panter."

#: ../../../Misc/NEWS:5091
msgid ""
"`Issue #17293 <https://bugs.python.org/17293>`__: uuid.getnode() now "
"determines MAC address on AIX using netstat. Based on patch by Aivars KalvÔøΩ?"
"ns."
msgstr ""
"`Issue #17293 <https://bugs.python.org/17293>`__: uuid.getnode() now "
"determines MAC address on AIX using netstat. Based on patch by Aivars KalvÔøΩ?"
"ns."

#: ../../../Misc/NEWS:5094
msgid ""
"`Issue #22769 <https://bugs.python.org/22769>`__: Fixed ttk.Treeview."
"tag_has() when called without arguments."
msgstr ""
"`Issue #22769 <https://bugs.python.org/22769>`__: Fixed ttk.Treeview."
"tag_has() when called without arguments."

#: ../../../Misc/NEWS:5096
msgid ""
"`Issue #22417 <https://bugs.python.org/22417>`__: Verify certificates by "
"default in httplib (PEP 476)."
msgstr ""
"`Issue #22417 <https://bugs.python.org/22417>`__: Verify certificates by "
"default in httplib (PEP 476)."

#: ../../../Misc/NEWS:5098
msgid ""
"`Issue #22775 <https://bugs.python.org/22775>`__: Fixed unpickling of http."
"cookies.SimpleCookie with protocol 2 and above.  Patch by Tim Graham."
msgstr ""
"`Issue #22775 <https://bugs.python.org/22775>`__: Fixed unpickling of http."
"cookies.SimpleCookie with protocol 2 and above.  Patch by Tim Graham."

#: ../../../Misc/NEWS:5101
msgid ""
"`Issue #22776 <https://bugs.python.org/22776>`__: Brought excluded code into "
"the scope of a try block in SysLogHandler.emit()."
msgstr ""
"`Issue #22776 <https://bugs.python.org/22776>`__: Brought excluded code into "
"the scope of a try block in SysLogHandler.emit()."

#: ../../../Misc/NEWS:5104
msgid ""
"`Issue #22665 <https://bugs.python.org/22665>`__: Add missing "
"get_terminal_size and SameFileError to shutil.__all__."
msgstr ""
"`Issue #22665 <https://bugs.python.org/22665>`__: Add missing "
"get_terminal_size and SameFileError to shutil.__all__."

#: ../../../Misc/NEWS:5107
msgid ""
"`Issue #6623 <https://bugs.python.org/6623>`__: Remove deprecated Netrc "
"class in the ftplib module. Patch by Matt Chaput."
msgstr ""
"`Issue #6623 <https://bugs.python.org/6623>`__: Remove deprecated Netrc "
"class in the ftplib module. Patch by Matt Chaput."

#: ../../../Misc/NEWS:5110
msgid ""
"`Issue #17381 <https://bugs.python.org/17381>`__: Fixed handling of case-"
"insensitive ranges in regular expressions."
msgstr ""
"`Issue #17381 <https://bugs.python.org/17381>`__: Fixed handling of case-"
"insensitive ranges in regular expressions."

#: ../../../Misc/NEWS:5113
msgid ""
"`Issue #22410 <https://bugs.python.org/22410>`__: Module level functions in "
"the re module now cache compiled locale-dependent regular expressions taking "
"into account the locale."
msgstr ""
"`Issue #22410 <https://bugs.python.org/22410>`__: Module level functions in "
"the re module now cache compiled locale-dependent regular expressions taking "
"into account the locale."

#: ../../../Misc/NEWS:5116
msgid ""
"`Issue #22759 <https://bugs.python.org/22759>`__: Query methods on pathlib."
"Path() (exists(), is_dir(), etc.) now return False when the underlying stat "
"call raises NotADirectoryError."
msgstr ""
"`Issue #22759 <https://bugs.python.org/22759>`__: Query methods on pathlib."
"Path() (exists(), is_dir(), etc.) now return False when the underlying stat "
"call raises NotADirectoryError."

#: ../../../Misc/NEWS:5119
msgid ""
"`Issue #8876 <https://bugs.python.org/8876>`__: distutils now falls back to "
"copying files when hard linking doesn't work.  This allows use with special "
"filesystems such as VirtualBox shared folders."
msgstr ""
"`Issue #8876 <https://bugs.python.org/8876>`__: distutils now falls back to "
"copying files when hard linking doesn't work.  This allows use with special "
"filesystems such as VirtualBox shared folders."

#: ../../../Misc/NEWS:5123
msgid ""
"`Issue #22217 <https://bugs.python.org/22217>`__: Implemented reprs of "
"classes in the zipfile module."
msgstr ""
"`Issue #22217 <https://bugs.python.org/22217>`__: Implemented reprs of "
"classes in the zipfile module."

#: ../../../Misc/NEWS:5125
msgid ""
"`Issue #22457 <https://bugs.python.org/22457>`__: Honour load_tests in the "
"start_dir of discovery."
msgstr ""
"`Issue #22457 <https://bugs.python.org/22457>`__: Honour load_tests in the "
"start_dir of discovery."

#: ../../../Misc/NEWS:5127
msgid ""
"`Issue #18216 <https://bugs.python.org/18216>`__: gettext now raises an "
"error when a .mo file has an unsupported major version number.  Patch by "
"Aaron Hill."
msgstr ""
"`Issue #18216 <https://bugs.python.org/18216>`__: gettext now raises an "
"error when a .mo file has an unsupported major version number.  Patch by "
"Aaron Hill."

#: ../../../Misc/NEWS:5130
msgid ""
"`Issue #13918 <https://bugs.python.org/13918>`__: Provide a locale."
"delocalize() function which can remove locale-specific number formatting "
"from a string representing a number, without then converting it to a "
"specific type.  Patch by C√©dric Krier."
msgstr ""
"`Issue #13918 <https://bugs.python.org/13918>`__: Provide a locale."
"delocalize() function which can remove locale-specific number formatting "
"from a string representing a number, without then converting it to a "
"specific type.  Patch by C√©dric Krier."

#: ../../../Misc/NEWS:5134
msgid ""
"`Issue #22676 <https://bugs.python.org/22676>`__: Make the pickling of "
"global objects which don't have a __module__ attribute less slow."
msgstr ""
"`Issue #22676 <https://bugs.python.org/22676>`__: Make the pickling of "
"global objects which don't have a __module__ attribute less slow."

#: ../../../Misc/NEWS:5137
msgid ""
"`Issue #18853 <https://bugs.python.org/18853>`__: Fixed ResourceWarning in "
"shlex.__nain__."
msgstr ""
"`Issue #18853 <https://bugs.python.org/18853>`__: Fixed ResourceWarning in "
"shlex.__nain__."

#: ../../../Misc/NEWS:5139
msgid ""
"`Issue #9351 <https://bugs.python.org/9351>`__: Defaults set with "
"set_defaults on an argparse subparser are no longer ignored when also set on "
"the parent parser."
msgstr ""
"`Issue #9351 <https://bugs.python.org/9351>`__: Defaults set with "
"set_defaults on an argparse subparser are no longer ignored when also set on "
"the parent parser."

#: ../../../Misc/NEWS:5142
msgid ""
"`Issue #7559 <https://bugs.python.org/7559>`__: unittest test loading "
"ImportErrors are reported as import errors with their import exception "
"rather than as attribute errors after the import has already failed."
msgstr ""
"`Issue #7559 <https://bugs.python.org/7559>`__: unittest test loading "
"ImportErrors are reported as import errors with their import exception "
"rather than as attribute errors after the import has already failed."

#: ../../../Misc/NEWS:5146
msgid ""
"`Issue #19746 <https://bugs.python.org/19746>`__: Make it possible to "
"examine the errors from unittest discovery without executing the test suite. "
"The new `errors` attribute on TestLoader exposes these non-fatal errors "
"encountered during discovery."
msgstr ""
"`Issue #19746 <https://bugs.python.org/19746>`__: Make it possible to "
"examine the errors from unittest discovery without executing the test suite. "
"The new `errors` attribute on TestLoader exposes these non-fatal errors "
"encountered during discovery."

#: ../../../Misc/NEWS:5150
msgid ""
"`Issue #21991 <https://bugs.python.org/21991>`__: Make email."
"headerregistry's header 'params' attributes be read-only "
"(MappingProxyType).  Previously the dictionary was modifiable but a new one "
"was created on each access of the attribute."
msgstr ""
"`Issue #21991 <https://bugs.python.org/21991>`__: Make email."
"headerregistry's header 'params' attributes be read-only "
"(MappingProxyType).  Previously the dictionary was modifiable but a new one "
"was created on each access of the attribute."

#: ../../../Misc/NEWS:5154
msgid ""
"`Issue #22638 <https://bugs.python.org/22638>`__: SSLv3 is now disabled "
"throughout the standard library. It can still be enabled by instantiating a "
"SSLContext manually."
msgstr ""
"`Issue #22638 <https://bugs.python.org/22638>`__: SSLv3 is now disabled "
"throughout the standard library. It can still be enabled by instantiating a "
"SSLContext manually."

#: ../../../Misc/NEWS:5157
msgid ""
"`Issue #22641 <https://bugs.python.org/22641>`__: In asyncio, the default "
"SSL context for client connections is now created using ssl."
"create_default_context(), for stronger security."
msgstr ""
"`Issue #22641 <https://bugs.python.org/22641>`__: In asyncio, the default "
"SSL context for client connections is now created using ssl."
"create_default_context(), for stronger security."

#: ../../../Misc/NEWS:5160
msgid ""
"`Issue #17401 <https://bugs.python.org/17401>`__: Include closefd in io."
"FileIO repr."
msgstr ""
"`Issue #17401 <https://bugs.python.org/17401>`__: Include closefd in io."
"FileIO repr."

#: ../../../Misc/NEWS:5162
msgid ""
"`Issue #21338 <https://bugs.python.org/21338>`__: Add silent mode for "
"compileall. quiet parameters of compile_{dir, file, path} functions now have "
"a multilevel value. Also, -q option of the CLI now have a multilevel value. "
"Patch by Thomas Kluyver."
msgstr ""
"`Issue #21338 <https://bugs.python.org/21338>`__: Add silent mode for "
"compileall. quiet parameters of compile_{dir, file, path} functions now have "
"a multilevel value. Also, -q option of the CLI now have a multilevel value. "
"Patch by Thomas Kluyver."

#: ../../../Misc/NEWS:5166
msgid ""
"`Issue #20152 <https://bugs.python.org/20152>`__: Convert the array and "
"cmath modules to Argument Clinic."
msgstr ""
"`Issue #20152 <https://bugs.python.org/20152>`__: Convert the array and "
"cmath modules to Argument Clinic."

#: ../../../Misc/NEWS:5168
msgid ""
"`Issue #18643 <https://bugs.python.org/18643>`__: Add socket.socketpair() on "
"Windows."
msgstr ""
"`Issue #18643 <https://bugs.python.org/18643>`__: Add socket.socketpair() on "
"Windows."

#: ../../../Misc/NEWS:5170
msgid ""
"`Issue #22435 <https://bugs.python.org/22435>`__: Fix a file descriptor leak "
"when socketserver bind fails."
msgstr ""
"`Issue #22435 <https://bugs.python.org/22435>`__: Fix a file descriptor leak "
"when socketserver bind fails."

#: ../../../Misc/NEWS:5172
msgid ""
"`Issue #13096 <https://bugs.python.org/13096>`__: Fixed segfault in CTypes "
"POINTER handling of large values."
msgstr ""
"`Issue #13096 <https://bugs.python.org/13096>`__: Fixed segfault in CTypes "
"POINTER handling of large values."

#: ../../../Misc/NEWS:5175
msgid ""
"`Issue #11694 <https://bugs.python.org/11694>`__: Raise ConversionError in "
"xdrlib as documented.  Patch by Filip Gruszczy≈Ñski and Claudiu Popa."
msgstr ""
"`Issue #11694 <https://bugs.python.org/11694>`__: Raise ConversionError in "
"xdrlib as documented.  Patch by Filip Gruszczy≈Ñski and Claudiu Popa."

#: ../../../Misc/NEWS:5178
msgid ""
"`Issue #19380 <https://bugs.python.org/19380>`__: Optimized parsing of "
"regular expressions."
msgstr ""
"`Issue #19380 <https://bugs.python.org/19380>`__: Optimized parsing of "
"regular expressions."

#: ../../../Misc/NEWS:5180
msgid ""
"`Issue #1519638 <https://bugs.python.org/1519638>`__: Now unmatched groups "
"are replaced with empty strings in re.sub() and re.subn()."
msgstr ""
"`Issue #1519638 <https://bugs.python.org/1519638>`__: Now unmatched groups "
"are replaced with empty strings in re.sub() and re.subn()."

#: ../../../Misc/NEWS:5183
msgid ""
"`Issue #18615 <https://bugs.python.org/18615>`__: sndhdr.what/whathdr now "
"return a namedtuple."
msgstr ""
"`Issue #18615 <https://bugs.python.org/18615>`__: sndhdr.what/whathdr now "
"return a namedtuple."

#: ../../../Misc/NEWS:5185
msgid ""
"`Issue #22462 <https://bugs.python.org/22462>`__: Fix pyexpat's creation of "
"a dummy frame to make it appear in exception tracebacks."
msgstr ""
"`Issue #22462 <https://bugs.python.org/22462>`__: Fix pyexpat's creation of "
"a dummy frame to make it appear in exception tracebacks."

#: ../../../Misc/NEWS:5188
msgid ""
"`Issue #21965 <https://bugs.python.org/21965>`__: Add support for in-memory "
"SSL to the ssl module.  Patch by Geert Jansen."
msgstr ""
"`Issue #21965 <https://bugs.python.org/21965>`__: Add support for in-memory "
"SSL to the ssl module.  Patch by Geert Jansen."

#: ../../../Misc/NEWS:5191
msgid ""
"`Issue #21173 <https://bugs.python.org/21173>`__: Fix len() on a "
"WeakKeyDictionary when .clear() was called with an iterator alive."
msgstr ""
"`Issue #21173 <https://bugs.python.org/21173>`__: Fix len() on a "
"WeakKeyDictionary when .clear() was called with an iterator alive."

#: ../../../Misc/NEWS:5194
msgid ""
"`Issue #11866 <https://bugs.python.org/11866>`__: Eliminated race condition "
"in the computation of names for new threads."
msgstr ""
"`Issue #11866 <https://bugs.python.org/11866>`__: Eliminated race condition "
"in the computation of names for new threads."

#: ../../../Misc/NEWS:5197
msgid ""
"`Issue #21905 <https://bugs.python.org/21905>`__: Avoid RuntimeError in "
"pickle.whichmodule() when sys.modules is mutated while iterating.  Patch by "
"Olivier Grisel."
msgstr ""
"`Issue #21905 <https://bugs.python.org/21905>`__: Avoid RuntimeError in "
"pickle.whichmodule() when sys.modules is mutated while iterating.  Patch by "
"Olivier Grisel."

#: ../../../Misc/NEWS:5200
msgid ""
"`Issue #11271 <https://bugs.python.org/11271>`__: concurrent.futures."
"Executor.map() now takes a *chunksize* argument to allow batching of tasks "
"in child processes and improve performance of ProcessPoolExecutor.  Patch by "
"Dan O'Reilly."
msgstr ""
"`Issue #11271 <https://bugs.python.org/11271>`__: concurrent.futures."
"Executor.map() now takes a *chunksize* argument to allow batching of tasks "
"in child processes and improve performance of ProcessPoolExecutor.  Patch by "
"Dan O'Reilly."

#: ../../../Misc/NEWS:5204
msgid ""
"`Issue #21883 <https://bugs.python.org/21883>`__: os.path.join() and os.path."
"relpath() now raise a TypeError with more helpful error message for "
"unsupported or mismatched types of arguments."
msgstr ""
"`Issue #21883 <https://bugs.python.org/21883>`__: os.path.join() and os.path."
"relpath() now raise a TypeError with more helpful error message for "
"unsupported or mismatched types of arguments."

#: ../../../Misc/NEWS:5207
msgid ""
"`Issue #22219 <https://bugs.python.org/22219>`__: The zipfile module CLI now "
"adds entries for directories (including empty directories) in ZIP file."
msgstr ""
"`Issue #22219 <https://bugs.python.org/22219>`__: The zipfile module CLI now "
"adds entries for directories (including empty directories) in ZIP file."

#: ../../../Misc/NEWS:5210
msgid ""
"`Issue #22449 <https://bugs.python.org/22449>`__: In the ssl.SSLContext."
"load_default_certs, consult the environmental variables SSL_CERT_DIR and "
"SSL_CERT_FILE on Windows."
msgstr ""
"`Issue #22449 <https://bugs.python.org/22449>`__: In the ssl.SSLContext."
"load_default_certs, consult the environmental variables SSL_CERT_DIR and "
"SSL_CERT_FILE on Windows."

#: ../../../Misc/NEWS:5213
msgid ""
"`Issue #22508 <https://bugs.python.org/22508>`__: The email.__version__ "
"variable has been removed; the email code is no longer shipped separately "
"from the stdlib, and __version__ hasn't been updated in several releases."
msgstr ""
"`Issue #22508 <https://bugs.python.org/22508>`__: The email.__version__ "
"variable has been removed; the email code is no longer shipped separately "
"from the stdlib, and __version__ hasn't been updated in several releases."

#: ../../../Misc/NEWS:5217
msgid ""
"`Issue #20076 <https://bugs.python.org/20076>`__: Added non derived UTF-8 "
"aliases to locale aliases table."
msgstr ""
"`Issue #20076 <https://bugs.python.org/20076>`__: Added non derived UTF-8 "
"aliases to locale aliases table."

#: ../../../Misc/NEWS:5219
msgid ""
"`Issue #20079 <https://bugs.python.org/20079>`__: Added locales supported in "
"glibc 2.18 to locale alias table."
msgstr ""
"`Issue #20079 <https://bugs.python.org/20079>`__: Added locales supported in "
"glibc 2.18 to locale alias table."

#: ../../../Misc/NEWS:5221
msgid ""
"`Issue #20218 <https://bugs.python.org/20218>`__: Added convenience methods "
"read_text/write_text and read_bytes/ write_bytes to pathlib.Path objects."
msgstr ""
"`Issue #20218 <https://bugs.python.org/20218>`__: Added convenience methods "
"read_text/write_text and read_bytes/ write_bytes to pathlib.Path objects."

#: ../../../Misc/NEWS:5224
msgid ""
"`Issue #22396 <https://bugs.python.org/22396>`__: On 32-bit AIX platform, "
"don't expose os.posix_fadvise() nor os.posix_fallocate() because their "
"prototypes in system headers are wrong."
msgstr ""
"`Issue #22396 <https://bugs.python.org/22396>`__: On 32-bit AIX platform, "
"don't expose os.posix_fadvise() nor os.posix_fallocate() because their "
"prototypes in system headers are wrong."

#: ../../../Misc/NEWS:5227
msgid ""
"`Issue #22517 <https://bugs.python.org/22517>`__: When an io.BufferedRWPair "
"object is deallocated, clear its weakrefs."
msgstr ""
"`Issue #22517 <https://bugs.python.org/22517>`__: When an io.BufferedRWPair "
"object is deallocated, clear its weakrefs."

#: ../../../Misc/NEWS:5230
msgid ""
"`Issue #22437 <https://bugs.python.org/22437>`__: Number of capturing groups "
"in regular expression is no longer limited by 100."
msgstr ""
"`Issue #22437 <https://bugs.python.org/22437>`__: Number of capturing groups "
"in regular expression is no longer limited by 100."

#: ../../../Misc/NEWS:5233
msgid ""
"`Issue #17442 <https://bugs.python.org/17442>`__: InteractiveInterpreter now "
"displays the full chained traceback in its showtraceback method, to match "
"the built in interactive interpreter."
msgstr ""
"`Issue #17442 <https://bugs.python.org/17442>`__: InteractiveInterpreter now "
"displays the full chained traceback in its showtraceback method, to match "
"the built in interactive interpreter."

#: ../../../Misc/NEWS:5236
msgid ""
"`Issue #23392 <https://bugs.python.org/23392>`__: Added tests for marshal C "
"API that works with FILE*."
msgstr ""
"`Issue #23392 <https://bugs.python.org/23392>`__: Added tests for marshal C "
"API that works with FILE*."

#: ../../../Misc/NEWS:5239
msgid ""
"`Issue #10510 <https://bugs.python.org/10510>`__: distutils register and "
"upload methods now use HTML standards compliant CRLF line endings."
msgstr ""
"`Issue #10510 <https://bugs.python.org/10510>`__: distutils register and "
"upload methods now use HTML standards compliant CRLF line endings."

#: ../../../Misc/NEWS:5242
msgid ""
"`Issue #9850 <https://bugs.python.org/9850>`__: Fixed macpath.join() for "
"empty first component.  Patch by Oleg Oshmyan."
msgstr ""
"`Issue #9850 <https://bugs.python.org/9850>`__: Fixed macpath.join() for "
"empty first component.  Patch by Oleg Oshmyan."

#: ../../../Misc/NEWS:5245
msgid ""
"`Issue #5309 <https://bugs.python.org/5309>`__: distutils' build and "
"build_ext commands now accept a ``-j`` option to enable parallel building of "
"extension modules."
msgstr ""
"`Issue #5309 <https://bugs.python.org/5309>`__: distutils' build and "
"build_ext commands now accept a ``-j`` option to enable parallel building of "
"extension modules."

#: ../../../Misc/NEWS:5248
msgid ""
"`Issue #22448 <https://bugs.python.org/22448>`__: Improve canceled timer "
"handles cleanup to prevent unbound memory usage. Patch by Joshua Moore-Oliva."
msgstr ""
"`Issue #22448 <https://bugs.python.org/22448>`__: Improve canceled timer "
"handles cleanup to prevent unbound memory usage. Patch by Joshua Moore-Oliva."

#: ../../../Misc/NEWS:5251
msgid ""
"`Issue #22427 <https://bugs.python.org/22427>`__: TemporaryDirectory no "
"longer attempts to clean up twice when used in the with statement in "
"generator."
msgstr ""
"`Issue #22427 <https://bugs.python.org/22427>`__: TemporaryDirectory no "
"longer attempts to clean up twice when used in the with statement in "
"generator."

#: ../../../Misc/NEWS:5254
msgid ""
"`Issue #22362 <https://bugs.python.org/22362>`__: Forbidden ambiguous octal "
"escapes out of range 0-0o377 in regular expressions."
msgstr ""
"`Issue #22362 <https://bugs.python.org/22362>`__: Forbidden ambiguous octal "
"escapes out of range 0-0o377 in regular expressions."

#: ../../../Misc/NEWS:5257
msgid ""
"`Issue #20912 <https://bugs.python.org/20912>`__: Now directories added to "
"ZIP file have correct Unix and MS-DOS directory attributes."
msgstr ""
"`Issue #20912 <https://bugs.python.org/20912>`__: Now directories added to "
"ZIP file have correct Unix and MS-DOS directory attributes."

#: ../../../Misc/NEWS:5260
msgid ""
"`Issue #21866 <https://bugs.python.org/21866>`__: ZipFile.close() no longer "
"writes ZIP64 central directory records if allowZip64 is false."
msgstr ""
"`Issue #21866 <https://bugs.python.org/21866>`__: ZipFile.close() no longer "
"writes ZIP64 central directory records if allowZip64 is false."

#: ../../../Misc/NEWS:5263
msgid ""
"`Issue #22278 <https://bugs.python.org/22278>`__: Fix urljoin problem with "
"relative urls, a regression observed after changes to issue22118 were "
"submitted."
msgstr ""
"`Issue #22278 <https://bugs.python.org/22278>`__: Fix urljoin problem with "
"relative urls, a regression observed after changes to issue22118 were "
"submitted."

#: ../../../Misc/NEWS:5266
msgid ""
"`Issue #22415 <https://bugs.python.org/22415>`__: Fixed debugging output of "
"the GROUPREF_EXISTS opcode in the re module.  Removed trailing spaces in "
"debugging output."
msgstr ""
"`Issue #22415 <https://bugs.python.org/22415>`__: Fixed debugging output of "
"the GROUPREF_EXISTS opcode in the re module.  Removed trailing spaces in "
"debugging output."

#: ../../../Misc/NEWS:5269
msgid ""
"`Issue #22423 <https://bugs.python.org/22423>`__: Unhandled exception in "
"thread no longer causes unhandled AttributeError when sys.stderr is None."
msgstr ""
"`Issue #22423 <https://bugs.python.org/22423>`__: Unhandled exception in "
"thread no longer causes unhandled AttributeError when sys.stderr is None."

#: ../../../Misc/NEWS:5272
msgid ""
"`Issue #21332 <https://bugs.python.org/21332>`__: Ensure that ``bufsize=1`` "
"in subprocess.Popen() selects line buffering, rather than block buffering.  "
"Patch by Akira Li."
msgstr ""
"`Issue #21332 <https://bugs.python.org/21332>`__: Ensure that ``bufsize=1`` "
"in subprocess.Popen() selects line buffering, rather than block buffering.  "
"Patch by Akira Li."

#: ../../../Misc/NEWS:5275
msgid ""
"`Issue #21091 <https://bugs.python.org/21091>`__: Fix API bug: email.message."
"EmailMessage.is_attachment is now a method."
msgstr ""
"`Issue #21091 <https://bugs.python.org/21091>`__: Fix API bug: email.message."
"EmailMessage.is_attachment is now a method."

#: ../../../Misc/NEWS:5278
msgid ""
"`Issue #21079 <https://bugs.python.org/21079>`__: Fix email.message."
"EmailMessage.is_attachment to return the correct result when the header has "
"parameters as well as a value."
msgstr ""
"`Issue #21079 <https://bugs.python.org/21079>`__: Fix email.message."
"EmailMessage.is_attachment to return the correct result when the header has "
"parameters as well as a value."

#: ../../../Misc/NEWS:5281
msgid ""
"`Issue #22247 <https://bugs.python.org/22247>`__: Add NNTPError to nntplib."
"__all__."
msgstr ""
"`Issue #22247 <https://bugs.python.org/22247>`__: Add NNTPError to nntplib."
"__all__."

#: ../../../Misc/NEWS:5283
msgid ""
"`Issue #22366 <https://bugs.python.org/22366>`__: urllib.request.urlopen "
"will accept a context object (SSLContext) as an argument which will then be "
"used for HTTPS connection. Patch by Alex Gaynor."
msgstr ""
"`Issue #22366 <https://bugs.python.org/22366>`__: urllib.request.urlopen "
"will accept a context object (SSLContext) as an argument which will then be "
"used for HTTPS connection. Patch by Alex Gaynor."

#: ../../../Misc/NEWS:5287
msgid ""
"`Issue #4180 <https://bugs.python.org/4180>`__: The warnings registries are "
"now reset when the filters are modified."
msgstr ""
"`Issue #4180 <https://bugs.python.org/4180>`__: The warnings registries are "
"now reset when the filters are modified."

#: ../../../Misc/NEWS:5290
msgid ""
"`Issue #22419 <https://bugs.python.org/22419>`__: Limit the length of "
"incoming HTTP request in wsgiref server to 65536 bytes and send a 414 error "
"code for higher lengths. Patch contributed by Devin Cook."
msgstr ""
"`Issue #22419 <https://bugs.python.org/22419>`__: Limit the length of "
"incoming HTTP request in wsgiref server to 65536 bytes and send a 414 error "
"code for higher lengths. Patch contributed by Devin Cook."

#: ../../../Misc/NEWS:5294
msgid ""
"Lax cookie parsing in http.cookies could be a security issue when combined "
"with non-standard cookie handling in some Web browsers.  Reported by Sergey "
"Bobrov."
msgstr ""

#: ../../../Misc/NEWS:5298
msgid ""
"`Issue #20537 <https://bugs.python.org/20537>`__: logging methods now accept "
"an exception instance as well as a Boolean value or exception tuple. Thanks "
"to Yury Selivanov for the patch."
msgstr ""
"`Issue #20537 <https://bugs.python.org/20537>`__: logging methods now accept "
"an exception instance as well as a Boolean value or exception tuple. Thanks "
"to Yury Selivanov for the patch."

#: ../../../Misc/NEWS:5301
msgid ""
"`Issue #22384 <https://bugs.python.org/22384>`__: An exception in Tkinter "
"callback no longer crashes the program when it is run with pythonw.exe."
msgstr ""
"`Issue #22384 <https://bugs.python.org/22384>`__: An exception in Tkinter "
"callback no longer crashes the program when it is run with pythonw.exe."

#: ../../../Misc/NEWS:5304
msgid ""
"`Issue #22168 <https://bugs.python.org/22168>`__: Prevent turtle "
"AttributeError with non-default Canvas on OS X."
msgstr ""
"`Issue #22168 <https://bugs.python.org/22168>`__: Prevent turtle "
"AttributeError with non-default Canvas on OS X."

#: ../../../Misc/NEWS:5306
msgid ""
"`Issue #21147 <https://bugs.python.org/21147>`__: sqlite3 now raises an "
"exception if the request contains a null character instead of truncating "
"it.  Based on patch by Victor Stinner."
msgstr ""
"`Issue #21147 <https://bugs.python.org/21147>`__: sqlite3 now raises an "
"exception if the request contains a null character instead of truncating "
"it.  Based on patch by Victor Stinner."

#: ../../../Misc/NEWS:5309
msgid ""
"`Issue #13968 <https://bugs.python.org/13968>`__: The glob module now "
"supports recursive search in subdirectories using the \"**\" pattern."
msgstr ""
"`Issue #13968 <https://bugs.python.org/13968>`__: The glob module now "
"supports recursive search in subdirectories using the \"**\" pattern."

#: ../../../Misc/NEWS:5312
msgid ""
"`Issue #21951 <https://bugs.python.org/21951>`__: Fixed a crash in Tkinter "
"on AIX when called Tcl command with empty string or tuple argument."
msgstr ""
"`Issue #21951 <https://bugs.python.org/21951>`__: Fixed a crash in Tkinter "
"on AIX when called Tcl command with empty string or tuple argument."

#: ../../../Misc/NEWS:5315
msgid ""
"`Issue #21951 <https://bugs.python.org/21951>`__: Tkinter now most likely "
"raises MemoryError instead of crash if the memory allocation fails."
msgstr ""
"`Issue #21951 <https://bugs.python.org/21951>`__: Tkinter now most likely "
"raises MemoryError instead of crash if the memory allocation fails."

#: ../../../Misc/NEWS:5318
msgid ""
"`Issue #22338 <https://bugs.python.org/22338>`__: Fix a crash in the json "
"module on memory allocation failure."
msgstr ""
"`Issue #22338 <https://bugs.python.org/22338>`__: Fix a crash in the json "
"module on memory allocation failure."

#: ../../../Misc/NEWS:5320
msgid ""
"`Issue #12410 <https://bugs.python.org/12410>`__: imaplib.IMAP4 now supports "
"the context management protocol. Original patch by Tarek Ziad√©."
msgstr ""
"`Issue #12410 <https://bugs.python.org/12410>`__: imaplib.IMAP4 now supports "
"the context management protocol. Original patch by Tarek Ziad√©."

#: ../../../Misc/NEWS:5323
msgid ""
"`Issue #21270 <https://bugs.python.org/21270>`__: We now override tuple "
"methods in mock.call objects so that they can be used as normal call "
"attributes."
msgstr ""
"`Issue #21270 <https://bugs.python.org/21270>`__: We now override tuple "
"methods in mock.call objects so that they can be used as normal call "
"attributes."

#: ../../../Misc/NEWS:5326
msgid ""
"`Issue #16662 <https://bugs.python.org/16662>`__: load_tests() is now "
"unconditionally run when it is present in a package's __init__.py.  "
"TestLoader.loadTestsFromModule() still accepts use_load_tests, but it is "
"deprecated and ignored.  A new keyword-only attribute `pattern` is added and "
"documented.  Patch given by Robert Collins, tweaked by Barry Warsaw."
msgstr ""
"`Issue #16662 <https://bugs.python.org/16662>`__: load_tests() is now "
"unconditionally run when it is present in a package's __init__.py.  "
"TestLoader.loadTestsFromModule() still accepts use_load_tests, but it is "
"deprecated and ignored.  A new keyword-only attribute `pattern` is added and "
"documented.  Patch given by Robert Collins, tweaked by Barry Warsaw."

#: ../../../Misc/NEWS:5332
msgid ""
"`Issue #22226 <https://bugs.python.org/22226>`__: First letter no longer is "
"stripped from the \"status\" key in the result of Treeview.heading()."
msgstr ""
"`Issue #22226 <https://bugs.python.org/22226>`__: First letter no longer is "
"stripped from the \"status\" key in the result of Treeview.heading()."

#: ../../../Misc/NEWS:5335
msgid ""
"`Issue #19524 <https://bugs.python.org/19524>`__: Fixed resource leak in the "
"HTTP connection when an invalid response is received.  Patch by Martin "
"Panter."
msgstr ""
"`Issue #19524 <https://bugs.python.org/19524>`__: Fixed resource leak in the "
"HTTP connection when an invalid response is received.  Patch by Martin "
"Panter."

#: ../../../Misc/NEWS:5338
msgid ""
"`Issue #20421 <https://bugs.python.org/20421>`__: Add a .version() method to "
"SSL sockets exposing the actual protocol version in use."
msgstr ""
"`Issue #20421 <https://bugs.python.org/20421>`__: Add a .version() method to "
"SSL sockets exposing the actual protocol version in use."

#: ../../../Misc/NEWS:5341
msgid ""
"`Issue #19546 <https://bugs.python.org/19546>`__: configparser exceptions no "
"longer expose implementation details. Chained KeyErrors are removed, which "
"leads to cleaner tracebacks.  Patch by Claudiu Popa."
msgstr ""
"`Issue #19546 <https://bugs.python.org/19546>`__: configparser exceptions no "
"longer expose implementation details. Chained KeyErrors are removed, which "
"leads to cleaner tracebacks.  Patch by Claudiu Popa."

#: ../../../Misc/NEWS:5345
msgid ""
"`Issue #22051 <https://bugs.python.org/22051>`__: turtledemo no longer "
"reloads examples to re-run them. Initialization of variables and gui setup "
"should be done in main(), which is called each time a demo is run, but not "
"on import."
msgstr ""
"`Issue #22051 <https://bugs.python.org/22051>`__: turtledemo no longer "
"reloads examples to re-run them. Initialization of variables and gui setup "
"should be done in main(), which is called each time a demo is run, but not "
"on import."

#: ../../../Misc/NEWS:5349
msgid ""
"`Issue #21933 <https://bugs.python.org/21933>`__: Turtledemo users can "
"change the code font size with a menu selection or control(command) '-' or "
"'+' or control-mousewheel. Original patch by Lita Cho."
msgstr ""
"`Issue #21933 <https://bugs.python.org/21933>`__: Turtledemo users can "
"change the code font size with a menu selection or control(command) '-' or "
"'+' or control-mousewheel. Original patch by Lita Cho."

#: ../../../Misc/NEWS:5353
msgid ""
"`Issue #21597 <https://bugs.python.org/21597>`__: The separator between the "
"turtledemo text pane and the drawing canvas can now be grabbed and dragged "
"with a mouse.  The code text pane can be widened to easily view or copy the "
"full width of the text.  The canvas can be widened on small screens.  "
"Original patches by Jan Kanis and Lita Cho."
msgstr ""
"`Issue #21597 <https://bugs.python.org/21597>`__: The separator between the "
"turtledemo text pane and the drawing canvas can now be grabbed and dragged "
"with a mouse.  The code text pane can be widened to easily view or copy the "
"full width of the text.  The canvas can be widened on small screens.  "
"Original patches by Jan Kanis and Lita Cho."

#: ../../../Misc/NEWS:5358
msgid ""
"`Issue #18132 <https://bugs.python.org/18132>`__: Turtledemo buttons no "
"longer disappear when the window is shrunk.  Original patches by Jan Kanis "
"and Lita Cho."
msgstr ""
"`Issue #18132 <https://bugs.python.org/18132>`__: Turtledemo buttons no "
"longer disappear when the window is shrunk.  Original patches by Jan Kanis "
"and Lita Cho."

#: ../../../Misc/NEWS:5361
msgid ""
"`Issue #22043 <https://bugs.python.org/22043>`__: time.monotonic() is now "
"always available. ``threading.Lock.acquire()``, ``threading.RLock."
"acquire()`` and socket operations now use a monotonic clock, instead of the "
"system clock, when a timeout is used."
msgstr ""
"`Issue #22043 <https://bugs.python.org/22043>`__: time.monotonic() is now "
"always available. ``threading.Lock.acquire()``, ``threading.RLock."
"acquire()`` and socket operations now use a monotonic clock, instead of the "
"system clock, when a timeout is used."

#: ../../../Misc/NEWS:5366
msgid ""
"`Issue #21527 <https://bugs.python.org/21527>`__: Add a default number of "
"workers to ThreadPoolExecutor equal to 5 times the number of CPUs.  Patch by "
"Claudiu Popa."
msgstr ""
"`Issue #21527 <https://bugs.python.org/21527>`__: Add a default number of "
"workers to ThreadPoolExecutor equal to 5 times the number of CPUs.  Patch by "
"Claudiu Popa."

#: ../../../Misc/NEWS:5369
msgid ""
"`Issue #22216 <https://bugs.python.org/22216>`__: smtplib now resets its "
"state more completely after a quit.  The most obvious consequence of the "
"previous behavior was a STARTTLS failure during a connect/starttls/quit/"
"connect/starttls sequence."
msgstr ""
"`Issue #22216 <https://bugs.python.org/22216>`__: smtplib now resets its "
"state more completely after a quit.  The most obvious consequence of the "
"previous behavior was a STARTTLS failure during a connect/starttls/quit/"
"connect/starttls sequence."

#: ../../../Misc/NEWS:5373
msgid ""
"`Issue #22098 <https://bugs.python.org/22098>`__: ctypes' BigEndianStructure "
"and LittleEndianStructure now define an empty __slots__ so that subclasses "
"don't always get an instance dict.  Patch by Claudiu Popa."
msgstr ""
"`Issue #22098 <https://bugs.python.org/22098>`__: ctypes' BigEndianStructure "
"and LittleEndianStructure now define an empty __slots__ so that subclasses "
"don't always get an instance dict.  Patch by Claudiu Popa."

#: ../../../Misc/NEWS:5377
msgid ""
"`Issue #22185 <https://bugs.python.org/22185>`__: Fix an occasional "
"RuntimeError in threading.Condition.wait() caused by mutation of the waiters "
"queue without holding the lock.  Patch by Doug Zongker."
msgstr ""
"`Issue #22185 <https://bugs.python.org/22185>`__: Fix an occasional "
"RuntimeError in threading.Condition.wait() caused by mutation of the waiters "
"queue without holding the lock.  Patch by Doug Zongker."

#: ../../../Misc/NEWS:5381
msgid ""
"`Issue #22287 <https://bugs.python.org/22287>`__: On UNIX, "
"_PyTime_gettimeofday() now uses clock_gettime(CLOCK_REALTIME) if available. "
"As a side effect, Python now depends on the librt library on Solaris and on "
"Linux (only with glibc older than 2.17)."
msgstr ""
"`Issue #22287 <https://bugs.python.org/22287>`__: On UNIX, "
"_PyTime_gettimeofday() now uses clock_gettime(CLOCK_REALTIME) if available. "
"As a side effect, Python now depends on the librt library on Solaris and on "
"Linux (only with glibc older than 2.17)."

#: ../../../Misc/NEWS:5386
msgid ""
"`Issue #22182 <https://bugs.python.org/22182>`__: Use e.args to unpack "
"exceptions correctly in distutils.file_util.move_file. Patch by Claudiu Popa."
msgstr ""
"`Issue #22182 <https://bugs.python.org/22182>`__: Use e.args to unpack "
"exceptions correctly in distutils.file_util.move_file. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:5389
msgid ""
"The webbrowser module now uses subprocess's start_new_session=True rather "
"than a potentially risky preexec_fn=os.setsid call."
msgstr ""

#: ../../../Misc/NEWS:5392
msgid ""
"`Issue #22042 <https://bugs.python.org/22042>`__: signal.set_wakeup_fd(fd) "
"now raises an exception if the file descriptor is in blocking mode."
msgstr ""
"`Issue #22042 <https://bugs.python.org/22042>`__: signal.set_wakeup_fd(fd) "
"now raises an exception if the file descriptor is in blocking mode."

#: ../../../Misc/NEWS:5395
msgid ""
"`Issue #16808 <https://bugs.python.org/16808>`__: inspect.stack() now "
"returns a named tuple instead of a tuple. Patch by Daniel Shahaf."
msgstr ""
"`Issue #16808 <https://bugs.python.org/16808>`__: inspect.stack() now "
"returns a named tuple instead of a tuple. Patch by Daniel Shahaf."

#: ../../../Misc/NEWS:5398
msgid ""
"`Issue #22236 <https://bugs.python.org/22236>`__: Fixed Tkinter images "
"copying operations in NoDefaultRoot mode."
msgstr ""
"`Issue #22236 <https://bugs.python.org/22236>`__: Fixed Tkinter images "
"copying operations in NoDefaultRoot mode."

#: ../../../Misc/NEWS:5400
msgid ""
"`Issue #2527 <https://bugs.python.org/2527>`__: Add a *globals* argument to "
"timeit functions, in order to override the globals namespace in which the "
"timed code is executed. Patch by Ben Roberts."
msgstr ""
"`Issue #2527 <https://bugs.python.org/2527>`__: Add a *globals* argument to "
"timeit functions, in order to override the globals namespace in which the "
"timed code is executed. Patch by Ben Roberts."

#: ../../../Misc/NEWS:5404
msgid ""
"`Issue #22118 <https://bugs.python.org/22118>`__: Switch urllib.parse to use "
"RFC 3986 semantics for the resolution of relative URLs, rather than RFCs "
"1808 and 2396. Patch by Demian Brecht."
msgstr ""
"`Issue #22118 <https://bugs.python.org/22118>`__: Switch urllib.parse to use "
"RFC 3986 semantics for the resolution of relative URLs, rather than RFCs "
"1808 and 2396. Patch by Demian Brecht."

#: ../../../Misc/NEWS:5408
msgid ""
"`Issue #21549 <https://bugs.python.org/21549>`__: Added the \"members\" "
"parameter to TarFile.list()."
msgstr ""
"`Issue #21549 <https://bugs.python.org/21549>`__: Added the \"members\" "
"parameter to TarFile.list()."

#: ../../../Misc/NEWS:5410
msgid ""
"`Issue #19628 <https://bugs.python.org/19628>`__: Allow compileall recursion "
"depth to be specified with a -r option."
msgstr ""
"`Issue #19628 <https://bugs.python.org/19628>`__: Allow compileall recursion "
"depth to be specified with a -r option."

#: ../../../Misc/NEWS:5413
msgid ""
"`Issue #15696 <https://bugs.python.org/15696>`__: Add a __sizeof__ "
"implementation for mmap objects on Windows."
msgstr ""
"`Issue #15696 <https://bugs.python.org/15696>`__: Add a __sizeof__ "
"implementation for mmap objects on Windows."

#: ../../../Misc/NEWS:5415
msgid ""
"`Issue #22068 <https://bugs.python.org/22068>`__: Avoided reference loops "
"with Variables and Fonts in Tkinter."
msgstr ""
"`Issue #22068 <https://bugs.python.org/22068>`__: Avoided reference loops "
"with Variables and Fonts in Tkinter."

#: ../../../Misc/NEWS:5417
msgid ""
"`Issue #22165 <https://bugs.python.org/22165>`__: SimpleHTTPRequestHandler "
"now supports undecodable file names."
msgstr ""
"`Issue #22165 <https://bugs.python.org/22165>`__: SimpleHTTPRequestHandler "
"now supports undecodable file names."

#: ../../../Misc/NEWS:5419
msgid ""
"`Issue #15381 <https://bugs.python.org/15381>`__: Optimized line reading in "
"io.BytesIO."
msgstr ""
"`Issue #15381 <https://bugs.python.org/15381>`__: Optimized line reading in "
"io.BytesIO."

#: ../../../Misc/NEWS:5421
msgid ""
"`Issue #8797 <https://bugs.python.org/8797>`__: Raise HTTPError on failed "
"Basic Authentication immediately. Initial patch by Sam Bull."
msgstr ""
"`Issue #8797 <https://bugs.python.org/8797>`__: Raise HTTPError on failed "
"Basic Authentication immediately. Initial patch by Sam Bull."

#: ../../../Misc/NEWS:5424
msgid ""
"`Issue #20729 <https://bugs.python.org/20729>`__: Restored the use of lazy "
"iterkeys()/itervalues()/iteritems() in the mailbox module."
msgstr ""
"`Issue #20729 <https://bugs.python.org/20729>`__: Restored the use of lazy "
"iterkeys()/itervalues()/iteritems() in the mailbox module."

#: ../../../Misc/NEWS:5427
msgid ""
"`Issue #21448 <https://bugs.python.org/21448>`__: Changed FeedParser feed() "
"to avoid O(N**2) behavior when parsing long line.  Original patch by Raymond "
"Hettinger."
msgstr ""
"`Issue #21448 <https://bugs.python.org/21448>`__: Changed FeedParser feed() "
"to avoid O(N**2) behavior when parsing long line.  Original patch by Raymond "
"Hettinger."

#: ../../../Misc/NEWS:5430
msgid ""
"`Issue #22184 <https://bugs.python.org/22184>`__: The functools LRU Cache "
"decorator factory now gives an earlier and clearer error message when the "
"user forgets the required parameters."
msgstr ""
"`Issue #22184 <https://bugs.python.org/22184>`__: The functools LRU Cache "
"decorator factory now gives an earlier and clearer error message when the "
"user forgets the required parameters."

#: ../../../Misc/NEWS:5433
msgid ""
"`Issue #17923 <https://bugs.python.org/17923>`__: glob() patterns ending "
"with a slash no longer match non-dirs on AIX.  Based on patch by Delhallt."
msgstr ""
"`Issue #17923 <https://bugs.python.org/17923>`__: glob() patterns ending "
"with a slash no longer match non-dirs on AIX.  Based on patch by Delhallt."

#: ../../../Misc/NEWS:5436
msgid ""
"`Issue #21725 <https://bugs.python.org/21725>`__: Added support for RFC 6531 "
"(SMTPUTF8) in smtpd."
msgstr ""
"`Issue #21725 <https://bugs.python.org/21725>`__: Added support for RFC 6531 "
"(SMTPUTF8) in smtpd."

#: ../../../Misc/NEWS:5438
msgid ""
"`Issue #22176 <https://bugs.python.org/22176>`__: Update the ctypes module's "
"libffi to v3.1.  This release adds support for the Linux AArch64 and POWERPC "
"ELF ABIv2 little endian architectures."
msgstr ""
"`Issue #22176 <https://bugs.python.org/22176>`__: Update the ctypes module's "
"libffi to v3.1.  This release adds support for the Linux AArch64 and POWERPC "
"ELF ABIv2 little endian architectures."

#: ../../../Misc/NEWS:5442
msgid ""
"`Issue #5411 <https://bugs.python.org/5411>`__: Added support for the \"xztar"
"\" format in the shutil module."
msgstr ""
"`Issue #5411 <https://bugs.python.org/5411>`__: Added support for the \"xztar"
"\" format in the shutil module."

#: ../../../Misc/NEWS:5444
msgid ""
"`Issue #21121 <https://bugs.python.org/21121>`__: Don't force 3rd party C "
"extensions to be built with -Werror=declaration-after-statement."
msgstr ""
"`Issue #21121 <https://bugs.python.org/21121>`__: Don't force 3rd party C "
"extensions to be built with -Werror=declaration-after-statement."

#: ../../../Misc/NEWS:5447
msgid ""
"`Issue #21975 <https://bugs.python.org/21975>`__: Fixed crash when using "
"uninitialized sqlite3.Row (in particular when unpickling pickled sqlite3."
"Row).  sqlite3.Row is now initialized in the __new__() method."
msgstr ""
"`Issue #21975 <https://bugs.python.org/21975>`__: Fixed crash when using "
"uninitialized sqlite3.Row (in particular when unpickling pickled sqlite3."
"Row).  sqlite3.Row is now initialized in the __new__() method."

#: ../../../Misc/NEWS:5451
msgid ""
"`Issue #20170 <https://bugs.python.org/20170>`__: Convert posixmodule to use "
"Argument Clinic."
msgstr ""
"`Issue #20170 <https://bugs.python.org/20170>`__: Convert posixmodule to use "
"Argument Clinic."

#: ../../../Misc/NEWS:5453
msgid ""
"`Issue #21539 <https://bugs.python.org/21539>`__: Add an *exists_ok* "
"argument to `Pathlib.mkdir()` to mimic `mkdir -p` and `os.makedirs()` "
"functionality.  When true, ignore FileExistsErrors.  Patch by Berker Peksag."
msgstr ""
"`Issue #21539 <https://bugs.python.org/21539>`__: Add an *exists_ok* "
"argument to `Pathlib.mkdir()` to mimic `mkdir -p` and `os.makedirs()` "
"functionality.  When true, ignore FileExistsErrors.  Patch by Berker Peksag."

#: ../../../Misc/NEWS:5457
msgid ""
"`Issue #22127 <https://bugs.python.org/22127>`__: Bypass IDNA for pure-ASCII "
"host names in the socket module (in particular for numeric IPs)."
msgstr ""
"`Issue #22127 <https://bugs.python.org/22127>`__: Bypass IDNA for pure-ASCII "
"host names in the socket module (in particular for numeric IPs)."

#: ../../../Misc/NEWS:5460
msgid ""
"`Issue #21047 <https://bugs.python.org/21047>`__: set the default value for "
"the *convert_charrefs* argument of HTMLParser to True.  Patch by Berker "
"Peksag."
msgstr ""
"`Issue #21047 <https://bugs.python.org/21047>`__: set the default value for "
"the *convert_charrefs* argument of HTMLParser to True.  Patch by Berker "
"Peksag."

#: ../../../Misc/NEWS:5463
msgid "Add an __all__ to html.entities."
msgstr ""

#: ../../../Misc/NEWS:5465
msgid ""
"`Issue #15114 <https://bugs.python.org/15114>`__: the strict mode and "
"argument of HTMLParser, HTMLParser.error, and the HTMLParserError exception "
"have been removed."
msgstr ""
"`Issue #15114 <https://bugs.python.org/15114>`__: the strict mode and "
"argument of HTMLParser, HTMLParser.error, and the HTMLParserError exception "
"have been removed."

#: ../../../Misc/NEWS:5468
msgid ""
"`Issue #22085 <https://bugs.python.org/22085>`__: Dropped support of Tk 8.3 "
"in Tkinter."
msgstr ""
"`Issue #22085 <https://bugs.python.org/22085>`__: Dropped support of Tk 8.3 "
"in Tkinter."

#: ../../../Misc/NEWS:5470
msgid ""
"`Issue #21580 <https://bugs.python.org/21580>`__: Now Tkinter correctly "
"handles bytes arguments passed to Tk. In particular this allows initializing "
"images from binary data."
msgstr ""
"`Issue #21580 <https://bugs.python.org/21580>`__: Now Tkinter correctly "
"handles bytes arguments passed to Tk. In particular this allows initializing "
"images from binary data."

#: ../../../Misc/NEWS:5473
msgid ""
"`Issue #22003 <https://bugs.python.org/22003>`__: When initialized from a "
"bytes object, io.BytesIO() now defers making a copy until it is mutated, "
"improving performance and memory use on some use cases.  Patch by David "
"Wilson."
msgstr ""
"`Issue #22003 <https://bugs.python.org/22003>`__: When initialized from a "
"bytes object, io.BytesIO() now defers making a copy until it is mutated, "
"improving performance and memory use on some use cases.  Patch by David "
"Wilson."

#: ../../../Misc/NEWS:5477
msgid ""
"`Issue #22018 <https://bugs.python.org/22018>`__: On Windows, signal."
"set_wakeup_fd() now also supports sockets. A side effect is that Python "
"depends to the WinSock library."
msgstr ""
"`Issue #22018 <https://bugs.python.org/22018>`__: On Windows, signal."
"set_wakeup_fd() now also supports sockets. A side effect is that Python "
"depends to the WinSock library."

#: ../../../Misc/NEWS:5480
msgid ""
"`Issue #22054 <https://bugs.python.org/22054>`__: Add os.get_blocking() and "
"os.set_blocking() functions to get and set the blocking mode of a file "
"descriptor (False if the O_NONBLOCK flag is set, True otherwise). These "
"functions are not available on Windows."
msgstr ""
"`Issue #22054 <https://bugs.python.org/22054>`__: Add os.get_blocking() and "
"os.set_blocking() functions to get and set the blocking mode of a file "
"descriptor (False if the O_NONBLOCK flag is set, True otherwise). These "
"functions are not available on Windows."

#: ../../../Misc/NEWS:5484
msgid ""
"`Issue #17172 <https://bugs.python.org/17172>`__: Make turtledemo start as "
"active on OS X even when run with subprocess.  Patch by Lita Cho."
msgstr ""
"`Issue #17172 <https://bugs.python.org/17172>`__: Make turtledemo start as "
"active on OS X even when run with subprocess.  Patch by Lita Cho."

#: ../../../Misc/NEWS:5487
msgid ""
"`Issue #21704 <https://bugs.python.org/21704>`__: Fix build error for "
"_multiprocessing when semaphores are not available.  Patch by Arfrever "
"Frehtes Taifersar Arahesis."
msgstr ""
"`Issue #21704 <https://bugs.python.org/21704>`__: Fix build error for "
"_multiprocessing when semaphores are not available.  Patch by Arfrever "
"Frehtes Taifersar Arahesis."

#: ../../../Misc/NEWS:5490
msgid ""
"`Issue #20173 <https://bugs.python.org/20173>`__: Convert sha1, sha256, "
"sha512 and md5 to ArgumentClinic. Patch by Vajrasky Kok."
msgstr ""
"`Issue #20173 <https://bugs.python.org/20173>`__: Convert sha1, sha256, "
"sha512 and md5 to ArgumentClinic. Patch by Vajrasky Kok."

#: ../../../Misc/NEWS:5493
msgid ""
"Fix repr(_socket.socket) on Windows 64-bit: don't fail with OverflowError on "
"closed socket. repr(socket.socket) already works fine."
msgstr ""

#: ../../../Misc/NEWS:5496
msgid ""
"`Issue #22033 <https://bugs.python.org/22033>`__: Reprs of most Python "
"implemened classes now contain actual class name instead of hardcoded one."
msgstr ""
"`Issue #22033 <https://bugs.python.org/22033>`__: Reprs of most Python "
"implemened classes now contain actual class name instead of hardcoded one."

#: ../../../Misc/NEWS:5499
msgid ""
"`Issue #21947 <https://bugs.python.org/21947>`__: The dis module can now "
"disassemble generator-iterator objects based on their gi_code attribute. "
"Patch by Clement Rouault."
msgstr ""
"`Issue #21947 <https://bugs.python.org/21947>`__: The dis module can now "
"disassemble generator-iterator objects based on their gi_code attribute. "
"Patch by Clement Rouault."

#: ../../../Misc/NEWS:5502
msgid ""
"`Issue #16133 <https://bugs.python.org/16133>`__: The asynchat.async_chat."
"handle_read() method now ignores BlockingIOError exceptions."
msgstr ""
"`Issue #16133 <https://bugs.python.org/16133>`__: The asynchat.async_chat."
"handle_read() method now ignores BlockingIOError exceptions."

#: ../../../Misc/NEWS:5505
msgid ""
"`Issue #22044 <https://bugs.python.org/22044>`__: Fixed premature DECREF in "
"call_tzinfo_method. Patch by Tom Flanagan."
msgstr ""
"`Issue #22044 <https://bugs.python.org/22044>`__: Fixed premature DECREF in "
"call_tzinfo_method. Patch by Tom Flanagan."

#: ../../../Misc/NEWS:5508
msgid ""
"`Issue #19884 <https://bugs.python.org/19884>`__: readline: Disable the meta "
"modifier key if stdout is not a terminal to not write the ANSI sequence ``"
"\"\\033[1034h\"`` into stdout. This sequence is used on some terminal (ex: "
"TERM=xterm-256color\") to enable support of 8 bit characters."
msgstr ""
"`Issue #19884 <https://bugs.python.org/19884>`__: readline: Disable the meta "
"modifier key if stdout is not a terminal to not write the ANSI sequence ``"
"\"\\033[1034h\"`` into stdout. This sequence is used on some terminal (ex: "
"TERM=xterm-256color\") to enable support of 8 bit characters."

#: ../../../Misc/NEWS:5513
msgid ""
"`Issue #4350 <https://bugs.python.org/4350>`__: Removed a number of out-of-"
"dated and non-working for a long time Tkinter methods."
msgstr ""
"`Issue #4350 <https://bugs.python.org/4350>`__: Removed a number of out-of-"
"dated and non-working for a long time Tkinter methods."

#: ../../../Misc/NEWS:5516
msgid ""
"`Issue #6167 <https://bugs.python.org/6167>`__: Scrollbar.activate() now "
"returns the name of active element if the argument is not specified.  "
"Scrollbar.set() now always accepts only 2 arguments."
msgstr ""
"`Issue #6167 <https://bugs.python.org/6167>`__: Scrollbar.activate() now "
"returns the name of active element if the argument is not specified.  "
"Scrollbar.set() now always accepts only 2 arguments."

#: ../../../Misc/NEWS:5520
msgid ""
"`Issue #15275 <https://bugs.python.org/15275>`__: Clean up and speed up the "
"ntpath module."
msgstr ""
"`Issue #15275 <https://bugs.python.org/15275>`__: Clean up and speed up the "
"ntpath module."

#: ../../../Misc/NEWS:5522
msgid ""
"`Issue #21888 <https://bugs.python.org/21888>`__: plistlib's load() and "
"loads() now work if the fmt parameter is specified."
msgstr ""
"`Issue #21888 <https://bugs.python.org/21888>`__: plistlib's load() and "
"loads() now work if the fmt parameter is specified."

#: ../../../Misc/NEWS:5525
msgid ""
"`Issue #22032 <https://bugs.python.org/22032>`__: __qualname__ instead of "
"__name__ is now always used to format fully qualified class names of Python "
"implemented classes."
msgstr ""
"`Issue #22032 <https://bugs.python.org/22032>`__: __qualname__ instead of "
"__name__ is now always used to format fully qualified class names of Python "
"implemented classes."

#: ../../../Misc/NEWS:5528
msgid ""
"`Issue #22031 <https://bugs.python.org/22031>`__: Reprs now always use "
"hexadecimal format with the \"0x\" prefix when contain an id in form \" at "
"0x...\"."
msgstr ""
"`Issue #22031 <https://bugs.python.org/22031>`__: Reprs now always use "
"hexadecimal format with the \"0x\" prefix when contain an id in form \" at "
"0x...\"."

#: ../../../Misc/NEWS:5531
msgid ""
"`Issue #22018 <https://bugs.python.org/22018>`__: signal.set_wakeup_fd() now "
"raises an OSError instead of a ValueError on ``fstat()`` failure."
msgstr ""
"`Issue #22018 <https://bugs.python.org/22018>`__: signal.set_wakeup_fd() now "
"raises an OSError instead of a ValueError on ``fstat()`` failure."

#: ../../../Misc/NEWS:5534
msgid ""
"`Issue #21044 <https://bugs.python.org/21044>`__: tarfile.open() now handles "
"fileobj with an integer 'name' attribute.  Based on patch by Antoine Pietri."
msgstr ""
"`Issue #21044 <https://bugs.python.org/21044>`__: tarfile.open() now handles "
"fileobj with an integer 'name' attribute.  Based on patch by Antoine Pietri."

#: ../../../Misc/NEWS:5537
msgid ""
"`Issue #21966 <https://bugs.python.org/21966>`__: Respect -q command-line "
"option when code module is ran."
msgstr ""
"`Issue #21966 <https://bugs.python.org/21966>`__: Respect -q command-line "
"option when code module is ran."

#: ../../../Misc/NEWS:5539
msgid ""
"`Issue #19076 <https://bugs.python.org/19076>`__: Don't pass the redundant "
"'file' argument to self.error()."
msgstr ""
"`Issue #19076 <https://bugs.python.org/19076>`__: Don't pass the redundant "
"'file' argument to self.error()."

#: ../../../Misc/NEWS:5541
msgid ""
"`Issue #16382 <https://bugs.python.org/16382>`__: Improve exception message "
"of warnings.warn() for bad category. Initial patch by Phil Elson."
msgstr ""
"`Issue #16382 <https://bugs.python.org/16382>`__: Improve exception message "
"of warnings.warn() for bad category. Initial patch by Phil Elson."

#: ../../../Misc/NEWS:5544
msgid ""
"`Issue #21932 <https://bugs.python.org/21932>`__: os.read() now uses a :c:"
"func:`Py_ssize_t` type instead of :c:type:`int` for the size to support "
"reading more than 2 GB at once. On Windows, the size is truncted to INT_MAX. "
"As any call to os.read(), the OS may read less bytes than the number of "
"requested bytes."
msgstr ""
"`Issue #21932 <https://bugs.python.org/21932>`__: os.read() now uses a :c:"
"func:`Py_ssize_t` type instead of :c:type:`int` for the size to support "
"reading more than 2 GB at once. On Windows, the size is truncted to INT_MAX. "
"As any call to os.read(), the OS may read less bytes than the number of "
"requested bytes."

#: ../../../Misc/NEWS:5549
msgid ""
"`Issue #21942 <https://bugs.python.org/21942>`__: Fixed source file viewing "
"in pydoc's server mode on Windows."
msgstr ""
"`Issue #21942 <https://bugs.python.org/21942>`__: Fixed source file viewing "
"in pydoc's server mode on Windows."

#: ../../../Misc/NEWS:5551
msgid ""
"`Issue #11259 <https://bugs.python.org/11259>`__: asynchat.async_chat()."
"set_terminator() now raises a ValueError if the number of received bytes is "
"negative."
msgstr ""
"`Issue #11259 <https://bugs.python.org/11259>`__: asynchat.async_chat()."
"set_terminator() now raises a ValueError if the number of received bytes is "
"negative."

#: ../../../Misc/NEWS:5554
msgid ""
"`Issue #12523 <https://bugs.python.org/12523>`__: asynchat.async_chat.push() "
"now raises a TypeError if it doesn't get a bytes string"
msgstr ""
"`Issue #12523 <https://bugs.python.org/12523>`__: asynchat.async_chat.push() "
"now raises a TypeError if it doesn't get a bytes string"

#: ../../../Misc/NEWS:5557
msgid ""
"`Issue #21707 <https://bugs.python.org/21707>`__: Add missing kwonlyargcount "
"argument to ModuleFinder.replace_paths_in_code()."
msgstr ""
"`Issue #21707 <https://bugs.python.org/21707>`__: Add missing kwonlyargcount "
"argument to ModuleFinder.replace_paths_in_code()."

#: ../../../Misc/NEWS:5560
msgid ""
"`Issue #20639 <https://bugs.python.org/20639>`__: calling Path."
"with_suffix('') allows removing the suffix again.  Patch by July Tikhonov."
msgstr ""
"`Issue #20639 <https://bugs.python.org/20639>`__: calling Path."
"with_suffix('') allows removing the suffix again.  Patch by July Tikhonov."

#: ../../../Misc/NEWS:5563
msgid ""
"`Issue #21714 <https://bugs.python.org/21714>`__: Disallow the construction "
"of invalid paths using Path.with_name().  Original patch by Antony Lee."
msgstr ""
"`Issue #21714 <https://bugs.python.org/21714>`__: Disallow the construction "
"of invalid paths using Path.with_name().  Original patch by Antony Lee."

#: ../../../Misc/NEWS:5566
msgid ""
"`Issue #15014 <https://bugs.python.org/15014>`__: Added 'auth' method to "
"smtplib to make implementing auth mechanisms simpler, and used it internally "
"in the login method."
msgstr ""
"`Issue #15014 <https://bugs.python.org/15014>`__: Added 'auth' method to "
"smtplib to make implementing auth mechanisms simpler, and used it internally "
"in the login method."

#: ../../../Misc/NEWS:5569
msgid ""
"`Issue #21151 <https://bugs.python.org/21151>`__: Fixed a segfault in the "
"winreg module when ``None`` is passed as a ``REG_BINARY`` value to "
"SetValueEx.  Patch by John Ehresman."
msgstr ""
"`Issue #21151 <https://bugs.python.org/21151>`__: Fixed a segfault in the "
"winreg module when ``None`` is passed as a ``REG_BINARY`` value to "
"SetValueEx.  Patch by John Ehresman."

#: ../../../Misc/NEWS:5572
msgid ""
"`Issue #21090 <https://bugs.python.org/21090>`__: io.FileIO.readall() does "
"not ignore I/O errors anymore. Before, it ignored I/O errors if at least the "
"first C call read() succeed."
msgstr ""
"`Issue #21090 <https://bugs.python.org/21090>`__: io.FileIO.readall() does "
"not ignore I/O errors anymore. Before, it ignored I/O errors if at least the "
"first C call read() succeed."

#: ../../../Misc/NEWS:5575
msgid ""
"`Issue #5800 <https://bugs.python.org/5800>`__: headers parameter of wsgiref."
"headers.Headers is now optional. Initial patch by Pablo Torres Navarrete and "
"SilentGhost."
msgstr ""
"`Issue #5800 <https://bugs.python.org/5800>`__: headers parameter of wsgiref."
"headers.Headers is now optional. Initial patch by Pablo Torres Navarrete and "
"SilentGhost."

#: ../../../Misc/NEWS:5578
msgid ""
"`Issue #21781 <https://bugs.python.org/21781>`__: ssl.RAND_add() now "
"supports strings longer than 2 GB."
msgstr ""
"`Issue #21781 <https://bugs.python.org/21781>`__: ssl.RAND_add() now "
"supports strings longer than 2 GB."

#: ../../../Misc/NEWS:5580
msgid ""
"`Issue #21679 <https://bugs.python.org/21679>`__: Prevent extraneous fstat() "
"calls during open().  Patch by Bohuslav Kabrda."
msgstr ""
"`Issue #21679 <https://bugs.python.org/21679>`__: Prevent extraneous fstat() "
"calls during open().  Patch by Bohuslav Kabrda."

#: ../../../Misc/NEWS:5583
msgid ""
"`Issue #21863 <https://bugs.python.org/21863>`__: cProfile now displays the "
"module name of C extension functions, in addition to their own name."
msgstr ""
"`Issue #21863 <https://bugs.python.org/21863>`__: cProfile now displays the "
"module name of C extension functions, in addition to their own name."

#: ../../../Misc/NEWS:5586
msgid ""
"`Issue #11453 <https://bugs.python.org/11453>`__: asyncore: emit a "
"ResourceWarning when an unclosed file_wrapper object is destroyed. The "
"destructor now closes the file if needed. The close() method can now be "
"called twice: the second call does nothing."
msgstr ""
"`Issue #11453 <https://bugs.python.org/11453>`__: asyncore: emit a "
"ResourceWarning when an unclosed file_wrapper object is destroyed. The "
"destructor now closes the file if needed. The close() method can now be "
"called twice: the second call does nothing."

#: ../../../Misc/NEWS:5590
msgid ""
"`Issue #21858 <https://bugs.python.org/21858>`__: Better handling of Python "
"exceptions in the sqlite3 module."
msgstr ""
"`Issue #21858 <https://bugs.python.org/21858>`__: Better handling of Python "
"exceptions in the sqlite3 module."

#: ../../../Misc/NEWS:5592
msgid ""
"`Issue #21476 <https://bugs.python.org/21476>`__: Make sure the email.parser."
"BytesParser TextIOWrapper is discarded after parsing, so the input file "
"isn't unexpectedly closed."
msgstr ""
"`Issue #21476 <https://bugs.python.org/21476>`__: Make sure the email.parser."
"BytesParser TextIOWrapper is discarded after parsing, so the input file "
"isn't unexpectedly closed."

#: ../../../Misc/NEWS:5595
msgid ""
"`Issue #20295 <https://bugs.python.org/20295>`__: imghdr now recognizes "
"OpenEXR format images."
msgstr ""
"`Issue #20295 <https://bugs.python.org/20295>`__: imghdr now recognizes "
"OpenEXR format images."

#: ../../../Misc/NEWS:5597
msgid ""
"`Issue #21729 <https://bugs.python.org/21729>`__: Used the \"with\" "
"statement in the dbm.dumb module to ensure files closing.  Patch by Claudiu "
"Popa."
msgstr ""
"`Issue #21729 <https://bugs.python.org/21729>`__: Used the \"with\" "
"statement in the dbm.dumb module to ensure files closing.  Patch by Claudiu "
"Popa."

#: ../../../Misc/NEWS:5600
msgid ""
"`Issue #21491 <https://bugs.python.org/21491>`__: socketserver: Fix a race "
"condition in child processes reaping."
msgstr ""
"`Issue #21491 <https://bugs.python.org/21491>`__: socketserver: Fix a race "
"condition in child processes reaping."

#: ../../../Misc/NEWS:5602
msgid ""
"`Issue #21719 <https://bugs.python.org/21719>`__: Added the "
"``st_file_attributes`` field to os.stat_result on Windows."
msgstr ""
"`Issue #21719 <https://bugs.python.org/21719>`__: Added the "
"``st_file_attributes`` field to os.stat_result on Windows."

#: ../../../Misc/NEWS:5605
msgid ""
"`Issue #21832 <https://bugs.python.org/21832>`__: Require named tuple inputs "
"to be exact strings."
msgstr ""
"`Issue #21832 <https://bugs.python.org/21832>`__: Require named tuple inputs "
"to be exact strings."

#: ../../../Misc/NEWS:5607
msgid ""
"`Issue #21722 <https://bugs.python.org/21722>`__: The distutils \"upload\" "
"command now exits with a non-zero return code when uploading fails.  Patch "
"by Martin Dengler."
msgstr ""
"`Issue #21722 <https://bugs.python.org/21722>`__: The distutils \"upload\" "
"command now exits with a non-zero return code when uploading fails.  Patch "
"by Martin Dengler."

#: ../../../Misc/NEWS:5610
msgid ""
"`Issue #21723 <https://bugs.python.org/21723>`__: asyncio.Queue: support any "
"type of number (ex: float) for the maximum size. Patch written by Vajrasky "
"Kok."
msgstr ""
"`Issue #21723 <https://bugs.python.org/21723>`__: asyncio.Queue: support any "
"type of number (ex: float) for the maximum size. Patch written by Vajrasky "
"Kok."

#: ../../../Misc/NEWS:5613
msgid ""
"`Issue #21711 <https://bugs.python.org/21711>`__: support for \"site-python"
"\" directories has now been removed from the site module (it was deprecated "
"in 3.4)."
msgstr ""
"`Issue #21711 <https://bugs.python.org/21711>`__: support for \"site-python"
"\" directories has now been removed from the site module (it was deprecated "
"in 3.4)."

#: ../../../Misc/NEWS:5616
msgid ""
"`Issue #17552 <https://bugs.python.org/17552>`__: new socket.sendfile() "
"method allowing a file to be sent over a socket by using high-performance os."
"sendfile() on UNIX. Patch by Giampaolo Rodola'."
msgstr ""
"`Issue #17552 <https://bugs.python.org/17552>`__: new socket.sendfile() "
"method allowing a file to be sent over a socket by using high-performance os."
"sendfile() on UNIX. Patch by Giampaolo Rodola'."

#: ../../../Misc/NEWS:5620
msgid ""
"`Issue #18039 <https://bugs.python.org/18039>`__: dbm.dump.open() now always "
"creates a new database when the flag has the value 'n'.  Patch by Claudiu "
"Popa."
msgstr ""
"`Issue #18039 <https://bugs.python.org/18039>`__: dbm.dump.open() now always "
"creates a new database when the flag has the value 'n'.  Patch by Claudiu "
"Popa."

#: ../../../Misc/NEWS:5623
msgid ""
"`Issue #21326 <https://bugs.python.org/21326>`__: Add a new is_closed() "
"method to asyncio.BaseEventLoop. run_forever() and run_until_complete() "
"methods of asyncio.BaseEventLoop now raise an exception if the event loop "
"was closed."
msgstr ""
"`Issue #21326 <https://bugs.python.org/21326>`__: Add a new is_closed() "
"method to asyncio.BaseEventLoop. run_forever() and run_until_complete() "
"methods of asyncio.BaseEventLoop now raise an exception if the event loop "
"was closed."

#: ../../../Misc/NEWS:5627
msgid ""
"`Issue #21766 <https://bugs.python.org/21766>`__: Prevent a security hole in "
"CGIHTTPServer by URL unquoting paths before checking for a CGI script at "
"that path."
msgstr ""
"`Issue #21766 <https://bugs.python.org/21766>`__: Prevent a security hole in "
"CGIHTTPServer by URL unquoting paths before checking for a CGI script at "
"that path."

#: ../../../Misc/NEWS:5630
msgid ""
"`Issue #21310 <https://bugs.python.org/21310>`__: Fixed possible resource "
"leak in failed open()."
msgstr ""
"`Issue #21310 <https://bugs.python.org/21310>`__: Fixed possible resource "
"leak in failed open()."

#: ../../../Misc/NEWS:5632
msgid ""
"`Issue #21256 <https://bugs.python.org/21256>`__: Printout of keyword args "
"should be in deterministic order in a mock function call. This will help to "
"write better doctests."
msgstr ""
"`Issue #21256 <https://bugs.python.org/21256>`__: Printout of keyword args "
"should be in deterministic order in a mock function call. This will help to "
"write better doctests."

#: ../../../Misc/NEWS:5635
msgid ""
"`Issue #21677 <https://bugs.python.org/21677>`__: Fixed chaining "
"nonnormalized exceptions in io close() methods."
msgstr ""
"`Issue #21677 <https://bugs.python.org/21677>`__: Fixed chaining "
"nonnormalized exceptions in io close() methods."

#: ../../../Misc/NEWS:5637
msgid ""
"`Issue #11709 <https://bugs.python.org/11709>`__: Fix the pydoc.help "
"function to not fail when sys.stdin is not a valid file."
msgstr ""
"`Issue #11709 <https://bugs.python.org/11709>`__: Fix the pydoc.help "
"function to not fail when sys.stdin is not a valid file."

#: ../../../Misc/NEWS:5640
msgid ""
"`Issue #21515 <https://bugs.python.org/21515>`__: tempfile.TemporaryFile now "
"uses os.O_TMPFILE flag is available."
msgstr ""
"`Issue #21515 <https://bugs.python.org/21515>`__: tempfile.TemporaryFile now "
"uses os.O_TMPFILE flag is available."

#: ../../../Misc/NEWS:5642
msgid ""
"`Issue #13223 <https://bugs.python.org/13223>`__: Fix pydoc.writedoc so that "
"the HTML documentation for methods that use 'self' in the example code is "
"generated correctly."
msgstr ""
"`Issue #13223 <https://bugs.python.org/13223>`__: Fix pydoc.writedoc so that "
"the HTML documentation for methods that use 'self' in the example code is "
"generated correctly."

#: ../../../Misc/NEWS:5645
msgid ""
"`Issue #21463 <https://bugs.python.org/21463>`__: In urllib.request, fix "
"pruning of the FTP cache."
msgstr ""
"`Issue #21463 <https://bugs.python.org/21463>`__: In urllib.request, fix "
"pruning of the FTP cache."

#: ../../../Misc/NEWS:5647
msgid ""
"`Issue #21618 <https://bugs.python.org/21618>`__: The subprocess module "
"could fail to close open fds that were inherited by the calling process and "
"already higher than POSIX resource limits would otherwise allow.  On systems "
"with a functioning /proc/self/fd or /dev/fd interface the max is now ignored "
"and all fds are closed."
msgstr ""
"`Issue #21618 <https://bugs.python.org/21618>`__: The subprocess module "
"could fail to close open fds that were inherited by the calling process and "
"already higher than POSIX resource limits would otherwise allow.  On systems "
"with a functioning /proc/self/fd or /dev/fd interface the max is now ignored "
"and all fds are closed."

#: ../../../Misc/NEWS:5652
msgid ""
"`Issue #20383 <https://bugs.python.org/20383>`__: Introduce importlib.util."
"module_from_spec() as the preferred way to create a new module."
msgstr ""
"`Issue #20383 <https://bugs.python.org/20383>`__: Introduce importlib.util."
"module_from_spec() as the preferred way to create a new module."

#: ../../../Misc/NEWS:5655
msgid ""
"`Issue #21552 <https://bugs.python.org/21552>`__: Fixed possible integer "
"overflow of too long string lengths in the tkinter module on 64-bit "
"platforms."
msgstr ""
"`Issue #21552 <https://bugs.python.org/21552>`__: Fixed possible integer "
"overflow of too long string lengths in the tkinter module on 64-bit "
"platforms."

#: ../../../Misc/NEWS:5658
msgid ""
"`Issue #14315 <https://bugs.python.org/14315>`__: The zipfile module now "
"ignores extra fields in the central directory that are too short to be "
"parsed instead of letting a struct.unpack error bubble up as this \"bad data"
"\" appears in many real world zip files in the wild and is ignored by other "
"zip tools."
msgstr ""
"`Issue #14315 <https://bugs.python.org/14315>`__: The zipfile module now "
"ignores extra fields in the central directory that are too short to be "
"parsed instead of letting a struct.unpack error bubble up as this \"bad data"
"\" appears in many real world zip files in the wild and is ignored by other "
"zip tools."

#: ../../../Misc/NEWS:5663
msgid ""
"`Issue #13742 <https://bugs.python.org/13742>`__: Added \"key\" and \"reverse"
"\" parameters to heapq.merge(). (First draft of patch contributed by Simon "
"Sapin.)"
msgstr ""
"`Issue #13742 <https://bugs.python.org/13742>`__: Added \"key\" and \"reverse"
"\" parameters to heapq.merge(). (First draft of patch contributed by Simon "
"Sapin.)"

#: ../../../Misc/NEWS:5666
msgid ""
"`Issue #21402 <https://bugs.python.org/21402>`__: tkinter.ttk now works when "
"default root window is not set."
msgstr ""
"`Issue #21402 <https://bugs.python.org/21402>`__: tkinter.ttk now works when "
"default root window is not set."

#: ../../../Misc/NEWS:5668
msgid ""
"`Issue #3015 <https://bugs.python.org/3015>`__: _tkinter.create() now "
"creates tkapp object with wantobject=1 by default."
msgstr ""
"`Issue #3015 <https://bugs.python.org/3015>`__: _tkinter.create() now "
"creates tkapp object with wantobject=1 by default."

#: ../../../Misc/NEWS:5671
msgid ""
"`Issue #10203 <https://bugs.python.org/10203>`__: sqlite3.Row now truly "
"supports sequence protocol.  In particular it supports reverse() and "
"negative indices.  Original patch by Claudiu Popa."
msgstr ""
"`Issue #10203 <https://bugs.python.org/10203>`__: sqlite3.Row now truly "
"supports sequence protocol.  In particular it supports reverse() and "
"negative indices.  Original patch by Claudiu Popa."

#: ../../../Misc/NEWS:5674
msgid ""
"`Issue #18807 <https://bugs.python.org/18807>`__: If copying (no symlinks) "
"specified for a venv, then the python interpreter aliases (python, python3) "
"are now created by copying rather than symlinking."
msgstr ""
"`Issue #18807 <https://bugs.python.org/18807>`__: If copying (no symlinks) "
"specified for a venv, then the python interpreter aliases (python, python3) "
"are now created by copying rather than symlinking."

#: ../../../Misc/NEWS:5678
msgid ""
"`Issue #20197 <https://bugs.python.org/20197>`__: Added support for the WebP "
"image type in the imghdr module. Patch by Fabrice Aneche and Claudiu Popa."
msgstr ""
"`Issue #20197 <https://bugs.python.org/20197>`__: Added support for the WebP "
"image type in the imghdr module. Patch by Fabrice Aneche and Claudiu Popa."

#: ../../../Misc/NEWS:5681
msgid ""
"`Issue #21513 <https://bugs.python.org/21513>`__: Speedup some properties of "
"IP addresses (IPv4Address, IPv6Address) such as .is_private or .is_multicast."
msgstr ""
"`Issue #21513 <https://bugs.python.org/21513>`__: Speedup some properties of "
"IP addresses (IPv4Address, IPv6Address) such as .is_private or .is_multicast."

#: ../../../Misc/NEWS:5684
msgid ""
"`Issue #21137 <https://bugs.python.org/21137>`__: Improve the repr for "
"threading.Lock() and its variants by showing the \"locked\" or \"unlocked\" "
"status.  Patch by Berker Peksag."
msgstr ""
"`Issue #21137 <https://bugs.python.org/21137>`__: Improve the repr for "
"threading.Lock() and its variants by showing the \"locked\" or \"unlocked\" "
"status.  Patch by Berker Peksag."

#: ../../../Misc/NEWS:5687
msgid ""
"`Issue #21538 <https://bugs.python.org/21538>`__: The plistlib module now "
"supports loading of binary plist files when reference or offset size is not "
"a power of two."
msgstr ""
"`Issue #21538 <https://bugs.python.org/21538>`__: The plistlib module now "
"supports loading of binary plist files when reference or offset size is not "
"a power of two."

#: ../../../Misc/NEWS:5690
msgid ""
"`Issue #21455 <https://bugs.python.org/21455>`__: Add a default backlog to "
"socket.listen()."
msgstr ""
"`Issue #21455 <https://bugs.python.org/21455>`__: Add a default backlog to "
"socket.listen()."

#: ../../../Misc/NEWS:5692
msgid ""
"`Issue #21525 <https://bugs.python.org/21525>`__: Most Tkinter methods which "
"accepted tuples now accept lists too."
msgstr ""
"`Issue #21525 <https://bugs.python.org/21525>`__: Most Tkinter methods which "
"accepted tuples now accept lists too."

#: ../../../Misc/NEWS:5694
msgid ""
"`Issue #22166 <https://bugs.python.org/22166>`__: With the assistance of a "
"new internal _codecs._forget_codec helping function, test_codecs now clears "
"the encoding caches to avoid the appearance of a reference leak"
msgstr ""
"`Issue #22166 <https://bugs.python.org/22166>`__: With the assistance of a "
"new internal _codecs._forget_codec helping function, test_codecs now clears "
"the encoding caches to avoid the appearance of a reference leak"

#: ../../../Misc/NEWS:5698
msgid ""
"`Issue #22236 <https://bugs.python.org/22236>`__: Tkinter tests now don't "
"reuse default root window.  New root window is created for every test class."
msgstr ""
"`Issue #22236 <https://bugs.python.org/22236>`__: Tkinter tests now don't "
"reuse default root window.  New root window is created for every test class."

#: ../../../Misc/NEWS:5701
msgid ""
"`Issue #10744 <https://bugs.python.org/10744>`__: Fix PEP 3118 format "
"strings on ctypes objects with a nontrivial shape."
msgstr ""
"`Issue #10744 <https://bugs.python.org/10744>`__: Fix PEP 3118 format "
"strings on ctypes objects with a nontrivial shape."

#: ../../../Misc/NEWS:5704
msgid ""
"`Issue #20826 <https://bugs.python.org/20826>`__: Optimize ipaddress."
"collapse_addresses()."
msgstr ""
"`Issue #20826 <https://bugs.python.org/20826>`__: Optimize ipaddress."
"collapse_addresses()."

#: ../../../Misc/NEWS:5706
msgid ""
"`Issue #21487 <https://bugs.python.org/21487>`__: Optimize ipaddress."
"summarize_address_range() and ipaddress.{IPv4Network,IPv6Network}.subnets()."
msgstr ""
"`Issue #21487 <https://bugs.python.org/21487>`__: Optimize ipaddress."
"summarize_address_range() and ipaddress.{IPv4Network,IPv6Network}.subnets()."

#: ../../../Misc/NEWS:5709
msgid ""
"`Issue #21486 <https://bugs.python.org/21486>`__: Optimize parsing of "
"netmasks in ipaddress.IPv4Network and ipaddress.IPv6Network."
msgstr ""
"`Issue #21486 <https://bugs.python.org/21486>`__: Optimize parsing of "
"netmasks in ipaddress.IPv4Network and ipaddress.IPv6Network."

#: ../../../Misc/NEWS:5712
msgid ""
"`Issue #13916 <https://bugs.python.org/13916>`__: Disallowed the "
"surrogatepass error handler for non UTF-\\* encodings."
msgstr ""
"`Issue #13916 <https://bugs.python.org/13916>`__: Disallowed the "
"surrogatepass error handler for non UTF-\\* encodings."

#: ../../../Misc/NEWS:5715
msgid ""
"`Issue #20998 <https://bugs.python.org/20998>`__: Fixed re.fullmatch() of "
"repeated single character pattern with ignore case.  Original patch by "
"Matthew Barnett."
msgstr ""
"`Issue #20998 <https://bugs.python.org/20998>`__: Fixed re.fullmatch() of "
"repeated single character pattern with ignore case.  Original patch by "
"Matthew Barnett."

#: ../../../Misc/NEWS:5718
msgid ""
"`Issue #21075 <https://bugs.python.org/21075>`__: fileinput.FileInput now "
"reads bytes from standard stream if binary mode is specified.  Patch by Sam "
"Kimbrel."
msgstr ""
"`Issue #21075 <https://bugs.python.org/21075>`__: fileinput.FileInput now "
"reads bytes from standard stream if binary mode is specified.  Patch by Sam "
"Kimbrel."

#: ../../../Misc/NEWS:5721
msgid ""
"`Issue #19775 <https://bugs.python.org/19775>`__: Add a samefile() method to "
"pathlib Path objects.  Initial patch by Vajrasky Kok."
msgstr ""
"`Issue #19775 <https://bugs.python.org/19775>`__: Add a samefile() method to "
"pathlib Path objects.  Initial patch by Vajrasky Kok."

#: ../../../Misc/NEWS:5724
msgid ""
"`Issue #21226 <https://bugs.python.org/21226>`__: Set up modules properly in "
"PyImport_ExecCodeModuleObject (and friends)."
msgstr ""
"`Issue #21226 <https://bugs.python.org/21226>`__: Set up modules properly in "
"PyImport_ExecCodeModuleObject (and friends)."

#: ../../../Misc/NEWS:5727
msgid ""
"`Issue #21398 <https://bugs.python.org/21398>`__: Fix a unicode error in the "
"pydoc pager when the documentation contains characters not encodable to the "
"stdout encoding."
msgstr ""
"`Issue #21398 <https://bugs.python.org/21398>`__: Fix a unicode error in the "
"pydoc pager when the documentation contains characters not encodable to the "
"stdout encoding."

#: ../../../Misc/NEWS:5730
msgid ""
"`Issue #16531 <https://bugs.python.org/16531>`__: ipaddress.IPv4Network and "
"ipaddress.IPv6Network now accept an (address, netmask) tuple argument, so as "
"to easily construct network objects from existing addresses."
msgstr ""
"`Issue #16531 <https://bugs.python.org/16531>`__: ipaddress.IPv4Network and "
"ipaddress.IPv6Network now accept an (address, netmask) tuple argument, so as "
"to easily construct network objects from existing addresses."

#: ../../../Misc/NEWS:5734
msgid ""
"`Issue #21156 <https://bugs.python.org/21156>`__: importlib.abc."
"InspectLoader.source_to_code() is now a staticmethod."
msgstr ""
"`Issue #21156 <https://bugs.python.org/21156>`__: importlib.abc."
"InspectLoader.source_to_code() is now a staticmethod."

#: ../../../Misc/NEWS:5737
msgid ""
"`Issue #21424 <https://bugs.python.org/21424>`__: Simplified and optimized "
"heaqp.nlargest() and nmsmallest() to make fewer tuple comparisons."
msgstr ""
"`Issue #21424 <https://bugs.python.org/21424>`__: Simplified and optimized "
"heaqp.nlargest() and nmsmallest() to make fewer tuple comparisons."

#: ../../../Misc/NEWS:5740
msgid ""
"`Issue #21396 <https://bugs.python.org/21396>`__: Fix TextIOWrapper(..., "
"write_through=True) to not force a flush() on the underlying binary stream.  "
"Patch by akira."
msgstr ""
"`Issue #21396 <https://bugs.python.org/21396>`__: Fix TextIOWrapper(..., "
"write_through=True) to not force a flush() on the underlying binary stream.  "
"Patch by akira."

#: ../../../Misc/NEWS:5743
msgid ""
"`Issue #18314 <https://bugs.python.org/18314>`__: Unlink now removes "
"junctions on Windows. Patch by Kim Gr√§sman"
msgstr ""
"`Issue #18314 <https://bugs.python.org/18314>`__: Unlink now removes "
"junctions on Windows. Patch by Kim Gr√§sman"

#: ../../../Misc/NEWS:5745
msgid ""
"`Issue #21088 <https://bugs.python.org/21088>`__: Bugfix for curses.window."
"addch() regression in 3.4.0. In porting to Argument Clinic, the first two "
"arguments were reversed."
msgstr ""
"`Issue #21088 <https://bugs.python.org/21088>`__: Bugfix for curses.window."
"addch() regression in 3.4.0. In porting to Argument Clinic, the first two "
"arguments were reversed."

#: ../../../Misc/NEWS:5748
msgid ""
"`Issue #21407 <https://bugs.python.org/21407>`__: _decimal: The module now "
"supports function signatures."
msgstr ""
"`Issue #21407 <https://bugs.python.org/21407>`__: _decimal: The module now "
"supports function signatures."

#: ../../../Misc/NEWS:5750
msgid ""
"`Issue #10650 <https://bugs.python.org/10650>`__: Remove the non-standard "
"'watchexp' parameter from the Decimal.quantize() method in the Python "
"version.  It had never been present in the C version."
msgstr ""
"`Issue #10650 <https://bugs.python.org/10650>`__: Remove the non-standard "
"'watchexp' parameter from the Decimal.quantize() method in the Python "
"version.  It had never been present in the C version."

#: ../../../Misc/NEWS:5754
msgid ""
"`Issue #21469 <https://bugs.python.org/21469>`__: Reduced the risk of false "
"positives in robotparser by checking to make sure that robots.txt has been "
"read or does not exist prior to returning True in can_fetch()."
msgstr ""
"`Issue #21469 <https://bugs.python.org/21469>`__: Reduced the risk of false "
"positives in robotparser by checking to make sure that robots.txt has been "
"read or does not exist prior to returning True in can_fetch()."

#: ../../../Misc/NEWS:5758
msgid ""
"`Issue #19414 <https://bugs.python.org/19414>`__: Have the OrderedDict mark "
"deleted links as unusable. This gives an early failure if the link is "
"deleted during iteration."
msgstr ""
"`Issue #19414 <https://bugs.python.org/19414>`__: Have the OrderedDict mark "
"deleted links as unusable. This gives an early failure if the link is "
"deleted during iteration."

#: ../../../Misc/NEWS:5761
msgid ""
"`Issue #21421 <https://bugs.python.org/21421>`__: Add __slots__ to the "
"MappingViews ABC. Patch by Josh Rosenberg."
msgstr ""
"`Issue #21421 <https://bugs.python.org/21421>`__: Add __slots__ to the "
"MappingViews ABC. Patch by Josh Rosenberg."

#: ../../../Misc/NEWS:5764
msgid ""
"`Issue #21101 <https://bugs.python.org/21101>`__: Eliminate double hashing "
"in the C speed-up code for collections.Counter()."
msgstr ""
"`Issue #21101 <https://bugs.python.org/21101>`__: Eliminate double hashing "
"in the C speed-up code for collections.Counter()."

#: ../../../Misc/NEWS:5767
msgid ""
"`Issue #21321 <https://bugs.python.org/21321>`__: itertools.islice() now "
"releases the reference to the source iterator when the slice is exhausted.  "
"Patch by Anton Afanasyev."
msgstr ""
"`Issue #21321 <https://bugs.python.org/21321>`__: itertools.islice() now "
"releases the reference to the source iterator when the slice is exhausted.  "
"Patch by Anton Afanasyev."

#: ../../../Misc/NEWS:5770
msgid ""
"`Issue #21057 <https://bugs.python.org/21057>`__: TextIOWrapper now allows "
"the underlying binary stream's read() or read1() method to return an "
"arbitrary bytes-like object (such as a memoryview).  Patch by Nikolaus Rath."
msgstr ""
"`Issue #21057 <https://bugs.python.org/21057>`__: TextIOWrapper now allows "
"the underlying binary stream's read() or read1() method to return an "
"arbitrary bytes-like object (such as a memoryview).  Patch by Nikolaus Rath."

#: ../../../Misc/NEWS:5774
msgid ""
"`Issue #20951 <https://bugs.python.org/20951>`__: SSLSocket.send() now "
"raises either SSLWantReadError or SSLWantWriteError on a non-blocking socket "
"if the operation would block. Previously, it would return 0.  Patch by "
"Nikolaus Rath."
msgstr ""
"`Issue #20951 <https://bugs.python.org/20951>`__: SSLSocket.send() now "
"raises either SSLWantReadError or SSLWantWriteError on a non-blocking socket "
"if the operation would block. Previously, it would return 0.  Patch by "
"Nikolaus Rath."

#: ../../../Misc/NEWS:5778
msgid ""
"`Issue #13248 <https://bugs.python.org/13248>`__: removed previously "
"deprecated asyncore.dispatcher __getattr__ cheap inheritance hack."
msgstr ""
"`Issue #13248 <https://bugs.python.org/13248>`__: removed previously "
"deprecated asyncore.dispatcher __getattr__ cheap inheritance hack."

#: ../../../Misc/NEWS:5781
msgid ""
"`Issue #9815 <https://bugs.python.org/9815>`__: assertRaises now tries to "
"clear references to local variables in the exception's traceback."
msgstr ""
"`Issue #9815 <https://bugs.python.org/9815>`__: assertRaises now tries to "
"clear references to local variables in the exception's traceback."

#: ../../../Misc/NEWS:5784
msgid ""
"`Issue #19940 <https://bugs.python.org/19940>`__: ssl.cert_time_to_seconds() "
"now interprets the given time string in the UTC timezone (as specified in "
"RFC 5280), not the local timezone."
msgstr ""
"`Issue #19940 <https://bugs.python.org/19940>`__: ssl.cert_time_to_seconds() "
"now interprets the given time string in the UTC timezone (as specified in "
"RFC 5280), not the local timezone."

#: ../../../Misc/NEWS:5788
msgid ""
"`Issue #13204 <https://bugs.python.org/13204>`__: Calling sys.flags.__new__ "
"would crash the interpreter, now it raises a TypeError."
msgstr ""
"`Issue #13204 <https://bugs.python.org/13204>`__: Calling sys.flags.__new__ "
"would crash the interpreter, now it raises a TypeError."

#: ../../../Misc/NEWS:5791
msgid ""
"`Issue #19385 <https://bugs.python.org/19385>`__: Make operations on a "
"closed dbm.dumb database always raise the same exception."
msgstr ""
"`Issue #19385 <https://bugs.python.org/19385>`__: Make operations on a "
"closed dbm.dumb database always raise the same exception."

#: ../../../Misc/NEWS:5794
msgid ""
"`Issue #21207 <https://bugs.python.org/21207>`__: Detect when the os.urandom "
"cached fd has been closed or replaced, and open it anew."
msgstr ""
"`Issue #21207 <https://bugs.python.org/21207>`__: Detect when the os.urandom "
"cached fd has been closed or replaced, and open it anew."

#: ../../../Misc/NEWS:5797
msgid ""
"`Issue #21291 <https://bugs.python.org/21291>`__: subprocess's Popen.wait() "
"is now thread safe so that multiple threads may be calling wait() or poll() "
"on a Popen instance at the same time without losing the Popen.returncode "
"value."
msgstr ""
"`Issue #21291 <https://bugs.python.org/21291>`__: subprocess's Popen.wait() "
"is now thread safe so that multiple threads may be calling wait() or poll() "
"on a Popen instance at the same time without losing the Popen.returncode "
"value."

#: ../../../Misc/NEWS:5801
msgid ""
"`Issue #21127 <https://bugs.python.org/21127>`__: Path objects can now be "
"instantiated from str subclass instances (such as ``numpy.str_``)."
msgstr ""
"`Issue #21127 <https://bugs.python.org/21127>`__: Path objects can now be "
"instantiated from str subclass instances (such as ``numpy.str_``)."

#: ../../../Misc/NEWS:5804
msgid ""
"`Issue #15002 <https://bugs.python.org/15002>`__: urllib.response object to "
"use _TemporaryFileWrapper (and _TemporaryFileCloser) facility. Provides a "
"better way to handle file descriptor close. Patch contributed by Christian "
"Theune."
msgstr ""
"`Issue #15002 <https://bugs.python.org/15002>`__: urllib.response object to "
"use _TemporaryFileWrapper (and _TemporaryFileCloser) facility. Provides a "
"better way to handle file descriptor close. Patch contributed by Christian "
"Theune."

#: ../../../Misc/NEWS:5808
msgid ""
"`Issue #12220 <https://bugs.python.org/12220>`__: mindom now raises a custom "
"ValueError indicating it doesn't support spaces in URIs instead of letting a "
"'split' ValueError bubble up."
msgstr ""
"`Issue #12220 <https://bugs.python.org/12220>`__: mindom now raises a custom "
"ValueError indicating it doesn't support spaces in URIs instead of letting a "
"'split' ValueError bubble up."

#: ../../../Misc/NEWS:5811
msgid ""
"`Issue #21068 <https://bugs.python.org/21068>`__: The ssl.PROTOCOL* "
"constants are now enum members."
msgstr ""
"`Issue #21068 <https://bugs.python.org/21068>`__: The ssl.PROTOCOL* "
"constants are now enum members."

#: ../../../Misc/NEWS:5813
msgid ""
"`Issue #21276 <https://bugs.python.org/21276>`__: posixmodule: Don't define "
"USE_XATTRS on KFreeBSD and the Hurd."
msgstr ""
"`Issue #21276 <https://bugs.python.org/21276>`__: posixmodule: Don't define "
"USE_XATTRS on KFreeBSD and the Hurd."

#: ../../../Misc/NEWS:5815
msgid ""
"`Issue #21262 <https://bugs.python.org/21262>`__: New method "
"assert_not_called for Mock. It raises AssertionError if the mock has been "
"called."
msgstr ""
"`Issue #21262 <https://bugs.python.org/21262>`__: New method "
"assert_not_called for Mock. It raises AssertionError if the mock has been "
"called."

#: ../../../Misc/NEWS:5818
msgid ""
"`Issue #21238 <https://bugs.python.org/21238>`__: New keyword argument "
"`unsafe` to Mock. It raises `AttributeError` incase of an attribute "
"startswith assert or assret."
msgstr ""
"`Issue #21238 <https://bugs.python.org/21238>`__: New keyword argument "
"`unsafe` to Mock. It raises `AttributeError` incase of an attribute "
"startswith assert or assret."

#: ../../../Misc/NEWS:5821
msgid ""
"`Issue #20896 <https://bugs.python.org/20896>`__: ssl."
"get_server_certificate() now uses PROTOCOL_SSLv23, not PROTOCOL_SSLv3, for "
"maximum compatibility."
msgstr ""
"`Issue #20896 <https://bugs.python.org/20896>`__: ssl."
"get_server_certificate() now uses PROTOCOL_SSLv23, not PROTOCOL_SSLv3, for "
"maximum compatibility."

#: ../../../Misc/NEWS:5824
msgid ""
"`Issue #21239 <https://bugs.python.org/21239>`__: patch.stopall() didn't "
"work deterministically when the same name was patched more than once."
msgstr ""
"`Issue #21239 <https://bugs.python.org/21239>`__: patch.stopall() didn't "
"work deterministically when the same name was patched more than once."

#: ../../../Misc/NEWS:5827
msgid ""
"`Issue #21203 <https://bugs.python.org/21203>`__: Updated fileConfig and "
"dictConfig to remove inconsistencies. Thanks to Jure Koren for the patch."
msgstr ""
"`Issue #21203 <https://bugs.python.org/21203>`__: Updated fileConfig and "
"dictConfig to remove inconsistencies. Thanks to Jure Koren for the patch."

#: ../../../Misc/NEWS:5830
msgid ""
"`Issue #21222 <https://bugs.python.org/21222>`__: Passing name keyword "
"argument to mock.create_autospec now works."
msgstr ""
"`Issue #21222 <https://bugs.python.org/21222>`__: Passing name keyword "
"argument to mock.create_autospec now works."

#: ../../../Misc/NEWS:5833
msgid ""
"`Issue #21197 <https://bugs.python.org/21197>`__: Add lib64 -> lib symlink "
"in venvs on 64-bit non-OS X POSIX."
msgstr ""
"`Issue #21197 <https://bugs.python.org/21197>`__: Add lib64 -> lib symlink "
"in venvs on 64-bit non-OS X POSIX."

#: ../../../Misc/NEWS:5835
msgid ""
"`Issue #17498 <https://bugs.python.org/17498>`__: Some SMTP servers "
"disconnect after certain errors, violating strict RFC conformance.  Instead "
"of losing the error code when we issue the subsequent RSET, smtplib now "
"returns the error code and defers raising the SMTPServerDisconnected error "
"until the next command is issued."
msgstr ""
"`Issue #17498 <https://bugs.python.org/17498>`__: Some SMTP servers "
"disconnect after certain errors, violating strict RFC conformance.  Instead "
"of losing the error code when we issue the subsequent RSET, smtplib now "
"returns the error code and defers raising the SMTPServerDisconnected error "
"until the next command is issued."

#: ../../../Misc/NEWS:5840
msgid ""
"`Issue #17826 <https://bugs.python.org/17826>`__: setting an iterable "
"side_effect on a mock function created by create_autospec now works. Patch "
"by Kushal Das."
msgstr ""
"`Issue #17826 <https://bugs.python.org/17826>`__: setting an iterable "
"side_effect on a mock function created by create_autospec now works. Patch "
"by Kushal Das."

#: ../../../Misc/NEWS:5843
msgid ""
"`Issue #7776 <https://bugs.python.org/7776>`__: Fix ``Host:`` header and "
"reconnection when using http.client.HTTPConnection.set_tunnel(). Patch by "
"Nikolaus Rath."
msgstr ""
"`Issue #7776 <https://bugs.python.org/7776>`__: Fix ``Host:`` header and "
"reconnection when using http.client.HTTPConnection.set_tunnel(). Patch by "
"Nikolaus Rath."

#: ../../../Misc/NEWS:5846
msgid ""
"`Issue #20968 <https://bugs.python.org/20968>`__: unittest.mock.MagicMock "
"now supports division. Patch by Johannes Baiter."
msgstr ""
"`Issue #20968 <https://bugs.python.org/20968>`__: unittest.mock.MagicMock "
"now supports division. Patch by Johannes Baiter."

#: ../../../Misc/NEWS:5849
msgid ""
"`Issue #21529 <https://bugs.python.org/21529>`__ (CVE-2014-4616): Fix "
"arbitrary memory access in JSONDecoder.raw_decode with a negative second "
"parameter. Bug reported by Guido Vranken."
msgstr ""
"`Issue #21529 <https://bugs.python.org/21529>`__ (CVE-2014-4616): Fix "
"arbitrary memory access in JSONDecoder.raw_decode with a negative second "
"parameter. Bug reported by Guido Vranken."

#: ../../../Misc/NEWS:5853
msgid ""
"`Issue #21169 <https://bugs.python.org/21169>`__: getpass now handles non-"
"ascii characters that the input stream encoding cannot encode by re-encoding "
"using the replace error handler."
msgstr ""
"`Issue #21169 <https://bugs.python.org/21169>`__: getpass now handles non-"
"ascii characters that the input stream encoding cannot encode by re-encoding "
"using the replace error handler."

#: ../../../Misc/NEWS:5857
msgid ""
"`Issue #21171 <https://bugs.python.org/21171>`__: Fixed undocumented filter "
"API of the rot13 codec. Patch by Berker Peksag."
msgstr ""
"`Issue #21171 <https://bugs.python.org/21171>`__: Fixed undocumented filter "
"API of the rot13 codec. Patch by Berker Peksag."

#: ../../../Misc/NEWS:5860
msgid ""
"`Issue #20539 <https://bugs.python.org/20539>`__: Improved math.factorial "
"error message for large positive inputs and changed exception type "
"(OverflowError -> ValueError) for large negative inputs."
msgstr ""
"`Issue #20539 <https://bugs.python.org/20539>`__: Improved math.factorial "
"error message for large positive inputs and changed exception type "
"(OverflowError -> ValueError) for large negative inputs."

#: ../../../Misc/NEWS:5864
msgid ""
"`Issue #21172 <https://bugs.python.org/21172>`__: isinstance check relaxed "
"from dict to collections.Mapping."
msgstr ""
"`Issue #21172 <https://bugs.python.org/21172>`__: isinstance check relaxed "
"from dict to collections.Mapping."

#: ../../../Misc/NEWS:5866
msgid ""
"`Issue #21155 <https://bugs.python.org/21155>`__: asyncio.EventLoop."
"create_unix_server() now raises a ValueError if path and sock are specified "
"at the same time."
msgstr ""
"`Issue #21155 <https://bugs.python.org/21155>`__: asyncio.EventLoop."
"create_unix_server() now raises a ValueError if path and sock are specified "
"at the same time."

#: ../../../Misc/NEWS:5869
msgid ""
"`Issue #21136 <https://bugs.python.org/21136>`__: Avoid unnecessary "
"normalization of Fractions resulting from power and other operations.  Patch "
"by Raymond Hettinger."
msgstr ""
"`Issue #21136 <https://bugs.python.org/21136>`__: Avoid unnecessary "
"normalization of Fractions resulting from power and other operations.  Patch "
"by Raymond Hettinger."

#: ../../../Misc/NEWS:5872
msgid ""
"`Issue #17621 <https://bugs.python.org/17621>`__: Introduce importlib.util."
"LazyLoader."
msgstr ""
"`Issue #17621 <https://bugs.python.org/17621>`__: Introduce importlib.util."
"LazyLoader."

#: ../../../Misc/NEWS:5874
msgid ""
"`Issue #21076 <https://bugs.python.org/21076>`__: signal module constants "
"were turned into enums. Patch by Giampaolo Rodola'."
msgstr ""
"`Issue #21076 <https://bugs.python.org/21076>`__: signal module constants "
"were turned into enums. Patch by Giampaolo Rodola'."

#: ../../../Misc/NEWS:5877
msgid ""
"`Issue #20636 <https://bugs.python.org/20636>`__: Improved the repr of "
"Tkinter widgets."
msgstr ""
"`Issue #20636 <https://bugs.python.org/20636>`__: Improved the repr of "
"Tkinter widgets."

#: ../../../Misc/NEWS:5879
msgid ""
"`Issue #19505 <https://bugs.python.org/19505>`__: The items, keys, and "
"values views of OrderedDict now support reverse iteration using reversed()."
msgstr ""
"`Issue #19505 <https://bugs.python.org/19505>`__: The items, keys, and "
"values views of OrderedDict now support reverse iteration using reversed()."

#: ../../../Misc/NEWS:5882
msgid ""
"`Issue #21149 <https://bugs.python.org/21149>`__: Improved thread-safety in "
"logging cleanup during interpreter shutdown. Thanks to Devin Jeanpierre for "
"the patch."
msgstr ""
"`Issue #21149 <https://bugs.python.org/21149>`__: Improved thread-safety in "
"logging cleanup during interpreter shutdown. Thanks to Devin Jeanpierre for "
"the patch."

#: ../../../Misc/NEWS:5885
msgid ""
"`Issue #21058 <https://bugs.python.org/21058>`__: Fix a leak of file "
"descriptor in :func:`tempfile.NamedTemporaryFile`, close the file descriptor "
"if :func:`io.open` fails"
msgstr ""
"`Issue #21058 <https://bugs.python.org/21058>`__: Fix a leak of file "
"descriptor in :func:`tempfile.NamedTemporaryFile`, close the file descriptor "
"if :func:`io.open` fails"

#: ../../../Misc/NEWS:5889
msgid ""
"`Issue #21200 <https://bugs.python.org/21200>`__: Return None from pkgutil."
"get_loader() when __spec__ is missing."
msgstr ""
"`Issue #21200 <https://bugs.python.org/21200>`__: Return None from pkgutil."
"get_loader() when __spec__ is missing."

#: ../../../Misc/NEWS:5891
msgid ""
"`Issue #21013 <https://bugs.python.org/21013>`__: Enhance ssl."
"create_default_context() when used for server side sockets to provide better "
"security by default."
msgstr ""
"`Issue #21013 <https://bugs.python.org/21013>`__: Enhance ssl."
"create_default_context() when used for server side sockets to provide better "
"security by default."

#: ../../../Misc/NEWS:5894
msgid ""
"`Issue #20145 <https://bugs.python.org/20145>`__: `assertRaisesRegex` and "
"`assertWarnsRegex` now raise a TypeError if the second argument is not a "
"string or compiled regex."
msgstr ""
"`Issue #20145 <https://bugs.python.org/20145>`__: `assertRaisesRegex` and "
"`assertWarnsRegex` now raise a TypeError if the second argument is not a "
"string or compiled regex."

#: ../../../Misc/NEWS:5897
msgid ""
"`Issue #20633 <https://bugs.python.org/20633>`__: Replace relative import by "
"absolute import."
msgstr ""
"`Issue #20633 <https://bugs.python.org/20633>`__: Replace relative import by "
"absolute import."

#: ../../../Misc/NEWS:5899
msgid ""
"`Issue #20980 <https://bugs.python.org/20980>`__: Stop wrapping exception "
"when using ThreadPool."
msgstr ""
"`Issue #20980 <https://bugs.python.org/20980>`__: Stop wrapping exception "
"when using ThreadPool."

#: ../../../Misc/NEWS:5901
msgid ""
"`Issue #21082 <https://bugs.python.org/21082>`__: In os.makedirs, do not set "
"the process-wide umask. Note this changes behavior of makedirs when "
"exist_ok=True."
msgstr ""
"`Issue #21082 <https://bugs.python.org/21082>`__: In os.makedirs, do not set "
"the process-wide umask. Note this changes behavior of makedirs when "
"exist_ok=True."

#: ../../../Misc/NEWS:5904
msgid ""
"`Issue #20990 <https://bugs.python.org/20990>`__: Fix issues found by "
"pyflakes for multiprocessing."
msgstr ""
"`Issue #20990 <https://bugs.python.org/20990>`__: Fix issues found by "
"pyflakes for multiprocessing."

#: ../../../Misc/NEWS:5906
msgid ""
"`Issue #21015 <https://bugs.python.org/21015>`__: SSL contexts will now "
"automatically select an elliptic curve for ECDH key exchange on OpenSSL "
"1.0.2 and later, and otherwise default to \"prime256v1\"."
msgstr ""
"`Issue #21015 <https://bugs.python.org/21015>`__: SSL contexts will now "
"automatically select an elliptic curve for ECDH key exchange on OpenSSL "
"1.0.2 and later, and otherwise default to \"prime256v1\"."

#: ../../../Misc/NEWS:5910
msgid ""
"`Issue #21000 <https://bugs.python.org/21000>`__: Improve the command-line "
"interface of json.tool."
msgstr ""
"`Issue #21000 <https://bugs.python.org/21000>`__: Improve the command-line "
"interface of json.tool."

#: ../../../Misc/NEWS:5912
msgid ""
"`Issue #20995 <https://bugs.python.org/20995>`__: Enhance default ciphers "
"used by the ssl module to enable better security and prioritize perfect "
"forward secrecy."
msgstr ""
"`Issue #20995 <https://bugs.python.org/20995>`__: Enhance default ciphers "
"used by the ssl module to enable better security and prioritize perfect "
"forward secrecy."

#: ../../../Misc/NEWS:5915
msgid ""
"`Issue #20884 <https://bugs.python.org/20884>`__: Don't assume that __file__ "
"is defined on importlib.__init__."
msgstr ""
"`Issue #20884 <https://bugs.python.org/20884>`__: Don't assume that __file__ "
"is defined on importlib.__init__."

#: ../../../Misc/NEWS:5917
msgid ""
"`Issue #21499 <https://bugs.python.org/21499>`__: Ignore __builtins__ in "
"several test_importlib.test_api tests."
msgstr ""
"`Issue #21499 <https://bugs.python.org/21499>`__: Ignore __builtins__ in "
"several test_importlib.test_api tests."

#: ../../../Misc/NEWS:5919
msgid ""
"`Issue #20627 <https://bugs.python.org/20627>`__: xmlrpc.client.ServerProxy "
"is now a context manager."
msgstr ""
"`Issue #20627 <https://bugs.python.org/20627>`__: xmlrpc.client.ServerProxy "
"is now a context manager."

#: ../../../Misc/NEWS:5921
msgid ""
"`Issue #19165 <https://bugs.python.org/19165>`__: The formatter module now "
"raises DeprecationWarning instead of PendingDeprecationWarning."
msgstr ""
"`Issue #19165 <https://bugs.python.org/19165>`__: The formatter module now "
"raises DeprecationWarning instead of PendingDeprecationWarning."

#: ../../../Misc/NEWS:5924
msgid ""
"`Issue #13936 <https://bugs.python.org/13936>`__: Remove the ability of "
"datetime.time instances to be considered false in boolean contexts."
msgstr ""
"`Issue #13936 <https://bugs.python.org/13936>`__: Remove the ability of "
"datetime.time instances to be considered false in boolean contexts."

#: ../../../Misc/NEWS:5927
msgid ""
"`Issue #18931 <https://bugs.python.org/18931>`__: selectors module now "
"supports /dev/poll on Solaris. Patch by Giampaolo Rodola'."
msgstr ""
"`Issue #18931 <https://bugs.python.org/18931>`__: selectors module now "
"supports /dev/poll on Solaris. Patch by Giampaolo Rodola'."

#: ../../../Misc/NEWS:5930
msgid ""
"`Issue #19977 <https://bugs.python.org/19977>`__: When the ``LC_TYPE`` "
"locale is the POSIX locale (``C`` locale), :py:data:`sys.stdin` and :py:data:"
"`sys.stdout` are now using the ``surrogateescape`` error handler, instead of "
"the ``strict`` error handler."
msgstr ""
"`Issue #19977 <https://bugs.python.org/19977>`__: When the ``LC_TYPE`` "
"locale is the POSIX locale (``C`` locale), :py:data:`sys.stdin` and :py:data:"
"`sys.stdout` are now using the ``surrogateescape`` error handler, instead of "
"the ``strict`` error handler."

#: ../../../Misc/NEWS:5934
msgid ""
"`Issue #20574 <https://bugs.python.org/20574>`__: Implement incremental "
"decoder for cp65001 code (Windows code page 65001, Microsoft UTF-8)."
msgstr ""
"`Issue #20574 <https://bugs.python.org/20574>`__: Implement incremental "
"decoder for cp65001 code (Windows code page 65001, Microsoft UTF-8)."

#: ../../../Misc/NEWS:5937
msgid ""
"`Issue #20879 <https://bugs.python.org/20879>`__: Delay the initialization "
"of encoding and decoding tables for base32, ascii85 and base85 codecs in the "
"base64 module, and delay the initialization of the unquote_to_bytes() table "
"of the urllib.parse module, to not waste memory if these modules are not "
"used."
msgstr ""
"`Issue #20879 <https://bugs.python.org/20879>`__: Delay the initialization "
"of encoding and decoding tables for base32, ascii85 and base85 codecs in the "
"base64 module, and delay the initialization of the unquote_to_bytes() table "
"of the urllib.parse module, to not waste memory if these modules are not "
"used."

#: ../../../Misc/NEWS:5942
msgid ""
"`Issue #19157 <https://bugs.python.org/19157>`__: Include the broadcast "
"address in the usuable hosts for IPv6 in ipaddress."
msgstr ""
"`Issue #19157 <https://bugs.python.org/19157>`__: Include the broadcast "
"address in the usuable hosts for IPv6 in ipaddress."

#: ../../../Misc/NEWS:5945
msgid ""
"`Issue #11599 <https://bugs.python.org/11599>`__: When an external command "
"(e.g. compiler) fails, distutils now prints out the whole command line "
"(instead of just the command name) if the environment variable "
"DISTUTILS_DEBUG is set."
msgstr ""
"`Issue #11599 <https://bugs.python.org/11599>`__: When an external command "
"(e.g. compiler) fails, distutils now prints out the whole command line "
"(instead of just the command name) if the environment variable "
"DISTUTILS_DEBUG is set."

#: ../../../Misc/NEWS:5949
msgid ""
"`Issue #4931 <https://bugs.python.org/4931>`__: distutils should not produce "
"unhelpful \"error: None\" messages anymore.  distutils.util."
"grok_environment_error is kept but doc-deprecated."
msgstr ""
"`Issue #4931 <https://bugs.python.org/4931>`__: distutils should not produce "
"unhelpful \"error: None\" messages anymore.  distutils.util."
"grok_environment_error is kept but doc-deprecated."

#: ../../../Misc/NEWS:5952
msgid ""
"`Issue #20875 <https://bugs.python.org/20875>`__: Prevent possible gzip "
"\"'read' is not defined\" NameError. Patch by Claudiu Popa."
msgstr ""
"`Issue #20875 <https://bugs.python.org/20875>`__: Prevent possible gzip "
"\"'read' is not defined\" NameError. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:5955
msgid ""
"`Issue #11558 <https://bugs.python.org/11558>`__: ``email.message.Message."
"attach`` now returns a more useful error message if ``attach`` is called on "
"a message for which ``is_multipart`` is False."
msgstr ""
"`Issue #11558 <https://bugs.python.org/11558>`__: ``email.message.Message."
"attach`` now returns a more useful error message if ``attach`` is called on "
"a message for which ``is_multipart`` is False."

#: ../../../Misc/NEWS:5959
msgid ""
"`Issue #20283 <https://bugs.python.org/20283>`__: RE pattern methods now "
"accept the string keyword parameters as documented.  The pattern and source "
"keyword parameters are left as deprecated aliases."
msgstr ""
"`Issue #20283 <https://bugs.python.org/20283>`__: RE pattern methods now "
"accept the string keyword parameters as documented.  The pattern and source "
"keyword parameters are left as deprecated aliases."

#: ../../../Misc/NEWS:5963
msgid ""
"`Issue #20778 <https://bugs.python.org/20778>`__: Fix modulefinder to work "
"with bytecode-only modules."
msgstr ""
"`Issue #20778 <https://bugs.python.org/20778>`__: Fix modulefinder to work "
"with bytecode-only modules."

#: ../../../Misc/NEWS:5965
msgid ""
"`Issue #20791 <https://bugs.python.org/20791>`__: copy.copy() now doesn't "
"make a copy when the input is a bytes object.  Initial patch by Peter Otten."
msgstr ""
"`Issue #20791 <https://bugs.python.org/20791>`__: copy.copy() now doesn't "
"make a copy when the input is a bytes object.  Initial patch by Peter Otten."

#: ../../../Misc/NEWS:5968
msgid ""
"`Issue #19748 <https://bugs.python.org/19748>`__: On AIX, time.mktime() now "
"raises an OverflowError for year outsize range [1902; 2037]."
msgstr ""
"`Issue #19748 <https://bugs.python.org/19748>`__: On AIX, time.mktime() now "
"raises an OverflowError for year outsize range [1902; 2037]."

#: ../../../Misc/NEWS:5971
msgid ""
"`Issue #19573 <https://bugs.python.org/19573>`__: inspect.signature: Use "
"enum for parameter kind constants."
msgstr ""
"`Issue #19573 <https://bugs.python.org/19573>`__: inspect.signature: Use "
"enum for parameter kind constants."

#: ../../../Misc/NEWS:5973
msgid ""
"`Issue #20726 <https://bugs.python.org/20726>`__: inspect.signature: Make "
"Signature and Parameter picklable."
msgstr ""
"`Issue #20726 <https://bugs.python.org/20726>`__: inspect.signature: Make "
"Signature and Parameter picklable."

#: ../../../Misc/NEWS:5975
msgid ""
"`Issue #17373 <https://bugs.python.org/17373>`__: Add inspect.Signature."
"from_callable method."
msgstr ""
"`Issue #17373 <https://bugs.python.org/17373>`__: Add inspect.Signature."
"from_callable method."

#: ../../../Misc/NEWS:5977
msgid ""
"`Issue #20378 <https://bugs.python.org/20378>`__: Improve repr of inspect."
"Signature and inspect.Parameter."
msgstr ""
"`Issue #20378 <https://bugs.python.org/20378>`__: Improve repr of inspect."
"Signature and inspect.Parameter."

#: ../../../Misc/NEWS:5979
msgid ""
"`Issue #20816 <https://bugs.python.org/20816>`__: Fix inspect.getcallargs() "
"to raise correct TypeError for missing keyword-only arguments. Patch by "
"Jeremiah Lowin."
msgstr ""
"`Issue #20816 <https://bugs.python.org/20816>`__: Fix inspect.getcallargs() "
"to raise correct TypeError for missing keyword-only arguments. Patch by "
"Jeremiah Lowin."

#: ../../../Misc/NEWS:5982
msgid ""
"`Issue #20817 <https://bugs.python.org/20817>`__: Fix inspect.getcallargs() "
"to fail correctly if more than 3 arguments are missing. Patch by Jeremiah "
"Lowin."
msgstr ""
"`Issue #20817 <https://bugs.python.org/20817>`__: Fix inspect.getcallargs() "
"to fail correctly if more than 3 arguments are missing. Patch by Jeremiah "
"Lowin."

#: ../../../Misc/NEWS:5985
msgid ""
"`Issue #6676 <https://bugs.python.org/6676>`__: Ensure a meaningful "
"exception is raised when attempting to parse more than one XML document per "
"pyexpat xmlparser instance. (Original patches by Hirokazu Yamamoto and "
"Amaury Forgeot d'Arc, with suggested wording by David Gutteridge)"
msgstr ""
"`Issue #6676 <https://bugs.python.org/6676>`__: Ensure a meaningful "
"exception is raised when attempting to parse more than one XML document per "
"pyexpat xmlparser instance. (Original patches by Hirokazu Yamamoto and "
"Amaury Forgeot d'Arc, with suggested wording by David Gutteridge)"

#: ../../../Misc/NEWS:5990
msgid ""
"`Issue #21117 <https://bugs.python.org/21117>`__: Fix inspect.signature to "
"better support functools.partial. Due to the specifics of functools.partial "
"implementation, positional-or-keyword arguments passed as keyword arguments "
"become keyword-only."
msgstr ""
"`Issue #21117 <https://bugs.python.org/21117>`__: Fix inspect.signature to "
"better support functools.partial. Due to the specifics of functools.partial "
"implementation, positional-or-keyword arguments passed as keyword arguments "
"become keyword-only."

#: ../../../Misc/NEWS:5995
msgid ""
"`Issue #20334 <https://bugs.python.org/20334>`__: inspect.Signature and "
"inspect.Parameter are now hashable. Thanks to Antony Lee for bug reports and "
"suggestions."
msgstr ""
"`Issue #20334 <https://bugs.python.org/20334>`__: inspect.Signature and "
"inspect.Parameter are now hashable. Thanks to Antony Lee for bug reports and "
"suggestions."

#: ../../../Misc/NEWS:5998
msgid ""
"`Issue #15916 <https://bugs.python.org/15916>`__: doctest.DocTestSuite "
"returns an empty unittest.TestSuite instead of raising ValueError if it "
"finds no tests"
msgstr ""
"`Issue #15916 <https://bugs.python.org/15916>`__: doctest.DocTestSuite "
"returns an empty unittest.TestSuite instead of raising ValueError if it "
"finds no tests"

#: ../../../Misc/NEWS:6001
msgid ""
"`Issue #21209 <https://bugs.python.org/21209>`__: Fix asyncio.tasks."
"CoroWrapper to workaround a bug in yield-from implementation in CPythons "
"prior to 3.4.1."
msgstr ""
"`Issue #21209 <https://bugs.python.org/21209>`__: Fix asyncio.tasks."
"CoroWrapper to workaround a bug in yield-from implementation in CPythons "
"prior to 3.4.1."

#: ../../../Misc/NEWS:6004
msgid ""
"asyncio: Add gi_{frame,running,code} properties to CoroWrapper (upstream "
"`issue #163 <https://bugs.python.org/163>`__)."
msgstr ""

#: ../../../Misc/NEWS:6007
msgid ""
"`Issue #21311 <https://bugs.python.org/21311>`__: Avoid exception in "
"_osx_support with non-standard compiler configurations.  Patch by John "
"Szakmeister."
msgstr ""
"`Issue #21311 <https://bugs.python.org/21311>`__: Avoid exception in "
"_osx_support with non-standard compiler configurations.  Patch by John "
"Szakmeister."

#: ../../../Misc/NEWS:6010
msgid ""
"`Issue #11571 <https://bugs.python.org/11571>`__: Ensure that the turtle "
"window becomes the topmost window when launched on OS X."
msgstr ""
"`Issue #11571 <https://bugs.python.org/11571>`__: Ensure that the turtle "
"window becomes the topmost window when launched on OS X."

#: ../../../Misc/NEWS:6013
msgid ""
"`Issue #21801 <https://bugs.python.org/21801>`__: Validate that "
"__signature__ is None or an instance of Signature."
msgstr ""
"`Issue #21801 <https://bugs.python.org/21801>`__: Validate that "
"__signature__ is None or an instance of Signature."

#: ../../../Misc/NEWS:6015
msgid ""
"`Issue #21923 <https://bugs.python.org/21923>`__: Prevent AttributeError in "
"distutils.sysconfig.customize_compiler due to possible uninitialized "
"_config_vars."
msgstr ""
"`Issue #21923 <https://bugs.python.org/21923>`__: Prevent AttributeError in "
"distutils.sysconfig.customize_compiler due to possible uninitialized "
"_config_vars."

#: ../../../Misc/NEWS:6018
msgid ""
"`Issue #21323 <https://bugs.python.org/21323>`__: Fix http.server to again "
"handle scripts in CGI subdirectories, broken by the fix for security `issue "
"#19435 <https://bugs.python.org/19435>`__.  Patch by Zach Byrne."
msgstr ""
"`Issue #21323 <https://bugs.python.org/21323>`__: Fix http.server to again "
"handle scripts in CGI subdirectories, broken by the fix for security `issue "
"#19435 <https://bugs.python.org/19435>`__.  Patch by Zach Byrne."

#: ../../../Misc/NEWS:6021
msgid ""
"`Issue #22733 <https://bugs.python.org/22733>`__: Fix ffi_prep_args not zero-"
"extending argument values correctly on 64-bit Windows."
msgstr ""
"`Issue #22733 <https://bugs.python.org/22733>`__: Fix ffi_prep_args not zero-"
"extending argument values correctly on 64-bit Windows."

#: ../../../Misc/NEWS:6024
msgid ""
"`Issue #23302 <https://bugs.python.org/23302>`__: Default to TCP_NODELAY=1 "
"upon establishing an HTTPConnection. Removed use of hard-coded MSS as it's "
"an optimization that's no longer needed with Nagle disabled."
msgstr ""
"`Issue #23302 <https://bugs.python.org/23302>`__: Default to TCP_NODELAY=1 "
"upon establishing an HTTPConnection. Removed use of hard-coded MSS as it's "
"an optimization that's no longer needed with Nagle disabled."

#: ../../../Misc/NEWS:6031
msgid ""
"`Issue #20577 <https://bugs.python.org/20577>`__: Configuration of the max "
"line length for the FormatParagraph extension has been moved from the "
"General tab of the Idle preferences dialog to the FormatParagraph tab of the "
"Config Extensions dialog. Patch by Tal Einat."
msgstr ""
"`Issue #20577 <https://bugs.python.org/20577>`__: Configuration of the max "
"line length for the FormatParagraph extension has been moved from the "
"General tab of the Idle preferences dialog to the FormatParagraph tab of the "
"Config Extensions dialog. Patch by Tal Einat."

#: ../../../Misc/NEWS:6036
msgid ""
"`Issue #16893 <https://bugs.python.org/16893>`__: Update Idle doc chapter to "
"match current Idle and add new information."
msgstr ""
"`Issue #16893 <https://bugs.python.org/16893>`__: Update Idle doc chapter to "
"match current Idle and add new information."

#: ../../../Misc/NEWS:6039
msgid ""
"`Issue #3068 <https://bugs.python.org/3068>`__: Add Idle extension "
"configuration dialog to Options menu. Changes are written to HOME/.idlerc/"
"config-extensions.cfg. Original patch by Tal Einat."
msgstr ""
"`Issue #3068 <https://bugs.python.org/3068>`__: Add Idle extension "
"configuration dialog to Options menu. Changes are written to HOME/.idlerc/"
"config-extensions.cfg. Original patch by Tal Einat."

#: ../../../Misc/NEWS:6043
msgid ""
"`Issue #16233 <https://bugs.python.org/16233>`__: A module browser (File : "
"Class Browser, Alt+C) requires an editor window with a filename.  When Class "
"Browser is requested otherwise, from a shell, output window, or 'Untitled' "
"editor, Idle no longer displays an error box.  It now pops up an Open Module "
"box (Alt+M). If a valid name is entered and a module is opened, a "
"corresponding browser is also opened."
msgstr ""
"`Issue #16233 <https://bugs.python.org/16233>`__: A module browser (File : "
"Class Browser, Alt+C) requires an editor window with a filename.  When Class "
"Browser is requested otherwise, from a shell, output window, or 'Untitled' "
"editor, Idle no longer displays an error box.  It now pops up an Open Module "
"box (Alt+M). If a valid name is entered and a module is opened, a "
"corresponding browser is also opened."

#: ../../../Misc/NEWS:6049
msgid ""
"`Issue #4832 <https://bugs.python.org/4832>`__: Save As to type Python files "
"automatically adds .py to the name you enter (even if your system does not "
"display it).  Some systems automatically add .txt when type is Text files."
msgstr ""
"`Issue #4832 <https://bugs.python.org/4832>`__: Save As to type Python files "
"automatically adds .py to the name you enter (even if your system does not "
"display it).  Some systems automatically add .txt when type is Text files."

#: ../../../Misc/NEWS:6053
msgid ""
"`Issue #21986 <https://bugs.python.org/21986>`__: Code objects are not "
"normally pickled by the pickle module. To match this, they are no longer "
"pickled when running under Idle."
msgstr ""
"`Issue #21986 <https://bugs.python.org/21986>`__: Code objects are not "
"normally pickled by the pickle module. To match this, they are no longer "
"pickled when running under Idle."

#: ../../../Misc/NEWS:6056
msgid ""
"`Issue #17390 <https://bugs.python.org/17390>`__: Adjust Editor window "
"title; remove 'Python', move version to end."
msgstr ""
"`Issue #17390 <https://bugs.python.org/17390>`__: Adjust Editor window "
"title; remove 'Python', move version to end."

#: ../../../Misc/NEWS:6059
msgid ""
"`Issue #14105 <https://bugs.python.org/14105>`__: Idle debugger breakpoints "
"no longer disappear when inserting or deleting lines."
msgstr ""
"`Issue #14105 <https://bugs.python.org/14105>`__: Idle debugger breakpoints "
"no longer disappear when inserting or deleting lines."

#: ../../../Misc/NEWS:6062
msgid ""
"`Issue #17172 <https://bugs.python.org/17172>`__: Turtledemo can now be run "
"from Idle. Currently, the entry is on the Help menu, but it may move to Run. "
"Patch by Ramchandra Apt and Lita Cho."
msgstr ""
"`Issue #17172 <https://bugs.python.org/17172>`__: Turtledemo can now be run "
"from Idle. Currently, the entry is on the Help menu, but it may move to Run. "
"Patch by Ramchandra Apt and Lita Cho."

#: ../../../Misc/NEWS:6066
msgid ""
"`Issue #21765 <https://bugs.python.org/21765>`__: Add support for non-ascii "
"identifiers to HyperParser."
msgstr ""
"`Issue #21765 <https://bugs.python.org/21765>`__: Add support for non-ascii "
"identifiers to HyperParser."

#: ../../../Misc/NEWS:6068
msgid ""
"`Issue #21940 <https://bugs.python.org/21940>`__: Add unittest for "
"WidgetRedirector. Initial patch by Saimadhav Heblikar."
msgstr ""
"`Issue #21940 <https://bugs.python.org/21940>`__: Add unittest for "
"WidgetRedirector. Initial patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:6071
msgid ""
"`Issue #18592 <https://bugs.python.org/18592>`__: Add unittest for "
"SearchDialogBase. Patch by Phil Webster."
msgstr ""
"`Issue #18592 <https://bugs.python.org/18592>`__: Add unittest for "
"SearchDialogBase. Patch by Phil Webster."

#: ../../../Misc/NEWS:6073
msgid ""
"`Issue #21694 <https://bugs.python.org/21694>`__: Add unittest for "
"ParenMatch. Patch by Saimadhav Heblikar."
msgstr ""
"`Issue #21694 <https://bugs.python.org/21694>`__: Add unittest for "
"ParenMatch. Patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:6075
msgid ""
"`Issue #21686 <https://bugs.python.org/21686>`__: add unittest for "
"HyperParser. Original patch by Saimadhav Heblikar."
msgstr ""
"`Issue #21686 <https://bugs.python.org/21686>`__: add unittest for "
"HyperParser. Original patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:6078
msgid ""
"`Issue #12387 <https://bugs.python.org/12387>`__: Add missing "
"upper(lower)case versions of default Windows key bindings for Idle so Caps "
"Lock does not disable them. Patch by Roger Serwy."
msgstr ""
"`Issue #12387 <https://bugs.python.org/12387>`__: Add missing "
"upper(lower)case versions of default Windows key bindings for Idle so Caps "
"Lock does not disable them. Patch by Roger Serwy."

#: ../../../Misc/NEWS:6081
msgid ""
"`Issue #21695 <https://bugs.python.org/21695>`__: Closing a Find-in-files "
"output window while the search is still in progress no longer closes Idle."
msgstr ""
"`Issue #21695 <https://bugs.python.org/21695>`__: Closing a Find-in-files "
"output window while the search is still in progress no longer closes Idle."

#: ../../../Misc/NEWS:6084
msgid ""
"`Issue #18910 <https://bugs.python.org/18910>`__: Add unittest for textView. "
"Patch by Phil Webster."
msgstr ""
"`Issue #18910 <https://bugs.python.org/18910>`__: Add unittest for textView. "
"Patch by Phil Webster."

#: ../../../Misc/NEWS:6086
msgid ""
"`Issue #18292 <https://bugs.python.org/18292>`__: Add unittest for "
"AutoExpand. Patch by Saihadhav Heblikar."
msgstr ""
"`Issue #18292 <https://bugs.python.org/18292>`__: Add unittest for "
"AutoExpand. Patch by Saihadhav Heblikar."

#: ../../../Misc/NEWS:6088
msgid ""
"`Issue #18409 <https://bugs.python.org/18409>`__: Add unittest for "
"AutoComplete. Patch by Phil Webster."
msgstr ""
"`Issue #18409 <https://bugs.python.org/18409>`__: Add unittest for "
"AutoComplete. Patch by Phil Webster."

#: ../../../Misc/NEWS:6090
msgid ""
"`Issue #21477 <https://bugs.python.org/21477>`__: htest.py - Improve "
"framework, complete set of tests. Patches by Saimadhav Heblikar"
msgstr ""
"`Issue #21477 <https://bugs.python.org/21477>`__: htest.py - Improve "
"framework, complete set of tests. Patches by Saimadhav Heblikar"

#: ../../../Misc/NEWS:6093
msgid ""
"`Issue #18104 <https://bugs.python.org/18104>`__: Add idlelib/idle_test/"
"htest.py with a few sample tests to begin consolidating and improving human-"
"validated tests of Idle. Change other files as needed to work with htest.  "
"Running the module as __main__ runs all tests."
msgstr ""
"`Issue #18104 <https://bugs.python.org/18104>`__: Add idlelib/idle_test/"
"htest.py with a few sample tests to begin consolidating and improving human-"
"validated tests of Idle. Change other files as needed to work with htest.  "
"Running the module as __main__ runs all tests."

#: ../../../Misc/NEWS:6097
msgid ""
"`Issue #21139 <https://bugs.python.org/21139>`__: Change default paragraph "
"width to 72, the PEP 8 recommendation."
msgstr ""
"`Issue #21139 <https://bugs.python.org/21139>`__: Change default paragraph "
"width to 72, the PEP 8 recommendation."

#: ../../../Misc/NEWS:6099
msgid ""
"`Issue #21284 <https://bugs.python.org/21284>`__: Paragraph reformat test "
"passes after user changes reformat width."
msgstr ""
"`Issue #21284 <https://bugs.python.org/21284>`__: Paragraph reformat test "
"passes after user changes reformat width."

#: ../../../Misc/NEWS:6101
msgid ""
"`Issue #17654 <https://bugs.python.org/17654>`__: Ensure IDLE menus are "
"customized properly on OS X for non-framework builds and for all variants of "
"Tk."
msgstr ""
"`Issue #17654 <https://bugs.python.org/17654>`__: Ensure IDLE menus are "
"customized properly on OS X for non-framework builds and for all variants of "
"Tk."

#: ../../../Misc/NEWS:6104
msgid ""
"`Issue #23180 <https://bugs.python.org/23180>`__: Rename IDLE \"Windows\" "
"menu item to \"Window\". Patch by Al Sweigart."
msgstr ""
"`Issue #23180 <https://bugs.python.org/23180>`__: Rename IDLE \"Windows\" "
"menu item to \"Window\". Patch by Al Sweigart."

#: ../../../Misc/NEWS:6110
msgid ""
"`Issue #15506 <https://bugs.python.org/15506>`__: Use standard "
"PKG_PROG_PKG_CONFIG autoconf macro in the configure script."
msgstr ""
"`Issue #15506 <https://bugs.python.org/15506>`__: Use standard "
"PKG_PROG_PKG_CONFIG autoconf macro in the configure script."

#: ../../../Misc/NEWS:6113
msgid ""
"`Issue #22935 <https://bugs.python.org/22935>`__: Allow the ssl module to be "
"compiled if openssl doesn't support SSL 3."
msgstr ""
"`Issue #22935 <https://bugs.python.org/22935>`__: Allow the ssl module to be "
"compiled if openssl doesn't support SSL 3."

#: ../../../Misc/NEWS:6116
msgid ""
"`Issue #22592 <https://bugs.python.org/22592>`__: Drop support of the "
"Borland C compiler to build Python. The distutils module still supports it "
"to build extensions."
msgstr ""
"`Issue #22592 <https://bugs.python.org/22592>`__: Drop support of the "
"Borland C compiler to build Python. The distutils module still supports it "
"to build extensions."

#: ../../../Misc/NEWS:6119
msgid ""
"`Issue #22591 <https://bugs.python.org/22591>`__: Drop support of MS-DOS, "
"especially of the DJGPP compiler (MS-DOS port of GCC)."
msgstr ""
"`Issue #22591 <https://bugs.python.org/22591>`__: Drop support of MS-DOS, "
"especially of the DJGPP compiler (MS-DOS port of GCC)."

#: ../../../Misc/NEWS:6122
msgid ""
"`Issue #16537 <https://bugs.python.org/16537>`__: Check whether self."
"extensions is empty in setup.py. Patch by Jonathan Hosmer."
msgstr ""
"`Issue #16537 <https://bugs.python.org/16537>`__: Check whether self."
"extensions is empty in setup.py. Patch by Jonathan Hosmer."

#: ../../../Misc/NEWS:6125
msgid ""
"`Issue #22359 <https://bugs.python.org/22359>`__: Remove incorrect uses of "
"recursive make.  Patch by Jonas Wagner."
msgstr ""
"`Issue #22359 <https://bugs.python.org/22359>`__: Remove incorrect uses of "
"recursive make.  Patch by Jonas Wagner."

#: ../../../Misc/NEWS:6128
msgid ""
"`Issue #21958 <https://bugs.python.org/21958>`__: Define HAVE_ROUND when "
"building with Visual Studio 2013 and above.  Patch by Zachary Turner."
msgstr ""
"`Issue #21958 <https://bugs.python.org/21958>`__: Define HAVE_ROUND when "
"building with Visual Studio 2013 and above.  Patch by Zachary Turner."

#: ../../../Misc/NEWS:6131
msgid ""
"`Issue #18093 <https://bugs.python.org/18093>`__: the programs that embed "
"the CPython runtime are now in a separate \"Programs\" directory, rather "
"than being kept in the Modules directory."
msgstr ""
"`Issue #18093 <https://bugs.python.org/18093>`__: the programs that embed "
"the CPython runtime are now in a separate \"Programs\" directory, rather "
"than being kept in the Modules directory."

#: ../../../Misc/NEWS:6135
msgid ""
"`Issue #15759 <https://bugs.python.org/15759>`__: \"make suspicious\", "
"\"make linkcheck\" and \"make doctest\" in Doc/ now display special message "
"when and only when there are failures."
msgstr ""
"`Issue #15759 <https://bugs.python.org/15759>`__: \"make suspicious\", "
"\"make linkcheck\" and \"make doctest\" in Doc/ now display special message "
"when and only when there are failures."

#: ../../../Misc/NEWS:6138
msgid ""
"`Issue #21141 <https://bugs.python.org/21141>`__: The Windows build process "
"no longer attempts to find Perl, instead relying on OpenSSL source being "
"configured and ready to build.  The ``PCbuild\\build_ssl.py`` script has "
"been re-written and re-named to ``PCbuild\\prepare_ssl.py``, and takes care "
"of configuring OpenSSL source for both 32 and 64 bit platforms.  OpenSSL "
"sources obtained from svn.python.org will always be pre-configured and ready "
"to build."
msgstr ""
"`Issue #21141 <https://bugs.python.org/21141>`__: The Windows build process "
"no longer attempts to find Perl, instead relying on OpenSSL source being "
"configured and ready to build.  The ``PCbuild\\build_ssl.py`` script has "
"been re-written and re-named to ``PCbuild\\prepare_ssl.py``, and takes care "
"of configuring OpenSSL source for both 32 and 64 bit platforms.  OpenSSL "
"sources obtained from svn.python.org will always be pre-configured and ready "
"to build."

#: ../../../Misc/NEWS:6145
msgid ""
"`Issue #21037 <https://bugs.python.org/21037>`__: Add a build option to "
"enable AddressSanitizer support."
msgstr ""
"`Issue #21037 <https://bugs.python.org/21037>`__: Add a build option to "
"enable AddressSanitizer support."

#: ../../../Misc/NEWS:6147
msgid ""
"`Issue #19962 <https://bugs.python.org/19962>`__: The Windows build process "
"now creates \"python.bat\" in the root of the source tree, which passes all "
"arguments through to the most recently built interpreter."
msgstr ""
"`Issue #19962 <https://bugs.python.org/19962>`__: The Windows build process "
"now creates \"python.bat\" in the root of the source tree, which passes all "
"arguments through to the most recently built interpreter."

#: ../../../Misc/NEWS:6151
msgid ""
"`Issue #21285 <https://bugs.python.org/21285>`__: Refactor and fix curses "
"configure check to always search in a ncursesw directory."
msgstr ""
"`Issue #21285 <https://bugs.python.org/21285>`__: Refactor and fix curses "
"configure check to always search in a ncursesw directory."

#: ../../../Misc/NEWS:6154
msgid ""
"`Issue #15234 <https://bugs.python.org/15234>`__: For BerkelyDB and Sqlite, "
"only add the found library and include directories if they aren't already "
"being searched. This avoids an explicit runtime library dependency."
msgstr ""
"`Issue #15234 <https://bugs.python.org/15234>`__: For BerkelyDB and Sqlite, "
"only add the found library and include directories if they aren't already "
"being searched. This avoids an explicit runtime library dependency."

#: ../../../Misc/NEWS:6158
msgid ""
"`Issue #17861 <https://bugs.python.org/17861>`__: Tools/scripts/"
"generate_opcode_h.py automatically regenerates Include/opcode.h from Lib/"
"opcode.py if the latter gets any change."
msgstr ""
"`Issue #17861 <https://bugs.python.org/17861>`__: Tools/scripts/"
"generate_opcode_h.py automatically regenerates Include/opcode.h from Lib/"
"opcode.py if the latter gets any change."

#: ../../../Misc/NEWS:6161
msgid ""
"`Issue #20644 <https://bugs.python.org/20644>`__: OS X installer build "
"support for documentation build changes in 3.4.1: assume externally supplied "
"sphinx-build is available in /usr/bin."
msgstr ""
"`Issue #20644 <https://bugs.python.org/20644>`__: OS X installer build "
"support for documentation build changes in 3.4.1: assume externally supplied "
"sphinx-build is available in /usr/bin."

#: ../../../Misc/NEWS:6164
msgid ""
"`Issue #20022 <https://bugs.python.org/20022>`__: Eliminate use of "
"deprecated bundlebuilder in OS X builds."
msgstr ""
"`Issue #20022 <https://bugs.python.org/20022>`__: Eliminate use of "
"deprecated bundlebuilder in OS X builds."

#: ../../../Misc/NEWS:6166
msgid ""
"`Issue #15968 <https://bugs.python.org/15968>`__: Incorporated Tcl, Tk, and "
"Tix builds into the Windows build solution."
msgstr ""
"`Issue #15968 <https://bugs.python.org/15968>`__: Incorporated Tcl, Tk, and "
"Tix builds into the Windows build solution."

#: ../../../Misc/NEWS:6169
msgid ""
"`Issue #17095 <https://bugs.python.org/17095>`__: Fix Modules/Setup *shared* "
"support."
msgstr ""
"`Issue #17095 <https://bugs.python.org/17095>`__: Fix Modules/Setup *shared* "
"support."

#: ../../../Misc/NEWS:6171
msgid ""
"`Issue #21811 <https://bugs.python.org/21811>`__: Anticipated fixes to "
"support OS X versions > 10.9."
msgstr ""
"`Issue #21811 <https://bugs.python.org/21811>`__: Anticipated fixes to "
"support OS X versions > 10.9."

#: ../../../Misc/NEWS:6173
msgid ""
"`Issue #21166 <https://bugs.python.org/21166>`__: Prevent possible segfaults "
"and other random failures of python --generate-posix-vars in pybuilddir.txt "
"build target."
msgstr ""
"`Issue #21166 <https://bugs.python.org/21166>`__: Prevent possible segfaults "
"and other random failures of python --generate-posix-vars in pybuilddir.txt "
"build target."

#: ../../../Misc/NEWS:6176
msgid ""
"`Issue #18096 <https://bugs.python.org/18096>`__: Fix library order returned "
"by python-config."
msgstr ""
"`Issue #18096 <https://bugs.python.org/18096>`__: Fix library order returned "
"by python-config."

#: ../../../Misc/NEWS:6178
msgid ""
"`Issue #17219 <https://bugs.python.org/17219>`__: Add library build dir for "
"Python extension cross-builds."
msgstr ""
"`Issue #17219 <https://bugs.python.org/17219>`__: Add library build dir for "
"Python extension cross-builds."

#: ../../../Misc/NEWS:6180
msgid ""
"`Issue #22919 <https://bugs.python.org/22919>`__: Windows build updated to "
"support VC 14.0 (Visual Studio 2015), which will be used for the official "
"release."
msgstr ""
"`Issue #22919 <https://bugs.python.org/22919>`__: Windows build updated to "
"support VC 14.0 (Visual Studio 2015), which will be used for the official "
"release."

#: ../../../Misc/NEWS:6183
msgid ""
"`Issue #21236 <https://bugs.python.org/21236>`__: Build _msi.pyd with "
"cabinet.lib instead of fci.lib"
msgstr ""
"`Issue #21236 <https://bugs.python.org/21236>`__: Build _msi.pyd with "
"cabinet.lib instead of fci.lib"

#: ../../../Misc/NEWS:6185
msgid ""
"`Issue #17128 <https://bugs.python.org/17128>`__: Use private version of "
"OpenSSL for OS X 10.5+ installer."
msgstr ""
"`Issue #17128 <https://bugs.python.org/17128>`__: Use private version of "
"OpenSSL for OS X 10.5+ installer."

#: ../../../Misc/NEWS:6190
msgid ""
"`Issue #14203 <https://bugs.python.org/14203>`__: Remove obsolete support "
"for view==NULL in PyBuffer_FillInfo(), bytearray_getbuffer(), "
"bytesiobuf_getbuffer() and array_buffer_getbuf(). All functions now raise "
"BufferError in that case."
msgstr ""
"`Issue #14203 <https://bugs.python.org/14203>`__: Remove obsolete support "
"for view==NULL in PyBuffer_FillInfo(), bytearray_getbuffer(), "
"bytesiobuf_getbuffer() and array_buffer_getbuf(). All functions now raise "
"BufferError in that case."

#: ../../../Misc/NEWS:6194
msgid ""
"`Issue #22445 <https://bugs.python.org/22445>`__: PyBuffer_IsContiguous() "
"now implements precise contiguity tests, compatible with NumPy's "
"NPY_RELAXED_STRIDES_CHECKING compilation flag.  Previously the function "
"reported false negatives for corner cases."
msgstr ""
"`Issue #22445 <https://bugs.python.org/22445>`__: PyBuffer_IsContiguous() "
"now implements precise contiguity tests, compatible with NumPy's "
"NPY_RELAXED_STRIDES_CHECKING compilation flag.  Previously the function "
"reported false negatives for corner cases."

#: ../../../Misc/NEWS:6198
msgid ""
"`Issue #22079 <https://bugs.python.org/22079>`__: PyType_Ready() now checks "
"that statically allocated type has no dynamically allocated bases."
msgstr ""
"`Issue #22079 <https://bugs.python.org/22079>`__: PyType_Ready() now checks "
"that statically allocated type has no dynamically allocated bases."

#: ../../../Misc/NEWS:6201
msgid ""
"`Issue #22453 <https://bugs.python.org/22453>`__: Removed non-documented "
"macro PyObject_REPR()."
msgstr ""
"`Issue #22453 <https://bugs.python.org/22453>`__: Removed non-documented "
"macro PyObject_REPR()."

#: ../../../Misc/NEWS:6203
msgid ""
"`Issue #18395 <https://bugs.python.org/18395>`__: Rename "
"``_Py_char2wchar()`` to :c:func:`Py_DecodeLocale`, rename "
"``_Py_wchar2char()`` to :c:func:`Py_EncodeLocale`, and document these "
"functions."
msgstr ""
"`Issue #18395 <https://bugs.python.org/18395>`__: Rename "
"``_Py_char2wchar()`` to :c:func:`Py_DecodeLocale`, rename "
"``_Py_wchar2char()`` to :c:func:`Py_EncodeLocale`, and document these "
"functions."

#: ../../../Misc/NEWS:6207
msgid ""
"`Issue #21233 <https://bugs.python.org/21233>`__: Add new C functions: "
"PyMem_RawCalloc(), PyMem_Calloc(), PyObject_Calloc(), _PyObject_GC_Calloc(). "
"bytes(int) is now using ``calloc()`` instead of ``malloc()`` for large "
"objects which is faster and use less memory."
msgstr ""
"`Issue #21233 <https://bugs.python.org/21233>`__: Add new C functions: "
"PyMem_RawCalloc(), PyMem_Calloc(), PyObject_Calloc(), _PyObject_GC_Calloc(). "
"bytes(int) is now using ``calloc()`` instead of ``malloc()`` for large "
"objects which is faster and use less memory."

#: ../../../Misc/NEWS:6212
msgid ""
"`Issue #20942 <https://bugs.python.org/20942>`__: "
"PyImport_ImportFrozenModuleObject() no longer sets __file__ to match what "
"importlib does; this affects _frozen_importlib as well as any module loaded "
"using imp.init_frozen()."
msgstr ""
"`Issue #20942 <https://bugs.python.org/20942>`__: "
"PyImport_ImportFrozenModuleObject() no longer sets __file__ to match what "
"importlib does; this affects _frozen_importlib as well as any module loaded "
"using imp.init_frozen()."

#: ../../../Misc/NEWS:6219
msgid ""
"`Issue #19548 <https://bugs.python.org/19548>`__: Update the codecs module "
"documentation to better cover the distinction between text encodings and "
"other codecs, together with other clarifications. Patch by Martin Panter."
msgstr ""
"`Issue #19548 <https://bugs.python.org/19548>`__: Update the codecs module "
"documentation to better cover the distinction between text encodings and "
"other codecs, together with other clarifications. Patch by Martin Panter."

#: ../../../Misc/NEWS:6223
msgid ""
"`Issue #22394 <https://bugs.python.org/22394>`__: Doc/Makefile now supports "
"``make venv PYTHON=../python`` to create a venv for generating the "
"documentation, e.g., ``make html PYTHON=venv/bin/python3``."
msgstr ""
"`Issue #22394 <https://bugs.python.org/22394>`__: Doc/Makefile now supports "
"``make venv PYTHON=../python`` to create a venv for generating the "
"documentation, e.g., ``make html PYTHON=venv/bin/python3``."

#: ../../../Misc/NEWS:6227
msgid ""
"`Issue #21514 <https://bugs.python.org/21514>`__: The documentation of the "
"json module now refers to new JSON RFC 7159 instead of obsoleted RFC 4627."
msgstr ""
"`Issue #21514 <https://bugs.python.org/21514>`__: The documentation of the "
"json module now refers to new JSON RFC 7159 instead of obsoleted RFC 4627."

#: ../../../Misc/NEWS:6230
msgid ""
"`Issue #21777 <https://bugs.python.org/21777>`__: The binary sequence "
"methods on bytes and bytearray are now documented explicitly, rather than "
"assuming users will be able to derive the expected behaviour from the "
"behaviour of the corresponding str methods."
msgstr ""
"`Issue #21777 <https://bugs.python.org/21777>`__: The binary sequence "
"methods on bytes and bytearray are now documented explicitly, rather than "
"assuming users will be able to derive the expected behaviour from the "
"behaviour of the corresponding str methods."

#: ../../../Misc/NEWS:6234
msgid ""
"`Issue #6916 <https://bugs.python.org/6916>`__: undocument deprecated "
"asynchat.fifo class."
msgstr ""
"`Issue #6916 <https://bugs.python.org/6916>`__: undocument deprecated "
"asynchat.fifo class."

#: ../../../Misc/NEWS:6236
msgid ""
"`Issue #17386 <https://bugs.python.org/17386>`__: Expanded functionality of "
"the ``Doc/make.bat`` script to make it much more comparable to ``Doc/"
"Makefile``."
msgstr ""
"`Issue #17386 <https://bugs.python.org/17386>`__: Expanded functionality of "
"the ``Doc/make.bat`` script to make it much more comparable to ``Doc/"
"Makefile``."

#: ../../../Misc/NEWS:6239
msgid ""
"`Issue #21312 <https://bugs.python.org/21312>`__: Update the thread_foobar.h "
"template file to include newer threading APIs.  Patch by Jack McCracken."
msgstr ""
"`Issue #21312 <https://bugs.python.org/21312>`__: Update the thread_foobar.h "
"template file to include newer threading APIs.  Patch by Jack McCracken."

#: ../../../Misc/NEWS:6242
msgid ""
"`Issue #21043 <https://bugs.python.org/21043>`__: Remove the recommendation "
"for specific CA organizations and to mention the ability to load the OS "
"certificates."
msgstr ""
"`Issue #21043 <https://bugs.python.org/21043>`__: Remove the recommendation "
"for specific CA organizations and to mention the ability to load the OS "
"certificates."

#: ../../../Misc/NEWS:6245
msgid ""
"`Issue #20765 <https://bugs.python.org/20765>`__: Add missing documentation "
"for PurePath.with_name() and PurePath.with_suffix()."
msgstr ""
"`Issue #20765 <https://bugs.python.org/20765>`__: Add missing documentation "
"for PurePath.with_name() and PurePath.with_suffix()."

#: ../../../Misc/NEWS:6248
msgid ""
"`Issue #19407 <https://bugs.python.org/19407>`__: New package installation "
"and distribution guides based on the Python Packaging Authority tools. "
"Existing guides have been retained as legacy links from the distutils docs, "
"as they still contain some required reference material for tool developers "
"that isn't recorded anywhere else."
msgstr ""
"`Issue #19407 <https://bugs.python.org/19407>`__: New package installation "
"and distribution guides based on the Python Packaging Authority tools. "
"Existing guides have been retained as legacy links from the distutils docs, "
"as they still contain some required reference material for tool developers "
"that isn't recorded anywhere else."

#: ../../../Misc/NEWS:6254
msgid ""
"`Issue #19697 <https://bugs.python.org/19697>`__: Document cases where "
"__main__.__spec__ is None."
msgstr ""
"`Issue #19697 <https://bugs.python.org/19697>`__: Document cases where "
"__main__.__spec__ is None."

#: ../../../Misc/NEWS:6259
msgid ""
"`Issue #18982 <https://bugs.python.org/18982>`__: Add tests for CLI of the "
"calendar module."
msgstr ""
"`Issue #18982 <https://bugs.python.org/18982>`__: Add tests for CLI of the "
"calendar module."

#: ../../../Misc/NEWS:6261
msgid ""
"`Issue #19548 <https://bugs.python.org/19548>`__: Added some additional "
"checks to test_codecs to ensure that statements in the updated documentation "
"remain accurate. Patch by Martin Panter."
msgstr ""
"`Issue #19548 <https://bugs.python.org/19548>`__: Added some additional "
"checks to test_codecs to ensure that statements in the updated documentation "
"remain accurate. Patch by Martin Panter."

#: ../../../Misc/NEWS:6265
msgid ""
"`Issue #22838 <https://bugs.python.org/22838>`__: All test_re tests now work "
"with unittest test discovery."
msgstr ""
"`Issue #22838 <https://bugs.python.org/22838>`__: All test_re tests now work "
"with unittest test discovery."

#: ../../../Misc/NEWS:6267
msgid ""
"`Issue #22173 <https://bugs.python.org/22173>`__: Update lib2to3 tests to "
"use unittest test discovery."
msgstr ""
"`Issue #22173 <https://bugs.python.org/22173>`__: Update lib2to3 tests to "
"use unittest test discovery."

#: ../../../Misc/NEWS:6269
msgid ""
"`Issue #16000 <https://bugs.python.org/16000>`__: Convert test_curses to use "
"unittest."
msgstr ""
"`Issue #16000 <https://bugs.python.org/16000>`__: Convert test_curses to use "
"unittest."

#: ../../../Misc/NEWS:6271
msgid ""
"`Issue #21456 <https://bugs.python.org/21456>`__: Skip two tests in "
"test_urllib2net.py if _ssl module not present. Patch by Remi Pointel."
msgstr ""
"`Issue #21456 <https://bugs.python.org/21456>`__: Skip two tests in "
"test_urllib2net.py if _ssl module not present. Patch by Remi Pointel."

#: ../../../Misc/NEWS:6274
msgid ""
"`Issue #20746 <https://bugs.python.org/20746>`__: Fix test_pdb to run in "
"refleak mode (-R).  Patch by Xavier de Gaye."
msgstr ""
"`Issue #20746 <https://bugs.python.org/20746>`__: Fix test_pdb to run in "
"refleak mode (-R).  Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:6277
msgid ""
"`Issue #22060 <https://bugs.python.org/22060>`__: test_ctypes has been "
"somewhat cleaned up and simplified; it now uses unittest test discovery to "
"find its tests."
msgstr ""
"`Issue #22060 <https://bugs.python.org/22060>`__: test_ctypes has been "
"somewhat cleaned up and simplified; it now uses unittest test discovery to "
"find its tests."

#: ../../../Misc/NEWS:6280
msgid ""
"`Issue #22104 <https://bugs.python.org/22104>`__: regrtest.py no longer "
"holds a reference to the suite of tests loaded from test modules that don't "
"define test_main()."
msgstr ""
"`Issue #22104 <https://bugs.python.org/22104>`__: regrtest.py no longer "
"holds a reference to the suite of tests loaded from test modules that don't "
"define test_main()."

#: ../../../Misc/NEWS:6283
msgid ""
"`Issue #22111 <https://bugs.python.org/22111>`__: Assorted cleanups in "
"test_imaplib.  Patch by Milan Oberkirch."
msgstr ""
"`Issue #22111 <https://bugs.python.org/22111>`__: Assorted cleanups in "
"test_imaplib.  Patch by Milan Oberkirch."

#: ../../../Misc/NEWS:6285
msgid ""
"`Issue #22002 <https://bugs.python.org/22002>`__: Added "
"``load_package_tests`` function to test.support and used it to implement/"
"augment test discovery in test_asyncio, test_email, test_importlib, "
"test_json, and test_tools."
msgstr ""
"`Issue #22002 <https://bugs.python.org/22002>`__: Added "
"``load_package_tests`` function to test.support and used it to implement/"
"augment test discovery in test_asyncio, test_email, test_importlib, "
"test_json, and test_tools."

#: ../../../Misc/NEWS:6289
msgid ""
"`Issue #21976 <https://bugs.python.org/21976>`__: Fix test_ssl to accept "
"LibreSSL version strings.  Thanks to William Orr."
msgstr ""
"`Issue #21976 <https://bugs.python.org/21976>`__: Fix test_ssl to accept "
"LibreSSL version strings.  Thanks to William Orr."

#: ../../../Misc/NEWS:6292
msgid ""
"`Issue #21918 <https://bugs.python.org/21918>`__: Converted test_tools from "
"a module to a package containing separate test files for each tested script."
msgstr ""
"`Issue #21918 <https://bugs.python.org/21918>`__: Converted test_tools from "
"a module to a package containing separate test files for each tested script."

#: ../../../Misc/NEWS:6295
msgid ""
"`Issue #9554 <https://bugs.python.org/9554>`__: Use modern unittest features "
"in test_argparse. Initial patch by Denver Coneybeare and Radu Voicilas."
msgstr ""
"`Issue #9554 <https://bugs.python.org/9554>`__: Use modern unittest features "
"in test_argparse. Initial patch by Denver Coneybeare and Radu Voicilas."

#: ../../../Misc/NEWS:6298
msgid ""
"`Issue #20155 <https://bugs.python.org/20155>`__: Changed HTTP method names "
"in failing tests in test_httpservers so that packet filtering software "
"(specifically Windows Base Filtering Engine) does not interfere with the "
"transaction semantics expected by the tests."
msgstr ""
"`Issue #20155 <https://bugs.python.org/20155>`__: Changed HTTP method names "
"in failing tests in test_httpservers so that packet filtering software "
"(specifically Windows Base Filtering Engine) does not interfere with the "
"transaction semantics expected by the tests."

#: ../../../Misc/NEWS:6302
msgid ""
"`Issue #19493 <https://bugs.python.org/19493>`__: Refactored the ctypes test "
"package to skip tests explicitly rather than silently."
msgstr ""
"`Issue #19493 <https://bugs.python.org/19493>`__: Refactored the ctypes test "
"package to skip tests explicitly rather than silently."

#: ../../../Misc/NEWS:6305
msgid ""
"`Issue #18492 <https://bugs.python.org/18492>`__: All resources are now "
"allowed when tests are not run by regrtest.py."
msgstr ""
"`Issue #18492 <https://bugs.python.org/18492>`__: All resources are now "
"allowed when tests are not run by regrtest.py."

#: ../../../Misc/NEWS:6308
msgid ""
"`Issue #21634 <https://bugs.python.org/21634>`__: Fix pystone micro-"
"benchmark: use floor division instead of true division to benchmark integers "
"instead of floating point numbers. Set pystone version to 1.2. Patch written "
"by Lennart Regebro."
msgstr ""
"`Issue #21634 <https://bugs.python.org/21634>`__: Fix pystone micro-"
"benchmark: use floor division instead of true division to benchmark integers "
"instead of floating point numbers. Set pystone version to 1.2. Patch written "
"by Lennart Regebro."

#: ../../../Misc/NEWS:6312
msgid ""
"`Issue #21605 <https://bugs.python.org/21605>`__: Added tests for Tkinter "
"images."
msgstr ""
"`Issue #21605 <https://bugs.python.org/21605>`__: Added tests for Tkinter "
"images."

#: ../../../Misc/NEWS:6314
msgid ""
"`Issue #21493 <https://bugs.python.org/21493>`__: Added test for ntpath."
"expanduser().  Original patch by Claudiu Popa."
msgstr ""
"`Issue #21493 <https://bugs.python.org/21493>`__: Added test for ntpath."
"expanduser().  Original patch by Claudiu Popa."

#: ../../../Misc/NEWS:6317
msgid ""
"`Issue #19925 <https://bugs.python.org/19925>`__: Added tests for the spwd "
"module. Original patch by Vajrasky Kok."
msgstr ""
"`Issue #19925 <https://bugs.python.org/19925>`__: Added tests for the spwd "
"module. Original patch by Vajrasky Kok."

#: ../../../Misc/NEWS:6319
msgid ""
"`Issue #21522 <https://bugs.python.org/21522>`__: Added Tkinter tests for "
"Listbox.itemconfigure(), PanedWindow.paneconfigure(), and Menu."
"entryconfigure()."
msgstr ""
"`Issue #21522 <https://bugs.python.org/21522>`__: Added Tkinter tests for "
"Listbox.itemconfigure(), PanedWindow.paneconfigure(), and Menu."
"entryconfigure()."

#: ../../../Misc/NEWS:6322
msgid ""
"`Issue #17756 <https://bugs.python.org/17756>`__: Fix test_code test when "
"run from the installed location."
msgstr ""
"`Issue #17756 <https://bugs.python.org/17756>`__: Fix test_code test when "
"run from the installed location."

#: ../../../Misc/NEWS:6324
msgid ""
"`Issue #17752 <https://bugs.python.org/17752>`__: Fix distutils tests when "
"run from the installed location."
msgstr ""
"`Issue #17752 <https://bugs.python.org/17752>`__: Fix distutils tests when "
"run from the installed location."

#: ../../../Misc/NEWS:6326
msgid ""
"`Issue #18604 <https://bugs.python.org/18604>`__: Consolidated checks for "
"GUI availability.  All platforms now at least check whether Tk can be "
"instantiated when the GUI resource is requested."
msgstr ""
"`Issue #18604 <https://bugs.python.org/18604>`__: Consolidated checks for "
"GUI availability.  All platforms now at least check whether Tk can be "
"instantiated when the GUI resource is requested."

#: ../../../Misc/NEWS:6330
msgid ""
"`Issue #21275 <https://bugs.python.org/21275>`__: Fix a socket test on "
"KFreeBSD."
msgstr ""
"`Issue #21275 <https://bugs.python.org/21275>`__: Fix a socket test on "
"KFreeBSD."

#: ../../../Misc/NEWS:6332
msgid ""
"`Issue #21223 <https://bugs.python.org/21223>`__: Pass test_site/"
"test_startup_imports when some of the extensions are built as builtins."
msgstr ""
"`Issue #21223 <https://bugs.python.org/21223>`__: Pass test_site/"
"test_startup_imports when some of the extensions are built as builtins."

#: ../../../Misc/NEWS:6335
msgid ""
"`Issue #20635 <https://bugs.python.org/20635>`__: Added tests for Tk "
"geometry managers."
msgstr ""
"`Issue #20635 <https://bugs.python.org/20635>`__: Added tests for Tk "
"geometry managers."

#: ../../../Misc/NEWS:6337
msgid "Add test case for freeze."
msgstr "Ajoute un test pour *freeze*."

#: ../../../Misc/NEWS:6339
msgid ""
"`Issue #20743 <https://bugs.python.org/20743>`__: Fix a reference leak in "
"test_tcl."
msgstr ""
"`Issue #20743 <https://bugs.python.org/20743>`__: Fix a reference leak in "
"test_tcl."

#: ../../../Misc/NEWS:6341
msgid ""
"`Issue #21097 <https://bugs.python.org/21097>`__: Move test_namespace_pkgs "
"into test_importlib."
msgstr ""
"`Issue #21097 <https://bugs.python.org/21097>`__: Move test_namespace_pkgs "
"into test_importlib."

#: ../../../Misc/NEWS:6343
msgid ""
"`Issue #21503 <https://bugs.python.org/21503>`__: Use test_both() "
"consistently in test_importlib."
msgstr ""
"`Issue #21503 <https://bugs.python.org/21503>`__: Use test_both() "
"consistently in test_importlib."

#: ../../../Misc/NEWS:6345
msgid ""
"`Issue #20939 <https://bugs.python.org/20939>`__: Avoid various network test "
"failures due to new redirect of http://www.python.org/ to https://www.python."
"org: use http://www.example.com instead."
msgstr ""
"`Issue #20939 <https://bugs.python.org/20939>`__: Avoid various network test "
"failures due to new redirect of http://www.python.org/ to https://www.python."
"org: use http://www.example.com instead."

#: ../../../Misc/NEWS:6349
msgid ""
"`Issue #20668 <https://bugs.python.org/20668>`__: asyncio tests no longer "
"rely on tests.txt file. (Patch by Vajrasky Kok)"
msgstr ""
"`Issue #20668 <https://bugs.python.org/20668>`__: asyncio tests no longer "
"rely on tests.txt file. (Patch by Vajrasky Kok)"

#: ../../../Misc/NEWS:6352
msgid ""
"`Issue #21093 <https://bugs.python.org/21093>`__: Prevent failures of ctypes "
"test_macholib on OS X if a copy of libz exists in $HOME/lib or /usr/local/"
"lib."
msgstr ""
"`Issue #21093 <https://bugs.python.org/21093>`__: Prevent failures of ctypes "
"test_macholib on OS X if a copy of libz exists in $HOME/lib or /usr/local/"
"lib."

#: ../../../Misc/NEWS:6355
msgid ""
"`Issue #22770 <https://bugs.python.org/22770>`__: Prevent some Tk segfaults "
"on OS X when running gui tests."
msgstr ""
"`Issue #22770 <https://bugs.python.org/22770>`__: Prevent some Tk segfaults "
"on OS X when running gui tests."

#: ../../../Misc/NEWS:6357
msgid ""
"`Issue #23211 <https://bugs.python.org/23211>`__: Workaround test_logging "
"failure on some OS X 10.6 systems."
msgstr ""
"`Issue #23211 <https://bugs.python.org/23211>`__: Workaround test_logging "
"failure on some OS X 10.6 systems."

#: ../../../Misc/NEWS:6359
msgid ""
"`Issue #23345 <https://bugs.python.org/23345>`__: Prevent test_ssl failures "
"with large OpenSSL patch level values (like 0.9.8zc)."
msgstr ""
"`Issue #23345 <https://bugs.python.org/23345>`__: Prevent test_ssl failures "
"with large OpenSSL patch level values (like 0.9.8zc)."

#: ../../../Misc/NEWS:6365
msgid ""
"`Issue #22314 <https://bugs.python.org/22314>`__: pydoc now works when the "
"LINES environment variable is set."
msgstr ""
"`Issue #22314 <https://bugs.python.org/22314>`__: pydoc now works when the "
"LINES environment variable is set."

#: ../../../Misc/NEWS:6367
msgid ""
"`Issue #22615 <https://bugs.python.org/22615>`__: Argument Clinic now "
"supports the \"type\" argument for the int converter.  This permits using "
"the int converter with enums and typedefs."
msgstr ""
"`Issue #22615 <https://bugs.python.org/22615>`__: Argument Clinic now "
"supports the \"type\" argument for the int converter.  This permits using "
"the int converter with enums and typedefs."

#: ../../../Misc/NEWS:6371
msgid ""
"`Issue #20076 <https://bugs.python.org/20076>`__: The makelocalealias.py "
"script no longer ignores UTF-8 mapping."
msgstr ""
"`Issue #20076 <https://bugs.python.org/20076>`__: The makelocalealias.py "
"script no longer ignores UTF-8 mapping."

#: ../../../Misc/NEWS:6373
msgid ""
"`Issue #20079 <https://bugs.python.org/20079>`__: The makelocalealias.py "
"script now can parse the SUPPORTED file from glibc sources and supports "
"command line options for source paths."
msgstr ""
"`Issue #20079 <https://bugs.python.org/20079>`__: The makelocalealias.py "
"script now can parse the SUPPORTED file from glibc sources and supports "
"command line options for source paths."

#: ../../../Misc/NEWS:6376
msgid ""
"`Issue #22201 <https://bugs.python.org/22201>`__: Command-line interface of "
"the zipfile module now correctly extracts ZIP files with directory entries.  "
"Patch by Ryan Wilson."
msgstr ""
"`Issue #22201 <https://bugs.python.org/22201>`__: Command-line interface of "
"the zipfile module now correctly extracts ZIP files with directory entries.  "
"Patch by Ryan Wilson."

#: ../../../Misc/NEWS:6379
msgid ""
"`Issue #22120 <https://bugs.python.org/22120>`__: For functions using an "
"unsigned integer return converter, Argument Clinic now generates a cast to "
"that type for the comparison to -1 in the generated code.  (This suppresses "
"a compilation warning.)"
msgstr ""
"`Issue #22120 <https://bugs.python.org/22120>`__: For functions using an "
"unsigned integer return converter, Argument Clinic now generates a cast to "
"that type for the comparison to -1 in the generated code.  (This suppresses "
"a compilation warning.)"

#: ../../../Misc/NEWS:6383
msgid ""
"`Issue #18974 <https://bugs.python.org/18974>`__: Tools/scripts/diff.py now "
"uses argparse instead of optparse."
msgstr ""
"`Issue #18974 <https://bugs.python.org/18974>`__: Tools/scripts/diff.py now "
"uses argparse instead of optparse."

#: ../../../Misc/NEWS:6385
msgid ""
"`Issue #21906 <https://bugs.python.org/21906>`__: Make Tools/scripts/md5sum."
"py work in Python 3. Patch by Zachary Ware."
msgstr ""
"`Issue #21906 <https://bugs.python.org/21906>`__: Make Tools/scripts/md5sum."
"py work in Python 3. Patch by Zachary Ware."

#: ../../../Misc/NEWS:6388
msgid ""
"`Issue #21629 <https://bugs.python.org/21629>`__: Fix Argument Clinic's \"--"
"converters\" feature."
msgstr ""
"`Issue #21629 <https://bugs.python.org/21629>`__: Fix Argument Clinic's \"--"
"converters\" feature."

#: ../../../Misc/NEWS:6390
msgid "Add support for ``yield from`` to 2to3."
msgstr "Ajoute le support de ``yield from`` √† *2to3*."

#: ../../../Misc/NEWS:6392
msgid "Add support for the PEP 465 matrix multiplication operator to 2to3."
msgstr ""

#: ../../../Misc/NEWS:6394
msgid ""
"`Issue #16047 <https://bugs.python.org/16047>`__: Fix module exception list "
"and __file__ handling in freeze. Patch by Meador Inge."
msgstr ""
"`Issue #16047 <https://bugs.python.org/16047>`__: Fix module exception list "
"and __file__ handling in freeze. Patch by Meador Inge."

#: ../../../Misc/NEWS:6397
msgid ""
"`Issue #11824 <https://bugs.python.org/11824>`__: Consider ABI tags in "
"freeze. Patch by Meador Inge."
msgstr ""
"`Issue #11824 <https://bugs.python.org/11824>`__: Consider ABI tags in "
"freeze. Patch by Meador Inge."

#: ../../../Misc/NEWS:6399
msgid ""
"`Issue #20535 <https://bugs.python.org/20535>`__: PYTHONWARNING no longer "
"affects the run_tests.py script. Patch by Arfrever Frehtes Taifersar "
"Arahesis."
msgstr ""
"`Issue #20535 <https://bugs.python.org/20535>`__: PYTHONWARNING no longer "
"affects the run_tests.py script. Patch by Arfrever Frehtes Taifersar "
"Arahesis."

#: ../../../Misc/NEWS:6405
msgid ""
"`Issue #23260 <https://bugs.python.org/23260>`__: Update Windows installer"
msgstr ""
"`Issue #23260 <https://bugs.python.org/23260>`__: Update Windows installer"

#: ../../../Misc/NEWS:6407
msgid ""
"The bundled version of Tcl/Tk has been updated to 8.6.3.  The most visible "
"result of this change is the addition of new native file dialogs when "
"running on Windows Vista or newer.  See Tcl/Tk's TIP 432 for more "
"information.  Also, this version of Tcl/Tk includes support for Windows 10."
msgstr ""

#: ../../../Misc/NEWS:6412
msgid ""
"`Issue #17896 <https://bugs.python.org/17896>`__: The Windows build scripts "
"now expect external library sources to be in ``PCbuild\\..\\externals`` "
"rather than ``PCbuild\\..\\..``."
msgstr ""
"`Issue #17896 <https://bugs.python.org/17896>`__: The Windows build scripts "
"now expect external library sources to be in ``PCbuild\\..\\externals`` "
"rather than ``PCbuild\\..\\..``."

#: ../../../Misc/NEWS:6415
msgid ""
"`Issue #17717 <https://bugs.python.org/17717>`__: The Windows build scripts "
"now use a copy of NASM pulled from svn.python.org to build OpenSSL."
msgstr ""
"`Issue #17717 <https://bugs.python.org/17717>`__: The Windows build scripts "
"now use a copy of NASM pulled from svn.python.org to build OpenSSL."

#: ../../../Misc/NEWS:6418
msgid ""
"`Issue #21907 <https://bugs.python.org/21907>`__: Improved the batch scripts "
"provided for building Python."
msgstr ""
"`Issue #21907 <https://bugs.python.org/21907>`__: Improved the batch scripts "
"provided for building Python."

#: ../../../Misc/NEWS:6420
msgid ""
"`Issue #22644 <https://bugs.python.org/22644>`__: The bundled version of "
"OpenSSL has been updated to 1.0.1j."
msgstr ""
"`Issue #22644 <https://bugs.python.org/22644>`__: The bundled version of "
"OpenSSL has been updated to 1.0.1j."

#: ../../../Misc/NEWS:6422
msgid ""
"`Issue #10747 <https://bugs.python.org/10747>`__: Use versioned labels in "
"the Windows start menu. Patch by Olive Kilburn."
msgstr ""
"`Issue #10747 <https://bugs.python.org/10747>`__: Use versioned labels in "
"the Windows start menu. Patch by Olive Kilburn."

#: ../../../Misc/NEWS:6425
msgid ""
"`Issue #22980 <https://bugs.python.org/22980>`__: .pyd files with a version "
"and platform tag (for example, \".cp35-win32.pyd\") will now be loaded in "
"preference to those without tags."
msgstr ""
"`Issue #22980 <https://bugs.python.org/22980>`__: .pyd files with a version "
"and platform tag (for example, \".cp35-win32.pyd\") will now be loaded in "
"preference to those without tags."

#: ../../../Misc/NEWS:6430
msgid "Python 3.4.0"
msgstr "Python 3.4.0"

#: ../../../Misc/NEWS:6432
msgid "Release date: 2014-03-16"
msgstr ""

#: ../../../Misc/NEWS:6437
msgid ""
"`Issue #20939 <https://bugs.python.org/20939>`__: Fix test_geturl failure in "
"test_urllibnet due to new redirect of http://www.python.org/ to https://www."
"python.org."
msgstr ""
"`Issue #20939 <https://bugs.python.org/20939>`__: Fix test_geturl failure in "
"test_urllibnet due to new redirect of http://www.python.org/ to https://www."
"python.org."

#: ../../../Misc/NEWS:6443
msgid "Merge in all documentation changes since branching 3.4.0rc1."
msgstr ""

#: ../../../Misc/NEWS:6447
msgid "Python 3.4.0 release candidate 3"
msgstr ""

#: ../../../Misc/NEWS:6449
msgid "Release date: 2014-03-09"
msgstr "Date de sortie¬†: 2014-03-09"

#: ../../../Misc/NEWS:6454
msgid ""
"`Issue #20786 <https://bugs.python.org/20786>`__: Fix signatures for dict."
"__delitem__ and property.__delete__ builtins."
msgstr ""
"`Issue #20786 <https://bugs.python.org/20786>`__: Fix signatures for dict."
"__delitem__ and property.__delete__ builtins."

#: ../../../Misc/NEWS:6460
msgid ""
"`Issue #20839 <https://bugs.python.org/20839>`__: Don't trigger a "
"DeprecationWarning in the still supported pkgutil.get_loader() API when "
"__loader__ isn't set on a module (nor when pkgutil.find_loader() is called "
"directly)."
msgstr ""
"`Issue #20839 <https://bugs.python.org/20839>`__: Don't trigger a "
"DeprecationWarning in the still supported pkgutil.get_loader() API when "
"__loader__ isn't set on a module (nor when pkgutil.find_loader() is called "
"directly)."

#: ../../../Misc/NEWS:6467
msgid ""
"`Issue #14512 <https://bugs.python.org/14512>`__: Launch pydoc -b instead of "
"pydocgui.pyw on Windows."
msgstr ""
"`Issue #14512 <https://bugs.python.org/14512>`__: Launch pydoc -b instead of "
"pydocgui.pyw on Windows."

#: ../../../Misc/NEWS:6469
msgid ""
"`Issue #20748 <https://bugs.python.org/20748>`__: Uninstalling pip does not "
"leave behind the pyc of the uninstaller anymore."
msgstr ""
"`Issue #20748 <https://bugs.python.org/20748>`__: Uninstalling pip does not "
"leave behind the pyc of the uninstaller anymore."

#: ../../../Misc/NEWS:6472
msgid ""
"`Issue #20568 <https://bugs.python.org/20568>`__: The Windows installer now "
"installs the unversioned ``pip`` command in addition to the versioned "
"``pip3`` and ``pip3.4`` commands."
msgstr ""
"`Issue #20568 <https://bugs.python.org/20568>`__: The Windows installer now "
"installs the unversioned ``pip`` command in addition to the versioned "
"``pip3`` and ``pip3.4`` commands."

#: ../../../Misc/NEWS:6475
msgid ""
"`Issue #20757 <https://bugs.python.org/20757>`__: The ensurepip helper for "
"the Windows uninstaller now skips uninstalling pip (rather than failing) if "
"the user has updated pip to a different version from the one bundled with "
"ensurepip."
msgstr ""
"`Issue #20757 <https://bugs.python.org/20757>`__: The ensurepip helper for "
"the Windows uninstaller now skips uninstalling pip (rather than failing) if "
"the user has updated pip to a different version from the one bundled with "
"ensurepip."

#: ../../../Misc/NEWS:6479
msgid ""
"`Issue #20465 <https://bugs.python.org/20465>`__: Update OS X and Windows "
"installer builds to use SQLite 3.8.3.1."
msgstr ""
"`Issue #20465 <https://bugs.python.org/20465>`__: Update OS X and Windows "
"installer builds to use SQLite 3.8.3.1."

#: ../../../Misc/NEWS:6484
msgid "Python 3.4.0 release candidate 2"
msgstr ""

#: ../../../Misc/NEWS:6486
msgid "Release date: 2014-02-23"
msgstr ""

#: ../../../Misc/NEWS:6491
msgid ""
"`Issue #20625 <https://bugs.python.org/20625>`__: Parameter names in "
"__annotations__ were not mangled properly. Discovered by Jonas Wielicki, "
"patch by Yury Selivanov."
msgstr ""
"`Issue #20625 <https://bugs.python.org/20625>`__: Parameter names in "
"__annotations__ were not mangled properly. Discovered by Jonas Wielicki, "
"patch by Yury Selivanov."

#: ../../../Misc/NEWS:6494
msgid ""
"`Issue #20261 <https://bugs.python.org/20261>`__: In pickle, lookup "
"__getnewargs__ and __getnewargs_ex__ on the type of the object."
msgstr ""
"`Issue #20261 <https://bugs.python.org/20261>`__: In pickle, lookup "
"__getnewargs__ and __getnewargs_ex__ on the type of the object."

#: ../../../Misc/NEWS:6497
msgid ""
"`Issue #20619 <https://bugs.python.org/20619>`__: Give the AST nodes of "
"keyword-only arguments a column and line number."
msgstr ""
"`Issue #20619 <https://bugs.python.org/20619>`__: Give the AST nodes of "
"keyword-only arguments a column and line number."

#: ../../../Misc/NEWS:6500
msgid ""
"`Issue #20526 <https://bugs.python.org/20526>`__: Revert changes of `issue "
"#19466 <https://bugs.python.org/19466>`__ which introduces a regression: "
"don't clear anymore the state of Python threads early during the Python "
"shutdown."
msgstr ""
"`Issue #20526 <https://bugs.python.org/20526>`__: Revert changes of `issue "
"#19466 <https://bugs.python.org/19466>`__ which introduces a regression: "
"don't clear anymore the state of Python threads early during the Python "
"shutdown."

#: ../../../Misc/NEWS:6507
msgid ""
"`Issue #20710 <https://bugs.python.org/20710>`__: The pydoc summary line no "
"longer displays the \"self\" parameter for bound methods."
msgstr ""
"`Issue #20710 <https://bugs.python.org/20710>`__: The pydoc summary line no "
"longer displays the \"self\" parameter for bound methods."

#: ../../../Misc/NEWS:6510
msgid ""
"`Issue #20566 <https://bugs.python.org/20566>`__: Change asyncio."
"as_completed() to use a Queue, to avoid O(N**2) behavior."
msgstr ""
"`Issue #20566 <https://bugs.python.org/20566>`__: Change asyncio."
"as_completed() to use a Queue, to avoid O(N**2) behavior."

#: ../../../Misc/NEWS:6513
msgid ""
"`Issue #20704 <https://bugs.python.org/20704>`__: Implement new debug API in "
"asyncio. Add new methods BaseEventLoop.set_debug() and BaseEventLoop."
"get_debug(). Add support for setting 'asyncio.tasks._DEBUG' variable with "
"'PYTHONASYNCIODEBUG' environment variable."
msgstr ""
"`Issue #20704 <https://bugs.python.org/20704>`__: Implement new debug API in "
"asyncio. Add new methods BaseEventLoop.set_debug() and BaseEventLoop."
"get_debug(). Add support for setting 'asyncio.tasks._DEBUG' variable with "
"'PYTHONASYNCIODEBUG' environment variable."

#: ../../../Misc/NEWS:6518
msgid ""
"asyncio: Refactoring and fixes: BaseEventLoop.sock_connect() raises an error "
"if the address is not resolved; use __slots__ in Handle and TimerHandle; "
"as_completed() and wait() raise TypeError if the passed list of Futures is a "
"single Future; call_soon() and other 'call_*()' functions raise TypeError if "
"the passed callback is a coroutine function; _ProactorBasePipeTransport uses "
"_FlowControlMixin; WriteTransport.set_write_buffer_size() calls "
"_maybe_pause_protocol() to consider pausing receiving if the watermark "
"limits have changed; fix _check_resolved_address() for IPv6 address; and "
"other minor improvements, along with multiple documentation updates."
msgstr ""

#: ../../../Misc/NEWS:6529
msgid ""
"`Issue #20684 <https://bugs.python.org/20684>`__: Fix inspect."
"getfullargspec() to not to follow __wrapped__ chains. Make its behaviour "
"consistent with bound methods first argument. Patch by Nick Coghlan and Yury "
"Selivanov."
msgstr ""
"`Issue #20684 <https://bugs.python.org/20684>`__: Fix inspect."
"getfullargspec() to not to follow __wrapped__ chains. Make its behaviour "
"consistent with bound methods first argument. Patch by Nick Coghlan and Yury "
"Selivanov."

#: ../../../Misc/NEWS:6533
msgid ""
"`Issue #20681 <https://bugs.python.org/20681>`__: Add new error handling API "
"in asyncio. New APIs: loop.set_exception_handler(), loop."
"default_exception_handler(), and loop.call_exception_handler()."
msgstr ""
"`Issue #20681 <https://bugs.python.org/20681>`__: Add new error handling API "
"in asyncio. New APIs: loop.set_exception_handler(), loop."
"default_exception_handler(), and loop.call_exception_handler()."

#: ../../../Misc/NEWS:6537
msgid ""
"`Issue #20673 <https://bugs.python.org/20673>`__: Implement support for UNIX "
"Domain Sockets in asyncio. New APIs: loop.create_unix_connection(), loop."
"create_unix_server(), streams.open_unix_connection(), and streams."
"start_unix_server()."
msgstr ""
"`Issue #20673 <https://bugs.python.org/20673>`__: Implement support for UNIX "
"Domain Sockets in asyncio. New APIs: loop.create_unix_connection(), loop."
"create_unix_server(), streams.open_unix_connection(), and streams."
"start_unix_server()."

#: ../../../Misc/NEWS:6541
msgid ""
"`Issue #20616 <https://bugs.python.org/20616>`__: Add a format() method to "
"tracemalloc.Traceback."
msgstr ""
"`Issue #20616 <https://bugs.python.org/20616>`__: Add a format() method to "
"tracemalloc.Traceback."

#: ../../../Misc/NEWS:6543
msgid ""
"`Issue #19744 <https://bugs.python.org/19744>`__: the ensurepip installation "
"step now just prints a warning to stderr rather than failing outright if SSL/"
"TLS is unavailable. This allows local installation of POSIX builds without "
"SSL/TLS support."
msgstr ""
"`Issue #19744 <https://bugs.python.org/19744>`__: the ensurepip installation "
"step now just prints a warning to stderr rather than failing outright if SSL/"
"TLS is unavailable. This allows local installation of POSIX builds without "
"SSL/TLS support."

#: ../../../Misc/NEWS:6547
msgid ""
"`Issue #20594 <https://bugs.python.org/20594>`__: Avoid name clash with the "
"libc function posix_close."
msgstr ""
"`Issue #20594 <https://bugs.python.org/20594>`__: Avoid name clash with the "
"libc function posix_close."

#: ../../../Misc/NEWS:6552
msgid ""
"`Issue #20641 <https://bugs.python.org/20641>`__: Run MSI custom actions "
"(pip installation, pyc compilation) with the NoImpersonate flag, to support "
"elevated execution (UAC)."
msgstr ""
"`Issue #20641 <https://bugs.python.org/20641>`__: Run MSI custom actions "
"(pip installation, pyc compilation) with the NoImpersonate flag, to support "
"elevated execution (UAC)."

#: ../../../Misc/NEWS:6555
msgid ""
"`Issue #20221 <https://bugs.python.org/20221>`__: Removed conflicting (or "
"circular) hypot definition when compiled with VS 2010 or above.  Initial "
"patch by Tabrez Mohammed."
msgstr ""
"`Issue #20221 <https://bugs.python.org/20221>`__: Removed conflicting (or "
"circular) hypot definition when compiled with VS 2010 or above.  Initial "
"patch by Tabrez Mohammed."

#: ../../../Misc/NEWS:6558
msgid ""
"`Issue #20609 <https://bugs.python.org/20609>`__: Restored the ability to "
"build 64-bit Windows binaries on 32-bit Windows, which was broken by the "
"change in `issue #19788 <https://bugs.python.org/19788>`__."
msgstr ""
"`Issue #20609 <https://bugs.python.org/20609>`__: Restored the ability to "
"build 64-bit Windows binaries on 32-bit Windows, which was broken by the "
"change in `issue #19788 <https://bugs.python.org/19788>`__."

#: ../../../Misc/NEWS:6563
msgid "Python 3.4.0 release candidate 1"
msgstr ""

#: ../../../Misc/NEWS:6565
msgid "Release date: 2014-02-10"
msgstr "Date de sortie¬†: 2014-02-10"

#: ../../../Misc/NEWS:6570
msgid ""
"`Issue #19255 <https://bugs.python.org/19255>`__: The builtins module is "
"restored to initial value before cleaning other modules.  The sys and "
"builtins modules are cleaned last."
msgstr ""
"`Issue #19255 <https://bugs.python.org/19255>`__: The builtins module is "
"restored to initial value before cleaning other modules.  The sys and "
"builtins modules are cleaned last."

#: ../../../Misc/NEWS:6573
msgid ""
"`Issue #20588 <https://bugs.python.org/20588>`__: Make Python-ast.c C89 "
"compliant."
msgstr ""
"`Issue #20588 <https://bugs.python.org/20588>`__: Make Python-ast.c C89 "
"compliant."

#: ../../../Misc/NEWS:6575
msgid ""
"`Issue #20437 <https://bugs.python.org/20437>`__: Fixed 22 potential bugs "
"when deleting object references."
msgstr ""
"`Issue #20437 <https://bugs.python.org/20437>`__: Fixed 22 potential bugs "
"when deleting object references."

#: ../../../Misc/NEWS:6577
msgid ""
"`Issue #20500 <https://bugs.python.org/20500>`__: Displaying an exception at "
"interpreter shutdown no longer risks triggering an assertion failure in "
"PyObject_Str."
msgstr ""
"`Issue #20500 <https://bugs.python.org/20500>`__: Displaying an exception at "
"interpreter shutdown no longer risks triggering an assertion failure in "
"PyObject_Str."

#: ../../../Misc/NEWS:6580
msgid ""
"`Issue #20538 <https://bugs.python.org/20538>`__: UTF-7 incremental decoder "
"produced inconsistent string when input was truncated in BASE64 section."
msgstr ""
"`Issue #20538 <https://bugs.python.org/20538>`__: UTF-7 incremental decoder "
"produced inconsistent string when input was truncated in BASE64 section."

#: ../../../Misc/NEWS:6583
msgid ""
"`Issue #20404 <https://bugs.python.org/20404>`__: io.TextIOWrapper (and "
"hence the open() builtin) now uses the internal codec marking system added "
"for `issue #19619 <https://bugs.python.org/19619>`__ to throw LookupError "
"for known non-text encodings at stream construction time. The existing "
"output type checks remain in place to deal with unmarked third party codecs."
msgstr ""
"`Issue #20404 <https://bugs.python.org/20404>`__: io.TextIOWrapper (and "
"hence the open() builtin) now uses the internal codec marking system added "
"for `issue #19619 <https://bugs.python.org/19619>`__ to throw LookupError "
"for known non-text encodings at stream construction time. The existing "
"output type checks remain in place to deal with unmarked third party codecs."

#: ../../../Misc/NEWS:6589
msgid "`Issue #17162 <https://bugs.python.org/17162>`__: Add PyType_GetSlot."
msgstr "`Issue #17162 <https://bugs.python.org/17162>`__: Add PyType_GetSlot."

#: ../../../Misc/NEWS:6591
msgid ""
"`Issue #20162 <https://bugs.python.org/20162>`__: Fix an alignment issue in "
"the siphash24() hash function which caused a crash on PowerPC 64-bit (ppc64)."
msgstr ""
"`Issue #20162 <https://bugs.python.org/20162>`__: Fix an alignment issue in "
"the siphash24() hash function which caused a crash on PowerPC 64-bit (ppc64)."

#: ../../../Misc/NEWS:6597
msgid ""
"`Issue #20530 <https://bugs.python.org/20530>`__: The signatures for slot "
"builtins have been updated to reflect the fact that they only accept "
"positional-only arguments."
msgstr ""
"`Issue #20530 <https://bugs.python.org/20530>`__: The signatures for slot "
"builtins have been updated to reflect the fact that they only accept "
"positional-only arguments."

#: ../../../Misc/NEWS:6600
msgid ""
"`Issue #20517 <https://bugs.python.org/20517>`__: Functions in the os module "
"that accept two filenames now register both filenames in the exception on "
"failure."
msgstr ""
"`Issue #20517 <https://bugs.python.org/20517>`__: Functions in the os module "
"that accept two filenames now register both filenames in the exception on "
"failure."

#: ../../../Misc/NEWS:6603
msgid ""
"`Issue #20563 <https://bugs.python.org/20563>`__: The ipaddress module API "
"is now considered stable."
msgstr ""
"`Issue #20563 <https://bugs.python.org/20563>`__: The ipaddress module API "
"is now considered stable."

#: ../../../Misc/NEWS:6605
msgid ""
"`Issue #14983 <https://bugs.python.org/14983>`__: email.generator now always "
"adds a line end after each MIME boundary marker, instead of doing so only "
"when there is an epilogue.  This fixes an RFC compliance bug and solves an "
"issue with signed MIME parts."
msgstr ""
"`Issue #14983 <https://bugs.python.org/14983>`__: email.generator now always "
"adds a line end after each MIME boundary marker, instead of doing so only "
"when there is an epilogue.  This fixes an RFC compliance bug and solves an "
"issue with signed MIME parts."

#: ../../../Misc/NEWS:6609
msgid ""
"`Issue #20540 <https://bugs.python.org/20540>`__: Fix a performance "
"regression (vs. Python 3.2) when layering a multiprocessing Connection over "
"a TCP socket.  For small payloads, Nagle's algorithm would introduce idle "
"delays before the entire transmission of a message."
msgstr ""
"`Issue #20540 <https://bugs.python.org/20540>`__: Fix a performance "
"regression (vs. Python 3.2) when layering a multiprocessing Connection over "
"a TCP socket.  For small payloads, Nagle's algorithm would introduce idle "
"delays before the entire transmission of a message."

#: ../../../Misc/NEWS:6614
msgid ""
"`Issue #16983 <https://bugs.python.org/16983>`__: the new email header "
"parsing code will now decode encoded words that are (incorrectly) surrounded "
"by quotes, and register a defect."
msgstr ""
"`Issue #16983 <https://bugs.python.org/16983>`__: the new email header "
"parsing code will now decode encoded words that are (incorrectly) surrounded "
"by quotes, and register a defect."

#: ../../../Misc/NEWS:6617
msgid ""
"`Issue #19772 <https://bugs.python.org/19772>`__: email.generator no longer "
"mutates the message object when doing a down-transform from 8bit to 7bit "
"CTEs."
msgstr ""
"`Issue #19772 <https://bugs.python.org/19772>`__: email.generator no longer "
"mutates the message object when doing a down-transform from 8bit to 7bit "
"CTEs."

#: ../../../Misc/NEWS:6620
msgid ""
"`Issue #20536 <https://bugs.python.org/20536>`__: the statistics module now "
"correctly handle Decimal instances with positive exponents"
msgstr ""
"`Issue #20536 <https://bugs.python.org/20536>`__: the statistics module now "
"correctly handle Decimal instances with positive exponents"

#: ../../../Misc/NEWS:6623
msgid ""
"`Issue #18805 <https://bugs.python.org/18805>`__: the netmask/hostmask "
"parsing in ipaddress now more reliably filters out illegal values and "
"correctly allows any valid prefix length."
msgstr ""
"`Issue #18805 <https://bugs.python.org/18805>`__: the netmask/hostmask "
"parsing in ipaddress now more reliably filters out illegal values and "
"correctly allows any valid prefix length."

#: ../../../Misc/NEWS:6626
msgid ""
"`Issue #20481 <https://bugs.python.org/20481>`__: For at least Python 3.4, "
"the statistics module will require that all inputs for a single operation be "
"of a single consistent type, or else a mixed of ints and a single other "
"consistent type. This avoids some interoperability issues that arose with "
"the previous approach of coercing to a suitable common type."
msgstr ""
"`Issue #20481 <https://bugs.python.org/20481>`__: For at least Python 3.4, "
"the statistics module will require that all inputs for a single operation be "
"of a single consistent type, or else a mixed of ints and a single other "
"consistent type. This avoids some interoperability issues that arose with "
"the previous approach of coercing to a suitable common type."

#: ../../../Misc/NEWS:6632
msgid ""
"`Issue #20478 <https://bugs.python.org/20478>`__: the statistics module now "
"treats collections.Counter inputs like any other iterable."
msgstr ""
"`Issue #20478 <https://bugs.python.org/20478>`__: the statistics module now "
"treats collections.Counter inputs like any other iterable."

#: ../../../Misc/NEWS:6635
msgid ""
"`Issue #17369 <https://bugs.python.org/17369>`__: get_filename was raising "
"an exception if the filename parameter's RFC2231 encoding was broken in "
"certain ways.  This was a regression relative to python2."
msgstr ""
"`Issue #17369 <https://bugs.python.org/17369>`__: get_filename was raising "
"an exception if the filename parameter's RFC2231 encoding was broken in "
"certain ways.  This was a regression relative to python2."

#: ../../../Misc/NEWS:6639
msgid ""
"`Issue #20013 <https://bugs.python.org/20013>`__: Some imap servers "
"disconnect if the current mailbox is deleted, and imaplib did not handle "
"that case gracefully.  Now it handles the 'bye' correctly."
msgstr ""
"`Issue #20013 <https://bugs.python.org/20013>`__: Some imap servers "
"disconnect if the current mailbox is deleted, and imaplib did not handle "
"that case gracefully.  Now it handles the 'bye' correctly."

#: ../../../Misc/NEWS:6643
msgid ""
"`Issue #20531 <https://bugs.python.org/20531>`__: Revert 3.4 version of fix "
"for #19063, and apply the 3.3 version.  That is, do *not* raise an error if "
"unicode is passed to email.message.Message.set_payload."
msgstr ""
"`Issue #20531 <https://bugs.python.org/20531>`__: Revert 3.4 version of fix "
"for #19063, and apply the 3.3 version.  That is, do *not* raise an error if "
"unicode is passed to email.message.Message.set_payload."

#: ../../../Misc/NEWS:6647
msgid ""
"`Issue #20476 <https://bugs.python.org/20476>`__: If a non-compat32 policy "
"is used with any of the email parsers, EmailMessage is now used as the "
"factory class.  The factory class should really come from the policy; that "
"will get fixed in 3.5."
msgstr ""
"`Issue #20476 <https://bugs.python.org/20476>`__: If a non-compat32 policy "
"is used with any of the email parsers, EmailMessage is now used as the "
"factory class.  The factory class should really come from the policy; that "
"will get fixed in 3.5."

#: ../../../Misc/NEWS:6651
msgid ""
"`Issue #19920 <https://bugs.python.org/19920>`__: TarFile.list() no longer "
"fails when outputs a listing containing non-encodable characters.  Based on "
"patch by Vajrasky Kok."
msgstr ""
"`Issue #19920 <https://bugs.python.org/19920>`__: TarFile.list() no longer "
"fails when outputs a listing containing non-encodable characters.  Based on "
"patch by Vajrasky Kok."

#: ../../../Misc/NEWS:6654
msgid ""
"`Issue #20515 <https://bugs.python.org/20515>`__: Fix NULL pointer "
"dereference introduced by `issue #20368 <https://bugs.python.org/20368>`__."
msgstr ""
"`Issue #20515 <https://bugs.python.org/20515>`__: Fix NULL pointer "
"dereference introduced by `issue #20368 <https://bugs.python.org/20368>`__."

#: ../../../Misc/NEWS:6656
msgid ""
"`Issue #19186 <https://bugs.python.org/19186>`__: Restore namespacing of "
"expat symbols inside the pyexpat module."
msgstr ""
"`Issue #19186 <https://bugs.python.org/19186>`__: Restore namespacing of "
"expat symbols inside the pyexpat module."

#: ../../../Misc/NEWS:6658
msgid ""
"`Issue #20053 <https://bugs.python.org/20053>`__: ensurepip (and hence venv) "
"are no longer affected by the settings in the default pip configuration file."
msgstr ""
"`Issue #20053 <https://bugs.python.org/20053>`__: ensurepip (and hence venv) "
"are no longer affected by the settings in the default pip configuration file."

#: ../../../Misc/NEWS:6661
msgid ""
"`Issue #20426 <https://bugs.python.org/20426>`__: When passing the re.DEBUG "
"flag, re.compile() displays the debug output every time it is called, "
"regardless of the compilation cache."
msgstr ""
"`Issue #20426 <https://bugs.python.org/20426>`__: When passing the re.DEBUG "
"flag, re.compile() displays the debug output every time it is called, "
"regardless of the compilation cache."

#: ../../../Misc/NEWS:6664
msgid ""
"`Issue #20368 <https://bugs.python.org/20368>`__: The null character now "
"correctly passed from Tcl to Python. Improved error handling in variables-"
"related commands."
msgstr ""
"`Issue #20368 <https://bugs.python.org/20368>`__: The null character now "
"correctly passed from Tcl to Python. Improved error handling in variables-"
"related commands."

#: ../../../Misc/NEWS:6667
msgid ""
"`Issue #20435 <https://bugs.python.org/20435>`__: Fix _pyio.StringIO."
"getvalue() to take into account newline translation settings."
msgstr ""
"`Issue #20435 <https://bugs.python.org/20435>`__: Fix _pyio.StringIO."
"getvalue() to take into account newline translation settings."

#: ../../../Misc/NEWS:6670
msgid "tracemalloc: Fix slicing traces and fix slicing a traceback."
msgstr ""

#: ../../../Misc/NEWS:6672
msgid ""
"`Issue #20354 <https://bugs.python.org/20354>`__: Fix an alignment issue in "
"the tracemalloc module on 64-bit platforms. Bug seen on 64-bit Linux when "
"using \"make profile-opt\"."
msgstr ""
"`Issue #20354 <https://bugs.python.org/20354>`__: Fix an alignment issue in "
"the tracemalloc module on 64-bit platforms. Bug seen on 64-bit Linux when "
"using \"make profile-opt\"."

#: ../../../Misc/NEWS:6675
msgid ""
"`Issue #17159 <https://bugs.python.org/17159>`__: inspect.signature now "
"accepts duck types of functions, which adds support for Cython functions. "
"Initial patch by Stefan Behnel."
msgstr ""
"`Issue #17159 <https://bugs.python.org/17159>`__: inspect.signature now "
"accepts duck types of functions, which adds support for Cython functions. "
"Initial patch by Stefan Behnel."

#: ../../../Misc/NEWS:6678
msgid ""
"`Issue #18801 <https://bugs.python.org/18801>`__: Fix inspect."
"classify_class_attrs to correctly classify object.__new__ and object."
"__init__."
msgstr ""
"`Issue #18801 <https://bugs.python.org/18801>`__: Fix inspect."
"classify_class_attrs to correctly classify object.__new__ and object."
"__init__."

#: ../../../Misc/NEWS:6681
msgid "Fixed cmath.isinf's name in its argument parsing code."
msgstr ""

#: ../../../Misc/NEWS:6683
msgid ""
"`Issue #20311 <https://bugs.python.org/20311>`__, #20452: poll and epoll now "
"round the timeout away from zero, instead of rounding towards zero, in "
"select and selectors modules: select.epoll.poll(), selectors.PollSelector."
"poll() and selectors.EpollSelector.poll(). For example, a timeout of one "
"microsecond (1e-6) is now rounded to one millisecondi (1e-3), instead of "
"being rounded to zero.  However, the granularity property and asyncio's "
"resolution feature were removed again."
msgstr ""
"`Issue #20311 <https://bugs.python.org/20311>`__, #20452: poll and epoll now "
"round the timeout away from zero, instead of rounding towards zero, in "
"select and selectors modules: select.epoll.poll(), selectors.PollSelector."
"poll() and selectors.EpollSelector.poll(). For example, a timeout of one "
"microsecond (1e-6) is now rounded to one millisecondi (1e-3), instead of "
"being rounded to zero.  However, the granularity property and asyncio's "
"resolution feature were removed again."

#: ../../../Misc/NEWS:6691
msgid ""
"asyncio: Some refactoring; various fixes; add write flow control to unix "
"pipes; Future.set_exception() instantiates the exception argument if it is a "
"class; improved proactor pipe transport; support wait_for(f, None); don't "
"log broken/disconnected pipes; use ValueError instead of assert for "
"forbidden subprocess_{shell,exec} arguments; added a convenience API for "
"subprocess management; added StreamReader.at_eof(); properly handle "
"duplicate coroutines/futures in gather(), wait(), as_completed(); use a "
"bytearray for buffering in StreamReader; and more."
msgstr ""

#: ../../../Misc/NEWS:6701
msgid ""
"`Issue #20288 <https://bugs.python.org/20288>`__: fix handling of invalid "
"numeric charrefs in HTMLParser."
msgstr ""
"`Issue #20288 <https://bugs.python.org/20288>`__: fix handling of invalid "
"numeric charrefs in HTMLParser."

#: ../../../Misc/NEWS:6703
msgid ""
"`Issue #20424 <https://bugs.python.org/20424>`__: Python implementation of "
"io.StringIO now supports lone surrogates."
msgstr ""
"`Issue #20424 <https://bugs.python.org/20424>`__: Python implementation of "
"io.StringIO now supports lone surrogates."

#: ../../../Misc/NEWS:6705
msgid ""
"`Issue #20308 <https://bugs.python.org/20308>`__: inspect.signature now "
"works on classes without user-defined __init__ or __new__ methods."
msgstr ""
"`Issue #20308 <https://bugs.python.org/20308>`__: inspect.signature now "
"works on classes without user-defined __init__ or __new__ methods."

#: ../../../Misc/NEWS:6708
msgid ""
"`Issue #20372 <https://bugs.python.org/20372>`__: inspect.getfile (and a "
"bunch of other inspect functions that use it) doesn't crash with unexpected "
"AttributeError on classes defined in C without __module__."
msgstr ""
"`Issue #20372 <https://bugs.python.org/20372>`__: inspect.getfile (and a "
"bunch of other inspect functions that use it) doesn't crash with unexpected "
"AttributeError on classes defined in C without __module__."

#: ../../../Misc/NEWS:6712
msgid ""
"`Issue #20356 <https://bugs.python.org/20356>`__: inspect.signature "
"formatting uses '/' to separate positional-only parameters from others."
msgstr ""
"`Issue #20356 <https://bugs.python.org/20356>`__: inspect.signature "
"formatting uses '/' to separate positional-only parameters from others."

#: ../../../Misc/NEWS:6715
msgid ""
"`Issue #20223 <https://bugs.python.org/20223>`__: inspect.signature now "
"supports methods defined with functools.partialmethods."
msgstr ""
"`Issue #20223 <https://bugs.python.org/20223>`__: inspect.signature now "
"supports methods defined with functools.partialmethods."

#: ../../../Misc/NEWS:6718
msgid ""
"`Issue #19456 <https://bugs.python.org/19456>`__: ntpath.join() now joins "
"relative paths correctly when a drive is present."
msgstr ""
"`Issue #19456 <https://bugs.python.org/19456>`__: ntpath.join() now joins "
"relative paths correctly when a drive is present."

#: ../../../Misc/NEWS:6721
msgid ""
"`Issue #19077 <https://bugs.python.org/19077>`__: tempfile."
"TemporaryDirectory cleanup no longer fails when called during shutdown.  "
"Emitting resource warning in __del__ no longer fails. Original patch by "
"Antoine Pitrou."
msgstr ""
"`Issue #19077 <https://bugs.python.org/19077>`__: tempfile."
"TemporaryDirectory cleanup no longer fails when called during shutdown.  "
"Emitting resource warning in __del__ no longer fails. Original patch by "
"Antoine Pitrou."

#: ../../../Misc/NEWS:6725
msgid ""
"`Issue #20394 <https://bugs.python.org/20394>`__: Silence Coverity warning "
"in audioop module."
msgstr ""
"`Issue #20394 <https://bugs.python.org/20394>`__: Silence Coverity warning "
"in audioop module."

#: ../../../Misc/NEWS:6727
msgid ""
"`Issue #20367 <https://bugs.python.org/20367>`__: Fix behavior of concurrent."
"futures.as_completed() for duplicate arguments.  Patch by Glenn Langford."
msgstr ""
"`Issue #20367 <https://bugs.python.org/20367>`__: Fix behavior of concurrent."
"futures.as_completed() for duplicate arguments.  Patch by Glenn Langford."

#: ../../../Misc/NEWS:6730
msgid ""
"`Issue #8260 <https://bugs.python.org/8260>`__: The read(), readline() and "
"readlines() methods of codecs.StreamReader returned incomplete data when "
"were called after readline() or read(size).  Based on patch by Amaury "
"Forgeot d'Arc."
msgstr ""
"`Issue #8260 <https://bugs.python.org/8260>`__: The read(), readline() and "
"readlines() methods of codecs.StreamReader returned incomplete data when "
"were called after readline() or read(size).  Based on patch by Amaury "
"Forgeot d'Arc."

#: ../../../Misc/NEWS:6734
msgid ""
"`Issue #20105 <https://bugs.python.org/20105>`__: the codec exception "
"chaining now correctly sets the traceback of the original exception as its "
"__traceback__ attribute."
msgstr ""
"`Issue #20105 <https://bugs.python.org/20105>`__: the codec exception "
"chaining now correctly sets the traceback of the original exception as its "
"__traceback__ attribute."

#: ../../../Misc/NEWS:6737
msgid ""
"`Issue #17481 <https://bugs.python.org/17481>`__: inspect.getfullargspec() "
"now uses inspect.signature() API."
msgstr ""
"`Issue #17481 <https://bugs.python.org/17481>`__: inspect.getfullargspec() "
"now uses inspect.signature() API."

#: ../../../Misc/NEWS:6739
msgid ""
"`Issue #15304 <https://bugs.python.org/15304>`__: concurrent.futures.wait() "
"can block forever even if Futures have completed. Patch by Glenn Langford."
msgstr ""
"`Issue #15304 <https://bugs.python.org/15304>`__: concurrent.futures.wait() "
"can block forever even if Futures have completed. Patch by Glenn Langford."

#: ../../../Misc/NEWS:6742
msgid ""
"`Issue #14455 <https://bugs.python.org/14455>`__: plistlib: fix serializing "
"integers in the range of an unsigned long long but outside of the range of "
"signed long long for binary plist files."
msgstr ""
"`Issue #14455 <https://bugs.python.org/14455>`__: plistlib: fix serializing "
"integers in the range of an unsigned long long but outside of the range of "
"signed long long for binary plist files."

#: ../../../Misc/NEWS:6749
msgid ""
"`Issue #20406 <https://bugs.python.org/20406>`__: Use Python application "
"icons for Idle window title bars. Patch mostly by Serhiy Storchaka."
msgstr ""
"`Issue #20406 <https://bugs.python.org/20406>`__: Use Python application "
"icons for Idle window title bars. Patch mostly by Serhiy Storchaka."

#: ../../../Misc/NEWS:6752
msgid ""
"Update the python.gif icon for the Idle classbrowser and pathbowser from the "
"old green snake to the new blue and yellow snakes."
msgstr ""

#: ../../../Misc/NEWS:6755
msgid ""
"`Issue #17721 <https://bugs.python.org/17721>`__: Remove non-functional "
"configuration dialog help button until we make it actually gives some help "
"when clicked. Patch by Guilherme Sim√µes."
msgstr ""
"`Issue #17721 <https://bugs.python.org/17721>`__: Remove non-functional "
"configuration dialog help button until we make it actually gives some help "
"when clicked. Patch by Guilherme Sim√µes."

#: ../../../Misc/NEWS:6761
msgid ""
"`Issue #20532 <https://bugs.python.org/20532>`__: Tests which use _testcapi "
"now are marked as CPython only."
msgstr ""
"`Issue #20532 <https://bugs.python.org/20532>`__: Tests which use _testcapi "
"now are marked as CPython only."

#: ../../../Misc/NEWS:6763
msgid ""
"`Issue #19920 <https://bugs.python.org/19920>`__: Added tests for TarFile."
"list().  Based on patch by Vajrasky Kok."
msgstr ""
"`Issue #19920 <https://bugs.python.org/19920>`__: Added tests for TarFile."
"list().  Based on patch by Vajrasky Kok."

#: ../../../Misc/NEWS:6765
msgid ""
"`Issue #19990 <https://bugs.python.org/19990>`__: Added tests for the imghdr "
"module.  Based on patch by Claudiu Popa."
msgstr ""
"`Issue #19990 <https://bugs.python.org/19990>`__: Added tests for the imghdr "
"module.  Based on patch by Claudiu Popa."

#: ../../../Misc/NEWS:6768
msgid ""
"`Issue #20474 <https://bugs.python.org/20474>`__: Fix test_socket "
"\"unexpected success\" failures on OS X 10.7+."
msgstr ""
"`Issue #20474 <https://bugs.python.org/20474>`__: Fix test_socket "
"\"unexpected success\" failures on OS X 10.7+."

#: ../../../Misc/NEWS:6773
msgid ""
"`Issue #20530 <https://bugs.python.org/20530>`__: Argument Clinic's "
"signature format has been revised again. The new syntax is highly human "
"readable while still preventing false positives.  The syntax also extends "
"Python syntax to denote \"self\" and positional-only parameters, allowing "
"inspect.Signature objects to be totally accurate for all supported builtins "
"in Python 3.4."
msgstr ""
"`Issue #20530 <https://bugs.python.org/20530>`__: Argument Clinic's "
"signature format has been revised again. The new syntax is highly human "
"readable while still preventing false positives.  The syntax also extends "
"Python syntax to denote \"self\" and positional-only parameters, allowing "
"inspect.Signature objects to be totally accurate for all supported builtins "
"in Python 3.4."

#: ../../../Misc/NEWS:6779
msgid ""
"`Issue #20456 <https://bugs.python.org/20456>`__: Argument Clinic now "
"observes the C preprocessor conditional compilation statements of the C "
"files it parses.  When a Clinic block is inside a conditional code, it "
"adjusts its output to match, including automatically generating an empty "
"methoddef macro."
msgstr ""
"`Issue #20456 <https://bugs.python.org/20456>`__: Argument Clinic now "
"observes the C preprocessor conditional compilation statements of the C "
"files it parses.  When a Clinic block is inside a conditional code, it "
"adjusts its output to match, including automatically generating an empty "
"methoddef macro."

#: ../../../Misc/NEWS:6784
msgid ""
"`Issue #20456 <https://bugs.python.org/20456>`__: Cloned functions in "
"Argument Clinic now use the correct name, not the name of the function they "
"were cloned from, for text strings inside generated code."
msgstr ""
"`Issue #20456 <https://bugs.python.org/20456>`__: Cloned functions in "
"Argument Clinic now use the correct name, not the name of the function they "
"were cloned from, for text strings inside generated code."

#: ../../../Misc/NEWS:6788
msgid ""
"`Issue #20456 <https://bugs.python.org/20456>`__: Fixed Argument Clinic's "
"test suite and \"--converters\" feature."
msgstr ""
"`Issue #20456 <https://bugs.python.org/20456>`__: Fixed Argument Clinic's "
"test suite and \"--converters\" feature."

#: ../../../Misc/NEWS:6790
msgid ""
"`Issue #20456 <https://bugs.python.org/20456>`__: Argument Clinic now allows "
"specifying different names for a parameter in Python and C, using \"as\" on "
"the parameter line."
msgstr ""
"`Issue #20456 <https://bugs.python.org/20456>`__: Argument Clinic now allows "
"specifying different names for a parameter in Python and C, using \"as\" on "
"the parameter line."

#: ../../../Misc/NEWS:6793
msgid ""
"`Issue #20326 <https://bugs.python.org/20326>`__: Argument Clinic now uses a "
"simple, unique signature to annotate text signatures in docstrings, "
"resulting in fewer false positives.  \"self\" parameters are also explicitly "
"marked, allowing inspect.Signature() to authoritatively detect (and skip) "
"said parameters."
msgstr ""
"`Issue #20326 <https://bugs.python.org/20326>`__: Argument Clinic now uses a "
"simple, unique signature to annotate text signatures in docstrings, "
"resulting in fewer false positives.  \"self\" parameters are also explicitly "
"marked, allowing inspect.Signature() to authoritatively detect (and skip) "
"said parameters."

#: ../../../Misc/NEWS:6798
msgid ""
"`Issue #20326 <https://bugs.python.org/20326>`__: Argument Clinic now "
"generates separate checksums for the input and output sections of the block, "
"allowing external tools to verify that the input has not changed (and thus "
"the output is not out-of-date)."
msgstr ""
"`Issue #20326 <https://bugs.python.org/20326>`__: Argument Clinic now "
"generates separate checksums for the input and output sections of the block, "
"allowing external tools to verify that the input has not changed (and thus "
"the output is not out-of-date)."

#: ../../../Misc/NEWS:6805
msgid ""
"`Issue #20465 <https://bugs.python.org/20465>`__: Update SQLite shipped with "
"OS X installer to 3.8.3."
msgstr ""
"`Issue #20465 <https://bugs.python.org/20465>`__: Update SQLite shipped with "
"OS X installer to 3.8.3."

#: ../../../Misc/NEWS:6808 ../../../Misc/NEWS:10526
msgid "C-API"
msgstr ""

#: ../../../Misc/NEWS:6810
msgid ""
"`Issue #20517 <https://bugs.python.org/20517>`__: Added new functions "
"allowing OSError exceptions to reference two filenames instead of one: "
"PyErr_SetFromErrnoWithFilenameObjects() and "
"PyErr_SetExcFromWindowsErrWithFilenameObjects()."
msgstr ""
"`Issue #20517 <https://bugs.python.org/20517>`__: Added new functions "
"allowing OSError exceptions to reference two filenames instead of one: "
"PyErr_SetFromErrnoWithFilenameObjects() and "
"PyErr_SetExcFromWindowsErrWithFilenameObjects()."

#: ../../../Misc/NEWS:6817
msgid ""
"`Issue #20488 <https://bugs.python.org/20488>`__: Change wording to say "
"importlib is *the* implementation of import instead of just *an* "
"implementation."
msgstr ""
"`Issue #20488 <https://bugs.python.org/20488>`__: Change wording to say "
"importlib is *the* implementation of import instead of just *an* "
"implementation."

#: ../../../Misc/NEWS:6820
msgid ""
"`Issue #6386 <https://bugs.python.org/6386>`__: Clarify in the tutorial that "
"specifying a symlink to execute means the directory containing the executed "
"script and not the symlink is added to sys.path."
msgstr ""
"`Issue #6386 <https://bugs.python.org/6386>`__: Clarify in the tutorial that "
"specifying a symlink to execute means the directory containing the executed "
"script and not the symlink is added to sys.path."

#: ../../../Misc/NEWS:6826
msgid "Python 3.4.0 Beta 3"
msgstr "Python 3.4.0 Beta 3"

#: ../../../Misc/NEWS:6828
msgid "Release date: 2014-01-26"
msgstr "Date de sortie¬†: 2014-01-26"

#: ../../../Misc/NEWS:6833
msgid ""
"`Issue #20189 <https://bugs.python.org/20189>`__: Four additional builtin "
"types (PyTypeObject, PyMethodDescr_Type, _PyMethodWrapper_Type, and "
"PyWrapperDescr_Type) have been modified to provide introspection information "
"for builtins."
msgstr ""
"`Issue #20189 <https://bugs.python.org/20189>`__: Four additional builtin "
"types (PyTypeObject, PyMethodDescr_Type, _PyMethodWrapper_Type, and "
"PyWrapperDescr_Type) have been modified to provide introspection information "
"for builtins."

#: ../../../Misc/NEWS:6837
msgid ""
"`Issue #17825 <https://bugs.python.org/17825>`__: Cursor \"^\" is correctly "
"positioned for SyntaxError and IndentationError."
msgstr ""
"`Issue #17825 <https://bugs.python.org/17825>`__: Cursor \"^\" is correctly "
"positioned for SyntaxError and IndentationError."

#: ../../../Misc/NEWS:6840
msgid ""
"`Issue #2382 <https://bugs.python.org/2382>`__: SyntaxError cursor \"^\" is "
"now written at correct position in most cases when multibyte characters are "
"in line (before \"^\").  This still not works correctly with wide East Asian "
"characters."
msgstr ""
"`Issue #2382 <https://bugs.python.org/2382>`__: SyntaxError cursor \"^\" is "
"now written at correct position in most cases when multibyte characters are "
"in line (before \"^\").  This still not works correctly with wide East Asian "
"characters."

#: ../../../Misc/NEWS:6844
msgid ""
"`Issue #18960 <https://bugs.python.org/18960>`__: The first line of Python "
"script could be executed twice when the source encoding was specified on the "
"second line.  Now the source encoding declaration on the second line isn't "
"effective if the first line contains anything except a comment.  'python -x' "
"works now again with files with the source encoding declarations, and can be "
"used to make Python batch files on Windows."
msgstr ""
"`Issue #18960 <https://bugs.python.org/18960>`__: The first line of Python "
"script could be executed twice when the source encoding was specified on the "
"second line.  Now the source encoding declaration on the second line isn't "
"effective if the first line contains anything except a comment.  'python -x' "
"works now again with files with the source encoding declarations, and can be "
"used to make Python batch files on Windows."

#: ../../../Misc/NEWS:6854
msgid ""
"asyncio: Various improvements and small changes not all covered by issues "
"listed below.  E.g. wait_for() now cancels the inner task if the timeout "
"occcurs; tweaked the set of exported symbols; renamed Empty/Full to "
"QueueEmpty/QueueFull; \"with (yield from lock)\" now uses a separate context "
"manager; readexactly() raises if not enough data was read; PTY support "
"tweaks."
msgstr ""

#: ../../../Misc/NEWS:6861
msgid ""
"`Issue #20311 <https://bugs.python.org/20311>`__: asyncio: Add a granularity "
"attribute to BaseEventLoop: maximum between the resolution of the "
"BaseEventLoop.time() method and the resolution of the selector. The "
"granuarility is used in the scheduler to round time and deadline."
msgstr ""
"`Issue #20311 <https://bugs.python.org/20311>`__: asyncio: Add a granularity "
"attribute to BaseEventLoop: maximum between the resolution of the "
"BaseEventLoop.time() method and the resolution of the selector. The "
"granuarility is used in the scheduler to round time and deadline."

#: ../../../Misc/NEWS:6866
msgid ""
"`Issue #20311 <https://bugs.python.org/20311>`__: selectors: Add a "
"resolution attribute to BaseSelector."
msgstr ""
"`Issue #20311 <https://bugs.python.org/20311>`__: selectors: Add a "
"resolution attribute to BaseSelector."

#: ../../../Misc/NEWS:6868
msgid ""
"`Issue #20189 <https://bugs.python.org/20189>`__: unittest.mock now no "
"longer assumes that any object for which it could get an inspect.Signature "
"is a callable written in Python. Fix courtesy of Michael Foord."
msgstr ""
"`Issue #20189 <https://bugs.python.org/20189>`__: unittest.mock now no "
"longer assumes that any object for which it could get an inspect.Signature "
"is a callable written in Python. Fix courtesy of Michael Foord."

#: ../../../Misc/NEWS:6872
msgid ""
"`Issue #20317 <https://bugs.python.org/20317>`__: ExitStack.__exit__ could "
"create a self-referential loop if an exception raised by a cleanup operation "
"already had its context set correctly (for example, by the @contextmanager "
"decorator). The infinite loop this caused is now avoided by checking if the "
"expected context is already set before trying to fix it."
msgstr ""
"`Issue #20317 <https://bugs.python.org/20317>`__: ExitStack.__exit__ could "
"create a self-referential loop if an exception raised by a cleanup operation "
"already had its context set correctly (for example, by the @contextmanager "
"decorator). The infinite loop this caused is now avoided by checking if the "
"expected context is already set before trying to fix it."

#: ../../../Misc/NEWS:6878
msgid ""
"`Issue #20374 <https://bugs.python.org/20374>`__: Fix build with GNU "
"readline >= 6.3."
msgstr ""
"`Issue #20374 <https://bugs.python.org/20374>`__: Fix build with GNU "
"readline >= 6.3."

#: ../../../Misc/NEWS:6880
msgid ""
"`Issue #20262 <https://bugs.python.org/20262>`__: Warnings are raised now "
"when duplicate names are added in the ZIP file or too long ZIP file comment "
"is truncated."
msgstr ""
"`Issue #20262 <https://bugs.python.org/20262>`__: Warnings are raised now "
"when duplicate names are added in the ZIP file or too long ZIP file comment "
"is truncated."

#: ../../../Misc/NEWS:6883
msgid ""
"`Issue #20165 <https://bugs.python.org/20165>`__: The unittest module no "
"longer considers tests marked with @expectedFailure successful if they pass."
msgstr ""
"`Issue #20165 <https://bugs.python.org/20165>`__: The unittest module no "
"longer considers tests marked with @expectedFailure successful if they pass."

#: ../../../Misc/NEWS:6886
msgid ""
"`Issue #18574 <https://bugs.python.org/18574>`__: Added missing newline in "
"100-Continue reply from http.server.BaseHTTPRequestHandler. Patch by "
"Nikolaus Rath."
msgstr ""
"`Issue #18574 <https://bugs.python.org/18574>`__: Added missing newline in "
"100-Continue reply from http.server.BaseHTTPRequestHandler. Patch by "
"Nikolaus Rath."

#: ../../../Misc/NEWS:6889
msgid ""
"`Issue #20270 <https://bugs.python.org/20270>`__: urllib.urlparse now "
"supports empty ports."
msgstr ""
"`Issue #20270 <https://bugs.python.org/20270>`__: urllib.urlparse now "
"supports empty ports."

#: ../../../Misc/NEWS:6891
msgid ""
"`Issue #20243 <https://bugs.python.org/20243>`__: TarFile no longer raise "
"ReadError when opened in write mode."
msgstr ""
"`Issue #20243 <https://bugs.python.org/20243>`__: TarFile no longer raise "
"ReadError when opened in write mode."

#: ../../../Misc/NEWS:6893
msgid ""
"`Issue #20238 <https://bugs.python.org/20238>`__: TarFile opened with "
"external fileobj and \"w:gz\" mode didn't write complete output on close."
msgstr ""
"`Issue #20238 <https://bugs.python.org/20238>`__: TarFile opened with "
"external fileobj and \"w:gz\" mode didn't write complete output on close."

#: ../../../Misc/NEWS:6896
msgid ""
"`Issue #20245 <https://bugs.python.org/20245>`__: The open functions in the "
"tarfile module now correctly handle empty mode."
msgstr ""
"`Issue #20245 <https://bugs.python.org/20245>`__: The open functions in the "
"tarfile module now correctly handle empty mode."

#: ../../../Misc/NEWS:6899
msgid ""
"`Issue #20242 <https://bugs.python.org/20242>`__: Fixed basicConfig() format "
"strings for the alternative formatting styles. Thanks to kespindler for the "
"bug report and patch."
msgstr ""
"`Issue #20242 <https://bugs.python.org/20242>`__: Fixed basicConfig() format "
"strings for the alternative formatting styles. Thanks to kespindler for the "
"bug report and patch."

#: ../../../Misc/NEWS:6902
msgid ""
"`Issue #20246 <https://bugs.python.org/20246>`__: Fix buffer overflow in "
"socket.recvfrom_into."
msgstr ""
"`Issue #20246 <https://bugs.python.org/20246>`__: Fix buffer overflow in "
"socket.recvfrom_into."

#: ../../../Misc/NEWS:6904
msgid ""
"Issues #20206 and #5803: Fix edge case in email.quoprimime.encode where it "
"truncated lines ending in a character needing encoding but no newline by "
"using a more efficient algorithm that doesn't have the bug."
msgstr ""

#: ../../../Misc/NEWS:6908
msgid ""
"`Issue #19082 <https://bugs.python.org/19082>`__: Working xmlrpc.server and "
"xmlrpc.client examples. Both in modules and in documentation. Initial patch "
"contributed by Vajrasky Kok."
msgstr ""
"`Issue #19082 <https://bugs.python.org/19082>`__: Working xmlrpc.server and "
"xmlrpc.client examples. Both in modules and in documentation. Initial patch "
"contributed by Vajrasky Kok."

#: ../../../Misc/NEWS:6911
msgid ""
"`Issue #20138 <https://bugs.python.org/20138>`__: The wsgiref."
"application_uri() and wsgiref.request_uri() functions now conform to PEP "
"3333 when handle non-ASCII URLs."
msgstr ""
"`Issue #20138 <https://bugs.python.org/20138>`__: The wsgiref."
"application_uri() and wsgiref.request_uri() functions now conform to PEP "
"3333 when handle non-ASCII URLs."

#: ../../../Misc/NEWS:6914
msgid ""
"`Issue #19097 <https://bugs.python.org/19097>`__: Raise the correct "
"Exception when cgi.FieldStorage is given an invalid fileobj."
msgstr ""
"`Issue #19097 <https://bugs.python.org/19097>`__: Raise the correct "
"Exception when cgi.FieldStorage is given an invalid fileobj."

#: ../../../Misc/NEWS:6917
msgid ""
"`Issue #20152 <https://bugs.python.org/20152>`__: Ported Python/import.c "
"over to Argument Clinic."
msgstr ""
"`Issue #20152 <https://bugs.python.org/20152>`__: Ported Python/import.c "
"over to Argument Clinic."

#: ../../../Misc/NEWS:6919
msgid ""
"`Issue #13107 <https://bugs.python.org/13107>`__: argparse and optparse no "
"longer raises an exception when output a help on environment with too small "
"COLUMNS.  Based on patch by Elazar Gershuni."
msgstr ""
"`Issue #13107 <https://bugs.python.org/13107>`__: argparse and optparse no "
"longer raises an exception when output a help on environment with too small "
"COLUMNS.  Based on patch by Elazar Gershuni."

#: ../../../Misc/NEWS:6923
msgid ""
"`Issue #20207 <https://bugs.python.org/20207>`__: Always disable SSLv2 "
"except when PROTOCOL_SSLv2 is explicitly asked for."
msgstr ""
"`Issue #20207 <https://bugs.python.org/20207>`__: Always disable SSLv2 "
"except when PROTOCOL_SSLv2 is explicitly asked for."

#: ../../../Misc/NEWS:6926
msgid ""
"`Issue #18960 <https://bugs.python.org/18960>`__: The tokenize module now "
"ignore the source encoding declaration on the second line if the first line "
"contains anything except a comment."
msgstr ""
"`Issue #18960 <https://bugs.python.org/18960>`__: The tokenize module now "
"ignore the source encoding declaration on the second line if the first line "
"contains anything except a comment."

#: ../../../Misc/NEWS:6929
msgid ""
"`Issue #20078 <https://bugs.python.org/20078>`__: Reading malformed zipfiles "
"no longer hangs with 100% CPU consumption."
msgstr ""
"`Issue #20078 <https://bugs.python.org/20078>`__: Reading malformed zipfiles "
"no longer hangs with 100% CPU consumption."

#: ../../../Misc/NEWS:6932
msgid ""
"`Issue #20113 <https://bugs.python.org/20113>`__: os.readv() and os.writev() "
"now raise an OSError exception on error instead of returning -1."
msgstr ""
"`Issue #20113 <https://bugs.python.org/20113>`__: os.readv() and os.writev() "
"now raise an OSError exception on error instead of returning -1."

#: ../../../Misc/NEWS:6935
msgid ""
"`Issue #19719 <https://bugs.python.org/19719>`__: Make importlib.abc."
"MetaPathFinder.find_module(), PathEntryFinder.find_loader(), and Loader."
"load_module() use PEP 451 APIs to help with backwards-compatibility."
msgstr ""
"`Issue #19719 <https://bugs.python.org/19719>`__: Make importlib.abc."
"MetaPathFinder.find_module(), PathEntryFinder.find_loader(), and Loader."
"load_module() use PEP 451 APIs to help with backwards-compatibility."

#: ../../../Misc/NEWS:6939
msgid ""
"`Issue #20144 <https://bugs.python.org/20144>`__: inspect.Signature now "
"supports parsing simple symbolic constants as parameter default values in "
"__text_signature__."
msgstr ""
"`Issue #20144 <https://bugs.python.org/20144>`__: inspect.Signature now "
"supports parsing simple symbolic constants as parameter default values in "
"__text_signature__."

#: ../../../Misc/NEWS:6942
msgid ""
"`Issue #20072 <https://bugs.python.org/20072>`__: Fixed multiple errors in "
"tkinter with wantobjects is False."
msgstr ""
"`Issue #20072 <https://bugs.python.org/20072>`__: Fixed multiple errors in "
"tkinter with wantobjects is False."

#: ../../../Misc/NEWS:6944
msgid ""
"`Issue #20229 <https://bugs.python.org/20229>`__: Avoid plistlib deprecation "
"warning in platform.mac_ver()."
msgstr ""
"`Issue #20229 <https://bugs.python.org/20229>`__: Avoid plistlib deprecation "
"warning in platform.mac_ver()."

#: ../../../Misc/NEWS:6946
msgid ""
"`Issue #14455 <https://bugs.python.org/14455>`__: Fix some problems with the "
"new binary plist support in plistlib."
msgstr ""
"`Issue #14455 <https://bugs.python.org/14455>`__: Fix some problems with the "
"new binary plist support in plistlib."

#: ../../../Misc/NEWS:6951
msgid ""
"`Issue #17390 <https://bugs.python.org/17390>`__: Add Python version to Idle "
"editor window title bar. Original patches by Edmond Burnett and Kent Johnson."
msgstr ""
"`Issue #17390 <https://bugs.python.org/17390>`__: Add Python version to Idle "
"editor window title bar. Original patches by Edmond Burnett and Kent Johnson."

#: ../../../Misc/NEWS:6954
msgid ""
"`Issue #18960 <https://bugs.python.org/18960>`__: IDLE now ignores the "
"source encoding declaration on the second line if the first line contains "
"anything except a comment."
msgstr ""
"`Issue #18960 <https://bugs.python.org/18960>`__: IDLE now ignores the "
"source encoding declaration on the second line if the first line contains "
"anything except a comment."

#: ../../../Misc/NEWS:6960
msgid ""
"`Issue #20358 <https://bugs.python.org/20358>`__: Tests for curses.window."
"overlay and curses.window.overwrite no longer specify min{row,col} > max{row,"
"col}."
msgstr ""
"`Issue #20358 <https://bugs.python.org/20358>`__: Tests for curses.window."
"overlay and curses.window.overwrite no longer specify min{row,col} > max{row,"
"col}."

#: ../../../Misc/NEWS:6963
msgid ""
"`Issue #19804 <https://bugs.python.org/19804>`__: The test_find_mac test in "
"test_uuid is now skipped if the ifconfig executable is not available."
msgstr ""
"`Issue #19804 <https://bugs.python.org/19804>`__: The test_find_mac test in "
"test_uuid is now skipped if the ifconfig executable is not available."

#: ../../../Misc/NEWS:6966
msgid ""
"`Issue #19886 <https://bugs.python.org/19886>`__: Use better estimated "
"memory requirements for bigmem tests."
msgstr ""
"`Issue #19886 <https://bugs.python.org/19886>`__: Use better estimated "
"memory requirements for bigmem tests."

#: ../../../Misc/NEWS:6971
msgid ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic's \"file\" "
"output preset now defaults to \"{dirname}/clinic/{basename}.h\"."
msgstr ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic's \"file\" "
"output preset now defaults to \"{dirname}/clinic/{basename}.h\"."

#: ../../../Misc/NEWS:6974
msgid ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic's \"class"
"\" directive syntax has been extended with two new required arguments: "
"\"typedef\" and \"type_object\"."
msgstr ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic's \"class"
"\" directive syntax has been extended with two new required arguments: "
"\"typedef\" and \"type_object\"."

#: ../../../Misc/NEWS:6977
msgid ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic: If "
"__new__ or __init__ functions didn't use kwargs (or args), the "
"PyArg_NoKeywords (or PyArg_NoPositional) calls generated are only run when "
"the type object is an exact match."
msgstr ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic: If "
"__new__ or __init__ functions didn't use kwargs (or args), the "
"PyArg_NoKeywords (or PyArg_NoPositional) calls generated are only run when "
"the type object is an exact match."

#: ../../../Misc/NEWS:6981
msgid ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic now fails "
"if you have required parameters after optional parameters."
msgstr ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic now fails "
"if you have required parameters after optional parameters."

#: ../../../Misc/NEWS:6984
msgid ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic converters "
"now have a new template they can inject code into: \"modifiers\".  Code put "
"there is run in the parsing function after argument parsing but before the "
"call to the impl."
msgstr ""
"`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic converters "
"now have a new template they can inject code into: \"modifiers\".  Code put "
"there is run in the parsing function after argument parsing but before the "
"call to the impl."

#: ../../../Misc/NEWS:6988
msgid ""
"`Issue #20376 <https://bugs.python.org/20376>`__: Argument Clinic now "
"escapes backslashes in docstrings."
msgstr ""
"`Issue #20376 <https://bugs.python.org/20376>`__: Argument Clinic now "
"escapes backslashes in docstrings."

#: ../../../Misc/NEWS:6990
msgid ""
"`Issue #20381 <https://bugs.python.org/20381>`__: Argument Clinic now sanity "
"checks the default argument when c_default is also specified, providing a "
"nice failure message for disallowed values."
msgstr ""
"`Issue #20381 <https://bugs.python.org/20381>`__: Argument Clinic now sanity "
"checks the default argument when c_default is also specified, providing a "
"nice failure message for disallowed values."

#: ../../../Misc/NEWS:6994
msgid ""
"`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
"ensures that parser functions for __new__ are always of type newfunc, the "
"type of the tp_new slot. Similarly, parser functions for __init__ are now "
"always of type initproc, the type of tp_init."
msgstr ""
"`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
"ensures that parser functions for __new__ are always of type newfunc, the "
"type of the tp_new slot. Similarly, parser functions for __init__ are now "
"always of type initproc, the type of tp_init."

#: ../../../Misc/NEWS:6999
msgid ""
"`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
"suppresses the docstring for __new__ and __init__ functions if no docstring "
"is provided in the input."
msgstr ""
"`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
"suppresses the docstring for __new__ and __init__ functions if no docstring "
"is provided in the input."

#: ../../../Misc/NEWS:7002
msgid ""
"`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
"suppresses the \"self\" parameter in the impl for @staticmethod functions."
msgstr ""
"`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
"suppresses the \"self\" parameter in the impl for @staticmethod functions."

#: ../../../Misc/NEWS:7005
msgid ""
"`Issue #20294 <https://bugs.python.org/20294>`__: Argument Clinic now "
"supports argument parsing for __new__ and __init__ functions."
msgstr ""
"`Issue #20294 <https://bugs.python.org/20294>`__: Argument Clinic now "
"supports argument parsing for __new__ and __init__ functions."

#: ../../../Misc/NEWS:7008
msgid ""
"`Issue #20299 <https://bugs.python.org/20299>`__: Argument Clinic custom "
"converters may now change the default value of c_default and py_default with "
"a class member."
msgstr ""
"`Issue #20299 <https://bugs.python.org/20299>`__: Argument Clinic custom "
"converters may now change the default value of c_default and py_default with "
"a class member."

#: ../../../Misc/NEWS:7011
msgid ""
"`Issue #20287 <https://bugs.python.org/20287>`__: Argument Clinic's output "
"is now configurable, allowing delaying its output or even redirecting it to "
"a separate file."
msgstr ""
"`Issue #20287 <https://bugs.python.org/20287>`__: Argument Clinic's output "
"is now configurable, allowing delaying its output or even redirecting it to "
"a separate file."

#: ../../../Misc/NEWS:7014
msgid ""
"`Issue #20226 <https://bugs.python.org/20226>`__: Argument Clinic now "
"permits simple expressions (e.g. \"sys.maxsize - 1\") as default values for "
"parameters."
msgstr ""
"`Issue #20226 <https://bugs.python.org/20226>`__: Argument Clinic now "
"permits simple expressions (e.g. \"sys.maxsize - 1\") as default values for "
"parameters."

#: ../../../Misc/NEWS:7017
msgid ""
"`Issue #19936 <https://bugs.python.org/19936>`__: Added executable bits or "
"shebang lines to Python scripts which requires them.  Disable executable "
"bits and shebang lines in test and benchmark files in order to prevent using "
"a random system python, and in source files of modules which don't provide "
"command line interface.  Fixed shebang lines in the unittestgui and checkpip "
"scripts."
msgstr ""
"`Issue #19936 <https://bugs.python.org/19936>`__: Added executable bits or "
"shebang lines to Python scripts which requires them.  Disable executable "
"bits and shebang lines in test and benchmark files in order to prevent using "
"a random system python, and in source files of modules which don't provide "
"command line interface.  Fixed shebang lines in the unittestgui and checkpip "
"scripts."

#: ../../../Misc/NEWS:7023
msgid ""
"`Issue #20268 <https://bugs.python.org/20268>`__: Argument Clinic now "
"supports cloning the parameters and return converter of existing functions."
msgstr ""
"`Issue #20268 <https://bugs.python.org/20268>`__: Argument Clinic now "
"supports cloning the parameters and return converter of existing functions."

#: ../../../Misc/NEWS:7026
msgid ""
"`Issue #20228 <https://bugs.python.org/20228>`__: Argument Clinic now has "
"special support for class special methods."
msgstr ""
"`Issue #20228 <https://bugs.python.org/20228>`__: Argument Clinic now has "
"special support for class special methods."

#: ../../../Misc/NEWS:7029
msgid ""
"`Issue #20214 <https://bugs.python.org/20214>`__: Fixed a number of small "
"issues and documentation errors in Argument Clinic (see issue for details)."
msgstr ""
"`Issue #20214 <https://bugs.python.org/20214>`__: Fixed a number of small "
"issues and documentation errors in Argument Clinic (see issue for details)."

#: ../../../Misc/NEWS:7032
msgid ""
"`Issue #20196 <https://bugs.python.org/20196>`__: Fixed a bug where Argument "
"Clinic did not generate correct parsing code for functions with positional-"
"only parameters where all arguments are optional."
msgstr ""
"`Issue #20196 <https://bugs.python.org/20196>`__: Fixed a bug where Argument "
"Clinic did not generate correct parsing code for functions with positional-"
"only parameters where all arguments are optional."

#: ../../../Misc/NEWS:7036
msgid ""
"`Issue #18960 <https://bugs.python.org/18960>`__: 2to3 and the findnocoding."
"py script now ignore the source encoding declaration on the second line if "
"the first line contains anything except a comment."
msgstr ""
"`Issue #18960 <https://bugs.python.org/18960>`__: 2to3 and the findnocoding."
"py script now ignore the source encoding declaration on the second line if "
"the first line contains anything except a comment."

#: ../../../Misc/NEWS:7040
msgid ""
"`Issue #19723 <https://bugs.python.org/19723>`__: The marker comments "
"Argument Clinic uses have been changed to improve readability."
msgstr ""
"`Issue #19723 <https://bugs.python.org/19723>`__: The marker comments "
"Argument Clinic uses have been changed to improve readability."

#: ../../../Misc/NEWS:7043
msgid ""
"`Issue #20157 <https://bugs.python.org/20157>`__: When Argument Clinic "
"renames a parameter because its name collides with a C keyword, it no longer "
"exposes that rename to PyArg_Parse."
msgstr ""
"`Issue #20157 <https://bugs.python.org/20157>`__: When Argument Clinic "
"renames a parameter because its name collides with a C keyword, it no longer "
"exposes that rename to PyArg_Parse."

#: ../../../Misc/NEWS:7046
msgid ""
"`Issue #20141 <https://bugs.python.org/20141>`__: Improved Argument Clinic's "
"support for the PyArg_Parse \"O!\" format unit."
msgstr ""
"`Issue #20141 <https://bugs.python.org/20141>`__: Improved Argument Clinic's "
"support for the PyArg_Parse \"O!\" format unit."

#: ../../../Misc/NEWS:7049
msgid ""
"`Issue #20144 <https://bugs.python.org/20144>`__: Argument Clinic now "
"supports simple symbolic constants as parameter default values."
msgstr ""
"`Issue #20144 <https://bugs.python.org/20144>`__: Argument Clinic now "
"supports simple symbolic constants as parameter default values."

#: ../../../Misc/NEWS:7052
msgid ""
"`Issue #20143 <https://bugs.python.org/20143>`__: The line numbers reported "
"in Argument Clinic errors are now more accurate."
msgstr ""
"`Issue #20143 <https://bugs.python.org/20143>`__: The line numbers reported "
"in Argument Clinic errors are now more accurate."

#: ../../../Misc/NEWS:7055
msgid ""
"`Issue #20142 <https://bugs.python.org/20142>`__: Py_buffer variables "
"generated by Argument Clinic are now initialized with a default value."
msgstr ""
"`Issue #20142 <https://bugs.python.org/20142>`__: Py_buffer variables "
"generated by Argument Clinic are now initialized with a default value."

#: ../../../Misc/NEWS:7061
msgid ""
"`Issue #12837 <https://bugs.python.org/12837>`__: Silence a tautological "
"comparison warning on OS X under Clang in socketmodule.c."
msgstr ""
"`Issue #12837 <https://bugs.python.org/12837>`__: Silence a tautological "
"comparison warning on OS X under Clang in socketmodule.c."

#: ../../../Misc/NEWS:7066
msgid "Python 3.4.0 Beta 2"
msgstr "Python 3.4.0 Beta 2"

#: ../../../Misc/NEWS:7068
msgid "Release date: 2014-01-05"
msgstr "Date de sortie¬†: 05-01-2014"

#: ../../../Misc/NEWS:7073
msgid ""
"`Issue #17432 <https://bugs.python.org/17432>`__: Drop UCS2 from names of "
"Unicode functions in python3.def."
msgstr ""
"`Issue #17432 <https://bugs.python.org/17432>`__: Drop UCS2 from names of "
"Unicode functions in python3.def."

#: ../../../Misc/NEWS:7075
msgid ""
"`Issue #19526 <https://bugs.python.org/19526>`__: Exclude all new API from "
"the stable ABI. Exceptions can be made if a need is demonstrated."
msgstr ""
"`Issue #19526 <https://bugs.python.org/19526>`__: Exclude all new API from "
"the stable ABI. Exceptions can be made if a need is demonstrated."

#: ../../../Misc/NEWS:7078
msgid ""
"`Issue #19969 <https://bugs.python.org/19969>`__: PyBytes_FromFormatV() now "
"raises an OverflowError if \"%c\" argument is not in range [0; 255]."
msgstr ""
"`Issue #19969 <https://bugs.python.org/19969>`__: PyBytes_FromFormatV() now "
"raises an OverflowError if \"%c\" argument is not in range [0; 255]."

#: ../../../Misc/NEWS:7081
msgid ""
"`Issue #19995 <https://bugs.python.org/19995>`__: %c, %o, %x, and %X now "
"issue a DeprecationWarning on non-integer input; reworded docs to clarify "
"that an integer type should define both __int__ and __index__."
msgstr ""
"`Issue #19995 <https://bugs.python.org/19995>`__: %c, %o, %x, and %X now "
"issue a DeprecationWarning on non-integer input; reworded docs to clarify "
"that an integer type should define both __int__ and __index__."

#: ../../../Misc/NEWS:7085
msgid ""
"`Issue #19787 <https://bugs.python.org/19787>`__: PyThread_set_key_value() "
"now always set the value. In Python 3.3, the function did nothing if the key "
"already exists (if the current value is a non-NULL pointer)."
msgstr ""
"`Issue #19787 <https://bugs.python.org/19787>`__: PyThread_set_key_value() "
"now always set the value. In Python 3.3, the function did nothing if the key "
"already exists (if the current value is a non-NULL pointer)."

#: ../../../Misc/NEWS:7089
msgid ""
"`Issue #14432 <https://bugs.python.org/14432>`__: Remove the thread state "
"field from the frame structure. Fix a crash when a generator is created in a "
"C thread that is destroyed while the generator is still used. The issue was "
"that a generator contains a frame, and the frame kept a reference to the "
"Python state of the destroyed C thread. The crash occurs when a trace "
"function is setup."
msgstr ""
"`Issue #14432 <https://bugs.python.org/14432>`__: Remove the thread state "
"field from the frame structure. Fix a crash when a generator is created in a "
"C thread that is destroyed while the generator is still used. The issue was "
"that a generator contains a frame, and the frame kept a reference to the "
"Python state of the destroyed C thread. The crash occurs when a trace "
"function is setup."

#: ../../../Misc/NEWS:7095
msgid ""
"`Issue #19576 <https://bugs.python.org/19576>`__: PyGILState_Ensure() now "
"initializes threads. At startup, Python has no concrete GIL. If "
"PyGILState_Ensure() is called from a new thread for the first time and "
"PyEval_InitThreads() was not called yet, a GIL needs to be created."
msgstr ""
"`Issue #19576 <https://bugs.python.org/19576>`__: PyGILState_Ensure() now "
"initializes threads. At startup, Python has no concrete GIL. If "
"PyGILState_Ensure() is called from a new thread for the first time and "
"PyEval_InitThreads() was not called yet, a GIL needs to be created."

#: ../../../Misc/NEWS:7100
msgid ""
"`Issue #17576 <https://bugs.python.org/17576>`__: Deprecation warning "
"emitted now when __int__() or __index__() return not int instance."
msgstr ""
"`Issue #17576 <https://bugs.python.org/17576>`__: Deprecation warning "
"emitted now when __int__() or __index__() return not int instance."

#: ../../../Misc/NEWS:7103
msgid ""
"`Issue #19932 <https://bugs.python.org/19932>`__: Fix typo in import.h, "
"missing whitespaces in function prototypes."
msgstr ""
"`Issue #19932 <https://bugs.python.org/19932>`__: Fix typo in import.h, "
"missing whitespaces in function prototypes."

#: ../../../Misc/NEWS:7105
msgid ""
"`Issue #19736 <https://bugs.python.org/19736>`__: Add module-level statvfs "
"constants defined for GNU/glibc based systems."
msgstr ""
"`Issue #19736 <https://bugs.python.org/19736>`__: Add module-level statvfs "
"constants defined for GNU/glibc based systems."

#: ../../../Misc/NEWS:7108
msgid ""
"`Issue #20097 <https://bugs.python.org/20097>`__: Fix bad use of \"self\" in "
"importlib's WindowsRegistryFinder."
msgstr ""
"`Issue #20097 <https://bugs.python.org/20097>`__: Fix bad use of \"self\" in "
"importlib's WindowsRegistryFinder."

#: ../../../Misc/NEWS:7110
msgid ""
"`Issue #19729 <https://bugs.python.org/19729>`__: In str.format(), fix "
"recursive expansion in format spec."
msgstr ""
"`Issue #19729 <https://bugs.python.org/19729>`__: In str.format(), fix "
"recursive expansion in format spec."

#: ../../../Misc/NEWS:7112
msgid ""
"`Issue #19638 <https://bugs.python.org/19638>`__: Fix possible crash / "
"undefined behaviour from huge (more than 2 billion characters) input strings "
"in _Py_dg_strtod."
msgstr ""
"`Issue #19638 <https://bugs.python.org/19638>`__: Fix possible crash / "
"undefined behaviour from huge (more than 2 billion characters) input strings "
"in _Py_dg_strtod."

#: ../../../Misc/NEWS:7118
msgid ""
"`Issue #20154 <https://bugs.python.org/20154>`__: Deadlock in asyncio."
"StreamReader.readexactly()."
msgstr ""
"`Issue #20154 <https://bugs.python.org/20154>`__: Deadlock in asyncio."
"StreamReader.readexactly()."

#: ../../../Misc/NEWS:7120
msgid ""
"`Issue #16113 <https://bugs.python.org/16113>`__: Remove sha3 module again."
msgstr ""
"`Issue #16113 <https://bugs.python.org/16113>`__: Remove sha3 module again."

#: ../../../Misc/NEWS:7122
msgid ""
"`Issue #20111 <https://bugs.python.org/20111>`__: pathlib.Path.with_suffix() "
"now sanity checks the given suffix."
msgstr ""
"`Issue #20111 <https://bugs.python.org/20111>`__: pathlib.Path.with_suffix() "
"now sanity checks the given suffix."

#: ../../../Misc/NEWS:7124
msgid ""
"Fix breakage in TestSuite.countTestCases() introduced by `issue #11798 "
"<https://bugs.python.org/11798>`__."
msgstr ""

#: ../../../Misc/NEWS:7126
msgid ""
"`Issue #20108 <https://bugs.python.org/20108>`__: Avoid parameter name clash "
"in inspect.getcallargs()."
msgstr ""
"`Issue #20108 <https://bugs.python.org/20108>`__: Avoid parameter name clash "
"in inspect.getcallargs()."

#: ../../../Misc/NEWS:7128
msgid ""
"`Issue #19918 <https://bugs.python.org/19918>`__: Fix PurePath.relative_to() "
"under Windows."
msgstr ""
"`Issue #19918 <https://bugs.python.org/19918>`__: Fix PurePath.relative_to() "
"under Windows."

#: ../../../Misc/NEWS:7130
msgid ""
"`Issue #19422 <https://bugs.python.org/19422>`__: Explicitly disallow non-"
"SOCK_STREAM sockets in the ssl module, rather than silently let them emit "
"clear text data."
msgstr ""
"`Issue #19422 <https://bugs.python.org/19422>`__: Explicitly disallow non-"
"SOCK_STREAM sockets in the ssl module, rather than silently let them emit "
"clear text data."

#: ../../../Misc/NEWS:7133
msgid ""
"`Issue #20046 <https://bugs.python.org/20046>`__: Locale alias table no "
"longer contains entities which can be calculated.  Generalized support of "
"the euro modifier."
msgstr ""
"`Issue #20046 <https://bugs.python.org/20046>`__: Locale alias table no "
"longer contains entities which can be calculated.  Generalized support of "
"the euro modifier."

#: ../../../Misc/NEWS:7136
msgid ""
"`Issue #20027 <https://bugs.python.org/20027>`__: Fixed locale aliases for "
"devanagari locales."
msgstr ""
"`Issue #20027 <https://bugs.python.org/20027>`__: Fixed locale aliases for "
"devanagari locales."

#: ../../../Misc/NEWS:7138
msgid ""
"`Issue #20067 <https://bugs.python.org/20067>`__: Tkinter variables now work "
"when wantobjects is false."
msgstr ""
"`Issue #20067 <https://bugs.python.org/20067>`__: Tkinter variables now work "
"when wantobjects is false."

#: ../../../Misc/NEWS:7140
msgid ""
"`Issue #19020 <https://bugs.python.org/19020>`__: Tkinter now uses "
"splitlist() instead of split() in configure methods."
msgstr ""
"`Issue #19020 <https://bugs.python.org/19020>`__: Tkinter now uses "
"splitlist() instead of split() in configure methods."

#: ../../../Misc/NEWS:7143
msgid ""
"`Issue #19744 <https://bugs.python.org/19744>`__: ensurepip now provides a "
"better error message when Python is built without SSL/TLS support (pip "
"currently requires that support to run, even if only operating with local "
"wheel files)"
msgstr ""
"`Issue #19744 <https://bugs.python.org/19744>`__: ensurepip now provides a "
"better error message when Python is built without SSL/TLS support (pip "
"currently requires that support to run, even if only operating with local "
"wheel files)"

#: ../../../Misc/NEWS:7147
msgid ""
"`Issue #19734 <https://bugs.python.org/19734>`__: ensurepip now ignores all "
"pip environment variables to avoid odd behaviour based on user configuration "
"settings"
msgstr ""
"`Issue #19734 <https://bugs.python.org/19734>`__: ensurepip now ignores all "
"pip environment variables to avoid odd behaviour based on user configuration "
"settings"

#: ../../../Misc/NEWS:7150
msgid "Fix TypeError on \"setup.py upload --show-response\"."
msgstr ""

#: ../../../Misc/NEWS:7152
msgid ""
"`Issue #20045 <https://bugs.python.org/20045>`__: Fix \"setup.py register --"
"list-classifiers\"."
msgstr ""
"`Issue #20045 <https://bugs.python.org/20045>`__: Fix \"setup.py register --"
"list-classifiers\"."

#: ../../../Misc/NEWS:7154
msgid ""
"`Issue #18879 <https://bugs.python.org/18879>`__: When a method is looked up "
"on a temporary file, avoid closing the file before the method is possibly "
"called."
msgstr ""
"`Issue #18879 <https://bugs.python.org/18879>`__: When a method is looked up "
"on a temporary file, avoid closing the file before the method is possibly "
"called."

#: ../../../Misc/NEWS:7157
msgid ""
"`Issue #20037 <https://bugs.python.org/20037>`__: Avoid crashes when opening "
"a text file late at interpreter shutdown."
msgstr ""
"`Issue #20037 <https://bugs.python.org/20037>`__: Avoid crashes when opening "
"a text file late at interpreter shutdown."

#: ../../../Misc/NEWS:7160
msgid ""
"`Issue #19967 <https://bugs.python.org/19967>`__: Thanks to the PEP 442, "
"asyncio.Future now uses a destructor to log uncaught exceptions, instead of "
"the dedicated _TracebackLogger class."
msgstr ""
"`Issue #19967 <https://bugs.python.org/19967>`__: Thanks to the PEP 442, "
"asyncio.Future now uses a destructor to log uncaught exceptions, instead of "
"the dedicated _TracebackLogger class."

#: ../../../Misc/NEWS:7164
msgid "Added a Task.current_task() class method to asyncio."
msgstr ""

#: ../../../Misc/NEWS:7166
msgid ""
"`Issue #19850 <https://bugs.python.org/19850>`__: Set SA_RESTART in asyncio "
"when registering a signal handler to limit EINTR occurrences."
msgstr ""
"`Issue #19850 <https://bugs.python.org/19850>`__: Set SA_RESTART in asyncio "
"when registering a signal handler to limit EINTR occurrences."

#: ../../../Misc/NEWS:7169
msgid ""
"Implemented write flow control in asyncio for proactor event loop (Windows)."
msgstr ""

#: ../../../Misc/NEWS:7171
msgid ""
"Change write buffer in asyncio use to avoid O(N**2) behavior.  Make write()/"
"sendto() accept bytearray/memoryview."
msgstr ""

#: ../../../Misc/NEWS:7174
msgid ""
"`Issue #20034 <https://bugs.python.org/20034>`__: Updated alias mapping to "
"most recent locale.alias file from X.org distribution using makelocalealias."
"py."
msgstr ""
"`Issue #20034 <https://bugs.python.org/20034>`__: Updated alias mapping to "
"most recent locale.alias file from X.org distribution using makelocalealias."
"py."

#: ../../../Misc/NEWS:7177
msgid ""
"`Issue #5815 <https://bugs.python.org/5815>`__: Fixed support for locales "
"with modifiers.  Fixed support for locale encodings with hyphens."
msgstr ""
"`Issue #5815 <https://bugs.python.org/5815>`__: Fixed support for locales "
"with modifiers.  Fixed support for locale encodings with hyphens."

#: ../../../Misc/NEWS:7180
msgid ""
"`Issue #20026 <https://bugs.python.org/20026>`__: Fix the sqlite module to "
"handle correctly invalid isolation level (wrong type)."
msgstr ""
"`Issue #20026 <https://bugs.python.org/20026>`__: Fix the sqlite module to "
"handle correctly invalid isolation level (wrong type)."

#: ../../../Misc/NEWS:7183
msgid ""
"`Issue #18829 <https://bugs.python.org/18829>`__: csv.Dialect() now checks "
"type for delimiter, escapechar and quotechar fields.  Original patch by "
"Vajrasky Kok."
msgstr ""
"`Issue #18829 <https://bugs.python.org/18829>`__: csv.Dialect() now checks "
"type for delimiter, escapechar and quotechar fields.  Original patch by "
"Vajrasky Kok."

#: ../../../Misc/NEWS:7186
msgid ""
"`Issue #19855 <https://bugs.python.org/19855>`__: uuid.getnode() on Unix now "
"looks on the PATH for the executables used to find the mac address, with /"
"sbin and /usr/sbin as fallbacks."
msgstr ""
"`Issue #19855 <https://bugs.python.org/19855>`__: uuid.getnode() on Unix now "
"looks on the PATH for the executables used to find the mac address, with /"
"sbin and /usr/sbin as fallbacks."

#: ../../../Misc/NEWS:7190
msgid ""
"`Issue #20007 <https://bugs.python.org/20007>`__: HTTPResponse.read(0) no "
"more prematurely closes connection. Original patch by Simon Sapin."
msgstr ""
"`Issue #20007 <https://bugs.python.org/20007>`__: HTTPResponse.read(0) no "
"more prematurely closes connection. Original patch by Simon Sapin."

#: ../../../Misc/NEWS:7193
msgid ""
"`Issue #19946 <https://bugs.python.org/19946>`__: multiprocessing now uses "
"runpy to initialize __main__ in child processes when necessary, allowing it "
"to correctly handle scripts without suffixes and submodules that use "
"explicit relative imports or otherwise rely on parent modules being "
"correctly imported prior to execution."
msgstr ""
"`Issue #19946 <https://bugs.python.org/19946>`__: multiprocessing now uses "
"runpy to initialize __main__ in child processes when necessary, allowing it "
"to correctly handle scripts without suffixes and submodules that use "
"explicit relative imports or otherwise rely on parent modules being "
"correctly imported prior to execution."

#: ../../../Misc/NEWS:7199
msgid ""
"`Issue #19921 <https://bugs.python.org/19921>`__: When Path.mkdir() is "
"called with parents=True, any missing parent is created with the default "
"permissions, ignoring the mode argument (mimicking the POSIX \"mkdir -p\" "
"command)."
msgstr ""
"`Issue #19921 <https://bugs.python.org/19921>`__: When Path.mkdir() is "
"called with parents=True, any missing parent is created with the default "
"permissions, ignoring the mode argument (mimicking the POSIX \"mkdir -p\" "
"command)."

#: ../../../Misc/NEWS:7203
msgid ""
"`Issue #19887 <https://bugs.python.org/19887>`__: Improve the Path.resolve() "
"algorithm to support certain symlink chains."
msgstr ""
"`Issue #19887 <https://bugs.python.org/19887>`__: Improve the Path.resolve() "
"algorithm to support certain symlink chains."

#: ../../../Misc/NEWS:7206
msgid ""
"`Issue #19912 <https://bugs.python.org/19912>`__: Fixed numerous bugs in "
"ntpath.splitunc()."
msgstr ""
"`Issue #19912 <https://bugs.python.org/19912>`__: Fixed numerous bugs in "
"ntpath.splitunc()."

#: ../../../Misc/NEWS:7208
msgid ""
"`Issue #19911 <https://bugs.python.org/19911>`__: ntpath.splitdrive() now "
"correctly processes the 'ƒ∞' character (U+0130, LATIN CAPITAL LETTER I WITH "
"DOT ABOVE)."
msgstr ""
"`Issue #19911 <https://bugs.python.org/19911>`__: ntpath.splitdrive() now "
"correctly processes the 'ƒ∞' character (U+0130, LATIN CAPITAL LETTER I WITH "
"DOT ABOVE)."

#: ../../../Misc/NEWS:7211
msgid ""
"`Issue #19532 <https://bugs.python.org/19532>`__: python -m compileall with "
"no filename/directory arguments now respects the -f and -q flags instead of "
"ignoring them."
msgstr ""
"`Issue #19532 <https://bugs.python.org/19532>`__: python -m compileall with "
"no filename/directory arguments now respects the -f and -q flags instead of "
"ignoring them."

#: ../../../Misc/NEWS:7214
msgid ""
"`Issue #19623 <https://bugs.python.org/19623>`__: Fixed writing to "
"unseekable files in the aifc module."
msgstr ""
"`Issue #19623 <https://bugs.python.org/19623>`__: Fixed writing to "
"unseekable files in the aifc module."

#: ../../../Misc/NEWS:7216
msgid ""
"`Issue #19946 <https://bugs.python.org/19946>`__: multiprocessing.spawn now "
"raises ImportError when the module to be used as the main module cannot be "
"imported."
msgstr ""
"`Issue #19946 <https://bugs.python.org/19946>`__: multiprocessing.spawn now "
"raises ImportError when the module to be used as the main module cannot be "
"imported."

#: ../../../Misc/NEWS:7219
msgid ""
"`Issue #17919 <https://bugs.python.org/17919>`__: select.poll.register() "
"again works with poll.POLLNVAL on AIX. Fixed integer overflow in the "
"eventmask parameter."
msgstr ""
"`Issue #17919 <https://bugs.python.org/17919>`__: select.poll.register() "
"again works with poll.POLLNVAL on AIX. Fixed integer overflow in the "
"eventmask parameter."

#: ../../../Misc/NEWS:7222
msgid ""
"`Issue #19063 <https://bugs.python.org/19063>`__: if a Charset's "
"body_encoding was set to None, the email package would generate a message "
"claiming the Content-Transfer-Encoding was 7bit, and produce garbage output "
"for the content.  This now works. A couple of other set_payload mishandlings "
"of non-ASCII are also fixed. In addition, calling set_payload with a string "
"argument without specifying a charset now raises an error (this is a new "
"error in 3.4)."
msgstr ""
"`Issue #19063 <https://bugs.python.org/19063>`__: if a Charset's "
"body_encoding was set to None, the email package would generate a message "
"claiming the Content-Transfer-Encoding was 7bit, and produce garbage output "
"for the content.  This now works. A couple of other set_payload mishandlings "
"of non-ASCII are also fixed. In addition, calling set_payload with a string "
"argument without specifying a charset now raises an error (this is a new "
"error in 3.4)."

#: ../../../Misc/NEWS:7229
msgid ""
"`Issue #15475 <https://bugs.python.org/15475>`__: Add __sizeof__ "
"implementations for itertools objects."
msgstr ""
"`Issue #15475 <https://bugs.python.org/15475>`__: Add __sizeof__ "
"implementations for itertools objects."

#: ../../../Misc/NEWS:7231
msgid ""
"`Issue #19944 <https://bugs.python.org/19944>`__: Fix importlib.find_spec() "
"so it imports parents as needed and move the function to importlib.util."
msgstr ""
"`Issue #19944 <https://bugs.python.org/19944>`__: Fix importlib.find_spec() "
"so it imports parents as needed and move the function to importlib.util."

#: ../../../Misc/NEWS:7234
msgid ""
"`Issue #19880 <https://bugs.python.org/19880>`__: Fix a reference leak in "
"unittest.TestCase. Explicitly break reference cycles between frames and the "
"_Outcome instance."
msgstr ""
"`Issue #19880 <https://bugs.python.org/19880>`__: Fix a reference leak in "
"unittest.TestCase. Explicitly break reference cycles between frames and the "
"_Outcome instance."

#: ../../../Misc/NEWS:7237
msgid ""
"`Issue #17429 <https://bugs.python.org/17429>`__: platform."
"linux_distribution() now decodes files from the UTF-8 encoding with the "
"surrogateescape error handler, instead of decoding from the locale encoding "
"in strict mode. It fixes the function on Fedora 19 which is probably the "
"first major distribution release with a non-ASCII name. Patch written by "
"Toshio Kuratomi."
msgstr ""
"`Issue #17429 <https://bugs.python.org/17429>`__: platform."
"linux_distribution() now decodes files from the UTF-8 encoding with the "
"surrogateescape error handler, instead of decoding from the locale encoding "
"in strict mode. It fixes the function on Fedora 19 which is probably the "
"first major distribution release with a non-ASCII name. Patch written by "
"Toshio Kuratomi."

#: ../../../Misc/NEWS:7243
msgid ""
"`Issue #19343 <https://bugs.python.org/19343>`__: Expose FreeBSD-specific "
"APIs in resource module.  Original patch by Koobs."
msgstr ""
"`Issue #19343 <https://bugs.python.org/19343>`__: Expose FreeBSD-specific "
"APIs in resource module.  Original patch by Koobs."

#: ../../../Misc/NEWS:7246
msgid ""
"`Issue #19929 <https://bugs.python.org/19929>`__: Call os.read with 32768 "
"within subprocess.Popen.communicate rather than 4096 for efficiency.  A "
"microbenchmark shows Linux and OS X both using ~50% less cpu time this way."
msgstr ""
"`Issue #19929 <https://bugs.python.org/19929>`__: Call os.read with 32768 "
"within subprocess.Popen.communicate rather than 4096 for efficiency.  A "
"microbenchmark shows Linux and OS X both using ~50% less cpu time this way."

#: ../../../Misc/NEWS:7250
msgid ""
"`Issue #19506 <https://bugs.python.org/19506>`__: Use a memoryview to avoid "
"a data copy when piping data to stdin within subprocess.Popen.communicate.  "
"5-10% less cpu usage."
msgstr ""
"`Issue #19506 <https://bugs.python.org/19506>`__: Use a memoryview to avoid "
"a data copy when piping data to stdin within subprocess.Popen.communicate.  "
"5-10% less cpu usage."

#: ../../../Misc/NEWS:7253
msgid ""
"`Issue #19876 <https://bugs.python.org/19876>`__: selectors unregister() no "
"longer raises ValueError or OSError if the FD is closed (as long as it was "
"registered)."
msgstr ""
"`Issue #19876 <https://bugs.python.org/19876>`__: selectors unregister() no "
"longer raises ValueError or OSError if the FD is closed (as long as it was "
"registered)."

#: ../../../Misc/NEWS:7256
msgid ""
"`Issue #19908 <https://bugs.python.org/19908>`__: pathlib now joins relative "
"Windows paths correctly when a drive is present.  Original patch by Antoine "
"Pitrou."
msgstr ""
"`Issue #19908 <https://bugs.python.org/19908>`__: pathlib now joins relative "
"Windows paths correctly when a drive is present.  Original patch by Antoine "
"Pitrou."

#: ../../../Misc/NEWS:7259
msgid ""
"`Issue #19296 <https://bugs.python.org/19296>`__: Silence compiler warning "
"in dbm_open"
msgstr ""
"`Issue #19296 <https://bugs.python.org/19296>`__: Silence compiler warning "
"in dbm_open"

#: ../../../Misc/NEWS:7261
msgid ""
"`Issue #6784 <https://bugs.python.org/6784>`__: Strings from Python 2 can "
"now be unpickled as bytes objects by setting the encoding argument of "
"Unpickler to be 'bytes'. Initial patch by Merlijn van Deen."
msgstr ""
"`Issue #6784 <https://bugs.python.org/6784>`__: Strings from Python 2 can "
"now be unpickled as bytes objects by setting the encoding argument of "
"Unpickler to be 'bytes'. Initial patch by Merlijn van Deen."

#: ../../../Misc/NEWS:7265
msgid ""
"`Issue #19839 <https://bugs.python.org/19839>`__: Fix regression in bz2 "
"module's handling of non-bzip2 data at EOF, and analogous bug in lzma module."
msgstr ""
"`Issue #19839 <https://bugs.python.org/19839>`__: Fix regression in bz2 "
"module's handling of non-bzip2 data at EOF, and analogous bug in lzma module."

#: ../../../Misc/NEWS:7268
msgid ""
"`Issue #19881 <https://bugs.python.org/19881>`__: Fix pickling bug where "
"cpickle would emit bad pickle data for large bytes string (i.e., with size "
"greater than 2**32-1)."
msgstr ""
"`Issue #19881 <https://bugs.python.org/19881>`__: Fix pickling bug where "
"cpickle would emit bad pickle data for large bytes string (i.e., with size "
"greater than 2**32-1)."

#: ../../../Misc/NEWS:7271
msgid ""
"`Issue #19138 <https://bugs.python.org/19138>`__: doctest's "
"IGNORE_EXCEPTION_DETAIL now allows a match when no exception detail exists "
"(no colon following the exception's name, or a colon does follow but no text "
"follows the colon)."
msgstr ""
"`Issue #19138 <https://bugs.python.org/19138>`__: doctest's "
"IGNORE_EXCEPTION_DETAIL now allows a match when no exception detail exists "
"(no colon following the exception's name, or a colon does follow but no text "
"follows the colon)."

#: ../../../Misc/NEWS:7275
msgid ""
"`Issue #19927 <https://bugs.python.org/19927>`__: Add __eq__ to path-based "
"loaders in importlib."
msgstr ""
"`Issue #19927 <https://bugs.python.org/19927>`__: Add __eq__ to path-based "
"loaders in importlib."

#: ../../../Misc/NEWS:7277
msgid ""
"`Issue #19827 <https://bugs.python.org/19827>`__: On UNIX, setblocking() and "
"settimeout() methods of socket.socket can now avoid a second syscall if the "
"ioctl() function can be used, or if the non-blocking flag of the socket is "
"unchanged."
msgstr ""
"`Issue #19827 <https://bugs.python.org/19827>`__: On UNIX, setblocking() and "
"settimeout() methods of socket.socket can now avoid a second syscall if the "
"ioctl() function can be used, or if the non-blocking flag of the socket is "
"unchanged."

#: ../../../Misc/NEWS:7281
msgid ""
"`Issue #19785 <https://bugs.python.org/19785>`__: smtplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."
msgstr ""
"`Issue #19785 <https://bugs.python.org/19785>`__: smtplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."

#: ../../../Misc/NEWS:7284
msgid ""
"`Issue #19784 <https://bugs.python.org/19784>`__: poplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."
msgstr ""
"`Issue #19784 <https://bugs.python.org/19784>`__: poplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."

#: ../../../Misc/NEWS:7287
msgid ""
"`Issue #19783 <https://bugs.python.org/19783>`__: nntplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."
msgstr ""
"`Issue #19783 <https://bugs.python.org/19783>`__: nntplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."

#: ../../../Misc/NEWS:7290
msgid ""
"`Issue #19782 <https://bugs.python.org/19782>`__: imaplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."
msgstr ""
"`Issue #19782 <https://bugs.python.org/19782>`__: imaplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."

#: ../../../Misc/NEWS:7293
msgid ""
"`Issue #20123 <https://bugs.python.org/20123>`__: Fix pydoc.synopsis() for "
"\"binary\" modules."
msgstr ""
"`Issue #20123 <https://bugs.python.org/20123>`__: Fix pydoc.synopsis() for "
"\"binary\" modules."

#: ../../../Misc/NEWS:7295
msgid ""
"`Issue #19834 <https://bugs.python.org/19834>`__: Support unpickling of "
"exceptions pickled by Python 2."
msgstr ""
"`Issue #19834 <https://bugs.python.org/19834>`__: Support unpickling of "
"exceptions pickled by Python 2."

#: ../../../Misc/NEWS:7297
msgid ""
"`Issue #19781 <https://bugs.python.org/19781>`__: ftplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."
msgstr ""
"`Issue #19781 <https://bugs.python.org/19781>`__: ftplib now supports "
"SSLContext.check_hostname and server name indication for TLS/SSL connections."

#: ../../../Misc/NEWS:7300
msgid ""
"`Issue #19509 <https://bugs.python.org/19509>`__: Add SSLContext."
"check_hostname to match the peer's certificate with server_hostname on "
"handshake."
msgstr ""
"`Issue #19509 <https://bugs.python.org/19509>`__: Add SSLContext."
"check_hostname to match the peer's certificate with server_hostname on "
"handshake."

#: ../../../Misc/NEWS:7303
msgid ""
"`Issue #15798 <https://bugs.python.org/15798>`__: Fixed subprocess.Popen() "
"to no longer fail if file descriptor 0, 1 or 2 is closed."
msgstr ""
"`Issue #15798 <https://bugs.python.org/15798>`__: Fixed subprocess.Popen() "
"to no longer fail if file descriptor 0, 1 or 2 is closed."

#: ../../../Misc/NEWS:7306
msgid ""
"`Issue #17897 <https://bugs.python.org/17897>`__: Optimized unpickle "
"prefetching."
msgstr ""
"`Issue #17897 <https://bugs.python.org/17897>`__: Optimized unpickle "
"prefetching."

#: ../../../Misc/NEWS:7308
msgid ""
"`Issue #3693 <https://bugs.python.org/3693>`__: Make the error message more "
"helpful when the array.array() constructor is given a str. Move the array "
"module typecode documentation to the docstring of the constructor."
msgstr ""
"`Issue #3693 <https://bugs.python.org/3693>`__: Make the error message more "
"helpful when the array.array() constructor is given a str. Move the array "
"module typecode documentation to the docstring of the constructor."

#: ../../../Misc/NEWS:7312
msgid ""
"`Issue #19088 <https://bugs.python.org/19088>`__: Fixed incorrect caching of "
"the copyreg module in object.__reduce__() and object.__reduce_ex__()."
msgstr ""
"`Issue #19088 <https://bugs.python.org/19088>`__: Fixed incorrect caching of "
"the copyreg module in object.__reduce__() and object.__reduce_ex__()."

#: ../../../Misc/NEWS:7315
msgid ""
"`Issue #19698 <https://bugs.python.org/19698>`__: Removed exec_module() "
"methods from importlib.machinery.BuiltinImporter and ExtensionFileLoader."
msgstr ""
"`Issue #19698 <https://bugs.python.org/19698>`__: Removed exec_module() "
"methods from importlib.machinery.BuiltinImporter and ExtensionFileLoader."

#: ../../../Misc/NEWS:7318
msgid ""
"`Issue #18864 <https://bugs.python.org/18864>`__: Added a setter for "
"ModuleSpec.has_location."
msgstr ""
"`Issue #18864 <https://bugs.python.org/18864>`__: Added a setter for "
"ModuleSpec.has_location."

#: ../../../Misc/NEWS:7320
msgid ""
"Fixed _pickle.Unpickler to not fail when loading empty strings as persistent "
"IDs."
msgstr ""

#: ../../../Misc/NEWS:7323
msgid ""
"`Issue #11480 <https://bugs.python.org/11480>`__: Fixed copy.copy to work "
"with classes with custom metaclasses. Patch by Daniel Urban."
msgstr ""
"`Issue #11480 <https://bugs.python.org/11480>`__: Fixed copy.copy to work "
"with classes with custom metaclasses. Patch by Daniel Urban."

#: ../../../Misc/NEWS:7326
msgid ""
"`Issue #6477 <https://bugs.python.org/6477>`__: Added support for pickling "
"the types of built-in singletons (i.e., Ellipsis, NotImplemented, None)."
msgstr ""
"`Issue #6477 <https://bugs.python.org/6477>`__: Added support for pickling "
"the types of built-in singletons (i.e., Ellipsis, NotImplemented, None)."

#: ../../../Misc/NEWS:7329
msgid ""
"`Issue #19713 <https://bugs.python.org/19713>`__: Add remaining PEP 451-"
"related deprecations and move away from using find_module/find_loaer/"
"load_module."
msgstr ""
"`Issue #19713 <https://bugs.python.org/19713>`__: Add remaining PEP 451-"
"related deprecations and move away from using find_module/find_loaer/"
"load_module."

#: ../../../Misc/NEWS:7332
msgid ""
"`Issue #19708 <https://bugs.python.org/19708>`__: Update pkgutil to use the "
"new importer APIs."
msgstr ""
"`Issue #19708 <https://bugs.python.org/19708>`__: Update pkgutil to use the "
"new importer APIs."

#: ../../../Misc/NEWS:7334
msgid ""
"`Issue #19703 <https://bugs.python.org/19703>`__: Update pydoc to use the "
"new importer APIs."
msgstr ""
"`Issue #19703 <https://bugs.python.org/19703>`__: Update pydoc to use the "
"new importer APIs."

#: ../../../Misc/NEWS:7336
msgid ""
"`Issue #19851 <https://bugs.python.org/19851>`__: Fixed a regression in "
"reloading sub-modules."
msgstr ""
"`Issue #19851 <https://bugs.python.org/19851>`__: Fixed a regression in "
"reloading sub-modules."

#: ../../../Misc/NEWS:7338
msgid "ssl.create_default_context() sets OP_NO_COMPRESSION to prevent CRIME."
msgstr ""

#: ../../../Misc/NEWS:7340
msgid ""
"`Issue #19802 <https://bugs.python.org/19802>`__: Add socket.SO_PRIORITY."
msgstr ""
"`Issue #19802 <https://bugs.python.org/19802>`__: Add socket.SO_PRIORITY."

#: ../../../Misc/NEWS:7342
msgid ""
"`Issue #11508 <https://bugs.python.org/11508>`__: Fixed uuid.getnode() and "
"uuid.uuid1() on environment with virtual interface.  Original patch by Kent "
"Frazier."
msgstr ""
"`Issue #11508 <https://bugs.python.org/11508>`__: Fixed uuid.getnode() and "
"uuid.uuid1() on environment with virtual interface.  Original patch by Kent "
"Frazier."

#: ../../../Misc/NEWS:7345
msgid ""
"`Issue #11489 <https://bugs.python.org/11489>`__: JSON decoder now accepts "
"lone surrogates."
msgstr ""
"`Issue #11489 <https://bugs.python.org/11489>`__: JSON decoder now accepts "
"lone surrogates."

#: ../../../Misc/NEWS:7347
msgid ""
"`Issue #19545 <https://bugs.python.org/19545>`__: Avoid chained exceptions "
"while passing stray % to time.strptime().  Initial patch by Claudiu Popa."
msgstr ""
"`Issue #19545 <https://bugs.python.org/19545>`__: Avoid chained exceptions "
"while passing stray % to time.strptime().  Initial patch by Claudiu Popa."

#: ../../../Misc/NEWS:7353
msgid ""
"`Issue #20058 <https://bugs.python.org/20058>`__: sys.stdin.readline() in "
"IDLE now always returns only one line."
msgstr ""
"`Issue #20058 <https://bugs.python.org/20058>`__: sys.stdin.readline() in "
"IDLE now always returns only one line."

#: ../../../Misc/NEWS:7355
msgid ""
"`Issue #19481 <https://bugs.python.org/19481>`__: print() of string subclass "
"instance in IDLE no longer hangs."
msgstr ""
"`Issue #19481 <https://bugs.python.org/19481>`__: print() of string subclass "
"instance in IDLE no longer hangs."

#: ../../../Misc/NEWS:7357
msgid ""
"`Issue #18270 <https://bugs.python.org/18270>`__: Prevent possible IDLE "
"AttributeError on OS X when no initial shell window is present."
msgstr ""
"`Issue #18270 <https://bugs.python.org/18270>`__: Prevent possible IDLE "
"AttributeError on OS X when no initial shell window is present."

#: ../../../Misc/NEWS:7363
msgid ""
"`Issue #20055 <https://bugs.python.org/20055>`__: Fix test_shutil under "
"Windows with symlink privileges held. Patch by Vajrasky Kok."
msgstr ""
"`Issue #20055 <https://bugs.python.org/20055>`__: Fix test_shutil under "
"Windows with symlink privileges held. Patch by Vajrasky Kok."

#: ../../../Misc/NEWS:7366
msgid ""
"`Issue #20070 <https://bugs.python.org/20070>`__: Don't run test_urllib2net "
"when network resources are not enabled."
msgstr ""
"`Issue #20070 <https://bugs.python.org/20070>`__: Don't run test_urllib2net "
"when network resources are not enabled."

#: ../../../Misc/NEWS:7369
msgid ""
"`Issue #19938 <https://bugs.python.org/19938>`__: Re-enabled "
"test_bug_1333982 in test_dis, which had been disabled since 3.0 due to the "
"changes in listcomp handling."
msgstr ""
"`Issue #19938 <https://bugs.python.org/19938>`__: Re-enabled "
"test_bug_1333982 in test_dis, which had been disabled since 3.0 due to the "
"changes in listcomp handling."

#: ../../../Misc/NEWS:7372
msgid ""
"`Issue #19320 <https://bugs.python.org/19320>`__: test_tcl no longer fails "
"when wantobjects is false."
msgstr ""
"`Issue #19320 <https://bugs.python.org/19320>`__: test_tcl no longer fails "
"when wantobjects is false."

#: ../../../Misc/NEWS:7374
msgid ""
"`Issue #19919 <https://bugs.python.org/19919>`__: Fix flaky SSL test. "
"connect_ex() sometimes returns EWOULDBLOCK on Windows or VMs hosted on "
"Windows."
msgstr ""
"`Issue #19919 <https://bugs.python.org/19919>`__: Fix flaky SSL test. "
"connect_ex() sometimes returns EWOULDBLOCK on Windows or VMs hosted on "
"Windows."

#: ../../../Misc/NEWS:7377
msgid ""
"`Issue #19912 <https://bugs.python.org/19912>`__: Added tests for ntpath."
"splitunc()."
msgstr ""
"`Issue #19912 <https://bugs.python.org/19912>`__: Added tests for ntpath."
"splitunc()."

#: ../../../Misc/NEWS:7379
msgid ""
"`Issue #19828 <https://bugs.python.org/19828>`__: Fixed test_site when the "
"whole suite is run with -S."
msgstr ""
"`Issue #19828 <https://bugs.python.org/19828>`__: Fixed test_site when the "
"whole suite is run with -S."

#: ../../../Misc/NEWS:7381
msgid ""
"`Issue #19928 <https://bugs.python.org/19928>`__: Implemented a test for "
"repr() of cell objects."
msgstr ""
"`Issue #19928 <https://bugs.python.org/19928>`__: Implemented a test for "
"repr() of cell objects."

#: ../../../Misc/NEWS:7383
msgid ""
"`Issue #19535 <https://bugs.python.org/19535>`__: Fixed test_docxmlrpc, "
"test_functools, test_inspect, and test_statistics when python is run with -"
"OO."
msgstr ""
"`Issue #19535 <https://bugs.python.org/19535>`__: Fixed test_docxmlrpc, "
"test_functools, test_inspect, and test_statistics when python is run with -"
"OO."

#: ../../../Misc/NEWS:7386
msgid ""
"`Issue #19926 <https://bugs.python.org/19926>`__: Removed unneeded test_main "
"from test_abstract_numbers. Patch by Vajrasky Kok."
msgstr ""
"`Issue #19926 <https://bugs.python.org/19926>`__: Removed unneeded test_main "
"from test_abstract_numbers. Patch by Vajrasky Kok."

#: ../../../Misc/NEWS:7389
msgid ""
"`Issue #19572 <https://bugs.python.org/19572>`__: More skipped tests "
"explicitly marked as skipped."
msgstr ""
"`Issue #19572 <https://bugs.python.org/19572>`__: More skipped tests "
"explicitly marked as skipped."

#: ../../../Misc/NEWS:7391
msgid ""
"`Issue #19595 <https://bugs.python.org/19595>`__, #19987: Re-enabled a long-"
"disabled test in test_winsound."
msgstr ""
"`Issue #19595 <https://bugs.python.org/19595>`__, #19987: Re-enabled a long-"
"disabled test in test_winsound."

#: ../../../Misc/NEWS:7393
msgid ""
"`Issue #19588 <https://bugs.python.org/19588>`__: Fixed tests in test_random "
"that were silently skipped most of the time.  Patch by Julian Gindi."
msgstr ""
"`Issue #19588 <https://bugs.python.org/19588>`__: Fixed tests in test_random "
"that were silently skipped most of the time.  Patch by Julian Gindi."

#: ../../../Misc/NEWS:7399
msgid ""
"`Issue #19728 <https://bugs.python.org/19728>`__: Enable pip installation by "
"default on Windows."
msgstr ""
"`Issue #19728 <https://bugs.python.org/19728>`__: Enable pip installation by "
"default on Windows."

#: ../../../Misc/NEWS:7401
msgid "`Issue #16136 <https://bugs.python.org/16136>`__: Remove VMS support"
msgstr "`Issue #16136 <https://bugs.python.org/16136>`__: Remove VMS support"

#: ../../../Misc/NEWS:7403
msgid ""
"`Issue #18215 <https://bugs.python.org/18215>`__: Add script Tools/ssl/"
"test_multiple_versions.py to compile and run Python's unit tests with "
"multiple versions of OpenSSL."
msgstr ""
"`Issue #18215 <https://bugs.python.org/18215>`__: Add script Tools/ssl/"
"test_multiple_versions.py to compile and run Python's unit tests with "
"multiple versions of OpenSSL."

#: ../../../Misc/NEWS:7406
msgid ""
"`Issue #19922 <https://bugs.python.org/19922>`__: define "
"_INCLUDE__STDC_A1_SOURCE in HP-UX to include mbstate_t for mbrtowc()."
msgstr ""
"`Issue #19922 <https://bugs.python.org/19922>`__: define "
"_INCLUDE__STDC_A1_SOURCE in HP-UX to include mbstate_t for mbrtowc()."

#: ../../../Misc/NEWS:7409
msgid ""
"`Issue #19788 <https://bugs.python.org/19788>`__: kill_python(_d).exe is now "
"run as a PreBuildEvent on the pythoncore sub-project.  This should prevent "
"build errors due a previous build's python(_d).exe still running."
msgstr ""
"`Issue #19788 <https://bugs.python.org/19788>`__: kill_python(_d).exe is now "
"run as a PreBuildEvent on the pythoncore sub-project.  This should prevent "
"build errors due a previous build's python(_d).exe still running."

#: ../../../Misc/NEWS:7416
msgid ""
"`Issue #20265 <https://bugs.python.org/20265>`__: Updated some parts of the "
"Using Windows document."
msgstr ""
"`Issue #20265 <https://bugs.python.org/20265>`__: Updated some parts of the "
"Using Windows document."

#: ../../../Misc/NEWS:7418
msgid ""
"`Issue #20266 <https://bugs.python.org/20266>`__: Updated some parts of the "
"Windows FAQ."
msgstr ""
"`Issue #20266 <https://bugs.python.org/20266>`__: Updated some parts of the "
"Windows FAQ."

#: ../../../Misc/NEWS:7420
msgid ""
"`Issue #20255 <https://bugs.python.org/20255>`__: Updated the about and bugs "
"pages."
msgstr ""
"`Issue #20255 <https://bugs.python.org/20255>`__: Updated the about and bugs "
"pages."

#: ../../../Misc/NEWS:7422
msgid ""
"`Issue #20253 <https://bugs.python.org/20253>`__: Fixed a typo in the "
"ipaddress docs that advertised an illegal attribute name.  Found by INADA "
"Naoki."
msgstr ""
"`Issue #20253 <https://bugs.python.org/20253>`__: Fixed a typo in the "
"ipaddress docs that advertised an illegal attribute name.  Found by INADA "
"Naoki."

#: ../../../Misc/NEWS:7425
msgid ""
"`Issue #18840 <https://bugs.python.org/18840>`__: Introduce the json module "
"in the tutorial, and de-emphasize the pickle module."
msgstr ""
"`Issue #18840 <https://bugs.python.org/18840>`__: Introduce the json module "
"in the tutorial, and de-emphasize the pickle module."

#: ../../../Misc/NEWS:7428
msgid ""
"`Issue #19845 <https://bugs.python.org/19845>`__: Updated the Compiling "
"Python on Windows section."
msgstr ""
"`Issue #19845 <https://bugs.python.org/19845>`__: Updated the Compiling "
"Python on Windows section."

#: ../../../Misc/NEWS:7430
msgid ""
"`Issue #19795 <https://bugs.python.org/19795>`__: Improved markup of True/"
"False constants."
msgstr ""
"`Issue #19795 <https://bugs.python.org/19795>`__: Improved markup of True/"
"False constants."

#: ../../../Misc/NEWS:7435
msgid ""
"`Issue #19659 <https://bugs.python.org/19659>`__: Added documentation for "
"Argument Clinic."
msgstr ""
"`Issue #19659 <https://bugs.python.org/19659>`__: Added documentation for "
"Argument Clinic."

#: ../../../Misc/NEWS:7437
msgid ""
"`Issue #19976 <https://bugs.python.org/19976>`__: Argument Clinic "
"METH_NOARGS functions now always take two parameters."
msgstr ""
"`Issue #19976 <https://bugs.python.org/19976>`__: Argument Clinic "
"METH_NOARGS functions now always take two parameters."

#: ../../../Misc/NEWS:7442
msgid "Python 3.4.0 Beta 1"
msgstr "Python 3.4.0 Beta 1"

#: ../../../Misc/NEWS:7444
msgid "Release date: 2013-11-24"
msgstr ""

#: ../../../Misc/NEWS:7449
msgid ""
"Use the repr of a module name in more places in import, especially "
"exceptions."
msgstr ""

#: ../../../Misc/NEWS:7452
msgid ""
"`Issue #19619 <https://bugs.python.org/19619>`__: str.encode, bytes.decode "
"and bytearray.decode now use an internal API to throw LookupError for known "
"non-text encodings, rather than attempting the encoding or decoding "
"operation and then throwing a TypeError for an unexpected output type. (The "
"latter mechanism remains in place for third party non-text encodings)"
msgstr ""
"`Issue #19619 <https://bugs.python.org/19619>`__: str.encode, bytes.decode "
"and bytearray.decode now use an internal API to throw LookupError for known "
"non-text encodings, rather than attempting the encoding or decoding "
"operation and then throwing a TypeError for an unexpected output type. (The "
"latter mechanism remains in place for third party non-text encodings)"

#: ../../../Misc/NEWS:7458
msgid ""
"`Issue #19183 <https://bugs.python.org/19183>`__: Implement PEP 456 'secure "
"and interchangeable hash algorithm'. Python now uses SipHash24 on all major "
"platforms."
msgstr ""
"`Issue #19183 <https://bugs.python.org/19183>`__: Implement PEP 456 'secure "
"and interchangeable hash algorithm'. Python now uses SipHash24 on all major "
"platforms."

#: ../../../Misc/NEWS:7461
msgid ""
"`Issue #12892 <https://bugs.python.org/12892>`__: The utf-16* and utf-32* "
"encoders no longer allow surrogate code points (U+D800-U+DFFF) to be "
"encoded.  The utf-32* decoders no longer decode byte sequences that "
"correspond to surrogate code points.  The surrogatepass error handler now "
"works with the utf-16* and utf-32* codecs.  Based on patches by Victor "
"Stinner and Kang-Hao (Kenny) Lu."
msgstr ""
"`Issue #12892 <https://bugs.python.org/12892>`__: The utf-16* and utf-32* "
"encoders no longer allow surrogate code points (U+D800-U+DFFF) to be "
"encoded.  The utf-32* decoders no longer decode byte sequences that "
"correspond to surrogate code points.  The surrogatepass error handler now "
"works with the utf-16* and utf-32* codecs.  Based on patches by Victor "
"Stinner and Kang-Hao (Kenny) Lu."

#: ../../../Misc/NEWS:7467
msgid ""
"`Issue #17806 <https://bugs.python.org/17806>`__: Added keyword-argument "
"support for \"tabsize\" to str/bytes.expandtabs()."
msgstr ""
"`Issue #17806 <https://bugs.python.org/17806>`__: Added keyword-argument "
"support for \"tabsize\" to str/bytes.expandtabs()."

#: ../../../Misc/NEWS:7470
msgid ""
"`Issue #17828 <https://bugs.python.org/17828>`__: Output type errors in str."
"encode(), bytes.decode() and bytearray.decode() now direct users to codecs."
"encode() or codecs.decode() as appropriate."
msgstr ""
"`Issue #17828 <https://bugs.python.org/17828>`__: Output type errors in str."
"encode(), bytes.decode() and bytearray.decode() now direct users to codecs."
"encode() or codecs.decode() as appropriate."

#: ../../../Misc/NEWS:7474
msgid ""
"`Issue #17828 <https://bugs.python.org/17828>`__: The interpreter now "
"attempts to chain errors that occur in codec processing with a replacement "
"exception of the same type that includes the codec name in the error "
"message. It ensures it only does this when the creation of the replacement "
"exception won't lose any information."
msgstr ""
"`Issue #17828 <https://bugs.python.org/17828>`__: The interpreter now "
"attempts to chain errors that occur in codec processing with a replacement "
"exception of the same type that includes the codec name in the error "
"message. It ensures it only does this when the creation of the replacement "
"exception won't lose any information."

#: ../../../Misc/NEWS:7479
msgid ""
"`Issue #19466 <https://bugs.python.org/19466>`__: Clear the frames of daemon "
"threads earlier during the Python shutdown to call object destructors. So "
"\"unclosed file\" resource warnings are now correctly emitted for daemon "
"threads."
msgstr ""
"`Issue #19466 <https://bugs.python.org/19466>`__: Clear the frames of daemon "
"threads earlier during the Python shutdown to call object destructors. So "
"\"unclosed file\" resource warnings are now correctly emitted for daemon "
"threads."

#: ../../../Misc/NEWS:7483
msgid ""
"`Issue #19514 <https://bugs.python.org/19514>`__: Deduplicate some "
"_Py_IDENTIFIER declarations. Patch by Andrei Dorian Duma."
msgstr ""
"`Issue #19514 <https://bugs.python.org/19514>`__: Deduplicate some "
"_Py_IDENTIFIER declarations. Patch by Andrei Dorian Duma."

#: ../../../Misc/NEWS:7486
msgid ""
"`Issue #17936 <https://bugs.python.org/17936>`__: Fix O(n**2) behaviour when "
"adding or removing many subclasses of a given type."
msgstr ""
"`Issue #17936 <https://bugs.python.org/17936>`__: Fix O(n**2) behaviour when "
"adding or removing many subclasses of a given type."

#: ../../../Misc/NEWS:7489
msgid ""
"`Issue #19428 <https://bugs.python.org/19428>`__: zipimport now handles "
"errors when reading truncated or invalid ZIP archive."
msgstr ""
"`Issue #19428 <https://bugs.python.org/19428>`__: zipimport now handles "
"errors when reading truncated or invalid ZIP archive."

#: ../../../Misc/NEWS:7492
msgid ""
"`Issue #18408 <https://bugs.python.org/18408>`__: Add a new "
"PyFrame_FastToLocalsWithError() function to handle exceptions when merging "
"fast locals into f_locals of a frame. PyEval_GetLocals() now raises an "
"exception and return NULL on failure."
msgstr ""
"`Issue #18408 <https://bugs.python.org/18408>`__: Add a new "
"PyFrame_FastToLocalsWithError() function to handle exceptions when merging "
"fast locals into f_locals of a frame. PyEval_GetLocals() now raises an "
"exception and return NULL on failure."

#: ../../../Misc/NEWS:7496
msgid ""
"`Issue #19369 <https://bugs.python.org/19369>`__: Optimized the usage of "
"__length_hint__()."
msgstr ""
"`Issue #19369 <https://bugs.python.org/19369>`__: Optimized the usage of "
"__length_hint__()."

#: ../../../Misc/NEWS:7498
msgid ""
"`Issue #28026 <https://bugs.python.org/28026>`__: Raise ImportError when "
"exec_module() exists but create_module() is missing."
msgstr ""
"`Issue #28026 <https://bugs.python.org/28026>`__: Raise ImportError when "
"exec_module() exists but create_module() is missing."

#: ../../../Misc/NEWS:7501
msgid ""
"`Issue #18603 <https://bugs.python.org/18603>`__: Ensure that PyOS_mystricmp "
"and PyOS_mystrnicmp are in the Python executable and not removed by the "
"linker's optimizer."
msgstr ""
"`Issue #18603 <https://bugs.python.org/18603>`__: Ensure that PyOS_mystricmp "
"and PyOS_mystrnicmp are in the Python executable and not removed by the "
"linker's optimizer."

#: ../../../Misc/NEWS:7504
msgid ""
"`Issue #19306 <https://bugs.python.org/19306>`__: Add extra hints to the "
"faulthandler module's stack dumps that these are \"upside down\"."
msgstr ""
"`Issue #19306 <https://bugs.python.org/19306>`__: Add extra hints to the "
"faulthandler module's stack dumps that these are \"upside down\"."

#: ../../../Misc/NEWS:7510
msgid ""
"`Issue #3158 <https://bugs.python.org/3158>`__: doctest can now find "
"doctests in functions and methods written in C."
msgstr ""
"`Issue #3158 <https://bugs.python.org/3158>`__: doctest can now find "
"doctests in functions and methods written in C."

#: ../../../Misc/NEWS:7513
msgid ""
"`Issue #13477 <https://bugs.python.org/13477>`__: Added command line "
"interface to the tarfile module. Original patch by Berker Peksag."
msgstr ""
"`Issue #13477 <https://bugs.python.org/13477>`__: Added command line "
"interface to the tarfile module. Original patch by Berker Peksag."

#: ../../../Misc/NEWS:7516
msgid ""
"`Issue #19674 <https://bugs.python.org/19674>`__: inspect.signature() now "
"produces a correct signature for some builtins."
msgstr ""
"`Issue #19674 <https://bugs.python.org/19674>`__: inspect.signature() now "
"produces a correct signature for some builtins."

#: ../../../Misc/NEWS:7519
msgid ""
"`Issue #19722 <https://bugs.python.org/19722>`__: Added opcode."
"stack_effect(), which computes the stack effect of bytecode instructions."
msgstr ""
"`Issue #19722 <https://bugs.python.org/19722>`__: Added opcode."
"stack_effect(), which computes the stack effect of bytecode instructions."

#: ../../../Misc/NEWS:7522
msgid ""
"`Issue #19735 <https://bugs.python.org/19735>`__: Implement private function "
"ssl._create_stdlib_context() to create SSLContext objects in Python's stdlib "
"module. It provides a single configuration point and makes use of SSLContext."
"load_default_certs()."
msgstr ""
"`Issue #19735 <https://bugs.python.org/19735>`__: Implement private function "
"ssl._create_stdlib_context() to create SSLContext objects in Python's stdlib "
"module. It provides a single configuration point and makes use of SSLContext."
"load_default_certs()."

#: ../../../Misc/NEWS:7526
msgid ""
"`Issue #16203 <https://bugs.python.org/16203>`__: Add re.fullmatch() "
"function and regex.fullmatch() method, which anchor the pattern at both ends "
"of the string to match. Original patch by Matthew Barnett."
msgstr ""
"`Issue #16203 <https://bugs.python.org/16203>`__: Add re.fullmatch() "
"function and regex.fullmatch() method, which anchor the pattern at both ends "
"of the string to match. Original patch by Matthew Barnett."

#: ../../../Misc/NEWS:7530
msgid ""
"`Issue #13592 <https://bugs.python.org/13592>`__: Improved the repr for "
"regular expression pattern objects. Based on patch by Hugo Lopes Tavares."
msgstr ""
"`Issue #13592 <https://bugs.python.org/13592>`__: Improved the repr for "
"regular expression pattern objects. Based on patch by Hugo Lopes Tavares."

#: ../../../Misc/NEWS:7533
msgid ""
"`Issue #19641 <https://bugs.python.org/19641>`__: Added the audioop."
"byteswap() function to convert big-endian samples to little-endian and vice "
"versa."
msgstr ""
"`Issue #19641 <https://bugs.python.org/19641>`__: Added the audioop."
"byteswap() function to convert big-endian samples to little-endian and vice "
"versa."

#: ../../../Misc/NEWS:7536
msgid ""
"`Issue #15204 <https://bugs.python.org/15204>`__: Deprecated the 'U' mode in "
"file-like objects."
msgstr ""
"`Issue #15204 <https://bugs.python.org/15204>`__: Deprecated the 'U' mode in "
"file-like objects."

#: ../../../Misc/NEWS:7538
msgid ""
"`Issue #17810 <https://bugs.python.org/17810>`__: Implement PEP 3154, pickle "
"protocol 4."
msgstr ""
"`Issue #17810 <https://bugs.python.org/17810>`__: Implement PEP 3154, pickle "
"protocol 4."

#: ../../../Misc/NEWS:7540
msgid ""
"`Issue #19668 <https://bugs.python.org/19668>`__: Added support for the "
"cp1125 encoding."
msgstr ""
"`Issue #19668 <https://bugs.python.org/19668>`__: Added support for the "
"cp1125 encoding."

#: ../../../Misc/NEWS:7542
msgid ""
"`Issue #19689 <https://bugs.python.org/19689>`__: Add ssl."
"create_default_context() factory function. It creates a new SSLContext "
"object with secure default settings."
msgstr ""
"`Issue #19689 <https://bugs.python.org/19689>`__: Add ssl."
"create_default_context() factory function. It creates a new SSLContext "
"object with secure default settings."

#: ../../../Misc/NEWS:7545
msgid ""
"`Issue #19727 <https://bugs.python.org/19727>`__: os.utime(..., None) is now "
"potentially more precise under Windows."
msgstr ""
"`Issue #19727 <https://bugs.python.org/19727>`__: os.utime(..., None) is now "
"potentially more precise under Windows."

#: ../../../Misc/NEWS:7548
msgid ""
"`Issue #17201 <https://bugs.python.org/17201>`__: ZIP64 extensions now are "
"enabled by default.  Patch by William Mallard."
msgstr ""
"`Issue #17201 <https://bugs.python.org/17201>`__: ZIP64 extensions now are "
"enabled by default.  Patch by William Mallard."

#: ../../../Misc/NEWS:7551
msgid ""
"`Issue #19292 <https://bugs.python.org/19292>`__: Add SSLContext."
"load_default_certs() to load default root CA certificates from default "
"stores or system stores. By default the method loads CA certs for "
"authentication of server certs."
msgstr ""
"`Issue #19292 <https://bugs.python.org/19292>`__: Add SSLContext."
"load_default_certs() to load default root CA certificates from default "
"stores or system stores. By default the method loads CA certs for "
"authentication of server certs."

#: ../../../Misc/NEWS:7555
msgid ""
"`Issue #19673 <https://bugs.python.org/19673>`__: Add pathlib to the stdlib "
"as a provisional module (PEP 428)."
msgstr ""
"`Issue #19673 <https://bugs.python.org/19673>`__: Add pathlib to the stdlib "
"as a provisional module (PEP 428)."

#: ../../../Misc/NEWS:7557
msgid ""
"`Issue #16596 <https://bugs.python.org/16596>`__: pdb in a generator now "
"properly skips over yield and yield from rather than stepping out of the "
"generator into its caller.  (This is essential for stepping through asyncio "
"coroutines.)"
msgstr ""
"`Issue #16596 <https://bugs.python.org/16596>`__: pdb in a generator now "
"properly skips over yield and yield from rather than stepping out of the "
"generator into its caller.  (This is essential for stepping through asyncio "
"coroutines.)"

#: ../../../Misc/NEWS:7561
msgid ""
"`Issue #17916 <https://bugs.python.org/17916>`__: Added dis.Bytecode."
"from_traceback() and dis.Bytecode.current_offset to easily display \"current "
"instruction\" markers in the new disassembly API (Patch by Claudiu Popa)."
msgstr ""
"`Issue #17916 <https://bugs.python.org/17916>`__: Added dis.Bytecode."
"from_traceback() and dis.Bytecode.current_offset to easily display \"current "
"instruction\" markers in the new disassembly API (Patch by Claudiu Popa)."

#: ../../../Misc/NEWS:7565
msgid ""
"`Issue #19552 <https://bugs.python.org/19552>`__: venv now supports "
"bootstrapping pip into virtual environments"
msgstr ""
"`Issue #19552 <https://bugs.python.org/19552>`__: venv now supports "
"bootstrapping pip into virtual environments"

#: ../../../Misc/NEWS:7567
msgid ""
"`Issue #17134 <https://bugs.python.org/17134>`__: Finalize interface to "
"Windows' certificate store. Cert and CRL enumeration are now two functions. "
"enum_certificates() also returns purpose flags as set of OIDs."
msgstr ""
"`Issue #17134 <https://bugs.python.org/17134>`__: Finalize interface to "
"Windows' certificate store. Cert and CRL enumeration are now two functions. "
"enum_certificates() also returns purpose flags as set of OIDs."

#: ../../../Misc/NEWS:7571
msgid ""
"`Issue #19555 <https://bugs.python.org/19555>`__: Restore sysconfig."
"get_config_var('SO'), (and the distutils equivalent) with a "
"DeprecationWarning pointing people at $EXT_SUFFIX."
msgstr ""
"`Issue #19555 <https://bugs.python.org/19555>`__: Restore sysconfig."
"get_config_var('SO'), (and the distutils equivalent) with a "
"DeprecationWarning pointing people at $EXT_SUFFIX."

#: ../../../Misc/NEWS:7574
msgid ""
"`Issue #8813 <https://bugs.python.org/8813>`__: Add SSLContext.verify_flags "
"to change the verification flags of the context in order to enable "
"certification revocation list (CRL) checks or strict X509 rules."
msgstr ""
"`Issue #8813 <https://bugs.python.org/8813>`__: Add SSLContext.verify_flags "
"to change the verification flags of the context in order to enable "
"certification revocation list (CRL) checks or strict X509 rules."

#: ../../../Misc/NEWS:7578
msgid ""
"`Issue #18294 <https://bugs.python.org/18294>`__: Fix the zlib module to "
"make it 64-bit safe."
msgstr ""
"`Issue #18294 <https://bugs.python.org/18294>`__: Fix the zlib module to "
"make it 64-bit safe."

#: ../../../Misc/NEWS:7580
msgid ""
"`Issue #19682 <https://bugs.python.org/19682>`__: Fix compatibility issue "
"with old version of OpenSSL that was introduced by `Issue #18379 <https://"
"bugs.python.org/18379>`__."
msgstr ""
"`Issue #19682 <https://bugs.python.org/19682>`__: Fix compatibility issue "
"with old version of OpenSSL that was introduced by `Issue #18379 <https://"
"bugs.python.org/18379>`__."

#: ../../../Misc/NEWS:7583
msgid ""
"`Issue #14455 <https://bugs.python.org/14455>`__: plistlib now supports "
"binary plists and has an updated API."
msgstr ""
"`Issue #14455 <https://bugs.python.org/14455>`__: plistlib now supports "
"binary plists and has an updated API."

#: ../../../Misc/NEWS:7585
msgid ""
"`Issue #19633 <https://bugs.python.org/19633>`__: Fixed writing not "
"compressed 16- and 32-bit wave files on big-endian platforms."
msgstr ""
"`Issue #19633 <https://bugs.python.org/19633>`__: Fixed writing not "
"compressed 16- and 32-bit wave files on big-endian platforms."

#: ../../../Misc/NEWS:7588
msgid ""
"`Issue #18379 <https://bugs.python.org/18379>`__: SSLSocket.getpeercert() "
"returns CA issuer AIA fields, OCSP and CRL distribution points."
msgstr ""
"`Issue #18379 <https://bugs.python.org/18379>`__: SSLSocket.getpeercert() "
"returns CA issuer AIA fields, OCSP and CRL distribution points."

#: ../../../Misc/NEWS:7591
msgid ""
"`Issue #18138 <https://bugs.python.org/18138>`__: Implement cadata argument "
"of SSLContext.load_verify_location() to load CA certificates and CRL from "
"memory. It supports PEM and DER encoded strings."
msgstr ""
"`Issue #18138 <https://bugs.python.org/18138>`__: Implement cadata argument "
"of SSLContext.load_verify_location() to load CA certificates and CRL from "
"memory. It supports PEM and DER encoded strings."

#: ../../../Misc/NEWS:7595
msgid ""
"`Issue #18775 <https://bugs.python.org/18775>`__: Add name and block_size "
"attribute to HMAC object. They now provide the same API elements as non-"
"keyed cryptographic hash functions."
msgstr ""
"`Issue #18775 <https://bugs.python.org/18775>`__: Add name and block_size "
"attribute to HMAC object. They now provide the same API elements as non-"
"keyed cryptographic hash functions."

#: ../../../Misc/NEWS:7598
msgid ""
"`Issue #17276 <https://bugs.python.org/17276>`__: MD5 as default digestmod "
"for HMAC is deprecated. The HMAC module supports digestmod names, e.g. hmac."
"HMAC('sha1')."
msgstr ""
"`Issue #17276 <https://bugs.python.org/17276>`__: MD5 as default digestmod "
"for HMAC is deprecated. The HMAC module supports digestmod names, e.g. hmac."
"HMAC('sha1')."

#: ../../../Misc/NEWS:7601
msgid ""
"`Issue #19449 <https://bugs.python.org/19449>`__: in csv's writerow, handle "
"non-string keys when generating the error message that certain keys are not "
"in the 'fieldnames' list."
msgstr ""
"`Issue #19449 <https://bugs.python.org/19449>`__: in csv's writerow, handle "
"non-string keys when generating the error message that certain keys are not "
"in the 'fieldnames' list."

#: ../../../Misc/NEWS:7604
msgid ""
"`Issue #13633 <https://bugs.python.org/13633>`__: Added a new "
"convert_charrefs keyword arg to HTMLParser that, when True, automatically "
"converts all character references."
msgstr ""
"`Issue #13633 <https://bugs.python.org/13633>`__: Added a new "
"convert_charrefs keyword arg to HTMLParser that, when True, automatically "
"converts all character references."

#: ../../../Misc/NEWS:7607
msgid ""
"`Issue #2927 <https://bugs.python.org/2927>`__: Added the unescape() "
"function to the html module."
msgstr ""
"`Issue #2927 <https://bugs.python.org/2927>`__: Added the unescape() "
"function to the html module."

#: ../../../Misc/NEWS:7609
msgid ""
"`Issue #8402 <https://bugs.python.org/8402>`__: Added the escape() function "
"to the glob module."
msgstr ""
"`Issue #8402 <https://bugs.python.org/8402>`__: Added the escape() function "
"to the glob module."

#: ../../../Misc/NEWS:7611
msgid ""
"`Issue #17618 <https://bugs.python.org/17618>`__: Add Base85 and Ascii85 "
"encoding/decoding to the base64 module."
msgstr ""
"`Issue #17618 <https://bugs.python.org/17618>`__: Add Base85 and Ascii85 "
"encoding/decoding to the base64 module."

#: ../../../Misc/NEWS:7613
msgid ""
"`Issue #19634 <https://bugs.python.org/19634>`__: time.strftime(\"%y\") now "
"raises a ValueError on AIX when given a year before 1900."
msgstr ""
"`Issue #19634 <https://bugs.python.org/19634>`__: time.strftime(\"%y\") now "
"raises a ValueError on AIX when given a year before 1900."

#: ../../../Misc/NEWS:7616
msgid ""
"Fix test.support.bind_port() to not cause an error when Python was compiled "
"on a system with SO_REUSEPORT defined in the headers but run on a system "
"with an OS kernel that does not support that reasonably new socket option."
msgstr ""

#: ../../../Misc/NEWS:7620
msgid ""
"Fix compilation error under gcc of the ctypes module bundled libffi for arm."
msgstr ""

#: ../../../Misc/NEWS:7622
msgid ""
"`Issue #19448 <https://bugs.python.org/19448>`__: Add private API to SSL "
"module to lookup ASN.1 objects by OID, NID, short name and long name."
msgstr ""
"`Issue #19448 <https://bugs.python.org/19448>`__: Add private API to SSL "
"module to lookup ASN.1 objects by OID, NID, short name and long name."

#: ../../../Misc/NEWS:7625
msgid ""
"`Issue #19282 <https://bugs.python.org/19282>`__: dbm.open now supports the "
"context management protocol. (Initial patch by Claudiu Popa)"
msgstr ""
"`Issue #19282 <https://bugs.python.org/19282>`__: dbm.open now supports the "
"context management protocol. (Initial patch by Claudiu Popa)"

#: ../../../Misc/NEWS:7628
msgid ""
"`Issue #8311 <https://bugs.python.org/8311>`__: Added support for writing "
"any bytes-like objects in the aifc, sunau, and wave modules."
msgstr ""
"`Issue #8311 <https://bugs.python.org/8311>`__: Added support for writing "
"any bytes-like objects in the aifc, sunau, and wave modules."

#: ../../../Misc/NEWS:7631
msgid ""
"`Issue #5202 <https://bugs.python.org/5202>`__: Added support for unseekable "
"files in the wave module."
msgstr ""
"`Issue #5202 <https://bugs.python.org/5202>`__: Added support for unseekable "
"files in the wave module."

#: ../../../Misc/NEWS:7633
msgid ""
"`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #1180 <https://"
"bugs.python.org/1180>`__: Restore global option to ignore ~/.pydistutils.cfg "
"in Distutils, accidentally removed in backout of distutils2 changes."
msgstr ""
"`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #1180 <https://"
"bugs.python.org/1180>`__: Restore global option to ignore ~/.pydistutils.cfg "
"in Distutils, accidentally removed in backout of distutils2 changes."

#: ../../../Misc/NEWS:7637
msgid ""
"`Issue #19523 <https://bugs.python.org/19523>`__: Closed FileHandler leak "
"which occurred when delay was set."
msgstr ""
"`Issue #19523 <https://bugs.python.org/19523>`__: Closed FileHandler leak "
"which occurred when delay was set."

#: ../../../Misc/NEWS:7639
msgid ""
"`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #6516 <https://"
"bugs.python.org/6516>`__: Restore support for --user and --group parameters "
"to sdist command accidentally rolled back as part of the distutils2 rollback."
msgstr ""
"`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #6516 <https://"
"bugs.python.org/6516>`__: Restore support for --user and --group parameters "
"to sdist command accidentally rolled back as part of the distutils2 rollback."

#: ../../../Misc/NEWS:7643
msgid ""
"`Issue #13674 <https://bugs.python.org/13674>`__: Prevented time.strftime "
"from crashing on Windows when given a year before 1900 and a format of %y."
msgstr ""
"`Issue #13674 <https://bugs.python.org/13674>`__: Prevented time.strftime "
"from crashing on Windows when given a year before 1900 and a format of %y."

#: ../../../Misc/NEWS:7646
msgid ""
"`Issue #19406 <https://bugs.python.org/19406>`__: implementation of the "
"ensurepip module (part of PEP 453). Patch by Donald Stufft and Nick Coghlan."
msgstr ""
"`Issue #19406 <https://bugs.python.org/19406>`__: implementation of the "
"ensurepip module (part of PEP 453). Patch by Donald Stufft and Nick Coghlan."

#: ../../../Misc/NEWS:7649
msgid ""
"`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #6286 <https://"
"bugs.python.org/6286>`__: Restore use of urllib over http allowing use of "
"http_proxy for Distutils upload command, a feature accidentally lost in the "
"rollback of distutils2."
msgstr ""
"`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #6286 <https://"
"bugs.python.org/6286>`__: Restore use of urllib over http allowing use of "
"http_proxy for Distutils upload command, a feature accidentally lost in the "
"rollback of distutils2."

#: ../../../Misc/NEWS:7653
msgid ""
"`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #7457 <https://"
"bugs.python.org/7457>`__: Restore the read_pkg_file method to distutils.dist."
"DistributionMetadata accidentally removed in the undo of distutils2."
msgstr ""
"`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #7457 <https://"
"bugs.python.org/7457>`__: Restore the read_pkg_file method to distutils.dist."
"DistributionMetadata accidentally removed in the undo of distutils2."

#: ../../../Misc/NEWS:7657
msgid ""
"`Issue #16685 <https://bugs.python.org/16685>`__: Added support for any "
"bytes-like objects in the audioop module. Removed support for strings."
msgstr ""
"`Issue #16685 <https://bugs.python.org/16685>`__: Added support for any "
"bytes-like objects in the audioop module. Removed support for strings."

#: ../../../Misc/NEWS:7660
msgid ""
"`Issue #7171 <https://bugs.python.org/7171>`__: Add Windows implementation "
"of ``inet_ntop`` and ``inet_pton`` to socket module. Patch by Atsuo Ishimoto."
msgstr ""
"`Issue #7171 <https://bugs.python.org/7171>`__: Add Windows implementation "
"of ``inet_ntop`` and ``inet_pton`` to socket module. Patch by Atsuo Ishimoto."

#: ../../../Misc/NEWS:7663
msgid ""
"`Issue #19261 <https://bugs.python.org/19261>`__: Added support for writing "
"24-bit samples in the sunau module."
msgstr ""
"`Issue #19261 <https://bugs.python.org/19261>`__: Added support for writing "
"24-bit samples in the sunau module."

#: ../../../Misc/NEWS:7665
msgid ""
"`Issue #1097797 <https://bugs.python.org/1097797>`__: Added CP273 encoding, "
"used on IBM mainframes in Germany and Austria.  Mapping provided by Michael "
"Bierenfeld."
msgstr ""
"`Issue #1097797 <https://bugs.python.org/1097797>`__: Added CP273 encoding, "
"used on IBM mainframes in Germany and Austria.  Mapping provided by Michael "
"Bierenfeld."

#: ../../../Misc/NEWS:7668
msgid ""
"`Issue #1575020 <https://bugs.python.org/1575020>`__: Fixed support of 24-"
"bit wave files on big-endian platforms."
msgstr ""
"`Issue #1575020 <https://bugs.python.org/1575020>`__: Fixed support of 24-"
"bit wave files on big-endian platforms."

#: ../../../Misc/NEWS:7670
msgid ""
"`Issue #19378 <https://bugs.python.org/19378>`__: Fixed a number of cases in "
"the dis module where the new \"file\" parameter was not being honoured "
"correctly"
msgstr ""
"`Issue #19378 <https://bugs.python.org/19378>`__: Fixed a number of cases in "
"the dis module where the new \"file\" parameter was not being honoured "
"correctly"

#: ../../../Misc/NEWS:7673
msgid ""
"`Issue #19378 <https://bugs.python.org/19378>`__: Removed the \"dis.Bytecode."
"show_info\" method"
msgstr ""
"`Issue #19378 <https://bugs.python.org/19378>`__: Removed the \"dis.Bytecode."
"show_info\" method"

#: ../../../Misc/NEWS:7675
msgid ""
"`Issue #19378 <https://bugs.python.org/19378>`__: Renamed the \"dis.Bytecode."
"display_code\" method to \"dis.Bytecode.dis\" and converted it to returning "
"a string rather than printing output."
msgstr ""
"`Issue #19378 <https://bugs.python.org/19378>`__: Renamed the \"dis.Bytecode."
"display_code\" method to \"dis.Bytecode.dis\" and converted it to returning "
"a string rather than printing output."

#: ../../../Misc/NEWS:7679
msgid ""
"`Issue #19378 <https://bugs.python.org/19378>`__: the \"line_offset\" "
"parameter in the new \"dis.get_instructions\" API has been renamed to "
"\"first_line\" (and the default value and usage changed accordingly). This "
"should reduce confusion with the more common use of \"offset\" in the dis "
"docs to refer to bytecode offsets."
msgstr ""
"`Issue #19378 <https://bugs.python.org/19378>`__: the \"line_offset\" "
"parameter in the new \"dis.get_instructions\" API has been renamed to "
"\"first_line\" (and the default value and usage changed accordingly). This "
"should reduce confusion with the more common use of \"offset\" in the dis "
"docs to refer to bytecode offsets."

#: ../../../Misc/NEWS:7684
msgid ""
"`Issue #18678 <https://bugs.python.org/18678>`__: Corrected spwd struct "
"member names in spwd module: sp_nam->sp_namp, and sp_pwd->sp_pwdp.  The old "
"names are kept as extra structseq members, for backward compatibility."
msgstr ""
"`Issue #18678 <https://bugs.python.org/18678>`__: Corrected spwd struct "
"member names in spwd module: sp_nam->sp_namp, and sp_pwd->sp_pwdp.  The old "
"names are kept as extra structseq members, for backward compatibility."

#: ../../../Misc/NEWS:7688
msgid ""
"`Issue #6157 <https://bugs.python.org/6157>`__: Fixed tkinter.Text.debug().  "
"tkinter.Text.bbox() now raises TypeError instead of TclError on wrong number "
"of arguments.  Original patch by Guilherme Polo."
msgstr ""
"`Issue #6157 <https://bugs.python.org/6157>`__: Fixed tkinter.Text.debug().  "
"tkinter.Text.bbox() now raises TypeError instead of TclError on wrong number "
"of arguments.  Original patch by Guilherme Polo."

#: ../../../Misc/NEWS:7692
msgid ""
"`Issue #10197 <https://bugs.python.org/10197>`__: Rework subprocess."
"get[status]output to use subprocess functionality and thus to work on "
"Windows. Patch by Nick Coghlan"
msgstr ""
"`Issue #10197 <https://bugs.python.org/10197>`__: Rework subprocess."
"get[status]output to use subprocess functionality and thus to work on "
"Windows. Patch by Nick Coghlan"

#: ../../../Misc/NEWS:7695
msgid ""
"`Issue #6160 <https://bugs.python.org/6160>`__: The bbox() method of tkinter."
"Spinbox now returns a tuple of integers instead of a string.  Based on patch "
"by Guilherme Polo."
msgstr ""
"`Issue #6160 <https://bugs.python.org/6160>`__: The bbox() method of tkinter."
"Spinbox now returns a tuple of integers instead of a string.  Based on patch "
"by Guilherme Polo."

#: ../../../Misc/NEWS:7698
msgid ""
"`Issue #19403 <https://bugs.python.org/19403>`__: contextlib.redirect_stdout "
"is now reentrant"
msgstr ""
"`Issue #19403 <https://bugs.python.org/19403>`__: contextlib.redirect_stdout "
"is now reentrant"

#: ../../../Misc/NEWS:7700
msgid ""
"`Issue #19286 <https://bugs.python.org/19286>`__: Directories in "
"``package_data`` are no longer added to the filelist, preventing failure "
"outlined in the ticket."
msgstr ""
"`Issue #19286 <https://bugs.python.org/19286>`__: Directories in "
"``package_data`` are no longer added to the filelist, preventing failure "
"outlined in the ticket."

#: ../../../Misc/NEWS:7703
msgid ""
"`Issue #19480 <https://bugs.python.org/19480>`__: HTMLParser now accepts all "
"valid start-tag names as defined by the HTML5 standard."
msgstr ""
"`Issue #19480 <https://bugs.python.org/19480>`__: HTMLParser now accepts all "
"valid start-tag names as defined by the HTML5 standard."

#: ../../../Misc/NEWS:7706
msgid ""
"`Issue #15114 <https://bugs.python.org/15114>`__: The html.parser module now "
"raises a DeprecationWarning when the strict argument of HTMLParser or the "
"HTMLParser.error method are used."
msgstr ""
"`Issue #15114 <https://bugs.python.org/15114>`__: The html.parser module now "
"raises a DeprecationWarning when the strict argument of HTMLParser or the "
"HTMLParser.error method are used."

#: ../../../Misc/NEWS:7709
msgid ""
"`Issue #19410 <https://bugs.python.org/19410>`__: Undo the special-casing "
"removal of '' for importlib.machinery.FileFinder."
msgstr ""
"`Issue #19410 <https://bugs.python.org/19410>`__: Undo the special-casing "
"removal of '' for importlib.machinery.FileFinder."

#: ../../../Misc/NEWS:7712
msgid ""
"`Issue #19424 <https://bugs.python.org/19424>`__: Fix the warnings module to "
"accept filename containing surrogate characters."
msgstr ""
"`Issue #19424 <https://bugs.python.org/19424>`__: Fix the warnings module to "
"accept filename containing surrogate characters."

#: ../../../Misc/NEWS:7715
msgid ""
"`Issue #19435 <https://bugs.python.org/19435>`__: Fix directory traversal "
"attack on CGIHttpRequestHandler."
msgstr ""
"`Issue #19435 <https://bugs.python.org/19435>`__: Fix directory traversal "
"attack on CGIHttpRequestHandler."

#: ../../../Misc/NEWS:7717
msgid ""
"`Issue #19227 <https://bugs.python.org/19227>`__: Remove pthread_atfork() "
"handler. The handler was added to solve #18747 but has caused issues."
msgstr ""
"`Issue #19227 <https://bugs.python.org/19227>`__: Remove pthread_atfork() "
"handler. The handler was added to solve #18747 but has caused issues."

#: ../../../Misc/NEWS:7720
msgid ""
"`Issue #19420 <https://bugs.python.org/19420>`__: Fix reference leak in "
"module initialization code of _hashopenssl.c"
msgstr ""
"`Issue #19420 <https://bugs.python.org/19420>`__: Fix reference leak in "
"module initialization code of _hashopenssl.c"

#: ../../../Misc/NEWS:7723
msgid ""
"`Issue #19329 <https://bugs.python.org/19329>`__: Optimized compiling "
"charsets in regular expressions."
msgstr ""
"`Issue #19329 <https://bugs.python.org/19329>`__: Optimized compiling "
"charsets in regular expressions."

#: ../../../Misc/NEWS:7725
msgid ""
"`Issue #19227 <https://bugs.python.org/19227>`__: Try to fix deadlocks "
"caused by re-seeding then OpenSSL pseudo-random number generator on fork()."
msgstr ""
"`Issue #19227 <https://bugs.python.org/19227>`__: Try to fix deadlocks "
"caused by re-seeding then OpenSSL pseudo-random number generator on fork()."

#: ../../../Misc/NEWS:7728
msgid ""
"`Issue #16037 <https://bugs.python.org/16037>`__: HTTPMessage.readheaders() "
"raises an HTTPException when more than 100 headers are read.  Adapted from "
"patch by Jyrki Pulliainen."
msgstr ""
"`Issue #16037 <https://bugs.python.org/16037>`__: HTTPMessage.readheaders() "
"raises an HTTPException when more than 100 headers are read.  Adapted from "
"patch by Jyrki Pulliainen."

#: ../../../Misc/NEWS:7731
msgid ""
"`Issue #16040 <https://bugs.python.org/16040>`__: CVE-2013-1752: nntplib: "
"Limit maximum line lengths to 2048 to prevent readline() calls from "
"consuming too much memory.  Patch by Jyrki Pulliainen."
msgstr ""
"`Issue #16040 <https://bugs.python.org/16040>`__: CVE-2013-1752: nntplib: "
"Limit maximum line lengths to 2048 to prevent readline() calls from "
"consuming too much memory.  Patch by Jyrki Pulliainen."

#: ../../../Misc/NEWS:7735
msgid ""
"`Issue #16041 <https://bugs.python.org/16041>`__: CVE-2013-1752: poplib: "
"Limit maximum line lengths to 2048 to prevent readline() calls from "
"consuming too much memory.  Patch by Jyrki Pulliainen."
msgstr ""
"`Issue #16041 <https://bugs.python.org/16041>`__: CVE-2013-1752: poplib: "
"Limit maximum line lengths to 2048 to prevent readline() calls from "
"consuming too much memory.  Patch by Jyrki Pulliainen."

#: ../../../Misc/NEWS:7739
msgid ""
"`Issue #17997 <https://bugs.python.org/17997>`__: Change behavior of ``ssl."
"match_hostname()`` to follow RFC 6125, for security reasons.  It now doesn't "
"match multiple wildcards nor wildcards inside IDN fragments."
msgstr ""
"`Issue #17997 <https://bugs.python.org/17997>`__: Change behavior of ``ssl."
"match_hostname()`` to follow RFC 6125, for security reasons.  It now doesn't "
"match multiple wildcards nor wildcards inside IDN fragments."

#: ../../../Misc/NEWS:7743
msgid ""
"`Issue #16039 <https://bugs.python.org/16039>`__: CVE-2013-1752: Change use "
"of readline in imaplib module to limit line length.  Patch by Emil Lind."
msgstr ""
"`Issue #16039 <https://bugs.python.org/16039>`__: CVE-2013-1752: Change use "
"of readline in imaplib module to limit line length.  Patch by Emil Lind."

#: ../../../Misc/NEWS:7746
msgid ""
"`Issue #19330 <https://bugs.python.org/19330>`__: the unnecessary wrapper "
"functions have been removed from the implementations of the new contextlib."
"redirect_stdout and contextlib.suppress context managers, which also ensures "
"they provide reasonable help() output on instances"
msgstr ""
"`Issue #19330 <https://bugs.python.org/19330>`__: the unnecessary wrapper "
"functions have been removed from the implementations of the new contextlib."
"redirect_stdout and contextlib.suppress context managers, which also ensures "
"they provide reasonable help() output on instances"

#: ../../../Misc/NEWS:7751
msgid ""
"`Issue #19393 <https://bugs.python.org/19393>`__: Fix symtable.symtable "
"function to not be confused when there are functions or classes named \"top"
"\"."
msgstr ""
"`Issue #19393 <https://bugs.python.org/19393>`__: Fix symtable.symtable "
"function to not be confused when there are functions or classes named \"top"
"\"."

#: ../../../Misc/NEWS:7754
msgid ""
"`Issue #18685 <https://bugs.python.org/18685>`__: Restore re performance to "
"pre-PEP 393 levels."
msgstr ""
"`Issue #18685 <https://bugs.python.org/18685>`__: Restore re performance to "
"pre-PEP 393 levels."

#: ../../../Misc/NEWS:7756
msgid ""
"`Issue #19339 <https://bugs.python.org/19339>`__: telnetlib module is now "
"using time.monotonic() when available to compute timeout."
msgstr ""
"`Issue #19339 <https://bugs.python.org/19339>`__: telnetlib module is now "
"using time.monotonic() when available to compute timeout."

#: ../../../Misc/NEWS:7759
msgid ""
"`Issue #19399 <https://bugs.python.org/19399>`__: fix sporadic "
"test_subprocess failure."
msgstr ""
"`Issue #19399 <https://bugs.python.org/19399>`__: fix sporadic "
"test_subprocess failure."

#: ../../../Misc/NEWS:7761
msgid ""
"`Issue #13234 <https://bugs.python.org/13234>`__: Fix os.listdir to work "
"with extended paths on Windows. Patch by Santoso Wijaya."
msgstr ""
"`Issue #13234 <https://bugs.python.org/13234>`__: Fix os.listdir to work "
"with extended paths on Windows. Patch by Santoso Wijaya."

#: ../../../Misc/NEWS:7764
msgid ""
"`Issue #19375 <https://bugs.python.org/19375>`__: The site module adding a "
"\"site-python\" directory to sys.path, if it exists, is now deprecated."
msgstr ""
"`Issue #19375 <https://bugs.python.org/19375>`__: The site module adding a "
"\"site-python\" directory to sys.path, if it exists, is now deprecated."

#: ../../../Misc/NEWS:7767
msgid ""
"`Issue #19379 <https://bugs.python.org/19379>`__: Lazily import linecache in "
"the warnings module, to make startup with warnings faster until a warning "
"gets printed."
msgstr ""
"`Issue #19379 <https://bugs.python.org/19379>`__: Lazily import linecache in "
"the warnings module, to make startup with warnings faster until a warning "
"gets printed."

#: ../../../Misc/NEWS:7770
msgid ""
"`Issue #19288 <https://bugs.python.org/19288>`__: Fixed the \"in\" operator "
"of dbm.gnu databases for string argument.  Original patch by Arfrever "
"Frehtes Taifersar Arahesis."
msgstr ""
"`Issue #19288 <https://bugs.python.org/19288>`__: Fixed the \"in\" operator "
"of dbm.gnu databases for string argument.  Original patch by Arfrever "
"Frehtes Taifersar Arahesis."

#: ../../../Misc/NEWS:7773
msgid ""
"`Issue #19287 <https://bugs.python.org/19287>`__: Fixed the \"in\" operator "
"of dbm.ndbm databases for string argument.  Original patch by Arfrever "
"Frehtes Taifersar Arahesis."
msgstr ""
"`Issue #19287 <https://bugs.python.org/19287>`__: Fixed the \"in\" operator "
"of dbm.ndbm databases for string argument.  Original patch by Arfrever "
"Frehtes Taifersar Arahesis."

#: ../../../Misc/NEWS:7776
msgid ""
"`Issue #19327 <https://bugs.python.org/19327>`__: Fixed the working of "
"regular expressions with too big charset."
msgstr ""
"`Issue #19327 <https://bugs.python.org/19327>`__: Fixed the working of "
"regular expressions with too big charset."

#: ../../../Misc/NEWS:7778
msgid ""
"`Issue #17400 <https://bugs.python.org/17400>`__: New 'is_global' attribute "
"for ipaddress to tell if an address is allocated by IANA for global or "
"private networks."
msgstr ""
"`Issue #17400 <https://bugs.python.org/17400>`__: New 'is_global' attribute "
"for ipaddress to tell if an address is allocated by IANA for global or "
"private networks."

#: ../../../Misc/NEWS:7781
msgid ""
"`Issue #19350 <https://bugs.python.org/19350>`__: Increasing the test "
"coverage of macurl2path. Patch by Colin Williams."
msgstr ""
"`Issue #19350 <https://bugs.python.org/19350>`__: Increasing the test "
"coverage of macurl2path. Patch by Colin Williams."

#: ../../../Misc/NEWS:7784
msgid ""
"`Issue #19365 <https://bugs.python.org/19365>`__: Optimized the parsing of "
"long replacement string in re.sub*() functions."
msgstr ""
"`Issue #19365 <https://bugs.python.org/19365>`__: Optimized the parsing of "
"long replacement string in re.sub*() functions."

#: ../../../Misc/NEWS:7787
msgid ""
"`Issue #19352 <https://bugs.python.org/19352>`__: Fix unittest discovery "
"when a module can be reached through several paths (e.g. under Debian/Ubuntu "
"with virtualenv)."
msgstr ""
"`Issue #19352 <https://bugs.python.org/19352>`__: Fix unittest discovery "
"when a module can be reached through several paths (e.g. under Debian/Ubuntu "
"with virtualenv)."

#: ../../../Misc/NEWS:7790
msgid ""
"`Issue #15207 <https://bugs.python.org/15207>`__: Fix mimetypes to read from "
"correct part of Windows registry Original patch by Dave Chambers"
msgstr ""
"`Issue #15207 <https://bugs.python.org/15207>`__: Fix mimetypes to read from "
"correct part of Windows registry Original patch by Dave Chambers"

#: ../../../Misc/NEWS:7793
msgid ""
"`Issue #16595 <https://bugs.python.org/16595>`__: Add prlimit() to resource "
"module."
msgstr ""
"`Issue #16595 <https://bugs.python.org/16595>`__: Add prlimit() to resource "
"module."

#: ../../../Misc/NEWS:7795
msgid ""
"`Issue #19324 <https://bugs.python.org/19324>`__: Expose Linux-specific "
"constants in resource module."
msgstr ""
"`Issue #19324 <https://bugs.python.org/19324>`__: Expose Linux-specific "
"constants in resource module."

#: ../../../Misc/NEWS:7797
msgid "Load SSL's error strings in hashlib."
msgstr ""

#: ../../../Misc/NEWS:7799
msgid ""
"`Issue #18527 <https://bugs.python.org/18527>`__: Upgrade internal copy of "
"zlib to 1.2.8."
msgstr ""
"`Issue #18527 <https://bugs.python.org/18527>`__: Upgrade internal copy of "
"zlib to 1.2.8."

#: ../../../Misc/NEWS:7801
msgid ""
"`Issue #19274 <https://bugs.python.org/19274>`__: Add a filterfunc parameter "
"to PyZipFile.writepy."
msgstr ""
"`Issue #19274 <https://bugs.python.org/19274>`__: Add a filterfunc parameter "
"to PyZipFile.writepy."

#: ../../../Misc/NEWS:7803
msgid ""
"`Issue #8964 <https://bugs.python.org/8964>`__: fix platform._sys_version to "
"handle IronPython 2.6+. Patch by Martin Matusiak."
msgstr ""
"`Issue #8964 <https://bugs.python.org/8964>`__: fix platform._sys_version to "
"handle IronPython 2.6+. Patch by Martin Matusiak."

#: ../../../Misc/NEWS:7806
msgid ""
"`Issue #19413 <https://bugs.python.org/19413>`__: Restore pre-3.3 reload() "
"semantics of re-finding modules."
msgstr ""
"`Issue #19413 <https://bugs.python.org/19413>`__: Restore pre-3.3 reload() "
"semantics of re-finding modules."

#: ../../../Misc/NEWS:7808
msgid ""
"`Issue #18958 <https://bugs.python.org/18958>`__: Improve error message for "
"json.load(s) while passing a string that starts with a UTF-8 BOM."
msgstr ""
"`Issue #18958 <https://bugs.python.org/18958>`__: Improve error message for "
"json.load(s) while passing a string that starts with a UTF-8 BOM."

#: ../../../Misc/NEWS:7811
msgid ""
"`Issue #19307 <https://bugs.python.org/19307>`__: Improve error message for "
"json.load(s) while passing objects of the wrong type."
msgstr ""
"`Issue #19307 <https://bugs.python.org/19307>`__: Improve error message for "
"json.load(s) while passing objects of the wrong type."

#: ../../../Misc/NEWS:7814
msgid ""
"`Issue #16038 <https://bugs.python.org/16038>`__: CVE-2013-1752: ftplib: "
"Limit amount of data read by limiting the call to readline().  Original "
"patch by Micha≈Ç Jastrzƒôbski and Giampaolo Rodola."
msgstr ""
"`Issue #16038 <https://bugs.python.org/16038>`__: CVE-2013-1752: ftplib: "
"Limit amount of data read by limiting the call to readline().  Original "
"patch by Micha≈Ç Jastrzƒôbski and Giampaolo Rodola."

#: ../../../Misc/NEWS:7818
msgid ""
"`Issue #17087 <https://bugs.python.org/17087>`__: Improved the repr for "
"regular expression match objects."
msgstr ""
"`Issue #17087 <https://bugs.python.org/17087>`__: Improved the repr for "
"regular expression match objects."

#: ../../../Misc/NEWS:7823
msgid ""
"`Issue #19664 <https://bugs.python.org/19664>`__: test_userdict's repr test "
"no longer depends on the order of dict elements."
msgstr ""
"`Issue #19664 <https://bugs.python.org/19664>`__: test_userdict's repr test "
"no longer depends on the order of dict elements."

#: ../../../Misc/NEWS:7826
msgid ""
"`Issue #19440 <https://bugs.python.org/19440>`__: Clean up test_capi by "
"removing an unnecessary __future__ import, converting from test_main to "
"unittest.main, and running the _testcapi module tests as subTests of a "
"unittest TestCase method."
msgstr ""
"`Issue #19440 <https://bugs.python.org/19440>`__: Clean up test_capi by "
"removing an unnecessary __future__ import, converting from test_main to "
"unittest.main, and running the _testcapi module tests as subTests of a "
"unittest TestCase method."

#: ../../../Misc/NEWS:7830
msgid ""
"`Issue #19378 <https://bugs.python.org/19378>`__: the main dis module tests "
"are now run with both stdout redirection *and* passing an explicit file "
"parameter"
msgstr ""
"`Issue #19378 <https://bugs.python.org/19378>`__: the main dis module tests "
"are now run with both stdout redirection *and* passing an explicit file "
"parameter"

#: ../../../Misc/NEWS:7833
msgid ""
"`Issue #19378 <https://bugs.python.org/19378>`__: removed the not-actually-"
"helpful assertInstructionMatches and assertBytecodeExactlyMatches helpers "
"from bytecode_helper"
msgstr ""
"`Issue #19378 <https://bugs.python.org/19378>`__: removed the not-actually-"
"helpful assertInstructionMatches and assertBytecodeExactlyMatches helpers "
"from bytecode_helper"

#: ../../../Misc/NEWS:7836
msgid ""
"`Issue #18702 <https://bugs.python.org/18702>`__: All skipped tests now "
"reported as skipped."
msgstr ""
"`Issue #18702 <https://bugs.python.org/18702>`__: All skipped tests now "
"reported as skipped."

#: ../../../Misc/NEWS:7838
msgid ""
"`Issue #19439 <https://bugs.python.org/19439>`__: interpreter embedding "
"tests are now executed on Windows (Patch by Zachary Ware)"
msgstr ""
"`Issue #19439 <https://bugs.python.org/19439>`__: interpreter embedding "
"tests are now executed on Windows (Patch by Zachary Ware)"

#: ../../../Misc/NEWS:7841
msgid ""
"`Issue #19085 <https://bugs.python.org/19085>`__: Added basic tests for all "
"tkinter widget options."
msgstr ""
"`Issue #19085 <https://bugs.python.org/19085>`__: Added basic tests for all "
"tkinter widget options."

#: ../../../Misc/NEWS:7843
msgid ""
"`Issue #19384 <https://bugs.python.org/19384>`__: Fix test_py_compile for "
"root user, patch by Claudiu Popa."
msgstr ""
"`Issue #19384 <https://bugs.python.org/19384>`__: Fix test_py_compile for "
"root user, patch by Claudiu Popa."

#: ../../../Misc/NEWS:7848
msgid ""
"`Issue #18326 <https://bugs.python.org/18326>`__: Clarify that list.sort's "
"arguments are keyword-only.  Also, attempt to reduce confusion in the "
"glossary by not saying there are different \"types\" of arguments and "
"parameters."
msgstr ""
"`Issue #18326 <https://bugs.python.org/18326>`__: Clarify that list.sort's "
"arguments are keyword-only.  Also, attempt to reduce confusion in the "
"glossary by not saying there are different \"types\" of arguments and "
"parameters."

#: ../../../Misc/NEWS:7855
msgid ""
"`Issue #19358 <https://bugs.python.org/19358>`__: \"make clinic\" now runs "
"the Argument Clinic preprocessor over all CPython source files."
msgstr ""
"`Issue #19358 <https://bugs.python.org/19358>`__: \"make clinic\" now runs "
"the Argument Clinic preprocessor over all CPython source files."

#: ../../../Misc/NEWS:7858
msgid "Update SQLite to 3.8.1, xz to 5.0.5, and Tcl/Tk to 8.6.1 on Windows."
msgstr ""

#: ../../../Misc/NEWS:7860
msgid ""
"`Issue #16632 <https://bugs.python.org/16632>`__: Enable DEP and ASLR on "
"Windows."
msgstr ""
"`Issue #16632 <https://bugs.python.org/16632>`__: Enable DEP and ASLR on "
"Windows."

#: ../../../Misc/NEWS:7862
msgid ""
"`Issue #17791 <https://bugs.python.org/17791>`__: Drop PREFIX and "
"EXEC_PREFIX definitions from PC/pyconfig.h"
msgstr ""
"`Issue #17791 <https://bugs.python.org/17791>`__: Drop PREFIX and "
"EXEC_PREFIX definitions from PC/pyconfig.h"

#: ../../../Misc/NEWS:7864
msgid ""
"Add workaround for VS 2010 nmake clean issue. VS 2010 doesn't set up PATH "
"for nmake.exe correctly."
msgstr ""

#: ../../../Misc/NEWS:7867
msgid ""
"`Issue #19550 <https://bugs.python.org/19550>`__: Implement Windows "
"installer changes of PEP 453 (ensurepip)."
msgstr ""
"`Issue #19550 <https://bugs.python.org/19550>`__: Implement Windows "
"installer changes of PEP 453 (ensurepip)."

#: ../../../Misc/NEWS:7869
msgid ""
"`Issue #19520 <https://bugs.python.org/19520>`__: Fix compiler warning in "
"the _sha3 module on 32bit Windows."
msgstr ""
"`Issue #19520 <https://bugs.python.org/19520>`__: Fix compiler warning in "
"the _sha3 module on 32bit Windows."

#: ../../../Misc/NEWS:7871
msgid ""
"`Issue #19356 <https://bugs.python.org/19356>`__: Avoid using a C variabled "
"named \"_self\", it's a reserved word in some C compilers."
msgstr ""
"`Issue #19356 <https://bugs.python.org/19356>`__: Avoid using a C variabled "
"named \"_self\", it's a reserved word in some C compilers."

#: ../../../Misc/NEWS:7874
msgid ""
"`Issue #15792 <https://bugs.python.org/15792>`__: Correct build options on "
"Win64. Patch by Jeremy Kloth."
msgstr ""
"`Issue #15792 <https://bugs.python.org/15792>`__: Correct build options on "
"Win64. Patch by Jeremy Kloth."

#: ../../../Misc/NEWS:7876
msgid ""
"`Issue #19373 <https://bugs.python.org/19373>`__: Apply upstream change to "
"Tk 8.5.15 fixing OS X 10.9 screen refresh problem for OS X installer build."
msgstr ""
"`Issue #19373 <https://bugs.python.org/19373>`__: Apply upstream change to "
"Tk 8.5.15 fixing OS X 10.9 screen refresh problem for OS X installer build."

#: ../../../Misc/NEWS:7879
msgid ""
"`Issue #19649 <https://bugs.python.org/19649>`__: On OS X, the same set of "
"file names are now installed in bin directories for all configurations: non-"
"framework vs framework, and single arch vs universal builds.  pythonx.y-32 "
"is now always installed for 64-bit/32-bit universal builds.  The obsolete "
"and undocumented pythonw* symlinks are no longer installed anywhere."
msgstr ""
"`Issue #19649 <https://bugs.python.org/19649>`__: On OS X, the same set of "
"file names are now installed in bin directories for all configurations: non-"
"framework vs framework, and single arch vs universal builds.  pythonx.y-32 "
"is now always installed for 64-bit/32-bit universal builds.  The obsolete "
"and undocumented pythonw* symlinks are no longer installed anywhere."

#: ../../../Misc/NEWS:7885
msgid ""
"`Issue #19553 <https://bugs.python.org/19553>`__: PEP 453 - \"make install\" "
"and \"make altinstall\" now install or upgrade pip by default, using the "
"bundled pip provided by the new ensurepip module.  A new configure option, --"
"with-ensurepip[=upgrade|install|no], is available to override the default "
"ensurepip \"--upgrade\" option.  The option can also be set with \"make "
"[alt]install ENSUREPIP=[upgrade|install|no]\"."
msgstr ""
"`Issue #19553 <https://bugs.python.org/19553>`__: PEP 453 - \"make install\" "
"and \"make altinstall\" now install or upgrade pip by default, using the "
"bundled pip provided by the new ensurepip module.  A new configure option, --"
"with-ensurepip[=upgrade|install|no], is available to override the default "
"ensurepip \"--upgrade\" option.  The option can also be set with \"make "
"[alt]install ENSUREPIP=[upgrade|install|no]\"."

#: ../../../Misc/NEWS:7891
msgid ""
"`Issue #19551 <https://bugs.python.org/19551>`__: PEP 453 - the OS X "
"installer now installs pip by default."
msgstr ""
"`Issue #19551 <https://bugs.python.org/19551>`__: PEP 453 - the OS X "
"installer now installs pip by default."

#: ../../../Misc/NEWS:7893
msgid ""
"Update third-party libraries for OS X installers: xz 5.0.3 -> 5.0.5, SQLite "
"3.7.13 -> 3.8.1"
msgstr ""

#: ../../../Misc/NEWS:7896
msgid ""
"`Issue #15663 <https://bugs.python.org/15663>`__: Revert OS X installer "
"built-in Tcl/Tk support for 3.4.0b1. Some third-party projects, such as "
"Matplotlib and PIL/Pillow, depended on being able to build with Tcl and Tk "
"frameworks in /Library/Frameworks."
msgstr ""
"`Issue #15663 <https://bugs.python.org/15663>`__: Revert OS X installer "
"built-in Tcl/Tk support for 3.4.0b1. Some third-party projects, such as "
"Matplotlib and PIL/Pillow, depended on being able to build with Tcl and Tk "
"frameworks in /Library/Frameworks."

#: ../../../Misc/NEWS:7904
msgid ""
"`Issue #19730 <https://bugs.python.org/19730>`__: Argument Clinic now "
"supports all the existing PyArg \"format units\" as legacy converters, as "
"well as two new features: \"self converters\" and the \"version\" directive."
msgstr ""
"`Issue #19730 <https://bugs.python.org/19730>`__: Argument Clinic now "
"supports all the existing PyArg \"format units\" as legacy converters, as "
"well as two new features: \"self converters\" and the \"version\" directive."

#: ../../../Misc/NEWS:7908
msgid ""
"`Issue #19552 <https://bugs.python.org/19552>`__: pyvenv now bootstraps pip "
"into virtual environments by default (pass --without-pip to request the old "
"behaviour)"
msgstr ""
"`Issue #19552 <https://bugs.python.org/19552>`__: pyvenv now bootstraps pip "
"into virtual environments by default (pass --without-pip to request the old "
"behaviour)"

#: ../../../Misc/NEWS:7911
msgid ""
"`Issue #19390 <https://bugs.python.org/19390>`__: Argument Clinic no longer "
"accepts malformed Python and C ids."
msgstr ""
"`Issue #19390 <https://bugs.python.org/19390>`__: Argument Clinic no longer "
"accepts malformed Python and C ids."

#: ../../../Misc/NEWS:7916
msgid "Python 3.4.0 Alpha 4"
msgstr "Python 3.4.0 Alpha 4"

#: ../../../Misc/NEWS:7918
msgid "Release date: 2013-10-20"
msgstr "Date de sortie¬†: 2013-10-20"

#: ../../../Misc/NEWS:7923
msgid ""
"`Issue #19301 <https://bugs.python.org/19301>`__: Give classes and functions "
"that are explicitly marked global a global qualname."
msgstr ""
"`Issue #19301 <https://bugs.python.org/19301>`__: Give classes and functions "
"that are explicitly marked global a global qualname."

#: ../../../Misc/NEWS:7926
msgid ""
"`Issue #19279 <https://bugs.python.org/19279>`__: UTF-7 decoder no longer "
"produces illegal strings."
msgstr ""
"`Issue #19279 <https://bugs.python.org/19279>`__: UTF-7 decoder no longer "
"produces illegal strings."

#: ../../../Misc/NEWS:7928
msgid ""
"`Issue #16612 <https://bugs.python.org/16612>`__: Add \"Argument Clinic\", a "
"compile-time preprocessor for C files to generate argument parsing code.  "
"(See PEP 436.)"
msgstr ""
"`Issue #16612 <https://bugs.python.org/16612>`__: Add \"Argument Clinic\", a "
"compile-time preprocessor for C files to generate argument parsing code.  "
"(See PEP 436.)"

#: ../../../Misc/NEWS:7931
msgid ""
"`Issue #18810 <https://bugs.python.org/18810>`__: Shift stat calls in "
"importlib.machinery.FileFinder such that the code is optimistic that if "
"something exists in a directory named exactly like the possible package "
"being searched for that it's in actuality a directory."
msgstr ""
"`Issue #18810 <https://bugs.python.org/18810>`__: Shift stat calls in "
"importlib.machinery.FileFinder such that the code is optimistic that if "
"something exists in a directory named exactly like the possible package "
"being searched for that it's in actuality a directory."

#: ../../../Misc/NEWS:7936
msgid ""
"`Issue #18416 <https://bugs.python.org/18416>`__: importlib.machinery."
"PathFinder now treats '' as the cwd and importlib.machinery.FileFinder no "
"longer special-cases '' to '.'. This leads to modules imported from cwd to "
"now possess an absolute file path for __file__ (this does not affect modules "
"specified by path on the CLI but it does affect -m/runpy). It also allows "
"FileFinder to be more consistent by not having an edge case."
msgstr ""
"`Issue #18416 <https://bugs.python.org/18416>`__: importlib.machinery."
"PathFinder now treats '' as the cwd and importlib.machinery.FileFinder no "
"longer special-cases '' to '.'. This leads to modules imported from cwd to "
"now possess an absolute file path for __file__ (this does not affect modules "
"specified by path on the CLI but it does affect -m/runpy). It also allows "
"FileFinder to be more consistent by not having an edge case."

#: ../../../Misc/NEWS:7943
msgid ""
"`Issue #4555 <https://bugs.python.org/4555>`__: All exported C symbols are "
"now prefixed with either \"Py\" or \"_Py\"."
msgstr ""
"`Issue #4555 <https://bugs.python.org/4555>`__: All exported C symbols are "
"now prefixed with either \"Py\" or \"_Py\"."

#: ../../../Misc/NEWS:7946
msgid ""
"`Issue #19219 <https://bugs.python.org/19219>`__: Speed up marshal.loads(), "
"and make pyc files slightly (5% to 10%) smaller."
msgstr ""
"`Issue #19219 <https://bugs.python.org/19219>`__: Speed up marshal.loads(), "
"and make pyc files slightly (5% to 10%) smaller."

#: ../../../Misc/NEWS:7949
msgid ""
"`Issue #19221 <https://bugs.python.org/19221>`__: Upgrade Unicode database "
"to version 6.3.0."
msgstr ""
"`Issue #19221 <https://bugs.python.org/19221>`__: Upgrade Unicode database "
"to version 6.3.0."

#: ../../../Misc/NEWS:7951
msgid ""
"`Issue #16742 <https://bugs.python.org/16742>`__: The result of the C "
"callback PyOS_ReadlineFunctionPointer must now be a string allocated by "
"PyMem_RawMalloc() or PyMem_RawRealloc() (or NULL if an error occurred), "
"instead of a string allocated by PyMem_Malloc() or PyMem_Realloc()."
msgstr ""
"`Issue #16742 <https://bugs.python.org/16742>`__: The result of the C "
"callback PyOS_ReadlineFunctionPointer must now be a string allocated by "
"PyMem_RawMalloc() or PyMem_RawRealloc() (or NULL if an error occurred), "
"instead of a string allocated by PyMem_Malloc() or PyMem_Realloc()."

#: ../../../Misc/NEWS:7956
msgid ""
"`Issue #19199 <https://bugs.python.org/19199>`__: Remove ``PyThreadState."
"tick_counter`` field"
msgstr ""
"`Issue #19199 <https://bugs.python.org/19199>`__: Remove ``PyThreadState."
"tick_counter`` field"

#: ../../../Misc/NEWS:7958
msgid ""
"Fix macro expansion of _PyErr_OCCURRED(), and make sure to use it in at "
"least one place so as to avoid regressions."
msgstr ""

#: ../../../Misc/NEWS:7961
msgid ""
"`Issue #19087 <https://bugs.python.org/19087>`__: Improve bytearray "
"allocation in order to allow cheap popping of data at the front (slice "
"deletion)."
msgstr ""
"`Issue #19087 <https://bugs.python.org/19087>`__: Improve bytearray "
"allocation in order to allow cheap popping of data at the front (slice "
"deletion)."

#: ../../../Misc/NEWS:7964
msgid ""
"`Issue #19014 <https://bugs.python.org/19014>`__: memoryview.cast() is now "
"allowed on zero-length views."
msgstr ""
"`Issue #19014 <https://bugs.python.org/19014>`__: memoryview.cast() is now "
"allowed on zero-length views."

#: ../../../Misc/NEWS:7966
msgid ""
"`Issue #18690 <https://bugs.python.org/18690>`__: memoryview is now "
"automatically registered with collections.abc.Sequence"
msgstr ""
"`Issue #18690 <https://bugs.python.org/18690>`__: memoryview is now "
"automatically registered with collections.abc.Sequence"

#: ../../../Misc/NEWS:7969
msgid ""
"`Issue #19078 <https://bugs.python.org/19078>`__: memoryview now correctly "
"supports the reversed builtin (Patch by Claudiu Popa)"
msgstr ""
"`Issue #19078 <https://bugs.python.org/19078>`__: memoryview now correctly "
"supports the reversed builtin (Patch by Claudiu Popa)"

#: ../../../Misc/NEWS:7975
msgid ""
"`Issue #17457 <https://bugs.python.org/17457>`__: unittest test discovery "
"now works with namespace packages. Patch by Claudiu Popa."
msgstr ""
"`Issue #17457 <https://bugs.python.org/17457>`__: unittest test discovery "
"now works with namespace packages. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:7978
msgid ""
"`Issue #18235 <https://bugs.python.org/18235>`__: Fix the sysconfig "
"variables LDSHARED and BLDSHARED under AIX. Patch by David Edelsohn."
msgstr ""
"`Issue #18235 <https://bugs.python.org/18235>`__: Fix the sysconfig "
"variables LDSHARED and BLDSHARED under AIX. Patch by David Edelsohn."

#: ../../../Misc/NEWS:7981
msgid ""
"`Issue #18606 <https://bugs.python.org/18606>`__: Add the new \"statistics\" "
"module (PEP 450).  Contributed by Steven D'Aprano."
msgstr ""
"`Issue #18606 <https://bugs.python.org/18606>`__: Add the new \"statistics\" "
"module (PEP 450).  Contributed by Steven D'Aprano."

#: ../../../Misc/NEWS:7984
msgid ""
"`Issue #12866 <https://bugs.python.org/12866>`__: The audioop module now "
"supports 24-bit samples."
msgstr ""
"`Issue #12866 <https://bugs.python.org/12866>`__: The audioop module now "
"supports 24-bit samples."

#: ../../../Misc/NEWS:7986
msgid ""
"`Issue #19254 <https://bugs.python.org/19254>`__: Provide an optimized "
"Python implementation of pbkdf2_hmac."
msgstr ""
"`Issue #19254 <https://bugs.python.org/19254>`__: Provide an optimized "
"Python implementation of pbkdf2_hmac."

#: ../../../Misc/NEWS:7988
msgid ""
"Issues #19201, `Issue #19222 <https://bugs.python.org/19222>`__, `Issue "
"#19223 <https://bugs.python.org/19223>`__: Add \"x\" mode (exclusive "
"creation) in opening file to bz2, gzip and lzma modules. Patches by Tim "
"Heaney and Vajrasky Kok."
msgstr ""

#: ../../../Misc/NEWS:7992
msgid "Fix a reference count leak in _sre."
msgstr ""

#: ../../../Misc/NEWS:7994
msgid ""
"`Issue #19262 <https://bugs.python.org/19262>`__: Initial check in of the "
"'asyncio' package (a.k.a. Tulip, a.k.a. PEP 3156).  There are no docs yet, "
"and the PEP is slightly out of date with the code.  This module will have "
"*provisional* status in Python 3.4."
msgstr ""
"`Issue #19262 <https://bugs.python.org/19262>`__: Initial check in of the "
"'asyncio' package (a.k.a. Tulip, a.k.a. PEP 3156).  There are no docs yet, "
"and the PEP is slightly out of date with the code.  This module will have "
"*provisional* status in Python 3.4."

#: ../../../Misc/NEWS:7999
msgid ""
"`Issue #19276 <https://bugs.python.org/19276>`__: Fixed the wave module on "
"64-bit big-endian platforms."
msgstr ""
"`Issue #19276 <https://bugs.python.org/19276>`__: Fixed the wave module on "
"64-bit big-endian platforms."

#: ../../../Misc/NEWS:8001
msgid ""
"`Issue #19266 <https://bugs.python.org/19266>`__: Rename the new-in-3.4 "
"``contextlib.ignore`` context manager to ``contextlib.suppress`` in order to "
"be more consistent with existing descriptions of that operation elsewhere in "
"the language and standard library documentation (Patch by Zero Piraeus)."
msgstr ""
"`Issue #19266 <https://bugs.python.org/19266>`__: Rename the new-in-3.4 "
"``contextlib.ignore`` context manager to ``contextlib.suppress`` in order to "
"be more consistent with existing descriptions of that operation elsewhere in "
"the language and standard library documentation (Patch by Zero Piraeus)."

#: ../../../Misc/NEWS:8006
msgid ""
"`Issue #18891 <https://bugs.python.org/18891>`__: Completed the new email "
"package (provisional) API additions by adding new classes EmailMessage, "
"MIMEPart, and ContentManager."
msgstr ""
"`Issue #18891 <https://bugs.python.org/18891>`__: Completed the new email "
"package (provisional) API additions by adding new classes EmailMessage, "
"MIMEPart, and ContentManager."

#: ../../../Misc/NEWS:8009
msgid ""
"`Issue #18281 <https://bugs.python.org/18281>`__: Unused stat constants "
"removed from `tarfile`."
msgstr ""
"`Issue #18281 <https://bugs.python.org/18281>`__: Unused stat constants "
"removed from `tarfile`."

#: ../../../Misc/NEWS:8011
msgid ""
"`Issue #18999 <https://bugs.python.org/18999>`__: Multiprocessing now "
"supports 'contexts' with the same API as the module, but bound to specified "
"start methods."
msgstr ""
"`Issue #18999 <https://bugs.python.org/18999>`__: Multiprocessing now "
"supports 'contexts' with the same API as the module, but bound to specified "
"start methods."

#: ../../../Misc/NEWS:8014
msgid ""
"`Issue #18468 <https://bugs.python.org/18468>`__: The re.split, re.findall, "
"and re.sub functions and the group() and groups() methods of match object "
"now always return a string or a bytes object."
msgstr ""
"`Issue #18468 <https://bugs.python.org/18468>`__: The re.split, re.findall, "
"and re.sub functions and the group() and groups() methods of match object "
"now always return a string or a bytes object."

#: ../../../Misc/NEWS:8018
msgid ""
"`Issue #18725 <https://bugs.python.org/18725>`__: The textwrap module now "
"supports truncating multiline text."
msgstr ""
"`Issue #18725 <https://bugs.python.org/18725>`__: The textwrap module now "
"supports truncating multiline text."

#: ../../../Misc/NEWS:8020
msgid ""
"`Issue #18776 <https://bugs.python.org/18776>`__: atexit callbacks now "
"display their full traceback when they raise an exception."
msgstr ""
"`Issue #18776 <https://bugs.python.org/18776>`__: atexit callbacks now "
"display their full traceback when they raise an exception."

#: ../../../Misc/NEWS:8023
msgid ""
"`Issue #17827 <https://bugs.python.org/17827>`__: Add the missing "
"documentation for ``codecs.encode`` and ``codecs.decode``."
msgstr ""
"`Issue #17827 <https://bugs.python.org/17827>`__: Add the missing "
"documentation for ``codecs.encode`` and ``codecs.decode``."

#: ../../../Misc/NEWS:8026
msgid ""
"`Issue #19218 <https://bugs.python.org/19218>`__: Rename collections.abc to "
"_collections_abc in order to speed up interpreter start."
msgstr ""
"`Issue #19218 <https://bugs.python.org/19218>`__: Rename collections.abc to "
"_collections_abc in order to speed up interpreter start."

#: ../../../Misc/NEWS:8029
msgid ""
"`Issue #18582 <https://bugs.python.org/18582>`__: Add 'pbkdf2_hmac' to the "
"hashlib module. It implements PKCS#5 password-based key derivation functions "
"with HMAC as pseudorandom function."
msgstr ""
"`Issue #18582 <https://bugs.python.org/18582>`__: Add 'pbkdf2_hmac' to the "
"hashlib module. It implements PKCS#5 password-based key derivation functions "
"with HMAC as pseudorandom function."

#: ../../../Misc/NEWS:8032
msgid ""
"`Issue #19131 <https://bugs.python.org/19131>`__: The aifc module now "
"correctly reads and writes sampwidth of compressed streams."
msgstr ""
"`Issue #19131 <https://bugs.python.org/19131>`__: The aifc module now "
"correctly reads and writes sampwidth of compressed streams."

#: ../../../Misc/NEWS:8035
msgid ""
"`Issue #19209 <https://bugs.python.org/19209>`__: Remove import of copyreg "
"from the os module to speed up interpreter startup. stat_result and "
"statvfs_result are now hard-coded to reside in the os module."
msgstr ""
"`Issue #19209 <https://bugs.python.org/19209>`__: Remove import of copyreg "
"from the os module to speed up interpreter startup. stat_result and "
"statvfs_result are now hard-coded to reside in the os module."

#: ../../../Misc/NEWS:8039
msgid ""
"`Issue #19205 <https://bugs.python.org/19205>`__: Don't import the 're' "
"module in site and sysconfig module to speed up interpreter start."
msgstr ""
"`Issue #19205 <https://bugs.python.org/19205>`__: Don't import the 're' "
"module in site and sysconfig module to speed up interpreter start."

#: ../../../Misc/NEWS:8042
msgid ""
"`Issue #9548 <https://bugs.python.org/9548>`__: Add a minimal \"_bootlocale"
"\" module that is imported by the _io module instead of the full locale "
"module."
msgstr ""
"`Issue #9548 <https://bugs.python.org/9548>`__: Add a minimal \"_bootlocale"
"\" module that is imported by the _io module instead of the full locale "
"module."

#: ../../../Misc/NEWS:8045
msgid ""
"`Issue #18764 <https://bugs.python.org/18764>`__: Remove the 'print' alias "
"for the PDB 'p' command so that it no longer shadows the print function."
msgstr ""
"`Issue #18764 <https://bugs.python.org/18764>`__: Remove the 'print' alias "
"for the PDB 'p' command so that it no longer shadows the print function."

#: ../../../Misc/NEWS:8048
msgid ""
"`Issue #19158 <https://bugs.python.org/19158>`__: A rare race in "
"BoundedSemaphore could allow .release() too often."
msgstr ""
"`Issue #19158 <https://bugs.python.org/19158>`__: A rare race in "
"BoundedSemaphore could allow .release() too often."

#: ../../../Misc/NEWS:8051
msgid ""
"`Issue #15805 <https://bugs.python.org/15805>`__: Add contextlib."
"redirect_stdout()."
msgstr ""
"`Issue #15805 <https://bugs.python.org/15805>`__: Add contextlib."
"redirect_stdout()."

#: ../../../Misc/NEWS:8053
msgid ""
"`Issue #18716 <https://bugs.python.org/18716>`__: Deprecate the formatter "
"module."
msgstr ""
"`Issue #18716 <https://bugs.python.org/18716>`__: Deprecate the formatter "
"module."

#: ../../../Misc/NEWS:8055
msgid ""
"`Issue #10712 <https://bugs.python.org/10712>`__: 2to3 has a new \"asserts\" "
"fixer that replaces deprecated names of unittest methods (e.g. "
"failUnlessEqual -> assertEqual)."
msgstr ""
"`Issue #10712 <https://bugs.python.org/10712>`__: 2to3 has a new \"asserts\" "
"fixer that replaces deprecated names of unittest methods (e.g. "
"failUnlessEqual -> assertEqual)."

#: ../../../Misc/NEWS:8058
msgid ""
"`Issue #18037 <https://bugs.python.org/18037>`__: 2to3 now escapes ``'\\u'`` "
"and ``'\\U'`` in native strings."
msgstr ""
"`Issue #18037 <https://bugs.python.org/18037>`__: 2to3 now escapes ``'\\u'`` "
"and ``'\\U'`` in native strings."

#: ../../../Misc/NEWS:8060
msgid ""
"`Issue #17839 <https://bugs.python.org/17839>`__: base64.decodebytes and "
"base64.encodebytes now accept any object that exports a 1 dimensional array "
"of bytes (this means the same is now also true for base64_codec)"
msgstr ""
"`Issue #17839 <https://bugs.python.org/17839>`__: base64.decodebytes and "
"base64.encodebytes now accept any object that exports a 1 dimensional array "
"of bytes (this means the same is now also true for base64_codec)"

#: ../../../Misc/NEWS:8064
msgid ""
"`Issue #19132 <https://bugs.python.org/19132>`__: The pprint module now "
"supports compact mode."
msgstr ""
"`Issue #19132 <https://bugs.python.org/19132>`__: The pprint module now "
"supports compact mode."

#: ../../../Misc/NEWS:8066
msgid ""
"`Issue #19137 <https://bugs.python.org/19137>`__: The pprint module now "
"correctly formats instances of set and frozenset subclasses."
msgstr ""
"`Issue #19137 <https://bugs.python.org/19137>`__: The pprint module now "
"correctly formats instances of set and frozenset subclasses."

#: ../../../Misc/NEWS:8069
msgid ""
"`Issue #10042 <https://bugs.python.org/10042>`__: functools.total_ordering "
"now correctly handles NotImplemented being returned by the underlying "
"comparison function (Patch by Katie Miller)"
msgstr ""
"`Issue #10042 <https://bugs.python.org/10042>`__: functools.total_ordering "
"now correctly handles NotImplemented being returned by the underlying "
"comparison function (Patch by Katie Miller)"

#: ../../../Misc/NEWS:8073
msgid ""
"`Issue #19092 <https://bugs.python.org/19092>`__: contextlib.ExitStack now "
"correctly reraises exceptions from the __exit__ callbacks of inner context "
"managers (Patch by Hrvoje Nik≈°iƒá)"
msgstr ""
"`Issue #19092 <https://bugs.python.org/19092>`__: contextlib.ExitStack now "
"correctly reraises exceptions from the __exit__ callbacks of inner context "
"managers (Patch by Hrvoje Nik≈°iƒá)"

#: ../../../Misc/NEWS:8077
msgid ""
"`Issue #12641 <https://bugs.python.org/12641>`__: Avoid passing \"-mno-cygwin"
"\" to the mingw32 compiler, except when necessary.  Patch by Oscar Benjamin."
msgstr ""
"`Issue #12641 <https://bugs.python.org/12641>`__: Avoid passing \"-mno-cygwin"
"\" to the mingw32 compiler, except when necessary.  Patch by Oscar Benjamin."

#: ../../../Misc/NEWS:8080
msgid ""
"`Issue #5845 <https://bugs.python.org/5845>`__: In site.py, only load "
"readline history from ~/.python_history if no history has been read "
"already.  This avoids double writes to the history file at shutdown."
msgstr ""
"`Issue #5845 <https://bugs.python.org/5845>`__: In site.py, only load "
"readline history from ~/.python_history if no history has been read "
"already.  This avoids double writes to the history file at shutdown."

#: ../../../Misc/NEWS:8084
msgid "Properly initialize all fields of a SSL object after allocation."
msgstr ""

#: ../../../Misc/NEWS:8086
msgid ""
"`Issue #19095 <https://bugs.python.org/19095>`__: SSLSocket.getpeercert() "
"now raises ValueError when the SSL handshake hasn't been done."
msgstr ""
"`Issue #19095 <https://bugs.python.org/19095>`__: SSLSocket.getpeercert() "
"now raises ValueError when the SSL handshake hasn't been done."

#: ../../../Misc/NEWS:8089
msgid ""
"`Issue #4366 <https://bugs.python.org/4366>`__: Fix building extensions on "
"all platforms when --enable-shared is used."
msgstr ""
"`Issue #4366 <https://bugs.python.org/4366>`__: Fix building extensions on "
"all platforms when --enable-shared is used."

#: ../../../Misc/NEWS:8092
msgid ""
"`Issue #19030 <https://bugs.python.org/19030>`__: Fixed `inspect.getmembers` "
"and `inspect.classify_class_attrs` to attempt activating descriptors before "
"falling back to a __dict__ search for faulty descriptors.  `inspect."
"classify_class_attrs` no longer returns Attributes whose home class is None."
msgstr ""
"`Issue #19030 <https://bugs.python.org/19030>`__: Fixed `inspect.getmembers` "
"and `inspect.classify_class_attrs` to attempt activating descriptors before "
"falling back to a __dict__ search for faulty descriptors.  `inspect."
"classify_class_attrs` no longer returns Attributes whose home class is None."

#: ../../../Misc/NEWS:8100
msgid ""
"`Issue #1772673 <https://bugs.python.org/1772673>`__: The type of `char*` "
"arguments now changed to `const char*`."
msgstr ""
"`Issue #1772673 <https://bugs.python.org/1772673>`__: The type of `char*` "
"arguments now changed to `const char*`."

#: ../../../Misc/NEWS:8102
msgid ""
"`Issue #16129 <https://bugs.python.org/16129>`__: Added a "
"`Py_SetStandardStreamEncoding` pre-initialization API to allow embedding "
"applications like Blender to force a particular encoding and error handler "
"for the standard IO streams (initial patch by Bastien Montagne)"
msgstr ""
"`Issue #16129 <https://bugs.python.org/16129>`__: Added a "
"`Py_SetStandardStreamEncoding` pre-initialization API to allow embedding "
"applications like Blender to force a particular encoding and error handler "
"for the standard IO streams (initial patch by Bastien Montagne)"

#: ../../../Misc/NEWS:8110
msgid ""
"`Issue #19275 <https://bugs.python.org/19275>`__: Fix test_site on AMD64 "
"Snow Leopard"
msgstr ""
"`Issue #19275 <https://bugs.python.org/19275>`__: Fix test_site on AMD64 "
"Snow Leopard"

#: ../../../Misc/NEWS:8112
msgid ""
"`Issue #14407 <https://bugs.python.org/14407>`__: Fix unittest test "
"discovery in test_concurrent_futures."
msgstr ""
"`Issue #14407 <https://bugs.python.org/14407>`__: Fix unittest test "
"discovery in test_concurrent_futures."

#: ../../../Misc/NEWS:8114
msgid ""
"`Issue #18919 <https://bugs.python.org/18919>`__: Unified and extended tests "
"for audio modules: aifc, sunau and wave."
msgstr ""
"`Issue #18919 <https://bugs.python.org/18919>`__: Unified and extended tests "
"for audio modules: aifc, sunau and wave."

#: ../../../Misc/NEWS:8117
msgid ""
"`Issue #18714 <https://bugs.python.org/18714>`__: Added tests for ``pdb."
"find_function()``."
msgstr ""
"`Issue #18714 <https://bugs.python.org/18714>`__: Added tests for ``pdb."
"find_function()``."

#: ../../../Misc/NEWS:8122
msgid ""
"`Issue #18758 <https://bugs.python.org/18758>`__: Fixed and improved cross-"
"references."
msgstr ""
"`Issue #18758 <https://bugs.python.org/18758>`__: Fixed and improved cross-"
"references."

#: ../../../Misc/NEWS:8124
msgid ""
"`Issue #18972 <https://bugs.python.org/18972>`__: Modernize email examples "
"and use the argparse module in them."
msgstr ""
"`Issue #18972 <https://bugs.python.org/18972>`__: Modernize email examples "
"and use the argparse module in them."

#: ../../../Misc/NEWS:8129
msgid ""
"`Issue #19130 <https://bugs.python.org/19130>`__: Correct PCbuild/readme."
"txt, Python 3.3 and 3.4 require VS 2010."
msgstr ""
"`Issue #19130 <https://bugs.python.org/19130>`__: Correct PCbuild/readme."
"txt, Python 3.3 and 3.4 require VS 2010."

#: ../../../Misc/NEWS:8131
msgid ""
"`Issue #15663 <https://bugs.python.org/15663>`__: Update OS X 10.6+ "
"installer to use Tcl/Tk 8.5.15."
msgstr ""
"`Issue #15663 <https://bugs.python.org/15663>`__: Update OS X 10.6+ "
"installer to use Tcl/Tk 8.5.15."

#: ../../../Misc/NEWS:8137
msgid ""
"`Issue #14499 <https://bugs.python.org/14499>`__: Fix several problems with "
"OS X universal build support:"
msgstr ""
"`Issue #14499 <https://bugs.python.org/14499>`__: Fix several problems with "
"OS X universal build support:"

#: ../../../Misc/NEWS:8134
msgid "ppc arch detection for extension module builds broke with Xcode 5"
msgstr ""

#: ../../../Misc/NEWS:8135
msgid "ppc arch detection in configure did not work on OS X 10.4"
msgstr ""

#: ../../../Misc/NEWS:8136
msgid "-sysroot and -arch flags were unnecessarily duplicated"
msgstr ""

#: ../../../Misc/NEWS:8137
msgid "there was no obvious way to configure an intel-32 only build."
msgstr ""

#: ../../../Misc/NEWS:8139
msgid ""
"`Issue #19019 <https://bugs.python.org/19019>`__: Change the OS X installer "
"build script to use CFLAGS instead of OPT for special build options.  By "
"setting OPT, some compiler-specific options like -fwrapv were overridden and "
"thus not used, which could result in broken interpreters when building with "
"clang."
msgstr ""
"`Issue #19019 <https://bugs.python.org/19019>`__: Change the OS X installer "
"build script to use CFLAGS instead of OPT for special build options.  By "
"setting OPT, some compiler-specific options like -fwrapv were overridden and "
"thus not used, which could result in broken interpreters when building with "
"clang."

#: ../../../Misc/NEWS:8146
msgid "Python 3.4.0 Alpha 3"
msgstr "Python 3.4.0 Alpha 3"

#: ../../../Misc/NEWS:8148
msgid "Release date: 2013-09-29"
msgstr "Date de sortie¬†: 29-09-2013"

#: ../../../Misc/NEWS:8153
msgid ""
"`Issue #18818 <https://bugs.python.org/18818>`__: The \"encodingname\" part "
"of PYTHONIOENCODING is now optional."
msgstr ""
"`Issue #18818 <https://bugs.python.org/18818>`__: The \"encodingname\" part "
"of PYTHONIOENCODING is now optional."

#: ../../../Misc/NEWS:8155
msgid ""
"`Issue #19098 <https://bugs.python.org/19098>`__: Prevent overflow in the "
"compiler when the recursion limit is set absurdly high."
msgstr ""
"`Issue #19098 <https://bugs.python.org/19098>`__: Prevent overflow in the "
"compiler when the recursion limit is set absurdly high."

#: ../../../Misc/NEWS:8161
msgid ""
"`Issue #18929 <https://bugs.python.org/18929>`__: `inspect."
"classify_class_attrs()` now correctly finds class attributes returned by "
"`dir()` that are located in the metaclass."
msgstr ""
"`Issue #18929 <https://bugs.python.org/18929>`__: `inspect."
"classify_class_attrs()` now correctly finds class attributes returned by "
"`dir()` that are located in the metaclass."

#: ../../../Misc/NEWS:8164
msgid ""
"`Issue #18950 <https://bugs.python.org/18950>`__: Fix miscellaneous bugs in "
"the sunau module. Au_read.readframes() now updates current file position and "
"reads correct number of frames from multichannel stream.  Au_write."
"writeframesraw() now correctly updates current file position.  Au_read."
"getnframes() now returns an integer (as in Python 2).  Au_read and Au_write "
"now correctly works with file object if start file position is not a zero."
msgstr ""
"`Issue #18950 <https://bugs.python.org/18950>`__: Fix miscellaneous bugs in "
"the sunau module. Au_read.readframes() now updates current file position and "
"reads correct number of frames from multichannel stream.  Au_write."
"writeframesraw() now correctly updates current file position.  Au_read."
"getnframes() now returns an integer (as in Python 2).  Au_read and Au_write "
"now correctly works with file object if start file position is not a zero."

#: ../../../Misc/NEWS:8171
msgid ""
"`Issue #18594 <https://bugs.python.org/18594>`__: The fast path for "
"collections.Counter() was never taken due to an over-restrictive type check."
msgstr ""
"`Issue #18594 <https://bugs.python.org/18594>`__: The fast path for "
"collections.Counter() was never taken due to an over-restrictive type check."

#: ../../../Misc/NEWS:8174
msgid ""
"`Issue #19053 <https://bugs.python.org/19053>`__: ZipExtFile.read1() with "
"non-zero argument no more returns empty bytes until end of data."
msgstr ""
"`Issue #19053 <https://bugs.python.org/19053>`__: ZipExtFile.read1() with "
"non-zero argument no more returns empty bytes until end of data."

#: ../../../Misc/NEWS:8177
msgid ""
"logging: added support for Unix domain sockets to SocketHandler and "
"DatagramHandler."
msgstr ""

#: ../../../Misc/NEWS:8180
msgid ""
"`Issue #18996 <https://bugs.python.org/18996>`__: TestCase.assertEqual() now "
"more cleverly shorten differing strings in error report."
msgstr ""
"`Issue #18996 <https://bugs.python.org/18996>`__: TestCase.assertEqual() now "
"more cleverly shorten differing strings in error report."

#: ../../../Misc/NEWS:8183
msgid ""
"`Issue #19034 <https://bugs.python.org/19034>`__: repr() for tkinter.Tcl_Obj "
"now exposes string reperesentation."
msgstr ""
"`Issue #19034 <https://bugs.python.org/19034>`__: repr() for tkinter.Tcl_Obj "
"now exposes string reperesentation."

#: ../../../Misc/NEWS:8185
msgid ""
"`Issue #18978 <https://bugs.python.org/18978>`__: ``urllib.request.Request`` "
"now allows the method to be indicated on the class and no longer sets it to "
"None in ``__init__``."
msgstr ""
"`Issue #18978 <https://bugs.python.org/18978>`__: ``urllib.request.Request`` "
"now allows the method to be indicated on the class and no longer sets it to "
"None in ``__init__``."

#: ../../../Misc/NEWS:8188
msgid ""
"`Issue #18626 <https://bugs.python.org/18626>`__: the inspect module now "
"offers a basic command line introspection interface (Initial patch by "
"Claudiu Popa)"
msgstr ""
"`Issue #18626 <https://bugs.python.org/18626>`__: the inspect module now "
"offers a basic command line introspection interface (Initial patch by "
"Claudiu Popa)"

#: ../../../Misc/NEWS:8191
msgid ""
"`Issue #3015 <https://bugs.python.org/3015>`__: Fixed tkinter with "
"wantobject=False.  Any Tcl command call returned empty string."
msgstr ""
"`Issue #3015 <https://bugs.python.org/3015>`__: Fixed tkinter with "
"wantobject=False.  Any Tcl command call returned empty string."

#: ../../../Misc/NEWS:8194
msgid ""
"`Issue #19037 <https://bugs.python.org/19037>`__: The mailbox module now "
"makes all changes to maildir files before moving them into place, to avoid "
"race conditions with other programs that may be accessing the maildir "
"directory."
msgstr ""
"`Issue #19037 <https://bugs.python.org/19037>`__: The mailbox module now "
"makes all changes to maildir files before moving them into place, to avoid "
"race conditions with other programs that may be accessing the maildir "
"directory."

#: ../../../Misc/NEWS:8198
msgid ""
"`Issue #14984 <https://bugs.python.org/14984>`__: On POSIX systems, when "
"netrc is called without a filename argument (and therefore is reading the "
"user's $HOME/.netrc file), it now enforces the same security rules as "
"typical ftp clients: the .netrc file must be owned by the user that owns the "
"process and must not be readable by any other user."
msgstr ""
"`Issue #14984 <https://bugs.python.org/14984>`__: On POSIX systems, when "
"netrc is called without a filename argument (and therefore is reading the "
"user's $HOME/.netrc file), it now enforces the same security rules as "
"typical ftp clients: the .netrc file must be owned by the user that owns the "
"process and must not be readable by any other user."

#: ../../../Misc/NEWS:8204
msgid ""
"`Issue #18873 <https://bugs.python.org/18873>`__: The tokenize module now "
"detects Python source code encoding only in comment lines."
msgstr ""
"`Issue #18873 <https://bugs.python.org/18873>`__: The tokenize module now "
"detects Python source code encoding only in comment lines."

#: ../../../Misc/NEWS:8207
msgid ""
"`Issue #17764 <https://bugs.python.org/17764>`__: Enable http.server to bind "
"to a user specified network interface.  Patch contributed by Malte Swart."
msgstr ""
"`Issue #17764 <https://bugs.python.org/17764>`__: Enable http.server to bind "
"to a user specified network interface.  Patch contributed by Malte Swart."

#: ../../../Misc/NEWS:8210
msgid ""
"`Issue #18937 <https://bugs.python.org/18937>`__: Add an assertLogs() "
"context manager to unittest.TestCase to ensure that a block of code emits a "
"message using the logging module."
msgstr ""
"`Issue #18937 <https://bugs.python.org/18937>`__: Add an assertLogs() "
"context manager to unittest.TestCase to ensure that a block of code emits a "
"message using the logging module."

#: ../../../Misc/NEWS:8213
msgid ""
"`Issue #17324 <https://bugs.python.org/17324>`__: Fix http.server's request "
"handling case on trailing '/'. Patch contributed by Vajrasky Kok."
msgstr ""
"`Issue #17324 <https://bugs.python.org/17324>`__: Fix http.server's request "
"handling case on trailing '/'. Patch contributed by Vajrasky Kok."

#: ../../../Misc/NEWS:8216
msgid ""
"`Issue #19018 <https://bugs.python.org/19018>`__: The heapq.merge() function "
"no longer suppresses IndexError in the underlying iterables."
msgstr ""
"`Issue #19018 <https://bugs.python.org/19018>`__: The heapq.merge() function "
"no longer suppresses IndexError in the underlying iterables."

#: ../../../Misc/NEWS:8219
msgid ""
"`Issue #18784 <https://bugs.python.org/18784>`__: The uuid module no longer "
"attempts to load libc via ctypes.CDLL if all the necessary functions have "
"already been found in libuuid.  Patch by Evgeny Sologubov."
msgstr ""
"`Issue #18784 <https://bugs.python.org/18784>`__: The uuid module no longer "
"attempts to load libc via ctypes.CDLL if all the necessary functions have "
"already been found in libuuid.  Patch by Evgeny Sologubov."

#: ../../../Misc/NEWS:8223
msgid ""
"The :envvar:`PYTHONFAULTHANDLER` environment variable now only enables the "
"faulthandler module if the variable is non-empty. Same behaviour than other "
"variables like :envvar:`PYTHONDONTWRITEBYTECODE`."
msgstr ""

#: ../../../Misc/NEWS:8227
msgid ""
"`Issue #1565525 <https://bugs.python.org/1565525>`__: New function "
"``traceback.clear_frames`` will clear the local variables of all the stack "
"frames referenced by a traceback object."
msgstr ""
"`Issue #1565525 <https://bugs.python.org/1565525>`__: New function "
"``traceback.clear_frames`` will clear the local variables of all the stack "
"frames referenced by a traceback object."

#: ../../../Misc/NEWS:8234
msgid ""
"`Issue #18952 <https://bugs.python.org/18952>`__: Fix regression in support "
"data downloads introduced when test.support was converted to a package. "
"Regression noticed by Zachary Ware."
msgstr ""
"`Issue #18952 <https://bugs.python.org/18952>`__: Fix regression in support "
"data downloads introduced when test.support was converted to a package. "
"Regression noticed by Zachary Ware."

#: ../../../Misc/NEWS:8241
msgid ""
"`Issue #18873 <https://bugs.python.org/18873>`__: IDLE now detects Python "
"source code encoding only in comment lines."
msgstr ""
"`Issue #18873 <https://bugs.python.org/18873>`__: IDLE now detects Python "
"source code encoding only in comment lines."

#: ../../../Misc/NEWS:8244
msgid ""
"`Issue #18988 <https://bugs.python.org/18988>`__: The \"Tab\" key now works "
"when a word is already autocompleted."
msgstr ""
"`Issue #18988 <https://bugs.python.org/18988>`__: The \"Tab\" key now works "
"when a word is already autocompleted."

#: ../../../Misc/NEWS:8249
msgid ""
"`Issue #17003 <https://bugs.python.org/17003>`__: Unified the size argument "
"names in the io module with common practice."
msgstr ""
"`Issue #17003 <https://bugs.python.org/17003>`__: Unified the size argument "
"names in the io module with common practice."

#: ../../../Misc/NEWS:8255
msgid ""
"`Issue #18596 <https://bugs.python.org/18596>`__: Support the use of address "
"sanity checking in recent versions of clang and GCC by appropriately marking "
"known false alarms in the small object allocator. Patch contributed by Dhiru "
"Kholia."
msgstr ""
"`Issue #18596 <https://bugs.python.org/18596>`__: Support the use of address "
"sanity checking in recent versions of clang and GCC by appropriately marking "
"known false alarms in the small object allocator. Patch contributed by Dhiru "
"Kholia."

#: ../../../Misc/NEWS:8262
msgid ""
"`Issue #18873 <https://bugs.python.org/18873>`__: 2to3 and the findnocoding."
"py script now detect Python source code encoding only in comment lines."
msgstr ""
"`Issue #18873 <https://bugs.python.org/18873>`__: 2to3 and the findnocoding."
"py script now detect Python source code encoding only in comment lines."

#: ../../../Misc/NEWS:8267
msgid "Python 3.4.0 Alpha 2"
msgstr "Python 3.4.0 Alpha 2"

#: ../../../Misc/NEWS:8269
msgid "Release date: 2013-09-09"
msgstr "Date de sortie¬†: 09-09-2013"

#: ../../../Misc/NEWS:8274
msgid ""
"`Issue #18942 <https://bugs.python.org/18942>`__: sys._debugmallocstats() "
"output was damaged on Windows."
msgstr ""
"`Issue #18942 <https://bugs.python.org/18942>`__: sys._debugmallocstats() "
"output was damaged on Windows."

#: ../../../Misc/NEWS:8276
msgid ""
"`Issue #18571 <https://bugs.python.org/18571>`__: Implementation of the PEP "
"446: file descriptors and file handles are now created non-inheritable; add "
"functions os.get/set_inheritable(), os.get/set_handle_inheritable() and "
"socket.socket.get/set_inheritable()."
msgstr ""
"`Issue #18571 <https://bugs.python.org/18571>`__: Implementation of the PEP "
"446: file descriptors and file handles are now created non-inheritable; add "
"functions os.get/set_inheritable(), os.get/set_handle_inheritable() and "
"socket.socket.get/set_inheritable()."

#: ../../../Misc/NEWS:8281
msgid ""
"`Issue #11619 <https://bugs.python.org/11619>`__: The parser and the import "
"machinery do not encode Unicode filenames anymore on Windows."
msgstr ""
"`Issue #11619 <https://bugs.python.org/11619>`__: The parser and the import "
"machinery do not encode Unicode filenames anymore on Windows."

#: ../../../Misc/NEWS:8284
msgid ""
"`Issue #18808 <https://bugs.python.org/18808>`__: Non-daemon threads are now "
"automatically joined when a sub-interpreter is shutdown (it would previously "
"dump a fatal error)."
msgstr ""
"`Issue #18808 <https://bugs.python.org/18808>`__: Non-daemon threads are now "
"automatically joined when a sub-interpreter is shutdown (it would previously "
"dump a fatal error)."

#: ../../../Misc/NEWS:8287
msgid "Remove support for compiling on systems without getcwd()."
msgstr ""

#: ../../../Misc/NEWS:8289
msgid ""
"`Issue #18774 <https://bugs.python.org/18774>`__: Remove last bits of GNU "
"PTH thread code and thread_pth.h."
msgstr ""
"`Issue #18774 <https://bugs.python.org/18774>`__: Remove last bits of GNU "
"PTH thread code and thread_pth.h."

#: ../../../Misc/NEWS:8291
msgid ""
"`Issue #18771 <https://bugs.python.org/18771>`__: Add optimization to set "
"object lookups to reduce the cost of hash collisions.  The core idea is to "
"inspect a second key/hash pair for each cache line retrieved."
msgstr ""
"`Issue #18771 <https://bugs.python.org/18771>`__: Add optimization to set "
"object lookups to reduce the cost of hash collisions.  The core idea is to "
"inspect a second key/hash pair for each cache line retrieved."

#: ../../../Misc/NEWS:8295
msgid ""
"`Issue #16105 <https://bugs.python.org/16105>`__: When a signal handler "
"fails to write to the file descriptor registered with ``signal."
"set_wakeup_fd()``, report an exception instead of ignoring the error."
msgstr ""
"`Issue #16105 <https://bugs.python.org/16105>`__: When a signal handler "
"fails to write to the file descriptor registered with ``signal."
"set_wakeup_fd()``, report an exception instead of ignoring the error."

#: ../../../Misc/NEWS:8299
msgid ""
"`Issue #18722 <https://bugs.python.org/18722>`__: Remove uses of the "
"\"register\" keyword in C code."
msgstr ""
"`Issue #18722 <https://bugs.python.org/18722>`__: Remove uses of the "
"\"register\" keyword in C code."

#: ../../../Misc/NEWS:8301
msgid ""
"`Issue #18667 <https://bugs.python.org/18667>`__: Add missing \"HAVE_FCHOWNAT"
"\" symbol to posix._have_functions."
msgstr ""
"`Issue #18667 <https://bugs.python.org/18667>`__: Add missing \"HAVE_FCHOWNAT"
"\" symbol to posix._have_functions."

#: ../../../Misc/NEWS:8303
msgid ""
"`Issue #16499 <https://bugs.python.org/16499>`__: Add command line option "
"for isolated mode."
msgstr ""
"`Issue #16499 <https://bugs.python.org/16499>`__: Add command line option "
"for isolated mode."

#: ../../../Misc/NEWS:8305
msgid ""
"`Issue #15301 <https://bugs.python.org/15301>`__: Parsing fd, uid, and gid "
"parameters for builtins in Modules/posixmodule.c is now far more robust."
msgstr ""
"`Issue #15301 <https://bugs.python.org/15301>`__: Parsing fd, uid, and gid "
"parameters for builtins in Modules/posixmodule.c is now far more robust."

#: ../../../Misc/NEWS:8308
msgid ""
"`Issue #18368 <https://bugs.python.org/18368>`__: PyOS_StdioReadline() no "
"longer leaks memory when realloc() fail."
msgstr ""
"`Issue #18368 <https://bugs.python.org/18368>`__: PyOS_StdioReadline() no "
"longer leaks memory when realloc() fail."

#: ../../../Misc/NEWS:8311
msgid ""
"`Issue #17934 <https://bugs.python.org/17934>`__: Add a clear() method to "
"frame objects, to help clean up expensive details (local variables) and "
"break reference cycles."
msgstr ""
"`Issue #17934 <https://bugs.python.org/17934>`__: Add a clear() method to "
"frame objects, to help clean up expensive details (local variables) and "
"break reference cycles."

#: ../../../Misc/NEWS:8314
msgid ""
"`Issue #18780 <https://bugs.python.org/18780>`__: %-formatting codes %d, %i, "
"and %u now treat int-subclasses as int (displays value of int-subclass "
"instead of str(int-subclass) )."
msgstr ""
"`Issue #18780 <https://bugs.python.org/18780>`__: %-formatting codes %d, %i, "
"and %u now treat int-subclasses as int (displays value of int-subclass "
"instead of str(int-subclass) )."

#: ../../../Misc/NEWS:8320
msgid ""
"`Issue #18808 <https://bugs.python.org/18808>`__: Thread.join() now waits "
"for the underlying thread state to be destroyed before returning.  This "
"prevents unpredictable aborts in Py_EndInterpreter() when some non-daemon "
"threads are still running."
msgstr ""
"`Issue #18808 <https://bugs.python.org/18808>`__: Thread.join() now waits "
"for the underlying thread state to be destroyed before returning.  This "
"prevents unpredictable aborts in Py_EndInterpreter() when some non-daemon "
"threads are still running."

#: ../../../Misc/NEWS:8324
msgid ""
"`Issue #18458 <https://bugs.python.org/18458>`__: Prevent crashes with newer "
"versions of libedit.  Its readline emulation has changed from 0-based "
"indexing to 1-based like gnu readline."
msgstr ""
"`Issue #18458 <https://bugs.python.org/18458>`__: Prevent crashes with newer "
"versions of libedit.  Its readline emulation has changed from 0-based "
"indexing to 1-based like gnu readline."

#: ../../../Misc/NEWS:8327
msgid ""
"`Issue #18852 <https://bugs.python.org/18852>`__: Handle case of ``readline."
"__doc__`` being ``None`` in the new readline activation code in ``site.py``."
msgstr ""
"`Issue #18852 <https://bugs.python.org/18852>`__: Handle case of ``readline."
"__doc__`` being ``None`` in the new readline activation code in ``site.py``."

#: ../../../Misc/NEWS:8330
msgid ""
"`Issue #18672 <https://bugs.python.org/18672>`__: Fixed format specifiers "
"for Py_ssize_t in debugging output in the _sre module."
msgstr ""
"`Issue #18672 <https://bugs.python.org/18672>`__: Fixed format specifiers "
"for Py_ssize_t in debugging output in the _sre module."

#: ../../../Misc/NEWS:8333
msgid ""
"`Issue #18830 <https://bugs.python.org/18830>`__: inspect.getclasstree() no "
"longer produces duplicate entries even when input list contains duplicates."
msgstr ""
"`Issue #18830 <https://bugs.python.org/18830>`__: inspect.getclasstree() no "
"longer produces duplicate entries even when input list contains duplicates."

#: ../../../Misc/NEWS:8336
msgid ""
"`Issue #18878 <https://bugs.python.org/18878>`__: sunau.open now supports "
"the context management protocol.  Based on patches by Claudiu Popa and R. "
"David Murray."
msgstr ""
"`Issue #18878 <https://bugs.python.org/18878>`__: sunau.open now supports "
"the context management protocol.  Based on patches by Claudiu Popa and R. "
"David Murray."

#: ../../../Misc/NEWS:8339
msgid ""
"`Issue #18909 <https://bugs.python.org/18909>`__: Fix _tkinter.tkapp."
"interpaddr() on Windows 64-bit, don't cast 64-bit pointer to long (32 bits)."
msgstr ""
"`Issue #18909 <https://bugs.python.org/18909>`__: Fix _tkinter.tkapp."
"interpaddr() on Windows 64-bit, don't cast 64-bit pointer to long (32 bits)."

#: ../../../Misc/NEWS:8342
msgid ""
"`Issue #18876 <https://bugs.python.org/18876>`__: The FileIO.mode attribute "
"now better reflects the actual mode under which the file was opened.  Patch "
"by Erik Bray."
msgstr ""
"`Issue #18876 <https://bugs.python.org/18876>`__: The FileIO.mode attribute "
"now better reflects the actual mode under which the file was opened.  Patch "
"by Erik Bray."

#: ../../../Misc/NEWS:8345
msgid ""
"`Issue #16853 <https://bugs.python.org/16853>`__: Add new selectors module."
msgstr ""
"`Issue #16853 <https://bugs.python.org/16853>`__: Add new selectors module."

#: ../../../Misc/NEWS:8347
msgid ""
"`Issue #18882 <https://bugs.python.org/18882>`__: Add threading."
"main_thread() function."
msgstr ""
"`Issue #18882 <https://bugs.python.org/18882>`__: Add threading."
"main_thread() function."

#: ../../../Misc/NEWS:8349
msgid ""
"`Issue #18901 <https://bugs.python.org/18901>`__: The sunau getparams method "
"now returns a namedtuple rather than a plain tuple.  Patch by Claudiu Popa."
msgstr ""
"`Issue #18901 <https://bugs.python.org/18901>`__: The sunau getparams method "
"now returns a namedtuple rather than a plain tuple.  Patch by Claudiu Popa."

#: ../../../Misc/NEWS:8352
msgid ""
"`Issue #17487 <https://bugs.python.org/17487>`__: The result of the wave "
"getparams method now is pickleable again. Patch by Claudiu Popa."
msgstr ""
"`Issue #17487 <https://bugs.python.org/17487>`__: The result of the wave "
"getparams method now is pickleable again. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:8355
msgid ""
"`Issue #18756 <https://bugs.python.org/18756>`__: os.urandom() now uses a "
"lazily-opened persistent file descriptor, so as to avoid using many file "
"descriptors when run in parallel from multiple threads."
msgstr ""
"`Issue #18756 <https://bugs.python.org/18756>`__: os.urandom() now uses a "
"lazily-opened persistent file descriptor, so as to avoid using many file "
"descriptors when run in parallel from multiple threads."

#: ../../../Misc/NEWS:8359
msgid ""
"`Issue #18418 <https://bugs.python.org/18418>`__: After fork(), reinit all "
"threads states, not only active ones. Patch by A. Jesse Jiryu Davis."
msgstr ""
"`Issue #18418 <https://bugs.python.org/18418>`__: After fork(), reinit all "
"threads states, not only active ones. Patch by A. Jesse Jiryu Davis."

#: ../../../Misc/NEWS:8362
msgid ""
"`Issue #17974 <https://bugs.python.org/17974>`__: Switch unittest from using "
"getopt to using argparse."
msgstr ""
"`Issue #17974 <https://bugs.python.org/17974>`__: Switch unittest from using "
"getopt to using argparse."

#: ../../../Misc/NEWS:8364
msgid ""
"`Issue #11798 <https://bugs.python.org/11798>`__: TestSuite now drops "
"references to own tests after execution."
msgstr ""
"`Issue #11798 <https://bugs.python.org/11798>`__: TestSuite now drops "
"references to own tests after execution."

#: ../../../Misc/NEWS:8366
msgid ""
"`Issue #16611 <https://bugs.python.org/16611>`__: http.cookie now correctly "
"parses the 'secure' and 'httponly' cookie flags."
msgstr ""
"`Issue #16611 <https://bugs.python.org/16611>`__: http.cookie now correctly "
"parses the 'secure' and 'httponly' cookie flags."

#: ../../../Misc/NEWS:8369
msgid ""
"`Issue #11973 <https://bugs.python.org/11973>`__: Fix a problem in kevent. "
"The flags and fflags fields are now properly handled as unsigned."
msgstr ""
"`Issue #11973 <https://bugs.python.org/11973>`__: Fix a problem in kevent. "
"The flags and fflags fields are now properly handled as unsigned."

#: ../../../Misc/NEWS:8372
msgid ""
"`Issue #18807 <https://bugs.python.org/18807>`__: ``pyvenv`` now takes a --"
"copies argument allowing copies instead of symlinks even where symlinks are "
"available and the default."
msgstr ""
"`Issue #18807 <https://bugs.python.org/18807>`__: ``pyvenv`` now takes a --"
"copies argument allowing copies instead of symlinks even where symlinks are "
"available and the default."

#: ../../../Misc/NEWS:8375
msgid ""
"`Issue #18538 <https://bugs.python.org/18538>`__: ``python -m dis`` now uses "
"argparse for argument processing. Patch by Michele Orr√π."
msgstr ""
"`Issue #18538 <https://bugs.python.org/18538>`__: ``python -m dis`` now uses "
"argparse for argument processing. Patch by Michele Orr√π."

#: ../../../Misc/NEWS:8378
msgid ""
"`Issue #18394 <https://bugs.python.org/18394>`__: Close cgi.FieldStorage's "
"optional file."
msgstr ""
"`Issue #18394 <https://bugs.python.org/18394>`__: Close cgi.FieldStorage's "
"optional file."

#: ../../../Misc/NEWS:8380
msgid ""
"`Issue #17702 <https://bugs.python.org/17702>`__: On error, os.environb now "
"suppresses the exception context when raising a new KeyError with the "
"original key."
msgstr ""
"`Issue #17702 <https://bugs.python.org/17702>`__: On error, os.environb now "
"suppresses the exception context when raising a new KeyError with the "
"original key."

#: ../../../Misc/NEWS:8383
msgid ""
"`Issue #16809 <https://bugs.python.org/16809>`__: Fixed some tkinter "
"incompabilities with Tcl/Tk 8.6."
msgstr ""
"`Issue #16809 <https://bugs.python.org/16809>`__: Fixed some tkinter "
"incompabilities with Tcl/Tk 8.6."

#: ../../../Misc/NEWS:8385
msgid ""
"`Issue #16809 <https://bugs.python.org/16809>`__: Tkinter's splitlist() and "
"split() methods now accept Tcl_Obj argument."
msgstr ""
"`Issue #16809 <https://bugs.python.org/16809>`__: Tkinter's splitlist() and "
"split() methods now accept Tcl_Obj argument."

#: ../../../Misc/NEWS:8388
msgid ""
"`Issue #17211 <https://bugs.python.org/17211>`__: Yield a namedtuple in "
"pkgutil. Patch by Ramchandra Apte."
msgstr ""
"`Issue #17211 <https://bugs.python.org/17211>`__: Yield a namedtuple in "
"pkgutil. Patch by Ramchandra Apte."

#: ../../../Misc/NEWS:8391
msgid ""
"`Issue #18324 <https://bugs.python.org/18324>`__: set_payload now correctly "
"handles binary input.  This also supersedes the previous fixes for #14360, "
"#1717, and #16564."
msgstr ""
"`Issue #18324 <https://bugs.python.org/18324>`__: set_payload now correctly "
"handles binary input.  This also supersedes the previous fixes for #14360, "
"#1717, and #16564."

#: ../../../Misc/NEWS:8394
msgid ""
"`Issue #18794 <https://bugs.python.org/18794>`__: Add a fileno() method and "
"a closed attribute to select.devpoll objects."
msgstr ""
"`Issue #18794 <https://bugs.python.org/18794>`__: Add a fileno() method and "
"a closed attribute to select.devpoll objects."

#: ../../../Misc/NEWS:8397
msgid ""
"`Issue #17119 <https://bugs.python.org/17119>`__: Fixed integer overflows "
"when processing large strings and tuples in the tkinter module."
msgstr ""
"`Issue #17119 <https://bugs.python.org/17119>`__: Fixed integer overflows "
"when processing large strings and tuples in the tkinter module."

#: ../../../Misc/NEWS:8400
msgid ""
"`Issue #15352 <https://bugs.python.org/15352>`__: Rebuild frozen modules "
"when marshal.c is changed."
msgstr ""
"`Issue #15352 <https://bugs.python.org/15352>`__: Rebuild frozen modules "
"when marshal.c is changed."

#: ../../../Misc/NEWS:8402
msgid ""
"`Issue #18747 <https://bugs.python.org/18747>`__: Re-seed OpenSSL's pseudo-"
"random number generator after fork. A pthread_atfork() parent handler is "
"used to seed the PRNG with pid, time and some stack data."
msgstr ""
"`Issue #18747 <https://bugs.python.org/18747>`__: Re-seed OpenSSL's pseudo-"
"random number generator after fork. A pthread_atfork() parent handler is "
"used to seed the PRNG with pid, time and some stack data."

#: ../../../Misc/NEWS:8406
msgid ""
"`Issue #8865 <https://bugs.python.org/8865>`__: Concurrent invocation of "
"select.poll.poll() now raises a RuntimeError exception.  Patch by Christian "
"Schubert."
msgstr ""
"`Issue #8865 <https://bugs.python.org/8865>`__: Concurrent invocation of "
"select.poll.poll() now raises a RuntimeError exception.  Patch by Christian "
"Schubert."

#: ../../../Misc/NEWS:8409
msgid ""
"`Issue #18777 <https://bugs.python.org/18777>`__: The ssl module now uses "
"the new CRYPTO_THREADID API of OpenSSL 1.0.0+ instead of the deprecated "
"CRYPTO id callback function."
msgstr ""
"`Issue #18777 <https://bugs.python.org/18777>`__: The ssl module now uses "
"the new CRYPTO_THREADID API of OpenSSL 1.0.0+ instead of the deprecated "
"CRYPTO id callback function."

#: ../../../Misc/NEWS:8412
msgid ""
"`Issue #18768 <https://bugs.python.org/18768>`__: Correct doc string of "
"RAND_edg(). Patch by Vajrasky Kok."
msgstr ""
"`Issue #18768 <https://bugs.python.org/18768>`__: Correct doc string of "
"RAND_edg(). Patch by Vajrasky Kok."

#: ../../../Misc/NEWS:8414
msgid ""
"`Issue #18178 <https://bugs.python.org/18178>`__: Fix ctypes on BSD. "
"dlmalloc.c was compiled twice which broke malloc weak symbols."
msgstr ""
"`Issue #18178 <https://bugs.python.org/18178>`__: Fix ctypes on BSD. "
"dlmalloc.c was compiled twice which broke malloc weak symbols."

#: ../../../Misc/NEWS:8417
msgid ""
"`Issue #18709 <https://bugs.python.org/18709>`__: Fix CVE-2013-4238. The SSL "
"module now handles NULL bytes inside subjectAltName correctly. Formerly the "
"module has used OpenSSL's GENERAL_NAME_print() function to get the string "
"representation of ASN.1 strings for ``rfc822Name`` (email), ``dNSName`` "
"(DNS) and ``uniformResourceIdentifier`` (URI)."
msgstr ""
"`Issue #18709 <https://bugs.python.org/18709>`__: Fix CVE-2013-4238. The SSL "
"module now handles NULL bytes inside subjectAltName correctly. Formerly the "
"module has used OpenSSL's GENERAL_NAME_print() function to get the string "
"representation of ASN.1 strings for ``rfc822Name`` (email), ``dNSName`` "
"(DNS) and ``uniformResourceIdentifier`` (URI)."

#: ../../../Misc/NEWS:8423
msgid ""
"`Issue #18701 <https://bugs.python.org/18701>`__: Remove support of old "
"CPython versions (<3.0) from C code."
msgstr ""
"`Issue #18701 <https://bugs.python.org/18701>`__: Remove support of old "
"CPython versions (<3.0) from C code."

#: ../../../Misc/NEWS:8425
msgid ""
"`Issue #18756 <https://bugs.python.org/18756>`__: Improve error reporting in "
"os.urandom() when the failure is due to something else than /dev/urandom not "
"existing (for example, exhausting the file descriptor limit)."
msgstr ""
"`Issue #18756 <https://bugs.python.org/18756>`__: Improve error reporting in "
"os.urandom() when the failure is due to something else than /dev/urandom not "
"existing (for example, exhausting the file descriptor limit)."

#: ../../../Misc/NEWS:8429
msgid ""
"`Issue #18673 <https://bugs.python.org/18673>`__: Add O_TMPFILE to os "
"module. O_TMPFILE requires Linux kernel 3.11 or newer. It's only defined on "
"system with 3.11 uapi headers, too."
msgstr ""
"`Issue #18673 <https://bugs.python.org/18673>`__: Add O_TMPFILE to os "
"module. O_TMPFILE requires Linux kernel 3.11 or newer. It's only defined on "
"system with 3.11 uapi headers, too."

#: ../../../Misc/NEWS:8432
msgid ""
"`Issue #18532 <https://bugs.python.org/18532>`__: Change the builtin hash "
"algorithms' names to lower case names as promised by hashlib's documentation."
msgstr ""
"`Issue #18532 <https://bugs.python.org/18532>`__: Change the builtin hash "
"algorithms' names to lower case names as promised by hashlib's documentation."

#: ../../../Misc/NEWS:8435
msgid ""
"`Issue #8713 <https://bugs.python.org/8713>`__: add new spwan and forkserver "
"start methods, and new functions get_all_start_methods, get_start_method, "
"and set_start_method, to multiprocessing."
msgstr ""
"`Issue #8713 <https://bugs.python.org/8713>`__: add new spwan and forkserver "
"start methods, and new functions get_all_start_methods, get_start_method, "
"and set_start_method, to multiprocessing."

#: ../../../Misc/NEWS:8439
msgid ""
"`Issue #18405 <https://bugs.python.org/18405>`__: Improve the entropy of "
"crypt.mksalt()."
msgstr ""
"`Issue #18405 <https://bugs.python.org/18405>`__: Improve the entropy of "
"crypt.mksalt()."

#: ../../../Misc/NEWS:8441
msgid ""
"`Issue #12015 <https://bugs.python.org/12015>`__: The tempfile module now "
"uses a suffix of 8 random characters instead of 6, to reduce the risk of "
"filename collision. The entropy was reduced when uppercase letters were "
"removed from the charset used to generate random characters."
msgstr ""
"`Issue #12015 <https://bugs.python.org/12015>`__: The tempfile module now "
"uses a suffix of 8 random characters instead of 6, to reduce the risk of "
"filename collision. The entropy was reduced when uppercase letters were "
"removed from the charset used to generate random characters."

#: ../../../Misc/NEWS:8446
msgid ""
"`Issue #18585 <https://bugs.python.org/18585>`__: Add :func:`textwrap."
"shorten` to collapse and truncate a piece of text to a given length."
msgstr ""
"`Issue #18585 <https://bugs.python.org/18585>`__: Add :func:`textwrap."
"shorten` to collapse and truncate a piece of text to a given length."

#: ../../../Misc/NEWS:8449
msgid ""
"`Issue #18598 <https://bugs.python.org/18598>`__: Tweak exception message "
"for importlib.import_module() to include the module name when a key argument "
"is missing."
msgstr ""
"`Issue #18598 <https://bugs.python.org/18598>`__: Tweak exception message "
"for importlib.import_module() to include the module name when a key argument "
"is missing."

#: ../../../Misc/NEWS:8452
msgid ""
"`Issue #19151 <https://bugs.python.org/19151>`__: Fix docstring and use of "
"_get_supported_file_loaders() to reflect 2-tuples."
msgstr ""
"`Issue #19151 <https://bugs.python.org/19151>`__: Fix docstring and use of "
"_get_supported_file_loaders() to reflect 2-tuples."

#: ../../../Misc/NEWS:8455
msgid ""
"`Issue #19152 <https://bugs.python.org/19152>`__: Add ExtensionFileLoader."
"get_filename()."
msgstr ""
"`Issue #19152 <https://bugs.python.org/19152>`__: Add ExtensionFileLoader."
"get_filename()."

#: ../../../Misc/NEWS:8457
msgid ""
"`Issue #18676 <https://bugs.python.org/18676>`__: Change 'positive' to 'non-"
"negative' in queue.py put and get docstrings and ValueError messages. Patch "
"by Zhongyue Luo"
msgstr ""
"`Issue #18676 <https://bugs.python.org/18676>`__: Change 'positive' to 'non-"
"negative' in queue.py put and get docstrings and ValueError messages. Patch "
"by Zhongyue Luo"

#: ../../../Misc/NEWS:8460
msgid "Fix refcounting issue with extension types in tkinter."
msgstr ""

#: ../../../Misc/NEWS:8462
msgid ""
"`Issue #8112 <https://bugs.python.org/8112>`__: xlmrpc.server's "
"DocXMLRPCServer server no longer raises an error if methods have "
"annotations; it now correctly displays the annotations."
msgstr ""
"`Issue #8112 <https://bugs.python.org/8112>`__: xlmrpc.server's "
"DocXMLRPCServer server no longer raises an error if methods have "
"annotations; it now correctly displays the annotations."

#: ../../../Misc/NEWS:8465
msgid ""
"`Issue #18600 <https://bugs.python.org/18600>`__: Added policy argument to "
"email.message.Message.as_string, and as_bytes and __bytes__ methods to "
"Message."
msgstr ""
"`Issue #18600 <https://bugs.python.org/18600>`__: Added policy argument to "
"email.message.Message.as_string, and as_bytes and __bytes__ methods to "
"Message."

#: ../../../Misc/NEWS:8468
msgid ""
"`Issue #18671 <https://bugs.python.org/18671>`__: Output more information "
"when logging exceptions occur."
msgstr ""
"`Issue #18671 <https://bugs.python.org/18671>`__: Output more information "
"when logging exceptions occur."

#: ../../../Misc/NEWS:8470
msgid ""
"`Issue #18621 <https://bugs.python.org/18621>`__: Prevent the site module's "
"patched builtins from keeping too many references alive for too long."
msgstr ""
"`Issue #18621 <https://bugs.python.org/18621>`__: Prevent the site module's "
"patched builtins from keeping too many references alive for too long."

#: ../../../Misc/NEWS:8473
msgid ""
"`Issue #4885 <https://bugs.python.org/4885>`__: Add weakref support to mmap "
"objects.  Patch by Valerie Lambert."
msgstr ""
"`Issue #4885 <https://bugs.python.org/4885>`__: Add weakref support to mmap "
"objects.  Patch by Valerie Lambert."

#: ../../../Misc/NEWS:8475
msgid ""
"`Issue #8860 <https://bugs.python.org/8860>`__: Fixed rounding in timedelta "
"constructor."
msgstr ""
"`Issue #8860 <https://bugs.python.org/8860>`__: Fixed rounding in timedelta "
"constructor."

#: ../../../Misc/NEWS:8477
msgid ""
"`Issue #18849 <https://bugs.python.org/18849>`__: Fixed a Windows-specific "
"tempfile bug where collision with an existing directory caused mkstemp and "
"related APIs to fail instead of retrying. Report and fix by Vlad Shcherbina."
msgstr ""
"`Issue #18849 <https://bugs.python.org/18849>`__: Fixed a Windows-specific "
"tempfile bug where collision with an existing directory caused mkstemp and "
"related APIs to fail instead of retrying. Report and fix by Vlad Shcherbina."

#: ../../../Misc/NEWS:8481
msgid ""
"`Issue #18920 <https://bugs.python.org/18920>`__: argparse's default "
"destination for the version action (-v, --version) has also been changed to "
"stdout, to match the Python executable."
msgstr ""
"`Issue #18920 <https://bugs.python.org/18920>`__: argparse's default "
"destination for the version action (-v, --version) has also been changed to "
"stdout, to match the Python executable."

#: ../../../Misc/NEWS:8487
msgid ""
"`Issue #18623 <https://bugs.python.org/18623>`__: Factor out the "
"_SuppressCoreFiles context manager into test.support.  Patch by Valerie "
"Lambert."
msgstr ""
"`Issue #18623 <https://bugs.python.org/18623>`__: Factor out the "
"_SuppressCoreFiles context manager into test.support.  Patch by Valerie "
"Lambert."

#: ../../../Misc/NEWS:8490
msgid ""
"`Issue #12037 <https://bugs.python.org/12037>`__: Fix test_email for desktop "
"Windows."
msgstr ""
"`Issue #12037 <https://bugs.python.org/12037>`__: Fix test_email for desktop "
"Windows."

#: ../../../Misc/NEWS:8492
msgid ""
"`Issue #15507 <https://bugs.python.org/15507>`__: test_subprocess's "
"test_send_signal could fail if the test runner were run in an environment "
"where the process inherited an ignore setting for SIGINT.  Restore the "
"SIGINT handler to the desired KeyboardInterrupt raising one during that test."
msgstr ""
"`Issue #15507 <https://bugs.python.org/15507>`__: test_subprocess's "
"test_send_signal could fail if the test runner were run in an environment "
"where the process inherited an ignore setting for SIGINT.  Restore the "
"SIGINT handler to the desired KeyboardInterrupt raising one during that test."

#: ../../../Misc/NEWS:8497
msgid ""
"`Issue #16799 <https://bugs.python.org/16799>`__: Switched from getopt to "
"argparse style in regrtest's argument parsing.  Added more tests for "
"regrtest's argument parsing."
msgstr ""
"`Issue #16799 <https://bugs.python.org/16799>`__: Switched from getopt to "
"argparse style in regrtest's argument parsing.  Added more tests for "
"regrtest's argument parsing."

#: ../../../Misc/NEWS:8500
msgid ""
"`Issue #18792 <https://bugs.python.org/18792>`__: Use \"127.0.0.1\" or "
"\"::1\" instead of \"localhost\" as much as possible, since \"localhost\" "
"goes through a DNS lookup under recent Windows versions."
msgstr ""
"`Issue #18792 <https://bugs.python.org/18792>`__: Use \"127.0.0.1\" or "
"\"::1\" instead of \"localhost\" as much as possible, since \"localhost\" "
"goes through a DNS lookup under recent Windows versions."

#: ../../../Misc/NEWS:8507
msgid ""
"`Issue #18489 <https://bugs.python.org/18489>`__: Add tests for "
"SearchEngine. Original patch by Phil Webster."
msgstr ""
"`Issue #18489 <https://bugs.python.org/18489>`__: Add tests for "
"SearchEngine. Original patch by Phil Webster."

#: ../../../Misc/NEWS:8512
msgid ""
"`Issue #18743 <https://bugs.python.org/18743>`__: Fix references to non-"
"existent \"StringIO\" module."
msgstr ""
"`Issue #18743 <https://bugs.python.org/18743>`__: Fix references to non-"
"existent \"StringIO\" module."

#: ../../../Misc/NEWS:8514
msgid ""
"`Issue #18783 <https://bugs.python.org/18783>`__: Removed existing mentions "
"of Python long type in docstrings, error messages and comments."
msgstr ""
"`Issue #18783 <https://bugs.python.org/18783>`__: Removed existing mentions "
"of Python long type in docstrings, error messages and comments."

#: ../../../Misc/NEWS:8520
msgid ""
"`Issue #1584 <https://bugs.python.org/1584>`__: Provide configure options to "
"override default search paths for Tcl and Tk when building _tkinter."
msgstr ""
"`Issue #1584 <https://bugs.python.org/1584>`__: Provide configure options to "
"override default search paths for Tcl and Tk when building _tkinter."

#: ../../../Misc/NEWS:8523
msgid ""
"`Issue #15663 <https://bugs.python.org/15663>`__: Tcl/Tk 8.5.14 is now "
"included with the OS X 10.6+ 64-/32-bit installer.  It is no longer "
"necessary to install a third-party version of Tcl/Tk 8.5 to work around the "
"problems in the Apple-supplied Tcl/Tk 8.5 shipped in OS X 10.6 and later "
"releases."
msgstr ""
"`Issue #15663 <https://bugs.python.org/15663>`__: Tcl/Tk 8.5.14 is now "
"included with the OS X 10.6+ 64-/32-bit installer.  It is no longer "
"necessary to install a third-party version of Tcl/Tk 8.5 to work around the "
"problems in the Apple-supplied Tcl/Tk 8.5 shipped in OS X 10.6 and later "
"releases."

#: ../../../Misc/NEWS:8531
msgid ""
"`Issue #18922 <https://bugs.python.org/18922>`__: Now The Lib/smtpd.py and "
"Tools/i18n/msgfmt.py scripts write their version strings to stdout, and not "
"to sderr."
msgstr ""
"`Issue #18922 <https://bugs.python.org/18922>`__: Now The Lib/smtpd.py and "
"Tools/i18n/msgfmt.py scripts write their version strings to stdout, and not "
"to sderr."

#: ../../../Misc/NEWS:8536
msgid "Python 3.4.0 Alpha 1"
msgstr "Python 3.4.0 Alpha 1"

#: ../../../Misc/NEWS:8538
msgid "Release date: 2013-08-03"
msgstr "Date de sortie¬†: 2013-08-03"

#: ../../../Misc/NEWS:8543
msgid ""
"`Issue #16741 <https://bugs.python.org/16741>`__: Fix an error reporting in "
"int()."
msgstr ""
"`Issue #16741 <https://bugs.python.org/16741>`__: Fix an error reporting in "
"int()."

#: ../../../Misc/NEWS:8545
msgid ""
"`Issue #17899 <https://bugs.python.org/17899>`__: Fix rare file descriptor "
"leak in os.listdir()."
msgstr ""
"`Issue #17899 <https://bugs.python.org/17899>`__: Fix rare file descriptor "
"leak in os.listdir()."

#: ../../../Misc/NEWS:8547
msgid ""
"`Issue #10241 <https://bugs.python.org/10241>`__: Clear extension module "
"dict copies at interpreter shutdown. Patch by Neil Schemenauer, minimally "
"modified."
msgstr ""
"`Issue #10241 <https://bugs.python.org/10241>`__: Clear extension module "
"dict copies at interpreter shutdown. Patch by Neil Schemenauer, minimally "
"modified."

#: ../../../Misc/NEWS:8550
msgid ""
"`Issue #9035 <https://bugs.python.org/9035>`__: ismount now recognises "
"volumes mounted below a drive root on Windows. Original patch by Atsuo "
"Ishimoto."
msgstr ""
"`Issue #9035 <https://bugs.python.org/9035>`__: ismount now recognises "
"volumes mounted below a drive root on Windows. Original patch by Atsuo "
"Ishimoto."

#: ../../../Misc/NEWS:8553
msgid ""
"`Issue #18214 <https://bugs.python.org/18214>`__: Improve finalization of "
"Python modules to avoid setting their globals to None, in most cases."
msgstr ""
"`Issue #18214 <https://bugs.python.org/18214>`__: Improve finalization of "
"Python modules to avoid setting their globals to None, in most cases."

#: ../../../Misc/NEWS:8556
msgid ""
"`Issue #18112 <https://bugs.python.org/18112>`__: PEP 442 implementation "
"(safe object finalization)."
msgstr ""
"`Issue #18112 <https://bugs.python.org/18112>`__: PEP 442 implementation "
"(safe object finalization)."

#: ../../../Misc/NEWS:8558
msgid ""
"`Issue #18552 <https://bugs.python.org/18552>`__: Check return value of "
"PyArena_AddPyObject() in obj2ast_object()."
msgstr ""
"`Issue #18552 <https://bugs.python.org/18552>`__: Check return value of "
"PyArena_AddPyObject() in obj2ast_object()."

#: ../../../Misc/NEWS:8561
msgid ""
"`Issue #18560 <https://bugs.python.org/18560>`__: Fix potential NULL pointer "
"dereference in sum()."
msgstr ""
"`Issue #18560 <https://bugs.python.org/18560>`__: Fix potential NULL pointer "
"dereference in sum()."

#: ../../../Misc/NEWS:8563
msgid ""
"`Issue #18520 <https://bugs.python.org/18520>`__: Add a new "
"PyStructSequence_InitType2() function, same than PyStructSequence_InitType() "
"except that it has a return value (0 on success, -1 on error)."
msgstr ""
"`Issue #18520 <https://bugs.python.org/18520>`__: Add a new "
"PyStructSequence_InitType2() function, same than PyStructSequence_InitType() "
"except that it has a return value (0 on success, -1 on error)."

#: ../../../Misc/NEWS:8567
msgid ""
"`Issue #15905 <https://bugs.python.org/15905>`__: Fix theoretical buffer "
"overflow in handling of sys.argv[0], prefix and exec_prefix if the operation "
"system does not obey MAXPATHLEN."
msgstr ""
"`Issue #15905 <https://bugs.python.org/15905>`__: Fix theoretical buffer "
"overflow in handling of sys.argv[0], prefix and exec_prefix if the operation "
"system does not obey MAXPATHLEN."

#: ../../../Misc/NEWS:8570
msgid ""
"`Issue #18408 <https://bugs.python.org/18408>`__: Fix many various bugs in "
"code handling errors, especially on memory allocation failure (MemoryError)."
msgstr ""
"`Issue #18408 <https://bugs.python.org/18408>`__: Fix many various bugs in "
"code handling errors, especially on memory allocation failure (MemoryError)."

#: ../../../Misc/NEWS:8573
msgid ""
"`Issue #18344 <https://bugs.python.org/18344>`__: Fix potential ref-leaks in "
"_bufferedreader_read_all()."
msgstr ""
"`Issue #18344 <https://bugs.python.org/18344>`__: Fix potential ref-leaks in "
"_bufferedreader_read_all()."

#: ../../../Misc/NEWS:8575
msgid ""
"`Issue #18342 <https://bugs.python.org/18342>`__: Use the repr of a module "
"name when an import fails when using ``from ... import ...``."
msgstr ""
"`Issue #18342 <https://bugs.python.org/18342>`__: Use the repr of a module "
"name when an import fails when using ``from ... import ...``."

#: ../../../Misc/NEWS:8578
msgid ""
"`Issue #17872 <https://bugs.python.org/17872>`__: Fix a segfault in marshal."
"load() when input stream returns more bytes than requested."
msgstr ""
"`Issue #17872 <https://bugs.python.org/17872>`__: Fix a segfault in marshal."
"load() when input stream returns more bytes than requested."

#: ../../../Misc/NEWS:8581
msgid ""
"`Issue #18338 <https://bugs.python.org/18338>`__: `python --version` now "
"prints version string to stdout, and not to stderr.  Patch by Berker Peksag "
"and Michael Dickens."
msgstr ""
"`Issue #18338 <https://bugs.python.org/18338>`__: `python --version` now "
"prints version string to stdout, and not to stderr.  Patch by Berker Peksag "
"and Michael Dickens."

#: ../../../Misc/NEWS:8584
msgid ""
"`Issue #18426 <https://bugs.python.org/18426>`__: Fix NULL pointer "
"dereference in C extension import when PyModule_GetDef() returns an error."
msgstr ""
"`Issue #18426 <https://bugs.python.org/18426>`__: Fix NULL pointer "
"dereference in C extension import when PyModule_GetDef() returns an error."

#: ../../../Misc/NEWS:8587
msgid ""
"`Issue #17206 <https://bugs.python.org/17206>`__: On Windows, increase the "
"stack size from 2 MB to 4.2 MB to fix a stack overflow in the marshal module "
"(fix a crash in test_marshal). Patch written by Jeremy Kloth."
msgstr ""
"`Issue #17206 <https://bugs.python.org/17206>`__: On Windows, increase the "
"stack size from 2 MB to 4.2 MB to fix a stack overflow in the marshal module "
"(fix a crash in test_marshal). Patch written by Jeremy Kloth."

#: ../../../Misc/NEWS:8591
msgid ""
"`Issue #3329 <https://bugs.python.org/3329>`__: Implement the PEP 445: Add "
"new APIs to customize Python memory allocators."
msgstr ""
"`Issue #3329 <https://bugs.python.org/3329>`__: Implement the PEP 445: Add "
"new APIs to customize Python memory allocators."

#: ../../../Misc/NEWS:8594
msgid ""
"`Issue #18328 <https://bugs.python.org/18328>`__: Reorder ops in "
"PyThreadState_Delete*() functions. Now the tstate is first removed from TLS "
"and then deallocated."
msgstr ""
"`Issue #18328 <https://bugs.python.org/18328>`__: Reorder ops in "
"PyThreadState_Delete*() functions. Now the tstate is first removed from TLS "
"and then deallocated."

#: ../../../Misc/NEWS:8597
msgid ""
"`Issue #13483 <https://bugs.python.org/13483>`__: Use VirtualAlloc in "
"obmalloc on Windows."
msgstr ""
"`Issue #13483 <https://bugs.python.org/13483>`__: Use VirtualAlloc in "
"obmalloc on Windows."

#: ../../../Misc/NEWS:8599
msgid ""
"`Issue #18184 <https://bugs.python.org/18184>`__: PyUnicode_FromFormat() and "
"PyUnicode_FromFormatV() now raise OverflowError when an argument of %c "
"format is out of range."
msgstr ""
"`Issue #18184 <https://bugs.python.org/18184>`__: PyUnicode_FromFormat() and "
"PyUnicode_FromFormatV() now raise OverflowError when an argument of %c "
"format is out of range."

#: ../../../Misc/NEWS:8602
msgid ""
"`Issue #18111 <https://bugs.python.org/18111>`__: The min() and max() "
"functions now support a default argument to be returned instead of raising a "
"ValueError on an empty sequence. (Contributed by Julian Berman.)"
msgstr ""
"`Issue #18111 <https://bugs.python.org/18111>`__: The min() and max() "
"functions now support a default argument to be returned instead of raising a "
"ValueError on an empty sequence. (Contributed by Julian Berman.)"

#: ../../../Misc/NEWS:8606
msgid ""
"`Issue #18137 <https://bugs.python.org/18137>`__: Detect integer overflow on "
"precision in float.__format__() and complex.__format__()."
msgstr ""
"`Issue #18137 <https://bugs.python.org/18137>`__: Detect integer overflow on "
"precision in float.__format__() and complex.__format__()."

#: ../../../Misc/NEWS:8609
msgid ""
"`Issue #15767 <https://bugs.python.org/15767>`__: Introduce "
"ModuleNotFoundError which is raised when a module could not be found."
msgstr ""
"`Issue #15767 <https://bugs.python.org/15767>`__: Introduce "
"ModuleNotFoundError which is raised when a module could not be found."

#: ../../../Misc/NEWS:8612
msgid ""
"`Issue #18183 <https://bugs.python.org/18183>`__: Fix various unicode "
"operations on strings with large unicode codepoints."
msgstr ""
"`Issue #18183 <https://bugs.python.org/18183>`__: Fix various unicode "
"operations on strings with large unicode codepoints."

#: ../../../Misc/NEWS:8615
msgid ""
"`Issue #18180 <https://bugs.python.org/18180>`__: Fix ref leak in "
"_PyImport_GetDynLoadWindows()."
msgstr ""
"`Issue #18180 <https://bugs.python.org/18180>`__: Fix ref leak in "
"_PyImport_GetDynLoadWindows()."

#: ../../../Misc/NEWS:8617
msgid ""
"`Issue #18038 <https://bugs.python.org/18038>`__: SyntaxError raised during "
"compilation sources with illegal encoding now always contains an encoding "
"name."
msgstr ""
"`Issue #18038 <https://bugs.python.org/18038>`__: SyntaxError raised during "
"compilation sources with illegal encoding now always contains an encoding "
"name."

#: ../../../Misc/NEWS:8620
msgid ""
"`Issue #17931 <https://bugs.python.org/17931>`__: Resolve confusion on "
"Windows between pids and process handles."
msgstr ""
"`Issue #17931 <https://bugs.python.org/17931>`__: Resolve confusion on "
"Windows between pids and process handles."

#: ../../../Misc/NEWS:8623
msgid ""
"Tweak the exception message when the magic number or size value in a "
"bytecode file is truncated."
msgstr ""

#: ../../../Misc/NEWS:8626
msgid ""
"`Issue #17932 <https://bugs.python.org/17932>`__: Fix an integer overflow "
"issue on Windows 64-bit in iterators: change the C type of seqiterobject."
"it_index from long to Py_ssize_t."
msgstr ""
"`Issue #17932 <https://bugs.python.org/17932>`__: Fix an integer overflow "
"issue on Windows 64-bit in iterators: change the C type of seqiterobject."
"it_index from long to Py_ssize_t."

#: ../../../Misc/NEWS:8629
msgid ""
"`Issue #18065 <https://bugs.python.org/18065>`__: Don't set __path__ to the "
"package name for frozen packages."
msgstr ""
"`Issue #18065 <https://bugs.python.org/18065>`__: Don't set __path__ to the "
"package name for frozen packages."

#: ../../../Misc/NEWS:8631
msgid ""
"`Issue #18088 <https://bugs.python.org/18088>`__: When reloading a module, "
"unconditionally reset all relevant attributes on the module (e.g. __name__, "
"__loader__, __package__, __file__, __cached__)."
msgstr ""
"`Issue #18088 <https://bugs.python.org/18088>`__: When reloading a module, "
"unconditionally reset all relevant attributes on the module (e.g. __name__, "
"__loader__, __package__, __file__, __cached__)."

#: ../../../Misc/NEWS:8635
msgid ""
"`Issue #17937 <https://bugs.python.org/17937>`__: Try harder to collect "
"cyclic garbage at shutdown."
msgstr ""
"`Issue #17937 <https://bugs.python.org/17937>`__: Try harder to collect "
"cyclic garbage at shutdown."

#: ../../../Misc/NEWS:8637
msgid ""
"`Issue #12370 <https://bugs.python.org/12370>`__: Prevent class bodies from "
"interfering with the __class__ closure."
msgstr ""
"`Issue #12370 <https://bugs.python.org/12370>`__: Prevent class bodies from "
"interfering with the __class__ closure."

#: ../../../Misc/NEWS:8640
msgid ""
"`Issue #17644 <https://bugs.python.org/17644>`__: Fix a crash in str.format "
"when curly braces are used in square brackets."
msgstr ""
"`Issue #17644 <https://bugs.python.org/17644>`__: Fix a crash in str.format "
"when curly braces are used in square brackets."

#: ../../../Misc/NEWS:8643
msgid ""
"`Issue #17237 <https://bugs.python.org/17237>`__: Fix crash in the ASCII "
"decoder on m68k."
msgstr ""
"`Issue #17237 <https://bugs.python.org/17237>`__: Fix crash in the ASCII "
"decoder on m68k."

#: ../../../Misc/NEWS:8645
msgid ""
"`Issue #17927 <https://bugs.python.org/17927>`__: Frame objects kept "
"arguments alive if they had been copied into a cell, even if the cell was "
"cleared."
msgstr ""
"`Issue #17927 <https://bugs.python.org/17927>`__: Frame objects kept "
"arguments alive if they had been copied into a cell, even if the cell was "
"cleared."

#: ../../../Misc/NEWS:8648
msgid ""
"`Issue #1545463 <https://bugs.python.org/1545463>`__: At shutdown, defer "
"finalization of codec modules so that stderr remains usable."
msgstr ""
"`Issue #1545463 <https://bugs.python.org/1545463>`__: At shutdown, defer "
"finalization of codec modules so that stderr remains usable."

#: ../../../Misc/NEWS:8651
msgid ""
"`Issue #7330 <https://bugs.python.org/7330>`__: Implement width and "
"precision (ex: \"%5.3s\") for the format string of PyUnicode_FromFormat() "
"function, original patch written by Ysj Ray."
msgstr ""
"`Issue #7330 <https://bugs.python.org/7330>`__: Implement width and "
"precision (ex: \"%5.3s\") for the format string of PyUnicode_FromFormat() "
"function, original patch written by Ysj Ray."

#: ../../../Misc/NEWS:8654
msgid ""
"`Issue #1545463 <https://bugs.python.org/1545463>`__: Global variables "
"caught in reference cycles are now garbage-collected at shutdown."
msgstr ""
"`Issue #1545463 <https://bugs.python.org/1545463>`__: Global variables "
"caught in reference cycles are now garbage-collected at shutdown."

#: ../../../Misc/NEWS:8657
msgid ""
"`Issue #17094 <https://bugs.python.org/17094>`__: Clear stale thread states "
"after fork().  Note that this is a potentially disruptive change since it "
"may release some system resources which would otherwise remain perpetually "
"alive (e.g. database connections kept in thread-local storage)."
msgstr ""
"`Issue #17094 <https://bugs.python.org/17094>`__: Clear stale thread states "
"after fork().  Note that this is a potentially disruptive change since it "
"may release some system resources which would otherwise remain perpetually "
"alive (e.g. database connections kept in thread-local storage)."

#: ../../../Misc/NEWS:8662
msgid ""
"`Issue #17408 <https://bugs.python.org/17408>`__: Avoid using an obsolete "
"instance of the copyreg module when the interpreter is shutdown and then "
"started again."
msgstr ""
"`Issue #17408 <https://bugs.python.org/17408>`__: Avoid using an obsolete "
"instance of the copyreg module when the interpreter is shutdown and then "
"started again."

#: ../../../Misc/NEWS:8665
msgid ""
"`Issue #5845 <https://bugs.python.org/5845>`__: Enable tab-completion in the "
"interactive interpreter by default, thanks to a new sys.__interactivehook__."
msgstr ""
"`Issue #5845 <https://bugs.python.org/5845>`__: Enable tab-completion in the "
"interactive interpreter by default, thanks to a new sys.__interactivehook__."

#: ../../../Misc/NEWS:8668
msgid ""
"`Issue #17115 <https://bugs.python.org/17115>`__,17116: Module "
"initialization now includes setting __package__ and __loader__ attributes to "
"None."
msgstr ""
"`Issue #17115 <https://bugs.python.org/17115>`__,17116: Module "
"initialization now includes setting __package__ and __loader__ attributes to "
"None."

#: ../../../Misc/NEWS:8671
msgid ""
"`Issue #17853 <https://bugs.python.org/17853>`__: Ensure locals of a class "
"that shadow free variables always win over the closures."
msgstr ""
"`Issue #17853 <https://bugs.python.org/17853>`__: Ensure locals of a class "
"that shadow free variables always win over the closures."

#: ../../../Misc/NEWS:8674
msgid ""
"`Issue #17863 <https://bugs.python.org/17863>`__: In the interactive "
"console, don't loop forever if the encoding can't be fetched from stdin."
msgstr ""
"`Issue #17863 <https://bugs.python.org/17863>`__: In the interactive "
"console, don't loop forever if the encoding can't be fetched from stdin."

#: ../../../Misc/NEWS:8677
msgid ""
"`Issue #17867 <https://bugs.python.org/17867>`__: Raise an ImportError if "
"__import__ is not found in __builtins__."
msgstr ""
"`Issue #17867 <https://bugs.python.org/17867>`__: Raise an ImportError if "
"__import__ is not found in __builtins__."

#: ../../../Misc/NEWS:8679
msgid ""
"`Issue #18698 <https://bugs.python.org/18698>`__: Ensure importlib.reload() "
"returns the module out of sys.modules."
msgstr ""
"`Issue #18698 <https://bugs.python.org/18698>`__: Ensure importlib.reload() "
"returns the module out of sys.modules."

#: ../../../Misc/NEWS:8681
msgid ""
"`Issue #17857 <https://bugs.python.org/17857>`__: Prevent build failures "
"with pre-3.5.0 versions of sqlite3, such as was shipped with Centos 5 and "
"Mac OS X 10.4."
msgstr ""
"`Issue #17857 <https://bugs.python.org/17857>`__: Prevent build failures "
"with pre-3.5.0 versions of sqlite3, such as was shipped with Centos 5 and "
"Mac OS X 10.4."

#: ../../../Misc/NEWS:8684
msgid ""
"`Issue #17413 <https://bugs.python.org/17413>`__: sys.settrace callbacks "
"were being passed a string instead of an exception instance for the 'value' "
"element of the arg tuple if the exception originated from C code; now an "
"exception instance is always provided."
msgstr ""
"`Issue #17413 <https://bugs.python.org/17413>`__: sys.settrace callbacks "
"were being passed a string instead of an exception instance for the 'value' "
"element of the arg tuple if the exception originated from C code; now an "
"exception instance is always provided."

#: ../../../Misc/NEWS:8688
msgid ""
"`Issue #17782 <https://bugs.python.org/17782>`__: Fix undefined behaviour on "
"platforms where ``struct timespec``'s \"tv_nsec\" member is not a C long."
msgstr ""
"`Issue #17782 <https://bugs.python.org/17782>`__: Fix undefined behaviour on "
"platforms where ``struct timespec``'s \"tv_nsec\" member is not a C long."

#: ../../../Misc/NEWS:8691
msgid ""
"`Issue #17722 <https://bugs.python.org/17722>`__: When looking up __round__, "
"resolve descriptors."
msgstr ""
"`Issue #17722 <https://bugs.python.org/17722>`__: When looking up __round__, "
"resolve descriptors."

#: ../../../Misc/NEWS:8693
msgid ""
"`Issue #16061 <https://bugs.python.org/16061>`__: Speed up str.replace() for "
"replacing 1-character strings."
msgstr ""
"`Issue #16061 <https://bugs.python.org/16061>`__: Speed up str.replace() for "
"replacing 1-character strings."

#: ../../../Misc/NEWS:8695
msgid ""
"`Issue #17715 <https://bugs.python.org/17715>`__: Fix segmentation fault "
"from raising an exception in a __trunc__ method."
msgstr ""
"`Issue #17715 <https://bugs.python.org/17715>`__: Fix segmentation fault "
"from raising an exception in a __trunc__ method."

#: ../../../Misc/NEWS:8698
msgid ""
"`Issue #17643 <https://bugs.python.org/17643>`__: Add __callback__ attribute "
"to weakref.ref."
msgstr ""
"`Issue #17643 <https://bugs.python.org/17643>`__: Add __callback__ attribute "
"to weakref.ref."

#: ../../../Misc/NEWS:8700
msgid ""
"`Issue #16447 <https://bugs.python.org/16447>`__: Fixed potential "
"segmentation fault when setting __name__ on a class."
msgstr ""
"`Issue #16447 <https://bugs.python.org/16447>`__: Fixed potential "
"segmentation fault when setting __name__ on a class."

#: ../../../Misc/NEWS:8703
msgid ""
"`Issue #17669 <https://bugs.python.org/17669>`__: Fix crash involving "
"finalization of generators using yield from."
msgstr ""
"`Issue #17669 <https://bugs.python.org/17669>`__: Fix crash involving "
"finalization of generators using yield from."

#: ../../../Misc/NEWS:8705
msgid ""
"`Issue #14439 <https://bugs.python.org/14439>`__: Python now prints the "
"traceback on runpy failure at startup."
msgstr ""
"`Issue #14439 <https://bugs.python.org/14439>`__: Python now prints the "
"traceback on runpy failure at startup."

#: ../../../Misc/NEWS:8707
msgid ""
"`Issue #17469 <https://bugs.python.org/17469>`__: Fix "
"_Py_GetAllocatedBlocks() and sys.getallocatedblocks() when running on "
"valgrind."
msgstr ""
"`Issue #17469 <https://bugs.python.org/17469>`__: Fix "
"_Py_GetAllocatedBlocks() and sys.getallocatedblocks() when running on "
"valgrind."

#: ../../../Misc/NEWS:8710
msgid ""
"`Issue #17619 <https://bugs.python.org/17619>`__: Make input() check for "
"Ctrl-C correctly on Windows."
msgstr ""
"`Issue #17619 <https://bugs.python.org/17619>`__: Make input() check for "
"Ctrl-C correctly on Windows."

#: ../../../Misc/NEWS:8712
msgid ""
"`Issue #17357 <https://bugs.python.org/17357>`__: Add missing verbosity "
"messages for -v/-vv that were lost during the importlib transition."
msgstr ""
"`Issue #17357 <https://bugs.python.org/17357>`__: Add missing verbosity "
"messages for -v/-vv that were lost during the importlib transition."

#: ../../../Misc/NEWS:8715
msgid ""
"`Issue #17610 <https://bugs.python.org/17610>`__: Don't rely on non-standard "
"behavior of the C qsort() function."
msgstr ""
"`Issue #17610 <https://bugs.python.org/17610>`__: Don't rely on non-standard "
"behavior of the C qsort() function."

#: ../../../Misc/NEWS:8717
msgid ""
"`Issue #17323 <https://bugs.python.org/17323>`__: The \"[X refs, Y blocks]\" "
"printed by debug builds has been disabled by default.  It can be re-enabled "
"with the `-X showrefcount` option."
msgstr ""
"`Issue #17323 <https://bugs.python.org/17323>`__: The \"[X refs, Y blocks]\" "
"printed by debug builds has been disabled by default.  It can be re-enabled "
"with the `-X showrefcount` option."

#: ../../../Misc/NEWS:8720
msgid ""
"`Issue #17328 <https://bugs.python.org/17328>`__: Fix possible refleak in "
"dict.setdefault."
msgstr ""
"`Issue #17328 <https://bugs.python.org/17328>`__: Fix possible refleak in "
"dict.setdefault."

#: ../../../Misc/NEWS:8722
msgid ""
"`Issue #17275 <https://bugs.python.org/17275>`__: Corrected class name in "
"init error messages of the C version of BufferedWriter and BufferedRandom."
msgstr ""
"`Issue #17275 <https://bugs.python.org/17275>`__: Corrected class name in "
"init error messages of the C version of BufferedWriter and BufferedRandom."

#: ../../../Misc/NEWS:8725
msgid ""
"`Issue #7963 <https://bugs.python.org/7963>`__: Fixed misleading error "
"message that issued when object is called without arguments."
msgstr ""
"`Issue #7963 <https://bugs.python.org/7963>`__: Fixed misleading error "
"message that issued when object is called without arguments."

#: ../../../Misc/NEWS:8728
msgid ""
"`Issue #8745 <https://bugs.python.org/8745>`__: Small speed up zipimport on "
"Windows. Patch by Catalin Iacob."
msgstr ""
"`Issue #8745 <https://bugs.python.org/8745>`__: Small speed up zipimport on "
"Windows. Patch by Catalin Iacob."

#: ../../../Misc/NEWS:8730
msgid ""
"`Issue #5308 <https://bugs.python.org/5308>`__: Raise ValueError when "
"marshalling too large object (a sequence with size >= 2**31), instead of "
"producing illegal marshal data."
msgstr ""
"`Issue #5308 <https://bugs.python.org/5308>`__: Raise ValueError when "
"marshalling too large object (a sequence with size >= 2**31), instead of "
"producing illegal marshal data."

#: ../../../Misc/NEWS:8733
msgid ""
"`Issue #12983 <https://bugs.python.org/12983>`__: Bytes literals with "
"invalid ``\\x`` escape now raise a SyntaxError and a full traceback "
"including line number."
msgstr ""
"`Issue #12983 <https://bugs.python.org/12983>`__: Bytes literals with "
"invalid ``\\x`` escape now raise a SyntaxError and a full traceback "
"including line number."

#: ../../../Misc/NEWS:8736
msgid ""
"`Issue #16967 <https://bugs.python.org/16967>`__: In function definition, "
"evaluate positional defaults before keyword-only defaults."
msgstr ""
"`Issue #16967 <https://bugs.python.org/16967>`__: In function definition, "
"evaluate positional defaults before keyword-only defaults."

#: ../../../Misc/NEWS:8739
msgid ""
"`Issue #17173 <https://bugs.python.org/17173>`__: Remove uses of locale-"
"dependent C functions (isalpha() etc.) in the interpreter."
msgstr ""
"`Issue #17173 <https://bugs.python.org/17173>`__: Remove uses of locale-"
"dependent C functions (isalpha() etc.) in the interpreter."

#: ../../../Misc/NEWS:8742
msgid ""
"`Issue #17137 <https://bugs.python.org/17137>`__: When a Unicode string is "
"resized, the internal wide character string (wstr) format is now cleared."
msgstr ""
"`Issue #17137 <https://bugs.python.org/17137>`__: When a Unicode string is "
"resized, the internal wide character string (wstr) format is now cleared."

#: ../../../Misc/NEWS:8745
msgid ""
"`Issue #17043 <https://bugs.python.org/17043>`__: The unicode-internal "
"decoder no longer read past the end of input buffer."
msgstr ""
"`Issue #17043 <https://bugs.python.org/17043>`__: The unicode-internal "
"decoder no longer read past the end of input buffer."

#: ../../../Misc/NEWS:8748
msgid ""
"`Issue #17098 <https://bugs.python.org/17098>`__: All modules now have "
"__loader__ set even if they pre-exist the bootstrapping of importlib."
msgstr ""
"`Issue #17098 <https://bugs.python.org/17098>`__: All modules now have "
"__loader__ set even if they pre-exist the bootstrapping of importlib."

#: ../../../Misc/NEWS:8751
msgid ""
"`Issue #16979 <https://bugs.python.org/16979>`__: Fix error handling bugs in "
"the unicode-escape-decode decoder."
msgstr ""
"`Issue #16979 <https://bugs.python.org/16979>`__: Fix error handling bugs in "
"the unicode-escape-decode decoder."

#: ../../../Misc/NEWS:8753
msgid ""
"`Issue #16772 <https://bugs.python.org/16772>`__: The base argument to the "
"int constructor no longer accepts floats, or other non-integer objects with "
"an __int__ method.  Objects with an __index__ method are now accepted."
msgstr ""
"`Issue #16772 <https://bugs.python.org/16772>`__: The base argument to the "
"int constructor no longer accepts floats, or other non-integer objects with "
"an __int__ method.  Objects with an __index__ method are now accepted."

#: ../../../Misc/NEWS:8757
msgid ""
"`Issue #10156 <https://bugs.python.org/10156>`__: In the interpreter's "
"initialization phase, unicode globals are now initialized dynamically as "
"needed."
msgstr ""
"`Issue #10156 <https://bugs.python.org/10156>`__: In the interpreter's "
"initialization phase, unicode globals are now initialized dynamically as "
"needed."

#: ../../../Misc/NEWS:8760
msgid ""
"`Issue #16980 <https://bugs.python.org/16980>`__: Fix processing of escaped "
"non-ascii bytes in the unicode-escape-decode decoder."
msgstr ""
"`Issue #16980 <https://bugs.python.org/16980>`__: Fix processing of escaped "
"non-ascii bytes in the unicode-escape-decode decoder."

#: ../../../Misc/NEWS:8763
msgid ""
"`Issue #16975 <https://bugs.python.org/16975>`__: Fix error handling bug in "
"the escape-decode bytes decoder."
msgstr ""
"`Issue #16975 <https://bugs.python.org/16975>`__: Fix error handling bug in "
"the escape-decode bytes decoder."

#: ../../../Misc/NEWS:8765
msgid ""
"`Issue #14850 <https://bugs.python.org/14850>`__: Now a charmap decoder "
"treats U+FFFE as \"undefined mapping\" in any mapping, not only in a string."
msgstr ""
"`Issue #14850 <https://bugs.python.org/14850>`__: Now a charmap decoder "
"treats U+FFFE as \"undefined mapping\" in any mapping, not only in a string."

#: ../../../Misc/NEWS:8768
msgid ""
"`Issue #16613 <https://bugs.python.org/16613>`__: Add *m* argument to "
"``collections.Chainmap.new_child`` to allow the new child map to be "
"specified explicitly."
msgstr ""
"`Issue #16613 <https://bugs.python.org/16613>`__: Add *m* argument to "
"``collections.Chainmap.new_child`` to allow the new child map to be "
"specified explicitly."

#: ../../../Misc/NEWS:8771
msgid ""
"`Issue #16730 <https://bugs.python.org/16730>`__: importlib.machinery."
"FileFinder now no longers raises an exception when trying to populate its "
"cache and it finds out the directory is unreadable or has turned into a "
"file. Reported and diagnosed by David Pritchard."
msgstr ""
"`Issue #16730 <https://bugs.python.org/16730>`__: importlib.machinery."
"FileFinder now no longers raises an exception when trying to populate its "
"cache and it finds out the directory is unreadable or has turned into a "
"file. Reported and diagnosed by David Pritchard."

#: ../../../Misc/NEWS:8776
msgid ""
"`Issue #16906 <https://bugs.python.org/16906>`__: Fix a logic error that "
"prevented most static strings from being cleared."
msgstr ""
"`Issue #16906 <https://bugs.python.org/16906>`__: Fix a logic error that "
"prevented most static strings from being cleared."

#: ../../../Misc/NEWS:8779
msgid ""
"`Issue #11461 <https://bugs.python.org/11461>`__: Fix the incremental UTF-16 "
"decoder. Original patch by Amaury Forgeot d'Arc."
msgstr ""
"`Issue #11461 <https://bugs.python.org/11461>`__: Fix the incremental UTF-16 "
"decoder. Original patch by Amaury Forgeot d'Arc."

#: ../../../Misc/NEWS:8782
msgid ""
"`Issue #16856 <https://bugs.python.org/16856>`__: Fix a segmentation fault "
"from calling repr() on a dict with a key whose repr raise an exception."
msgstr ""
"`Issue #16856 <https://bugs.python.org/16856>`__: Fix a segmentation fault "
"from calling repr() on a dict with a key whose repr raise an exception."

#: ../../../Misc/NEWS:8785
msgid ""
"`Issue #16367 <https://bugs.python.org/16367>`__: Fix FileIO.readall() on "
"Windows for files larger than 2 GB."
msgstr ""
"`Issue #16367 <https://bugs.python.org/16367>`__: Fix FileIO.readall() on "
"Windows for files larger than 2 GB."

#: ../../../Misc/NEWS:8787
msgid ""
"`Issue #16761 <https://bugs.python.org/16761>`__: Calling int() with base "
"argument only now raises TypeError."
msgstr ""
"`Issue #16761 <https://bugs.python.org/16761>`__: Calling int() with base "
"argument only now raises TypeError."

#: ../../../Misc/NEWS:8789
msgid ""
"`Issue #16759 <https://bugs.python.org/16759>`__: Support the full DWORD "
"(unsigned long) range in Reg2Py when retrieving a REG_DWORD value. This "
"corrects functions like winreg.QueryValueEx that may have been returning "
"truncated values."
msgstr ""
"`Issue #16759 <https://bugs.python.org/16759>`__: Support the full DWORD "
"(unsigned long) range in Reg2Py when retrieving a REG_DWORD value. This "
"corrects functions like winreg.QueryValueEx that may have been returning "
"truncated values."

#: ../../../Misc/NEWS:8793
msgid ""
"`Issue #14420 <https://bugs.python.org/14420>`__: Support the full DWORD "
"(unsigned long) range in Py2Reg when passed a REG_DWORD value. Fixes "
"OverflowError in winreg.SetValueEx."
msgstr ""
"`Issue #14420 <https://bugs.python.org/14420>`__: Support the full DWORD "
"(unsigned long) range in Py2Reg when passed a REG_DWORD value. Fixes "
"OverflowError in winreg.SetValueEx."

#: ../../../Misc/NEWS:8796
msgid ""
"`Issue #11939 <https://bugs.python.org/11939>`__: Set the st_dev attribute "
"of stat_result to allow Windows to take advantage of the os.path.samefile/"
"sameopenfile/samestat implementations used by other platforms."
msgstr ""
"`Issue #11939 <https://bugs.python.org/11939>`__: Set the st_dev attribute "
"of stat_result to allow Windows to take advantage of the os.path.samefile/"
"sameopenfile/samestat implementations used by other platforms."

#: ../../../Misc/NEWS:8800
msgid ""
"`Issue #16772 <https://bugs.python.org/16772>`__: The int() constructor's "
"second argument (base) no longer accepts non integer values.  Consistent "
"with the behavior in Python 2."
msgstr ""
"`Issue #16772 <https://bugs.python.org/16772>`__: The int() constructor's "
"second argument (base) no longer accepts non integer values.  Consistent "
"with the behavior in Python 2."

#: ../../../Misc/NEWS:8803
msgid ""
"`Issue #14470 <https://bugs.python.org/14470>`__: Remove w9xpopen support "
"per PEP 11."
msgstr ""
"`Issue #14470 <https://bugs.python.org/14470>`__: Remove w9xpopen support "
"per PEP 11."

#: ../../../Misc/NEWS:8805
msgid ""
"`Issue #9856 <https://bugs.python.org/9856>`__: Replace deprecation warning "
"with raising TypeError in object.__format__. Patch by Florent Xicluna."
msgstr ""
"`Issue #9856 <https://bugs.python.org/9856>`__: Replace deprecation warning "
"with raising TypeError in object.__format__. Patch by Florent Xicluna."

#: ../../../Misc/NEWS:8808
msgid ""
"`Issue #16597 <https://bugs.python.org/16597>`__: In buffered and text IO, "
"call close() on the underlying stream if invoking flush() fails."
msgstr ""
"`Issue #16597 <https://bugs.python.org/16597>`__: In buffered and text IO, "
"call close() on the underlying stream if invoking flush() fails."

#: ../../../Misc/NEWS:8811
msgid ""
"`Issue #16722 <https://bugs.python.org/16722>`__: In the bytes() "
"constructor, try to call __bytes__ on the argument before __index__."
msgstr ""
"`Issue #16722 <https://bugs.python.org/16722>`__: In the bytes() "
"constructor, try to call __bytes__ on the argument before __index__."

#: ../../../Misc/NEWS:8814
msgid ""
"`Issue #16421 <https://bugs.python.org/16421>`__: loading multiple modules "
"from one shared object is now handled correctly (previously, the first "
"module loaded from that file was silently returned). Patch by V√°clav "
"≈†milauer."
msgstr ""
"`Issue #16421 <https://bugs.python.org/16421>`__: loading multiple modules "
"from one shared object is now handled correctly (previously, the first "
"module loaded from that file was silently returned). Patch by V√°clav "
"≈†milauer."

#: ../../../Misc/NEWS:8818
msgid ""
"`Issue #16602 <https://bugs.python.org/16602>`__: When a weakref's target "
"was part of a long deallocation chain, the object could remain reachable "
"through its weakref even though its refcount had dropped to zero."
msgstr ""
"`Issue #16602 <https://bugs.python.org/16602>`__: When a weakref's target "
"was part of a long deallocation chain, the object could remain reachable "
"through its weakref even though its refcount had dropped to zero."

#: ../../../Misc/NEWS:8822
msgid ""
"`Issue #16495 <https://bugs.python.org/16495>`__: Remove extraneous NULL "
"encoding check from bytes_decode()."
msgstr ""
"`Issue #16495 <https://bugs.python.org/16495>`__: Remove extraneous NULL "
"encoding check from bytes_decode()."

#: ../../../Misc/NEWS:8824
msgid ""
"`Issue #16619 <https://bugs.python.org/16619>`__: Create NameConstant AST "
"class to represent None, True, and False literals. As a result, these "
"constants are never loaded at runtime from builtins."
msgstr ""
"`Issue #16619 <https://bugs.python.org/16619>`__: Create NameConstant AST "
"class to represent None, True, and False literals. As a result, these "
"constants are never loaded at runtime from builtins."

#: ../../../Misc/NEWS:8828
msgid ""
"`Issue #16455 <https://bugs.python.org/16455>`__: On FreeBSD and Solaris, if "
"the locale is C, the ASCII/surrogateescape codec is now used (instead of the "
"locale encoding) to decode the command line arguments. This change fixes "
"inconsistencies with os.fsencode() and os.fsdecode(), because these "
"operating systems announce an ASCII locale encoding, but actually use the "
"ISO-8859-1 encoding in practice."
msgstr ""
"`Issue #16455 <https://bugs.python.org/16455>`__: On FreeBSD and Solaris, if "
"the locale is C, the ASCII/surrogateescape codec is now used (instead of the "
"locale encoding) to decode the command line arguments. This change fixes "
"inconsistencies with os.fsencode() and os.fsdecode(), because these "
"operating systems announce an ASCII locale encoding, but actually use the "
"ISO-8859-1 encoding in practice."

#: ../../../Misc/NEWS:8834
msgid ""
"`Issue #16562 <https://bugs.python.org/16562>`__: Optimize dict equality "
"testing.  Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16562 <https://bugs.python.org/16562>`__: Optimize dict equality "
"testing.  Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:8836
msgid ""
"`Issue #16588 <https://bugs.python.org/16588>`__: Silence unused-but-set "
"warnings in Python/thread_pthread"
msgstr ""
"`Issue #16588 <https://bugs.python.org/16588>`__: Silence unused-but-set "
"warnings in Python/thread_pthread"

#: ../../../Misc/NEWS:8838
msgid ""
"`Issue #16592 <https://bugs.python.org/16592>`__: stringlib_bytes_join "
"doesn't raise MemoryError on allocation failure."
msgstr ""
"`Issue #16592 <https://bugs.python.org/16592>`__: stringlib_bytes_join "
"doesn't raise MemoryError on allocation failure."

#: ../../../Misc/NEWS:8841
msgid ""
"`Issue #16546 <https://bugs.python.org/16546>`__: Fix: ast.YieldFrom "
"argument is now mandatory."
msgstr ""
"`Issue #16546 <https://bugs.python.org/16546>`__: Fix: ast.YieldFrom "
"argument is now mandatory."

#: ../../../Misc/NEWS:8843
msgid ""
"`Issue #16514 <https://bugs.python.org/16514>`__: Fix regression causing a "
"traceback when sys.path[0] is None (actually, any non-string or non-bytes "
"type)."
msgstr ""
"`Issue #16514 <https://bugs.python.org/16514>`__: Fix regression causing a "
"traceback when sys.path[0] is None (actually, any non-string or non-bytes "
"type)."

#: ../../../Misc/NEWS:8846
msgid ""
"`Issue #16306 <https://bugs.python.org/16306>`__: Fix multiple error "
"messages when unknown command line parameters where passed to the "
"interpreter.  Patch by Hieu Nguyen."
msgstr ""
"`Issue #16306 <https://bugs.python.org/16306>`__: Fix multiple error "
"messages when unknown command line parameters where passed to the "
"interpreter.  Patch by Hieu Nguyen."

#: ../../../Misc/NEWS:8849
msgid ""
"`Issue #16215 <https://bugs.python.org/16215>`__: Fix potential double "
"memory free in str.replace().  Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16215 <https://bugs.python.org/16215>`__: Fix potential double "
"memory free in str.replace().  Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:8852
msgid ""
"`Issue #16290 <https://bugs.python.org/16290>`__: A float return value from "
"the __complex__ special method is no longer accepted in the complex() "
"constructor."
msgstr ""
"`Issue #16290 <https://bugs.python.org/16290>`__: A float return value from "
"the __complex__ special method is no longer accepted in the complex() "
"constructor."

#: ../../../Misc/NEWS:8855
msgid ""
"`Issue #16416 <https://bugs.python.org/16416>`__: On Mac OS X, operating "
"system data are now always encoded/decoded to/from UTF-8/surrogateescape, "
"instead of the locale encoding (which may be ASCII if no locale environment "
"variable is set), to avoid inconsistencies with os.fsencode() and os."
"fsdecode() functions which are already using UTF-8/surrogateescape."
msgstr ""
"`Issue #16416 <https://bugs.python.org/16416>`__: On Mac OS X, operating "
"system data are now always encoded/decoded to/from UTF-8/surrogateescape, "
"instead of the locale encoding (which may be ASCII if no locale environment "
"variable is set), to avoid inconsistencies with os.fsencode() and os."
"fsdecode() functions which are already using UTF-8/surrogateescape."

#: ../../../Misc/NEWS:8861
msgid ""
"`Issue #16453 <https://bugs.python.org/16453>`__: Fix equality testing of "
"dead weakref objects."
msgstr ""
"`Issue #16453 <https://bugs.python.org/16453>`__: Fix equality testing of "
"dead weakref objects."

#: ../../../Misc/NEWS:8863
msgid ""
"`Issue #9535 <https://bugs.python.org/9535>`__: Fix pending signals that "
"have been received but not yet handled by Python to not persist after os."
"fork() in the child process."
msgstr ""
"`Issue #9535 <https://bugs.python.org/9535>`__: Fix pending signals that "
"have been received but not yet handled by Python to not persist after os."
"fork() in the child process."

#: ../../../Misc/NEWS:8866
msgid ""
"`Issue #14794 <https://bugs.python.org/14794>`__: Fix slice.indices to "
"return correct results for huge values, rather than raising OverflowError."
msgstr ""
"`Issue #14794 <https://bugs.python.org/14794>`__: Fix slice.indices to "
"return correct results for huge values, rather than raising OverflowError."

#: ../../../Misc/NEWS:8869
msgid ""
"`Issue #15001 <https://bugs.python.org/15001>`__: fix segfault on \"del sys."
"modules['__main__']\". Patch by Victor Stinner."
msgstr ""
"`Issue #15001 <https://bugs.python.org/15001>`__: fix segfault on \"del sys."
"modules['__main__']\". Patch by Victor Stinner."

#: ../../../Misc/NEWS:8872
msgid ""
"`Issue #8271 <https://bugs.python.org/8271>`__: the utf-8 decoder now "
"outputs the correct number of U+FFFD characters when used with the 'replace' "
"error handler on invalid utf-8 sequences.  Patch by Serhiy Storchaka, tests "
"by Ezio Melotti."
msgstr ""
"`Issue #8271 <https://bugs.python.org/8271>`__: the utf-8 decoder now "
"outputs the correct number of U+FFFD characters when used with the 'replace' "
"error handler on invalid utf-8 sequences.  Patch by Serhiy Storchaka, tests "
"by Ezio Melotti."

#: ../../../Misc/NEWS:8876
msgid ""
"`Issue #5765 <https://bugs.python.org/5765>`__: Apply a hard recursion limit "
"in the compiler instead of blowing the stack and segfaulting. Initial patch "
"by Andrea Griffini."
msgstr ""
"`Issue #5765 <https://bugs.python.org/5765>`__: Apply a hard recursion limit "
"in the compiler instead of blowing the stack and segfaulting. Initial patch "
"by Andrea Griffini."

#: ../../../Misc/NEWS:8879
msgid ""
"`Issue #16402 <https://bugs.python.org/16402>`__: When slicing a range, fix "
"shadowing of exceptions from __index__."
msgstr ""
"`Issue #16402 <https://bugs.python.org/16402>`__: When slicing a range, fix "
"shadowing of exceptions from __index__."

#: ../../../Misc/NEWS:8882
msgid ""
"`Issue #16336 <https://bugs.python.org/16336>`__: fix input checking in the "
"surrogatepass error handler. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16336 <https://bugs.python.org/16336>`__: fix input checking in the "
"surrogatepass error handler. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:8885
msgid ""
"`Issue #8401 <https://bugs.python.org/8401>`__: assigning an int to a "
"bytearray slice (e.g. b[3:4] = 5) now raises an error."
msgstr ""
"`Issue #8401 <https://bugs.python.org/8401>`__: assigning an int to a "
"bytearray slice (e.g. b[3:4] = 5) now raises an error."

#: ../../../Misc/NEWS:8888
msgid ""
"`Issue #7317 <https://bugs.python.org/7317>`__: Display full tracebacks when "
"an error occurs asynchronously. Patch by Alon Horev with update by Alexey "
"Kachayev."
msgstr ""
"`Issue #7317 <https://bugs.python.org/7317>`__: Display full tracebacks when "
"an error occurs asynchronously. Patch by Alon Horev with update by Alexey "
"Kachayev."

#: ../../../Misc/NEWS:8891
msgid ""
"`Issue #16309 <https://bugs.python.org/16309>`__: Make PYTHONPATH=\"\" "
"behavior the same as if PYTHONPATH not set at all."
msgstr ""
"`Issue #16309 <https://bugs.python.org/16309>`__: Make PYTHONPATH=\"\" "
"behavior the same as if PYTHONPATH not set at all."

#: ../../../Misc/NEWS:8894
msgid ""
"`Issue #10189 <https://bugs.python.org/10189>`__: Improve the error "
"reporting of SyntaxErrors related to global and nonlocal statements."
msgstr ""
"`Issue #10189 <https://bugs.python.org/10189>`__: Improve the error "
"reporting of SyntaxErrors related to global and nonlocal statements."

#: ../../../Misc/NEWS:8897
msgid ""
"Fix segfaults on setting __qualname__ on builtin types and attempting to "
"delete it on any type."
msgstr ""

#: ../../../Misc/NEWS:8900
msgid ""
"`Issue #14625 <https://bugs.python.org/14625>`__: Rewrite the UTF-32 "
"decoder. It is now 3x to 4x faster. Patch written by Serhiy Storchaka."
msgstr ""
"`Issue #14625 <https://bugs.python.org/14625>`__: Rewrite the UTF-32 "
"decoder. It is now 3x to 4x faster. Patch written by Serhiy Storchaka."

#: ../../../Misc/NEWS:8903
msgid ""
"`Issue #16345 <https://bugs.python.org/16345>`__: Fix an infinite loop when "
"``fromkeys`` on a dict subclass received a nonempty dict from the "
"constructor."
msgstr ""
"`Issue #16345 <https://bugs.python.org/16345>`__: Fix an infinite loop when "
"``fromkeys`` on a dict subclass received a nonempty dict from the "
"constructor."

#: ../../../Misc/NEWS:8906
msgid ""
"`Issue #16271 <https://bugs.python.org/16271>`__: Fix strange bugs that "
"resulted from __qualname__ appearing in a class's __dict__ and on type."
msgstr ""
"`Issue #16271 <https://bugs.python.org/16271>`__: Fix strange bugs that "
"resulted from __qualname__ appearing in a class's __dict__ and on type."

#: ../../../Misc/NEWS:8909
msgid ""
"`Issue #12805 <https://bugs.python.org/12805>`__: Make bytes.join and "
"bytearray.join faster when the separator is empty.  Patch by Serhiy "
"Storchaka."
msgstr ""
"`Issue #12805 <https://bugs.python.org/12805>`__: Make bytes.join and "
"bytearray.join faster when the separator is empty.  Patch by Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:8912
msgid ""
"`Issue #6074 <https://bugs.python.org/6074>`__: Ensure cached bytecode files "
"can always be updated by the user that created them, even when the source "
"file is read-only."
msgstr ""
"`Issue #6074 <https://bugs.python.org/6074>`__: Ensure cached bytecode files "
"can always be updated by the user that created them, even when the source "
"file is read-only."

#: ../../../Misc/NEWS:8915
msgid ""
"`Issue #15958 <https://bugs.python.org/15958>`__: bytes.join and bytearray."
"join now accept arbitrary buffer objects."
msgstr ""
"`Issue #15958 <https://bugs.python.org/15958>`__: bytes.join and bytearray."
"join now accept arbitrary buffer objects."

#: ../../../Misc/NEWS:8918
msgid ""
"`Issue #14783 <https://bugs.python.org/14783>`__: Improve int() docstring "
"and switch docstrings for str(), range(), and slice() to use multi-line "
"signatures."
msgstr ""
"`Issue #14783 <https://bugs.python.org/14783>`__: Improve int() docstring "
"and switch docstrings for str(), range(), and slice() to use multi-line "
"signatures."

#: ../../../Misc/NEWS:8921
msgid ""
"`Issue #16160 <https://bugs.python.org/16160>`__: Subclass support now works "
"for types.SimpleNamespace."
msgstr ""
"`Issue #16160 <https://bugs.python.org/16160>`__: Subclass support now works "
"for types.SimpleNamespace."

#: ../../../Misc/NEWS:8923
msgid ""
"`Issue #16148 <https://bugs.python.org/16148>`__: Implement PEP 424, adding "
"operator.length_hint and PyObject_LengthHint."
msgstr ""
"`Issue #16148 <https://bugs.python.org/16148>`__: Implement PEP 424, adding "
"operator.length_hint and PyObject_LengthHint."

#: ../../../Misc/NEWS:8926
msgid "Upgrade Unicode data (UCD) to version 6.2."
msgstr ""

#: ../../../Misc/NEWS:8928
msgid ""
"`Issue #15379 <https://bugs.python.org/15379>`__: Fix passing of non-BMP "
"characters as integers for the charmap decoder (already working as unicode "
"strings).  Patch by Serhiy Storchaka."
msgstr ""
"`Issue #15379 <https://bugs.python.org/15379>`__: Fix passing of non-BMP "
"characters as integers for the charmap decoder (already working as unicode "
"strings).  Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:8931
msgid ""
"`Issue #15144 <https://bugs.python.org/15144>`__: Fix possible integer "
"overflow when handling pointers as integer values, by using `Py_uintptr_t` "
"instead of `size_t`.  Patch by Serhiy Storchaka."
msgstr ""
"`Issue #15144 <https://bugs.python.org/15144>`__: Fix possible integer "
"overflow when handling pointers as integer values, by using `Py_uintptr_t` "
"instead of `size_t`.  Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:8935
msgid ""
"`Issue #15965 <https://bugs.python.org/15965>`__: Explicitly cast `AT_FDCWD` "
"as (int).  Required on Solaris 10 (which defines `AT_FDCWD` as "
"``0xffd19553``), harmless on other platforms."
msgstr ""
"`Issue #15965 <https://bugs.python.org/15965>`__: Explicitly cast `AT_FDCWD` "
"as (int).  Required on Solaris 10 (which defines `AT_FDCWD` as "
"``0xffd19553``), harmless on other platforms."

#: ../../../Misc/NEWS:8938
msgid ""
"`Issue #15839 <https://bugs.python.org/15839>`__: Convert SystemErrors in "
"`super()` to RuntimeErrors."
msgstr ""
"`Issue #15839 <https://bugs.python.org/15839>`__: Convert SystemErrors in "
"`super()` to RuntimeErrors."

#: ../../../Misc/NEWS:8940
msgid ""
"`Issue #15448 <https://bugs.python.org/15448>`__: Buffered IO now frees the "
"buffer when closed, instead of when deallocating."
msgstr ""
"`Issue #15448 <https://bugs.python.org/15448>`__: Buffered IO now frees the "
"buffer when closed, instead of when deallocating."

#: ../../../Misc/NEWS:8943
msgid ""
"`Issue #15846 <https://bugs.python.org/15846>`__: Fix SystemError which "
"happened when using `ast.parse()` in an exception handler on code with "
"syntax errors."
msgstr ""
"`Issue #15846 <https://bugs.python.org/15846>`__: Fix SystemError which "
"happened when using `ast.parse()` in an exception handler on code with "
"syntax errors."

#: ../../../Misc/NEWS:8946
msgid ""
"`Issue #15897 <https://bugs.python.org/15897>`__: zipimport.c doesn't check "
"return value of fseek(). Patch by Felipe Cruz."
msgstr ""
"`Issue #15897 <https://bugs.python.org/15897>`__: zipimport.c doesn't check "
"return value of fseek(). Patch by Felipe Cruz."

#: ../../../Misc/NEWS:8949
msgid ""
"`Issue #15801 <https://bugs.python.org/15801>`__: Make sure mappings passed "
"to '%' formatting are actually subscriptable."
msgstr ""
"`Issue #15801 <https://bugs.python.org/15801>`__: Make sure mappings passed "
"to '%' formatting are actually subscriptable."

#: ../../../Misc/NEWS:8952
msgid ""
"`Issue #15111 <https://bugs.python.org/15111>`__: __import__ should "
"propagate ImportError when raised as a side-effect of a module triggered "
"from using fromlist."
msgstr ""
"`Issue #15111 <https://bugs.python.org/15111>`__: __import__ should "
"propagate ImportError when raised as a side-effect of a module triggered "
"from using fromlist."

#: ../../../Misc/NEWS:8955
msgid ""
"`Issue #15022 <https://bugs.python.org/15022>`__: Add pickle and comparison "
"support to types.SimpleNamespace."
msgstr ""
"`Issue #15022 <https://bugs.python.org/15022>`__: Add pickle and comparison "
"support to types.SimpleNamespace."

#: ../../../Misc/NEWS:8960
msgid ""
"`Issue #4331 <https://bugs.python.org/4331>`__: Added functools."
"partialmethod (Initial patch by Alon Horev)"
msgstr ""
"`Issue #4331 <https://bugs.python.org/4331>`__: Added functools."
"partialmethod (Initial patch by Alon Horev)"

#: ../../../Misc/NEWS:8962
msgid ""
"`Issue #13461 <https://bugs.python.org/13461>`__: Fix a crash in the "
"TextIOWrapper.tell method on 64-bit platforms.  Patch by Yogesh Chaudhari."
msgstr ""
"`Issue #13461 <https://bugs.python.org/13461>`__: Fix a crash in the "
"TextIOWrapper.tell method on 64-bit platforms.  Patch by Yogesh Chaudhari."

#: ../../../Misc/NEWS:8965
msgid ""
"`Issue #18681 <https://bugs.python.org/18681>`__: Fix a NameError in "
"importlib.reload() (noticed by Weizhao Li)."
msgstr ""
"`Issue #18681 <https://bugs.python.org/18681>`__: Fix a NameError in "
"importlib.reload() (noticed by Weizhao Li)."

#: ../../../Misc/NEWS:8967
msgid ""
"`Issue #14323 <https://bugs.python.org/14323>`__: Expanded the number of "
"digits in the coefficients for the RGB -- YIQ conversions so that they match "
"the FCC NTSC versions."
msgstr ""
"`Issue #14323 <https://bugs.python.org/14323>`__: Expanded the number of "
"digits in the coefficients for the RGB -- YIQ conversions so that they match "
"the FCC NTSC versions."

#: ../../../Misc/NEWS:8970
msgid ""
"`Issue #17998 <https://bugs.python.org/17998>`__: Fix an internal error in "
"regular expression engine."
msgstr ""
"`Issue #17998 <https://bugs.python.org/17998>`__: Fix an internal error in "
"regular expression engine."

#: ../../../Misc/NEWS:8972
msgid ""
"`Issue #17557 <https://bugs.python.org/17557>`__: Fix os.getgroups() to work "
"with the modified behavior of getgroups(2) on OS X 10.8.  Original patch by "
"Mateusz Lenik."
msgstr ""
"`Issue #17557 <https://bugs.python.org/17557>`__: Fix os.getgroups() to work "
"with the modified behavior of getgroups(2) on OS X 10.8.  Original patch by "
"Mateusz Lenik."

#: ../../../Misc/NEWS:8975
msgid ""
"`Issue #18608 <https://bugs.python.org/18608>`__: Avoid keeping a strong "
"reference to the locale module inside the _io module."
msgstr ""
"`Issue #18608 <https://bugs.python.org/18608>`__: Avoid keeping a strong "
"reference to the locale module inside the _io module."

#: ../../../Misc/NEWS:8978
msgid ""
"`Issue #18619 <https://bugs.python.org/18619>`__: Fix atexit leaking "
"callbacks registered from sub-interpreters, and make it GC-aware."
msgstr ""
"`Issue #18619 <https://bugs.python.org/18619>`__: Fix atexit leaking "
"callbacks registered from sub-interpreters, and make it GC-aware."

#: ../../../Misc/NEWS:8981
msgid ""
"`Issue #15699 <https://bugs.python.org/15699>`__: The readline module now "
"uses PEP 3121-style module initialization, so as to reclaim allocated "
"resources (Python callbacks) at shutdown.  Original patch by Robin Schreiber."
msgstr ""
"`Issue #15699 <https://bugs.python.org/15699>`__: The readline module now "
"uses PEP 3121-style module initialization, so as to reclaim allocated "
"resources (Python callbacks) at shutdown.  Original patch by Robin Schreiber."

#: ../../../Misc/NEWS:8985
msgid ""
"`Issue #17616 <https://bugs.python.org/17616>`__: wave.open now supports the "
"context management protocol."
msgstr ""
"`Issue #17616 <https://bugs.python.org/17616>`__: wave.open now supports the "
"context management protocol."

#: ../../../Misc/NEWS:8987
msgid ""
"`Issue #18599 <https://bugs.python.org/18599>`__: Fix name attribute of "
"_sha1.sha1() object. It now returns 'SHA1' instead of 'SHA'."
msgstr ""
"`Issue #18599 <https://bugs.python.org/18599>`__: Fix name attribute of "
"_sha1.sha1() object. It now returns 'SHA1' instead of 'SHA'."

#: ../../../Misc/NEWS:8990
msgid ""
"`Issue #13266 <https://bugs.python.org/13266>`__: Added inspect.unwrap to "
"easily unravel __wrapped__ chains (initial patch by Daniel Urban and Aaron "
"Iles)"
msgstr ""
"`Issue #13266 <https://bugs.python.org/13266>`__: Added inspect.unwrap to "
"easily unravel __wrapped__ chains (initial patch by Daniel Urban and Aaron "
"Iles)"

#: ../../../Misc/NEWS:8993
msgid ""
"`Issue #18561 <https://bugs.python.org/18561>`__: Skip name in ctypes' "
"_build_callargs() if name is NULL."
msgstr ""
"`Issue #18561 <https://bugs.python.org/18561>`__: Skip name in ctypes' "
"_build_callargs() if name is NULL."

#: ../../../Misc/NEWS:8995
msgid ""
"`Issue #18559 <https://bugs.python.org/18559>`__: Fix NULL pointer "
"dereference error in _pickle module"
msgstr ""
"`Issue #18559 <https://bugs.python.org/18559>`__: Fix NULL pointer "
"dereference error in _pickle module"

#: ../../../Misc/NEWS:8997
msgid ""
"`Issue #18556 <https://bugs.python.org/18556>`__: Check the return type of "
"PyUnicode_AsWideChar() in ctype's U_set()."
msgstr ""
"`Issue #18556 <https://bugs.python.org/18556>`__: Check the return type of "
"PyUnicode_AsWideChar() in ctype's U_set()."

#: ../../../Misc/NEWS:9000
msgid ""
"`Issue #17818 <https://bugs.python.org/17818>`__: aifc.getparams now returns "
"a namedtuple."
msgstr ""
"`Issue #17818 <https://bugs.python.org/17818>`__: aifc.getparams now returns "
"a namedtuple."

#: ../../../Misc/NEWS:9002
msgid ""
"`Issue #18549 <https://bugs.python.org/18549>`__: Eliminate dead code in "
"socket_ntohl()"
msgstr ""
"`Issue #18549 <https://bugs.python.org/18549>`__: Eliminate dead code in "
"socket_ntohl()"

#: ../../../Misc/NEWS:9004
msgid ""
"`Issue #18530 <https://bugs.python.org/18530>`__: Remove additional stat "
"call from posixpath.ismount. Patch by Alex Gaynor."
msgstr ""
"`Issue #18530 <https://bugs.python.org/18530>`__: Remove additional stat "
"call from posixpath.ismount. Patch by Alex Gaynor."

#: ../../../Misc/NEWS:9007
msgid ""
"`Issue #18514 <https://bugs.python.org/18514>`__: Fix unreachable "
"Py_DECREF() call in PyCData_FromBaseObj()"
msgstr ""
"`Issue #18514 <https://bugs.python.org/18514>`__: Fix unreachable "
"Py_DECREF() call in PyCData_FromBaseObj()"

#: ../../../Misc/NEWS:9009
msgid ""
"`Issue #9177 <https://bugs.python.org/9177>`__: Calling read() or write() "
"now raises ValueError, not AttributeError, on a closed SSL socket.  Patch by "
"Senko Rasic."
msgstr ""
"`Issue #9177 <https://bugs.python.org/9177>`__: Calling read() or write() "
"now raises ValueError, not AttributeError, on a closed SSL socket.  Patch by "
"Senko Rasic."

#: ../../../Misc/NEWS:9012
msgid ""
"`Issue #18513 <https://bugs.python.org/18513>`__: Fix behaviour of cmath."
"rect w.r.t. signed zeros on OS X 10.8 + gcc."
msgstr ""
"`Issue #18513 <https://bugs.python.org/18513>`__: Fix behaviour of cmath."
"rect w.r.t. signed zeros on OS X 10.8 + gcc."

#: ../../../Misc/NEWS:9015
msgid ""
"`Issue #18479 <https://bugs.python.org/18479>`__: Changed venv Activate.ps1 "
"to make deactivate a function, and removed Deactivate.ps1."
msgstr ""
"`Issue #18479 <https://bugs.python.org/18479>`__: Changed venv Activate.ps1 "
"to make deactivate a function, and removed Deactivate.ps1."

#: ../../../Misc/NEWS:9018
msgid ""
"`Issue #18480 <https://bugs.python.org/18480>`__: Add missing call to "
"PyType_Ready to the _elementtree extension."
msgstr ""
"`Issue #18480 <https://bugs.python.org/18480>`__: Add missing call to "
"PyType_Ready to the _elementtree extension."

#: ../../../Misc/NEWS:9020
msgid ""
"`Issue #17778 <https://bugs.python.org/17778>`__: Fix test discovery for "
"test_multiprocessing. (Patch by Zachary Ware.)"
msgstr ""
"`Issue #17778 <https://bugs.python.org/17778>`__: Fix test discovery for "
"test_multiprocessing. (Patch by Zachary Ware.)"

#: ../../../Misc/NEWS:9023
msgid ""
"`Issue #18393 <https://bugs.python.org/18393>`__: The private module "
"_gestalt and private functions platform._mac_ver_gestalt, platform."
"_mac_ver_lookup and platform._bcd2str have been removed. This does not "
"affect the public interface of the platform module."
msgstr ""
"`Issue #18393 <https://bugs.python.org/18393>`__: The private module "
"_gestalt and private functions platform._mac_ver_gestalt, platform."
"_mac_ver_lookup and platform._bcd2str have been removed. This does not "
"affect the public interface of the platform module."

#: ../../../Misc/NEWS:9028
msgid ""
"`Issue #17482 <https://bugs.python.org/17482>`__: functools.update_wrapper "
"(and functools.wraps) now set the __wrapped__ attribute correctly even if "
"the underlying function has a __wrapped__ attribute set."
msgstr ""
"`Issue #17482 <https://bugs.python.org/17482>`__: functools.update_wrapper "
"(and functools.wraps) now set the __wrapped__ attribute correctly even if "
"the underlying function has a __wrapped__ attribute set."

#: ../../../Misc/NEWS:9032
msgid ""
"`Issue #18431 <https://bugs.python.org/18431>`__: The new email header "
"parser now decodes RFC2047 encoded words in structured headers."
msgstr ""
"`Issue #18431 <https://bugs.python.org/18431>`__: The new email header "
"parser now decodes RFC2047 encoded words in structured headers."

#: ../../../Misc/NEWS:9035
msgid ""
"`Issue #18432 <https://bugs.python.org/18432>`__: The sched module's queue "
"method was incorrectly returning an iterator instead of a list."
msgstr ""
"`Issue #18432 <https://bugs.python.org/18432>`__: The sched module's queue "
"method was incorrectly returning an iterator instead of a list."

#: ../../../Misc/NEWS:9038
msgid ""
"`Issue #18044 <https://bugs.python.org/18044>`__: The new email header "
"parser was mis-parsing encoded words where an encoded character immediately "
"followed the '?' that follows the CTE character, resulting in a decoding "
"failure.  They are now decoded correctly."
msgstr ""
"`Issue #18044 <https://bugs.python.org/18044>`__: The new email header "
"parser was mis-parsing encoded words where an encoded character immediately "
"followed the '?' that follows the CTE character, resulting in a decoding "
"failure.  They are now decoded correctly."

#: ../../../Misc/NEWS:9042
msgid ""
"`Issue #18101 <https://bugs.python.org/18101>`__: Tcl.split() now process "
"strings nested in a tuple as it do with byte strings."
msgstr ""
"`Issue #18101 <https://bugs.python.org/18101>`__: Tcl.split() now process "
"strings nested in a tuple as it do with byte strings."

#: ../../../Misc/NEWS:9045
msgid ""
"`Issue #18116 <https://bugs.python.org/18116>`__: getpass was always getting "
"an error when testing /dev/tty, and thus was always falling back to stdin, "
"and would then raise an exception if stdin could not be used (such as /dev/"
"null).  It also leaked an open file. All of these issues are now fixed."
msgstr ""
"`Issue #18116 <https://bugs.python.org/18116>`__: getpass was always getting "
"an error when testing /dev/tty, and thus was always falling back to stdin, "
"and would then raise an exception if stdin could not be used (such as /dev/"
"null).  It also leaked an open file. All of these issues are now fixed."

#: ../../../Misc/NEWS:9050
msgid ""
"`Issue #17198 <https://bugs.python.org/17198>`__: Fix a NameError in the dbm "
"module.  Patch by Valentina Mukhamedzhanova."
msgstr ""
"`Issue #17198 <https://bugs.python.org/17198>`__: Fix a NameError in the dbm "
"module.  Patch by Valentina Mukhamedzhanova."

#: ../../../Misc/NEWS:9053
msgid ""
"`Issue #18013 <https://bugs.python.org/18013>`__: Fix cgi.FieldStorage to "
"parse the W3C sample form."
msgstr ""
"`Issue #18013 <https://bugs.python.org/18013>`__: Fix cgi.FieldStorage to "
"parse the W3C sample form."

#: ../../../Misc/NEWS:9055
msgid ""
"`Issue #18020 <https://bugs.python.org/18020>`__: improve html.escape speed "
"by an order of magnitude. Patch by Matt Bryant."
msgstr ""
"`Issue #18020 <https://bugs.python.org/18020>`__: improve html.escape speed "
"by an order of magnitude. Patch by Matt Bryant."

#: ../../../Misc/NEWS:9058
msgid ""
"`Issue #18347 <https://bugs.python.org/18347>`__: ElementTree's html "
"serializer now preserves the case of closing tags."
msgstr ""
"`Issue #18347 <https://bugs.python.org/18347>`__: ElementTree's html "
"serializer now preserves the case of closing tags."

#: ../../../Misc/NEWS:9061
msgid ""
"`Issue #17261 <https://bugs.python.org/17261>`__: Ensure multiprocessing's "
"proxies use proper address."
msgstr ""
"`Issue #17261 <https://bugs.python.org/17261>`__: Ensure multiprocessing's "
"proxies use proper address."

#: ../../../Misc/NEWS:9063
msgid ""
"`Issue #18343 <https://bugs.python.org/18343>`__: faulthandler.register() "
"now keeps the previous signal handler when the function is called twice, so "
"faulthandler.unregister() restores correctly the original signal handler."
msgstr ""
"`Issue #18343 <https://bugs.python.org/18343>`__: faulthandler.register() "
"now keeps the previous signal handler when the function is called twice, so "
"faulthandler.unregister() restores correctly the original signal handler."

#: ../../../Misc/NEWS:9067
msgid ""
"`Issue #17097 <https://bugs.python.org/17097>`__: Make multiprocessing "
"ignore EINTR."
msgstr ""
"`Issue #17097 <https://bugs.python.org/17097>`__: Make multiprocessing "
"ignore EINTR."

#: ../../../Misc/NEWS:9069
msgid ""
"`Issue #18339 <https://bugs.python.org/18339>`__: Negative ints keys in "
"unpickler.memo dict no longer cause a segfault inside the _pickle C "
"extension."
msgstr ""
"`Issue #18339 <https://bugs.python.org/18339>`__: Negative ints keys in "
"unpickler.memo dict no longer cause a segfault inside the _pickle C "
"extension."

#: ../../../Misc/NEWS:9072
msgid ""
"`Issue #18240 <https://bugs.python.org/18240>`__: The HMAC module is no "
"longer restricted to bytes and accepts any bytes-like object, e.g. "
"memoryview. Original patch by Jonas Borgstr√∂m."
msgstr ""
"`Issue #18240 <https://bugs.python.org/18240>`__: The HMAC module is no "
"longer restricted to bytes and accepts any bytes-like object, e.g. "
"memoryview. Original patch by Jonas Borgstr√∂m."

#: ../../../Misc/NEWS:9075
msgid ""
"`Issue #18224 <https://bugs.python.org/18224>`__: Removed pydoc script from "
"created venv, as it causes problems on Windows and adds no value over and "
"above python -m pydoc ..."
msgstr ""
"`Issue #18224 <https://bugs.python.org/18224>`__: Removed pydoc script from "
"created venv, as it causes problems on Windows and adds no value over and "
"above python -m pydoc ..."

#: ../../../Misc/NEWS:9078
msgid ""
"`Issue #18155 <https://bugs.python.org/18155>`__: The csv module now "
"correctly handles csv files that use a delimiter character that has a "
"special meaning in regexes, instead of throwing an exception."
msgstr ""
"`Issue #18155 <https://bugs.python.org/18155>`__: The csv module now "
"correctly handles csv files that use a delimiter character that has a "
"special meaning in regexes, instead of throwing an exception."

#: ../../../Misc/NEWS:9082
msgid ""
"`Issue #14360 <https://bugs.python.org/14360>`__: encode_quopri can now be "
"successfully used as an encoder when constructing a MIMEApplication object."
msgstr ""
"`Issue #14360 <https://bugs.python.org/14360>`__: encode_quopri can now be "
"successfully used as an encoder when constructing a MIMEApplication object."

#: ../../../Misc/NEWS:9085
msgid ""
"`Issue #11390 <https://bugs.python.org/11390>`__: Add -o and -f command line "
"options to the doctest CLI to specify doctest options (and convert it to "
"using argparse)."
msgstr ""
"`Issue #11390 <https://bugs.python.org/11390>`__: Add -o and -f command line "
"options to the doctest CLI to specify doctest options (and convert it to "
"using argparse)."

#: ../../../Misc/NEWS:9088
msgid ""
"`Issue #18135 <https://bugs.python.org/18135>`__: ssl.SSLSocket.write() now "
"raises an OverflowError if the input string in longer than 2 gigabytes, and "
"ssl.SSLContext.load_cert_chain() raises a ValueError if the password is "
"longer than 2 gigabytes. The ssl module does not support partial write."
msgstr ""
"`Issue #18135 <https://bugs.python.org/18135>`__: ssl.SSLSocket.write() now "
"raises an OverflowError if the input string in longer than 2 gigabytes, and "
"ssl.SSLContext.load_cert_chain() raises a ValueError if the password is "
"longer than 2 gigabytes. The ssl module does not support partial write."

#: ../../../Misc/NEWS:9093
msgid ""
"`Issue #11016 <https://bugs.python.org/11016>`__: Add C implementation of "
"the stat module as _stat."
msgstr ""
"`Issue #11016 <https://bugs.python.org/11016>`__: Add C implementation of "
"the stat module as _stat."

#: ../../../Misc/NEWS:9095
msgid ""
"`Issue #18248 <https://bugs.python.org/18248>`__: Fix libffi build on AIX."
msgstr ""
"`Issue #18248 <https://bugs.python.org/18248>`__: Fix libffi build on AIX."

#: ../../../Misc/NEWS:9097
msgid ""
"`Issue #18259 <https://bugs.python.org/18259>`__: Declare sethostname in "
"socketmodule.c for AIX"
msgstr ""
"`Issue #18259 <https://bugs.python.org/18259>`__: Declare sethostname in "
"socketmodule.c for AIX"

#: ../../../Misc/NEWS:9099
msgid ""
"`Issue #18147 <https://bugs.python.org/18147>`__: Add diagnostic functions "
"to ssl.SSLContext(). get_ca_list() lists all loaded CA certificates and "
"cert_store_stats() returns amount of loaded X.509 certs, X.509 CA certs and "
"CRLs."
msgstr ""
"`Issue #18147 <https://bugs.python.org/18147>`__: Add diagnostic functions "
"to ssl.SSLContext(). get_ca_list() lists all loaded CA certificates and "
"cert_store_stats() returns amount of loaded X.509 certs, X.509 CA certs and "
"CRLs."

#: ../../../Misc/NEWS:9103
msgid ""
"`Issue #18167 <https://bugs.python.org/18167>`__: cgi.FieldStorage no longer "
"fails to handle multipart/form-data when ``\\r\\n`` appears at end of 65535 "
"bytes without other newlines."
msgstr ""
"`Issue #18167 <https://bugs.python.org/18167>`__: cgi.FieldStorage no longer "
"fails to handle multipart/form-data when ``\\r\\n`` appears at end of 65535 "
"bytes without other newlines."

#: ../../../Misc/NEWS:9106
msgid ""
"`Issue #18076 <https://bugs.python.org/18076>`__: Introduce importlib.util."
"decode_source()."
msgstr ""
"`Issue #18076 <https://bugs.python.org/18076>`__: Introduce importlib.util."
"decode_source()."

#: ../../../Misc/NEWS:9108
msgid ""
"`Issue #18357 <https://bugs.python.org/18357>`__: add tests for dictview set "
"difference. Patch by Fraser Tweedale."
msgstr ""
"`Issue #18357 <https://bugs.python.org/18357>`__: add tests for dictview set "
"difference. Patch by Fraser Tweedale."

#: ../../../Misc/NEWS:9111
msgid ""
"importlib.abc.SourceLoader.get_source() no longer changes SyntaxError or "
"UnicodeDecodeError into ImportError."
msgstr ""

#: ../../../Misc/NEWS:9114
msgid ""
"`Issue #18058 <https://bugs.python.org/18058>`__, 18057: Make the namespace "
"package loader meet the importlib.abc.InspectLoader ABC, allowing for "
"namespace packages to work with runpy."
msgstr ""
"`Issue #18058 <https://bugs.python.org/18058>`__, 18057: Make the namespace "
"package loader meet the importlib.abc.InspectLoader ABC, allowing for "
"namespace packages to work with runpy."

#: ../../../Misc/NEWS:9118
msgid ""
"`Issue #17177 <https://bugs.python.org/17177>`__: The imp module is pending "
"deprecation."
msgstr ""
"`Issue #17177 <https://bugs.python.org/17177>`__: The imp module is pending "
"deprecation."

#: ../../../Misc/NEWS:9120
msgid ""
"subprocess: Prevent a possible double close of parent pipe fds when the "
"subprocess exec runs into an error.  Prevent a regular multi-close of the /"
"dev/null fd when any of stdin, stdout and stderr was set to DEVNULL."
msgstr ""

#: ../../../Misc/NEWS:9124
msgid ""
"`Issue #18194 <https://bugs.python.org/18194>`__: Introduce importlib.util."
"cache_from_source() and source_from_cache() while documenting the equivalent "
"functions in imp as deprecated."
msgstr ""
"`Issue #18194 <https://bugs.python.org/18194>`__: Introduce importlib.util."
"cache_from_source() and source_from_cache() while documenting the equivalent "
"functions in imp as deprecated."

#: ../../../Misc/NEWS:9128
msgid ""
"`Issue #17907 <https://bugs.python.org/17907>`__: Document imp.new_module() "
"as deprecated in favour of types.ModuleType."
msgstr ""
"`Issue #17907 <https://bugs.python.org/17907>`__: Document imp.new_module() "
"as deprecated in favour of types.ModuleType."

#: ../../../Misc/NEWS:9131
msgid ""
"`Issue #18192 <https://bugs.python.org/18192>`__: Introduce importlib.util."
"MAGIC_NUMBER and document as deprecated imp.get_magic()."
msgstr ""
"`Issue #18192 <https://bugs.python.org/18192>`__: Introduce importlib.util."
"MAGIC_NUMBER and document as deprecated imp.get_magic()."

#: ../../../Misc/NEWS:9134
msgid ""
"`Issue #18149 <https://bugs.python.org/18149>`__: Add filecmp.clear_cache() "
"to manually clear the filecmp cache. Patch by Mark Levitt"
msgstr ""
"`Issue #18149 <https://bugs.python.org/18149>`__: Add filecmp.clear_cache() "
"to manually clear the filecmp cache. Patch by Mark Levitt"

#: ../../../Misc/NEWS:9137
msgid ""
"`Issue #18193 <https://bugs.python.org/18193>`__: Add importlib.reload()."
msgstr ""
"`Issue #18193 <https://bugs.python.org/18193>`__: Add importlib.reload()."

#: ../../../Misc/NEWS:9139
msgid ""
"`Issue #18157 <https://bugs.python.org/18157>`__: Stop using imp."
"load_module() in pydoc."
msgstr ""
"`Issue #18157 <https://bugs.python.org/18157>`__: Stop using imp."
"load_module() in pydoc."

#: ../../../Misc/NEWS:9141
msgid ""
"`Issue #16102 <https://bugs.python.org/16102>`__: Make uuid."
"_netbios_getnode() work again on Python 3."
msgstr ""
"`Issue #16102 <https://bugs.python.org/16102>`__: Make uuid."
"_netbios_getnode() work again on Python 3."

#: ../../../Misc/NEWS:9143
msgid ""
"`Issue #17134 <https://bugs.python.org/17134>`__: Add ssl.enum_cert_store() "
"as interface to Windows' cert store."
msgstr ""
"`Issue #17134 <https://bugs.python.org/17134>`__: Add ssl.enum_cert_store() "
"as interface to Windows' cert store."

#: ../../../Misc/NEWS:9145
msgid ""
"`Issue #18143 <https://bugs.python.org/18143>`__: Implement ssl."
"get_default_verify_paths() in order to debug the default locations for "
"cafile and capath."
msgstr ""
"`Issue #18143 <https://bugs.python.org/18143>`__: Implement ssl."
"get_default_verify_paths() in order to debug the default locations for "
"cafile and capath."

#: ../../../Misc/NEWS:9148
msgid ""
"`Issue #17314 <https://bugs.python.org/17314>`__: Move multiprocessing."
"forking over to importlib."
msgstr ""
"`Issue #17314 <https://bugs.python.org/17314>`__: Move multiprocessing."
"forking over to importlib."

#: ../../../Misc/NEWS:9150
msgid ""
"`Issue #11959 <https://bugs.python.org/11959>`__: SMTPServer and SMTPChannel "
"now take an optional map, use of which avoids affecting global state."
msgstr ""
"`Issue #11959 <https://bugs.python.org/11959>`__: SMTPServer and SMTPChannel "
"now take an optional map, use of which avoids affecting global state."

#: ../../../Misc/NEWS:9153
msgid ""
"`Issue #18109 <https://bugs.python.org/18109>`__: os.uname() now decodes "
"fields from the locale encoding, and socket.gethostname() now decodes the "
"hostname from the locale encoding, instead of using the UTF-8 encoding in "
"strict mode."
msgstr ""
"`Issue #18109 <https://bugs.python.org/18109>`__: os.uname() now decodes "
"fields from the locale encoding, and socket.gethostname() now decodes the "
"hostname from the locale encoding, instead of using the UTF-8 encoding in "
"strict mode."

#: ../../../Misc/NEWS:9157
msgid ""
"`Issue #18089 <https://bugs.python.org/18089>`__: Implement importlib.abc."
"InspectLoader.load_module."
msgstr ""
"`Issue #18089 <https://bugs.python.org/18089>`__: Implement importlib.abc."
"InspectLoader.load_module."

#: ../../../Misc/NEWS:9159
msgid ""
"`Issue #18088 <https://bugs.python.org/18088>`__: Introduce importlib.abc."
"Loader.init_module_attrs for setting module attributes. Leads to the pending "
"deprecation of importlib.util.module_for_loader."
msgstr ""
"`Issue #18088 <https://bugs.python.org/18088>`__: Introduce importlib.abc."
"Loader.init_module_attrs for setting module attributes. Leads to the pending "
"deprecation of importlib.util.module_for_loader."

#: ../../../Misc/NEWS:9163
msgid ""
"`Issue #17403 <https://bugs.python.org/17403>`__: urllib.parse.robotparser "
"normalizes the urls before adding to ruleline. This helps in handling "
"certain types invalid urls in a conservative manner. Patch contributed by "
"Mher Movsisyan."
msgstr ""
"`Issue #17403 <https://bugs.python.org/17403>`__: urllib.parse.robotparser "
"normalizes the urls before adding to ruleline. This helps in handling "
"certain types invalid urls in a conservative manner. Patch contributed by "
"Mher Movsisyan."

#: ../../../Misc/NEWS:9167
msgid ""
"`Issue #18070 <https://bugs.python.org/18070>`__: Have importlib.util."
"module_for_loader() set attributes unconditionally in order to properly "
"support reloading."
msgstr ""
"`Issue #18070 <https://bugs.python.org/18070>`__: Have importlib.util."
"module_for_loader() set attributes unconditionally in order to properly "
"support reloading."

#: ../../../Misc/NEWS:9170
msgid ""
"Added importlib.util.module_to_load to return a context manager to provide "
"the proper module object to load."
msgstr ""

#: ../../../Misc/NEWS:9173
msgid ""
"`Issue #18025 <https://bugs.python.org/18025>`__: Fixed a segfault in io."
"BufferedIOBase.readinto() when raw stream's read() returns more bytes than "
"requested."
msgstr ""
"`Issue #18025 <https://bugs.python.org/18025>`__: Fixed a segfault in io."
"BufferedIOBase.readinto() when raw stream's read() returns more bytes than "
"requested."

#: ../../../Misc/NEWS:9176
msgid ""
"`Issue #18011 <https://bugs.python.org/18011>`__: As was originally "
"intended, base64.b32decode() now raises a binascii.Error if there are non-"
"b32-alphabet characters present in the input string, instead of a TypeError."
msgstr ""
"`Issue #18011 <https://bugs.python.org/18011>`__: As was originally "
"intended, base64.b32decode() now raises a binascii.Error if there are non-"
"b32-alphabet characters present in the input string, instead of a TypeError."

#: ../../../Misc/NEWS:9180
msgid ""
"`Issue #18072 <https://bugs.python.org/18072>`__: Implement importlib.abc."
"InspectLoader.get_code() and importlib.abc.ExecutionLoader.get_code()."
msgstr ""
"`Issue #18072 <https://bugs.python.org/18072>`__: Implement importlib.abc."
"InspectLoader.get_code() and importlib.abc.ExecutionLoader.get_code()."

#: ../../../Misc/NEWS:9183
msgid ""
"`Issue #8240 <https://bugs.python.org/8240>`__: Set the "
"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER flag on SSL sockets."
msgstr ""
"`Issue #8240 <https://bugs.python.org/8240>`__: Set the "
"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER flag on SSL sockets."

#: ../../../Misc/NEWS:9186
msgid ""
"`Issue #17269 <https://bugs.python.org/17269>`__: Workaround for socket."
"getaddrinfo crash on MacOS X with port None or \"0\" and flags "
"AI_NUMERICSERV."
msgstr ""
"`Issue #17269 <https://bugs.python.org/17269>`__: Workaround for socket."
"getaddrinfo crash on MacOS X with port None or \"0\" and flags "
"AI_NUMERICSERV."

#: ../../../Misc/NEWS:9189
msgid ""
"`Issue #16986 <https://bugs.python.org/16986>`__: ElementTree now correctly "
"works with string input when the internal XML encoding is not UTF-8 or US-"
"ASCII."
msgstr ""
"`Issue #16986 <https://bugs.python.org/16986>`__: ElementTree now correctly "
"works with string input when the internal XML encoding is not UTF-8 or US-"
"ASCII."

#: ../../../Misc/NEWS:9192
msgid ""
"`Issue #17996 <https://bugs.python.org/17996>`__: socket module now exposes "
"AF_LINK constant on BSD and OSX."
msgstr ""
"`Issue #17996 <https://bugs.python.org/17996>`__: socket module now exposes "
"AF_LINK constant on BSD and OSX."

#: ../../../Misc/NEWS:9194
msgid ""
"`Issue #17900 <https://bugs.python.org/17900>`__: Allowed pickling of "
"recursive OrderedDicts.  Decreased pickled size and pickling time."
msgstr ""
"`Issue #17900 <https://bugs.python.org/17900>`__: Allowed pickling of "
"recursive OrderedDicts.  Decreased pickled size and pickling time."

#: ../../../Misc/NEWS:9197
msgid ""
"`Issue #17914 <https://bugs.python.org/17914>`__: Add os.cpu_count(). Patch "
"by Yogesh Chaudhari, based on an initial patch by Trent Nelson."
msgstr ""
"`Issue #17914 <https://bugs.python.org/17914>`__: Add os.cpu_count(). Patch "
"by Yogesh Chaudhari, based on an initial patch by Trent Nelson."

#: ../../../Misc/NEWS:9200
msgid ""
"`Issue #17812 <https://bugs.python.org/17812>`__: Fixed quadratic complexity "
"of base64.b32encode(). Optimize base64.b32encode() and base64.b32decode() "
"(speed up to 3x)."
msgstr ""
"`Issue #17812 <https://bugs.python.org/17812>`__: Fixed quadratic complexity "
"of base64.b32encode(). Optimize base64.b32encode() and base64.b32decode() "
"(speed up to 3x)."

#: ../../../Misc/NEWS:9203
msgid ""
"`Issue #17980 <https://bugs.python.org/17980>`__: Fix possible abuse of ssl."
"match_hostname() for denial of service using certificates with many "
"wildcards (CVE-2013-2099)."
msgstr ""
"`Issue #17980 <https://bugs.python.org/17980>`__: Fix possible abuse of ssl."
"match_hostname() for denial of service using certificates with many "
"wildcards (CVE-2013-2099)."

#: ../../../Misc/NEWS:9206
msgid ""
"`Issue #15758 <https://bugs.python.org/15758>`__: Fix FileIO.readall() so it "
"no longer has O(n**2) complexity."
msgstr ""
"`Issue #15758 <https://bugs.python.org/15758>`__: Fix FileIO.readall() so it "
"no longer has O(n**2) complexity."

#: ../../../Misc/NEWS:9208
msgid ""
"`Issue #14596 <https://bugs.python.org/14596>`__: The struct.Struct() "
"objects now use a more compact implementation."
msgstr ""
"`Issue #14596 <https://bugs.python.org/14596>`__: The struct.Struct() "
"objects now use a more compact implementation."

#: ../../../Misc/NEWS:9211
msgid ""
"`Issue #17981 <https://bugs.python.org/17981>`__: logging's SysLogHandler "
"now closes the socket when it catches socket OSErrors."
msgstr ""
"`Issue #17981 <https://bugs.python.org/17981>`__: logging's SysLogHandler "
"now closes the socket when it catches socket OSErrors."

#: ../../../Misc/NEWS:9214
msgid ""
"`Issue #17964 <https://bugs.python.org/17964>`__: Fix os.sysconf(): the "
"return type of the C sysconf() function is long, not int."
msgstr ""
"`Issue #17964 <https://bugs.python.org/17964>`__: Fix os.sysconf(): the "
"return type of the C sysconf() function is long, not int."

#: ../../../Misc/NEWS:9217
msgid "Fix typos in the multiprocessing module."
msgstr ""

#: ../../../Misc/NEWS:9219
msgid ""
"`Issue #17754 <https://bugs.python.org/17754>`__: Make ctypes.util."
"find_library() independent of the locale."
msgstr ""
"`Issue #17754 <https://bugs.python.org/17754>`__: Make ctypes.util."
"find_library() independent of the locale."

#: ../../../Misc/NEWS:9221
msgid ""
"`Issue #17968 <https://bugs.python.org/17968>`__: Fix memory leak in os."
"listxattr()."
msgstr ""
"`Issue #17968 <https://bugs.python.org/17968>`__: Fix memory leak in os."
"listxattr()."

#: ../../../Misc/NEWS:9223
msgid ""
"`Issue #17606 <https://bugs.python.org/17606>`__: Fixed support of encoded "
"byte strings in the XMLGenerator characters() and ignorableWhitespace() "
"methods.  Original patch by Sebastian Ortiz Vasquez."
msgstr ""
"`Issue #17606 <https://bugs.python.org/17606>`__: Fixed support of encoded "
"byte strings in the XMLGenerator characters() and ignorableWhitespace() "
"methods.  Original patch by Sebastian Ortiz Vasquez."

#: ../../../Misc/NEWS:9227
msgid ""
"`Issue #17732 <https://bugs.python.org/17732>`__: Ignore distutils.cfg "
"options pertaining to install paths if a virtual environment is active."
msgstr ""
"`Issue #17732 <https://bugs.python.org/17732>`__: Ignore distutils.cfg "
"options pertaining to install paths if a virtual environment is active."

#: ../../../Misc/NEWS:9230
msgid ""
"`Issue #17915 <https://bugs.python.org/17915>`__: Fix interoperability of "
"xml.sax with file objects returned by codecs.open()."
msgstr ""
"`Issue #17915 <https://bugs.python.org/17915>`__: Fix interoperability of "
"xml.sax with file objects returned by codecs.open()."

#: ../../../Misc/NEWS:9233
msgid ""
"`Issue #16601 <https://bugs.python.org/16601>`__: Restarting iteration over "
"tarfile really restarts rather than continuing from where it left off.  "
"Patch by Michael Birtwell."
msgstr ""
"`Issue #16601 <https://bugs.python.org/16601>`__: Restarting iteration over "
"tarfile really restarts rather than continuing from where it left off.  "
"Patch by Michael Birtwell."

#: ../../../Misc/NEWS:9236
msgid ""
"`Issue #17289 <https://bugs.python.org/17289>`__: The readline module now "
"plays nicer with external modules or applications changing the "
"rl_completer_word_break_characters global variable.  Initial patch by "
"Bradley Froehle."
msgstr ""
"`Issue #17289 <https://bugs.python.org/17289>`__: The readline module now "
"plays nicer with external modules or applications changing the "
"rl_completer_word_break_characters global variable.  Initial patch by "
"Bradley Froehle."

#: ../../../Misc/NEWS:9240
msgid ""
"`Issue #12181 <https://bugs.python.org/12181>`__: select module: Fix struct "
"kevent definition on OpenBSD 64-bit platforms. Patch by Federico Schwindt."
msgstr ""
"`Issue #12181 <https://bugs.python.org/12181>`__: select module: Fix struct "
"kevent definition on OpenBSD 64-bit platforms. Patch by Federico Schwindt."

#: ../../../Misc/NEWS:9243
msgid ""
"`Issue #11816 <https://bugs.python.org/11816>`__: multiple improvements to "
"the dis module: get_instructions generator, ability to redirect output to a "
"file, Bytecode and Instruction abstractions. Patch by Nick Coghlan, Ryan "
"Kelly and Thomas Kluyver."
msgstr ""
"`Issue #11816 <https://bugs.python.org/11816>`__: multiple improvements to "
"the dis module: get_instructions generator, ability to redirect output to a "
"file, Bytecode and Instruction abstractions. Patch by Nick Coghlan, Ryan "
"Kelly and Thomas Kluyver."

#: ../../../Misc/NEWS:9247
msgid ""
"`Issue #13831 <https://bugs.python.org/13831>`__: Embed stringification of "
"remote traceback in local traceback raised when pool task raises an "
"exception."
msgstr ""
"`Issue #13831 <https://bugs.python.org/13831>`__: Embed stringification of "
"remote traceback in local traceback raised when pool task raises an "
"exception."

#: ../../../Misc/NEWS:9250
msgid ""
"`Issue #15528 <https://bugs.python.org/15528>`__: Add weakref.finalize to "
"support finalization using weakref callbacks."
msgstr ""
"`Issue #15528 <https://bugs.python.org/15528>`__: Add weakref.finalize to "
"support finalization using weakref callbacks."

#: ../../../Misc/NEWS:9253
msgid ""
"`Issue #14173 <https://bugs.python.org/14173>`__: Avoid crashing when "
"reading a signal handler during interpreter shutdown."
msgstr ""
"`Issue #14173 <https://bugs.python.org/14173>`__: Avoid crashing when "
"reading a signal handler during interpreter shutdown."

#: ../../../Misc/NEWS:9256
msgid ""
"`Issue #15902 <https://bugs.python.org/15902>`__: Fix imp.load_module() "
"accepting None as a file when loading an extension module."
msgstr ""
"`Issue #15902 <https://bugs.python.org/15902>`__: Fix imp.load_module() "
"accepting None as a file when loading an extension module."

#: ../../../Misc/NEWS:9259
msgid ""
"`Issue #13721 <https://bugs.python.org/13721>`__: SSLSocket.getpeercert() "
"and SSLSocket.do_handshake() now raise an OSError with ENOTCONN, instead of "
"an AttributeError, when the SSLSocket is not connected."
msgstr ""
"`Issue #13721 <https://bugs.python.org/13721>`__: SSLSocket.getpeercert() "
"and SSLSocket.do_handshake() now raise an OSError with ENOTCONN, instead of "
"an AttributeError, when the SSLSocket is not connected."

#: ../../../Misc/NEWS:9263
msgid ""
"`Issue #14679 <https://bugs.python.org/14679>`__: add an __all__ (that "
"contains only HTMLParser) to html.parser."
msgstr ""
"`Issue #14679 <https://bugs.python.org/14679>`__: add an __all__ (that "
"contains only HTMLParser) to html.parser."

#: ../../../Misc/NEWS:9265
msgid ""
"`Issue #17802 <https://bugs.python.org/17802>`__: Fix an UnboundLocalError "
"in html.parser.  Initial tests by Thomas Barlow."
msgstr ""
"`Issue #17802 <https://bugs.python.org/17802>`__: Fix an UnboundLocalError "
"in html.parser.  Initial tests by Thomas Barlow."

#: ../../../Misc/NEWS:9268
msgid ""
"`Issue #17358 <https://bugs.python.org/17358>`__: Modules loaded by imp."
"load_source() and load_compiled() (and by extension load_module()) now have "
"a better chance of working when reloaded."
msgstr ""
"`Issue #17358 <https://bugs.python.org/17358>`__: Modules loaded by imp."
"load_source() and load_compiled() (and by extension load_module()) now have "
"a better chance of working when reloaded."

#: ../../../Misc/NEWS:9271
msgid ""
"`Issue #17804 <https://bugs.python.org/17804>`__: New function ``struct."
"iter_unpack`` allows for streaming struct unpacking."
msgstr ""
"`Issue #17804 <https://bugs.python.org/17804>`__: New function ``struct."
"iter_unpack`` allows for streaming struct unpacking."

#: ../../../Misc/NEWS:9274
msgid ""
"`Issue #17830 <https://bugs.python.org/17830>`__: When keyword.py is used to "
"update a keyword file, it now preserves the line endings of the original "
"file."
msgstr ""
"`Issue #17830 <https://bugs.python.org/17830>`__: When keyword.py is used to "
"update a keyword file, it now preserves the line endings of the original "
"file."

#: ../../../Misc/NEWS:9277
msgid ""
"`Issue #17272 <https://bugs.python.org/17272>`__: Making the urllib."
"request's Request.full_url a descriptor. Fixes bugs with assignment to "
"full_url. Patch by Demian Brecht."
msgstr ""
"`Issue #17272 <https://bugs.python.org/17272>`__: Making the urllib."
"request's Request.full_url a descriptor. Fixes bugs with assignment to "
"full_url. Patch by Demian Brecht."

#: ../../../Misc/NEWS:9280
msgid ""
"`Issue #17353 <https://bugs.python.org/17353>`__: Plistlib emitted empty "
"data tags with deeply nested datastructures"
msgstr ""
"`Issue #17353 <https://bugs.python.org/17353>`__: Plistlib emitted empty "
"data tags with deeply nested datastructures"

#: ../../../Misc/NEWS:9282
msgid ""
"`Issue #11714 <https://bugs.python.org/11714>`__: Use 'with' statements to "
"assure a Semaphore releases a condition variable.  Original patch by Thomas "
"Rachel."
msgstr ""
"`Issue #11714 <https://bugs.python.org/11714>`__: Use 'with' statements to "
"assure a Semaphore releases a condition variable.  Original patch by Thomas "
"Rachel."

#: ../../../Misc/NEWS:9285
msgid ""
"`Issue #16624 <https://bugs.python.org/16624>`__: `subprocess.check_output` "
"now accepts an `input` argument, allowing the subprocess's stdin to be "
"provided as a (byte) string. Patch by Zack Weinberg."
msgstr ""
"`Issue #16624 <https://bugs.python.org/16624>`__: `subprocess.check_output` "
"now accepts an `input` argument, allowing the subprocess's stdin to be "
"provided as a (byte) string. Patch by Zack Weinberg."

#: ../../../Misc/NEWS:9289
msgid ""
"`Issue #17795 <https://bugs.python.org/17795>`__: Reverted backwards-"
"incompatible change in SysLogHandler with Unix domain sockets."
msgstr ""
"`Issue #17795 <https://bugs.python.org/17795>`__: Reverted backwards-"
"incompatible change in SysLogHandler with Unix domain sockets."

#: ../../../Misc/NEWS:9292
msgid ""
"`Issue #16694 <https://bugs.python.org/16694>`__: Add a pure Python "
"implementation of the operator module. Patch by Zachary Ware."
msgstr ""
"`Issue #16694 <https://bugs.python.org/16694>`__: Add a pure Python "
"implementation of the operator module. Patch by Zachary Ware."

#: ../../../Misc/NEWS:9295
msgid ""
"`Issue #11182 <https://bugs.python.org/11182>`__: remove the unused and "
"undocumented pydoc.Scanner class. Patch by Martin Morrison."
msgstr ""
"`Issue #11182 <https://bugs.python.org/11182>`__: remove the unused and "
"undocumented pydoc.Scanner class. Patch by Martin Morrison."

#: ../../../Misc/NEWS:9298
msgid ""
"`Issue #17741 <https://bugs.python.org/17741>`__: Add ElementTree."
"XMLPullParser, an event-driven parser for non-blocking applications."
msgstr ""
"`Issue #17741 <https://bugs.python.org/17741>`__: Add ElementTree."
"XMLPullParser, an event-driven parser for non-blocking applications."

#: ../../../Misc/NEWS:9301
msgid ""
"`Issue #17555 <https://bugs.python.org/17555>`__: Fix ForkAwareThreadLock so "
"that size of after fork registry does not grow exponentially with generation "
"of process."
msgstr ""
"`Issue #17555 <https://bugs.python.org/17555>`__: Fix ForkAwareThreadLock so "
"that size of after fork registry does not grow exponentially with generation "
"of process."

#: ../../../Misc/NEWS:9304
msgid ""
"`Issue #17707 <https://bugs.python.org/17707>`__: fix regression in "
"multiprocessing.Queue's get() method where it did not block for short "
"timeouts."
msgstr ""
"`Issue #17707 <https://bugs.python.org/17707>`__: fix regression in "
"multiprocessing.Queue's get() method where it did not block for short "
"timeouts."

#: ../../../Misc/NEWS:9307
msgid ""
"`Issue #17720 <https://bugs.python.org/17720>`__: Fix the Python "
"implementation of pickle.Unpickler to correctly process the APPENDS opcode "
"when it is used on non-list objects."
msgstr ""
"`Issue #17720 <https://bugs.python.org/17720>`__: Fix the Python "
"implementation of pickle.Unpickler to correctly process the APPENDS opcode "
"when it is used on non-list objects."

#: ../../../Misc/NEWS:9310
msgid ""
"`Issue #17012 <https://bugs.python.org/17012>`__: shutil.which() no longer "
"falls back to the PATH environment variable if an empty path argument is "
"specified.  Patch by Serhiy Storchaka."
msgstr ""
"`Issue #17012 <https://bugs.python.org/17012>`__: shutil.which() no longer "
"falls back to the PATH environment variable if an empty path argument is "
"specified.  Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:9313
msgid ""
"`Issue #17710 <https://bugs.python.org/17710>`__: Fix pickle raising a "
"SystemError on bogus input."
msgstr ""
"`Issue #17710 <https://bugs.python.org/17710>`__: Fix pickle raising a "
"SystemError on bogus input."

#: ../../../Misc/NEWS:9315
msgid ""
"`Issue #17341 <https://bugs.python.org/17341>`__: Include the invalid name "
"in the error messages from re about invalid group names."
msgstr ""
"`Issue #17341 <https://bugs.python.org/17341>`__: Include the invalid name "
"in the error messages from re about invalid group names."

#: ../../../Misc/NEWS:9318
msgid ""
"`Issue #17702 <https://bugs.python.org/17702>`__: os.environ now raises "
"KeyError with the original environment variable name (str on UNIX), instead "
"of using the encoded name (bytes on UNIX)."
msgstr ""
"`Issue #17702 <https://bugs.python.org/17702>`__: os.environ now raises "
"KeyError with the original environment variable name (str on UNIX), instead "
"of using the encoded name (bytes on UNIX)."

#: ../../../Misc/NEWS:9322
msgid ""
"`Issue #16163 <https://bugs.python.org/16163>`__: Make the importlib based "
"version of pkgutil.iter_importers work for submodules. Initial patch by "
"Berker Peksag."
msgstr ""
"`Issue #16163 <https://bugs.python.org/16163>`__: Make the importlib based "
"version of pkgutil.iter_importers work for submodules. Initial patch by "
"Berker Peksag."

#: ../../../Misc/NEWS:9325
msgid ""
"`Issue #16804 <https://bugs.python.org/16804>`__: Fix a bug in the 'site' "
"module that caused running 'python -S -m site' to incorrectly throw an "
"exception."
msgstr ""
"`Issue #16804 <https://bugs.python.org/16804>`__: Fix a bug in the 'site' "
"module that caused running 'python -S -m site' to incorrectly throw an "
"exception."

#: ../../../Misc/NEWS:9328
msgid ""
"`Issue #15480 <https://bugs.python.org/15480>`__: Remove the deprecated and "
"unused TYPE_INT64 code from marshal. Initial patch by Daniel Riti."
msgstr ""
"`Issue #15480 <https://bugs.python.org/15480>`__: Remove the deprecated and "
"unused TYPE_INT64 code from marshal. Initial patch by Daniel Riti."

#: ../../../Misc/NEWS:9331
msgid ""
"`Issue #2118 <https://bugs.python.org/2118>`__: SMTPException is now a "
"subclass of OSError."
msgstr ""
"`Issue #2118 <https://bugs.python.org/2118>`__: SMTPException is now a "
"subclass of OSError."

#: ../../../Misc/NEWS:9333
msgid ""
"`Issue #17016 <https://bugs.python.org/17016>`__: Get rid of possible "
"pointer wraparounds and integer overflows in the re module.  Patch by "
"Nickolai Zeldovich."
msgstr ""
"`Issue #17016 <https://bugs.python.org/17016>`__: Get rid of possible "
"pointer wraparounds and integer overflows in the re module.  Patch by "
"Nickolai Zeldovich."

#: ../../../Misc/NEWS:9336
msgid ""
"`Issue #16658 <https://bugs.python.org/16658>`__: add missing return to "
"HTTPConnection.send(). Patch by Jeff Knupp."
msgstr ""
"`Issue #16658 <https://bugs.python.org/16658>`__: add missing return to "
"HTTPConnection.send(). Patch by Jeff Knupp."

#: ../../../Misc/NEWS:9339
msgid ""
"`Issue #9556 <https://bugs.python.org/9556>`__: the logging package now "
"allows specifying a time-of-day for a TimedRotatingFileHandler to rotate."
msgstr ""
"`Issue #9556 <https://bugs.python.org/9556>`__: the logging package now "
"allows specifying a time-of-day for a TimedRotatingFileHandler to rotate."

#: ../../../Misc/NEWS:9342
msgid ""
"`Issue #14971 <https://bugs.python.org/14971>`__: unittest test discovery no "
"longer gets confused when a function has a different __name__ than its name "
"in the TestCase class dictionary."
msgstr ""
"`Issue #14971 <https://bugs.python.org/14971>`__: unittest test discovery no "
"longer gets confused when a function has a different __name__ than its name "
"in the TestCase class dictionary."

#: ../../../Misc/NEWS:9345
msgid ""
"`Issue #17487 <https://bugs.python.org/17487>`__: The wave getparams method "
"now returns a namedtuple rather than a plain tuple."
msgstr ""
"`Issue #17487 <https://bugs.python.org/17487>`__: The wave getparams method "
"now returns a namedtuple rather than a plain tuple."

#: ../../../Misc/NEWS:9348
msgid ""
"`Issue #17675 <https://bugs.python.org/17675>`__: socket repr() provides "
"local and remote addresses (if any). Patch by Giampaolo Rodola'"
msgstr ""
"`Issue #17675 <https://bugs.python.org/17675>`__: socket repr() provides "
"local and remote addresses (if any). Patch by Giampaolo Rodola'"

#: ../../../Misc/NEWS:9351
msgid ""
"`Issue #17093 <https://bugs.python.org/17093>`__: Make the ABCs in importlib."
"abc provide default values or raise reasonable exceptions for their methods "
"to make them more amenable to super() calls."
msgstr ""
"`Issue #17093 <https://bugs.python.org/17093>`__: Make the ABCs in importlib."
"abc provide default values or raise reasonable exceptions for their methods "
"to make them more amenable to super() calls."

#: ../../../Misc/NEWS:9355
msgid ""
"`Issue #17566 <https://bugs.python.org/17566>`__: Make importlib.abc.Loader."
"module_repr() optional instead of an abstractmethod; now it raises "
"NotImplementedError so as to be ignored by default."
msgstr ""
"`Issue #17566 <https://bugs.python.org/17566>`__: Make importlib.abc.Loader."
"module_repr() optional instead of an abstractmethod; now it raises "
"NotImplementedError so as to be ignored by default."

#: ../../../Misc/NEWS:9358
msgid ""
"`Issue #17678 <https://bugs.python.org/17678>`__: Remove the use of "
"deprecated method in http/cookiejar.py by changing the call to "
"get_origin_req_host() to origin_req_host."
msgstr ""
"`Issue #17678 <https://bugs.python.org/17678>`__: Remove the use of "
"deprecated method in http/cookiejar.py by changing the call to "
"get_origin_req_host() to origin_req_host."

#: ../../../Misc/NEWS:9361
msgid ""
"`Issue #17666 <https://bugs.python.org/17666>`__: Fix reading gzip files "
"with an extra field."
msgstr ""
"`Issue #17666 <https://bugs.python.org/17666>`__: Fix reading gzip files "
"with an extra field."

#: ../../../Misc/NEWS:9363
msgid ""
"`Issue #16475 <https://bugs.python.org/16475>`__: Support object instancing, "
"recursion and interned strings in marshal"
msgstr ""
"`Issue #16475 <https://bugs.python.org/16475>`__: Support object instancing, "
"recursion and interned strings in marshal"

#: ../../../Misc/NEWS:9366
msgid ""
"`Issue #17502 <https://bugs.python.org/17502>`__: Process DEFAULT values in "
"mock side_effect that returns iterator."
msgstr ""
"`Issue #17502 <https://bugs.python.org/17502>`__: Process DEFAULT values in "
"mock side_effect that returns iterator."

#: ../../../Misc/NEWS:9368
msgid ""
"`Issue #16795 <https://bugs.python.org/16795>`__: On the ast.arguments "
"object, unify vararg with varargannotation and kwarg and kwargannotation. "
"Change the column offset of ast.Attribute to be at the attribute name."
msgstr ""
"`Issue #16795 <https://bugs.python.org/16795>`__: On the ast.arguments "
"object, unify vararg with varargannotation and kwarg and kwargannotation. "
"Change the column offset of ast.Attribute to be at the attribute name."

#: ../../../Misc/NEWS:9372
msgid ""
"`Issue #17434 <https://bugs.python.org/17434>`__: Properly raise a "
"SyntaxError when a string occurs between future imports."
msgstr ""
"`Issue #17434 <https://bugs.python.org/17434>`__: Properly raise a "
"SyntaxError when a string occurs between future imports."

#: ../../../Misc/NEWS:9375
msgid ""
"`Issue #17117 <https://bugs.python.org/17117>`__: Import and @importlib.util."
"set_loader now set __loader__ when it has a value of None or the attribute "
"doesn't exist."
msgstr ""
"`Issue #17117 <https://bugs.python.org/17117>`__: Import and @importlib.util."
"set_loader now set __loader__ when it has a value of None or the attribute "
"doesn't exist."

#: ../../../Misc/NEWS:9378
msgid ""
"`Issue #17032 <https://bugs.python.org/17032>`__: The \"global\" in the "
"\"NameError: global name 'x' is not defined\" error message has been "
"removed.  Patch by Ram Rachum."
msgstr ""
"`Issue #17032 <https://bugs.python.org/17032>`__: The \"global\" in the "
"\"NameError: global name 'x' is not defined\" error message has been "
"removed.  Patch by Ram Rachum."

#: ../../../Misc/NEWS:9381
msgid ""
"`Issue #18080 <https://bugs.python.org/18080>`__: When building a C "
"extension module on OS X, if the compiler is overridden with the CC "
"environment variable, use the new compiler as the default for linking if "
"LDSHARED is not also overridden.  This restores Distutils behavior "
"introduced in 3.2.3 and inadvertently dropped in 3.3.0."
msgstr ""
"`Issue #18080 <https://bugs.python.org/18080>`__: When building a C "
"extension module on OS X, if the compiler is overridden with the CC "
"environment variable, use the new compiler as the default for linking if "
"LDSHARED is not also overridden.  This restores Distutils behavior "
"introduced in 3.2.3 and inadvertently dropped in 3.3.0."

#: ../../../Misc/NEWS:9386
msgid ""
"`Issue #18113 <https://bugs.python.org/18113>`__: Fixed a refcount leak in "
"the curses.panel module's set_userptr() method.  Reported by Atsuo Ishimoto."
msgstr ""
"`Issue #18113 <https://bugs.python.org/18113>`__: Fixed a refcount leak in "
"the curses.panel module's set_userptr() method.  Reported by Atsuo Ishimoto."

#: ../../../Misc/NEWS:9389
msgid "Implement PEP 443 \"Single-dispatch generic functions\"."
msgstr ""

#: ../../../Misc/NEWS:9391
msgid ""
"Implement PEP 435 \"Adding an Enum type to the Python standard library\"."
msgstr ""

#: ../../../Misc/NEWS:9393
msgid ""
"`Issue #15596 <https://bugs.python.org/15596>`__: Faster pickling of unicode "
"strings."
msgstr ""
"`Issue #15596 <https://bugs.python.org/15596>`__: Faster pickling of unicode "
"strings."

#: ../../../Misc/NEWS:9395
msgid ""
"`Issue #17572 <https://bugs.python.org/17572>`__: Avoid chained exceptions "
"when passing bad directives to time.strptime().  Initial patch by Claudiu "
"Popa."
msgstr ""
"`Issue #17572 <https://bugs.python.org/17572>`__: Avoid chained exceptions "
"when passing bad directives to time.strptime().  Initial patch by Claudiu "
"Popa."

#: ../../../Misc/NEWS:9398
msgid ""
"`Issue #17435 <https://bugs.python.org/17435>`__: threading.Timer's __init__ "
"method no longer uses mutable default values for the args and kwargs "
"parameters."
msgstr ""
"`Issue #17435 <https://bugs.python.org/17435>`__: threading.Timer's __init__ "
"method no longer uses mutable default values for the args and kwargs "
"parameters."

#: ../../../Misc/NEWS:9401
msgid ""
"`Issue #17526 <https://bugs.python.org/17526>`__: fix an IndexError raised "
"while passing code without filename to inspect.findsource().  Initial patch "
"by Tyler Doyle."
msgstr ""
"`Issue #17526 <https://bugs.python.org/17526>`__: fix an IndexError raised "
"while passing code without filename to inspect.findsource().  Initial patch "
"by Tyler Doyle."

#: ../../../Misc/NEWS:9404
msgid ""
"`Issue #17540 <https://bugs.python.org/17540>`__: Added style parameter to "
"logging formatter configuration by dict."
msgstr ""
"`Issue #17540 <https://bugs.python.org/17540>`__: Added style parameter to "
"logging formatter configuration by dict."

#: ../../../Misc/NEWS:9406
msgid ""
"`Issue #16692 <https://bugs.python.org/16692>`__: The ssl module now "
"supports TLS 1.1 and TLS 1.2.  Initial patch by Michele Orr√π."
msgstr ""
"`Issue #16692 <https://bugs.python.org/16692>`__: The ssl module now "
"supports TLS 1.1 and TLS 1.2.  Initial patch by Michele Orr√π."

#: ../../../Misc/NEWS:9409
msgid ""
"`Issue #17025 <https://bugs.python.org/17025>`__: multiprocessing: Reduce "
"Queue and SimpleQueue contention."
msgstr ""
"`Issue #17025 <https://bugs.python.org/17025>`__: multiprocessing: Reduce "
"Queue and SimpleQueue contention."

#: ../../../Misc/NEWS:9411
msgid ""
"`Issue #17536 <https://bugs.python.org/17536>`__: Add to webbrowser's "
"browser list: www-browser, x-www-browser, iceweasel, iceape."
msgstr ""
"`Issue #17536 <https://bugs.python.org/17536>`__: Add to webbrowser's "
"browser list: www-browser, x-www-browser, iceweasel, iceape."

#: ../../../Misc/NEWS:9414
msgid ""
"`Issue #17150 <https://bugs.python.org/17150>`__: pprint now uses line "
"continuations to wrap long string literals."
msgstr ""
"`Issue #17150 <https://bugs.python.org/17150>`__: pprint now uses line "
"continuations to wrap long string literals."

#: ../../../Misc/NEWS:9417
msgid ""
"`Issue #17488 <https://bugs.python.org/17488>`__: Change the subprocess."
"Popen bufsize parameter default value from unbuffered (0) to buffering (-1) "
"to match the behavior existing code expects and match the behavior of the "
"subprocess module in Python 2 to avoid introducing hard to track down bugs."
msgstr ""
"`Issue #17488 <https://bugs.python.org/17488>`__: Change the subprocess."
"Popen bufsize parameter default value from unbuffered (0) to buffering (-1) "
"to match the behavior existing code expects and match the behavior of the "
"subprocess module in Python 2 to avoid introducing hard to track down bugs."

#: ../../../Misc/NEWS:9422
msgid ""
"`Issue #17521 <https://bugs.python.org/17521>`__: Corrected non-enabling of "
"logger following two calls to fileConfig()."
msgstr ""
"`Issue #17521 <https://bugs.python.org/17521>`__: Corrected non-enabling of "
"logger following two calls to fileConfig()."

#: ../../../Misc/NEWS:9425
msgid ""
"`Issue #17508 <https://bugs.python.org/17508>`__: Corrected logging "
"MemoryHandler configuration in dictConfig() where the target handler wasn't "
"configured first."
msgstr ""
"`Issue #17508 <https://bugs.python.org/17508>`__: Corrected logging "
"MemoryHandler configuration in dictConfig() where the target handler wasn't "
"configured first."

#: ../../../Misc/NEWS:9428
msgid ""
"`Issue #17209 <https://bugs.python.org/17209>`__: curses.window.get_wch() "
"now correctly handles KeyboardInterrupt (CTRL+c)."
msgstr ""
"`Issue #17209 <https://bugs.python.org/17209>`__: curses.window.get_wch() "
"now correctly handles KeyboardInterrupt (CTRL+c)."

#: ../../../Misc/NEWS:9431
msgid ""
"`Issue #5713 <https://bugs.python.org/5713>`__: smtplib now handles 421 "
"(closing connection) error codes when sending mail by closing the socket and "
"reporting the 421 error code via the exception appropriate to the command "
"that received the error response."
msgstr ""
"`Issue #5713 <https://bugs.python.org/5713>`__: smtplib now handles 421 "
"(closing connection) error codes when sending mail by closing the socket and "
"reporting the 421 error code via the exception appropriate to the command "
"that received the error response."

#: ../../../Misc/NEWS:9435
msgid ""
"`Issue #16997 <https://bugs.python.org/16997>`__: unittest.TestCase now "
"provides a subTest() context manager to procedurally generate, in an easy "
"way, small test instances."
msgstr ""
"`Issue #16997 <https://bugs.python.org/16997>`__: unittest.TestCase now "
"provides a subTest() context manager to procedurally generate, in an easy "
"way, small test instances."

#: ../../../Misc/NEWS:9438
msgid ""
"`Issue #17485 <https://bugs.python.org/17485>`__: Also delete the Request "
"Content-Length header if the data attribute is deleted.  (Follow on to issue "
"`Issue #16464 <https://bugs.python.org/16464>`__)."
msgstr ""
"`Issue #17485 <https://bugs.python.org/17485>`__: Also delete the Request "
"Content-Length header if the data attribute is deleted.  (Follow on to issue "
"`Issue #16464 <https://bugs.python.org/16464>`__)."

#: ../../../Misc/NEWS:9441
msgid ""
"`Issue #15927 <https://bugs.python.org/15927>`__: CVS now correctly parses "
"escaped newlines and carriage when parsing with quoting turned off."
msgstr ""
"`Issue #15927 <https://bugs.python.org/15927>`__: CVS now correctly parses "
"escaped newlines and carriage when parsing with quoting turned off."

#: ../../../Misc/NEWS:9444
msgid ""
"`Issue #17467 <https://bugs.python.org/17467>`__: add readline and readlines "
"support to mock_open in unittest.mock."
msgstr ""
"`Issue #17467 <https://bugs.python.org/17467>`__: add readline and readlines "
"support to mock_open in unittest.mock."

#: ../../../Misc/NEWS:9447
msgid ""
"`Issue #13248 <https://bugs.python.org/13248>`__: removed deprecated and "
"undocumented difflib.isbjunk, isbpopular."
msgstr ""
"`Issue #13248 <https://bugs.python.org/13248>`__: removed deprecated and "
"undocumented difflib.isbjunk, isbpopular."

#: ../../../Misc/NEWS:9450
msgid ""
"`Issue #17192 <https://bugs.python.org/17192>`__: Update the ctypes module's "
"libffi to v3.0.13.  This specifically addresses a stack misalignment issue "
"on x86 and issues on some more recent platforms."
msgstr ""
"`Issue #17192 <https://bugs.python.org/17192>`__: Update the ctypes module's "
"libffi to v3.0.13.  This specifically addresses a stack misalignment issue "
"on x86 and issues on some more recent platforms."

#: ../../../Misc/NEWS:9454
msgid ""
"`Issue #8862 <https://bugs.python.org/8862>`__: Fixed curses cleanup when "
"getkey is interrupted by a signal."
msgstr ""
"`Issue #8862 <https://bugs.python.org/8862>`__: Fixed curses cleanup when "
"getkey is interrupted by a signal."

#: ../../../Misc/NEWS:9456
msgid ""
"`Issue #17443 <https://bugs.python.org/17443>`__: imaplib.IMAP4_stream was "
"using the default unbuffered IO in subprocess, but the imap code assumes "
"buffered IO.  In Python2 this worked by accident.  IMAP4_stream now "
"explicitly uses buffered IO."
msgstr ""
"`Issue #17443 <https://bugs.python.org/17443>`__: imaplib.IMAP4_stream was "
"using the default unbuffered IO in subprocess, but the imap code assumes "
"buffered IO.  In Python2 this worked by accident.  IMAP4_stream now "
"explicitly uses buffered IO."

#: ../../../Misc/NEWS:9460
msgid ""
"`Issue #17476 <https://bugs.python.org/17476>`__: Fixed regression relative "
"to Python2 in undocumented pydoc 'allmethods'; it was missing unbound "
"methods on the class."
msgstr ""
"`Issue #17476 <https://bugs.python.org/17476>`__: Fixed regression relative "
"to Python2 in undocumented pydoc 'allmethods'; it was missing unbound "
"methods on the class."

#: ../../../Misc/NEWS:9463
msgid ""
"`Issue #17474 <https://bugs.python.org/17474>`__: Remove the deprecated "
"methods of Request class."
msgstr ""
"`Issue #17474 <https://bugs.python.org/17474>`__: Remove the deprecated "
"methods of Request class."

#: ../../../Misc/NEWS:9465
msgid ""
"`Issue #16709 <https://bugs.python.org/16709>`__: unittest discover order is "
"no-longer filesystem specific. Patch by Jeff Ramnani."
msgstr ""
"`Issue #16709 <https://bugs.python.org/16709>`__: unittest discover order is "
"no-longer filesystem specific. Patch by Jeff Ramnani."

#: ../../../Misc/NEWS:9468
msgid ""
"Use the HTTPS PyPI url for upload, overriding any plain HTTP URL in pypirc."
msgstr ""

#: ../../../Misc/NEWS:9470
msgid ""
"`Issue #5024 <https://bugs.python.org/5024>`__: sndhdr.whichhdr now returns "
"the frame count for WAV files rather than -1."
msgstr ""
"`Issue #5024 <https://bugs.python.org/5024>`__: sndhdr.whichhdr now returns "
"the frame count for WAV files rather than -1."

#: ../../../Misc/NEWS:9473
msgid ""
"`Issue #17460 <https://bugs.python.org/17460>`__: Remove the strict argument "
"of HTTPConnection and removing the DeprecationWarning being issued from 3.2 "
"onwards."
msgstr ""
"`Issue #17460 <https://bugs.python.org/17460>`__: Remove the strict argument "
"of HTTPConnection and removing the DeprecationWarning being issued from 3.2 "
"onwards."

#: ../../../Misc/NEWS:9476
msgid ""
"`Issue #16880 <https://bugs.python.org/16880>`__: Do not assume _imp."
"load_dynamic() is defined in the imp module."
msgstr ""
"`Issue #16880 <https://bugs.python.org/16880>`__: Do not assume _imp."
"load_dynamic() is defined in the imp module."

#: ../../../Misc/NEWS:9478
msgid ""
"`Issue #16389 <https://bugs.python.org/16389>`__: Fixed a performance "
"regression relative to Python 3.1 in the caching of compiled regular "
"expressions."
msgstr ""
"`Issue #16389 <https://bugs.python.org/16389>`__: Fixed a performance "
"regression relative to Python 3.1 in the caching of compiled regular "
"expressions."

#: ../../../Misc/NEWS:9481
msgid "Added missing FeedParser and BytesFeedParser to email.parser.__all__."
msgstr ""

#: ../../../Misc/NEWS:9483
msgid ""
"`Issue #17431 <https://bugs.python.org/17431>`__: Fix missing import of "
"BytesFeedParser in email.parser."
msgstr ""
"`Issue #17431 <https://bugs.python.org/17431>`__: Fix missing import of "
"BytesFeedParser in email.parser."

#: ../../../Misc/NEWS:9485
msgid ""
"`Issue #12921 <https://bugs.python.org/12921>`__: http.server's send_error "
"takes an explain argument to send more information in response. Patch "
"contributed by Karl."
msgstr ""
"`Issue #12921 <https://bugs.python.org/12921>`__: http.server's send_error "
"takes an explain argument to send more information in response. Patch "
"contributed by Karl."

#: ../../../Misc/NEWS:9488
msgid ""
"`Issue #17414 <https://bugs.python.org/17414>`__: Add timeit, repeat, and "
"default_timer to timeit.__all__."
msgstr ""
"`Issue #17414 <https://bugs.python.org/17414>`__: Add timeit, repeat, and "
"default_timer to timeit.__all__."

#: ../../../Misc/NEWS:9490
msgid ""
"`Issue #1285086 <https://bugs.python.org/1285086>`__: Get rid of the "
"refcounting hack and speed up urllib.parse.unquote() and urllib.parse."
"unquote_to_bytes()."
msgstr ""
"`Issue #1285086 <https://bugs.python.org/1285086>`__: Get rid of the "
"refcounting hack and speed up urllib.parse.unquote() and urllib.parse."
"unquote_to_bytes()."

#: ../../../Misc/NEWS:9493
msgid ""
"`Issue #17099 <https://bugs.python.org/17099>`__: Have importlib."
"find_loader() raise ValueError when __loader__ is not set, harmonizing with "
"what happens when the attribute is set to None."
msgstr ""
"`Issue #17099 <https://bugs.python.org/17099>`__: Have importlib."
"find_loader() raise ValueError when __loader__ is not set, harmonizing with "
"what happens when the attribute is set to None."

#: ../../../Misc/NEWS:9496
msgid "Expose the O_PATH constant in the os module if it is available."
msgstr ""

#: ../../../Misc/NEWS:9498
msgid ""
"`Issue #17368 <https://bugs.python.org/17368>`__: Fix an off-by-one error in "
"the Python JSON decoder that caused a failure while decoding empty object "
"literals when object_pairs_hook was specified."
msgstr ""
"`Issue #17368 <https://bugs.python.org/17368>`__: Fix an off-by-one error in "
"the Python JSON decoder that caused a failure while decoding empty object "
"literals when object_pairs_hook was specified."

#: ../../../Misc/NEWS:9502
msgid ""
"`Issue #17385 <https://bugs.python.org/17385>`__: Fix quadratic behavior in "
"threading.Condition.  The FIFO queue now uses a deque instead of a list."
msgstr ""
"`Issue #17385 <https://bugs.python.org/17385>`__: Fix quadratic behavior in "
"threading.Condition.  The FIFO queue now uses a deque instead of a list."

#: ../../../Misc/NEWS:9505
msgid ""
"`Issue #15806 <https://bugs.python.org/15806>`__: Add contextlib.ignore().  "
"This creates a context manager to ignore specified exceptions, replacing the "
"\"except SomeException: pass\" idiom."
msgstr ""
"`Issue #15806 <https://bugs.python.org/15806>`__: Add contextlib.ignore().  "
"This creates a context manager to ignore specified exceptions, replacing the "
"\"except SomeException: pass\" idiom."

#: ../../../Misc/NEWS:9508
msgid ""
"`Issue #14645 <https://bugs.python.org/14645>`__: The email generator "
"classes now produce output using the specified linesep throughout.  "
"Previously if the prolog, epilog, or body were stored with a different "
"linesep, that linesep was used.  This fix corrects an RFC non-compliance "
"issue with smtplib.send_message."
msgstr ""
"`Issue #14645 <https://bugs.python.org/14645>`__: The email generator "
"classes now produce output using the specified linesep throughout.  "
"Previously if the prolog, epilog, or body were stored with a different "
"linesep, that linesep was used.  This fix corrects an RFC non-compliance "
"issue with smtplib.send_message."

#: ../../../Misc/NEWS:9513
msgid ""
"`Issue #17278 <https://bugs.python.org/17278>`__: Fix a crash in heapq."
"heappush() and heapq.heappop() when the list is being resized concurrently."
msgstr ""
"`Issue #17278 <https://bugs.python.org/17278>`__: Fix a crash in heapq."
"heappush() and heapq.heappop() when the list is being resized concurrently."

#: ../../../Misc/NEWS:9516
msgid ""
"`Issue #16962 <https://bugs.python.org/16962>`__: Use getdents64 instead of "
"the obsolete getdents syscall in the subprocess module on Linux."
msgstr ""
"`Issue #16962 <https://bugs.python.org/16962>`__: Use getdents64 instead of "
"the obsolete getdents syscall in the subprocess module on Linux."

#: ../../../Misc/NEWS:9519
msgid ""
"`Issue #16935 <https://bugs.python.org/16935>`__: unittest now counts the "
"module as skipped if it raises SkipTest, instead of counting it as an "
"error.  Patch by Zachary Ware."
msgstr ""
"`Issue #16935 <https://bugs.python.org/16935>`__: unittest now counts the "
"module as skipped if it raises SkipTest, instead of counting it as an "
"error.  Patch by Zachary Ware."

#: ../../../Misc/NEWS:9522
msgid ""
"`Issue #17018 <https://bugs.python.org/17018>`__: Make Process.join() retry "
"if os.waitpid() fails with EINTR."
msgstr ""
"`Issue #17018 <https://bugs.python.org/17018>`__: Make Process.join() retry "
"if os.waitpid() fails with EINTR."

#: ../../../Misc/NEWS:9524
msgid ""
"`Issue #17223 <https://bugs.python.org/17223>`__: array module: Fix a "
"crasher when converting an array containing invalid characters (outside "
"range [U+0000; U+10ffff]) to Unicode: repr(array), str(array) and array."
"tounicode(). Patch written by Manuel Jacob."
msgstr ""
"`Issue #17223 <https://bugs.python.org/17223>`__: array module: Fix a "
"crasher when converting an array containing invalid characters (outside "
"range [U+0000; U+10ffff]) to Unicode: repr(array), str(array) and array."
"tounicode(). Patch written by Manuel Jacob."

#: ../../../Misc/NEWS:9528
msgid ""
"`Issue #17197 <https://bugs.python.org/17197>`__: profile/cProfile modules "
"refactored so that code of run() and runctx() utility functions is not "
"duplicated in both modules."
msgstr ""
"`Issue #17197 <https://bugs.python.org/17197>`__: profile/cProfile modules "
"refactored so that code of run() and runctx() utility functions is not "
"duplicated in both modules."

#: ../../../Misc/NEWS:9531
msgid ""
"`Issue #14720 <https://bugs.python.org/14720>`__: sqlite3: Convert datetime "
"microseconds correctly. Patch by Lowe Thiderman."
msgstr ""
"`Issue #14720 <https://bugs.python.org/14720>`__: sqlite3: Convert datetime "
"microseconds correctly. Patch by Lowe Thiderman."

#: ../../../Misc/NEWS:9534
msgid ""
"`Issue #15132 <https://bugs.python.org/15132>`__: Allow a list for the "
"defaultTest argument of unittest.TestProgram. Patch by Jyrki Pulliainen."
msgstr ""
"`Issue #15132 <https://bugs.python.org/15132>`__: Allow a list for the "
"defaultTest argument of unittest.TestProgram. Patch by Jyrki Pulliainen."

#: ../../../Misc/NEWS:9537
msgid ""
"`Issue #17225 <https://bugs.python.org/17225>`__: JSON decoder now counts "
"columns in the first line starting with 1, as in other lines."
msgstr ""
"`Issue #17225 <https://bugs.python.org/17225>`__: JSON decoder now counts "
"columns in the first line starting with 1, as in other lines."

#: ../../../Misc/NEWS:9540
msgid ""
"`Issue #6623 <https://bugs.python.org/6623>`__: Added explicit "
"DeprecationWarning for ftplib.netrc, which has been deprecated and "
"undocumented for a long time."
msgstr ""
"`Issue #6623 <https://bugs.python.org/6623>`__: Added explicit "
"DeprecationWarning for ftplib.netrc, which has been deprecated and "
"undocumented for a long time."

#: ../../../Misc/NEWS:9543
msgid ""
"`Issue #13700 <https://bugs.python.org/13700>`__: Fix byte/string handling "
"in imaplib authentication when an authobject is specified."
msgstr ""
"`Issue #13700 <https://bugs.python.org/13700>`__: Fix byte/string handling "
"in imaplib authentication when an authobject is specified."

#: ../../../Misc/NEWS:9546
msgid ""
"`Issue #13153 <https://bugs.python.org/13153>`__: Tkinter functions now "
"raise TclError instead of ValueError when a string argument contains non-BMP "
"character."
msgstr ""
"`Issue #13153 <https://bugs.python.org/13153>`__: Tkinter functions now "
"raise TclError instead of ValueError when a string argument contains non-BMP "
"character."

#: ../../../Misc/NEWS:9549
msgid ""
"`Issue #9669 <https://bugs.python.org/9669>`__: Protect re against infinite "
"loops on zero-width matching in non-greedy repeat.  Patch by Matthew Barnett."
msgstr ""
"`Issue #9669 <https://bugs.python.org/9669>`__: Protect re against infinite "
"loops on zero-width matching in non-greedy repeat.  Patch by Matthew Barnett."

#: ../../../Misc/NEWS:9552
msgid ""
"`Issue #13169 <https://bugs.python.org/13169>`__: The maximal repetition "
"number in a regular expression has been increased from 65534 to 2147483647 "
"(on 32-bit platform) or 4294967294 (on 64-bit)."
msgstr ""
"`Issue #13169 <https://bugs.python.org/13169>`__: The maximal repetition "
"number in a regular expression has been increased from 65534 to 2147483647 "
"(on 32-bit platform) or 4294967294 (on 64-bit)."

#: ../../../Misc/NEWS:9556
msgid ""
"`Issue #17143 <https://bugs.python.org/17143>`__: Fix a missing import in "
"the trace module.  Initial patch by Berker Peksag."
msgstr ""
"`Issue #17143 <https://bugs.python.org/17143>`__: Fix a missing import in "
"the trace module.  Initial patch by Berker Peksag."

#: ../../../Misc/NEWS:9559
msgid ""
"`Issue #15220 <https://bugs.python.org/15220>`__: email.feedparser's line "
"splitting algorithm is now simpler and faster."
msgstr ""
"`Issue #15220 <https://bugs.python.org/15220>`__: email.feedparser's line "
"splitting algorithm is now simpler and faster."

#: ../../../Misc/NEWS:9562
msgid ""
"`Issue #16743 <https://bugs.python.org/16743>`__: Fix mmap overflow check on "
"32 bit Windows."
msgstr ""
"`Issue #16743 <https://bugs.python.org/16743>`__: Fix mmap overflow check on "
"32 bit Windows."

#: ../../../Misc/NEWS:9564
msgid ""
"`Issue #16996 <https://bugs.python.org/16996>`__: webbrowser module now uses "
"shutil.which() to find a web-browser on the executable search path."
msgstr ""
"`Issue #16996 <https://bugs.python.org/16996>`__: webbrowser module now uses "
"shutil.which() to find a web-browser on the executable search path."

#: ../../../Misc/NEWS:9567
msgid ""
"`Issue #16800 <https://bugs.python.org/16800>`__: tempfile.gettempdir() no "
"longer left temporary files when the disk is full.  Original patch by Amir "
"Szekely."
msgstr ""
"`Issue #16800 <https://bugs.python.org/16800>`__: tempfile.gettempdir() no "
"longer left temporary files when the disk is full.  Original patch by Amir "
"Szekely."

#: ../../../Misc/NEWS:9570
msgid "`Issue #17192 <https://bugs.python.org/17192>`__: Import libffi-3.0.12."
msgstr ""
"`Issue #17192 <https://bugs.python.org/17192>`__: Import libffi-3.0.12."

#: ../../../Misc/NEWS:9572
msgid ""
"`Issue #16564 <https://bugs.python.org/16564>`__: Fixed regression relative "
"to Python2 in the operation of email.encoders.encode_7or8bit when used with "
"binary data."
msgstr ""
"`Issue #16564 <https://bugs.python.org/16564>`__: Fixed regression relative "
"to Python2 in the operation of email.encoders.encode_7or8bit when used with "
"binary data."

#: ../../../Misc/NEWS:9575
msgid ""
"`Issue #17052 <https://bugs.python.org/17052>`__: unittest discovery should "
"use self.testLoader."
msgstr ""
"`Issue #17052 <https://bugs.python.org/17052>`__: unittest discovery should "
"use self.testLoader."

#: ../../../Misc/NEWS:9577
msgid ""
"`Issue #4591 <https://bugs.python.org/4591>`__: Uid and gid values larger "
"than 2**31 are supported now."
msgstr ""
"`Issue #4591 <https://bugs.python.org/4591>`__: Uid and gid values larger "
"than 2**31 are supported now."

#: ../../../Misc/NEWS:9579
msgid ""
"`Issue #17141 <https://bugs.python.org/17141>`__: random.vonmisesvariate() "
"no longer hangs for large kappas."
msgstr ""
"`Issue #17141 <https://bugs.python.org/17141>`__: random.vonmisesvariate() "
"no longer hangs for large kappas."

#: ../../../Misc/NEWS:9581
msgid ""
"`Issue #17149 <https://bugs.python.org/17149>`__: Fix random.vonmisesvariate "
"to always return results in [0, 2*math.pi]."
msgstr ""
"`Issue #17149 <https://bugs.python.org/17149>`__: Fix random.vonmisesvariate "
"to always return results in [0, 2*math.pi]."

#: ../../../Misc/NEWS:9584
msgid ""
"`Issue #1470548 <https://bugs.python.org/1470548>`__: XMLGenerator now works "
"with binary output streams."
msgstr ""
"`Issue #1470548 <https://bugs.python.org/1470548>`__: XMLGenerator now works "
"with binary output streams."

#: ../../../Misc/NEWS:9586
msgid ""
"`Issue #6975 <https://bugs.python.org/6975>`__: os.path.realpath() now "
"correctly resolves multiple nested symlinks on POSIX platforms."
msgstr ""
"`Issue #6975 <https://bugs.python.org/6975>`__: os.path.realpath() now "
"correctly resolves multiple nested symlinks on POSIX platforms."

#: ../../../Misc/NEWS:9589
msgid ""
"`Issue #13773 <https://bugs.python.org/13773>`__: sqlite3.connect() gets a "
"new `uri` parameter to pass the filename as a URI, allowing custom options "
"to be passed."
msgstr ""
"`Issue #13773 <https://bugs.python.org/13773>`__: sqlite3.connect() gets a "
"new `uri` parameter to pass the filename as a URI, allowing custom options "
"to be passed."

#: ../../../Misc/NEWS:9592
msgid ""
"`Issue #16564 <https://bugs.python.org/16564>`__: Fixed regression relative "
"to Python2 in the operation of email.encoders.encode_noop when used with "
"binary data."
msgstr ""
"`Issue #16564 <https://bugs.python.org/16564>`__: Fixed regression relative "
"to Python2 in the operation of email.encoders.encode_noop when used with "
"binary data."

#: ../../../Misc/NEWS:9595
msgid ""
"`Issue #10355 <https://bugs.python.org/10355>`__: The mode, name, encoding "
"and newlines properties now work on SpooledTemporaryFile objects even when "
"they have not yet rolled over. Obsolete method xreadline (which has never "
"worked in Python 3) has been removed."
msgstr ""
"`Issue #10355 <https://bugs.python.org/10355>`__: The mode, name, encoding "
"and newlines properties now work on SpooledTemporaryFile objects even when "
"they have not yet rolled over. Obsolete method xreadline (which has never "
"worked in Python 3) has been removed."

#: ../../../Misc/NEWS:9600
msgid ""
"`Issue #16686 <https://bugs.python.org/16686>`__: Fixed a lot of bugs in "
"audioop module.  Fixed crashes in avgpp(), maxpp() and ratecv().  Fixed an "
"integer overflow in add(), bias(), and ratecv().  reverse(), lin2lin() and "
"ratecv() no more lose precision for 32-bit samples.  max() and rms() no more "
"returns a negative result and various other functions now work correctly "
"with 32-bit sample -0x80000000."
msgstr ""
"`Issue #16686 <https://bugs.python.org/16686>`__: Fixed a lot of bugs in "
"audioop module.  Fixed crashes in avgpp(), maxpp() and ratecv().  Fixed an "
"integer overflow in add(), bias(), and ratecv().  reverse(), lin2lin() and "
"ratecv() no more lose precision for 32-bit samples.  max() and rms() no more "
"returns a negative result and various other functions now work correctly "
"with 32-bit sample -0x80000000."

#: ../../../Misc/NEWS:9606
msgid ""
"`Issue #17073 <https://bugs.python.org/17073>`__: Fix some integer overflows "
"in sqlite3 module."
msgstr ""
"`Issue #17073 <https://bugs.python.org/17073>`__: Fix some integer overflows "
"in sqlite3 module."

#: ../../../Misc/NEWS:9608
msgid ""
"`Issue #16723 <https://bugs.python.org/16723>`__: httplib.HTTPResponse no "
"longer marked closed when the connection is automatically closed."
msgstr ""
"`Issue #16723 <https://bugs.python.org/16723>`__: httplib.HTTPResponse no "
"longer marked closed when the connection is automatically closed."

#: ../../../Misc/NEWS:9611
msgid ""
"`Issue #15359 <https://bugs.python.org/15359>`__: Add CAN_BCM protocol "
"support to the socket module. Patch by Brian Thorne."
msgstr ""
"`Issue #15359 <https://bugs.python.org/15359>`__: Add CAN_BCM protocol "
"support to the socket module. Patch by Brian Thorne."

#: ../../../Misc/NEWS:9614
msgid ""
"`Issue #16948 <https://bugs.python.org/16948>`__: Fix quoted printable body "
"encoding for non-latin1 character sets in the email package."
msgstr ""
"`Issue #16948 <https://bugs.python.org/16948>`__: Fix quoted printable body "
"encoding for non-latin1 character sets in the email package."

#: ../../../Misc/NEWS:9617
msgid ""
"`Issue #16811 <https://bugs.python.org/16811>`__: Fix folding of headers "
"with no value in the provisional email policies."
msgstr ""
"`Issue #16811 <https://bugs.python.org/16811>`__: Fix folding of headers "
"with no value in the provisional email policies."

#: ../../../Misc/NEWS:9620
msgid ""
"`Issue #17132 <https://bugs.python.org/17132>`__: Update symbol for \"yield "
"from\" grammar changes."
msgstr ""
"`Issue #17132 <https://bugs.python.org/17132>`__: Update symbol for \"yield "
"from\" grammar changes."

#: ../../../Misc/NEWS:9622
msgid ""
"`Issue #17076 <https://bugs.python.org/17076>`__: Make copying of xattrs "
"more tolerant of missing FS support. Patch by Thomas Wouters."
msgstr ""
"`Issue #17076 <https://bugs.python.org/17076>`__: Make copying of xattrs "
"more tolerant of missing FS support. Patch by Thomas Wouters."

#: ../../../Misc/NEWS:9625
msgid ""
"`Issue #17089 <https://bugs.python.org/17089>`__: Expat parser now correctly "
"works with string input when the internal XML encoding is not UTF-8 or US-"
"ASCII.  It also now accepts bytes and strings larger than 2 GiB."
msgstr ""
"`Issue #17089 <https://bugs.python.org/17089>`__: Expat parser now correctly "
"works with string input when the internal XML encoding is not UTF-8 or US-"
"ASCII.  It also now accepts bytes and strings larger than 2 GiB."

#: ../../../Misc/NEWS:9629
msgid ""
"`Issue #6083 <https://bugs.python.org/6083>`__: Fix multiple segmentation "
"faults occurred when PyArg_ParseTuple parses nested mutating sequence."
msgstr ""
"`Issue #6083 <https://bugs.python.org/6083>`__: Fix multiple segmentation "
"faults occurred when PyArg_ParseTuple parses nested mutating sequence."

#: ../../../Misc/NEWS:9632
msgid ""
"`Issue #5289 <https://bugs.python.org/5289>`__: Fix ctypes.util.find_library "
"on Solaris."
msgstr ""
"`Issue #5289 <https://bugs.python.org/5289>`__: Fix ctypes.util.find_library "
"on Solaris."

#: ../../../Misc/NEWS:9634
msgid ""
"`Issue #17106 <https://bugs.python.org/17106>`__: Fix a segmentation fault "
"in io.TextIOWrapper when an underlying stream or a decoder produces data of "
"an unexpected type (i.e. when io.TextIOWrapper initialized with text stream "
"or use bytes-to-bytes codec)."
msgstr ""
"`Issue #17106 <https://bugs.python.org/17106>`__: Fix a segmentation fault "
"in io.TextIOWrapper when an underlying stream or a decoder produces data of "
"an unexpected type (i.e. when io.TextIOWrapper initialized with text stream "
"or use bytes-to-bytes codec)."

#: ../../../Misc/NEWS:9638
msgid ""
"`Issue #17015 <https://bugs.python.org/17015>`__: When it has a spec, a Mock "
"object now inspects its signature when matching calls, so that arguments can "
"be matched positionally or by name."
msgstr ""
"`Issue #17015 <https://bugs.python.org/17015>`__: When it has a spec, a Mock "
"object now inspects its signature when matching calls, so that arguments can "
"be matched positionally or by name."

#: ../../../Misc/NEWS:9642
msgid ""
"`Issue #15633 <https://bugs.python.org/15633>`__: httplib.HTTPResponse is "
"now mark closed when the server sends less than the advertised Content-"
"Length."
msgstr ""
"`Issue #15633 <https://bugs.python.org/15633>`__: httplib.HTTPResponse is "
"now mark closed when the server sends less than the advertised Content-"
"Length."

#: ../../../Misc/NEWS:9645
msgid ""
"`Issue #12268 <https://bugs.python.org/12268>`__: The io module file object "
"write methods no longer abort early when one of its write system calls is "
"interrupted (EINTR)."
msgstr ""
"`Issue #12268 <https://bugs.python.org/12268>`__: The io module file object "
"write methods no longer abort early when one of its write system calls is "
"interrupted (EINTR)."

#: ../../../Misc/NEWS:9648
msgid ""
"`Issue #6972 <https://bugs.python.org/6972>`__: The zipfile module no longer "
"overwrites files outside of its destination path when extracting malicious "
"zip files."
msgstr ""
"`Issue #6972 <https://bugs.python.org/6972>`__: The zipfile module no longer "
"overwrites files outside of its destination path when extracting malicious "
"zip files."

#: ../../../Misc/NEWS:9651
msgid ""
"`Issue #4844 <https://bugs.python.org/4844>`__: ZipFile now raises "
"BadZipFile when opens a ZIP file with an incomplete \"End of Central "
"Directory\" record.  Original patch by Guilherme Polo and Alan McIntyre."
msgstr ""
"`Issue #4844 <https://bugs.python.org/4844>`__: ZipFile now raises "
"BadZipFile when opens a ZIP file with an incomplete \"End of Central "
"Directory\" record.  Original patch by Guilherme Polo and Alan McIntyre."

#: ../../../Misc/NEWS:9655
msgid ""
"`Issue #17071 <https://bugs.python.org/17071>`__: Signature.bind() now works "
"when one of the keyword arguments is named ``self``."
msgstr ""
"`Issue #17071 <https://bugs.python.org/17071>`__: Signature.bind() now works "
"when one of the keyword arguments is named ``self``."

#: ../../../Misc/NEWS:9658
msgid ""
"`Issue #12004 <https://bugs.python.org/12004>`__: Fix an internal error in "
"PyZipFile when writing an invalid Python file.  Patch by Ben Morgan."
msgstr ""
"`Issue #12004 <https://bugs.python.org/12004>`__: Fix an internal error in "
"PyZipFile when writing an invalid Python file.  Patch by Ben Morgan."

#: ../../../Misc/NEWS:9661
msgid ""
"Have py_compile use importlib as much as possible to avoid code duplication. "
"Code now raises FileExistsError if the file path to be used for the byte-"
"compiled file is a symlink or non-regular file as a warning that import will "
"not keep the file path type if it writes to that path."
msgstr ""

#: ../../../Misc/NEWS:9666
msgid ""
"`Issue #16972 <https://bugs.python.org/16972>`__: Have site.addpackage() "
"consider already known paths even when none are explicitly passed in. Bug "
"report and fix by Kirill."
msgstr ""
"`Issue #16972 <https://bugs.python.org/16972>`__: Have site.addpackage() "
"consider already known paths even when none are explicitly passed in. Bug "
"report and fix by Kirill."

#: ../../../Misc/NEWS:9669
msgid ""
"`Issue #1602133 <https://bugs.python.org/1602133>`__: on Mac OS X a shared "
"library build (``--enable-shared``) now fills the ``os.environ`` variable "
"correctly."
msgstr ""
"`Issue #1602133 <https://bugs.python.org/1602133>`__: on Mac OS X a shared "
"library build (``--enable-shared``) now fills the ``os.environ`` variable "
"correctly."

#: ../../../Misc/NEWS:9672
msgid ""
"`Issue #15505 <https://bugs.python.org/15505>`__: `unittest.installHandler` "
"no longer assumes SIGINT handler is set to a callable object."
msgstr ""
"`Issue #15505 <https://bugs.python.org/15505>`__: `unittest.installHandler` "
"no longer assumes SIGINT handler is set to a callable object."

#: ../../../Misc/NEWS:9675
msgid ""
"`Issue #13454 <https://bugs.python.org/13454>`__: Fix a crash when deleting "
"an iterator created by itertools.tee() if all other iterators were very "
"advanced before."
msgstr ""
"`Issue #13454 <https://bugs.python.org/13454>`__: Fix a crash when deleting "
"an iterator created by itertools.tee() if all other iterators were very "
"advanced before."

#: ../../../Misc/NEWS:9678
msgid ""
"`Issue #12411 <https://bugs.python.org/12411>`__: Fix to cgi.parse_multipart "
"to correctly use bytes boundaries and bytes data. Patch by Jonas Wagner."
msgstr ""
"`Issue #12411 <https://bugs.python.org/12411>`__: Fix to cgi.parse_multipart "
"to correctly use bytes boundaries and bytes data. Patch by Jonas Wagner."

#: ../../../Misc/NEWS:9681
msgid ""
"`Issue #16957 <https://bugs.python.org/16957>`__: shutil.which() no longer "
"searches a bare file name in the current directory on Unix and no longer "
"searches a relative file path with a directory part in PATH directories.  "
"Patch by Thomas Kluyver."
msgstr ""
"`Issue #16957 <https://bugs.python.org/16957>`__: shutil.which() no longer "
"searches a bare file name in the current directory on Unix and no longer "
"searches a relative file path with a directory part in PATH directories.  "
"Patch by Thomas Kluyver."

#: ../../../Misc/NEWS:9685
msgid ""
"`Issue #1159051 <https://bugs.python.org/1159051>`__: GzipFile now raises "
"EOFError when reading a corrupted file with truncated header or footer."
msgstr ""
"`Issue #1159051 <https://bugs.python.org/1159051>`__: GzipFile now raises "
"EOFError when reading a corrupted file with truncated header or footer."

#: ../../../Misc/NEWS:9688
msgid ""
"`Issue #16993 <https://bugs.python.org/16993>`__: shutil.which() now "
"preserves the case of the path and extension on Windows."
msgstr ""
"`Issue #16993 <https://bugs.python.org/16993>`__: shutil.which() now "
"preserves the case of the path and extension on Windows."

#: ../../../Misc/NEWS:9691
msgid ""
"`Issue #16992 <https://bugs.python.org/16992>`__: On Windows in signal."
"set_wakeup_fd, validate the file descriptor argument."
msgstr ""
"`Issue #16992 <https://bugs.python.org/16992>`__: On Windows in signal."
"set_wakeup_fd, validate the file descriptor argument."

#: ../../../Misc/NEWS:9694
msgid ""
"`Issue #16422 <https://bugs.python.org/16422>`__: For compatibility with the "
"Python version, the C version of decimal now uses strings instead of "
"integers for rounding mode constants."
msgstr ""
"`Issue #16422 <https://bugs.python.org/16422>`__: For compatibility with the "
"Python version, the C version of decimal now uses strings instead of "
"integers for rounding mode constants."

#: ../../../Misc/NEWS:9697
msgid ""
"`Issue #15861 <https://bugs.python.org/15861>`__: tkinter now correctly "
"works with lists and tuples containing strings with whitespaces, backslashes "
"or unbalanced braces."
msgstr ""
"`Issue #15861 <https://bugs.python.org/15861>`__: tkinter now correctly "
"works with lists and tuples containing strings with whitespaces, backslashes "
"or unbalanced braces."

#: ../../../Misc/NEWS:9700
msgid ""
"`Issue #9720 <https://bugs.python.org/9720>`__: zipfile now writes correct "
"local headers for files larger than 4 GiB."
msgstr ""
"`Issue #9720 <https://bugs.python.org/9720>`__: zipfile now writes correct "
"local headers for files larger than 4 GiB."

#: ../../../Misc/NEWS:9703
msgid ""
"`Issue #16955 <https://bugs.python.org/16955>`__: Fix the poll() method for "
"multiprocessing's socket connections on Windows."
msgstr ""
"`Issue #16955 <https://bugs.python.org/16955>`__: Fix the poll() method for "
"multiprocessing's socket connections on Windows."

#: ../../../Misc/NEWS:9706
msgid "SSLContext.load_dh_params() now properly closes the input file."
msgstr ""

#: ../../../Misc/NEWS:9708
msgid ""
"`Issue #15031 <https://bugs.python.org/15031>`__: Refactor some .pyc "
"management code to cut down on code duplication. Thanks to Ronan Lamy for "
"the report and taking an initial stab at the problem."
msgstr ""
"`Issue #15031 <https://bugs.python.org/15031>`__: Refactor some .pyc "
"management code to cut down on code duplication. Thanks to Ronan Lamy for "
"the report and taking an initial stab at the problem."

#: ../../../Misc/NEWS:9712
msgid ""
"`Issue #16398 <https://bugs.python.org/16398>`__: Optimize deque.rotate() so "
"that it only moves pointers and doesn't touch the underlying data with "
"increfs and decrefs."
msgstr ""
"`Issue #16398 <https://bugs.python.org/16398>`__: Optimize deque.rotate() so "
"that it only moves pointers and doesn't touch the underlying data with "
"increfs and decrefs."

#: ../../../Misc/NEWS:9715
msgid ""
"`Issue #16900 <https://bugs.python.org/16900>`__: Issue a ResourceWarning "
"when an ssl socket is left unclosed."
msgstr ""
"`Issue #16900 <https://bugs.python.org/16900>`__: Issue a ResourceWarning "
"when an ssl socket is left unclosed."

#: ../../../Misc/NEWS:9717
msgid ""
"`Issue #13899 <https://bugs.python.org/13899>`__: ``\\A``, ``\\Z``, and ``"
"\\B`` now correctly match the A, Z, and B literals when used inside "
"character classes (e.g. ``'[\\A]'``). Patch by Matthew Barnett."
msgstr ""
"`Issue #13899 <https://bugs.python.org/13899>`__: ``\\A``, ``\\Z``, and ``"
"\\B`` now correctly match the A, Z, and B literals when used inside "
"character classes (e.g. ``'[\\A]'``). Patch by Matthew Barnett."

#: ../../../Misc/NEWS:9721
msgid ""
"`Issue #15545 <https://bugs.python.org/15545>`__: Fix regression in "
"sqlite3's iterdump method where it was failing if the connection used a row "
"factory (such as sqlite3.Row) that produced unsortable objects. (Regression "
"was introduced by fix for 9750)."
msgstr ""
"`Issue #15545 <https://bugs.python.org/15545>`__: Fix regression in "
"sqlite3's iterdump method where it was failing if the connection used a row "
"factory (such as sqlite3.Row) that produced unsortable objects. (Regression "
"was introduced by fix for 9750)."

#: ../../../Misc/NEWS:9725
msgid "fcntl: add F_DUPFD_CLOEXEC constant, available on Linux 2.6.24+."
msgstr ""

#: ../../../Misc/NEWS:9727
msgid ""
"`Issue #15972 <https://bugs.python.org/15972>`__: Fix error messages when os "
"functions expecting a file name or file descriptor receive the incorrect "
"type."
msgstr ""
"`Issue #15972 <https://bugs.python.org/15972>`__: Fix error messages when os "
"functions expecting a file name or file descriptor receive the incorrect "
"type."

#: ../../../Misc/NEWS:9730
msgid ""
"`Issue #8109 <https://bugs.python.org/8109>`__: The ssl module now has "
"support for server-side SNI, thanks to a :meth:`SSLContext."
"set_servername_callback` method.  Patch by Daniel Black."
msgstr ""
"`Issue #8109 <https://bugs.python.org/8109>`__: The ssl module now has "
"support for server-side SNI, thanks to a :meth:`SSLContext."
"set_servername_callback` method.  Patch by Daniel Black."

#: ../../../Misc/NEWS:9734
msgid ""
"`Issue #16860 <https://bugs.python.org/16860>`__: In tempfile, use O_CLOEXEC "
"when available to set the close-on-exec flag atomically."
msgstr ""
"`Issue #16860 <https://bugs.python.org/16860>`__: In tempfile, use O_CLOEXEC "
"when available to set the close-on-exec flag atomically."

#: ../../../Misc/NEWS:9737
msgid ""
"`Issue #16674 <https://bugs.python.org/16674>`__: random.getrandbits() is "
"now 20-40% faster for small integers."
msgstr ""
"`Issue #16674 <https://bugs.python.org/16674>`__: random.getrandbits() is "
"now 20-40% faster for small integers."

#: ../../../Misc/NEWS:9739
msgid ""
"`Issue #16009 <https://bugs.python.org/16009>`__: JSON error messages now "
"provide more information."
msgstr ""
"`Issue #16009 <https://bugs.python.org/16009>`__: JSON error messages now "
"provide more information."

#: ../../../Misc/NEWS:9741
msgid ""
"`Issue #16828 <https://bugs.python.org/16828>`__: Fix error incorrectly "
"raised by bz2.compress(b'') and bz2.BZ2Compressor.compress(b''). Initial "
"patch by Martin Packman."
msgstr ""
"`Issue #16828 <https://bugs.python.org/16828>`__: Fix error incorrectly "
"raised by bz2.compress(b'') and bz2.BZ2Compressor.compress(b''). Initial "
"patch by Martin Packman."

#: ../../../Misc/NEWS:9744
msgid ""
"`Issue #16833 <https://bugs.python.org/16833>`__: In http.client."
"HTTPConnection, do not concatenate the request headers and body when the "
"payload exceeds 16 KB, since it can consume more memory for no benefit.  "
"Patch by Benno Leslie."
msgstr ""
"`Issue #16833 <https://bugs.python.org/16833>`__: In http.client."
"HTTPConnection, do not concatenate the request headers and body when the "
"payload exceeds 16 KB, since it can consume more memory for no benefit.  "
"Patch by Benno Leslie."

#: ../../../Misc/NEWS:9748
msgid ""
"`Issue #16541 <https://bugs.python.org/16541>`__: tk_setPalette() now works "
"with keyword arguments."
msgstr ""
"`Issue #16541 <https://bugs.python.org/16541>`__: tk_setPalette() now works "
"with keyword arguments."

#: ../../../Misc/NEWS:9750
msgid ""
"`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, `parser."
"popitem()` no longer raises ValueError. This makes `parser.clean()` work "
"correctly."
msgstr ""
"`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, `parser."
"popitem()` no longer raises ValueError. This makes `parser.clean()` work "
"correctly."

#: ../../../Misc/NEWS:9753
msgid ""
"`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
"``parser['section'] = {}`` now preserves section order within the parser. "
"This makes `parser.update()` preserve section order as well."
msgstr ""
"`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
"``parser['section'] = {}`` now preserves section order within the parser. "
"This makes `parser.update()` preserve section order as well."

#: ../../../Misc/NEWS:9757
msgid ""
"`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
"``parser['DEFAULT'] = {}`` now correctly clears previous values stored in "
"the default section. Same goes for ``parser.update({'DEFAULT': {}})``."
msgstr ""
"`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
"``parser['DEFAULT'] = {}`` now correctly clears previous values stored in "
"the default section. Same goes for ``parser.update({'DEFAULT': {}})``."

#: ../../../Misc/NEWS:9761
msgid ""
"`Issue #9586 <https://bugs.python.org/9586>`__: Redefine SEM_FAILED on "
"MacOSX to keep compiler happy."
msgstr ""
"`Issue #9586 <https://bugs.python.org/9586>`__: Redefine SEM_FAILED on "
"MacOSX to keep compiler happy."

#: ../../../Misc/NEWS:9763
msgid ""
"`Issue #16787 <https://bugs.python.org/16787>`__: Increase asyncore and "
"asynchat default output buffers size, to decrease CPU usage and increase "
"throughput."
msgstr ""
"`Issue #16787 <https://bugs.python.org/16787>`__: Increase asyncore and "
"asynchat default output buffers size, to decrease CPU usage and increase "
"throughput."

#: ../../../Misc/NEWS:9766
msgid ""
"`Issue #10527 <https://bugs.python.org/10527>`__: make multiprocessing use "
"poll() instead of select() if available."
msgstr ""
"`Issue #10527 <https://bugs.python.org/10527>`__: make multiprocessing use "
"poll() instead of select() if available."

#: ../../../Misc/NEWS:9768
msgid ""
"`Issue #16688 <https://bugs.python.org/16688>`__: Now regexes contained "
"backreferences correctly work with non-ASCII strings.  Patch by Matthew "
"Barnett."
msgstr ""
"`Issue #16688 <https://bugs.python.org/16688>`__: Now regexes contained "
"backreferences correctly work with non-ASCII strings.  Patch by Matthew "
"Barnett."

#: ../../../Misc/NEWS:9771
msgid ""
"`Issue #16486 <https://bugs.python.org/16486>`__: Make aifc files act as "
"context managers."
msgstr ""
"`Issue #16486 <https://bugs.python.org/16486>`__: Make aifc files act as "
"context managers."

#: ../../../Misc/NEWS:9773
msgid ""
"`Issue #16485 <https://bugs.python.org/16485>`__: Now file descriptors are "
"closed if file header patching failed on closing an aifc file."
msgstr ""
"`Issue #16485 <https://bugs.python.org/16485>`__: Now file descriptors are "
"closed if file header patching failed on closing an aifc file."

#: ../../../Misc/NEWS:9776
msgid ""
"`Issue #16640 <https://bugs.python.org/16640>`__: Run less code under a lock "
"in sched module."
msgstr ""
"`Issue #16640 <https://bugs.python.org/16640>`__: Run less code under a lock "
"in sched module."

#: ../../../Misc/NEWS:9778
msgid ""
"`Issue #16165 <https://bugs.python.org/16165>`__: sched.scheduler.run() no "
"longer blocks a scheduler for other threads."
msgstr ""
"`Issue #16165 <https://bugs.python.org/16165>`__: sched.scheduler.run() no "
"longer blocks a scheduler for other threads."

#: ../../../Misc/NEWS:9781
msgid ""
"`Issue #16641 <https://bugs.python.org/16641>`__: Default values of sched."
"scheduler.enter() are no longer modifiable."
msgstr ""
"`Issue #16641 <https://bugs.python.org/16641>`__: Default values of sched."
"scheduler.enter() are no longer modifiable."

#: ../../../Misc/NEWS:9784
msgid ""
"`Issue #16618 <https://bugs.python.org/16618>`__: Make glob.glob match "
"consistently across strings and bytes regarding leading dots.  Patch by "
"Serhiy Storchaka."
msgstr ""
"`Issue #16618 <https://bugs.python.org/16618>`__: Make glob.glob match "
"consistently across strings and bytes regarding leading dots.  Patch by "
"Serhiy Storchaka."

#: ../../../Misc/NEWS:9787
msgid ""
"`Issue #16788 <https://bugs.python.org/16788>`__: Add samestat to Lib/ntpath."
"py"
msgstr ""
"`Issue #16788 <https://bugs.python.org/16788>`__: Add samestat to Lib/ntpath."
"py"

#: ../../../Misc/NEWS:9789
msgid ""
"`Issue #16713 <https://bugs.python.org/16713>`__: Parsing of 'tel' urls "
"using urlparse separates params from path."
msgstr ""
"`Issue #16713 <https://bugs.python.org/16713>`__: Parsing of 'tel' urls "
"using urlparse separates params from path."

#: ../../../Misc/NEWS:9792
msgid ""
"`Issue #16443 <https://bugs.python.org/16443>`__: Add docstrings to regular "
"expression match objects. Patch by Anton Kasyanov."
msgstr ""
"`Issue #16443 <https://bugs.python.org/16443>`__: Add docstrings to regular "
"expression match objects. Patch by Anton Kasyanov."

#: ../../../Misc/NEWS:9795
msgid ""
"`Issue #15701 <https://bugs.python.org/15701>`__: Fix HTTPError info method "
"call to return the headers information."
msgstr ""
"`Issue #15701 <https://bugs.python.org/15701>`__: Fix HTTPError info method "
"call to return the headers information."

#: ../../../Misc/NEWS:9797
msgid ""
"`Issue #16752 <https://bugs.python.org/16752>`__: Add a missing import to "
"modulefinder. Patch by Berker Peksag."
msgstr ""
"`Issue #16752 <https://bugs.python.org/16752>`__: Add a missing import to "
"modulefinder. Patch by Berker Peksag."

#: ../../../Misc/NEWS:9799
msgid ""
"`Issue #16646 <https://bugs.python.org/16646>`__: ftplib.FTP.makeport() "
"might lose socket error details. (patch by Serhiy Storchaka)"
msgstr ""
"`Issue #16646 <https://bugs.python.org/16646>`__: ftplib.FTP.makeport() "
"might lose socket error details. (patch by Serhiy Storchaka)"

#: ../../../Misc/NEWS:9802
msgid ""
"`Issue #16626 <https://bugs.python.org/16626>`__: Fix infinite recursion in "
"glob.glob() on Windows when the pattern contains a wildcard in the drive or "
"UNC path.  Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16626 <https://bugs.python.org/16626>`__: Fix infinite recursion in "
"glob.glob() on Windows when the pattern contains a wildcard in the drive or "
"UNC path.  Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:9806
msgid ""
"`Issue #15783 <https://bugs.python.org/15783>`__: Except for the number "
"methods, the C version of decimal now supports all None default values "
"present in decimal.py. These values were largely undocumented."
msgstr ""
"`Issue #15783 <https://bugs.python.org/15783>`__: Except for the number "
"methods, the C version of decimal now supports all None default values "
"present in decimal.py. These values were largely undocumented."

#: ../../../Misc/NEWS:9810
msgid ""
"`Issue #11175 <https://bugs.python.org/11175>`__: argparse.FileType now "
"accepts encoding and errors arguments. Patch by Lucas Maystre."
msgstr ""
"`Issue #11175 <https://bugs.python.org/11175>`__: argparse.FileType now "
"accepts encoding and errors arguments. Patch by Lucas Maystre."

#: ../../../Misc/NEWS:9813
msgid ""
"`Issue #16488 <https://bugs.python.org/16488>`__: epoll() objects now "
"support the `with` statement.  Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16488 <https://bugs.python.org/16488>`__: epoll() objects now "
"support the `with` statement.  Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:9816
msgid ""
"`Issue #16298 <https://bugs.python.org/16298>`__: In HTTPResponse.read(), "
"close the socket when there is no Content-Length and the incoming stream is "
"finished.  Patch by Eran Rundstein."
msgstr ""
"`Issue #16298 <https://bugs.python.org/16298>`__: In HTTPResponse.read(), "
"close the socket when there is no Content-Length and the incoming stream is "
"finished.  Patch by Eran Rundstein."

#: ../../../Misc/NEWS:9820
msgid ""
"`Issue #16049 <https://bugs.python.org/16049>`__: Add abc.ABC class to "
"enable the use of inheritance to create ABCs, rather than the more "
"cumbersome metaclass=ABCMeta. Patch by Bruno Dupuis."
msgstr ""
"`Issue #16049 <https://bugs.python.org/16049>`__: Add abc.ABC class to "
"enable the use of inheritance to create ABCs, rather than the more "
"cumbersome metaclass=ABCMeta. Patch by Bruno Dupuis."

#: ../../../Misc/NEWS:9824
msgid ""
"Expose the TCP_FASTOPEN and MSG_FASTOPEN flags in socket when they're "
"available."
msgstr ""

#: ../../../Misc/NEWS:9827
msgid ""
"`Issue #15701 <https://bugs.python.org/15701>`__: Add a .headers attribute "
"to urllib.error.HTTPError. Patch contributed by Berker Peksag."
msgstr ""
"`Issue #15701 <https://bugs.python.org/15701>`__: Add a .headers attribute "
"to urllib.error.HTTPError. Patch contributed by Berker Peksag."

#: ../../../Misc/NEWS:9830
msgid ""
"`Issue #15872 <https://bugs.python.org/15872>`__: Fix 3.3 regression "
"introduced by the new fd-based shutil.rmtree that caused it to not ignore "
"certain errors when ignore_errors was set. Patch by Alessandro Moura and "
"Serhiy Storchaka."
msgstr ""
"`Issue #15872 <https://bugs.python.org/15872>`__: Fix 3.3 regression "
"introduced by the new fd-based shutil.rmtree that caused it to not ignore "
"certain errors when ignore_errors was set. Patch by Alessandro Moura and "
"Serhiy Storchaka."

#: ../../../Misc/NEWS:9834
msgid ""
"`Issue #16248 <https://bugs.python.org/16248>`__: Disable code execution "
"from the user's home directory by tkinter when the -E flag is passed to "
"Python.  Patch by Zachary Ware."
msgstr ""
"`Issue #16248 <https://bugs.python.org/16248>`__: Disable code execution "
"from the user's home directory by tkinter when the -E flag is passed to "
"Python.  Patch by Zachary Ware."

#: ../../../Misc/NEWS:9837
msgid ""
"`Issue #13390 <https://bugs.python.org/13390>`__: New function :func:`sys."
"getallocatedblocks()` returns the number of memory blocks currently "
"allocated."
msgstr ""
"`Issue #13390 <https://bugs.python.org/13390>`__: New function :func:`sys."
"getallocatedblocks()` returns the number of memory blocks currently "
"allocated."

#: ../../../Misc/NEWS:9840
msgid ""
"`Issue #16628 <https://bugs.python.org/16628>`__: Fix a memory leak in "
"ctypes.resize()."
msgstr ""
"`Issue #16628 <https://bugs.python.org/16628>`__: Fix a memory leak in "
"ctypes.resize()."

#: ../../../Misc/NEWS:9842
msgid ""
"`Issue #13614 <https://bugs.python.org/13614>`__: Fix setup.py register "
"failure with invalid rst in description. Patch by Julien Courteau and Pierre "
"Paul Lefebvre."
msgstr ""
"`Issue #13614 <https://bugs.python.org/13614>`__: Fix setup.py register "
"failure with invalid rst in description. Patch by Julien Courteau and Pierre "
"Paul Lefebvre."

#: ../../../Misc/NEWS:9845
msgid ""
"`Issue #13512 <https://bugs.python.org/13512>`__: Create ~/.pypirc securely "
"(CVE-2011-4944).  Initial patch by Philip Jenvey, tested by Mageia and "
"Debian."
msgstr ""
"`Issue #13512 <https://bugs.python.org/13512>`__: Create ~/.pypirc securely "
"(CVE-2011-4944).  Initial patch by Philip Jenvey, tested by Mageia and "
"Debian."

#: ../../../Misc/NEWS:9848
msgid ""
"`Issue #7719 <https://bugs.python.org/7719>`__: Make distutils ignore ``."
"nfs*`` files instead of choking later on.  Initial patch by SilentGhost and "
"Jeff Ramnani."
msgstr ""
"`Issue #7719 <https://bugs.python.org/7719>`__: Make distutils ignore ``."
"nfs*`` files instead of choking later on.  Initial patch by SilentGhost and "
"Jeff Ramnani."

#: ../../../Misc/NEWS:9851
msgid ""
"`Issue #13120 <https://bugs.python.org/13120>`__: Allow calling pdb."
"set_trace() from thread. Patch by Ilya Sandler."
msgstr ""
"`Issue #13120 <https://bugs.python.org/13120>`__: Allow calling pdb."
"set_trace() from thread. Patch by Ilya Sandler."

#: ../../../Misc/NEWS:9854
msgid ""
"`Issue #16585 <https://bugs.python.org/16585>`__: Make CJK encoders support "
"error handlers that return bytes per PEP 383."
msgstr ""
"`Issue #16585 <https://bugs.python.org/16585>`__: Make CJK encoders support "
"error handlers that return bytes per PEP 383."

#: ../../../Misc/NEWS:9857
msgid ""
"`Issue #10182 <https://bugs.python.org/10182>`__: The re module doesn't "
"truncate indices to 32 bits anymore. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #10182 <https://bugs.python.org/10182>`__: The re module doesn't "
"truncate indices to 32 bits anymore. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:9860
msgid ""
"`Issue #16333 <https://bugs.python.org/16333>`__: use (\",\", \": \") as "
"default separator in json when indent is specified, to avoid trailing "
"whitespace.  Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16333 <https://bugs.python.org/16333>`__: use (\",\", \": \") as "
"default separator in json when indent is specified, to avoid trailing "
"whitespace.  Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:9863
msgid ""
"`Issue #16573 <https://bugs.python.org/16573>`__: In 2to3, treat enumerate() "
"like a consuming call, so superfluous list() calls aren't added to filter(), "
"map(), and zip() which are directly passed enumerate()."
msgstr ""
"`Issue #16573 <https://bugs.python.org/16573>`__: In 2to3, treat enumerate() "
"like a consuming call, so superfluous list() calls aren't added to filter(), "
"map(), and zip() which are directly passed enumerate()."

#: ../../../Misc/NEWS:9867
msgid ""
"`Issue #16464 <https://bugs.python.org/16464>`__: Reset the Content-Length "
"header when a urllib Request is reused with new data."
msgstr ""
"`Issue #16464 <https://bugs.python.org/16464>`__: Reset the Content-Length "
"header when a urllib Request is reused with new data."

#: ../../../Misc/NEWS:9870
msgid ""
"`Issue #12848 <https://bugs.python.org/12848>`__: The pure Python pickle "
"implementation now treats object lengths as unsigned 32-bit integers, like "
"the C implementation does. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #12848 <https://bugs.python.org/12848>`__: The pure Python pickle "
"implementation now treats object lengths as unsigned 32-bit integers, like "
"the C implementation does. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:9874
msgid ""
"`Issue #16423 <https://bugs.python.org/16423>`__: urllib.request now has "
"support for ``data:`` URLs.  Patch by Mathias Panzenb√∂ck."
msgstr ""
"`Issue #16423 <https://bugs.python.org/16423>`__: urllib.request now has "
"support for ``data:`` URLs.  Patch by Mathias Panzenb√∂ck."

#: ../../../Misc/NEWS:9877
msgid ""
"`Issue #4473 <https://bugs.python.org/4473>`__: Add a POP3.stls() to switch "
"a clear-text POP3 session into an encrypted POP3 session, on supported "
"servers.  Patch by Lorenzo Catucci."
msgstr ""
"`Issue #4473 <https://bugs.python.org/4473>`__: Add a POP3.stls() to switch "
"a clear-text POP3 session into an encrypted POP3 session, on supported "
"servers.  Patch by Lorenzo Catucci."

#: ../../../Misc/NEWS:9880
msgid ""
"`Issue #4473 <https://bugs.python.org/4473>`__: Add a POP3.capa() method to "
"query the capabilities advertised by the POP3 server.  Patch by Lorenzo "
"Catucci."
msgstr ""
"`Issue #4473 <https://bugs.python.org/4473>`__: Add a POP3.capa() method to "
"query the capabilities advertised by the POP3 server.  Patch by Lorenzo "
"Catucci."

#: ../../../Misc/NEWS:9883
msgid ""
"`Issue #4473 <https://bugs.python.org/4473>`__: Ensure the socket is "
"shutdown cleanly in POP3.close(). Patch by Lorenzo Catucci."
msgstr ""
"`Issue #4473 <https://bugs.python.org/4473>`__: Ensure the socket is "
"shutdown cleanly in POP3.close(). Patch by Lorenzo Catucci."

#: ../../../Misc/NEWS:9886
msgid ""
"`Issue #16522 <https://bugs.python.org/16522>`__: added FAIL_FAST flag to "
"doctest."
msgstr ""
"`Issue #16522 <https://bugs.python.org/16522>`__: added FAIL_FAST flag to "
"doctest."

#: ../../../Misc/NEWS:9888
msgid ""
"`Issue #15627 <https://bugs.python.org/15627>`__: Add the importlib.abc."
"InspectLoader.source_to_code() method."
msgstr ""
"`Issue #15627 <https://bugs.python.org/15627>`__: Add the importlib.abc."
"InspectLoader.source_to_code() method."

#: ../../../Misc/NEWS:9890
msgid ""
"`Issue #16408 <https://bugs.python.org/16408>`__: Fix file descriptors not "
"being closed in error conditions in the zipfile module.  Patch by Serhiy "
"Storchaka."
msgstr ""
"`Issue #16408 <https://bugs.python.org/16408>`__: Fix file descriptors not "
"being closed in error conditions in the zipfile module.  Patch by Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:9893
msgid ""
"`Issue #14631 <https://bugs.python.org/14631>`__: Add a new :class:`weakref."
"WeakMethod` to simulate weak references to bound methods."
msgstr ""
"`Issue #14631 <https://bugs.python.org/14631>`__: Add a new :class:`weakref."
"WeakMethod` to simulate weak references to bound methods."

#: ../../../Misc/NEWS:9896
msgid ""
"`Issue #16469 <https://bugs.python.org/16469>`__: Fix exceptions from float -"
"> Fraction and Decimal -> Fraction conversions for special values to be "
"consistent with those for float -> int and Decimal -> int.  Patch by Alexey "
"Kachayev."
msgstr ""
"`Issue #16469 <https://bugs.python.org/16469>`__: Fix exceptions from float -"
"> Fraction and Decimal -> Fraction conversions for special values to be "
"consistent with those for float -> int and Decimal -> int.  Patch by Alexey "
"Kachayev."

#: ../../../Misc/NEWS:9900
msgid ""
"`Issue #16481 <https://bugs.python.org/16481>`__: multiprocessing no longer "
"leaks process handles on Windows."
msgstr ""
"`Issue #16481 <https://bugs.python.org/16481>`__: multiprocessing no longer "
"leaks process handles on Windows."

#: ../../../Misc/NEWS:9902
msgid ""
"`Issue #12428 <https://bugs.python.org/12428>`__: Add a pure Python "
"implementation of functools.partial(). Patch by Brian Thorne."
msgstr ""
"`Issue #12428 <https://bugs.python.org/12428>`__: Add a pure Python "
"implementation of functools.partial(). Patch by Brian Thorne."

#: ../../../Misc/NEWS:9905
msgid ""
"`Issue #16140 <https://bugs.python.org/16140>`__: The subprocess module no "
"longer double closes its child subprocess.PIPE parent file descriptors on "
"child error prior to exec()."
msgstr ""
"`Issue #16140 <https://bugs.python.org/16140>`__: The subprocess module no "
"longer double closes its child subprocess.PIPE parent file descriptors on "
"child error prior to exec()."

#: ../../../Misc/NEWS:9908
msgid ""
"Remove a bare print to stdout from the subprocess module that could have "
"happened if the child process wrote garbage to its pre-exec error pipe."
msgstr ""

#: ../../../Misc/NEWS:9911
msgid ""
"The subprocess module now raises its own SubprocessError instead of a "
"RuntimeError in various error situations which should not normally happen."
msgstr ""

#: ../../../Misc/NEWS:9914
msgid ""
"`Issue #16327 <https://bugs.python.org/16327>`__: The subprocess module no "
"longer leaks file descriptors used for stdin/stdout/stderr pipes to the "
"child when fork() fails."
msgstr ""
"`Issue #16327 <https://bugs.python.org/16327>`__: The subprocess module no "
"longer leaks file descriptors used for stdin/stdout/stderr pipes to the "
"child when fork() fails."

#: ../../../Misc/NEWS:9917
msgid ""
"`Issue #14396 <https://bugs.python.org/14396>`__: Handle the odd rare case "
"of waitpid returning 0 when not expected in subprocess.Popen.wait()."
msgstr ""
"`Issue #14396 <https://bugs.python.org/14396>`__: Handle the odd rare case "
"of waitpid returning 0 when not expected in subprocess.Popen.wait()."

#: ../../../Misc/NEWS:9920
msgid ""
"`Issue #16411 <https://bugs.python.org/16411>`__: Fix a bug where zlib."
"decompressobj().flush() might try to access previously-freed memory. Patch "
"by Serhiy Storchaka."
msgstr ""
"`Issue #16411 <https://bugs.python.org/16411>`__: Fix a bug where zlib."
"decompressobj().flush() might try to access previously-freed memory. Patch "
"by Serhiy Storchaka."

#: ../../../Misc/NEWS:9923
msgid ""
"`Issue #16357 <https://bugs.python.org/16357>`__: fix calling accept() on a "
"SSLSocket created through SSLContext.wrap_socket().  Original patch by Jeff "
"McNeil."
msgstr ""
"`Issue #16357 <https://bugs.python.org/16357>`__: fix calling accept() on a "
"SSLSocket created through SSLContext.wrap_socket().  Original patch by Jeff "
"McNeil."

#: ../../../Misc/NEWS:9926
msgid ""
"`Issue #16409 <https://bugs.python.org/16409>`__: The reporthook callback "
"made by the legacy urllib.request.urlretrieve API now properly supplies a "
"constant non-zero block_size as it did in Python 3.2 and 2.7.  This matches "
"the behavior of urllib.request.URLopener.retrieve."
msgstr ""
"`Issue #16409 <https://bugs.python.org/16409>`__: The reporthook callback "
"made by the legacy urllib.request.urlretrieve API now properly supplies a "
"constant non-zero block_size as it did in Python 3.2 and 2.7.  This matches "
"the behavior of urllib.request.URLopener.retrieve."

#: ../../../Misc/NEWS:9931
msgid ""
"`Issue #16431 <https://bugs.python.org/16431>`__: Use the type information "
"when constructing a Decimal subtype from a Decimal argument."
msgstr ""
"`Issue #16431 <https://bugs.python.org/16431>`__: Use the type information "
"when constructing a Decimal subtype from a Decimal argument."

#: ../../../Misc/NEWS:9934
msgid ""
"`Issue #15641 <https://bugs.python.org/15641>`__: Clean up deprecated "
"classes from importlib. Patch by Taras Lyapun."
msgstr ""
"`Issue #15641 <https://bugs.python.org/15641>`__: Clean up deprecated "
"classes from importlib. Patch by Taras Lyapun."

#: ../../../Misc/NEWS:9937
msgid ""
"`Issue #16350 <https://bugs.python.org/16350>`__: zlib.decompressobj()."
"decompress() now accumulates data from successive calls after EOF in "
"unused_data, instead of only saving the argument to the last call. "
"decompressobj().flush() now correctly sets unused_data and unconsumed_tail. "
"A bug in the handling of MemoryError when setting the unconsumed_tail "
"attribute has also been fixed. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16350 <https://bugs.python.org/16350>`__: zlib.decompressobj()."
"decompress() now accumulates data from successive calls after EOF in "
"unused_data, instead of only saving the argument to the last call. "
"decompressobj().flush() now correctly sets unused_data and unconsumed_tail. "
"A bug in the handling of MemoryError when setting the unconsumed_tail "
"attribute has also been fixed. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:9943
msgid ""
"`Issue #12759 <https://bugs.python.org/12759>`__: sre_parse now raises a "
"proper error when the name of the group is missing.  Initial patch by Serhiy "
"Storchaka."
msgstr ""
"`Issue #12759 <https://bugs.python.org/12759>`__: sre_parse now raises a "
"proper error when the name of the group is missing.  Initial patch by Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:9946
msgid ""
"`Issue #16152 <https://bugs.python.org/16152>`__: fix tokenize to ignore "
"whitespace at the end of the code when no newline is found.  Patch by Ned "
"Batchelder."
msgstr ""
"`Issue #16152 <https://bugs.python.org/16152>`__: fix tokenize to ignore "
"whitespace at the end of the code when no newline is found.  Patch by Ned "
"Batchelder."

#: ../../../Misc/NEWS:9949
msgid ""
"`Issue #16284 <https://bugs.python.org/16284>`__: Prevent keeping "
"unnecessary references to worker functions in concurrent.futures "
"ThreadPoolExecutor."
msgstr ""
"`Issue #16284 <https://bugs.python.org/16284>`__: Prevent keeping "
"unnecessary references to worker functions in concurrent.futures "
"ThreadPoolExecutor."

#: ../../../Misc/NEWS:9952
msgid ""
"`Issue #16230 <https://bugs.python.org/16230>`__: Fix a crash in select."
"select() when one of the lists changes size while iterated on.  Patch by "
"Serhiy Storchaka."
msgstr ""
"`Issue #16230 <https://bugs.python.org/16230>`__: Fix a crash in select."
"select() when one of the lists changes size while iterated on.  Patch by "
"Serhiy Storchaka."

#: ../../../Misc/NEWS:9955
msgid ""
"`Issue #16228 <https://bugs.python.org/16228>`__: Fix a crash in the json "
"module where a list changes size while it is being encoded.  Patch by Serhiy "
"Storchaka."
msgstr ""
"`Issue #16228 <https://bugs.python.org/16228>`__: Fix a crash in the json "
"module where a list changes size while it is being encoded.  Patch by Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:9958
msgid ""
"`Issue #16351 <https://bugs.python.org/16351>`__: New function gc."
"get_stats() returns per-generation collection statistics."
msgstr ""
"`Issue #16351 <https://bugs.python.org/16351>`__: New function gc."
"get_stats() returns per-generation collection statistics."

#: ../../../Misc/NEWS:9961
msgid ""
"`Issue #14897 <https://bugs.python.org/14897>`__: Enhance error messages of "
"struct.pack and struct.pack_into. Patch by Matti M√§ki."
msgstr ""
"`Issue #14897 <https://bugs.python.org/14897>`__: Enhance error messages of "
"struct.pack and struct.pack_into. Patch by Matti M√§ki."

#: ../../../Misc/NEWS:9964
msgid ""
"`Issue #16316 <https://bugs.python.org/16316>`__: mimetypes now recognizes "
"the .xz and .txz (.tar.xz) extensions. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16316 <https://bugs.python.org/16316>`__: mimetypes now recognizes "
"the .xz and .txz (.tar.xz) extensions. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:9967
msgid ""
"`Issue #12890 <https://bugs.python.org/12890>`__: cgitb no longer prints "
"spurious <p> tags in text mode when the logdir option is specified."
msgstr ""
"`Issue #12890 <https://bugs.python.org/12890>`__: cgitb no longer prints "
"spurious <p> tags in text mode when the logdir option is specified."

#: ../../../Misc/NEWS:9970
msgid ""
"`Issue #16307 <https://bugs.python.org/16307>`__: Fix multiprocessing.Pool."
"map_async not calling its callbacks. Patch by Janne Karila."
msgstr ""
"`Issue #16307 <https://bugs.python.org/16307>`__: Fix multiprocessing.Pool."
"map_async not calling its callbacks. Patch by Janne Karila."

#: ../../../Misc/NEWS:9973
msgid ""
"`Issue #16305 <https://bugs.python.org/16305>`__: Fix a segmentation fault "
"occurring when interrupting math.factorial."
msgstr ""
"`Issue #16305 <https://bugs.python.org/16305>`__: Fix a segmentation fault "
"occurring when interrupting math.factorial."

#: ../../../Misc/NEWS:9976
msgid ""
"`Issue #16116 <https://bugs.python.org/16116>`__: Fix include and library "
"paths to be correct when building C extensions in venvs."
msgstr ""
"`Issue #16116 <https://bugs.python.org/16116>`__: Fix include and library "
"paths to be correct when building C extensions in venvs."

#: ../../../Misc/NEWS:9979
msgid ""
"`Issue #16245 <https://bugs.python.org/16245>`__: Fix the value of a few "
"entities in html.entities.html5."
msgstr ""
"`Issue #16245 <https://bugs.python.org/16245>`__: Fix the value of a few "
"entities in html.entities.html5."

#: ../../../Misc/NEWS:9981
msgid ""
"`Issue #16301 <https://bugs.python.org/16301>`__: Fix the localhost "
"verification in urllib/request.py for ``file://`` urls."
msgstr ""
"`Issue #16301 <https://bugs.python.org/16301>`__: Fix the localhost "
"verification in urllib/request.py for ``file://`` urls."

#: ../../../Misc/NEWS:9984
msgid ""
"`Issue #16250 <https://bugs.python.org/16250>`__: Fix the invocations of "
"URLError which had misplaced filename attribute for exception."
msgstr ""
"`Issue #16250 <https://bugs.python.org/16250>`__: Fix the invocations of "
"URLError which had misplaced filename attribute for exception."

#: ../../../Misc/NEWS:9987
msgid ""
"`Issue #10836 <https://bugs.python.org/10836>`__: Fix exception raised when "
"file not found in urlretrieve Initial patch by Ezio Melotti."
msgstr ""
"`Issue #10836 <https://bugs.python.org/10836>`__: Fix exception raised when "
"file not found in urlretrieve Initial patch by Ezio Melotti."

#: ../../../Misc/NEWS:9990
msgid ""
"`Issue #14398 <https://bugs.python.org/14398>`__: Fix size truncation and "
"overflow bugs in the bz2 module."
msgstr ""
"`Issue #14398 <https://bugs.python.org/14398>`__: Fix size truncation and "
"overflow bugs in the bz2 module."

#: ../../../Misc/NEWS:9992
msgid ""
"`Issue #12692 <https://bugs.python.org/12692>`__: Fix resource leak in "
"urllib.request when talking to an HTTP server that does not include a "
"``Connection: close`` header in its responses."
msgstr ""
"`Issue #12692 <https://bugs.python.org/12692>`__: Fix resource leak in "
"urllib.request when talking to an HTTP server that does not include a "
"``Connection: close`` header in its responses."

#: ../../../Misc/NEWS:9995
msgid ""
"`Issue #12034 <https://bugs.python.org/12034>`__: Fix bogus caching of "
"result in check_GetFinalPathNameByHandle. Patch by Atsuo Ishimoto."
msgstr ""
"`Issue #12034 <https://bugs.python.org/12034>`__: Fix bogus caching of "
"result in check_GetFinalPathNameByHandle. Patch by Atsuo Ishimoto."

#: ../../../Misc/NEWS:9998
msgid ""
"Improve performance of `lzma.LZMAFile` (see also `issue #16034 <https://bugs."
"python.org/16034>`__)."
msgstr ""

#: ../../../Misc/NEWS:10000
msgid ""
"`Issue #16220 <https://bugs.python.org/16220>`__: wsgiref now always calls "
"close() on an iterable response. Patch by Brent Tubbs."
msgstr ""
"`Issue #16220 <https://bugs.python.org/16220>`__: wsgiref now always calls "
"close() on an iterable response. Patch by Brent Tubbs."

#: ../../../Misc/NEWS:10003
msgid ""
"`Issue #16270 <https://bugs.python.org/16270>`__: urllib may hang when used "
"for retrieving files via FTP by using a context manager.  Patch by Giampaolo "
"Rodola'."
msgstr ""
"`Issue #16270 <https://bugs.python.org/16270>`__: urllib may hang when used "
"for retrieving files via FTP by using a context manager.  Patch by Giampaolo "
"Rodola'."

#: ../../../Misc/NEWS:10006
msgid ""
"`Issue #16461 <https://bugs.python.org/16461>`__: Wave library should be "
"able to deal with 4GB wav files, and sample rate of 44100 Hz."
msgstr ""
"`Issue #16461 <https://bugs.python.org/16461>`__: Wave library should be "
"able to deal with 4GB wav files, and sample rate of 44100 Hz."

#: ../../../Misc/NEWS:10009
msgid ""
"`Issue #16176 <https://bugs.python.org/16176>`__: Properly identify Windows "
"8 via platform.platform()"
msgstr ""
"`Issue #16176 <https://bugs.python.org/16176>`__: Properly identify Windows "
"8 via platform.platform()"

#: ../../../Misc/NEWS:10011
msgid ""
"`Issue #16088 <https://bugs.python.org/16088>`__: BaseHTTPRequestHandler's "
"send_error method includes a Content-Length header in its response now. "
"Patch by Antoine Pitrou."
msgstr ""
"`Issue #16088 <https://bugs.python.org/16088>`__: BaseHTTPRequestHandler's "
"send_error method includes a Content-Length header in its response now. "
"Patch by Antoine Pitrou."

#: ../../../Misc/NEWS:10014
msgid ""
"`Issue #16114 <https://bugs.python.org/16114>`__: The subprocess module no "
"longer provides a misleading error message stating that args[0] did not "
"exist when either the cwd or executable keyword arguments specified a path "
"that did not exist."
msgstr ""
"`Issue #16114 <https://bugs.python.org/16114>`__: The subprocess module no "
"longer provides a misleading error message stating that args[0] did not "
"exist when either the cwd or executable keyword arguments specified a path "
"that did not exist."

#: ../../../Misc/NEWS:10018
msgid ""
"`Issue #16169 <https://bugs.python.org/16169>`__: Fix ctypes.WinError()'s "
"confusion between errno and winerror."
msgstr ""
"`Issue #16169 <https://bugs.python.org/16169>`__: Fix ctypes.WinError()'s "
"confusion between errno and winerror."

#: ../../../Misc/NEWS:10020
msgid ""
"`Issue #16110 <https://bugs.python.org/16110>`__: logging.fileConfig now "
"accepts a pre-initialised ConfigParser instance."
msgstr ""
"`Issue #16110 <https://bugs.python.org/16110>`__: logging.fileConfig now "
"accepts a pre-initialised ConfigParser instance."

#: ../../../Misc/NEWS:10023
msgid ""
"`Issue #1492704 <https://bugs.python.org/1492704>`__: shutil.copyfile() "
"raises a distinct SameFileError now if source and destination are the same "
"file. Patch by Atsuo Ishimoto."
msgstr ""
"`Issue #1492704 <https://bugs.python.org/1492704>`__: shutil.copyfile() "
"raises a distinct SameFileError now if source and destination are the same "
"file. Patch by Atsuo Ishimoto."

#: ../../../Misc/NEWS:10026
msgid ""
"`Issue #13896 <https://bugs.python.org/13896>`__: Make shelf instances work "
"with 'with' as context managers. Original patch by Filip Gruszczy≈Ñski."
msgstr ""
"`Issue #13896 <https://bugs.python.org/13896>`__: Make shelf instances work "
"with 'with' as context managers. Original patch by Filip Gruszczy≈Ñski."

#: ../../../Misc/NEWS:10029
msgid ""
"`Issue #15417 <https://bugs.python.org/15417>`__: Add support for csh and "
"fish in venv activation scripts."
msgstr ""
"`Issue #15417 <https://bugs.python.org/15417>`__: Add support for csh and "
"fish in venv activation scripts."

#: ../../../Misc/NEWS:10031
msgid ""
"`Issue #14377 <https://bugs.python.org/14377>`__: ElementTree.write and some "
"of the module-level functions have a new parameter - *short_empty_elements*. "
"It controls how elements with no contents are emitted."
msgstr ""
"`Issue #14377 <https://bugs.python.org/14377>`__: ElementTree.write and some "
"of the module-level functions have a new parameter - *short_empty_elements*. "
"It controls how elements with no contents are emitted."

#: ../../../Misc/NEWS:10035
msgid ""
"`Issue #16089 <https://bugs.python.org/16089>`__: Allow ElementTree."
"TreeBuilder to work again with a non-Element element_factory (fixes a "
"regression in SimpleTAL)."
msgstr ""
"`Issue #16089 <https://bugs.python.org/16089>`__: Allow ElementTree."
"TreeBuilder to work again with a non-Element element_factory (fixes a "
"regression in SimpleTAL)."

#: ../../../Misc/NEWS:10038
msgid ""
"`Issue #9650 <https://bugs.python.org/9650>`__: List commonly used format "
"codes in time.strftime and time.strptime docsttings.  Original patch by Mike "
"Hoy."
msgstr ""
"`Issue #9650 <https://bugs.python.org/9650>`__: List commonly used format "
"codes in time.strftime and time.strptime docsttings.  Original patch by Mike "
"Hoy."

#: ../../../Misc/NEWS:10041
msgid ""
"`Issue #15452 <https://bugs.python.org/15452>`__: logging configuration "
"socket listener now has a verify option that allows an application to apply "
"a verification function to the received configuration data before it is "
"acted upon."
msgstr ""
"`Issue #15452 <https://bugs.python.org/15452>`__: logging configuration "
"socket listener now has a verify option that allows an application to apply "
"a verification function to the received configuration data before it is "
"acted upon."

#: ../../../Misc/NEWS:10045
msgid ""
"`Issue #16034 <https://bugs.python.org/16034>`__: Fix performance "
"regressions in the new `bz2.BZ2File` implementation.  Initial patch by "
"Serhiy Storchaka."
msgstr ""
"`Issue #16034 <https://bugs.python.org/16034>`__: Fix performance "
"regressions in the new `bz2.BZ2File` implementation.  Initial patch by "
"Serhiy Storchaka."

#: ../../../Misc/NEWS:10048
msgid ""
"`pty.spawn()` now returns the child process status returned by `os."
"waitpid()`."
msgstr ""

#: ../../../Misc/NEWS:10050
msgid ""
"`Issue #15756 <https://bugs.python.org/15756>`__: `subprocess.poll()` now "
"properly handles `errno.ECHILD` to return a returncode of 0 when the child "
"has already exited or cannot be waited on."
msgstr ""
"`Issue #15756 <https://bugs.python.org/15756>`__: `subprocess.poll()` now "
"properly handles `errno.ECHILD` to return a returncode of 0 when the child "
"has already exited or cannot be waited on."

#: ../../../Misc/NEWS:10054
msgid ""
"`Issue #15323 <https://bugs.python.org/15323>`__: Improve failure message of "
"`Mock.assert_called_once_with()`."
msgstr ""
"`Issue #15323 <https://bugs.python.org/15323>`__: Improve failure message of "
"`Mock.assert_called_once_with()`."

#: ../../../Misc/NEWS:10056
msgid ""
"`Issue #16064 <https://bugs.python.org/16064>`__: ``unittest -m`` claims "
"executable is \"python\", not \"python3\"."
msgstr ""
"`Issue #16064 <https://bugs.python.org/16064>`__: ``unittest -m`` claims "
"executable is \"python\", not \"python3\"."

#: ../../../Misc/NEWS:10058
msgid ""
"`Issue #12376 <https://bugs.python.org/12376>`__: Pass on parameters in "
"`TextTestResult.__init__()` super call."
msgstr ""
"`Issue #12376 <https://bugs.python.org/12376>`__: Pass on parameters in "
"`TextTestResult.__init__()` super call."

#: ../../../Misc/NEWS:10060
msgid ""
"`Issue #15222 <https://bugs.python.org/15222>`__: Insert blank line after "
"each message in mbox mailboxes."
msgstr ""
"`Issue #15222 <https://bugs.python.org/15222>`__: Insert blank line after "
"each message in mbox mailboxes."

#: ../../../Misc/NEWS:10062
msgid ""
"`Issue #16013 <https://bugs.python.org/16013>`__: Fix `csv.Reader` parsing "
"issue with ending quote characters. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16013 <https://bugs.python.org/16013>`__: Fix `csv.Reader` parsing "
"issue with ending quote characters. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:10065
msgid ""
"`Issue #15421 <https://bugs.python.org/15421>`__: Fix an OverflowError in "
"`Calendar.itermonthdates()` after `datetime.MAXYEAR`.  Patch by C√©dric Krier."
msgstr ""
"`Issue #15421 <https://bugs.python.org/15421>`__: Fix an OverflowError in "
"`Calendar.itermonthdates()` after `datetime.MAXYEAR`.  Patch by C√©dric Krier."

#: ../../../Misc/NEWS:10068
msgid ""
"`Issue #16112 <https://bugs.python.org/16112>`__: platform.architecture does "
"not correctly escape argument to /usr/bin/file.  Patch by David Benjamin."
msgstr ""
"`Issue #16112 <https://bugs.python.org/16112>`__: platform.architecture does "
"not correctly escape argument to /usr/bin/file.  Patch by David Benjamin."

#: ../../../Misc/NEWS:10071
msgid ""
"`Issue #15970 <https://bugs.python.org/15970>`__: `xml.etree.ElementTree` "
"now serializes correctly the empty HTML elements 'meta' and 'param'."
msgstr ""
"`Issue #15970 <https://bugs.python.org/15970>`__: `xml.etree.ElementTree` "
"now serializes correctly the empty HTML elements 'meta' and 'param'."

#: ../../../Misc/NEWS:10074
msgid ""
"`Issue #15842 <https://bugs.python.org/15842>`__: The `SocketIO.{readable,"
"writable,seekable}` methods now raise ValueError when the file-like object "
"is closed.  Patch by Alessandro Moura."
msgstr ""
"`Issue #15842 <https://bugs.python.org/15842>`__: The `SocketIO.{readable,"
"writable,seekable}` methods now raise ValueError when the file-like object "
"is closed.  Patch by Alessandro Moura."

#: ../../../Misc/NEWS:10077
msgid ""
"`Issue #15876 <https://bugs.python.org/15876>`__: Fix a refleak in the "
"`curses` module: window.encoding."
msgstr ""
"`Issue #15876 <https://bugs.python.org/15876>`__: Fix a refleak in the "
"`curses` module: window.encoding."

#: ../../../Misc/NEWS:10079
msgid ""
"`Issue #15881 <https://bugs.python.org/15881>`__: Fix `atexit` hook in "
"`multiprocessing`.  Original patch by Chris McDonough."
msgstr ""
"`Issue #15881 <https://bugs.python.org/15881>`__: Fix `atexit` hook in "
"`multiprocessing`.  Original patch by Chris McDonough."

#: ../../../Misc/NEWS:10082
msgid ""
"`Issue #15841 <https://bugs.python.org/15841>`__: The readable(), writable() "
"and seekable() methods of `io.BytesIO` and `io.StringIO` objects now raise "
"ValueError when the object has been closed.  Patch by Alessandro Moura."
msgstr ""
"`Issue #15841 <https://bugs.python.org/15841>`__: The readable(), writable() "
"and seekable() methods of `io.BytesIO` and `io.StringIO` objects now raise "
"ValueError when the object has been closed.  Patch by Alessandro Moura."

#: ../../../Misc/NEWS:10086
msgid ""
"`Issue #15447 <https://bugs.python.org/15447>`__: Use `subprocess.DEVNULL` "
"in webbrowser, instead of opening `os.devnull` explicitly and leaving it "
"open."
msgstr ""
"`Issue #15447 <https://bugs.python.org/15447>`__: Use `subprocess.DEVNULL` "
"in webbrowser, instead of opening `os.devnull` explicitly and leaving it "
"open."

#: ../../../Misc/NEWS:10089
msgid ""
"`Issue #15509 <https://bugs.python.org/15509>`__: `webbrowser.UnixBrowser` "
"no longer passes empty arguments to Popen when ``%action`` substitutions "
"produce empty strings."
msgstr ""
"`Issue #15509 <https://bugs.python.org/15509>`__: `webbrowser.UnixBrowser` "
"no longer passes empty arguments to Popen when ``%action`` substitutions "
"produce empty strings."

#: ../../../Misc/NEWS:10092
msgid ""
"`Issue #12776 <https://bugs.python.org/12776>`__, `issue #11839 <https://"
"bugs.python.org/11839>`__: Call `argparse` type function (specified by "
"add_argument) only once. Before, the type function was called twice in the "
"case where the default was specified and the argument was given as well.  "
"This was especially problematic for the FileType type, as a default file "
"would always be opened, even if a file argument was specified on the command "
"line."
msgstr ""
"`Issue #12776 <https://bugs.python.org/12776>`__, `issue #11839 <https://"
"bugs.python.org/11839>`__: Call `argparse` type function (specified by "
"add_argument) only once. Before, the type function was called twice in the "
"case where the default was specified and the argument was given as well.  "
"This was especially problematic for the FileType type, as a default file "
"would always be opened, even if a file argument was specified on the command "
"line."

#: ../../../Misc/NEWS:10098
msgid ""
"`Issue #15906 <https://bugs.python.org/15906>`__: Fix a regression in "
"argparse caused by the preceding change, when ``action='append'``, "
"``type='str'`` and ``default=[]``."
msgstr ""
"`Issue #15906 <https://bugs.python.org/15906>`__: Fix a regression in "
"argparse caused by the preceding change, when ``action='append'``, "
"``type='str'`` and ``default=[]``."

#: ../../../Misc/NEWS:10101
msgid ""
"`Issue #16113 <https://bugs.python.org/16113>`__: Added sha3 module based on "
"the Keccak reference implementation 3.2. The `hashlib` module has four "
"additional hash algorithms: `sha3_224`, `sha3_256`, `sha3_384` and "
"`sha3_512`. As part of the patch some common code was moved from "
"_hashopenssl.c to hashlib.h."
msgstr ""
"`Issue #16113 <https://bugs.python.org/16113>`__: Added sha3 module based on "
"the Keccak reference implementation 3.2. The `hashlib` module has four "
"additional hash algorithms: `sha3_224`, `sha3_256`, `sha3_384` and "
"`sha3_512`. As part of the patch some common code was moved from "
"_hashopenssl.c to hashlib.h."

#: ../../../Misc/NEWS:10106
msgid ""
"ctypes.call_commethod was removed, since its only usage was in the defunct "
"samples directory."
msgstr ""

#: ../../../Misc/NEWS:10109
msgid ""
"`Issue #16692 <https://bugs.python.org/16692>`__: Added TLSv1.1 and TLSv1.2 "
"support for the ssl modules."
msgstr ""
"`Issue #16692 <https://bugs.python.org/16692>`__: Added TLSv1.1 and TLSv1.2 "
"support for the ssl modules."

#: ../../../Misc/NEWS:10111
msgid ""
"`Issue #16832 <https://bugs.python.org/16832>`__: add abc.get_cache_token() "
"to expose cache validity checking support in ABCMeta."
msgstr ""
"`Issue #16832 <https://bugs.python.org/16832>`__: add abc.get_cache_token() "
"to expose cache validity checking support in ABCMeta."

#: ../../../Misc/NEWS:10117
msgid ""
"`Issue #18429 <https://bugs.python.org/18429>`__: Format / Format Paragraph, "
"now works when comment blocks are selected. As with text blocks, this works "
"best when the selection only includes complete lines."
msgstr ""
"`Issue #18429 <https://bugs.python.org/18429>`__: Format / Format Paragraph, "
"now works when comment blocks are selected. As with text blocks, this works "
"best when the selection only includes complete lines."

#: ../../../Misc/NEWS:10121
msgid ""
"`Issue #18226 <https://bugs.python.org/18226>`__: Add docstrings and "
"unittests for FormatParagraph.py. Original patches by Todd Rovito and Phil "
"Webster."
msgstr ""
"`Issue #18226 <https://bugs.python.org/18226>`__: Add docstrings and "
"unittests for FormatParagraph.py. Original patches by Todd Rovito and Phil "
"Webster."

#: ../../../Misc/NEWS:10124
msgid ""
"`Issue #18279 <https://bugs.python.org/18279>`__: Format - Strip trailing "
"whitespace no longer marks a file as changed when it has not been changed. "
"This fix followed the addition of a test file originally written by Phil "
"Webster (the issue's main goal)."
msgstr ""
"`Issue #18279 <https://bugs.python.org/18279>`__: Format - Strip trailing "
"whitespace no longer marks a file as changed when it has not been changed. "
"This fix followed the addition of a test file originally written by Phil "
"Webster (the issue's main goal)."

#: ../../../Misc/NEWS:10128
msgid ""
"`Issue #7136 <https://bugs.python.org/7136>`__: In the Idle File menu, \"New "
"Window\" is renamed \"New File\". Patch by Tal Einat, Roget Serwy, and Todd "
"Rovito."
msgstr ""
"`Issue #7136 <https://bugs.python.org/7136>`__: In the Idle File menu, \"New "
"Window\" is renamed \"New File\". Patch by Tal Einat, Roget Serwy, and Todd "
"Rovito."

#: ../../../Misc/NEWS:10131
msgid "Remove dead imports of imp."
msgstr ""

#: ../../../Misc/NEWS:10133
msgid ""
"`Issue #18196 <https://bugs.python.org/18196>`__: Avoid displaying spurious "
"SystemExit tracebacks."
msgstr ""
"`Issue #18196 <https://bugs.python.org/18196>`__: Avoid displaying spurious "
"SystemExit tracebacks."

#: ../../../Misc/NEWS:10135
msgid ""
"`Issue #5492 <https://bugs.python.org/5492>`__: Avoid traceback when exiting "
"IDLE caused by a race condition."
msgstr ""
"`Issue #5492 <https://bugs.python.org/5492>`__: Avoid traceback when exiting "
"IDLE caused by a race condition."

#: ../../../Misc/NEWS:10137
msgid ""
"`Issue #17511 <https://bugs.python.org/17511>`__: Keep IDLE find dialog open "
"after clicking \"Find Next\". Original patch by Sarah K."
msgstr ""
"`Issue #17511 <https://bugs.python.org/17511>`__: Keep IDLE find dialog open "
"after clicking \"Find Next\". Original patch by Sarah K."

#: ../../../Misc/NEWS:10140
msgid ""
"`Issue #18055 <https://bugs.python.org/18055>`__: Move IDLE off of imp and "
"on to importlib."
msgstr ""
"`Issue #18055 <https://bugs.python.org/18055>`__: Move IDLE off of imp and "
"on to importlib."

#: ../../../Misc/NEWS:10142
msgid ""
"`Issue #15392 <https://bugs.python.org/15392>`__: Create a unittest "
"framework for IDLE. Initial patch by Rajagopalasarma Jayakrishnan. See Lib/"
"idlelib/idle_test/README.txt for how to run Idle tests."
msgstr ""
"`Issue #15392 <https://bugs.python.org/15392>`__: Create a unittest "
"framework for IDLE. Initial patch by Rajagopalasarma Jayakrishnan. See Lib/"
"idlelib/idle_test/README.txt for how to run Idle tests."

#: ../../../Misc/NEWS:10146
msgid ""
"`Issue #14146 <https://bugs.python.org/14146>`__: Highlight source line "
"while debugging on Windows."
msgstr ""
"`Issue #14146 <https://bugs.python.org/14146>`__: Highlight source line "
"while debugging on Windows."

#: ../../../Misc/NEWS:10148
msgid ""
"`Issue #17838 <https://bugs.python.org/17838>`__: Allow sys.stdin to be "
"reassigned."
msgstr ""
"`Issue #17838 <https://bugs.python.org/17838>`__: Allow sys.stdin to be "
"reassigned."

#: ../../../Misc/NEWS:10150
msgid ""
"`Issue #13495 <https://bugs.python.org/13495>`__: Avoid loading the color "
"delegator twice in IDLE."
msgstr ""
"`Issue #13495 <https://bugs.python.org/13495>`__: Avoid loading the color "
"delegator twice in IDLE."

#: ../../../Misc/NEWS:10152
msgid ""
"`Issue #17798 <https://bugs.python.org/17798>`__: Allow IDLE to edit new "
"files when specified on command line."
msgstr ""
"`Issue #17798 <https://bugs.python.org/17798>`__: Allow IDLE to edit new "
"files when specified on command line."

#: ../../../Misc/NEWS:10154
msgid ""
"`Issue #14735 <https://bugs.python.org/14735>`__: Update IDLE docs to omit "
"\"Control-z on Windows\"."
msgstr ""
"`Issue #14735 <https://bugs.python.org/14735>`__: Update IDLE docs to omit "
"\"Control-z on Windows\"."

#: ../../../Misc/NEWS:10156
msgid ""
"`Issue #17532 <https://bugs.python.org/17532>`__: Always include Options "
"menu for IDLE on OS X. Patch by Guilherme Sim√µes."
msgstr ""
"`Issue #17532 <https://bugs.python.org/17532>`__: Always include Options "
"menu for IDLE on OS X. Patch by Guilherme Sim√µes."

#: ../../../Misc/NEWS:10159
msgid ""
"`Issue #17585 <https://bugs.python.org/17585>`__: Fixed IDLE regression. Now "
"closes when using exit() or quit()."
msgstr ""
"`Issue #17585 <https://bugs.python.org/17585>`__: Fixed IDLE regression. Now "
"closes when using exit() or quit()."

#: ../../../Misc/NEWS:10161
msgid ""
"`Issue #17657 <https://bugs.python.org/17657>`__: Show full Tk version in "
"IDLE's about dialog. Patch by Todd Rovito."
msgstr ""
"`Issue #17657 <https://bugs.python.org/17657>`__: Show full Tk version in "
"IDLE's about dialog. Patch by Todd Rovito."

#: ../../../Misc/NEWS:10164
msgid ""
"`Issue #17613 <https://bugs.python.org/17613>`__: Prevent traceback when "
"removing syntax colorizer in IDLE."
msgstr ""
"`Issue #17613 <https://bugs.python.org/17613>`__: Prevent traceback when "
"removing syntax colorizer in IDLE."

#: ../../../Misc/NEWS:10166
msgid ""
"`Issue #1207589 <https://bugs.python.org/1207589>`__: Backwards-"
"compatibility patch for right-click menu in IDLE."
msgstr ""
"`Issue #1207589 <https://bugs.python.org/1207589>`__: Backwards-"
"compatibility patch for right-click menu in IDLE."

#: ../../../Misc/NEWS:10168
msgid ""
"`Issue #16887 <https://bugs.python.org/16887>`__: IDLE now accepts Cancel in "
"tabify/untabify dialog box."
msgstr ""
"`Issue #16887 <https://bugs.python.org/16887>`__: IDLE now accepts Cancel in "
"tabify/untabify dialog box."

#: ../../../Misc/NEWS:10170
msgid ""
"`Issue #17625 <https://bugs.python.org/17625>`__: In IDLE, close the replace "
"dialog after it is used."
msgstr ""
"`Issue #17625 <https://bugs.python.org/17625>`__: In IDLE, close the replace "
"dialog after it is used."

#: ../../../Misc/NEWS:10172
msgid ""
"`Issue #14254 <https://bugs.python.org/14254>`__: IDLE now handles readline "
"correctly across shell restarts."
msgstr ""
"`Issue #14254 <https://bugs.python.org/14254>`__: IDLE now handles readline "
"correctly across shell restarts."

#: ../../../Misc/NEWS:10174
msgid ""
"`Issue #17614 <https://bugs.python.org/17614>`__: IDLE no longer raises "
"exception when quickly closing a file."
msgstr ""
"`Issue #17614 <https://bugs.python.org/17614>`__: IDLE no longer raises "
"exception when quickly closing a file."

#: ../../../Misc/NEWS:10176
msgid ""
"`Issue #6698 <https://bugs.python.org/6698>`__: IDLE now opens just an "
"editor window when configured to do so."
msgstr ""
"`Issue #6698 <https://bugs.python.org/6698>`__: IDLE now opens just an "
"editor window when configured to do so."

#: ../../../Misc/NEWS:10178
msgid ""
"`Issue #8900 <https://bugs.python.org/8900>`__: Using keyboard shortcuts in "
"IDLE to open a file no longer raises an exception."
msgstr ""
"`Issue #8900 <https://bugs.python.org/8900>`__: Using keyboard shortcuts in "
"IDLE to open a file no longer raises an exception."

#: ../../../Misc/NEWS:10181
msgid ""
"`Issue #6649 <https://bugs.python.org/6649>`__: Fixed missing exit status in "
"IDLE. Patch by Guilherme Polo."
msgstr ""
"`Issue #6649 <https://bugs.python.org/6649>`__: Fixed missing exit status in "
"IDLE. Patch by Guilherme Polo."

#: ../../../Misc/NEWS:10183
msgid ""
"`Issue #17114 <https://bugs.python.org/17114>`__: IDLE now uses non-strict "
"config parser."
msgstr ""
"`Issue #17114 <https://bugs.python.org/17114>`__: IDLE now uses non-strict "
"config parser."

#: ../../../Misc/NEWS:10185
msgid ""
"`Issue #9290 <https://bugs.python.org/9290>`__: In IDLE the sys.std* streams "
"now implement io.TextIOBase interface and support all mandatory methods and "
"properties."
msgstr ""
"`Issue #9290 <https://bugs.python.org/9290>`__: In IDLE the sys.std* streams "
"now implement io.TextIOBase interface and support all mandatory methods and "
"properties."

#: ../../../Misc/NEWS:10188
msgid ""
"`Issue #5066 <https://bugs.python.org/5066>`__: Update IDLE docs. Patch by "
"Todd Rovito."
msgstr ""
"`Issue #5066 <https://bugs.python.org/5066>`__: Update IDLE docs. Patch by "
"Todd Rovito."

#: ../../../Misc/NEWS:10190
msgid ""
"`Issue #16829 <https://bugs.python.org/16829>`__: IDLE printing no longer "
"fails if there are spaces or other special characters in the file path."
msgstr ""
"`Issue #16829 <https://bugs.python.org/16829>`__: IDLE printing no longer "
"fails if there are spaces or other special characters in the file path."

#: ../../../Misc/NEWS:10193
msgid ""
"`Issue #16491 <https://bugs.python.org/16491>`__: IDLE now prints chained "
"exception tracebacks."
msgstr ""
"`Issue #16491 <https://bugs.python.org/16491>`__: IDLE now prints chained "
"exception tracebacks."

#: ../../../Misc/NEWS:10195
msgid ""
"`Issue #16819 <https://bugs.python.org/16819>`__: IDLE method completion now "
"correctly works for bytes literals."
msgstr ""
"`Issue #16819 <https://bugs.python.org/16819>`__: IDLE method completion now "
"correctly works for bytes literals."

#: ../../../Misc/NEWS:10197
msgid ""
"`Issue #16504 <https://bugs.python.org/16504>`__: IDLE now catches "
"SyntaxErrors raised by tokenizer. Patch by Roger Serwy."
msgstr ""
"`Issue #16504 <https://bugs.python.org/16504>`__: IDLE now catches "
"SyntaxErrors raised by tokenizer. Patch by Roger Serwy."

#: ../../../Misc/NEWS:10200
msgid ""
"`Issue #16511 <https://bugs.python.org/16511>`__: Use default IDLE width and "
"height if config param is not valid. Patch Serhiy Storchaka."
msgstr ""
"`Issue #16511 <https://bugs.python.org/16511>`__: Use default IDLE width and "
"height if config param is not valid. Patch Serhiy Storchaka."

#: ../../../Misc/NEWS:10203
msgid ""
"`Issue #1207589 <https://bugs.python.org/1207589>`__: Add Cut/Copy/Paste "
"items to IDLE right click Context Menu. Patch by Todd Rovito."
msgstr ""
"`Issue #1207589 <https://bugs.python.org/1207589>`__: Add Cut/Copy/Paste "
"items to IDLE right click Context Menu. Patch by Todd Rovito."

#: ../../../Misc/NEWS:10206
msgid ""
"`Issue #16123 <https://bugs.python.org/16123>`__: IDLE - deprecate running "
"without a subprocess. Patch by Roger Serwy."
msgstr ""
"`Issue #16123 <https://bugs.python.org/16123>`__: IDLE - deprecate running "
"without a subprocess. Patch by Roger Serwy."

#: ../../../Misc/NEWS:10212
msgid ""
"`Issue #1666318 <https://bugs.python.org/1666318>`__: Add a test that shutil."
"copytree() retains directory permissions.  Patch by Catherine Devlin."
msgstr ""
"`Issue #1666318 <https://bugs.python.org/1666318>`__: Add a test that shutil."
"copytree() retains directory permissions.  Patch by Catherine Devlin."

#: ../../../Misc/NEWS:10215
msgid ""
"`Issue #18273 <https://bugs.python.org/18273>`__: move the tests in Lib/test/"
"json_tests to Lib/test/test_json and make them discoverable by unittest.  "
"Patch by Zachary Ware."
msgstr ""
"`Issue #18273 <https://bugs.python.org/18273>`__: move the tests in Lib/test/"
"json_tests to Lib/test/test_json and make them discoverable by unittest.  "
"Patch by Zachary Ware."

#: ../../../Misc/NEWS:10218
msgid "Fix a fcntl test case on KFreeBSD, Debian #708653 (Petr Salinger)."
msgstr ""

#: ../../../Misc/NEWS:10220
msgid ""
"`Issue #18396 <https://bugs.python.org/18396>`__: Fix spurious test failure "
"in test_signal on Windows when faulthandler is enabled (Patch by Jeremy "
"Kloth)"
msgstr ""
"`Issue #18396 <https://bugs.python.org/18396>`__: Fix spurious test failure "
"in test_signal on Windows when faulthandler is enabled (Patch by Jeremy "
"Kloth)"

#: ../../../Misc/NEWS:10223
msgid ""
"`Issue #17046 <https://bugs.python.org/17046>`__: Fix broken "
"test_executable_without_cwd in test_subprocess."
msgstr ""
"`Issue #17046 <https://bugs.python.org/17046>`__: Fix broken "
"test_executable_without_cwd in test_subprocess."

#: ../../../Misc/NEWS:10225
msgid ""
"`Issue #15415 <https://bugs.python.org/15415>`__: Add new temp_dir() and "
"change_cwd() context managers to test.support, and refactor temp_cwd() to "
"use them.  Patch by Chris Jerdonek."
msgstr ""
"`Issue #15415 <https://bugs.python.org/15415>`__: Add new temp_dir() and "
"change_cwd() context managers to test.support, and refactor temp_cwd() to "
"use them.  Patch by Chris Jerdonek."

#: ../../../Misc/NEWS:10228
msgid ""
"`Issue #15494 <https://bugs.python.org/15494>`__: test.support is now a "
"package rather than a module (Initial patch by Indra Talip)"
msgstr ""
"`Issue #15494 <https://bugs.python.org/15494>`__: test.support is now a "
"package rather than a module (Initial patch by Indra Talip)"

#: ../../../Misc/NEWS:10231
msgid ""
"`Issue #17944 <https://bugs.python.org/17944>`__: test_zipfile now "
"discoverable and uses subclassing to generate tests for different "
"compression types.  Fixed a bug with skipping some tests due to use of "
"exhausted iterators."
msgstr ""
"`Issue #17944 <https://bugs.python.org/17944>`__: test_zipfile now "
"discoverable and uses subclassing to generate tests for different "
"compression types.  Fixed a bug with skipping some tests due to use of "
"exhausted iterators."

#: ../../../Misc/NEWS:10235
msgid ""
"`Issue #18266 <https://bugs.python.org/18266>`__: test_largefile now works "
"with unittest test discovery and supports running only selected tests.  "
"Patch by Zachary Ware."
msgstr ""
"`Issue #18266 <https://bugs.python.org/18266>`__: test_largefile now works "
"with unittest test discovery and supports running only selected tests.  "
"Patch by Zachary Ware."

#: ../../../Misc/NEWS:10238
msgid ""
"`Issue #17767 <https://bugs.python.org/17767>`__: test_locale now works with "
"unittest test discovery. Original patch by Zachary Ware."
msgstr ""
"`Issue #17767 <https://bugs.python.org/17767>`__: test_locale now works with "
"unittest test discovery. Original patch by Zachary Ware."

#: ../../../Misc/NEWS:10241
msgid ""
"`Issue #18375 <https://bugs.python.org/18375>`__: Assume --randomize when --"
"randseed is used for running the testsuite."
msgstr ""
"`Issue #18375 <https://bugs.python.org/18375>`__: Assume --randomize when --"
"randseed is used for running the testsuite."

#: ../../../Misc/NEWS:10244
msgid ""
"`Issue #11185 <https://bugs.python.org/11185>`__: Fix test_wait4 under AIX.  "
"Patch by S√©bastien Sabl√©."
msgstr ""
"`Issue #11185 <https://bugs.python.org/11185>`__: Fix test_wait4 under AIX.  "
"Patch by S√©bastien Sabl√©."

#: ../../../Misc/NEWS:10246
msgid ""
"`Issue #18207 <https://bugs.python.org/18207>`__: Fix test_ssl for some "
"versions of OpenSSL that ignore seconds in ASN1_TIME fields."
msgstr ""
"`Issue #18207 <https://bugs.python.org/18207>`__: Fix test_ssl for some "
"versions of OpenSSL that ignore seconds in ASN1_TIME fields."

#: ../../../Misc/NEWS:10249
msgid ""
"`Issue #18094 <https://bugs.python.org/18094>`__: test_uuid no longer "
"reports skipped tests as passed."
msgstr ""
"`Issue #18094 <https://bugs.python.org/18094>`__: test_uuid no longer "
"reports skipped tests as passed."

#: ../../../Misc/NEWS:10251
msgid ""
"`Issue #17992 <https://bugs.python.org/17992>`__: Add timeouts to asyncore "
"and asynchat tests so that they won't accidentally hang."
msgstr ""
"`Issue #17992 <https://bugs.python.org/17992>`__: Add timeouts to asyncore "
"and asynchat tests so that they won't accidentally hang."

#: ../../../Misc/NEWS:10254
msgid ""
"`Issue #17833 <https://bugs.python.org/17833>`__: Fix test_gdb failures seen "
"on machines where debug symbols for glibc are available (seen on PPC64 "
"Linux)."
msgstr ""
"`Issue #17833 <https://bugs.python.org/17833>`__: Fix test_gdb failures seen "
"on machines where debug symbols for glibc are available (seen on PPC64 "
"Linux)."

#: ../../../Misc/NEWS:10257
msgid ""
"`Issue #7855 <https://bugs.python.org/7855>`__: Add tests for ctypes/winreg "
"for issues found in IronPython. Initial patch by Dino Viehland."
msgstr ""
"`Issue #7855 <https://bugs.python.org/7855>`__: Add tests for ctypes/winreg "
"for issues found in IronPython. Initial patch by Dino Viehland."

#: ../../../Misc/NEWS:10260
msgid ""
"`Issue #11078 <https://bugs.python.org/11078>`__: test___all__ now checks "
"for duplicates in __all__. Initial patch by R. David Murray."
msgstr ""
"`Issue #11078 <https://bugs.python.org/11078>`__: test___all__ now checks "
"for duplicates in __all__. Initial patch by R. David Murray."

#: ../../../Misc/NEWS:10263
msgid ""
"`Issue #17712 <https://bugs.python.org/17712>`__: Fix test_gdb failures on "
"Ubuntu 13.04."
msgstr ""
"`Issue #17712 <https://bugs.python.org/17712>`__: Fix test_gdb failures on "
"Ubuntu 13.04."

#: ../../../Misc/NEWS:10265
msgid ""
"`Issue #17835 <https://bugs.python.org/17835>`__: Fix test_io when the "
"default OS pipe buffer size is larger than one million bytes."
msgstr ""
"`Issue #17835 <https://bugs.python.org/17835>`__: Fix test_io when the "
"default OS pipe buffer size is larger than one million bytes."

#: ../../../Misc/NEWS:10268
msgid ""
"`Issue #17065 <https://bugs.python.org/17065>`__: Use process-unique key for "
"winreg tests to avoid failures if test is run multiple times in parallel "
"(eg: on a buildbot host)."
msgstr ""
"`Issue #17065 <https://bugs.python.org/17065>`__: Use process-unique key for "
"winreg tests to avoid failures if test is run multiple times in parallel "
"(eg: on a buildbot host)."

#: ../../../Misc/NEWS:10271
msgid ""
"`Issue #12820 <https://bugs.python.org/12820>`__: add tests for the xml.dom."
"minicompat module. Patch by John Chandler and Phil Connell."
msgstr ""
"`Issue #12820 <https://bugs.python.org/12820>`__: add tests for the xml.dom."
"minicompat module. Patch by John Chandler and Phil Connell."

#: ../../../Misc/NEWS:10274
msgid ""
"`Issue #17691 <https://bugs.python.org/17691>`__: test_univnewlines now "
"works with unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17691 <https://bugs.python.org/17691>`__: test_univnewlines now "
"works with unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10277
msgid ""
"`Issue #17790 <https://bugs.python.org/17790>`__: test_set now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17790 <https://bugs.python.org/17790>`__: test_set now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10280
msgid ""
"`Issue #17789 <https://bugs.python.org/17789>`__: test_random now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17789 <https://bugs.python.org/17789>`__: test_random now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10283
msgid ""
"`Issue #17779 <https://bugs.python.org/17779>`__: test_osx_env now works "
"with unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17779 <https://bugs.python.org/17779>`__: test_osx_env now works "
"with unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10286
msgid ""
"`Issue #17766 <https://bugs.python.org/17766>`__: test_iterlen now works "
"with unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17766 <https://bugs.python.org/17766>`__: test_iterlen now works "
"with unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10289
msgid ""
"`Issue #17690 <https://bugs.python.org/17690>`__: test_time now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17690 <https://bugs.python.org/17690>`__: test_time now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10292
msgid ""
"`Issue #17692 <https://bugs.python.org/17692>`__: test_sqlite now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17692 <https://bugs.python.org/17692>`__: test_sqlite now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10295
msgid ""
"`Issue #11995 <https://bugs.python.org/11995>`__: test_pydoc doesn't import "
"all sys.path modules anymore."
msgstr ""
"`Issue #11995 <https://bugs.python.org/11995>`__: test_pydoc doesn't import "
"all sys.path modules anymore."

#: ../../../Misc/NEWS:10297
msgid ""
"`Issue #17448 <https://bugs.python.org/17448>`__: test_sax now skips if "
"there are no xml parsers available instead of raising an ImportError."
msgstr ""
"`Issue #17448 <https://bugs.python.org/17448>`__: test_sax now skips if "
"there are no xml parsers available instead of raising an ImportError."

#: ../../../Misc/NEWS:10300
msgid ""
"`Issue #11420 <https://bugs.python.org/11420>`__: make test suite pass with -"
"B/DONTWRITEBYTECODE set. Initial patch by Thomas Wouters."
msgstr ""
"`Issue #11420 <https://bugs.python.org/11420>`__: make test suite pass with -"
"B/DONTWRITEBYTECODE set. Initial patch by Thomas Wouters."

#: ../../../Misc/NEWS:10303
msgid ""
"`Issue #10652 <https://bugs.python.org/10652>`__: make tcl/tk tests run "
"after __all__ test, patch by Zachary Ware."
msgstr ""
"`Issue #10652 <https://bugs.python.org/10652>`__: make tcl/tk tests run "
"after __all__ test, patch by Zachary Ware."

#: ../../../Misc/NEWS:10306
msgid ""
"`Issue #11963 <https://bugs.python.org/11963>`__: remove human verification "
"from test_parser and test_subprocess."
msgstr ""
"`Issue #11963 <https://bugs.python.org/11963>`__: remove human verification "
"from test_parser and test_subprocess."

#: ../../../Misc/NEWS:10308
msgid ""
"`Issue #11732 <https://bugs.python.org/11732>`__: add a new "
"suppress_crash_popup() context manager to test.support that disables crash "
"popups on Windows and use it in test_faulthandler and test_capi."
msgstr ""
"`Issue #11732 <https://bugs.python.org/11732>`__: add a new "
"suppress_crash_popup() context manager to test.support that disables crash "
"popups on Windows and use it in test_faulthandler and test_capi."

#: ../../../Misc/NEWS:10312
msgid ""
"`Issue #13898 <https://bugs.python.org/13898>`__: test_ssl no longer prints "
"a spurious stack trace on Ubuntu."
msgstr ""
"`Issue #13898 <https://bugs.python.org/13898>`__: test_ssl no longer prints "
"a spurious stack trace on Ubuntu."

#: ../../../Misc/NEWS:10314
msgid ""
"`Issue #17283 <https://bugs.python.org/17283>`__: Share code between "
"`__main__.py` and `regrtest.py` in `Lib/test`."
msgstr ""
"`Issue #17283 <https://bugs.python.org/17283>`__: Share code between "
"`__main__.py` and `regrtest.py` in `Lib/test`."

#: ../../../Misc/NEWS:10317
msgid ""
"`Issue #17249 <https://bugs.python.org/17249>`__: convert a test in "
"test_capi to use unittest and reap threads."
msgstr ""
"`Issue #17249 <https://bugs.python.org/17249>`__: convert a test in "
"test_capi to use unittest and reap threads."

#: ../../../Misc/NEWS:10319
msgid ""
"`Issue #17107 <https://bugs.python.org/17107>`__: Test client-side SNI "
"support in urllib.request thanks to the new server-side SNI support in the "
"ssl module.  Initial patch by Daniel Black."
msgstr ""
"`Issue #17107 <https://bugs.python.org/17107>`__: Test client-side SNI "
"support in urllib.request thanks to the new server-side SNI support in the "
"ssl module.  Initial patch by Daniel Black."

#: ../../../Misc/NEWS:10323
msgid ""
"`Issue #17041 <https://bugs.python.org/17041>`__: Fix testing when Python is "
"configured with the --without-doc-strings."
msgstr ""
"`Issue #17041 <https://bugs.python.org/17041>`__: Fix testing when Python is "
"configured with the --without-doc-strings."

#: ../../../Misc/NEWS:10326
msgid ""
"`Issue #16923 <https://bugs.python.org/16923>`__: Fix ResourceWarnings in "
"test_ssl."
msgstr ""
"`Issue #16923 <https://bugs.python.org/16923>`__: Fix ResourceWarnings in "
"test_ssl."

#: ../../../Misc/NEWS:10328
msgid ""
"`Issue #15539 <https://bugs.python.org/15539>`__: Added regression tests for "
"Tools/scripts/pindent.py."
msgstr ""
"`Issue #15539 <https://bugs.python.org/15539>`__: Added regression tests for "
"Tools/scripts/pindent.py."

#: ../../../Misc/NEWS:10330
msgid ""
"`Issue #17479 <https://bugs.python.org/17479>`__: test_io now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17479 <https://bugs.python.org/17479>`__: test_io now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10333
msgid ""
"`Issue #17066 <https://bugs.python.org/17066>`__: test_robotparser now works "
"with unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17066 <https://bugs.python.org/17066>`__: test_robotparser now works "
"with unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10336
msgid ""
"`Issue #17334 <https://bugs.python.org/17334>`__: test_index now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17334 <https://bugs.python.org/17334>`__: test_index now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10339
msgid ""
"`Issue #17333 <https://bugs.python.org/17333>`__: test_imaplib now works "
"with unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17333 <https://bugs.python.org/17333>`__: test_imaplib now works "
"with unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10342
msgid ""
"`Issue #17082 <https://bugs.python.org/17082>`__: test_dbm* now work with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17082 <https://bugs.python.org/17082>`__: test_dbm* now work with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10345
msgid ""
"`Issue #17079 <https://bugs.python.org/17079>`__: test_ctypes now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17079 <https://bugs.python.org/17079>`__: test_ctypes now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10348
msgid ""
"`Issue #17304 <https://bugs.python.org/17304>`__: test_hash now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17304 <https://bugs.python.org/17304>`__: test_hash now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10351
msgid ""
"`Issue #17303 <https://bugs.python.org/17303>`__: test_future* now work with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17303 <https://bugs.python.org/17303>`__: test_future* now work with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10354
msgid ""
"`Issue #17163 <https://bugs.python.org/17163>`__: test_file now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #17163 <https://bugs.python.org/17163>`__: test_file now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10357
msgid ""
"`Issue #16925 <https://bugs.python.org/16925>`__: test_configparser now "
"works with unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #16925 <https://bugs.python.org/16925>`__: test_configparser now "
"works with unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10360
msgid ""
"`Issue #16918 <https://bugs.python.org/16918>`__: test_codecs now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #16918 <https://bugs.python.org/16918>`__: test_codecs now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10363
msgid ""
"`Issue #16919 <https://bugs.python.org/16919>`__: test_crypt now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #16919 <https://bugs.python.org/16919>`__: test_crypt now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10366
msgid ""
"`Issue #16910 <https://bugs.python.org/16910>`__: test_bytes, test_unicode, "
"and test_userstring now work with unittest test discovery.  Patch by Zachary "
"Ware."
msgstr ""
"`Issue #16910 <https://bugs.python.org/16910>`__: test_bytes, test_unicode, "
"and test_userstring now work with unittest test discovery.  Patch by Zachary "
"Ware."

#: ../../../Misc/NEWS:10369
msgid ""
"`Issue #16905 <https://bugs.python.org/16905>`__: test_warnings now works "
"with unittest test discovery. Initial patch by Berker Peksag."
msgstr ""
"`Issue #16905 <https://bugs.python.org/16905>`__: test_warnings now works "
"with unittest test discovery. Initial patch by Berker Peksag."

#: ../../../Misc/NEWS:10372
msgid ""
"`Issue #16898 <https://bugs.python.org/16898>`__: test_bufio now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #16898 <https://bugs.python.org/16898>`__: test_bufio now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10375
msgid ""
"`Issue #16888 <https://bugs.python.org/16888>`__: test_array now works with "
"unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #16888 <https://bugs.python.org/16888>`__: test_array now works with "
"unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10378
msgid ""
"`Issue #16896 <https://bugs.python.org/16896>`__: test_asyncore now works "
"with unittest test discovery. Patch by Zachary Ware."
msgstr ""
"`Issue #16896 <https://bugs.python.org/16896>`__: test_asyncore now works "
"with unittest test discovery. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10381
msgid ""
"`Issue #16897 <https://bugs.python.org/16897>`__: test_bisect now works with "
"unittest test discovery. Initial patch by Zachary Ware."
msgstr ""
"`Issue #16897 <https://bugs.python.org/16897>`__: test_bisect now works with "
"unittest test discovery. Initial patch by Zachary Ware."

#: ../../../Misc/NEWS:10384
msgid ""
"`Issue #16852 <https://bugs.python.org/16852>`__: test_genericpath, "
"test_posixpath, test_ntpath, and test_macpath now work with unittest test "
"discovery.  Patch by Zachary Ware."
msgstr ""
"`Issue #16852 <https://bugs.python.org/16852>`__: test_genericpath, "
"test_posixpath, test_ntpath, and test_macpath now work with unittest test "
"discovery.  Patch by Zachary Ware."

#: ../../../Misc/NEWS:10387
msgid ""
"`Issue #16748 <https://bugs.python.org/16748>`__: test_heapq now works with "
"unittest test discovery."
msgstr ""
"`Issue #16748 <https://bugs.python.org/16748>`__: test_heapq now works with "
"unittest test discovery."

#: ../../../Misc/NEWS:10389
msgid ""
"`Issue #10646 <https://bugs.python.org/10646>`__: Tests rearranged for os."
"samefile/samestat to check for not just symlinks but also hard links."
msgstr ""
"`Issue #10646 <https://bugs.python.org/10646>`__: Tests rearranged for os."
"samefile/samestat to check for not just symlinks but also hard links."

#: ../../../Misc/NEWS:10392
msgid ""
"`Issue #15302 <https://bugs.python.org/15302>`__: Switch regrtest from using "
"getopt to using argparse."
msgstr ""
"`Issue #15302 <https://bugs.python.org/15302>`__: Switch regrtest from using "
"getopt to using argparse."

#: ../../../Misc/NEWS:10394
msgid ""
"`Issue #15324 <https://bugs.python.org/15324>`__: Fix regrtest parsing of --"
"fromfile, --match, and --randomize options."
msgstr ""
"`Issue #15324 <https://bugs.python.org/15324>`__: Fix regrtest parsing of --"
"fromfile, --match, and --randomize options."

#: ../../../Misc/NEWS:10397
msgid ""
"`Issue #16702 <https://bugs.python.org/16702>`__: test_urllib2_localnet "
"tests now correctly ignores proxies for localhost tests."
msgstr ""
"`Issue #16702 <https://bugs.python.org/16702>`__: test_urllib2_localnet "
"tests now correctly ignores proxies for localhost tests."

#: ../../../Misc/NEWS:10400
msgid ""
"`Issue #16664 <https://bugs.python.org/16664>`__: Add regression tests for "
"glob's behaviour concerning entries starting with a \".\".  Patch by "
"Sebastian Kreft."
msgstr ""
"`Issue #16664 <https://bugs.python.org/16664>`__: Add regression tests for "
"glob's behaviour concerning entries starting with a \".\".  Patch by "
"Sebastian Kreft."

#: ../../../Misc/NEWS:10403
msgid ""
"`Issue #13390 <https://bugs.python.org/13390>`__: The ``-R`` option to "
"regrtest now also checks for memory allocation leaks, using :func:`sys."
"getallocatedblocks()`."
msgstr ""
"`Issue #13390 <https://bugs.python.org/13390>`__: The ``-R`` option to "
"regrtest now also checks for memory allocation leaks, using :func:`sys."
"getallocatedblocks()`."

#: ../../../Misc/NEWS:10406
msgid ""
"`Issue #16559 <https://bugs.python.org/16559>`__: Add more tests for the "
"json module, including some from the official test suite at json.org.  Patch "
"by Serhiy Storchaka."
msgstr ""
"`Issue #16559 <https://bugs.python.org/16559>`__: Add more tests for the "
"json module, including some from the official test suite at json.org.  Patch "
"by Serhiy Storchaka."

#: ../../../Misc/NEWS:10409
msgid ""
"`Issue #16661 <https://bugs.python.org/16661>`__: Fix the `os."
"getgrouplist()` test by not assuming that it gives the same output as :"
"command:`id -G`."
msgstr ""
"`Issue #16661 <https://bugs.python.org/16661>`__: Fix the `os."
"getgrouplist()` test by not assuming that it gives the same output as :"
"command:`id -G`."

#: ../../../Misc/NEWS:10412
msgid ""
"`Issue #16115 <https://bugs.python.org/16115>`__: Add some tests for the "
"executable argument to subprocess.Popen().  Initial patch by Kushal Das."
msgstr ""
"`Issue #16115 <https://bugs.python.org/16115>`__: Add some tests for the "
"executable argument to subprocess.Popen().  Initial patch by Kushal Das."

#: ../../../Misc/NEWS:10415
msgid ""
"`Issue #16126 <https://bugs.python.org/16126>`__: PyErr_Format format "
"mismatch in _testcapimodule.c. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #16126 <https://bugs.python.org/16126>`__: PyErr_Format format "
"mismatch in _testcapimodule.c. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:10418
msgid ""
"`Issue #15304 <https://bugs.python.org/15304>`__: Fix warning message when "
"`os.chdir()` fails inside `test.support.temp_cwd()`.  Patch by Chris "
"Jerdonek."
msgstr ""
"`Issue #15304 <https://bugs.python.org/15304>`__: Fix warning message when "
"`os.chdir()` fails inside `test.support.temp_cwd()`.  Patch by Chris "
"Jerdonek."

#: ../../../Misc/NEWS:10421
msgid ""
"`Issue #15802 <https://bugs.python.org/15802>`__: Fix test logic in "
"`TestMaildir.test_create_tmp()`. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #15802 <https://bugs.python.org/15802>`__: Fix test logic in "
"`TestMaildir.test_create_tmp()`. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:10424
msgid ""
"`Issue #15557 <https://bugs.python.org/15557>`__: Added a test suite for the "
"webbrowser module, thanks to Anton Barkovsky."
msgstr ""
"`Issue #15557 <https://bugs.python.org/15557>`__: Added a test suite for the "
"webbrowser module, thanks to Anton Barkovsky."

#: ../../../Misc/NEWS:10427
msgid ""
"`Issue #16698 <https://bugs.python.org/16698>`__: Skip posix test_getgroups "
"when built with OS X deployment target prior to 10.6."
msgstr ""
"`Issue #16698 <https://bugs.python.org/16698>`__: Skip posix test_getgroups "
"when built with OS X deployment target prior to 10.6."

#: ../../../Misc/NEWS:10433
msgid ""
"`Issue #16067 <https://bugs.python.org/16067>`__: Add description into MSI "
"file to replace installer's temporary name."
msgstr ""
"`Issue #16067 <https://bugs.python.org/16067>`__: Add description into MSI "
"file to replace installer's temporary name."

#: ../../../Misc/NEWS:10436
msgid ""
"`Issue #18257 <https://bugs.python.org/18257>`__: Fix readlink usage in "
"python-config.  Install the python version again on Darwin."
msgstr ""
"`Issue #18257 <https://bugs.python.org/18257>`__: Fix readlink usage in "
"python-config.  Install the python version again on Darwin."

#: ../../../Misc/NEWS:10439
msgid ""
"`Issue #18481 <https://bugs.python.org/18481>`__: Add C coverage reporting "
"with gcov and lcov. A new make target \"coverage-report\" creates an "
"instrumented Python build, runs unit tests and creates a HTML. The report "
"can be updated with \"make coverage-lcov\"."
msgstr ""
"`Issue #18481 <https://bugs.python.org/18481>`__: Add C coverage reporting "
"with gcov and lcov. A new make target \"coverage-report\" creates an "
"instrumented Python build, runs unit tests and creates a HTML. The report "
"can be updated with \"make coverage-lcov\"."

#: ../../../Misc/NEWS:10443
msgid ""
"`Issue #17845 <https://bugs.python.org/17845>`__: Clarified the message "
"printed when some module are not built."
msgstr ""
"`Issue #17845 <https://bugs.python.org/17845>`__: Clarified the message "
"printed when some module are not built."

#: ../../../Misc/NEWS:10445
msgid ""
"`Issue #18256 <https://bugs.python.org/18256>`__: Compilation fix for recent "
"AIX releases.  Patch by David Edelsohn."
msgstr ""
"`Issue #18256 <https://bugs.python.org/18256>`__: Compilation fix for recent "
"AIX releases.  Patch by David Edelsohn."

#: ../../../Misc/NEWS:10448
msgid ""
"`Issue #17547 <https://bugs.python.org/17547>`__: In configure, explicitly "
"pass -Wformat for the benefit for GCC 4.8."
msgstr ""
"`Issue #17547 <https://bugs.python.org/17547>`__: In configure, explicitly "
"pass -Wformat for the benefit for GCC 4.8."

#: ../../../Misc/NEWS:10451
msgid ""
"`Issue #15172 <https://bugs.python.org/15172>`__: Document NASM 2.10+ as "
"requirement for building OpenSSL 1.0.1 on Windows."
msgstr ""
"`Issue #15172 <https://bugs.python.org/15172>`__: Document NASM 2.10+ as "
"requirement for building OpenSSL 1.0.1 on Windows."

#: ../../../Misc/NEWS:10454
msgid ""
"`Issue #17591 <https://bugs.python.org/17591>`__: Use lowercase filenames "
"when including Windows header files. Patch by Roumen Petrov."
msgstr ""
"`Issue #17591 <https://bugs.python.org/17591>`__: Use lowercase filenames "
"when including Windows header files. Patch by Roumen Petrov."

#: ../../../Misc/NEWS:10457
msgid ""
"`Issue #17550 <https://bugs.python.org/17550>`__: Fix the --enable-profiling "
"configure switch."
msgstr ""
"`Issue #17550 <https://bugs.python.org/17550>`__: Fix the --enable-profiling "
"configure switch."

#: ../../../Misc/NEWS:10459
msgid ""
"`Issue #17425 <https://bugs.python.org/17425>`__: Build with openssl 1.0.1d "
"on Windows."
msgstr ""
"`Issue #17425 <https://bugs.python.org/17425>`__: Build with openssl 1.0.1d "
"on Windows."

#: ../../../Misc/NEWS:10461
msgid ""
"`Issue #16754 <https://bugs.python.org/16754>`__: Fix the incorrect shared "
"library extension on linux. Introduce two makefile macros SHLIB_SUFFIX and "
"EXT_SUFFIX. SO now has the value of SHLIB_SUFFIX again (as in 2.x and 3.1). "
"The SO macro is removed in 3.4."
msgstr ""
"`Issue #16754 <https://bugs.python.org/16754>`__: Fix the incorrect shared "
"library extension on linux. Introduce two makefile macros SHLIB_SUFFIX and "
"EXT_SUFFIX. SO now has the value of SHLIB_SUFFIX again (as in 2.x and 3.1). "
"The SO macro is removed in 3.4."

#: ../../../Misc/NEWS:10465
msgid ""
"`Issue #5033 <https://bugs.python.org/5033>`__: Fix building of the sqlite3 "
"extension module when the SQLite library version has \"beta\" in it. Patch "
"by Andreas Pelme."
msgstr ""
"`Issue #5033 <https://bugs.python.org/5033>`__: Fix building of the sqlite3 "
"extension module when the SQLite library version has \"beta\" in it. Patch "
"by Andreas Pelme."

#: ../../../Misc/NEWS:10468
msgid ""
"`Issue #17228 <https://bugs.python.org/17228>`__: Fix building without "
"pymalloc."
msgstr ""
"`Issue #17228 <https://bugs.python.org/17228>`__: Fix building without "
"pymalloc."

#: ../../../Misc/NEWS:10470
msgid ""
"`Issue #3718 <https://bugs.python.org/3718>`__: Use AC_ARG_VAR to set "
"MACHDEP in configure.ac."
msgstr ""
"`Issue #3718 <https://bugs.python.org/3718>`__: Use AC_ARG_VAR to set "
"MACHDEP in configure.ac."

#: ../../../Misc/NEWS:10472
msgid ""
"`Issue #16235 <https://bugs.python.org/16235>`__: Implement python-config as "
"a shell script."
msgstr ""
"`Issue #16235 <https://bugs.python.org/16235>`__: Implement python-config as "
"a shell script."

#: ../../../Misc/NEWS:10474
msgid ""
"`Issue #16769 <https://bugs.python.org/16769>`__: Remove outdated Visual "
"Studio projects."
msgstr ""
"`Issue #16769 <https://bugs.python.org/16769>`__: Remove outdated Visual "
"Studio projects."

#: ../../../Misc/NEWS:10476
msgid ""
"`Issue #17031 <https://bugs.python.org/17031>`__: Fix running regen in cross "
"builds."
msgstr ""
"`Issue #17031 <https://bugs.python.org/17031>`__: Fix running regen in cross "
"builds."

#: ../../../Misc/NEWS:10478
msgid ""
"`Issue #3754 <https://bugs.python.org/3754>`__: fix typo in pthread "
"AC_CACHE_VAL."
msgstr ""
"`Issue #3754 <https://bugs.python.org/3754>`__: fix typo in pthread "
"AC_CACHE_VAL."

#: ../../../Misc/NEWS:10480
msgid ""
"`Issue #15484 <https://bugs.python.org/15484>`__: Fix _PYTHON_PROJECT_BASE "
"for srcdir != builddir builds; use _PYTHON_PROJECT_BASE in distutils/"
"sysconfig.py."
msgstr ""
"`Issue #15484 <https://bugs.python.org/15484>`__: Fix _PYTHON_PROJECT_BASE "
"for srcdir != builddir builds; use _PYTHON_PROJECT_BASE in distutils/"
"sysconfig.py."

#: ../../../Misc/NEWS:10483
msgid "Drop support for Windows 2000 (changeset e52df05b496a)."
msgstr ""

#: ../../../Misc/NEWS:10485
msgid ""
"`Issue #17029 <https://bugs.python.org/17029>`__: Let h2py search the "
"multiarch system include directory."
msgstr ""
"`Issue #17029 <https://bugs.python.org/17029>`__: Let h2py search the "
"multiarch system include directory."

#: ../../../Misc/NEWS:10487
msgid ""
"`Issue #16953 <https://bugs.python.org/16953>`__: Fix socket module "
"compilation on platforms with HAVE_BROKEN_POLL. Patch by Jeffrey Armstrong."
msgstr ""
"`Issue #16953 <https://bugs.python.org/16953>`__: Fix socket module "
"compilation on platforms with HAVE_BROKEN_POLL. Patch by Jeffrey Armstrong."

#: ../../../Misc/NEWS:10490
msgid ""
"`Issue #16320 <https://bugs.python.org/16320>`__: Remove redundant Makefile "
"dependencies for strings and bytes."
msgstr ""
"`Issue #16320 <https://bugs.python.org/16320>`__: Remove redundant Makefile "
"dependencies for strings and bytes."

#: ../../../Misc/NEWS:10492
msgid ""
"Cross compiling needs host and build settings. configure no longer creates a "
"broken PYTHON_FOR_BUILD variable when --build is missing."
msgstr ""

#: ../../../Misc/NEWS:10495
msgid ""
"Fix cross compiling issue in setup.py, ensure that lib_dirs and inc_dirs are "
"defined in cross compiling mode, too."
msgstr ""

#: ../../../Misc/NEWS:10498
msgid ""
"`Issue #16836 <https://bugs.python.org/16836>`__: Enable IPv6 support even "
"if IPv6 is disabled on the build host."
msgstr ""
"`Issue #16836 <https://bugs.python.org/16836>`__: Enable IPv6 support even "
"if IPv6 is disabled on the build host."

#: ../../../Misc/NEWS:10500
msgid ""
"`Issue #16593 <https://bugs.python.org/16593>`__: Have BSD 'make -s' do the "
"right thing, thanks to Daniel Shahaf"
msgstr ""
"`Issue #16593 <https://bugs.python.org/16593>`__: Have BSD 'make -s' do the "
"right thing, thanks to Daniel Shahaf"

#: ../../../Misc/NEWS:10502
msgid ""
"`Issue #16262 <https://bugs.python.org/16262>`__: fix out-of-src-tree "
"builds, if mercurial is not installed."
msgstr ""
"`Issue #16262 <https://bugs.python.org/16262>`__: fix out-of-src-tree "
"builds, if mercurial is not installed."

#: ../../../Misc/NEWS:10504
msgid ""
"`Issue #15298 <https://bugs.python.org/15298>`__: ensure _sysconfigdata is "
"generated in build directory, not source directory."
msgstr ""
"`Issue #15298 <https://bugs.python.org/15298>`__: ensure _sysconfigdata is "
"generated in build directory, not source directory."

#: ../../../Misc/NEWS:10507
msgid ""
"`Issue #15833 <https://bugs.python.org/15833>`__: Fix a regression in 3.3 "
"that resulted in exceptions being raised if importlib failed to write byte-"
"compiled files.  This affected attempts to build Python out-of-tree from a "
"read-only source directory."
msgstr ""
"`Issue #15833 <https://bugs.python.org/15833>`__: Fix a regression in 3.3 "
"that resulted in exceptions being raised if importlib failed to write byte-"
"compiled files.  This affected attempts to build Python out-of-tree from a "
"read-only source directory."

#: ../../../Misc/NEWS:10511
msgid ""
"`Issue #15923 <https://bugs.python.org/15923>`__: Fix a mistake in ``asdl_c."
"py`` that resulted in a TypeError after 2801bf875a24 (see #15801)."
msgstr ""
"`Issue #15923 <https://bugs.python.org/15923>`__: Fix a mistake in ``asdl_c."
"py`` that resulted in a TypeError after 2801bf875a24 (see #15801)."

#: ../../../Misc/NEWS:10514
msgid "`Issue #16135 <https://bugs.python.org/16135>`__: Remove OS/2 support."
msgstr "`Issue #16135 <https://bugs.python.org/16135>`__: Remove OS/2 support."

#: ../../../Misc/NEWS:10516
msgid ""
"`Issue #15819 <https://bugs.python.org/15819>`__: Make sure we can build "
"Python out-of-tree from a read-only source directory.  (Somewhat related to "
"`issue #9860 <https://bugs.python.org/9860>`__.)"
msgstr ""
"`Issue #15819 <https://bugs.python.org/15819>`__: Make sure we can build "
"Python out-of-tree from a read-only source directory.  (Somewhat related to "
"`issue #9860 <https://bugs.python.org/9860>`__.)"

#: ../../../Misc/NEWS:10519
msgid ""
"`Issue #15587 <https://bugs.python.org/15587>`__: Enable Tk high-resolution "
"text rendering on Macs with Retina displays.  Applies to Tkinter apps, such "
"as IDLE, on OS X framework builds linked with Cocoa Tk 8.5."
msgstr ""
"`Issue #15587 <https://bugs.python.org/15587>`__: Enable Tk high-resolution "
"text rendering on Macs with Retina displays.  Applies to Tkinter apps, such "
"as IDLE, on OS X framework builds linked with Cocoa Tk 8.5."

#: ../../../Misc/NEWS:10523
msgid ""
"`Issue #17161 <https://bugs.python.org/17161>`__: make install now also "
"installs a python3 man page."
msgstr ""
"`Issue #17161 <https://bugs.python.org/17161>`__: make install now also "
"installs a python3 man page."

#: ../../../Misc/NEWS:10528
msgid ""
"`Issue #18351 <https://bugs.python.org/18351>`__: Fix various issues in a "
"function in importlib provided to help "
"PyImport_ExecCodeModuleWithPathnames() (and thus by extension "
"PyImport_ExecCodeModule() and PyImport_ExecCodeModuleEx())."
msgstr ""
"`Issue #18351 <https://bugs.python.org/18351>`__: Fix various issues in a "
"function in importlib provided to help "
"PyImport_ExecCodeModuleWithPathnames() (and thus by extension "
"PyImport_ExecCodeModule() and PyImport_ExecCodeModuleEx())."

#: ../../../Misc/NEWS:10532
msgid ""
"`Issue #15767 <https://bugs.python.org/15767>`__: Added "
"PyErr_SetImportErrorSubclass()."
msgstr ""
"`Issue #15767 <https://bugs.python.org/15767>`__: Added "
"PyErr_SetImportErrorSubclass()."

#: ../../../Misc/NEWS:10534
msgid "PyErr_SetImportError() now sets TypeError when its msg argument is set."
msgstr ""

#: ../../../Misc/NEWS:10536
msgid ""
"`Issue #9369 <https://bugs.python.org/9369>`__: The types of `char*` "
"arguments of PyObject_CallFunction() and PyObject_CallMethod() now changed "
"to `const char*`.  Based on patches by J√∂rg M√ºller and Lars Buitinck."
msgstr ""
"`Issue #9369 <https://bugs.python.org/9369>`__: The types of `char*` "
"arguments of PyObject_CallFunction() and PyObject_CallMethod() now changed "
"to `const char*`.  Based on patches by J√∂rg M√ºller and Lars Buitinck."

#: ../../../Misc/NEWS:10540
msgid ""
"`Issue #17206 <https://bugs.python.org/17206>`__: Py_CLEAR(), Py_DECREF(), "
"Py_XINCREF() and Py_XDECREF() now expand their arguments once instead of "
"multiple times.  Patch written by Illia Polosukhin."
msgstr ""
"`Issue #17206 <https://bugs.python.org/17206>`__: Py_CLEAR(), Py_DECREF(), "
"Py_XINCREF() and Py_XDECREF() now expand their arguments once instead of "
"multiple times.  Patch written by Illia Polosukhin."

#: ../../../Misc/NEWS:10544
msgid ""
"`Issue #17522 <https://bugs.python.org/17522>`__: Add the PyGILState_Check() "
"API."
msgstr ""
"`Issue #17522 <https://bugs.python.org/17522>`__: Add the PyGILState_Check() "
"API."

#: ../../../Misc/NEWS:10546
msgid ""
"`Issue #17327 <https://bugs.python.org/17327>`__: Add PyDict_SetDefault."
msgstr ""
"`Issue #17327 <https://bugs.python.org/17327>`__: Add PyDict_SetDefault."

#: ../../../Misc/NEWS:10548
msgid ""
"`Issue #16881 <https://bugs.python.org/16881>`__: Fix Py_ARRAY_LENGTH macro "
"for GCC < 3.1."
msgstr ""
"`Issue #16881 <https://bugs.python.org/16881>`__: Fix Py_ARRAY_LENGTH macro "
"for GCC < 3.1."

#: ../../../Misc/NEWS:10550
msgid ""
"`Issue #16505 <https://bugs.python.org/16505>`__: Remove unused "
"Py_TPFLAGS_INT_SUBCLASS."
msgstr ""
"`Issue #16505 <https://bugs.python.org/16505>`__: Remove unused "
"Py_TPFLAGS_INT_SUBCLASS."

#: ../../../Misc/NEWS:10552
msgid ""
"`Issue #16086 <https://bugs.python.org/16086>`__: PyTypeObject.tp_flags and "
"PyType_Spec.flags are now unsigned (unsigned long and unsigned int) to avoid "
"an undefined behaviour with Py_TPFLAGS_TYPE_SUBCLASS ((1 << 31). "
"PyType_GetFlags() result type is now unsigned too (unsigned long, instead of "
"long)."
msgstr ""
"`Issue #16086 <https://bugs.python.org/16086>`__: PyTypeObject.tp_flags and "
"PyType_Spec.flags are now unsigned (unsigned long and unsigned int) to avoid "
"an undefined behaviour with Py_TPFLAGS_TYPE_SUBCLASS ((1 << 31). "
"PyType_GetFlags() result type is now unsigned too (unsigned long, instead of "
"long)."

#: ../../../Misc/NEWS:10557
msgid ""
"`Issue #16166 <https://bugs.python.org/16166>`__: Add PY_LITTLE_ENDIAN and "
"PY_BIG_ENDIAN macros and unified endianness detection and handling."
msgstr ""
"`Issue #16166 <https://bugs.python.org/16166>`__: Add PY_LITTLE_ENDIAN and "
"PY_BIG_ENDIAN macros and unified endianness detection and handling."

#: ../../../Misc/NEWS:10563
msgid ""
"`Issue #23006 <https://bugs.python.org/23006>`__: Improve the documentation "
"and indexing of dict.__missing__. Add an entry in the language datamodel "
"special methods section. Revise and index its discussion in the stdtypes "
"mapping/dict section."
msgstr ""
"`Issue #23006 <https://bugs.python.org/23006>`__: Improve the documentation "
"and indexing of dict.__missing__. Add an entry in the language datamodel "
"special methods section. Revise and index its discussion in the stdtypes "
"mapping/dict section."

#: ../../../Misc/NEWS:10567
msgid ""
"`Issue #17701 <https://bugs.python.org/17701>`__: Improving strftime "
"documentation."
msgstr ""
"`Issue #17701 <https://bugs.python.org/17701>`__: Improving strftime "
"documentation."

#: ../../../Misc/NEWS:10569
msgid ""
"`Issue #18440 <https://bugs.python.org/18440>`__: Clarify that `hash()` can "
"truncate the value returned from an object's custom `__hash__()` method."
msgstr ""
"`Issue #18440 <https://bugs.python.org/18440>`__: Clarify that `hash()` can "
"truncate the value returned from an object's custom `__hash__()` method."

#: ../../../Misc/NEWS:10572
msgid ""
"`Issue #17844 <https://bugs.python.org/17844>`__: Add links to encoders and "
"decoders for bytes-to-bytes codecs."
msgstr ""
"`Issue #17844 <https://bugs.python.org/17844>`__: Add links to encoders and "
"decoders for bytes-to-bytes codecs."

#: ../../../Misc/NEWS:10574
msgid ""
"`Issue #14097 <https://bugs.python.org/14097>`__: improve the \"introduction"
"\" page of the tutorial."
msgstr ""
"`Issue #14097 <https://bugs.python.org/14097>`__: improve the \"introduction"
"\" page of the tutorial."

#: ../../../Misc/NEWS:10576
msgid ""
"`Issue #17977 <https://bugs.python.org/17977>`__: The documentation for the "
"cadefault argument's default value in urllib.request.urlopen() is fixed to "
"match the code."
msgstr ""
"`Issue #17977 <https://bugs.python.org/17977>`__: The documentation for the "
"cadefault argument's default value in urllib.request.urlopen() is fixed to "
"match the code."

#: ../../../Misc/NEWS:10579
msgid ""
"`Issue #6696 <https://bugs.python.org/6696>`__: add documentation for the "
"Profile objects, and improve profile/cProfile docs.  Patch by Tom Pinckney."
msgstr ""
"`Issue #6696 <https://bugs.python.org/6696>`__: add documentation for the "
"Profile objects, and improve profile/cProfile docs.  Patch by Tom Pinckney."

#: ../../../Misc/NEWS:10582
msgid ""
"`Issue #15940 <https://bugs.python.org/15940>`__: Specify effect of locale "
"on time functions."
msgstr ""
"`Issue #15940 <https://bugs.python.org/15940>`__: Specify effect of locale "
"on time functions."

#: ../../../Misc/NEWS:10584
msgid ""
"`Issue #17538 <https://bugs.python.org/17538>`__: Document XML vulnerabilties"
msgstr ""
"`Issue #17538 <https://bugs.python.org/17538>`__: Document XML vulnerabilties"

#: ../../../Misc/NEWS:10586
msgid ""
"`Issue #16642 <https://bugs.python.org/16642>`__: sched.scheduler timefunc "
"initial default is time.monotonic. Patch by Ramchandra Apte"
msgstr ""
"`Issue #16642 <https://bugs.python.org/16642>`__: sched.scheduler timefunc "
"initial default is time.monotonic. Patch by Ramchandra Apte"

#: ../../../Misc/NEWS:10589
msgid ""
"`Issue #17047 <https://bugs.python.org/17047>`__: remove doubled words in "
"docs and docstrings reported by Serhiy Storchaka and Matthew Barnett."
msgstr ""
"`Issue #17047 <https://bugs.python.org/17047>`__: remove doubled words in "
"docs and docstrings reported by Serhiy Storchaka and Matthew Barnett."

#: ../../../Misc/NEWS:10592
msgid ""
"`Issue #15465 <https://bugs.python.org/15465>`__: Document the versioning "
"macros in the C API docs rather than the standard library docs. Patch by "
"Kushal Das."
msgstr ""
"`Issue #15465 <https://bugs.python.org/15465>`__: Document the versioning "
"macros in the C API docs rather than the standard library docs. Patch by "
"Kushal Das."

#: ../../../Misc/NEWS:10595
msgid ""
"`Issue #16406 <https://bugs.python.org/16406>`__: Combine the pages for "
"uploading and registering to PyPI."
msgstr ""
"`Issue #16406 <https://bugs.python.org/16406>`__: Combine the pages for "
"uploading and registering to PyPI."

#: ../../../Misc/NEWS:10597
msgid ""
"`Issue #16403 <https://bugs.python.org/16403>`__: Document how distutils "
"uses the maintainer field in PKG-INFO. Patch by Jyrki Pulliainen."
msgstr ""
"`Issue #16403 <https://bugs.python.org/16403>`__: Document how distutils "
"uses the maintainer field in PKG-INFO. Patch by Jyrki Pulliainen."

#: ../../../Misc/NEWS:10600
msgid ""
"`Issue #16695 <https://bugs.python.org/16695>`__: Document how glob handles "
"filenames starting with a dot. Initial patch by Jyrki Pulliainen."
msgstr ""
"`Issue #16695 <https://bugs.python.org/16695>`__: Document how glob handles "
"filenames starting with a dot. Initial patch by Jyrki Pulliainen."

#: ../../../Misc/NEWS:10603
msgid ""
"`Issue #8890 <https://bugs.python.org/8890>`__: Stop advertising an insecure "
"practice by replacing uses of the /tmp directory with better alternatives in "
"the documentation. Patch by Geoff Wilson."
msgstr ""
"`Issue #8890 <https://bugs.python.org/8890>`__: Stop advertising an insecure "
"practice by replacing uses of the /tmp directory with better alternatives in "
"the documentation. Patch by Geoff Wilson."

#: ../../../Misc/NEWS:10607
msgid ""
"`Issue #17203 <https://bugs.python.org/17203>`__: add long option names to "
"unittest discovery docs."
msgstr ""
"`Issue #17203 <https://bugs.python.org/17203>`__: add long option names to "
"unittest discovery docs."

#: ../../../Misc/NEWS:10609
msgid ""
"`Issue #13094 <https://bugs.python.org/13094>`__: add \"Why do lambdas "
"defined in a loop with different values all return the same result?\" "
"programming FAQ."
msgstr ""
"`Issue #13094 <https://bugs.python.org/13094>`__: add \"Why do lambdas "
"defined in a loop with different values all return the same result?\" "
"programming FAQ."

#: ../../../Misc/NEWS:10612
msgid ""
"`Issue #14901 <https://bugs.python.org/14901>`__: Update portions of the "
"Windows FAQ. Patch by Ashish Nitin Patil."
msgstr ""
"`Issue #14901 <https://bugs.python.org/14901>`__: Update portions of the "
"Windows FAQ. Patch by Ashish Nitin Patil."

#: ../../../Misc/NEWS:10615
msgid ""
"`Issue #16267 <https://bugs.python.org/16267>`__: Better document the 3.3+ "
"approach to combining @abstractmethod with @staticmethod, @classmethod and "
"@property"
msgstr ""
"`Issue #16267 <https://bugs.python.org/16267>`__: Better document the 3.3+ "
"approach to combining @abstractmethod with @staticmethod, @classmethod and "
"@property"

#: ../../../Misc/NEWS:10618
msgid ""
"`Issue #15209 <https://bugs.python.org/15209>`__: Clarify exception chaining "
"description in exceptions module documentation"
msgstr ""
"`Issue #15209 <https://bugs.python.org/15209>`__: Clarify exception chaining "
"description in exceptions module documentation"

#: ../../../Misc/NEWS:10621
msgid ""
"`Issue #15990 <https://bugs.python.org/15990>`__: Improve argument/parameter "
"documentation."
msgstr ""
"`Issue #15990 <https://bugs.python.org/15990>`__: Improve argument/parameter "
"documentation."

#: ../../../Misc/NEWS:10623
msgid ""
"`Issue #16209 <https://bugs.python.org/16209>`__: Move the documentation for "
"the str built-in function to a new str class entry in the \"Text Sequence "
"Type\" section."
msgstr ""
"`Issue #16209 <https://bugs.python.org/16209>`__: Move the documentation for "
"the str built-in function to a new str class entry in the \"Text Sequence "
"Type\" section."

#: ../../../Misc/NEWS:10626
msgid ""
"`Issue #13538 <https://bugs.python.org/13538>`__: Improve str() and object."
"__str__() documentation."
msgstr ""
"`Issue #13538 <https://bugs.python.org/13538>`__: Improve str() and object."
"__str__() documentation."

#: ../../../Misc/NEWS:10628
msgid ""
"`Issue #16489 <https://bugs.python.org/16489>`__: Make it clearer that "
"importlib.find_loader() needs parent packages to be explicitly imported."
msgstr ""
"`Issue #16489 <https://bugs.python.org/16489>`__: Make it clearer that "
"importlib.find_loader() needs parent packages to be explicitly imported."

#: ../../../Misc/NEWS:10631
msgid ""
"`Issue #16400 <https://bugs.python.org/16400>`__: Update the description of "
"which versions of a given package PyPI displays."
msgstr ""
"`Issue #16400 <https://bugs.python.org/16400>`__: Update the description of "
"which versions of a given package PyPI displays."

#: ../../../Misc/NEWS:10634
msgid ""
"`Issue #15677 <https://bugs.python.org/15677>`__: Document that zlib and "
"gzip accept a compression level of 0 to mean 'no compression'. Patch by "
"Brian Brazil."
msgstr ""
"`Issue #15677 <https://bugs.python.org/15677>`__: Document that zlib and "
"gzip accept a compression level of 0 to mean 'no compression'. Patch by "
"Brian Brazil."

#: ../../../Misc/NEWS:10637
msgid ""
"`Issue #16197 <https://bugs.python.org/16197>`__: Update winreg docstrings "
"and documentation to match code. Patch by Zachary Ware."
msgstr ""
"`Issue #16197 <https://bugs.python.org/16197>`__: Update winreg docstrings "
"and documentation to match code. Patch by Zachary Ware."

#: ../../../Misc/NEWS:10640
msgid ""
"`Issue #8040 <https://bugs.python.org/8040>`__: added a version switcher to "
"the documentation.  Patch by Yury Selivanov."
msgstr ""
"`Issue #8040 <https://bugs.python.org/8040>`__: added a version switcher to "
"the documentation.  Patch by Yury Selivanov."

#: ../../../Misc/NEWS:10643
msgid ""
"`Issue #16241 <https://bugs.python.org/16241>`__: Document -X faulthandler "
"command line option. Patch by Marek ≈†uppa."
msgstr ""
"`Issue #16241 <https://bugs.python.org/16241>`__: Document -X faulthandler "
"command line option. Patch by Marek ≈†uppa."

#: ../../../Misc/NEWS:10646
msgid ""
"Additional comments and some style changes in the concurrent.futures URL "
"retrieval example"
msgstr ""

#: ../../../Misc/NEWS:10649
msgid ""
"`Issue #16115 <https://bugs.python.org/16115>`__: Improve subprocess.Popen() "
"documentation around args, shell, and executable arguments."
msgstr ""
"`Issue #16115 <https://bugs.python.org/16115>`__: Improve subprocess.Popen() "
"documentation around args, shell, and executable arguments."

#: ../../../Misc/NEWS:10652
msgid ""
"`Issue #13498 <https://bugs.python.org/13498>`__: Clarify docs of os."
"makedirs()'s exist_ok argument.  Done with great native-speaker help from R. "
"David Murray."
msgstr ""
"`Issue #13498 <https://bugs.python.org/13498>`__: Clarify docs of os."
"makedirs()'s exist_ok argument.  Done with great native-speaker help from R. "
"David Murray."

#: ../../../Misc/NEWS:10655
msgid ""
"`Issue #15533 <https://bugs.python.org/15533>`__: Clarify docs and add tests "
"for `subprocess.Popen()`'s cwd argument."
msgstr ""
"`Issue #15533 <https://bugs.python.org/15533>`__: Clarify docs and add tests "
"for `subprocess.Popen()`'s cwd argument."

#: ../../../Misc/NEWS:10658
msgid ""
"`Issue #15979 <https://bugs.python.org/15979>`__: Improve timeit "
"documentation."
msgstr ""
"`Issue #15979 <https://bugs.python.org/15979>`__: Improve timeit "
"documentation."

#: ../../../Misc/NEWS:10660
msgid ""
"`Issue #16036 <https://bugs.python.org/16036>`__: Improve documentation of "
"built-in `int()`'s signature and arguments."
msgstr ""
"`Issue #16036 <https://bugs.python.org/16036>`__: Improve documentation of "
"built-in `int()`'s signature and arguments."

#: ../../../Misc/NEWS:10663
msgid ""
"`Issue #15935 <https://bugs.python.org/15935>`__: Clarification of "
"`argparse` docs, re: add_argument() type and default arguments.  Patch "
"contributed by Chris Jerdonek."
msgstr ""
"`Issue #15935 <https://bugs.python.org/15935>`__: Clarification of "
"`argparse` docs, re: add_argument() type and default arguments.  Patch "
"contributed by Chris Jerdonek."

#: ../../../Misc/NEWS:10666
msgid ""
"`Issue #11964 <https://bugs.python.org/11964>`__: Document a change in v3.2 "
"to the behavior of the indent parameter of json encoding operations."
msgstr ""
"`Issue #11964 <https://bugs.python.org/11964>`__: Document a change in v3.2 "
"to the behavior of the indent parameter of json encoding operations."

#: ../../../Misc/NEWS:10669
msgid ""
"`Issue #15116 <https://bugs.python.org/15116>`__: Remove references to "
"appscript as it is no longer being supported."
msgstr ""
"`Issue #15116 <https://bugs.python.org/15116>`__: Remove references to "
"appscript as it is no longer being supported."

#: ../../../Misc/NEWS:10675
msgid ""
"`Issue #18817 <https://bugs.python.org/18817>`__: Fix a resource warning in "
"Lib/aifc.py demo.  Patch by Vajrasky Kok."
msgstr ""
"`Issue #18817 <https://bugs.python.org/18817>`__: Fix a resource warning in "
"Lib/aifc.py demo.  Patch by Vajrasky Kok."

#: ../../../Misc/NEWS:10678
msgid ""
"`Issue #18439 <https://bugs.python.org/18439>`__: Make patchcheck work on "
"Windows for ACKS, NEWS."
msgstr ""
"`Issue #18439 <https://bugs.python.org/18439>`__: Make patchcheck work on "
"Windows for ACKS, NEWS."

#: ../../../Misc/NEWS:10680
msgid ""
"`Issue #18448 <https://bugs.python.org/18448>`__: Fix a typo in Tools/demo/"
"eiffel.py."
msgstr ""
"`Issue #18448 <https://bugs.python.org/18448>`__: Fix a typo in Tools/demo/"
"eiffel.py."

#: ../../../Misc/NEWS:10682
msgid ""
"`Issue #18457 <https://bugs.python.org/18457>`__: Fixed saving of formulas "
"and complex numbers in Tools/demo/ss1.py."
msgstr ""
"`Issue #18457 <https://bugs.python.org/18457>`__: Fixed saving of formulas "
"and complex numbers in Tools/demo/ss1.py."

#: ../../../Misc/NEWS:10685
msgid ""
"`Issue #18449 <https://bugs.python.org/18449>`__: Make Tools/demo/ss1.py "
"work again on Python 3.  Patch by F√©vry Thibault."
msgstr ""
"`Issue #18449 <https://bugs.python.org/18449>`__: Make Tools/demo/ss1.py "
"work again on Python 3.  Patch by F√©vry Thibault."

#: ../../../Misc/NEWS:10688
msgid ""
"`Issue #12990 <https://bugs.python.org/12990>`__: The \"Python Launcher\" on "
"OSX could not launch python scripts that have paths that include wide "
"characters."
msgstr ""
"`Issue #12990 <https://bugs.python.org/12990>`__: The \"Python Launcher\" on "
"OSX could not launch python scripts that have paths that include wide "
"characters."

#: ../../../Misc/NEWS:10691
msgid ""
"`Issue #15239 <https://bugs.python.org/15239>`__: Make mkstringprep.py work "
"again on Python 3."
msgstr ""
"`Issue #15239 <https://bugs.python.org/15239>`__: Make mkstringprep.py work "
"again on Python 3."

#: ../../../Misc/NEWS:10693
msgid ""
"`Issue #17028 <https://bugs.python.org/17028>`__: Allowed Python arguments "
"to be supplied to the Windows launcher."
msgstr ""
"`Issue #17028 <https://bugs.python.org/17028>`__: Allowed Python arguments "
"to be supplied to the Windows launcher."

#: ../../../Misc/NEWS:10696
msgid ""
"`Issue #17156 <https://bugs.python.org/17156>`__: pygettext.py now detects "
"the encoding of source files and correctly writes and escapes non-ascii "
"characters."
msgstr ""
"`Issue #17156 <https://bugs.python.org/17156>`__: pygettext.py now detects "
"the encoding of source files and correctly writes and escapes non-ascii "
"characters."

#: ../../../Misc/NEWS:10699
msgid ""
"`Issue #15539 <https://bugs.python.org/15539>`__: Fix a number of bugs in "
"Tools/scripts/pindent.py.  Now pindent.py works with a \"with\" statement.  "
"pindent.py no longer produces improper indentation.  pindent.py now works "
"with continued lines broken after \"class\" or \"def\" keywords and with "
"continuations at the start of line."
msgstr ""
"`Issue #15539 <https://bugs.python.org/15539>`__: Fix a number of bugs in "
"Tools/scripts/pindent.py.  Now pindent.py works with a \"with\" statement.  "
"pindent.py no longer produces improper indentation.  pindent.py now works "
"with continued lines broken after \"class\" or \"def\" keywords and with "
"continuations at the start of line."

#: ../../../Misc/NEWS:10704
msgid ""
"`Issue #11797 <https://bugs.python.org/11797>`__: Add a 2to3 fixer that maps "
"reload() to imp.reload()."
msgstr ""
"`Issue #11797 <https://bugs.python.org/11797>`__: Add a 2to3 fixer that maps "
"reload() to imp.reload()."

#: ../../../Misc/NEWS:10706
msgid ""
"`Issue #10966 <https://bugs.python.org/10966>`__: Remove the concept of "
"unexpected skipped tests."
msgstr ""
"`Issue #10966 <https://bugs.python.org/10966>`__: Remove the concept of "
"unexpected skipped tests."

#: ../../../Misc/NEWS:10708
msgid ""
"`Issue #9893 <https://bugs.python.org/9893>`__: Removed the Misc/Vim "
"directory."
msgstr ""
"`Issue #9893 <https://bugs.python.org/9893>`__: Removed the Misc/Vim "
"directory."

#: ../../../Misc/NEWS:10710
msgid "Removed the Misc/TextMate directory."
msgstr "Le r√©pertoire Misc/TextMate a √©t√© supprim√©."

#: ../../../Misc/NEWS:10712
msgid ""
"`Issue #16245 <https://bugs.python.org/16245>`__: Add the Tools/scripts/"
"parse_html5_entities.py script to parse the list of HTML5 entities and "
"update the html.entities.html5 dictionary."
msgstr ""
"`Issue #16245 <https://bugs.python.org/16245>`__: Add the Tools/scripts/"
"parse_html5_entities.py script to parse the list of HTML5 entities and "
"update the html.entities.html5 dictionary."

#: ../../../Misc/NEWS:10715
msgid ""
"`Issue #15378 <https://bugs.python.org/15378>`__: Fix Tools/unicode/"
"comparecodecs.py.  Patch by Serhiy Storchaka."
msgstr ""
"`Issue #15378 <https://bugs.python.org/15378>`__: Fix Tools/unicode/"
"comparecodecs.py.  Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:10717
msgid ""
"`Issue #16549 <https://bugs.python.org/16549>`__: Make json.tool work again "
"on Python 3 and add tests. Initial patch by Berker Peksag and Serhiy "
"Storchaka."
msgstr ""
"`Issue #16549 <https://bugs.python.org/16549>`__: Make json.tool work again "
"on Python 3 and add tests. Initial patch by Berker Peksag and Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:10720
msgid ""
"`Issue #13301 <https://bugs.python.org/13301>`__: use ast.literal_eval() "
"instead of eval() in Tools/i18n/msgfmt.py. Patch by Serhiy Storchaka."
msgstr ""
"`Issue #13301 <https://bugs.python.org/13301>`__: use ast.literal_eval() "
"instead of eval() in Tools/i18n/msgfmt.py. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:10726
msgid ""
"`Issue #18569 <https://bugs.python.org/18569>`__: The installer now adds .py "
"to the PATHEXT variable when extensions are registered. Patch by Paul Moore."
msgstr ""
"`Issue #18569 <https://bugs.python.org/18569>`__: The installer now adds .py "
"to the PATHEXT variable when extensions are registered. Patch by Paul Moore."

#: ../../../Misc/NEWS:10729
msgid "**(For information about older versions, consult the HISTORY file.)**"
msgstr ""
"**(Pour des informations sur les versions pr√©c√©dentes, consultez le fichier "
"HISTORY.)**"
