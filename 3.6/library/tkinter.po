# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-02 22:11+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/tkinter.rst:2
msgid ":mod:`tkinter` --- Python interface to Tcl/Tk"
msgstr ""

#: ../Doc/library/tkinter.rst:9
msgid "**Source code:** :source:`Lib/tkinter/__init__.py`"
msgstr ""

#: ../Doc/library/tkinter.rst:13
msgid ""
"The :mod:`tkinter` package (\"Tk interface\") is the standard Python "
"interface to the Tk GUI toolkit.  Both Tk and :mod:`tkinter` are available "
"on most Unix platforms, as well as on Windows systems.  (Tk itself is not "
"part of Python; it is maintained at ActiveState.) You can check that :mod:"
"`tkinter` is properly installed on your system by running ``python -m "
"tkinter`` from the command line; this should open a window demonstrating a "
"simple Tk interface."
msgstr ""

#: ../Doc/library/tkinter.rst:24
msgid "`Python Tkinter Resources <https://wiki.python.org/moin/TkInter>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:23
msgid ""
"The Python Tkinter Topic Guide provides a great deal of information on using "
"Tk from Python and links to other sources of information on Tk."
msgstr ""

#: ../Doc/library/tkinter.rst:27
msgid "`TKDocs <http://www.tkdocs.com/>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:27
msgid ""
"Extensive tutorial plus friendlier widget pages for some of the widgets."
msgstr ""

#: ../Doc/library/tkinter.rst:30
msgid ""
"`Tkinter reference: a GUI for Python <https://infohost.nmt.edu/tcc/help/pubs/"
"tkinter/web/index.html>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:30
msgid "On-line reference material."
msgstr ""

#: ../Doc/library/tkinter.rst:33
msgid "`Tkinter docs from effbot <http://effbot.org/tkinterbook/>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:33
msgid "Online reference for tkinter supported by effbot.org."
msgstr ""

#: ../Doc/library/tkinter.rst:36
msgid "`Tcl/Tk manual <https://www.tcl.tk/man/tcl8.5/>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:36
msgid "Official manual for the latest tcl/tk version."
msgstr ""

#: ../Doc/library/tkinter.rst:39
msgid ""
"`Programming Python <http://learning-python.com/books/about-pp4e.html>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:39
msgid "Book by Mark Lutz, has excellent coverage of Tkinter."
msgstr ""

#: ../Doc/library/tkinter.rst:42
msgid ""
"`Modern Tkinter for Busy Python Developers <http://www.amazon.com/Modern-"
"Tkinter-Python-Developers-ebook/dp/B0071QDNLO/>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:42
msgid ""
"Book by Mark Rozerman about building attractive and modern graphical user "
"interfaces with Python and Tkinter."
msgstr ""

#: ../Doc/library/tkinter.rst:44
msgid ""
"`Python and Tkinter Programming <https://www.manning.com/books/python-and-"
"tkinter-programming>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:45
msgid "The book by John Grayson (ISBN 1-884777-81-3)."
msgstr ""

#: ../Doc/library/tkinter.rst:49
msgid "Tkinter Modules"
msgstr ""

#: ../Doc/library/tkinter.rst:51
msgid ""
"Most of the time, :mod:`tkinter` is all you really need, but a number of "
"additional modules are available as well.  The Tk interface is located in a "
"binary module named :mod:`_tkinter`. This module contains the low-level "
"interface to Tk, and should never be used directly by application "
"programmers. It is usually a shared library (or DLL), but might in some "
"cases be statically linked with the Python interpreter."
msgstr ""

#: ../Doc/library/tkinter.rst:58
msgid ""
"In addition to the Tk interface module, :mod:`tkinter` includes a number of "
"Python modules, :mod:`tkinter.constants` being one of the most important. "
"Importing :mod:`tkinter` will automatically import :mod:`tkinter.constants`, "
"so, usually, to use Tkinter all you need is a simple import statement::"
msgstr ""

#: ../Doc/library/tkinter.rst:65
msgid "Or, more often::"
msgstr ""

#: ../Doc/library/tkinter.rst:72
msgid ""
"The :class:`Tk` class is instantiated without arguments. This creates a "
"toplevel widget of Tk which usually is the main window of an application. "
"Each instance has its own associated Tcl interpreter."
msgstr ""

#: ../Doc/library/tkinter.rst:81
msgid ""
"The :func:`Tcl` function is a factory function which creates an object much "
"like that created by the :class:`Tk` class, except that it does not "
"initialize the Tk subsystem.  This is most often useful when driving the Tcl "
"interpreter in an environment where one doesn't want to create extraneous "
"toplevel windows, or where one cannot (such as Unix/Linux systems without an "
"X server).  An object created by the :func:`Tcl` object can have a Toplevel "
"window created (and the Tk subsystem initialized) by calling its :meth:"
"`loadtk` method."
msgstr ""

#: ../Doc/library/tkinter.rst:90
msgid "Other modules that provide Tk support include:"
msgstr ""

#: ../Doc/library/tkinter.rst:93
msgid ":mod:`tkinter.scrolledtext`"
msgstr ""

#: ../Doc/library/tkinter.rst:93
msgid "Text widget with a vertical scroll bar built in."
msgstr ""

#: ../Doc/library/tkinter.rst:96
msgid ":mod:`tkinter.colorchooser`"
msgstr ""

#: ../Doc/library/tkinter.rst:96
msgid "Dialog to let the user choose a color."
msgstr ""

#: ../Doc/library/tkinter.rst:99
msgid ":mod:`tkinter.commondialog`"
msgstr ""

#: ../Doc/library/tkinter.rst:99
msgid "Base class for the dialogs defined in the other modules listed here."
msgstr ""

#: ../Doc/library/tkinter.rst:102
msgid ":mod:`tkinter.filedialog`"
msgstr ""

#: ../Doc/library/tkinter.rst:102
msgid "Common dialogs to allow the user to specify a file to open or save."
msgstr ""

#: ../Doc/library/tkinter.rst:105
msgid ":mod:`tkinter.font`"
msgstr ""

#: ../Doc/library/tkinter.rst:105
msgid "Utilities to help work with fonts."
msgstr ""

#: ../Doc/library/tkinter.rst:108
msgid ":mod:`tkinter.messagebox`"
msgstr ""

#: ../Doc/library/tkinter.rst:108
msgid "Access to standard Tk dialog boxes."
msgstr ""

#: ../Doc/library/tkinter.rst:111
msgid ":mod:`tkinter.simpledialog`"
msgstr ""

#: ../Doc/library/tkinter.rst:111
msgid "Basic dialogs and convenience functions."
msgstr ""

#: ../Doc/library/tkinter.rst:115
msgid ":mod:`tkinter.dnd`"
msgstr ""

#: ../Doc/library/tkinter.rst:114
msgid ""
"Drag-and-drop support for :mod:`tkinter`. This is experimental and should "
"become deprecated when it is replaced  with the Tk DND."
msgstr ""

#: ../Doc/library/tkinter.rst:119
msgid ":mod:`turtle`"
msgstr ""

#: ../Doc/library/tkinter.rst:118
msgid "Turtle graphics in a Tk window."
msgstr ""

#: ../Doc/library/tkinter.rst:122
msgid "Tkinter Life Preserver"
msgstr ""

#: ../Doc/library/tkinter.rst:127
msgid ""
"This section is not designed to be an exhaustive tutorial on either Tk or "
"Tkinter.  Rather, it is intended as a stop gap, providing some introductory "
"orientation on the system."
msgstr ""

#: ../Doc/library/tkinter.rst:131
msgid "Credits:"
msgstr ""

#: ../Doc/library/tkinter.rst:133
msgid "Tk was written by John Ousterhout while at Berkeley."
msgstr ""

#: ../Doc/library/tkinter.rst:135
msgid "Tkinter was written by Steen Lumholt and Guido van Rossum."
msgstr ""

#: ../Doc/library/tkinter.rst:137
msgid ""
"This Life Preserver was written by Matt Conway at the University of Virginia."
msgstr ""

#: ../Doc/library/tkinter.rst:139
msgid ""
"The HTML rendering, and some liberal editing, was produced from a FrameMaker "
"version by Ken Manheimer."
msgstr ""

#: ../Doc/library/tkinter.rst:142
msgid ""
"Fredrik Lundh elaborated and revised the class interface descriptions, to "
"get them current with Tk 4.2."
msgstr ""

#: ../Doc/library/tkinter.rst:145
msgid ""
"Mike Clarkson converted the documentation to LaTeX, and compiled the  User "
"Interface chapter of the reference manual."
msgstr ""

#: ../Doc/library/tkinter.rst:150
msgid "How To Use This Section"
msgstr ""

#: ../Doc/library/tkinter.rst:152
msgid ""
"This section is designed in two parts: the first half (roughly) covers "
"background material, while the second half can be taken to the keyboard as a "
"handy reference."
msgstr ""

#: ../Doc/library/tkinter.rst:156
msgid ""
"When trying to answer questions of the form \"how do I do blah\", it is "
"often best to find out how to do\"blah\" in straight Tk, and then convert "
"this back into the corresponding :mod:`tkinter` call. Python programmers can "
"often guess at the correct Python command by looking at the Tk "
"documentation. This means that in order to use Tkinter, you will have to "
"know a little bit about Tk. This document can't fulfill that role, so the "
"best we can do is point you to the best documentation that exists. Here are "
"some hints:"
msgstr ""

#: ../Doc/library/tkinter.rst:164
msgid ""
"The authors strongly suggest getting a copy of the Tk man pages. "
"Specifically, the man pages in the ``manN`` directory are most useful. The "
"``man3`` man pages describe the C interface to the Tk library and thus are "
"not especially helpful for script writers."
msgstr ""

#: ../Doc/library/tkinter.rst:169
msgid ""
"Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John "
"Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and Tk "
"for the novice.  The book is not exhaustive, and for many details it defers "
"to the man pages."
msgstr ""

#: ../Doc/library/tkinter.rst:174
msgid ""
":file:`tkinter/__init__.py` is a last resort for most, but can be a good "
"place to go when nothing else makes sense."
msgstr ""

#: ../Doc/library/tkinter.rst:181
msgid "`Tcl/Tk 8.6 man pages <https://www.tcl.tk/man/tcl8.6/>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:181
msgid "The Tcl/Tk manual on www.tcl.tk."
msgstr ""

#: ../Doc/library/tkinter.rst:184
msgid "`ActiveState Tcl Home Page <http://tcl.activestate.com/>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:184
msgid "The Tk/Tcl development is largely taking place at ActiveState."
msgstr ""

#: ../Doc/library/tkinter.rst:187
msgid ""
"`Tcl and the Tk Toolkit <http://www.amazon.com/exec/obidos/ASIN/020163337X>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:187
msgid "The book by John Ousterhout, the inventor of Tcl."
msgstr ""

#: ../Doc/library/tkinter.rst:189
msgid "`Practical Programming in Tcl and Tk <http://www.beedub.com/book/>`_"
msgstr ""

#: ../Doc/library/tkinter.rst:190
msgid "Brent Welch's encyclopedic book."
msgstr ""

#: ../Doc/library/tkinter.rst:194
msgid "A Simple Hello World Program"
msgstr ""

#: ../Doc/library/tkinter.rst:225
msgid "A (Very) Quick Look at Tcl/Tk"
msgstr ""

#: ../Doc/library/tkinter.rst:227
msgid ""
"The class hierarchy looks complicated, but in actual practice, application "
"programmers almost always refer to the classes at the very bottom of the "
"hierarchy."
msgstr ""

#: ../Doc/library/tkinter.rst:231
msgid "Notes:"
msgstr "Notes : "

#: ../Doc/library/tkinter.rst:233
msgid ""
"These classes are provided for the purposes of organizing certain functions "
"under one namespace. They aren't meant to be instantiated independently."
msgstr ""

#: ../Doc/library/tkinter.rst:236
msgid ""
"The :class:`Tk` class is meant to be instantiated only once in an "
"application. Application programmers need not instantiate one explicitly, "
"the system creates one whenever any of the other classes are instantiated."
msgstr ""

#: ../Doc/library/tkinter.rst:240
msgid ""
"The :class:`Widget` class is not meant to be instantiated, it is meant only "
"for subclassing to make \"real\" widgets (in C++, this is called an "
"'abstract class')."
msgstr ""

#: ../Doc/library/tkinter.rst:244
msgid ""
"To make use of this reference material, there will be times when you will "
"need to know how to read short passages of Tk and how to identify the "
"various parts of a Tk command.   (See section :ref:`tkinter-basic-mapping` "
"for the :mod:`tkinter` equivalents of what's below.)"
msgstr ""

#: ../Doc/library/tkinter.rst:249
msgid ""
"Tk scripts are Tcl programs.  Like all Tcl programs, Tk scripts are just "
"lists of tokens separated by spaces.  A Tk widget is just its *class*, the "
"*options* that help configure it, and the *actions* that make it do useful "
"things."
msgstr ""

#: ../Doc/library/tkinter.rst:253
msgid "To make a widget in Tk, the command is always of the form::"
msgstr ""

#: ../Doc/library/tkinter.rst:258
msgid "*classCommand*"
msgstr ""

#: ../Doc/library/tkinter.rst:258
msgid "denotes which kind of widget to make (a button, a label, a menu...)"
msgstr ""

#: ../Doc/library/tkinter.rst:265
msgid "*newPathname*"
msgstr ""

#: ../Doc/library/tkinter.rst:261
msgid ""
"is the new name for this widget.  All names in Tk must be unique.  To help "
"enforce this, widgets in Tk are named with *pathnames*, just like files in a "
"file system.  The top level widget, the *root*, is called ``.`` (period) and "
"children are delimited by more periods.  For example, ``.myApp.controlPanel."
"okButton`` might be the name of a widget."
msgstr ""

#: ../Doc/library/tkinter.rst:271
msgid "*options*"
msgstr "*options*"

#: ../Doc/library/tkinter.rst:268
msgid ""
"configure the widget's appearance and in some cases, its behavior.  The "
"options come in the form of a list of flags and values. Flags are preceded "
"by a '-', like Unix shell command flags, and values are put in quotes if "
"they are more than one word."
msgstr ""

#: ../Doc/library/tkinter.rst:273 ../Doc/library/tkinter.rst:535
#: ../Doc/library/tkinter.rst:709
msgid "For example::"
msgstr "Par exemple : ::"

#: ../Doc/library/tkinter.rst:281
msgid ""
"Once created, the pathname to the widget becomes a new command.  This new "
"*widget command* is the programmer's handle for getting the new widget to "
"perform some *action*.  In C, you'd express this as someAction(fred, "
"someOptions), in C++, you would express this as fred."
"someAction(someOptions), and in Tk, you say::"
msgstr ""

#: ../Doc/library/tkinter.rst:289
msgid "Note that the object name, ``.fred``, starts with a dot."
msgstr ""

#: ../Doc/library/tkinter.rst:291
msgid ""
"As you'd expect, the legal values for *someAction* will depend on the "
"widget's class: ``.fred disable`` works if fred is a button (fred gets "
"greyed out), but does not work if fred is a label (disabling of labels is "
"not supported in Tk)."
msgstr ""

#: ../Doc/library/tkinter.rst:295
msgid ""
"The legal values of *someOptions* is action dependent.  Some actions, like "
"``disable``, require no arguments, others, like a text-entry box's "
"``delete`` command, would need arguments to specify what range of text to "
"delete."
msgstr ""

#: ../Doc/library/tkinter.rst:303
msgid "Mapping Basic Tk into Tkinter"
msgstr ""

#: ../Doc/library/tkinter.rst:305
msgid "Class commands in Tk correspond to class constructors in Tkinter. ::"
msgstr ""

#: ../Doc/library/tkinter.rst:309
msgid ""
"The master of an object is implicit in the new name given to it at creation "
"time.  In Tkinter, masters are specified explicitly. ::"
msgstr ""

#: ../Doc/library/tkinter.rst:314
msgid ""
"The configuration options in Tk are given in lists of hyphened tags followed "
"by values.  In Tkinter, options are specified as keyword-arguments in the "
"instance constructor, and keyword-args for configure calls or as instance "
"indices, in dictionary style, for established instances.  See section :ref:"
"`tkinter-setting-options` on setting options. ::"
msgstr ""

#: ../Doc/library/tkinter.rst:324
msgid ""
"In Tk, to perform an action on a widget, use the widget name as a command, "
"and follow it with an action name, possibly with arguments (options).  In "
"Tkinter, you call methods on the class instance to invoke actions on the "
"widget.  The actions (methods) that a given widget can perform are listed "
"in :file:`tkinter/__init__.py`. ::"
msgstr ""

#: ../Doc/library/tkinter.rst:332
msgid ""
"To give a widget to the packer (geometry manager), you call pack with "
"optional arguments.  In Tkinter, the Pack class holds all this "
"functionality, and the various forms of the pack command are implemented as "
"methods.  All widgets in :mod:`tkinter` are subclassed from the Packer, and "
"so inherit all the packing methods. See the :mod:`tkinter.tix` module "
"documentation for additional information on the Form geometry manager. ::"
msgstr ""

#: ../Doc/library/tkinter.rst:343
msgid "How Tk and Tkinter are Related"
msgstr ""

#: ../Doc/library/tkinter.rst:345
msgid "From the top down:"
msgstr ""

#: ../Doc/library/tkinter.rst:348
msgid "Your App Here (Python)"
msgstr ""

#: ../Doc/library/tkinter.rst:348
msgid "A Python application makes a :mod:`tkinter` call."
msgstr ""

#: ../Doc/library/tkinter.rst:355
msgid "tkinter (Python Package)"
msgstr ""

#: ../Doc/library/tkinter.rst:351
msgid ""
"This call (say, for example, creating a button widget), is implemented in "
"the :mod:`tkinter` package, which is written in Python.  This Python "
"function will parse the commands and the arguments and convert them into a "
"form that makes them look as if they had come from a Tk script instead of a "
"Python script."
msgstr ""

#: ../Doc/library/tkinter.rst:359
msgid "_tkinter (C)"
msgstr ""

#: ../Doc/library/tkinter.rst:358
msgid ""
"These commands and their arguments will be passed to a C function in the :"
"mod:`_tkinter` - note the underscore - extension module."
msgstr ""

#: ../Doc/library/tkinter.rst:366
msgid "Tk Widgets (C and Tcl)"
msgstr ""

#: ../Doc/library/tkinter.rst:362
msgid ""
"This C function is able to make calls into other C modules, including the C "
"functions that make up the Tk library.  Tk is implemented in C and some Tcl. "
"The Tcl part of the Tk widgets is used to bind certain default behaviors to "
"widgets, and is executed once at the point where the Python :mod:`tkinter` "
"package is imported. (The user never sees this stage)."
msgstr ""

#: ../Doc/library/tkinter.rst:369
msgid "Tk (C)"
msgstr ""

#: ../Doc/library/tkinter.rst:369
msgid "The Tk part of the Tk Widgets implement the final mapping to ..."
msgstr ""

#: ../Doc/library/tkinter.rst:373
msgid "Xlib (C)"
msgstr ""

#: ../Doc/library/tkinter.rst:372
msgid "the Xlib library to draw graphics on the screen."
msgstr ""

#: ../Doc/library/tkinter.rst:376
msgid "Handy Reference"
msgstr ""

#: ../Doc/library/tkinter.rst:382
msgid "Setting Options"
msgstr ""

#: ../Doc/library/tkinter.rst:384
msgid ""
"Options control things like the color and border width of a widget. Options "
"can be set in three ways:"
msgstr ""

#: ../Doc/library/tkinter.rst:390
msgid "At object creation time, using keyword arguments"
msgstr ""

#: ../Doc/library/tkinter.rst:396
msgid "After object creation, treating the option name like a dictionary index"
msgstr ""

#: ../Doc/library/tkinter.rst:401
msgid ""
"Use the config() method to update multiple attrs subsequent to object "
"creation"
msgstr ""

#: ../Doc/library/tkinter.rst:403
msgid ""
"For a complete explanation of a given option and its behavior, see the Tk "
"man pages for the widget in question."
msgstr ""

#: ../Doc/library/tkinter.rst:406
msgid ""
"Note that the man pages list \"STANDARD OPTIONS\" and \"WIDGET SPECIFIC "
"OPTIONS\" for each widget.  The former is a list of options that are common "
"to many widgets, the latter are the options that are idiosyncratic to that "
"particular widget.  The Standard Options are documented on the :manpage:"
"`options(3)` man page."
msgstr ""

#: ../Doc/library/tkinter.rst:412
msgid ""
"No distinction between standard and widget-specific options is made in this "
"document.  Some options don't apply to some kinds of widgets. Whether a "
"given widget responds to a particular option depends on the class of the "
"widget; buttons have a ``command`` option, labels do not."
msgstr ""

#: ../Doc/library/tkinter.rst:417
msgid ""
"The options supported by a given widget are listed in that widget's man "
"page, or can be queried at runtime by calling the :meth:`config` method "
"without arguments, or by calling the :meth:`keys` method on that widget.  "
"The return value of these calls is a dictionary whose key is the name of the "
"option as a string (for example, ``'relief'``) and whose values are 5-tuples."
msgstr ""

#: ../Doc/library/tkinter.rst:423
msgid ""
"Some options, like ``bg`` are synonyms for common options with long names "
"(``bg`` is shorthand for \"background\"). Passing the ``config()`` method "
"the name of a shorthand option will return a 2-tuple, not 5-tuple. The 2-"
"tuple passed back will contain the name of the synonym and the \"real\" "
"option (such as ``('bg', 'background')``)."
msgstr ""

#: ../Doc/library/tkinter.rst:430
msgid "Index"
msgstr ""

#: ../Doc/library/tkinter.rst:430
msgid "Meaning"
msgstr "Signification"

#: ../Doc/library/tkinter.rst:430
msgid "Example"
msgstr "Exemple"

#: ../Doc/library/tkinter.rst:432
msgid "0"
msgstr "0"

#: ../Doc/library/tkinter.rst:432
msgid "option name"
msgstr ""

#: ../Doc/library/tkinter.rst:432 ../Doc/library/tkinter.rst:434
msgid "``'relief'``"
msgstr "``'relief'``"

#: ../Doc/library/tkinter.rst:434
msgid "1"
msgstr "1"

#: ../Doc/library/tkinter.rst:434
msgid "option name for database lookup"
msgstr ""

#: ../Doc/library/tkinter.rst:436
msgid "2"
msgstr "2"

#: ../Doc/library/tkinter.rst:436
msgid "option class for database lookup"
msgstr ""

#: ../Doc/library/tkinter.rst:436
msgid "``'Relief'``"
msgstr "``'Relief'``"

#: ../Doc/library/tkinter.rst:439
msgid "3"
msgstr "3"

#: ../Doc/library/tkinter.rst:439
msgid "default value"
msgstr "Valeur par défaut"

#: ../Doc/library/tkinter.rst:439
msgid "``'raised'``"
msgstr "``'raised'``"

#: ../Doc/library/tkinter.rst:441
msgid "4"
msgstr "4"

#: ../Doc/library/tkinter.rst:441
msgid "current value"
msgstr ""

#: ../Doc/library/tkinter.rst:441
msgid "``'groove'``"
msgstr "``'groove'``"

#: ../Doc/library/tkinter.rst:444
msgid "Example::"
msgstr "Exemples ::"

#: ../Doc/library/tkinter.rst:449
msgid ""
"Of course, the dictionary printed will include all the options available and "
"their values.  This is meant only as an example."
msgstr ""

#: ../Doc/library/tkinter.rst:454
msgid "The Packer"
msgstr ""

#: ../Doc/library/tkinter.rst:458
msgid ""
"The packer is one of Tk's geometry-management mechanisms.    Geometry "
"managers are used to specify the relative positioning of the positioning of "
"widgets within their container - their mutual *master*.  In contrast to the "
"more cumbersome *placer* (which is used less commonly, and we do not cover "
"here), the packer takes qualitative relationship specification - *above*, "
"*to the left of*, *filling*, etc - and works everything out to determine the "
"exact placement coordinates for you."
msgstr ""

#: ../Doc/library/tkinter.rst:466
msgid ""
"The size of any *master* widget is determined by the size of the \"slave "
"widgets\" inside.  The packer is used to control where slave widgets appear "
"inside the master into which they are packed.  You can pack widgets into "
"frames, and frames into other frames, in order to achieve the kind of layout "
"you desire. Additionally, the arrangement is dynamically adjusted to "
"accommodate incremental changes to the configuration, once it is packed."
msgstr ""

#: ../Doc/library/tkinter.rst:473
msgid ""
"Note that widgets do not appear until they have had their geometry specified "
"with a geometry manager.  It's a common early mistake to leave out the "
"geometry specification, and then be surprised when the widget is created but "
"nothing appears.  A widget will appear only after it has had, for example, "
"the packer's :meth:`pack` method applied to it."
msgstr ""

#: ../Doc/library/tkinter.rst:479
msgid ""
"The pack() method can be called with keyword-option/value pairs that control "
"where the widget is to appear within its container, and how it is to behave "
"when the main application window is resized.  Here are some examples::"
msgstr ""

#: ../Doc/library/tkinter.rst:489
msgid "Packer Options"
msgstr ""

#: ../Doc/library/tkinter.rst:491
msgid ""
"For more extensive information on the packer and the options that it can "
"take, see the man pages and page 183 of John Ousterhout's book."
msgstr ""

#: ../Doc/library/tkinter.rst:495 ../Doc/library/tkinter.rst:611
msgid "anchor"
msgstr ""

#: ../Doc/library/tkinter.rst:495
msgid ""
"Anchor type.  Denotes where the packer is to place each slave in its parcel."
msgstr ""

#: ../Doc/library/tkinter.rst:498
msgid "expand"
msgstr ""

#: ../Doc/library/tkinter.rst:498
msgid "Boolean, ``0`` or ``1``."
msgstr ""

#: ../Doc/library/tkinter.rst:501
msgid "fill"
msgstr ""

#: ../Doc/library/tkinter.rst:501
msgid "Legal values: ``'x'``, ``'y'``, ``'both'``, ``'none'``."
msgstr ""

#: ../Doc/library/tkinter.rst:504
msgid "ipadx and ipady"
msgstr ""

#: ../Doc/library/tkinter.rst:504
msgid ""
"A distance - designating internal padding on each side of the slave widget."
msgstr ""

#: ../Doc/library/tkinter.rst:507
msgid "padx and pady"
msgstr ""

#: ../Doc/library/tkinter.rst:507
msgid ""
"A distance - designating external padding on each side of the slave widget."
msgstr ""

#: ../Doc/library/tkinter.rst:511
msgid "side"
msgstr ""

#: ../Doc/library/tkinter.rst:510
msgid "Legal values are: ``'left'``, ``'right'``, ``'top'``, ``'bottom'``."
msgstr ""

#: ../Doc/library/tkinter.rst:514
msgid "Coupling Widget Variables"
msgstr ""

#: ../Doc/library/tkinter.rst:516
msgid ""
"The current-value setting of some widgets (like text entry widgets) can be "
"connected directly to application variables by using special options.  These "
"options are ``variable``, ``textvariable``, ``onvalue``, ``offvalue``, and "
"``value``.  This connection works both ways: if the variable changes for any "
"reason, the widget it's connected to will be updated to reflect the new "
"value."
msgstr ""

#: ../Doc/library/tkinter.rst:522
msgid ""
"Unfortunately, in the current implementation of :mod:`tkinter` it is not "
"possible to hand over an arbitrary Python variable to a widget through a "
"``variable`` or ``textvariable`` option.  The only kinds of variables for "
"which this works are variables that are subclassed from a class called "
"Variable, defined in :mod:`tkinter`."
msgstr ""

#: ../Doc/library/tkinter.rst:528
msgid ""
"There are many useful subclasses of Variable already defined: :class:"
"`StringVar`, :class:`IntVar`, :class:`DoubleVar`, and :class:`BooleanVar`.  "
"To read the current value of such a variable, call the :meth:`get` method on "
"it, and to change its value you call the :meth:`!set` method.  If you follow "
"this protocol, the widget will always track the value of the variable, with "
"no further intervention on your part."
msgstr ""

#: ../Doc/library/tkinter.rst:564
msgid "The Window Manager"
msgstr ""

#: ../Doc/library/tkinter.rst:568
msgid ""
"In Tk, there is a utility command, ``wm``, for interacting with the window "
"manager.  Options to the ``wm`` command allow you to control things like "
"titles, placement, icon bitmaps, and the like.  In :mod:`tkinter`, these "
"commands have been implemented as methods on the :class:`Wm` class.  "
"Toplevel widgets are subclassed from the :class:`Wm` class, and so can call "
"the :class:`Wm` methods directly."
msgstr ""

#: ../Doc/library/tkinter.rst:575
msgid ""
"To get at the toplevel window that contains a given widget, you can often "
"just refer to the widget's master.  Of course if the widget has been packed "
"inside of a frame, the master won't represent a toplevel window.  To get at "
"the toplevel window that contains an arbitrary widget, you can call the :"
"meth:`_root` method. This method begins with an underscore to denote the "
"fact that this function is part of the implementation, and not an interface "
"to Tk functionality."
msgstr ""

#: ../Doc/library/tkinter.rst:582
msgid "Here are some examples of typical usage::"
msgstr ""

#: ../Doc/library/tkinter.rst:605
msgid "Tk Option Data Types"
msgstr ""

#: ../Doc/library/tkinter.rst:610
msgid ""
"Legal values are points of the compass: ``\"n\"``, ``\"ne\"``, ``\"e\"``, ``"
"\"se\"``, ``\"s\"``, ``\"sw\"``, ``\"w\"``, ``\"nw\"``, and also ``\"center"
"\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:617
msgid "bitmap"
msgstr ""

#: ../Doc/library/tkinter.rst:614
msgid ""
"There are eight built-in, named bitmaps: ``'error'``, ``'gray25'``, "
"``'gray50'``, ``'hourglass'``, ``'info'``, ``'questhead'``, ``'question'``, "
"``'warning'``.  To specify an X bitmap filename, give the full path to the "
"file, preceded with an ``@``, as in ``\"@/usr/contrib/bitmap/gumby.bit\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:620
msgid "boolean"
msgstr ""

#: ../Doc/library/tkinter.rst:620
msgid "You can pass integers 0 or 1 or the strings ``\"yes\"`` or ``\"no\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:627
msgid "callback"
msgstr ""

#: ../Doc/library/tkinter.rst:623
msgid "This is any Python function that takes no arguments.  For example::"
msgstr ""

#: ../Doc/library/tkinter.rst:633
msgid "color"
msgstr ""

#: ../Doc/library/tkinter.rst:630
msgid ""
"Colors can be given as the names of X colors in the rgb.txt file, or as "
"strings representing RGB values in 4 bit: ``\"#RGB\"``, 8 bit: ``\"#RRGGBB"
"\"``, 12 bit\" ``\"#RRRGGGBBB\"``, or 16 bit ``\"#RRRRGGGGBBBB\"`` ranges, "
"where R,G,B here represent any legal hex digit.  See page 160 of "
"Ousterhout's book for details."
msgstr ""

#: ../Doc/library/tkinter.rst:639
msgid "cursor"
msgstr ""

#: ../Doc/library/tkinter.rst:636
msgid ""
"The standard X cursor names from :file:`cursorfont.h` can be used, without "
"the ``XC_`` prefix.  For example to get a hand cursor (:const:`XC_hand2`), "
"use the string ``\"hand2\"``.  You can also specify a bitmap and mask file "
"of your own. See page 179 of Ousterhout's book."
msgstr ""

#: ../Doc/library/tkinter.rst:646
msgid "distance"
msgstr ""

#: ../Doc/library/tkinter.rst:642
msgid ""
"Screen distances can be specified in either pixels or absolute distances. "
"Pixels are given as numbers and absolute distances as strings, with the "
"trailing character denoting units: ``c`` for centimetres, ``i`` for inches, "
"``m`` for millimetres, ``p`` for printer's points.  For example, 3.5 inches "
"is expressed as ``\"3.5i\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:651
msgid "font"
msgstr ""

#: ../Doc/library/tkinter.rst:649
msgid ""
"Tk uses a list font name format, such as ``{courier 10 bold}``. Font sizes "
"with positive numbers are measured in points; sizes with negative numbers "
"are measured in pixels."
msgstr ""

#: ../Doc/library/tkinter.rst:656
msgid "geometry"
msgstr ""

#: ../Doc/library/tkinter.rst:654
msgid ""
"This is a string of the form ``widthxheight``, where width and height are "
"measured in pixels for most widgets (in characters for widgets displaying "
"text). For example: ``fred[\"geometry\"] = \"200x100\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:660
msgid "justify"
msgstr ""

#: ../Doc/library/tkinter.rst:659
msgid ""
"Legal values are the strings: ``\"left\"``, ``\"center\"``, ``\"right\"``, "
"and ``\"fill\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:665
msgid "region"
msgstr ""

#: ../Doc/library/tkinter.rst:663
msgid ""
"This is a string with four space-delimited elements, each of which is a "
"legal distance (see above).  For example: ``\"2 3 4 5\"`` and ``\"3i 2i 4.5i "
"2i\"`` and ``\"3c 2c 4c 10.43c\"``  are all legal regions."
msgstr ""

#: ../Doc/library/tkinter.rst:669
msgid "relief"
msgstr ""

#: ../Doc/library/tkinter.rst:668
msgid ""
"Determines what the border style of a widget will be.  Legal values are: ``"
"\"raised\"``, ``\"sunken\"``, ``\"flat\"``, ``\"groove\"``, and ``\"ridge"
"\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:673
msgid "scrollcommand"
msgstr ""

#: ../Doc/library/tkinter.rst:672
msgid ""
"This is almost always the :meth:`!set` method of some scrollbar widget, but "
"can be any widget method that takes a single argument."
msgstr ""

#: ../Doc/library/tkinter.rst:677
msgid "wrap:"
msgstr ""

#: ../Doc/library/tkinter.rst:676
msgid "Must be one of: ``\"none\"``, ``\"char\"``, or ``\"word\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:680
msgid "Bindings and Events"
msgstr ""

#: ../Doc/library/tkinter.rst:686
msgid ""
"The bind method from the widget command allows you to watch for certain "
"events and to have a callback function trigger when that event type occurs.  "
"The form of the bind method is::"
msgstr ""

#: ../Doc/library/tkinter.rst:692
msgid "where:"
msgstr ""

#: ../Doc/library/tkinter.rst:696
msgid "sequence"
msgstr "séquence"

#: ../Doc/library/tkinter.rst:695
msgid ""
"is a string that denotes the target kind of event.  (See the bind man page "
"and page 201 of John Ousterhout's book for details)."
msgstr ""

#: ../Doc/library/tkinter.rst:701
msgid "func"
msgstr ""

#: ../Doc/library/tkinter.rst:699
msgid ""
"is a Python function, taking one argument, to be invoked when the event "
"occurs. An Event instance will be passed as the argument. (Functions "
"deployed this way are commonly known as *callbacks*.)"
msgstr ""

#: ../Doc/library/tkinter.rst:707
msgid "add"
msgstr ""

#: ../Doc/library/tkinter.rst:704
msgid ""
"is optional, either ``''`` or ``'+'``.  Passing an empty string denotes that "
"this binding is to replace any other bindings that this event is associated "
"with.  Passing a ``'+'`` means that this function is to be added to the list "
"of functions bound to this event type."
msgstr ""

#: ../Doc/library/tkinter.rst:716
msgid ""
"Notice how the widget field of the event is being accessed in the "
"``turn_red()`` callback.  This field contains the widget that caught the X "
"event.  The following table lists the other event fields you can access, and "
"how they are denoted in Tk, which can be useful when referring to the Tk man "
"pages."
msgstr ""

#: ../Doc/library/tkinter.rst:722
msgid "Tk"
msgstr "Tk"

#: ../Doc/library/tkinter.rst:722
msgid "Tkinter Event Field"
msgstr ""

#: ../Doc/library/tkinter.rst:724
msgid "%f"
msgstr "%f"

#: ../Doc/library/tkinter.rst:724
msgid "focus"
msgstr "focus"

#: ../Doc/library/tkinter.rst:724
msgid "%A"
msgstr "%A"

#: ../Doc/library/tkinter.rst:724
msgid "char"
msgstr "char"

#: ../Doc/library/tkinter.rst:726
msgid "%h"
msgstr "%h"

#: ../Doc/library/tkinter.rst:726
msgid "height"
msgstr "height"

#: ../Doc/library/tkinter.rst:726
msgid "%E"
msgstr "%E"

#: ../Doc/library/tkinter.rst:726
msgid "send_event"
msgstr "send_event"

#: ../Doc/library/tkinter.rst:728
msgid "%k"
msgstr "%k"

#: ../Doc/library/tkinter.rst:728
msgid "keycode"
msgstr "keycode"

#: ../Doc/library/tkinter.rst:728
msgid "%K"
msgstr "%K"

#: ../Doc/library/tkinter.rst:728
msgid "keysym"
msgstr "keysym"

#: ../Doc/library/tkinter.rst:730
msgid "%s"
msgstr "%s"

#: ../Doc/library/tkinter.rst:730
msgid "state"
msgstr "state"

#: ../Doc/library/tkinter.rst:730
msgid "%N"
msgstr "%N"

#: ../Doc/library/tkinter.rst:730
msgid "keysym_num"
msgstr "keysym_num"

#: ../Doc/library/tkinter.rst:732
msgid "%t"
msgstr "%t"

#: ../Doc/library/tkinter.rst:732
msgid "time"
msgstr "time"

#: ../Doc/library/tkinter.rst:732
msgid "%T"
msgstr "%T"

#: ../Doc/library/tkinter.rst:732
msgid "type"
msgstr "type"

#: ../Doc/library/tkinter.rst:734
msgid "%w"
msgstr "%w"

#: ../Doc/library/tkinter.rst:734
msgid "width"
msgstr "width"

#: ../Doc/library/tkinter.rst:734
msgid "%W"
msgstr "%W"

#: ../Doc/library/tkinter.rst:734
msgid "widget"
msgstr "widget"

#: ../Doc/library/tkinter.rst:736
msgid "%x"
msgstr "%x"

#: ../Doc/library/tkinter.rst:736
msgid "x"
msgstr "x"

#: ../Doc/library/tkinter.rst:736
msgid "%X"
msgstr "%X"

#: ../Doc/library/tkinter.rst:736
msgid "x_root"
msgstr "x_root"

#: ../Doc/library/tkinter.rst:738
msgid "%y"
msgstr "%y"

#: ../Doc/library/tkinter.rst:738
msgid "y"
msgstr "y"

#: ../Doc/library/tkinter.rst:738
msgid "%Y"
msgstr "%Y"

#: ../Doc/library/tkinter.rst:738
msgid "y_root"
msgstr "y_root"

#: ../Doc/library/tkinter.rst:743
msgid "The index Parameter"
msgstr ""

#: ../Doc/library/tkinter.rst:745
msgid ""
"A number of widgets require \"index\" parameters to be passed.  These are "
"used to point at a specific place in a Text widget, or to particular "
"characters in an Entry widget, or to particular menu items in a Menu widget."
msgstr ""

#: ../Doc/library/tkinter.rst:752
msgid "Entry widget indexes (index, view index, etc.)"
msgstr ""

#: ../Doc/library/tkinter.rst:750
msgid ""
"Entry widgets have options that refer to character positions in the text "
"being displayed.  You can use these :mod:`tkinter` functions to access these "
"special points in text widgets:"
msgstr ""

#: ../Doc/library/tkinter.rst:756
msgid "Text widget indexes"
msgstr ""

#: ../Doc/library/tkinter.rst:755
msgid ""
"The index notation for Text widgets is very rich and is best described in "
"the Tk man pages."
msgstr ""

#: ../Doc/library/tkinter.rst:781
msgid "Menu indexes (menu.invoke(), menu.entryconfig(), etc.)"
msgstr ""

#: ../Doc/library/tkinter.rst:759
msgid ""
"Some options and methods for menus manipulate specific menu entries. Anytime "
"a menu index is needed for an option or a parameter, you may pass in:"
msgstr ""

#: ../Doc/library/tkinter.rst:762
msgid ""
"an integer which refers to the numeric position of the entry in the widget, "
"counted from the top, starting with 0;"
msgstr ""

#: ../Doc/library/tkinter.rst:765
msgid ""
"the string ``\"active\"``, which refers to the menu position that is "
"currently under the cursor;"
msgstr ""

#: ../Doc/library/tkinter.rst:768
msgid "the string ``\"last\"`` which refers to the last menu item;"
msgstr ""

#: ../Doc/library/tkinter.rst:770
msgid ""
"An integer preceded by ``@``, as in ``@6``, where the integer is interpreted "
"as a y pixel coordinate in the menu's coordinate system;"
msgstr ""

#: ../Doc/library/tkinter.rst:773
msgid ""
"the string ``\"none\"``, which indicates no menu entry at all, most often "
"used with menu.activate() to deactivate all entries, and finally,"
msgstr ""

#: ../Doc/library/tkinter.rst:776
msgid ""
"a text string that is pattern matched against the label of the menu entry, "
"as scanned from the top of the menu to the bottom.  Note that this index "
"type is considered after all the others, which means that matches for menu "
"items labelled ``last``, ``active``, or ``none`` may be interpreted as the "
"above literals, instead."
msgstr ""

#: ../Doc/library/tkinter.rst:784
msgid "Images"
msgstr ""

#: ../Doc/library/tkinter.rst:786
msgid ""
"Bitmap/Pixelmap images can be created through the subclasses of :class:"
"`tkinter.Image`:"
msgstr ""

#: ../Doc/library/tkinter.rst:789
msgid ":class:`BitmapImage` can be used for X11 bitmap data."
msgstr ""

#: ../Doc/library/tkinter.rst:791
msgid ":class:`PhotoImage` can be used for GIF and PPM/PGM color bitmaps."
msgstr ""

#: ../Doc/library/tkinter.rst:793
msgid ""
"Either type of image is created through either the ``file`` or the ``data`` "
"option (other options are available as well)."
msgstr ""

#: ../Doc/library/tkinter.rst:796
msgid ""
"The image object can then be used wherever an ``image`` option is supported "
"by some widget (e.g. labels, buttons, menus). In these cases, Tk will not "
"keep a reference to the image. When the last Python reference to the image "
"object is deleted, the image data is deleted as well, and Tk will display an "
"empty box wherever the image was used."
msgstr ""

#: ../Doc/library/tkinter.rst:806
msgid "File Handlers"
msgstr ""

#: ../Doc/library/tkinter.rst:808
msgid ""
"Tk allows you to register and unregister a callback function which will be "
"called from the Tk mainloop when I/O is possible on a file descriptor. Only "
"one handler may be registered per file descriptor. Example code::"
msgstr ""

#: ../Doc/library/tkinter.rst:819
msgid "This feature is not available on Windows."
msgstr ""

#: ../Doc/library/tkinter.rst:821
msgid ""
"Since you don't know how many bytes are available for reading, you may not "
"want to use the :class:`~io.BufferedIOBase` or :class:`~io.TextIOBase` :meth:"
"`~io.BufferedIOBase.read` or :meth:`~io.IOBase.readline` methods, since "
"these will insist on reading a predefined number of bytes. For sockets, the :"
"meth:`~socket.socket.recv` or :meth:`~socket.socket.recvfrom` methods will "
"work fine; for other files, use raw reads or ``os.read(file.fileno(), "
"maxbytecount)``."
msgstr ""

#: ../Doc/library/tkinter.rst:832
msgid ""
"Registers the file handler callback function *func*. The *file* argument may "
"either be an object with a :meth:`~io.IOBase.fileno` method (such as a file "
"or socket object), or an integer file descriptor. The *mask* argument is an "
"ORed combination of any of the three constants below. The callback is called "
"as follows::"
msgstr ""

#: ../Doc/library/tkinter.rst:843
msgid "Unregisters a file handler."
msgstr ""

#: ../Doc/library/tkinter.rst:850
msgid "Constants used in the *mask* arguments."
msgstr ""
