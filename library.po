# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2010, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-09-16 12:13\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.7.0\n"

#: ../Doc/library/2to3.rst:4
msgid "2to3 - Automated Python 2 to 3 code translation"
msgstr "2to3 - Automatise la traduction du code de Python 2 vers Python 3"

#: ../Doc/library/2to3.rst:8
msgid ""
"2to3 is a Python program that reads Python 2.x source code and applies a "
"series of *fixers* to transform it into valid Python 3.x code.  The standard "
"library contains a rich set of fixers that will handle almost all code.  "
"2to3 supporting library :mod:`lib2to3` is, however, a flexible and generic "
"library, so it is possible to write your own fixers for 2to3.  :mod:"
"`lib2to3` could also be adapted to custom applications in which Python code "
"needs to be edited automatically."
msgstr ""

#: ../Doc/library/2to3.rst:20
msgid "Using 2to3"
msgstr "Utilisation de 2to3"

#: ../Doc/library/2to3.rst:22
msgid ""
"2to3 will usually be installed with the Python interpreter as a script.  It "
"is also located in the :file:`Tools/scripts` directory of the Python root."
msgstr ""

#: ../Doc/library/2to3.rst:25
msgid ""
"2to3's basic arguments are a list of files or directories to transform.  The "
"directories are to recursively traversed for Python sources."
msgstr ""

#: ../Doc/library/2to3.rst:28
msgid "Here is a sample Python 2.x source file, :file:`example.py`::"
msgstr "Voici un exemple de fichier source Python 2.x, :file:`example.py`::"

#: ../Doc/library/2to3.rst:36
msgid "It can be converted to Python 3.x code via 2to3 on the command line::"
msgstr "Il peut être converti en Python 3.x via la commande 2to3::"

#: ../Doc/library/2to3.rst:40
msgid ""
"A diff against the original source file is printed.  2to3 can also write the "
"needed modifications right back to the source file.  (A backup of the "
"original file is made unless :option:`-n` is also given.)  Writing the "
"changes back is enabled with the :option:`-w` flag::"
msgstr ""

#: ../Doc/library/2to3.rst:47
#, fuzzy
msgid "After transformation, :file:`example.py` looks like this::"
msgstr "Après transformation,: file:`exemple.py` ressemble à ceci::"

#: ../Doc/library/2to3.rst:55
#, fuzzy
msgid ""
"Comments and exact indentation are preserved throughout the translation "
"process."
msgstr ""
"Les commentaires et l'indentation exacte sont préservés tout au long du "
"processus de traduction."

#: ../Doc/library/2to3.rst:57
msgid ""
"By default, 2to3 runs a set of :ref:`predefined fixers <2to3-fixers>`.  The :"
"option:`-l` flag lists all available fixers.  An explicit set of fixers to "
"run can be given with :option:`-f`.  Likewise the :option:`-x` explicitly "
"disables a fixer.  The following example runs only the ``imports`` and "
"``has_key`` fixers::"
msgstr ""

#: ../Doc/library/2to3.rst:64
msgid "This command runs every fixer except the ``apply`` fixer::"
msgstr ""

#: ../Doc/library/2to3.rst:68
msgid ""
"Some fixers are *explicit*, meaning they aren't run by default and must be "
"listed on the command line to be run.  Here, in addition to the default "
"fixers, the ``idioms`` fixer is run::"
msgstr ""

#: ../Doc/library/2to3.rst:74
msgid "Notice how passing ``all`` enables all default fixers."
msgstr ""

#: ../Doc/library/2to3.rst:76
msgid ""
"Sometimes 2to3 will find a place in your source code that needs to be "
"changed, but 2to3 cannot fix automatically.  In this case, 2to3 will print a "
"warning beneath the diff for a file.  You should address the warning in "
"order to have compliant 3.x code."
msgstr ""

#: ../Doc/library/2to3.rst:81
msgid ""
"2to3 can also refactor doctests.  To enable this mode, use the :option:`-d` "
"flag.  Note that *only* doctests will be refactored.  This also doesn't "
"require the module to be valid Python.  For example, doctest like examples "
"in a reST document could also be refactored with this option."
msgstr ""

#: ../Doc/library/2to3.rst:86
msgid ""
"The :option:`-v` option enables output of more information on the "
"translation process."
msgstr ""

# 84baab1877e84356b9ebc2bc425ee499
#: ../Doc/library/2to3.rst:89
msgid ""
"Since some print statements can be parsed as function calls or statements, "
"2to3 cannot always read files containing the print function.  When 2to3 "
"detects the presence of the ``from __future__ import print_function`` "
"compiler directive, it modifies its internal grammar to interpret :func:"
"`print` as a function.  This change can also be enabled manually with the :"
"option:`-p` flag.  Use :option:`-p` to run fixers on code that already has "
"had its print statements converted."
msgstr ""

# 60de360b68a6440fbcf8f208652abb14
#: ../Doc/library/2to3.rst:97
msgid ""
"The :option:`-o` or :option:`--output-dir` option allows specification of an "
"alternate directory for processed output files to be written to.  The :"
"option:`-n` flag is required when using this as backup files do not make "
"sense when not overwriting the input files."
msgstr ""

# 5167481358474551a71d66c6962fbf25
#: ../Doc/library/2to3.rst:105
msgid ""
"The :option:`-W` or :option:`--write-unchanged-files` flag tells 2to3 to "
"always write output files even if no changes were required to the file.  "
"This is most useful with :option:`-o` so that an entire Python source tree "
"is copied with translation from one directory to another. This option "
"implies the :option:`-w` flag as it would not make sense otherwise."
msgstr ""

# 94dda448618645edaefcdc182c738a6d
#: ../Doc/library/2to3.rst:114
msgid ""
"The :option:`--add-suffix` option specifies a string to append to all output "
"filenames.  The :option:`-n` flag is required when specifying this as "
"backups are not necessary when writing to different filenames.  Example::"
msgstr ""

# 45f06e0ae24e4d78945c3a1de86d496a
#: ../Doc/library/2to3.rst:120
msgid "Will cause a converted file named ``example.py3`` to be written."
msgstr ""

# 5bfc9cae09d04a38af4533b673e227d2
#: ../Doc/library/2to3.rst:125
msgid "To translate an entire project from one directory tree to another use::"
msgstr ""

#: ../Doc/library/2to3.rst:133
msgid "Fixers"
msgstr ""

#: ../Doc/library/2to3.rst:135
msgid ""
"Each step of transforming code is encapsulated in a fixer.  The command "
"``2to3 -l`` lists them.  As :ref:`documented above <2to3-using>`, each can "
"be turned on and off individually.  They are described here in more detail."
msgstr ""

#: ../Doc/library/2to3.rst:142
msgid ""
"Removes usage of :func:`apply`.  For example ``apply(function, *args, "
"**kwargs)`` is converted to ``function(*args, **kwargs)``."
msgstr ""

#: ../Doc/library/2to3.rst:147
msgid "Converts :class:`basestring` to :class:`str`."
msgstr ""

#: ../Doc/library/2to3.rst:151
msgid ""
"Converts :class:`buffer` to :class:`memoryview`.  This fixer is optional "
"because the :class:`memoryview` API is similar but not exactly the same as "
"that of :class:`buffer`."
msgstr ""

# beb85b9ae77c4d04951332c6c277b282
#: ../Doc/library/2to3.rst:157
msgid ""
"Converts ``callable(x)`` to ``isinstance(x, collections.Callable)``, adding "
"an import to :mod:`collections` if needed. Note ``callable(x)`` has returned "
"in Python 3.2, so if you do not intend to support Python 3.1, you can "
"disable this fixer."
msgstr ""

#: ../Doc/library/2to3.rst:164
msgid ""
"Fixes dictionary iteration methods.  :meth:`dict.iteritems` is converted to :"
"meth:`dict.items`, :meth:`dict.iterkeys` to :meth:`dict.keys`, and :meth:"
"`dict.itervalues` to :meth:`dict.values`.  Similarly, :meth:`dict."
"viewitems`, :meth:`dict.viewkeys` and :meth:`dict.viewvalues` are converted "
"respectively to :meth:`dict.items`, :meth:`dict.keys` and :meth:`dict."
"values`.  It also wraps existing usages of :meth:`dict.items`, :meth:`dict."
"keys`, and :meth:`dict.values` in a call to :class:`list`."
msgstr ""

#: ../Doc/library/2to3.rst:174
msgid "Converts ``except X, T`` to ``except X as T``."
msgstr ""

#: ../Doc/library/2to3.rst:178
msgid "Converts the :keyword:`exec` statement to the :func:`exec` function."
msgstr ""

#: ../Doc/library/2to3.rst:182
msgid ""
"Removes usage of :func:`execfile`.  The argument to :func:`execfile` is "
"wrapped in calls to :func:`open`, :func:`compile`, and :func:`exec`."
msgstr ""

#: ../Doc/library/2to3.rst:187
msgid ""
"Changes assignment of :attr:`sys.exitfunc` to use of the :mod:`atexit` "
"module."
msgstr ""

#: ../Doc/library/2to3.rst:192
msgid "Wraps :func:`filter` usage in a :class:`list` call."
msgstr ""

#: ../Doc/library/2to3.rst:196
msgid ""
"Fixes function attributes that have been renamed.  For example, "
"``my_function.func_closure`` is converted to ``my_function.__closure__``."
msgstr ""

#: ../Doc/library/2to3.rst:201
msgid "Removes ``from __future__ import new_feature`` statements."
msgstr ""

#: ../Doc/library/2to3.rst:205
msgid "Renames :func:`os.getcwdu` to :func:`os.getcwd`."
msgstr ""

#: ../Doc/library/2to3.rst:209
msgid "Changes ``dict.has_key(key)`` to ``key in dict``."
msgstr ""

#: ../Doc/library/2to3.rst:213
msgid ""
"This optional fixer performs several transformations that make Python code "
"more idiomatic.  Type comparisons like ``type(x) is SomeClass`` and ``type"
"(x) == SomeClass`` are converted to ``isinstance(x, SomeClass)``. ``while "
"1`` becomes ``while True``.  This fixer also tries to make use of :func:"
"`sorted` in appropriate places.  For example, this block ::"
msgstr ""

#: ../Doc/library/2to3.rst:222
msgid "is changed to ::"
msgstr ""

#: ../Doc/library/2to3.rst:228
msgid "Detects sibling imports and converts them to relative imports."
msgstr ""

#: ../Doc/library/2to3.rst:232
msgid "Handles module renames in the standard library."
msgstr ""

#: ../Doc/library/2to3.rst:236
msgid ""
"Handles other modules renames in the standard library.  It is separate from "
"the :2to3fixer:`imports` fixer only because of technical limitations."
msgstr ""

#: ../Doc/library/2to3.rst:241
msgid "Converts ``input(prompt)`` to ``eval(input(prompt))``"
msgstr ""

#: ../Doc/library/2to3.rst:245
msgid "Converts :func:`intern` to :func:`sys.intern`."
msgstr ""

#: ../Doc/library/2to3.rst:249
msgid ""
"Fixes duplicate types in the second argument of :func:`isinstance`.  For "
"example, ``isinstance(x, (int, int))`` is converted to ``isinstance(x, (int))"
"``."
msgstr ""

#: ../Doc/library/2to3.rst:255
msgid ""
"Removes imports of :func:`itertools.ifilter`, :func:`itertools.izip`, and :"
"func:`itertools.imap`.  Imports of :func:`itertools.ifilterfalse` are also "
"changed to :func:`itertools.filterfalse`."
msgstr ""

#: ../Doc/library/2to3.rst:261
msgid ""
"Changes usage of :func:`itertools.ifilter`, :func:`itertools.izip`, and :"
"func:`itertools.imap` to their built-in equivalents. :func:`itertools."
"ifilterfalse` is changed to :func:`itertools.filterfalse`."
msgstr ""

# 32a313b199bd4628b42e8c674a50fe88
#: ../Doc/library/2to3.rst:267
msgid ""
"Strips the ``L`` suffix on long literals and renames :class:`long` to :class:"
"`int`."
msgstr ""

#: ../Doc/library/2to3.rst:272
msgid ""
"Wraps :func:`map` in a :class:`list` call.  It also changes ``map(None, x)`` "
"to ``list(x)``.  Using ``from future_builtins import map`` disables this "
"fixer."
msgstr ""

#: ../Doc/library/2to3.rst:278
msgid ""
"Converts the old metaclass syntax (``__metaclass__ = Meta`` in the class "
"body) to the new (``class X(metaclass=Meta)``)."
msgstr ""

#: ../Doc/library/2to3.rst:283
msgid ""
"Fixes old method attribute names.  For example, ``meth.im_func`` is "
"converted to ``meth.__func__``."
msgstr ""

#: ../Doc/library/2to3.rst:288
msgid "Converts the old not-equal syntax, ``<>``, to ``!=``."
msgstr ""

#: ../Doc/library/2to3.rst:292
msgid ""
"Converts the use of iterator's :meth:`~iterator.next` methods to the :func:"
"`next` function.  It also renames :meth:`next` methods to :meth:`~object."
"__next__`."
msgstr ""

#: ../Doc/library/2to3.rst:298
msgid "Renames :meth:`~object.__nonzero__` to :meth:`~object.__bool__`."
msgstr ""

#: ../Doc/library/2to3.rst:302
msgid "Converts octal literals into the new syntax."
msgstr ""

#: ../Doc/library/2to3.rst:306
msgid ""
"Add extra parenthesis where they are required in list comprehensions.  For "
"example, ``[x for x in 1, 2]`` becomes ``[x for x in (1, 2)]``."
msgstr ""

#: ../Doc/library/2to3.rst:311
msgid "Converts the :keyword:`print` statement to the :func:`print` function."
msgstr ""

# 8db4088b12af48c0a6c881be55d1674a
#: ../Doc/library/2to3.rst:315
msgid ""
"Converts ``raise E, V`` to ``raise E(V)``, and ``raise E, V, T`` to ``raise E"
"(V).with_traceback(T)``.  If ``E`` is a tuple, the translation will be "
"incorrect because substituting tuples for exceptions has been removed in "
"Python 3."
msgstr ""

#: ../Doc/library/2to3.rst:321
msgid "Converts :func:`raw_input` to :func:`input`."
msgstr ""

#: ../Doc/library/2to3.rst:325
msgid "Handles the move of :func:`reduce` to :func:`functools.reduce`."
msgstr ""

#: ../Doc/library/2to3.rst:329
msgid "Changes :data:`sys.maxint` to :data:`sys.maxsize`."
msgstr ""

#: ../Doc/library/2to3.rst:333
msgid "Replaces backtick repr with the :func:`repr` function."
msgstr ""

#: ../Doc/library/2to3.rst:337
msgid ""
"Replaces use of the :class:`set` constructor with set literals.  This fixer "
"is optional."
msgstr ""

#: ../Doc/library/2to3.rst:342
msgid "Renames :exc:`StandardError` to :exc:`Exception`."
msgstr ""

#: ../Doc/library/2to3.rst:346
msgid ""
"Changes the deprecated :data:`sys.exc_value`, :data:`sys.exc_type`, :data:"
"`sys.exc_traceback` to use :func:`sys.exc_info`."
msgstr ""

#: ../Doc/library/2to3.rst:351
msgid "Fixes the API change in generator's :meth:`throw` method."
msgstr ""

#: ../Doc/library/2to3.rst:355
msgid ""
"Removes implicit tuple parameter unpacking.  This fixer inserts temporary "
"variables."
msgstr ""

#: ../Doc/library/2to3.rst:360
msgid ""
"Fixes code broken from the removal of some members in the :mod:`types` "
"module."
msgstr ""

#: ../Doc/library/2to3.rst:365
msgid "Renames :class:`unicode` to :class:`str`."
msgstr ""

#: ../Doc/library/2to3.rst:369
msgid ""
"Handles the rename of :mod:`urllib` and :mod:`urllib2` to the :mod:`urllib` "
"package."
msgstr ""

#: ../Doc/library/2to3.rst:374
msgid ""
"Removes excess whitespace from comma separated items.  This fixer is "
"optional."
msgstr ""

#: ../Doc/library/2to3.rst:379
msgid ""
"Renames :func:`xrange` to :func:`range` and wraps existing :func:`range` "
"calls with :class:`list`."
msgstr ""

#: ../Doc/library/2to3.rst:384
msgid "Changes ``for x in file.xreadlines()`` to ``for x in file``."
msgstr ""

#: ../Doc/library/2to3.rst:388
msgid ""
"Wraps :func:`zip` usage in a :class:`list` call.  This is disabled when "
"``from future_builtins import zip`` appears."
msgstr ""

#: ../Doc/library/2to3.rst:393
msgid ":mod:`lib2to3` - 2to3's library"
msgstr ""

#: ../Doc/library/2to3.rst:404
msgid ""
"The :mod:`lib2to3` API should be considered unstable and may change "
"drastically in the future."
msgstr ""

# 711d74b5a5a24b0b91f7ae34f6d19193
#: ../Doc/library/__builtin__.rst:3
msgid ":mod:`__builtin__` --- Built-in objects"
msgstr ""

# 01ae353748e041f8af335b98d4ca34eb
#: ../Doc/library/__builtin__.rst:9
msgid ""
"This module provides direct access to all 'built-in' identifiers of Python; "
"for example, ``__builtin__.open`` is the full name for the built-in "
"function :func:`open`.  See :ref:`built-in-funcs` and :ref:`built-in-consts` "
"for documentation."
msgstr ""

#: ../Doc/library/__builtin__.rst:15
msgid ""
"This module is not normally accessed explicitly by most applications, but "
"can be useful in modules that provide objects with the same name as a built-"
"in value, but in which the built-in of that name is also needed.  For "
"example, in a module that wants to implement an :func:`open` function that "
"wraps the built-in :func:`open`, this module can be used directly::"
msgstr ""

# f0dfa7295eb145928636ab7eb7726b5f
#: ../Doc/library/__builtin__.rst:40
msgid ""
"Most modules have the name ``__builtins__`` (note the ``'s'``) made "
"available as part of their globals.  The value of ``__builtins__`` is "
"normally either this module or the value of this modules's :attr:`__dict__` "
"attribute.  Since this is an implementation detail, it may not be used by "
"alternate implementations of Python."
msgstr ""

#: ../Doc/library/__future__.rst:2
msgid ":mod:`__future__` --- Future statement definitions"
msgstr ""

# f3fbec33ccdc4e83ba272ba7fcf02b32
#: ../Doc/library/__future__.rst:7
msgid "**Source code:** :source:`Lib/__future__.py`"
msgstr ""

#: ../Doc/library/__future__.rst:11
msgid ":mod:`__future__` is a real module, and serves three purposes:"
msgstr ""

#: ../Doc/library/__future__.rst:13
msgid ""
"To avoid confusing existing tools that analyze import statements and expect "
"to find the modules they're importing."
msgstr ""

#: ../Doc/library/__future__.rst:16
msgid ""
"To ensure that :ref:`future statements <future>` run under releases prior to "
"2.1 at least yield runtime exceptions (the import of :mod:`__future__` will "
"fail, because there was no module of that name prior to 2.1)."
msgstr ""

#: ../Doc/library/__future__.rst:20
msgid ""
"To document when incompatible changes were introduced, and when they will be "
"--- or were --- made mandatory.  This is a form of executable documentation, "
"and can be inspected programmatically via importing :mod:`__future__` and "
"examining its contents."
msgstr ""

#: ../Doc/library/__future__.rst:25
msgid "Each statement in :file:`__future__.py` is of the form::"
msgstr ""

#: ../Doc/library/__future__.rst:31
msgid ""
"where, normally, *OptionalRelease* is less than *MandatoryRelease*, and both "
"are 5-tuples of the same form as ``sys.version_info``::"
msgstr ""

#: ../Doc/library/__future__.rst:41
msgid ""
"*OptionalRelease* records the first release in which the feature was "
"accepted."
msgstr ""

#: ../Doc/library/__future__.rst:43
msgid ""
"In the case of a *MandatoryRelease* that has not yet occurred, "
"*MandatoryRelease* predicts the release in which the feature will become "
"part of the language."
msgstr ""

#: ../Doc/library/__future__.rst:47
msgid ""
"Else *MandatoryRelease* records when the feature became part of the "
"language; in releases at or after that, modules no longer need a future "
"statement to use the feature in question, but may continue to use such "
"imports."
msgstr ""

#: ../Doc/library/__future__.rst:51
msgid ""
"*MandatoryRelease* may also be ``None``, meaning that a planned feature got "
"dropped."
msgstr ""

#: ../Doc/library/__future__.rst:54
msgid ""
"Instances of class :class:`_Feature` have two corresponding methods, :meth:"
"`getOptionalRelease` and :meth:`getMandatoryRelease`."
msgstr ""

#: ../Doc/library/__future__.rst:57
msgid ""
"*CompilerFlag* is the (bitfield) flag that should be passed in the fourth "
"argument to the built-in function :func:`compile` to enable the feature in "
"dynamically compiled code.  This flag is stored in the :attr:`compiler_flag` "
"attribute on :class:`_Feature` instances."
msgstr ""

#: ../Doc/library/__future__.rst:62
msgid ""
"No feature description will ever be deleted from :mod:`__future__`. Since "
"its introduction in Python 2.1 the following features have found their way "
"into the language using this mechanism:"
msgstr ""

#: ../Doc/library/__future__.rst:67
msgid "feature"
msgstr ""

#: ../Doc/library/__future__.rst:67
msgid "optional in"
msgstr ""

#: ../Doc/library/__future__.rst:67
msgid "mandatory in"
msgstr ""

#: ../Doc/library/__future__.rst:67
msgid "effect"
msgstr ""

#: ../Doc/library/__future__.rst:69
msgid "nested_scopes"
msgstr ""

#: ../Doc/library/__future__.rst:69
msgid "2.1.0b1"
msgstr ""

#: ../Doc/library/__future__.rst:69
msgid "2.2"
msgstr ""

#: ../Doc/library/__future__.rst:69
msgid ":pep:`227`: *Statically Nested Scopes*"
msgstr ""

#: ../Doc/library/__future__.rst:72
msgid "generators"
msgstr ""

#: ../Doc/library/__future__.rst:72
msgid "2.2.0a1"
msgstr ""

#: ../Doc/library/__future__.rst:72
msgid "2.3"
msgstr ""

#: ../Doc/library/__future__.rst:72
msgid ":pep:`255`: *Simple Generators*"
msgstr ""

#: ../Doc/library/__future__.rst:75
msgid "division"
msgstr ""

#: ../Doc/library/__future__.rst:75
msgid "2.2.0a2"
msgstr ""

#: ../Doc/library/__future__.rst:75 ../Doc/library/__future__.rst:78
#: ../Doc/library/__future__.rst:84 ../Doc/library/__future__.rst:87
msgid "3.0"
msgstr ""

#: ../Doc/library/__future__.rst:75
msgid ":pep:`238`: *Changing the Division Operator*"
msgstr ""

#: ../Doc/library/__future__.rst:78
msgid "absolute_import"
msgstr ""

#: ../Doc/library/__future__.rst:78 ../Doc/library/__future__.rst:81
msgid "2.5.0a1"
msgstr ""

#: ../Doc/library/__future__.rst:78
msgid ":pep:`328`: *Imports: Multi-Line and Absolute/Relative*"
msgstr ""

#: ../Doc/library/__future__.rst:81
msgid "with_statement"
msgstr ""

#: ../Doc/library/__future__.rst:81
msgid "2.6"
msgstr ""

#: ../Doc/library/__future__.rst:81
msgid ":pep:`343`: *The \"with\" Statement*"
msgstr ""

#: ../Doc/library/__future__.rst:84
msgid "print_function"
msgstr ""

#: ../Doc/library/__future__.rst:84 ../Doc/library/__future__.rst:87
msgid "2.6.0a2"
msgstr ""

#: ../Doc/library/__future__.rst:84
msgid ":pep:`3105`: *Make print a function*"
msgstr ""

#: ../Doc/library/__future__.rst:87
msgid "unicode_literals"
msgstr ""

#: ../Doc/library/__future__.rst:87
msgid ":pep:`3112`: *Bytes literals in Python 3000*"
msgstr ""

#: ../Doc/library/__future__.rst:94
msgid "How the compiler treats future imports."
msgstr ""

#: ../Doc/library/__main__.rst:3
msgid ":mod:`__main__` --- Top-level script environment"
msgstr ""

#: ../Doc/library/__main__.rst:9
msgid ""
"This module represents the (otherwise anonymous) scope in which the "
"interpreter's main program executes --- commands read either from standard "
"input, from a script file, or from an interactive prompt.  It is this "
"environment in which the idiomatic \"conditional script\" stanza causes a "
"script to run::"
msgstr ""

# aca692d0fa61422fba7544c261337fd2
#: ../Doc/library/_winreg.rst:2
msgid ":mod:`_winreg` -- Windows registry access"
msgstr ""

# 17864708377f4a658967d5db7c550226
#: ../Doc/library/_winreg.rst:10
msgid ""
"The :mod:`_winreg` module has been renamed to :mod:`winreg` in Python 3. "
"The :term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

#: ../Doc/library/_winreg.rst:17
msgid ""
"These functions expose the Windows registry API to Python.  Instead of using "
"an integer as the registry handle, a :ref:`handle object <handle-object>` is "
"used to ensure that the handles are closed correctly, even if the programmer "
"neglects to explicitly close them."
msgstr ""

#: ../Doc/library/_winreg.rst:22
msgid "This module offers the following functions:"
msgstr ""

#: ../Doc/library/_winreg.rst:27
msgid ""
"Closes a previously opened registry key.  The *hkey* argument specifies a "
"previously opened key."
msgstr ""

#: ../Doc/library/_winreg.rst:31
msgid ""
"If *hkey* is not closed using this method (or via :meth:`hkey.Close() "
"<PyHKEY.Close>`), it is closed when the *hkey* object is destroyed by Python."
msgstr ""

#: ../Doc/library/_winreg.rst:37
msgid ""
"Establishes a connection to a predefined registry handle on another "
"computer, and returns a :ref:`handle object <handle-object>`."
msgstr ""

#: ../Doc/library/_winreg.rst:40
msgid ""
"*computer_name* is the name of the remote computer, of the form ``r\"\\"
"\\computername\"``.  If ``None``, the local computer is used."
msgstr ""

#: ../Doc/library/_winreg.rst:43
msgid "*key* is the predefined handle to connect to."
msgstr ""

#: ../Doc/library/_winreg.rst:45 ../Doc/library/_winreg.rst:64
#: ../Doc/library/_winreg.rst:90
msgid ""
"The return value is the handle of the opened key. If the function fails, a :"
"exc:`WindowsError` exception is raised."
msgstr ""

#: ../Doc/library/_winreg.rst:51 ../Doc/library/_winreg.rst:70
msgid ""
"Creates or opens the specified key, returning a :ref:`handle object <handle-"
"object>`."
msgstr ""

#: ../Doc/library/_winreg.rst:54 ../Doc/library/_winreg.rst:73
#: ../Doc/library/_winreg.rst:150 ../Doc/library/_winreg.rst:215
#: ../Doc/library/_winreg.rst:285 ../Doc/library/_winreg.rst:309
#: ../Doc/library/_winreg.rst:327 ../Doc/library/_winreg.rst:349
#: ../Doc/library/_winreg.rst:372 ../Doc/library/_winreg.rst:398
#: ../Doc/library/_winreg.rst:427 ../Doc/library/_winreg.rst:442
#: ../Doc/library/_winreg.rst:455
msgid ""
"*key* is an already open key, or one of the predefined :ref:`HKEY_* "
"constants <hkey-constants>`."
msgstr ""

#: ../Doc/library/_winreg.rst:57 ../Doc/library/_winreg.rst:76
msgid "*sub_key* is a string that names the key this method opens or creates."
msgstr ""

#: ../Doc/library/_winreg.rst:59 ../Doc/library/_winreg.rst:85
msgid ""
"If *key* is one of the predefined keys, *sub_key* may be ``None``. In that "
"case, the handle returned is the same key handle passed in to the function."
msgstr ""

#: ../Doc/library/_winreg.rst:62 ../Doc/library/_winreg.rst:88
msgid "If the key already exists, this function opens the existing key."
msgstr ""

#: ../Doc/library/_winreg.rst:78 ../Doc/library/_winreg.rst:129
msgid "*res* is a reserved integer, and must be zero. The default is zero."
msgstr ""

#: ../Doc/library/_winreg.rst:80
msgid ""
"*sam* is an integer that specifies an access mask that describes the desired "
"security access for the key.  Default is :const:`KEY_ALL_ACCESS`.  See :ref:"
"`Access Rights <access-rights>` for other allowed values."
msgstr ""

#: ../Doc/library/_winreg.rst:98 ../Doc/library/_winreg.rst:114
msgid "Deletes the specified key."
msgstr ""

# 8fd46188b3024882a957c1727b626ffc
# 12eacd1a7c674d1b8ba573982b319036
# 42b6c716a10f41caa5bfd440b78f338c
# 7b42777358d248ec970f37502c696e9f
# 894dac45e81e4c76be8302f29a096462
#: ../Doc/library/_winreg.rst:100 ../Doc/library/_winreg.rst:122
#: ../Doc/library/_winreg.rst:160 ../Doc/library/_winreg.rst:174
#: ../Doc/library/_winreg.rst:259
msgid ""
"*key* is an already open key, or any one of the predefined :ref:`HKEY_* "
"constants <hkey-constants>`."
msgstr ""

#: ../Doc/library/_winreg.rst:103
msgid ""
"*sub_key* is a string that must be a subkey of the key identified by the "
"*key* parameter.  This value must not be ``None``, and the key may not have "
"subkeys."
msgstr ""

#: ../Doc/library/_winreg.rst:106 ../Doc/library/_winreg.rst:136
msgid "*This method can not delete keys with subkeys.*"
msgstr ""

#: ../Doc/library/_winreg.rst:108 ../Doc/library/_winreg.rst:138
msgid ""
"If the method succeeds, the entire key, including all of its values, is "
"removed. If the method fails, a :exc:`WindowsError` exception is raised."
msgstr ""

#: ../Doc/library/_winreg.rst:117
msgid ""
"The :func:`DeleteKeyEx` function is implemented with the RegDeleteKeyEx "
"Windows API function, which is specific to 64-bit versions of Windows. See "
"the `RegDeleteKeyEx documentation <http://msdn.microsoft.com/en-us/library/"
"ms724847%28VS.85%29.aspx>`__."
msgstr ""

#: ../Doc/library/_winreg.rst:125
msgid ""
"*sub_key* is a string that must be a subkey of the key identified by the "
"*key* parameter. This value must not be ``None``, and the key may not have "
"subkeys."
msgstr ""

# e19f91d6ddb24618aafa30e7199a5fb1
#: ../Doc/library/_winreg.rst:131
msgid ""
"*sam* is an integer that specifies an access mask that describes the desired "
"security access for the key.  Default is :const:`KEY_WOW64_64KEY`.  See :ref:"
"`Access Rights <access-rights>` for other allowed values."
msgstr ""

#: ../Doc/library/_winreg.rst:141
msgid "On unsupported Windows versions, :exc:`NotImplementedError` is raised."
msgstr ""

#: ../Doc/library/_winreg.rst:148
msgid "Removes a named value from a registry key."
msgstr ""

#: ../Doc/library/_winreg.rst:153
msgid "*value* is a string that identifies the value to remove."
msgstr ""

#: ../Doc/library/_winreg.rst:158
msgid "Enumerates subkeys of an open registry key, returning a string."
msgstr ""

#: ../Doc/library/_winreg.rst:163
msgid "*index* is an integer that identifies the index of the key to retrieve."
msgstr ""

#: ../Doc/library/_winreg.rst:165
msgid ""
"The function retrieves the name of one subkey each time it is called.  It is "
"typically called repeatedly until a :exc:`WindowsError` exception is raised, "
"indicating, no more values are available."
msgstr ""

#: ../Doc/library/_winreg.rst:172
msgid "Enumerates values of an open registry key, returning a tuple."
msgstr ""

#: ../Doc/library/_winreg.rst:177
msgid ""
"*index* is an integer that identifies the index of the value to retrieve."
msgstr ""

#: ../Doc/library/_winreg.rst:179
msgid ""
"The function retrieves the name of one subkey each time it is called. It is "
"typically called repeatedly, until a :exc:`WindowsError` exception is "
"raised, indicating no more values."
msgstr ""

#: ../Doc/library/_winreg.rst:183 ../Doc/library/_winreg.rst:288
msgid "The result is a tuple of 3 items:"
msgstr ""

#: ../Doc/library/_winreg.rst:186 ../Doc/library/_winreg.rst:291
#: ../Doc/library/_winreg.rst:335 ../Doc/library/grp.rst:18
#: ../Doc/library/pwd.rst:18 ../Doc/library/resource.rst:168
#: ../Doc/library/spwd.rst:23 ../Doc/library/time.rst:401
#: ../Doc/library/tkinter.rst:441 ../Doc/library/urlparse.rst:93
#: ../Doc/library/urlparse.rst:197 ../Doc/library/zipfile.rst:390
msgid "Index"
msgstr ""

#: ../Doc/library/_winreg.rst:186 ../Doc/library/_winreg.rst:291
#: ../Doc/library/_winreg.rst:335 ../Doc/library/anydbm.rst:37
#: ../Doc/library/carbon.rst:501 ../Doc/library/codecs.rst:324
#: ../Doc/library/curses.rst:1240 ../Doc/library/curses.rst:1492
#: ../Doc/library/curses.ascii.rst:18 ../Doc/library/datetime.rst:1607
#: ../Doc/library/dbhash.rst:35 ../Doc/library/dbm.rst:48
#: ../Doc/library/difflib.rst:61 ../Doc/library/difflib.rst:467
#: ../Doc/library/fl.rst:352 ../Doc/library/fl.rst:430
#: ../Doc/library/fnmatch.rst:21 ../Doc/library/gdbm.rst:42
#: ../Doc/library/gdbm.rst:61 ../Doc/library/grp.rst:18
#: ../Doc/library/io.rst:87 ../Doc/library/locale.rst:63
#: ../Doc/library/mailbox.rst:796 ../Doc/library/mailbox.rst:963
#: ../Doc/library/mailbox.rst:1333 ../Doc/library/posixfile.rst:110
#: ../Doc/library/posixfile.rst:123 ../Doc/library/posixfile.rst:144
#: ../Doc/library/posixfile.rst:158 ../Doc/library/profile.rst:379
#: ../Doc/library/pwd.rst:18 ../Doc/library/select.rst:123
#: ../Doc/library/select.rst:221 ../Doc/library/select.rst:322
#: ../Doc/library/select.rst:351 ../Doc/library/select.rst:382
#: ../Doc/library/select.rst:390 ../Doc/library/select.rst:410
#: ../Doc/library/select.rst:433 ../Doc/library/spwd.rst:23
#: ../Doc/library/stdtypes.rst:153 ../Doc/library/stdtypes.rst:1398
#: ../Doc/library/stdtypes.rst:1421 ../Doc/library/string.rst:342
#: ../Doc/library/string.rst:367 ../Doc/library/string.rst:409
#: ../Doc/library/string.rst:420 ../Doc/library/string.rst:452
#: ../Doc/library/sys.rst:528 ../Doc/library/sys.rst:573
#: ../Doc/library/time.rst:256 ../Doc/library/tkinter.rst:441
#: ../Doc/library/uuid.rst:69 ../Doc/library/xml.etree.elementtree.rst:308
#: ../Doc/library/xmlrpclib.rst:67
msgid "Meaning"
msgstr ""

#: ../Doc/library/_winreg.rst:188 ../Doc/library/_winreg.rst:293
#: ../Doc/library/_winreg.rst:337 ../Doc/library/locale.rst:130
#: ../Doc/library/resource.rst:170 ../Doc/library/zipfile.rst:392
msgid "``0``"
msgstr ""

#: ../Doc/library/_winreg.rst:188
msgid "A string that identifies the value name"
msgstr ""

#: ../Doc/library/_winreg.rst:190 ../Doc/library/_winreg.rst:296
#: ../Doc/library/_winreg.rst:339 ../Doc/library/locale.rst:133
#: ../Doc/library/resource.rst:172 ../Doc/library/zipfile.rst:394
msgid "``1``"
msgstr ""

#: ../Doc/library/_winreg.rst:190
msgid ""
"An object that holds the value data, and whose type depends on the "
"underlying registry type"
msgstr ""

#: ../Doc/library/_winreg.rst:194 ../Doc/library/_winreg.rst:299
#: ../Doc/library/locale.rst:136 ../Doc/library/resource.rst:174
#: ../Doc/library/zipfile.rst:396
msgid "``2``"
msgstr ""

#: ../Doc/library/_winreg.rst:194
msgid ""
"An integer that identifies the type of the value data (see table in docs "
"for :meth:`SetValueEx`)"
msgstr ""

# b110d8b5e3774912a3d2df96aee21231
#: ../Doc/library/_winreg.rst:202
msgid ""
"Expands environment variable placeholders ``%NAME%`` in unicode strings "
"like :const:`REG_EXPAND_SZ`::"
msgstr ""

#: ../Doc/library/_winreg.rst:213
msgid "Writes all the attributes of a key to the registry."
msgstr ""

#: ../Doc/library/_winreg.rst:218
msgid ""
"It is not necessary to call :func:`FlushKey` to change a key. Registry "
"changes are flushed to disk by the registry using its lazy flusher.  "
"Registry changes are also flushed to disk at system shutdown.  Unlike :func:"
"`CloseKey`, the :func:`FlushKey` method returns only when all the data has "
"been written to the registry. An application should only call :func:"
"`FlushKey` if it requires absolute certainty that registry changes are on "
"disk."
msgstr ""

#: ../Doc/library/_winreg.rst:227
msgid ""
"If you don't know whether a :func:`FlushKey` call is required, it probably "
"isn't."
msgstr ""

#: ../Doc/library/_winreg.rst:233
msgid ""
"Creates a subkey under the specified key and stores registration information "
"from a specified file into that subkey."
msgstr ""

#: ../Doc/library/_winreg.rst:236
msgid ""
"*key* is a handle returned by :func:`ConnectRegistry` or one of the "
"constants :const:`HKEY_USERS` or :const:`HKEY_LOCAL_MACHINE`."
msgstr ""

#: ../Doc/library/_winreg.rst:239
msgid "*sub_key* is a string that identifies the subkey to load."
msgstr ""

#: ../Doc/library/_winreg.rst:241
msgid ""
"*file_name* is the name of the file to load registry data from. This file "
"must have been created with the :func:`SaveKey` function. Under the file "
"allocation table (FAT) file system, the filename may not have an extension."
msgstr ""

#: ../Doc/library/_winreg.rst:245
msgid ""
"A call to :func:`LoadKey` fails if the calling process does not have the :"
"const:`SE_RESTORE_PRIVILEGE` privilege.  Note that privileges are different "
"from permissions -- see the `RegLoadKey documentation <http://msdn.microsoft."
"com/en-us/library/ms724889%28v=VS.85%29.aspx>`__ for more details."
msgstr ""

#: ../Doc/library/_winreg.rst:251
msgid ""
"If *key* is a handle returned by :func:`ConnectRegistry`, then the path "
"specified in *file_name* is relative to the remote computer."
msgstr ""

#: ../Doc/library/_winreg.rst:257
msgid ""
"Opens the specified key, returning a :ref:`handle object <handle-object>`."
msgstr ""

#: ../Doc/library/_winreg.rst:262
msgid "*sub_key* is a string that identifies the sub_key to open."
msgstr ""

#: ../Doc/library/_winreg.rst:264
msgid "*res* is a reserved integer, and must be zero.  The default is zero."
msgstr ""

#: ../Doc/library/_winreg.rst:266
msgid ""
"*sam* is an integer that specifies an access mask that describes the desired "
"security access for the key.  Default is :const:`KEY_READ`.  See :ref:"
"`Access Rights <access-rights>` for other allowed values."
msgstr ""

#: ../Doc/library/_winreg.rst:270
msgid "The result is a new handle to the specified key."
msgstr ""

#: ../Doc/library/_winreg.rst:272
msgid "If the function fails, :exc:`WindowsError` is raised."
msgstr ""

#: ../Doc/library/_winreg.rst:277
msgid ""
"The functionality of :func:`OpenKeyEx` is provided via :func:`OpenKey`, by "
"the use of default arguments."
msgstr ""

#: ../Doc/library/_winreg.rst:283
msgid "Returns information about a key, as a tuple."
msgstr ""

#: ../Doc/library/_winreg.rst:293
msgid "An integer giving the number of sub keys this key has."
msgstr ""

#: ../Doc/library/_winreg.rst:296
msgid "An integer giving the number of values this key has."
msgstr ""

# 7db3c269241e4026a98fda032755192a
#: ../Doc/library/_winreg.rst:299
msgid ""
"A long integer giving when the key was last modified (if available) as 100's "
"of nanoseconds since Jan 1, 1600."
msgstr ""

#: ../Doc/library/_winreg.rst:307
msgid "Retrieves the unnamed value for a key, as a string."
msgstr ""

#: ../Doc/library/_winreg.rst:312
msgid ""
"*sub_key* is a string that holds the name of the subkey with which the value "
"is associated.  If this parameter is ``None`` or empty, the function "
"retrieves the value set by the :func:`SetValue` method for the key "
"identified by *key*."
msgstr ""

#: ../Doc/library/_winreg.rst:316
msgid ""
"Values in the registry have name, type, and data components. This method "
"retrieves the data for a key's first value that has a NULL name. But the "
"underlying API call doesn't return the type, so always use :func:"
"`QueryValueEx` if possible."
msgstr ""

#: ../Doc/library/_winreg.rst:324
msgid ""
"Retrieves the type and data for a specified value name associated with an "
"open registry key."
msgstr ""

#: ../Doc/library/_winreg.rst:330
msgid "*value_name* is a string indicating the value to query."
msgstr ""

#: ../Doc/library/_winreg.rst:332
msgid "The result is a tuple of 2 items:"
msgstr ""

#: ../Doc/library/_winreg.rst:337
msgid "The value of the registry item."
msgstr ""

#: ../Doc/library/_winreg.rst:339
msgid ""
"An integer giving the registry type for this value (see table in docs for :"
"meth:`SetValueEx`)"
msgstr ""

#: ../Doc/library/_winreg.rst:347
msgid "Saves the specified key, and all its subkeys to the specified file."
msgstr ""

#: ../Doc/library/_winreg.rst:352
msgid ""
"*file_name* is the name of the file to save registry data to.  This file "
"cannot already exist. If this filename includes an extension, it cannot be "
"used on file allocation table (FAT) file systems by the :meth:`LoadKey` "
"method."
msgstr ""

#: ../Doc/library/_winreg.rst:357
msgid ""
"If *key* represents a key on a remote computer, the path described by "
"*file_name* is relative to the remote computer. The caller of this method "
"must possess the :const:`SeBackupPrivilege` security privilege.  Note that "
"privileges are different than permissions -- see the `Conflicts Between User "
"Rights and Permissions documentation <http://msdn.microsoft.com/en-us/"
"library/ms724878%28v=VS.85%29.aspx>`__ for more details."
msgstr ""

#: ../Doc/library/_winreg.rst:365
msgid "This function passes NULL for *security_attributes* to the API."
msgstr ""

#: ../Doc/library/_winreg.rst:370
msgid "Associates a value with a specified key."
msgstr ""

#: ../Doc/library/_winreg.rst:375
msgid ""
"*sub_key* is a string that names the subkey with which the value is "
"associated."
msgstr ""

#: ../Doc/library/_winreg.rst:377
msgid ""
"*type* is an integer that specifies the type of the data. Currently this "
"must be :const:`REG_SZ`, meaning only strings are supported.  Use the :func:"
"`SetValueEx` function for support for other data types."
msgstr ""

#: ../Doc/library/_winreg.rst:381 ../Doc/library/_winreg.rst:409
msgid "*value* is a string that specifies the new value."
msgstr ""

#: ../Doc/library/_winreg.rst:383
msgid ""
"If the key specified by the *sub_key* parameter does not exist, the SetValue "
"function creates it."
msgstr ""

#: ../Doc/library/_winreg.rst:386 ../Doc/library/_winreg.rst:417
msgid ""
"Value lengths are limited by available memory. Long values (more than 2048 "
"bytes) should be stored as files with the filenames stored in the "
"configuration registry.  This helps the registry perform efficiently."
msgstr ""

#: ../Doc/library/_winreg.rst:390
msgid ""
"The key identified by the *key* parameter must have been opened with :const:"
"`KEY_SET_VALUE` access."
msgstr ""

#: ../Doc/library/_winreg.rst:396
msgid "Stores data in the value field of an open registry key."
msgstr ""

#: ../Doc/library/_winreg.rst:401
msgid ""
"*value_name* is a string that names the subkey with which the value is "
"associated."
msgstr ""

#: ../Doc/library/_winreg.rst:404
msgid ""
"*type* is an integer that specifies the type of the data. See :ref:`Value "
"Types <value-types>` for the available types."
msgstr ""

#: ../Doc/library/_winreg.rst:407
msgid "*reserved* can be anything -- zero is always passed to the API."
msgstr ""

#: ../Doc/library/_winreg.rst:411
msgid ""
"This method can also set additional value and type information for the "
"specified key.  The key identified by the key parameter must have been "
"opened with :const:`KEY_SET_VALUE` access."
msgstr ""

#: ../Doc/library/_winreg.rst:415
msgid "To open the key, use the :func:`CreateKey` or :func:`OpenKey` methods."
msgstr ""

#: ../Doc/library/_winreg.rst:424
msgid ""
"Disables registry reflection for 32-bit processes running on a 64-bit "
"operating system."
msgstr ""

#: ../Doc/library/_winreg.rst:430 ../Doc/library/_winreg.rst:445
#: ../Doc/library/_winreg.rst:460
msgid ""
"Will generally raise :exc:`NotImplemented` if executed on a 32-bit operating "
"system."
msgstr ""

# dc29609933ba45eeb902ace56b59cf05
#: ../Doc/library/_winreg.rst:433
msgid ""
"If the key is not on the reflection list, the function succeeds but has no "
"effect. Disabling reflection for a key does not affect reflection of any "
"subkeys."
msgstr ""

#: ../Doc/library/_winreg.rst:440
msgid "Restores registry reflection for the specified disabled key."
msgstr ""

#: ../Doc/library/_winreg.rst:448
msgid ""
"Restoring reflection for a key does not affect reflection of any subkeys."
msgstr ""

#: ../Doc/library/_winreg.rst:453
msgid "Determines the reflection state for the specified key."
msgstr ""

#: ../Doc/library/_winreg.rst:458
msgid "Returns ``True`` if reflection is disabled."
msgstr ""

#: ../Doc/library/_winreg.rst:467 ../Doc/library/cmath.rst:224
#: ../Doc/library/curses.rst:1215 ../Doc/library/math.rst:355
#: ../Doc/library/subprocess.rst:613
msgid "Constants"
msgstr ""

#: ../Doc/library/_winreg.rst:469
msgid ""
"The following constants are defined for use in many :mod:`_winreg` functions."
msgstr ""

#: ../Doc/library/_winreg.rst:474
msgid "HKEY_* Constants"
msgstr ""

#: ../Doc/library/_winreg.rst:478
msgid ""
"Registry entries subordinate to this key define types (or classes) of "
"documents and the properties associated with those types. Shell and COM "
"applications use the information stored under this key."
msgstr ""

#: ../Doc/library/_winreg.rst:485
msgid ""
"Registry entries subordinate to this key define the preferences of the "
"current user. These preferences include the settings of environment "
"variables, data about program groups, colors, printers, network connections, "
"and application preferences."
msgstr ""

#: ../Doc/library/_winreg.rst:492
msgid ""
"Registry entries subordinate to this key define the physical state of the "
"computer, including data about the bus type, system memory, and installed "
"hardware and software."
msgstr ""

#: ../Doc/library/_winreg.rst:498
msgid ""
"Registry entries subordinate to this key define the default user "
"configuration for new users on the local computer and the user configuration "
"for the current user."
msgstr ""

#: ../Doc/library/_winreg.rst:504
msgid ""
"Registry entries subordinate to this key allow you to access performance "
"data. The data is not actually stored in the registry; the registry "
"functions cause the system to collect the data from its source."
msgstr ""

#: ../Doc/library/_winreg.rst:512
msgid ""
"Contains information about the current hardware profile of the local "
"computer system."
msgstr ""

#: ../Doc/library/_winreg.rst:517
msgid "This key is not used in versions of Windows after 98."
msgstr ""

#: ../Doc/library/_winreg.rst:523
msgid "Access Rights"
msgstr ""

#: ../Doc/library/_winreg.rst:525
msgid ""
"For more information, see `Registry Key Security and Access <http://msdn."
"microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx>`__."
msgstr ""

#: ../Doc/library/_winreg.rst:530
msgid ""
"Combines the STANDARD_RIGHTS_REQUIRED, :const:`KEY_QUERY_VALUE`, :const:"
"`KEY_SET_VALUE`, :const:`KEY_CREATE_SUB_KEY`, :const:"
"`KEY_ENUMERATE_SUB_KEYS`, :const:`KEY_NOTIFY`, and :const:`KEY_CREATE_LINK` "
"access rights."
msgstr ""

#: ../Doc/library/_winreg.rst:537
msgid ""
"Combines the STANDARD_RIGHTS_WRITE, :const:`KEY_SET_VALUE`, and :const:"
"`KEY_CREATE_SUB_KEY` access rights."
msgstr ""

#: ../Doc/library/_winreg.rst:542
msgid ""
"Combines the STANDARD_RIGHTS_READ, :const:`KEY_QUERY_VALUE`, :const:"
"`KEY_ENUMERATE_SUB_KEYS`, and :const:`KEY_NOTIFY` values."
msgstr ""

#: ../Doc/library/_winreg.rst:547
msgid "Equivalent to :const:`KEY_READ`."
msgstr ""

#: ../Doc/library/_winreg.rst:551
msgid "Required to query the values of a registry key."
msgstr ""

#: ../Doc/library/_winreg.rst:555
msgid "Required to create, delete, or set a registry value."
msgstr ""

#: ../Doc/library/_winreg.rst:559
msgid "Required to create a subkey of a registry key."
msgstr ""

#: ../Doc/library/_winreg.rst:563
msgid "Required to enumerate the subkeys of a registry key."
msgstr ""

#: ../Doc/library/_winreg.rst:567
msgid ""
"Required to request change notifications for a registry key or for subkeys "
"of a registry key."
msgstr ""

#: ../Doc/library/_winreg.rst:572
msgid "Reserved for system use."
msgstr ""

#: ../Doc/library/_winreg.rst:578
msgid "64-bit Specific"
msgstr ""

#: ../Doc/library/_winreg.rst:580
msgid ""
"For more information, see `Accesing an Alternate Registry View <http://msdn."
"microsoft.com/en-us/library/aa384129(v=VS.85).aspx>`__."
msgstr ""

#: ../Doc/library/_winreg.rst:585
msgid ""
"Indicates that an application on 64-bit Windows should operate on the 64-bit "
"registry view."
msgstr ""

#: ../Doc/library/_winreg.rst:590
msgid ""
"Indicates that an application on 64-bit Windows should operate on the 32-bit "
"registry view."
msgstr ""

#: ../Doc/library/_winreg.rst:597
msgid "Value Types"
msgstr ""

#: ../Doc/library/_winreg.rst:599
msgid ""
"For more information, see `Registry Value Types <http://msdn.microsoft.com/"
"en-us/library/ms724884%28v=VS.85%29.aspx>`__."
msgstr ""

#: ../Doc/library/_winreg.rst:604
msgid "Binary data in any form."
msgstr ""

#: ../Doc/library/_winreg.rst:608
msgid "32-bit number."
msgstr ""

#: ../Doc/library/_winreg.rst:612
msgid "A 32-bit number in little-endian format."
msgstr ""

#: ../Doc/library/_winreg.rst:616
msgid "A 32-bit number in big-endian format."
msgstr ""

#: ../Doc/library/_winreg.rst:620
msgid ""
"Null-terminated string containing references to environment variables (``"
"%PATH%``)."
msgstr ""

#: ../Doc/library/_winreg.rst:625
msgid "A Unicode symbolic link."
msgstr ""

#: ../Doc/library/_winreg.rst:629
msgid ""
"A sequence of null-terminated strings, terminated by two null characters. "
"(Python handles this termination automatically.)"
msgstr ""

#: ../Doc/library/_winreg.rst:634
msgid "No defined value type."
msgstr ""

#: ../Doc/library/_winreg.rst:638
msgid "A device-driver resource list."
msgstr ""

#: ../Doc/library/_winreg.rst:642
msgid "A hardware setting."
msgstr ""

#: ../Doc/library/_winreg.rst:646
msgid "A hardware resource list."
msgstr ""

#: ../Doc/library/_winreg.rst:650
msgid "A null-terminated string."
msgstr ""

#: ../Doc/library/_winreg.rst:656
msgid "Registry Handle Objects"
msgstr ""

#: ../Doc/library/_winreg.rst:658
msgid ""
"This object wraps a Windows HKEY object, automatically closing it when the "
"object is destroyed.  To guarantee cleanup, you can call either the :meth:"
"`~PyHKEY.Close` method on the object, or the :func:`CloseKey` function."
msgstr ""

#: ../Doc/library/_winreg.rst:662
msgid "All registry functions in this module return one of these objects."
msgstr ""

#: ../Doc/library/_winreg.rst:664
msgid ""
"All registry functions in this module which accept a handle object also "
"accept an integer, however, use of the handle object is encouraged."
msgstr ""

# 655e0f59fa274ca383bc30dc3beabde7
#: ../Doc/library/_winreg.rst:667
msgid "Handle objects provide semantics for :meth:`__nonzero__` -- thus::"
msgstr ""

#: ../Doc/library/_winreg.rst:672
msgid ""
"will print ``Yes`` if the handle is currently valid (has not been closed or "
"detached)."
msgstr ""

#: ../Doc/library/_winreg.rst:675
msgid ""
"The object also support comparison semantics, so handle objects will compare "
"true if they both reference the same underlying Windows handle value."
msgstr ""

#: ../Doc/library/_winreg.rst:678
msgid ""
"Handle objects can be converted to an integer (e.g., using the built-in :"
"func:`int` function), in which case the underlying Windows handle value is "
"returned.  You can also use the :meth:`~PyHKEY.Detach` method to return the "
"integer handle, and also disconnect the Windows handle from the handle "
"object."
msgstr ""

#: ../Doc/library/_winreg.rst:686
msgid "Closes the underlying Windows handle."
msgstr ""

#: ../Doc/library/_winreg.rst:688
msgid "If the handle is already closed, no error is raised."
msgstr ""

#: ../Doc/library/_winreg.rst:693
msgid "Detaches the Windows handle from the handle object."
msgstr ""

# 758f059064304d6b9029f007116a4f22
#: ../Doc/library/_winreg.rst:695
msgid ""
"The result is an integer (or long on 64 bit Windows) that holds the value of "
"the handle before it is detached.  If the handle is already detached or "
"closed, this will return zero."
msgstr ""

#: ../Doc/library/_winreg.rst:699
msgid ""
"After calling this function, the handle is effectively invalidated, but the "
"handle is not closed.  You would call this function when you need the "
"underlying Win32 handle to exist beyond the lifetime of the handle object."
msgstr ""

#: ../Doc/library/_winreg.rst:706
msgid ""
"The HKEY object implements :meth:`~object.__enter__` and :meth:`~object."
"__exit__` and thus supports the context protocol for the :keyword:`with` "
"statement::"
msgstr ""

#: ../Doc/library/_winreg.rst:713
msgid ""
"will automatically close *key* when control leaves the :keyword:`with` block."
msgstr ""

#: ../Doc/library/abc.rst:2
msgid ":mod:`abc` --- Abstract Base Classes"
msgstr ""

# 1b73e9ed8e5f4317beadac1d22e58c60
#: ../Doc/library/abc.rst:12
msgid "**Source code:** :source:`Lib/abc.py`"
msgstr ""

# 6dd00aa7efda4a929599336298f769d2
#: ../Doc/library/abc.rst:16
msgid ""
"This module provides the infrastructure for defining :term:`abstract base "
"classes <abstract base class>` (ABCs) in Python, as outlined in :pep:`3119`; "
"see the PEP for why this was added to Python. (See also :pep:`3141` and the :"
"mod:`numbers` module regarding a type hierarchy for numbers based on ABCs.)"
msgstr ""

#: ../Doc/library/abc.rst:21
msgid ""
"The :mod:`collections` module has some concrete classes that derive from "
"ABCs; these can, of course, be further derived. In addition the :mod:"
"`collections` module has some ABCs that can be used to test whether a class "
"or instance provides a particular interface, for example, is it hashable or "
"a mapping."
msgstr ""

#: ../Doc/library/abc.rst:28
msgid "This module provides the following class:"
msgstr ""

#: ../Doc/library/abc.rst:32
msgid "Metaclass for defining Abstract Base Classes (ABCs)."
msgstr ""

#: ../Doc/library/abc.rst:34
msgid ""
"Use this metaclass to create an ABC.  An ABC can be subclassed directly, and "
"then acts as a mix-in class.  You can also register unrelated concrete "
"classes (even built-in classes) and unrelated ABCs as \"virtual subclasses\" "
"-- these and their descendants will be considered subclasses of the "
"registering ABC by the built-in :func:`issubclass` function, but the "
"registering ABC won't show up in their MRO (Method Resolution Order) nor "
"will method implementations defined by the registering ABC be callable (not "
"even via :func:`super`). [#]_"
msgstr ""

#: ../Doc/library/abc.rst:43
msgid ""
"Classes created with a metaclass of :class:`ABCMeta` have the following "
"method:"
msgstr ""

#: ../Doc/library/abc.rst:47
msgid ""
"Register *subclass* as a \"virtual subclass\" of this ABC. For example::"
msgstr ""

#: ../Doc/library/abc.rst:60
msgid "You can also override this method in an abstract base class:"
msgstr ""

#: ../Doc/library/abc.rst:64
msgid "(Must be defined as a class method.)"
msgstr ""

#: ../Doc/library/abc.rst:66
msgid ""
"Check whether *subclass* is considered a subclass of this ABC.  This means "
"that you can customize the behavior of ``issubclass`` further without the "
"need to call :meth:`register` on every class you want to consider a subclass "
"of the ABC.  (This class method is called from the :meth:`__subclasscheck__` "
"method of the ABC.)"
msgstr ""

#: ../Doc/library/abc.rst:72
msgid ""
"This method should return ``True``, ``False`` or ``NotImplemented``.  If it "
"returns ``True``, the *subclass* is considered a subclass of this ABC. If it "
"returns ``False``, the *subclass* is not considered a subclass of this ABC, "
"even if it would normally be one.  If it returns ``NotImplemented``, the "
"subclass check is continued with the usual mechanism."
msgstr ""

#: ../Doc/library/abc.rst:82
msgid ""
"For a demonstration of these concepts, look at this example ABC definition::"
msgstr ""

#: ../Doc/library/abc.rst:112
msgid ""
"The ABC ``MyIterable`` defines the standard iterable method, :meth:"
"`__iter__`, as an abstract method.  The implementation given here can still "
"be called from subclasses.  The :meth:`get_iterator` method is also part of "
"the ``MyIterable`` abstract base class, but it does not have to be "
"overridden in non-abstract derived classes."
msgstr ""

#: ../Doc/library/abc.rst:118
msgid ""
"The :meth:`__subclasshook__` class method defined here says that any class "
"that has an :meth:`__iter__` method in its :attr:`__dict__` (or in that of "
"one of its base classes, accessed via the :attr:`__mro__` list) is "
"considered a ``MyIterable`` too."
msgstr ""

#: ../Doc/library/abc.rst:123
msgid ""
"Finally, the last line makes ``Foo`` a virtual subclass of ``MyIterable``, "
"even though it does not define an :meth:`__iter__` method (it uses the old-"
"style iterable protocol, defined in terms of :meth:`__len__` and :meth:"
"`__getitem__`).  Note that this will not make ``get_iterator`` available as "
"a method of ``Foo``, so it is provided separately."
msgstr ""

#: ../Doc/library/abc.rst:130
msgid "It also provides the following decorators:"
msgstr ""

#: ../Doc/library/abc.rst:134
msgid "A decorator indicating abstract methods."
msgstr ""

#: ../Doc/library/abc.rst:136
msgid ""
"Using this decorator requires that the class's metaclass is :class:`ABCMeta` "
"or is derived from it. A class that has a metaclass derived from :class:"
"`ABCMeta` cannot be instantiated unless all of its abstract methods and "
"properties are overridden. The abstract methods can be called using any of "
"the normal 'super' call mechanisms."
msgstr ""

#: ../Doc/library/abc.rst:144
msgid ""
"Dynamically adding abstract methods to a class, or attempting to modify the "
"abstraction status of a method or class once it is created, are not "
"supported.  The :func:`abstractmethod` only affects subclasses derived using "
"regular inheritance; \"virtual subclasses\" registered with the ABC's :meth:"
"`register` method are not affected."
msgstr ""

#: ../Doc/library/abc.rst:150 ../Doc/library/abc.rst:179
msgid "Usage::"
msgstr ""

#: ../Doc/library/abc.rst:160
msgid ""
"Unlike Java abstract methods, these abstract methods may have an "
"implementation. This implementation can be called via the :func:`super` "
"mechanism from the class that overrides it.  This could be useful as an end-"
"point for a super-call in a framework that uses cooperative multiple-"
"inheritance."
msgstr ""

#: ../Doc/library/abc.rst:170
msgid ""
"A subclass of the built-in :func:`property`, indicating an abstract property."
msgstr ""

#: ../Doc/library/abc.rst:172
msgid ""
"Using this function requires that the class's metaclass is :class:`ABCMeta` "
"or is derived from it. A class that has a metaclass derived from :class:"
"`ABCMeta` cannot be instantiated unless all of its abstract methods and "
"properties are overridden. The abstract properties can be called using any "
"of the normal 'super' call mechanisms."
msgstr ""

#: ../Doc/library/abc.rst:187
msgid ""
"This defines a read-only property; you can also define a read-write abstract "
"property using the 'long' form of property declaration::"
msgstr ""

#: ../Doc/library/abc.rst:198 ../Doc/library/cgi.rst:539
#: ../Doc/library/chunk.rst:129 ../Doc/library/datetime.rst:1722
#: ../Doc/library/doctest.rst:1887 ../Doc/library/email.rst:320
#: ../Doc/library/email-examples.rst:44 ../Doc/library/email.encoders.rst:58
#: ../Doc/library/email.generator.rst:130 ../Doc/library/email.parser.rst:220
#: ../Doc/library/email.util.rst:162 ../Doc/library/functions.rst:1702
#: ../Doc/library/gc.rst:239 ../Doc/library/gettext.rst:748
#: ../Doc/library/heapq.rst:296 ../Doc/library/marshal.rst:127
#: ../Doc/library/pdb.rst:397 ../Doc/library/pickle.rst:843
#: ../Doc/library/profile.rst:612 ../Doc/library/pyexpat.rst:897
#: ../Doc/library/rfc822.rst:350 ../Doc/library/sqlite3.rst:904
#: ../Doc/library/stdtypes.rst:3065 ../Doc/library/time.rst:558
#: ../Doc/library/webbrowser.rst:206 ../Doc/library/xml.dom.minidom.rst:273
#: ../Doc/library/xml.etree.elementtree.rst:948
#: ../Doc/library/xmlrpclib.rst:585
msgid "Footnotes"
msgstr ""

#: ../Doc/library/abc.rst:199
msgid ""
"C++ programmers should note that Python's virtual base class concept is not "
"the same as C++'s."
msgstr ""

# 142bc3e4727a40dfba74e114db51361d
#: ../Doc/library/aepack.rst:3
msgid ""
":mod:`aepack` --- Conversion between Python variables and AppleEvent data "
"containers"
msgstr ""

# 05dff553cf4b41f6aedf028553a6d4c0
#: ../Doc/library/aepack.rst:12
msgid ""
"The :mod:`aepack` module defines functions for converting (packing) Python "
"variables to AppleEvent descriptors and back (unpacking). Within Python the "
"AppleEvent descriptor is handled by Python objects of built-in type :class:"
"`AEDesc`, defined in module :mod:`Carbon.AE`."
msgstr ""

# 4b660e5d0c2c457a85cb5a6b1eeb2022
# 80ef765e8f704c02a5273b729806e1a2
# 7211da3d48e643248151686bc4152dc6
# d4c56e3ca8464e3a8810283ee157a43a
# 20e14bbb75924a4d937c0a4a935a86fd
# 50ba5356ee404f5e9341623d492539bb
# 7b86e8b260a84a36b438aaee68deff3b
# 306cdbfefeb748f4be2625fff31e1f4f
# 293ee4d008674851869a9f42630bfeb8
#: ../Doc/library/aepack.rst:19 ../Doc/library/aetools.rst:27
#: ../Doc/library/aetypes.rst:36 ../Doc/library/autogil.rst:18
#: ../Doc/library/colorpicker.rst:18 ../Doc/library/easydialogs.rst:21
#: ../Doc/library/framework.rst:21 ../Doc/library/ic.rst:15
#: ../Doc/library/macos.rst:16
msgid "This module has been removed in Python 3.x."
msgstr ""

# 91fa42f975b844ff9894b967f7556dce
#: ../Doc/library/aepack.rst:22
msgid "The :mod:`aepack` module defines the following functions:"
msgstr ""

# 020c764dd2fd4f96bc5b53186e37b19d
#: ../Doc/library/aepack.rst:27
msgid ""
"Returns an :class:`AEDesc` object  containing a conversion of Python value "
"x. If *forcetype* is provided it specifies the descriptor type of the "
"result. Otherwise, a default mapping of Python types to Apple Event "
"descriptor types is used, as follows:"
msgstr ""

#: ../Doc/library/aepack.rst:33 ../Doc/library/ctypes.rst:221
#: ../Doc/library/sqlite3.rst:662 ../Doc/library/sqlite3.rst:682
#: ../Doc/library/struct.rst:166
msgid "Python type"
msgstr ""

# 8a770f5517c34844aedd032bdbd286a7
#: ../Doc/library/aepack.rst:33
msgid "descriptor type"
msgstr ""

# a642d5b1a889436da973e35f22cc43cb
#: ../Doc/library/aepack.rst:35
msgid ":class:`FSSpec`"
msgstr ""

# 0a841e2112454850b8e463cc68ea896b
#: ../Doc/library/aepack.rst:35
msgid "typeFSS"
msgstr ""

# e62ee7e5ca2249e8a8ee7419c1069503
#: ../Doc/library/aepack.rst:37
msgid ":class:`FSRef`"
msgstr ""

# 03fa57662b39429f82d6dca4df078a1b
#: ../Doc/library/aepack.rst:37
msgid "typeFSRef"
msgstr ""

# fcefe1cfaee74eea87e2a36d6d1a6646
#: ../Doc/library/aepack.rst:39
msgid ":class:`Alias`"
msgstr ""

# afa92944fe404007973a681d5084237e
#: ../Doc/library/aepack.rst:39
msgid "typeAlias"
msgstr ""

#: ../Doc/library/aepack.rst:41 ../Doc/library/struct.rst:172
#: ../Doc/library/struct.rst:174 ../Doc/library/struct.rst:178
#: ../Doc/library/struct.rst:180 ../Doc/library/struct.rst:182
#: ../Doc/library/struct.rst:184 ../Doc/library/struct.rst:186
#: ../Doc/library/struct.rst:188 ../Doc/library/struct.rst:190
#: ../Doc/library/struct.rst:192 ../Doc/library/struct.rst:203
msgid "integer"
msgstr ""

# c3afd02b12b74d41b596fc7ca772620d
#: ../Doc/library/aepack.rst:41
msgid "typeLong (32 bit integer)"
msgstr ""

#: ../Doc/library/aepack.rst:43 ../Doc/library/array.rst:41
#: ../Doc/library/array.rst:43 ../Doc/library/ctypes.rst:250
#: ../Doc/library/ctypes.rst:252 ../Doc/library/ctypes.rst:254
#: ../Doc/library/fl.rst:356 ../Doc/library/fl.rst:358
#: ../Doc/library/fl.rst:360 ../Doc/library/fl.rst:362
#: ../Doc/library/fl.rst:438 ../Doc/library/fl.rst:440
#: ../Doc/library/fl.rst:442 ../Doc/library/fl.rst:444
#: ../Doc/library/fl.rst:454 ../Doc/library/json.rst:273
#: ../Doc/library/struct.rst:195 ../Doc/library/struct.rst:197
msgid "float"
msgstr ""

# 6d7225047c99412c8d96f5c8b1cbac8b
#: ../Doc/library/aepack.rst:43
msgid "typeFloat (64 bit floating point)"
msgstr ""

#: ../Doc/library/aepack.rst:45 ../Doc/library/fl.rst:456
#: ../Doc/library/json.rst:269 ../Doc/library/json.rst:357
#: ../Doc/library/struct.rst:199 ../Doc/library/struct.rst:201
msgid "string"
msgstr ""

# 4367ca99f8b74d2ebcd97d982caccca8
#: ../Doc/library/aepack.rst:45
msgid "typeText"
msgstr ""

# 9671f14239894edfa53f20dd5183f69b
# 3d1374a17e1246ebae9bfb224dcce548
#: ../Doc/library/aepack.rst:47 ../Doc/library/json.rst:269
msgid "unicode"
msgstr ""

# 3e3269d86a014d3a9439b5a9dee864f4
#: ../Doc/library/aepack.rst:47
msgid "typeUnicodeText"
msgstr ""

#: ../Doc/library/aepack.rst:49 ../Doc/library/json.rst:267
msgid "list"
msgstr ""

# 21b10bd2fd704f56bda3d9b418f76f30
#: ../Doc/library/aepack.rst:49
msgid "typeAEList"
msgstr ""

# a9974bd0df994474ab63386898826dea
#: ../Doc/library/aepack.rst:51
msgid "dictionary"
msgstr ""

# ff1a671efe9b4513ae20eacff41e24b1
#: ../Doc/library/aepack.rst:51
msgid "typeAERecord"
msgstr ""

# ed74884fb0264007ba7c07feb3878211
#: ../Doc/library/aepack.rst:53
msgid "instance"
msgstr ""

# cca45867fff7497a98d9a33c9fdcf91d
#: ../Doc/library/aepack.rst:53
msgid "*see below*"
msgstr ""

# ec23e5b802c4407486b1d8bb7473fca4
#: ../Doc/library/aepack.rst:56
msgid ""
"If *x* is a Python instance then this function attempts to call an :meth:"
"`__aepack__` method.  This method should return an :class:`AEDesc` object."
msgstr ""

# 866a719e2377497299914c9117b718d1
#: ../Doc/library/aepack.rst:59
msgid ""
"If the conversion *x* is not defined above, this function returns the Python "
"string representation of a value (the repr() function) encoded as a text "
"descriptor."
msgstr ""

# 8983cb9bda444c249a8207158324139e
#: ../Doc/library/aepack.rst:66
msgid ""
"*x* must be an object of type :class:`AEDesc`. This function returns a "
"Python object representation of the data in the Apple Event descriptor *x*. "
"Simple AppleEvent data types (integer, text, float) are returned as their "
"obvious Python counterparts. Apple Event lists are returned as Python lists, "
"and the list elements are recursively unpacked.  Object references (ex. "
"``line 3 of document 1``) are returned as instances of :class:`aetypes."
"ObjectSpecifier`, unless ``formodulename`` is specified.  AppleEvent "
"descriptors with descriptor type typeFSS are returned as :class:`FSSpec` "
"objects.  AppleEvent record descriptors are returned as Python dictionaries, "
"with 4-character string keys and elements recursively unpacked."
msgstr ""

# 82faddc1eff94ea98ab9ca8ff3b61524
#: ../Doc/library/aepack.rst:77
msgid ""
"The optional ``formodulename`` argument is used by the stub packages "
"generated by :mod:`gensuitemodule`, and ensures that the OSA classes for "
"object specifiers are looked up in the correct module. This ensures that if, "
"say, the Finder returns an object specifier for a window you get an instance "
"of ``Finder.Window`` and not a generic ``aetypes.Window``. The former knows "
"about all the properties and elements a window has in the Finder, while the "
"latter knows no such things."
msgstr ""

# 82baceda0ea540ce8de87657a12a4d8b
#: ../Doc/library/aepack.rst:89
msgid "Built-in access to Apple Event Manager routines."
msgstr ""

# 26257dd96c8247cf988d1834de6ce603
#: ../Doc/library/aepack.rst:92
msgid "Python definitions of codes for Apple Event descriptor types."
msgstr ""

# c2d02463faf241ac9a5078c35f41b3db
#: ../Doc/library/aetools.rst:3
msgid ":mod:`aetools` --- OSA client support"
msgstr ""

# 71ba91df442b4c6cbd28c0ba36bc0c79
#: ../Doc/library/aetools.rst:12
msgid ""
"The :mod:`aetools` module contains the basic functionality on which Python "
"AppleScript client support is built. It also imports and re-exports the core "
"functionality of the :mod:`aetypes` and :mod:`aepack` modules. The stub "
"packages generated by :mod:`gensuitemodule` import the relevant portions of :"
"mod:`aetools`, so usually you do not need to import it yourself. The "
"exception to this is when you cannot use a generated suite package and need "
"lower-level access to scripting."
msgstr ""

# 476a1712f27641ce9aea0bed1306d909
#: ../Doc/library/aetools.rst:20
msgid ""
"The :mod:`aetools` module itself uses the AppleEvent support provided by "
"the :mod:`Carbon.AE` module. This has one drawback: you need access to the "
"window manager, see section :ref:`osx-gui-scripts` for details. This "
"restriction may be lifted in future releases."
msgstr ""

# 0de3fa055ce44636adc73bc458bce131
#: ../Doc/library/aetools.rst:30
msgid "The :mod:`aetools` module defines the following functions:"
msgstr ""

# 660f771814ee41b692804e5dd6efac85
#: ../Doc/library/aetools.rst:35
msgid ""
"Stores parameters and attributes in a pre-created ``Carbon.AE.AEDesc`` "
"object. ``parameters`` and ``attributes`` are  dictionaries mapping 4-"
"character OSA parameter keys to Python objects. The objects are packed using "
"``aepack.pack()``."
msgstr ""

# c881b8d4177a49f0a350c4b9f6a7509b
#: ../Doc/library/aetools.rst:43
msgid ""
"Recursively unpacks a ``Carbon.AE.AEDesc`` event to Python objects. The "
"function returns the parameter dictionary and the attribute dictionary. The "
"``formodulename`` argument is used by generated stub packages to control "
"where AppleScript classes are looked up."
msgstr ""

# 35d99cff03ce4c8ab832b5d761a431b5
#: ../Doc/library/aetools.rst:51
msgid ""
"Converts a Python keyword argument dictionary ``arguments`` to the format "
"required by ``packevent`` by replacing the keys, which are Python "
"identifiers, by the four-character OSA keys according to the mapping "
"specified in ``keydict``. Used by the generated suite packages."
msgstr ""

# 96a555b5679f4642b611c56482b37f7a
#: ../Doc/library/aetools.rst:59
msgid ""
"If the ``arguments`` dictionary contains an entry for ``key`` convert the "
"value for that entry according to dictionary ``edict``. This converts human-"
"readable Python enumeration names to the OSA 4-character codes. Used by the "
"generated suite packages."
msgstr ""

# 8845825a18454a9cbf0f5b897212c0d2
#: ../Doc/library/aetools.rst:64
msgid "The :mod:`aetools` module defines the following class:"
msgstr ""

# 7b93a2ae0ec340aa9dc2f95a4e6f4d3b
#: ../Doc/library/aetools.rst:69
msgid ""
"Base class for the proxy used to talk to an application. ``signature`` "
"overrides the class attribute ``_signature`` (which is usually set by "
"subclasses) and is the 4-char creator code defining the application to talk "
"to. ``start`` can be set to true to enable running the application on class "
"instantiation. ``timeout`` can be specified to change the default timeout "
"used while waiting for an AppleEvent reply."
msgstr ""

# 5384165035184060a5b2872cfdfd572c
#: ../Doc/library/aetools.rst:79
msgid ""
"Test whether the application is running, and attempt to start it if not."
msgstr ""

# a3a404c1dfa54954a8ea14fe1623484b
#: ../Doc/library/aetools.rst:84
msgid ""
"Create the AppleEvent ``Carbon.AE.AEDesc`` for the verb with the OSA "
"designation ``code, subcode`` (which are the usual 4-character strings), "
"pack the ``parameters`` and ``attributes`` into it, send it to the target "
"application, wait for the reply, unpack the reply with ``unpackevent`` and "
"return the reply appleevent, the unpacked return values as a dictionary and "
"the return attributes."
msgstr ""

# f79cde1c9eeb41a7a1a0473e858c06f8
#: ../Doc/library/aetypes.rst:3
msgid ":mod:`aetypes` --- AppleEvent objects"
msgstr ""

# df1f01679145463f9ed38bc0a154eddc
#: ../Doc/library/aetypes.rst:12
msgid ""
"The :mod:`aetypes` defines classes used to represent Apple Event data "
"descriptors and Apple Event object specifiers."
msgstr ""

# 4dc3e40ce02f456599040b07eb6be994
#: ../Doc/library/aetypes.rst:15
msgid ""
"Apple Event data is contained in descriptors, and these descriptors are "
"typed. For many descriptors the Python representation is simply the "
"corresponding Python type: ``typeText`` in OSA is a Python string, "
"``typeFloat`` is a float, etc. For OSA types that have no direct Python "
"counterpart this module declares classes. Packing and unpacking instances of "
"these classes is handled automatically by :mod:`aepack`."
msgstr ""

# 80b34931f3db4a3c938905a904b128f8
#: ../Doc/library/aetypes.rst:22
msgid ""
"An object specifier is essentially an address of an object implemented in a "
"Apple Event server. An Apple Event specifier is used as the direct object "
"for an Apple Event or as the argument of an optional parameter. The :mod:"
"`aetypes` module contains the base classes for OSA classes and properties, "
"which are used by the packages generated by :mod:`gensuitemodule` to "
"populate the classes and properties in a given suite."
msgstr ""

# db1614677f3f441f92b56e08c7b40104
#: ../Doc/library/aetypes.rst:29
msgid ""
"For reasons of backward compatibility, and for cases where you need to "
"script an application for which you have not generated the stub package this "
"module also contains object specifiers for a number of common OSA classes "
"such as ``Document``, ``Window``, ``Character``, etc."
msgstr ""

# 26ef73d85b314153812e91abbf039cf9
#: ../Doc/library/aetypes.rst:40
msgid ""
"The :mod:`AEObjects` module defines the following classes to represent Apple "
"Event descriptor data:"
msgstr ""

# 654e3bee8d9c4805ac559132b53ed0a2
#: ../Doc/library/aetypes.rst:46
msgid ""
"The representation of OSA descriptor data for which the :mod:`aepack` and :"
"mod:`aetypes` modules have no support, i.e. anything that is not represented "
"by the other classes here and that is not equivalent to a simple Python "
"value."
msgstr ""

# 7606946fb0b74be899e7a2c7ec67f385
#: ../Doc/library/aetypes.rst:53
msgid "An enumeration value with the given 4-character string value."
msgstr ""

# 1f1ad6dc625d4aa88d4a415f134aca87
#: ../Doc/library/aetypes.rst:58
msgid "Position ``pos`` in object ``of``."
msgstr ""

# 5ecdc6b66be64585beeaee164ab706a1
#: ../Doc/library/aetypes.rst:63
msgid "A boolean."
msgstr ""

# 69eb4ceeec964f34be5f2547a0306ae0
#: ../Doc/library/aetypes.rst:68
msgid "Text with style information (font, face, etc) included."
msgstr ""

# 1ee4fe45c6724a4e97256563f108f94b
#: ../Doc/library/aetypes.rst:73
msgid "Text with script system and style information included."
msgstr ""

# c48225202b144197873865f9cb23ae0d
#: ../Doc/library/aetypes.rst:78
msgid "Text with script system and language information included."
msgstr ""

# 060598699c30447f88fcd06382f9bb62
#: ../Doc/library/aetypes.rst:83
msgid "Script system and language information."
msgstr ""

# 81a3f6cd34da4aa0954187f8b33e98d1
#: ../Doc/library/aetypes.rst:88
msgid "A quickdraw point."
msgstr ""

# c9918d60685b448cb984a88b5c394f7f
#: ../Doc/library/aetypes.rst:93
msgid "A quickdraw rectangle."
msgstr ""

# 10f1d23821e44d2093b6bc174ac4279d
#: ../Doc/library/aetypes.rst:98
msgid "A color."
msgstr ""

# 783827b6749d402cb57c3fda3d3e6a36
#: ../Doc/library/aetypes.rst:103
msgid "An OSA type value with the given 4-character name."
msgstr ""

# 700d490845f84dd6a13273ee4fcfc07c
#: ../Doc/library/aetypes.rst:108
msgid "An OSA keyword with the given 4-character name."
msgstr ""

# 760f8b88fe914734864e772b05633354
#: ../Doc/library/aetypes.rst:113
msgid "A range."
msgstr ""

# ceb0378fda6e4e49a667809f83f331bc
#: ../Doc/library/aetypes.rst:118
msgid ""
"Non-numeric absolute positions, such as ``\"firs\"``, first, or ``\"midd"
"\"``, middle."
msgstr ""

# a3da7b5d26a342e2a7dad2f1493ddff5
#: ../Doc/library/aetypes.rst:124
msgid "The logical expression of applying operator ``logc`` to ``term``."
msgstr ""

# 5c2b23e6a5f34b768e3680dae380a268
#: ../Doc/library/aetypes.rst:129
msgid "The comparison ``relo`` of ``obj1`` to ``obj2``."
msgstr ""

# 9150f06aa60f448c80075e1fa85db836
#: ../Doc/library/aetypes.rst:131
msgid ""
"The following classes are used as base classes by the generated stub "
"packages to represent AppleScript classes and properties in Python:"
msgstr ""

# 20bc8baab7694c3390450980a093dff8
#: ../Doc/library/aetypes.rst:137
msgid ""
"Abstract baseclass for an OSA class. The subclass should set the class "
"attribute ``want`` to the 4-character OSA class code. Instances of "
"subclasses of this class are equivalent to AppleScript Object Specifiers. "
"Upon instantiation you should pass a selector in ``which``, and optionally a "
"parent object in ``fr``."
msgstr ""

# 4735eae7fcdf4c2c87537418f7592b0f
#: ../Doc/library/aetypes.rst:145
msgid ""
"Abstract baseclass for an OSA property. The subclass should set the class "
"attributes ``want`` and ``which`` to designate which property we are talking "
"about. Instances of subclasses of this class are Object Specifiers."
msgstr ""

# 9ec76b36f3504a6eb000deebeaf8ff7f
#: ../Doc/library/aetypes.rst:152
msgid ""
"Base class of ``ComponentItem`` and ``NProperty``, a general OSA Object "
"Specifier. See the Apple Open Scripting Architecture documentation for the "
"parameters. Note that this class is not abstract."
msgstr ""

#: ../Doc/library/aifc.rst:2
msgid ":mod:`aifc` --- Read and write AIFF and AIFC files"
msgstr ""

# 3518271f0ca34358b44cad3c2a66facd
#: ../Doc/library/aifc.rst:13
msgid "**Source code:** :source:`Lib/aifc.py`"
msgstr ""

#: ../Doc/library/aifc.rst:17
msgid ""
"This module provides support for reading and writing AIFF and AIFF-C files. "
"AIFF is Audio Interchange File Format, a format for storing digital audio "
"samples in a file.  AIFF-C is a newer version of the format that includes "
"the ability to compress the audio data."
msgstr ""

#: ../Doc/library/aifc.rst:24
msgid ""
"Some operations may only work under IRIX; these will raise :exc:"
"`ImportError` when attempting to import the :mod:`cl` module, which is only "
"available on IRIX."
msgstr ""

#: ../Doc/library/aifc.rst:28
msgid ""
"Audio files have a number of parameters that describe the audio data. The "
"sampling rate or frame rate is the number of times per second the sound is "
"sampled.  The number of channels indicate if the audio is mono, stereo, or "
"quadro.  Each frame consists of one sample per channel.  The sample size is "
"the size in bytes of each sample.  Thus a frame consists of *nchannels*"
"\\**samplesize* bytes, and a second's worth of audio consists of *nchannels*"
"\\**samplesize*\\**framerate* bytes."
msgstr ""

#: ../Doc/library/aifc.rst:36
msgid ""
"For example, CD quality audio has a sample size of two bytes (16 bits), uses "
"two channels (stereo) and has a frame rate of 44,100 frames/second.  This "
"gives a frame size of 4 bytes (2\\*2), and a second's worth occupies "
"2\\*2\\*44100 bytes (176,400 bytes)."
msgstr ""

#: ../Doc/library/aifc.rst:41
msgid "Module :mod:`aifc` defines the following function:"
msgstr ""

#: ../Doc/library/aifc.rst:46
msgid ""
"Open an AIFF or AIFF-C file and return an object instance with methods that "
"are described below.  The argument *file* is either a string naming a file "
"or a file object.  *mode* must be ``'r'`` or ``'rb'`` when the file must be "
"opened for reading, or ``'w'``  or ``'wb'`` when the file must be opened for "
"writing.  If omitted, ``file.mode`` is used if it exists, otherwise ``'rb'`` "
"is used.  When used for writing, the file object should be seekable, unless "
"you know ahead of time how many samples you are going to write in total and "
"use :meth:`writeframesraw` and :meth:`setnframes`."
msgstr ""

#: ../Doc/library/aifc.rst:55
msgid ""
"Objects returned by :func:`.open` when a file is opened for reading have the "
"following methods:"
msgstr ""

#: ../Doc/library/aifc.rst:61
msgid "Return the number of audio channels (1 for mono, 2 for stereo)."
msgstr ""

#: ../Doc/library/aifc.rst:66
msgid "Return the size in bytes of individual samples."
msgstr ""

#: ../Doc/library/aifc.rst:71
msgid "Return the sampling rate (number of audio frames per second)."
msgstr ""

#: ../Doc/library/aifc.rst:76
msgid "Return the number of audio frames in the file."
msgstr ""

# 3f4e1262340d4410a20b6b590f1abf7c
#: ../Doc/library/aifc.rst:81
msgid ""
"Return a four-character string describing the type of compression used in "
"the audio file.  For AIFF files, the returned value is ``'NONE'``."
msgstr ""

# 3aaf048baec9464693a3cd337a2141a1
#: ../Doc/library/aifc.rst:87
msgid ""
"Return a human-readable description of the type of compression used in the "
"audio file.  For AIFF files, the returned value is ``'not compressed'``."
msgstr ""

#: ../Doc/library/aifc.rst:93
msgid ""
"Return a tuple consisting of all of the above values in the above order."
msgstr ""

#: ../Doc/library/aifc.rst:98
msgid ""
"Return a list of markers in the audio file.  A marker consists of a tuple of "
"three elements.  The first is the mark ID (an integer), the second is the "
"mark position in frames from the beginning of the data (an integer), the "
"third is the name of the mark (a string)."
msgstr ""

#: ../Doc/library/aifc.rst:106
msgid ""
"Return the tuple as described in :meth:`getmarkers` for the mark with the "
"given *id*."
msgstr ""

#: ../Doc/library/aifc.rst:112
msgid ""
"Read and return the next *nframes* frames from the audio file.  The returned "
"data is a string containing for each frame the uncompressed samples of all "
"channels."
msgstr ""

#: ../Doc/library/aifc.rst:119
msgid ""
"Rewind the read pointer.  The next :meth:`readframes` will start from the "
"beginning."
msgstr ""

#: ../Doc/library/aifc.rst:125
msgid "Seek to the specified frame number."
msgstr ""

#: ../Doc/library/aifc.rst:130
msgid "Return the current frame number."
msgstr ""

#: ../Doc/library/aifc.rst:135
msgid ""
"Close the AIFF file.  After calling this method, the object can no longer be "
"used."
msgstr ""

#: ../Doc/library/aifc.rst:138
msgid ""
"Objects returned by :func:`.open` when a file is opened for writing have all "
"the above methods, except for :meth:`readframes` and :meth:`setpos`.  In "
"addition the following methods exist.  The :meth:`get\\*` methods can only "
"be called after the corresponding :meth:`set\\*` methods have been called.  "
"Before the first :meth:`writeframes` or :meth:`writeframesraw`, all "
"parameters except for the number of frames must be filled in."
msgstr ""

#: ../Doc/library/aifc.rst:148
msgid ""
"Create an AIFF file.  The default is that an AIFF-C file is created, unless "
"the name of the file ends in ``'.aiff'`` in which case the default is an "
"AIFF file."
msgstr ""

#: ../Doc/library/aifc.rst:154
msgid ""
"Create an AIFF-C file.  The default is that an AIFF-C file is created, "
"unless the name of the file ends in ``'.aiff'`` in which case the default is "
"an AIFF file."
msgstr ""

#: ../Doc/library/aifc.rst:161
msgid "Specify the number of channels in the audio file."
msgstr ""

#: ../Doc/library/aifc.rst:166
msgid "Specify the size in bytes of audio samples."
msgstr ""

#: ../Doc/library/aifc.rst:171
msgid "Specify the sampling frequency in frames per second."
msgstr ""

#: ../Doc/library/aifc.rst:176
msgid ""
"Specify the number of frames that are to be written to the audio file. If "
"this parameter is not set, or not set correctly, the file needs to support "
"seeking."
msgstr ""

# 5113183383cb4eee9201921d9b2da543
#: ../Doc/library/aifc.rst:187
msgid ""
"Specify the compression type.  If not specified, the audio data will not be "
"compressed.  In AIFF files, compression is not possible.  The name parameter "
"should be a human-readable description of the compression type, the type "
"parameter should be a four-character string.  Currently the following "
"compression types are supported: NONE, ULAW, ALAW, G722."
msgstr ""

#: ../Doc/library/aifc.rst:196
msgid ""
"Set all the above parameters at once.  The argument is a tuple consisting of "
"the various parameters.  This means that it is possible to use the result of "
"a :meth:`getparams` call as argument to :meth:`setparams`."
msgstr ""

#: ../Doc/library/aifc.rst:203
msgid ""
"Add a mark with the given id (larger than 0), and the given name at the "
"given position.  This method can be called at any time before :meth:`close`."
msgstr ""

#: ../Doc/library/aifc.rst:209
msgid ""
"Return the current write position in the output file.  Useful in combination "
"with :meth:`setmark`."
msgstr ""

#: ../Doc/library/aifc.rst:215
msgid ""
"Write data to the output file.  This method can only be called after the "
"audio file parameters have been set."
msgstr ""

#: ../Doc/library/aifc.rst:221
msgid ""
"Like :meth:`writeframes`, except that the header of the audio file is not "
"updated."
msgstr ""

#: ../Doc/library/aifc.rst:227
msgid ""
"Close the AIFF file.  The header of the file is updated to reflect the "
"actual size of the audio data. After calling this method, the object can no "
"longer be used."
msgstr ""

# e7f95ca95be44cb49ea9ee2ef7b9dea4
#: ../Doc/library/al.rst:3
msgid ":mod:`al` --- Audio functions on the SGI"
msgstr ""

# e7a83e841da04fc78ebf0fb902a3208a
#: ../Doc/library/al.rst:14
msgid ""
"This module provides access to the audio facilities of the SGI Indy and "
"Indigo workstations.  See section 3A of the IRIX man pages for details.  "
"You'll need to read those man pages to understand what these functions do!  "
"Some of the functions are not available in IRIX releases before 4.0.5.  "
"Again, see the manual to check whether a specific function is available on "
"your platform."
msgstr ""

# 7121cf0d4cba4d98a787df4813e22bc9
#: ../Doc/library/al.rst:20
msgid ""
"All functions and methods defined in this module are equivalent to the C "
"functions with ``AL`` prefixed to their name."
msgstr ""

# 8740ac3f3d8a493daaa4a708bfd58338
#: ../Doc/library/al.rst:25
msgid ""
"Symbolic constants from the C header file ``<audio.h>`` are defined in the "
"standard module :mod:`AL`, see below."
msgstr ""

# 1852d62cd3dd435e90b5173283f5fe5a
#: ../Doc/library/al.rst:30
msgid ""
"The current version of the audio library may dump core when bad argument "
"values are passed rather than returning an error status.  Unfortunately, "
"since the precise circumstances under which this may happen are undocumented "
"and hard to check, the Python interface can provide no protection against "
"this kind of problems. (One example is specifying an excessive queue size "
"--- there is no documented upper limit.)"
msgstr ""

#: ../Doc/library/al.rst:37 ../Doc/library/fcntl.rst:23
#: ../Doc/library/syslog.rst:17 ../Doc/library/termios.rst:28
#: ../Doc/library/traceback.rst:20
msgid "The module defines the following functions:"
msgstr ""

# f93e8c138f194ea3979347d30a3c3c9f
#: ../Doc/library/al.rst:42
msgid ""
"The name and direction arguments are strings.  The optional *config* "
"argument is a configuration object as returned by :func:`newconfig`.  The "
"return value is an :dfn:`audio port object`; methods of audio port objects "
"are described below."
msgstr ""

# ab6223afa5624e8d90216d8deed7abb5
#: ../Doc/library/al.rst:49
msgid ""
"The return value is a new :dfn:`audio configuration object`; methods of "
"audio configuration objects are described below."
msgstr ""

# ae9332eabab94716b7cc68f04b7e4b53
#: ../Doc/library/al.rst:55
msgid ""
"The device argument is an integer.  The return value is a list of integers "
"containing the data returned by :c:func:`ALqueryparams`."
msgstr ""

# afaa7ed307814ec4bf55b2ea92524960
#: ../Doc/library/al.rst:61
msgid ""
"The *device* argument is an integer.  The list argument is a list such as "
"returned by :func:`queryparams`; it is modified in place (!)."
msgstr ""

# e50aa4e80acc4231ac35aa272a4f6be4
#: ../Doc/library/al.rst:67
msgid ""
"The *device* argument is an integer.  The *list* argument is a list such as "
"returned by :func:`queryparams`."
msgstr ""

# b116d6c508894a46a30d215959c12138
#: ../Doc/library/al.rst:74
msgid "Configuration Objects"
msgstr ""

# b8bda592ab5c4435a863371cea3464d7
#: ../Doc/library/al.rst:76
msgid ""
"Configuration objects returned by :func:`newconfig` have the following "
"methods:"
msgstr ""

# 97f7f371473640b8be748df75eb935af
#: ../Doc/library/al.rst:81
msgid "Return the queue size."
msgstr ""

# 612380720f2e4780ba27b2c17a1f8011
#: ../Doc/library/al.rst:86
msgid "Set the queue size."
msgstr ""

# 0907cd308d114515aacd88389a24fb1a
#: ../Doc/library/al.rst:91
msgid "Get the sample width."
msgstr ""

# 6faa736fa5c341ada29bca5e7a233ad9
#: ../Doc/library/al.rst:96
msgid "Set the sample width."
msgstr ""

# aa288e4927e5438cac87dc6dfbec7e21
#: ../Doc/library/al.rst:101
msgid "Get the channel count."
msgstr ""

# 73f97efa68964bb48de6dc921677eb60
#: ../Doc/library/al.rst:106
msgid "Set the channel count."
msgstr ""

# 2917e099dea24214beb7e8936eb020c2
#: ../Doc/library/al.rst:111
msgid "Get the sample format."
msgstr ""

# 47c18d60814d42e4a89d021c2b6ff8d1
#: ../Doc/library/al.rst:116
msgid "Set the sample format."
msgstr ""

# 81012d8824dc4d4fbf88ca0a4438dbec
#: ../Doc/library/al.rst:121
msgid "Get the maximum value for floating sample formats."
msgstr ""

# 82ba02ad95154e488e614b6199b837c7
#: ../Doc/library/al.rst:126
msgid "Set the maximum value for floating sample formats."
msgstr ""

# a2d904df3ee245e6a311a7299e4e3bb7
#: ../Doc/library/al.rst:132
msgid "Port Objects"
msgstr ""

# 94112fb6cee64be099b2ec2371d1cc4d
#: ../Doc/library/al.rst:134
msgid ""
"Port objects, as returned by :func:`openport`, have the following methods:"
msgstr ""

# ef7d491d6ae6467190bd5d9f77857d93
#: ../Doc/library/al.rst:139
msgid "Close the port."
msgstr ""

# e71befb5bc824975b85e4c9457d168cd
#: ../Doc/library/al.rst:144
msgid "Return the file descriptor as an int."
msgstr ""

# c49d5fab2395431fb947ab9f3c94a125
#: ../Doc/library/al.rst:149
msgid "Return the number of filled samples."
msgstr ""

# e25a968d67704050bebf7bc0c078c2af
#: ../Doc/library/al.rst:154
msgid "Return the number of fillable samples."
msgstr ""

# 04dfac60530c4b2da766b3ddb4ef4b2c
#: ../Doc/library/al.rst:159
msgid ""
"Read a number of samples from the queue, blocking if necessary. Return the "
"data as a string containing the raw data, (e.g., 2 bytes per sample in big-"
"endian byte order (high byte, low byte) if you have set the sample width to "
"2 bytes)."
msgstr ""

# 9a4ecb264d594640a0a5d4d1dadeb4e9
#: ../Doc/library/al.rst:166
msgid ""
"Write samples into the queue, blocking if necessary.  The samples are "
"encoded as described for the :meth:`readsamps` return value."
msgstr ""

# 3316ebb8a1da4568b3897d39adc56097
#: ../Doc/library/al.rst:172
msgid "Return the 'fill point'."
msgstr ""

# 2689a9b5d16a4c11b186127ed7563c81
#: ../Doc/library/al.rst:177
msgid "Set the 'fill point'."
msgstr ""

# 314582a6048d43d799edce7687f98b5b
#: ../Doc/library/al.rst:182
msgid ""
"Return a configuration object containing the current configuration of the "
"port."
msgstr ""

# b32fbb8ca2f74b26b8c7abc8dddbd658
#: ../Doc/library/al.rst:187
msgid "Set the configuration from the argument, a configuration object."
msgstr ""

# d2e0aad261484384be3de677a4789859
#: ../Doc/library/al.rst:192
msgid "Get status information on last error."
msgstr ""

# a3fc2978ba164d6781700f18173e8e78
#: ../Doc/library/al.rst:196
msgid ":mod:`AL` --- Constants used with the :mod:`al` module"
msgstr ""

# 27e1227a10ca409f9d078b3b662da116
#: ../Doc/library/al.rst:207
msgid ""
"This module defines symbolic constants needed to use the built-in module :"
"mod:`al` (see above); they are equivalent to those defined in the C header "
"file ``<audio.h>`` except that the name prefix ``AL_`` is omitted.  Read the "
"module source for a complete list of the defined names.  Suggested use::"
msgstr ""

#: ../Doc/library/allos.rst:6
msgid "Generic Operating System Services"
msgstr ""

#: ../Doc/library/allos.rst:8
msgid ""
"The modules described in this chapter provide interfaces to operating system "
"features that are available on (almost) all operating systems, such as files "
"and a clock.  The interfaces are generally modeled after the Unix or C "
"interfaces, but they are available on most other systems as well.  Here's an "
"overview:"
msgstr ""

# aaaeaca1cc8c42e88d27c0e8635649ff
#: ../Doc/library/anydbm.rst:2
msgid ":mod:`anydbm` --- Generic access to DBM-style databases"
msgstr ""

# 09e5e5aa57734e4aa7501d11148a5152
#: ../Doc/library/anydbm.rst:9
msgid ""
"The :mod:`anydbm` module has been renamed to :mod:`dbm` in Python 3.  The :"
"term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

# 10565428840b427fab991593f7f66f20
#: ../Doc/library/anydbm.rst:20
msgid ""
":mod:`anydbm` is a generic interface to variants of the DBM database --- :"
"mod:`dbhash` (requires :mod:`bsddb`), :mod:`gdbm`, or :mod:`dbm`.  If none "
"of these modules is installed, the slow-but-simple implementation in module :"
"mod:`dumbdbm` will be used."
msgstr ""

#: ../Doc/library/anydbm.rst:28
msgid "Open the database file *filename* and return a corresponding object."
msgstr ""

# 57be5c8071b940cda6e35b8797f9e10e
#: ../Doc/library/anydbm.rst:30
msgid ""
"If the database file already exists, the :mod:`whichdb` module is used to "
"determine its type and the appropriate module is used; if it does not exist, "
"the first module listed above that can be imported is used."
msgstr ""

#: ../Doc/library/anydbm.rst:34 ../Doc/library/dbm.rst:45
msgid "The optional *flag* argument must be one of these values:"
msgstr ""

#: ../Doc/library/anydbm.rst:37 ../Doc/library/cd.rst:284
#: ../Doc/library/codecs.rst:324 ../Doc/library/compiler.rst:218
#: ../Doc/library/datetime.rst:205 ../Doc/library/dbhash.rst:35
#: ../Doc/library/dbm.rst:48 ../Doc/library/difflib.rst:467
#: ../Doc/library/gdbm.rst:42 ../Doc/library/gdbm.rst:61
#: ../Doc/library/httplib.rst:211 ../Doc/library/imghdr.rst:27
#: ../Doc/library/locale.rst:128 ../Doc/library/logging.handlers.rst:229
#: ../Doc/library/urlparse.rst:93 ../Doc/library/urlparse.rst:197
#: ../Doc/library/warnings.rst:121 ../Doc/library/zipfile.rst:390
msgid "Value"
msgstr ""

#: ../Doc/library/anydbm.rst:39 ../Doc/library/dbhash.rst:37
#: ../Doc/library/dbm.rst:50 ../Doc/library/gdbm.rst:44
#: ../Doc/library/io.rst:89 ../Doc/library/stdtypes.rst:1454
msgid "``'r'``"
msgstr ""

#: ../Doc/library/anydbm.rst:39 ../Doc/library/dbhash.rst:37
#: ../Doc/library/dbm.rst:50 ../Doc/library/gdbm.rst:44
msgid "Open existing database for reading only (default)"
msgstr ""

#: ../Doc/library/anydbm.rst:42 ../Doc/library/dbhash.rst:40
#: ../Doc/library/dbm.rst:53 ../Doc/library/gdbm.rst:47
#: ../Doc/library/io.rst:90
msgid "``'w'``"
msgstr ""

#: ../Doc/library/anydbm.rst:42 ../Doc/library/dbhash.rst:40
#: ../Doc/library/dbm.rst:53 ../Doc/library/gdbm.rst:47
msgid "Open existing database for reading and writing"
msgstr ""

#: ../Doc/library/anydbm.rst:45 ../Doc/library/array.rst:21
#: ../Doc/library/dbhash.rst:43 ../Doc/library/dbm.rst:56
#: ../Doc/library/gdbm.rst:50 ../Doc/library/stdtypes.rst:1451
#: ../Doc/library/string.rst:424
msgid "``'c'``"
msgstr ""

#: ../Doc/library/anydbm.rst:45 ../Doc/library/dbhash.rst:43
#: ../Doc/library/dbm.rst:56 ../Doc/library/gdbm.rst:50
msgid "Open database for reading and writing, creating it if it doesn't exist"
msgstr ""

#: ../Doc/library/anydbm.rst:48 ../Doc/library/dbhash.rst:46
#: ../Doc/library/dbm.rst:59 ../Doc/library/gdbm.rst:53
#: ../Doc/library/string.rst:437 ../Doc/library/string.rst:493
msgid "``'n'``"
msgstr ""

#: ../Doc/library/anydbm.rst:48 ../Doc/library/dbhash.rst:46
#: ../Doc/library/dbm.rst:59 ../Doc/library/gdbm.rst:53
msgid "Always create a new, empty database, open for reading and writing"
msgstr ""

# 3b235f08fcf244ba8122e1204f591b08
#: ../Doc/library/anydbm.rst:52
msgid "If not specified, the default value is ``'r'``."
msgstr ""

# cfebd0f93d8d45d7a734cce1b90e2c3a
# 862b3c4c12094dd6bf621c292be904e5
# 4c47d87dcdc44610bd8c430bf085176e
#: ../Doc/library/anydbm.rst:54 ../Doc/library/dbm.rst:63
#: ../Doc/library/dumbdbm.rst:45
msgid ""
"The optional *mode* argument is the Unix mode of the file, used only when "
"the database has to be created.  It defaults to octal ``0666`` (and will be "
"modified by the prevailing umask)."
msgstr ""

# 33c1e2eb723544dbba6bf500c9bf5ac0
#: ../Doc/library/anydbm.rst:61
msgid ""
"A tuple containing the exceptions that can be raised by each of the "
"supported modules, with a unique exception also named :exc:`anydbm.error` as "
"the first item --- the latter is used when :exc:`anydbm.error` is raised."
msgstr ""

# 0c999fac1ce54322b297ec1c44e1e0d2
#: ../Doc/library/anydbm.rst:65
msgid ""
"The object returned by :func:`.open` supports most of the same functionality "
"as dictionaries; keys and their corresponding values can be stored, "
"retrieved, and deleted, and the :meth:`has_key` and :meth:`keys` methods are "
"available.  Keys and values must always be strings."
msgstr ""

#: ../Doc/library/anydbm.rst:70
msgid ""
"The following example records some hostnames and a corresponding title,  and "
"then prints out the contents of the database::"
msgstr ""

# 139b69e661924eafb87bd1b31b380f77
# 5cf2ff574b7b450e951c97d14778a335
#: ../Doc/library/anydbm.rst:98 ../Doc/library/shelve.rst:186
msgid "BSD ``db`` database interface."
msgstr ""

# 3c29407e3b05495ba366d9706a7adcb5
# 8e8b0fb95f45416f923d11020f56e2ea
#: ../Doc/library/anydbm.rst:101 ../Doc/library/shelve.rst:193
msgid "Standard Unix database interface."
msgstr ""

# 1de6b64bc2aa446fbb9aad0e11d4533a
# d057ecaf7fab4c0eb3cc391cfe0856be
#: ../Doc/library/anydbm.rst:104 ../Doc/library/shelve.rst:196
msgid "Portable implementation of the ``dbm`` interface."
msgstr ""

# 54a194109829404dbf97f005f9fe1149
# 97b9126c7fca41e288cd13f8bbf5ee36
#: ../Doc/library/anydbm.rst:107 ../Doc/library/shelve.rst:199
msgid "GNU database interface, based on the ``dbm`` interface."
msgstr ""

# c72d7f8d01c444aa82abcf8ccbbd5277
#: ../Doc/library/anydbm.rst:110
msgid ""
"General object persistence built on top of  the Python ``dbm`` interface."
msgstr ""

# 6aa76a62c53d47f29fce0aedfea63c60
# 52ed15a20a6148b09a8d5171dd51a596
# 780b2c2cf20d4e2180bf8ca8e6a5c166
# 60f1460afa314d8a9a6a82d058cdf853
# d7ccc5236ff344be9736a05730361642
#: ../Doc/library/anydbm.rst:113 ../Doc/library/dbhash.rst:67
#: ../Doc/library/dbm.rst:77 ../Doc/library/dumbdbm.rst:68
#: ../Doc/library/gdbm.rst:125
msgid "Utility module used to determine the type of an existing database."
msgstr ""

#: ../Doc/library/archiving.rst:6
msgid "Data Compression and Archiving"
msgstr ""

# 07b9ae8d24734464b5ad002a0d400fd4
#: ../Doc/library/archiving.rst:8
msgid ""
"The modules described in this chapter support data compression with the "
"zlib, gzip, and bzip2 algorithms, and  the creation of ZIP- and tar-format "
"archives. See also :ref:`archiving-operations` provided by the :mod:`shutil` "
"module."
msgstr ""

# 29e2f7fdfacc4c7ab75087edd9661fbc
#: ../Doc/library/argparse.rst:2
msgid ""
":mod:`argparse` --- Parser for command-line options, arguments and sub-"
"commands"
msgstr ""

# 1f29146c65cc40d3832d56db95edc19b
#: ../Doc/library/argparse.rst:11
msgid "**Source code:** :source:`Lib/argparse.py`"
msgstr ""

# da9770b7789d4aa0b227b581654b50b0
#: ../Doc/library/argparse.rst:17
msgid ""
"This page contains the API reference information. For a more gentle "
"introduction to Python command-line parsing, have a look at the :ref:"
"`argparse tutorial <argparse-tutorial>`."
msgstr ""

# 620f5d7b0b354b18873b5fdbb3a874ba
#: ../Doc/library/argparse.rst:21
msgid ""
"The :mod:`argparse` module makes it easy to write user-friendly command-line "
"interfaces. The program defines what arguments it requires, and :mod:"
"`argparse` will figure out how to parse those out of :data:`sys.argv`.  The :"
"mod:`argparse` module also automatically generates help and usage messages "
"and issues errors when users give the program invalid arguments."
msgstr ""

#: ../Doc/library/argparse.rst:29 ../Doc/library/cookie.rst:238
#: ../Doc/library/fpectl.rst:73 ../Doc/library/itertools.rst:39
#: ../Doc/library/itertools.rst:49 ../Doc/library/pickle.rst:692
#: ../Doc/library/pyexpat.rst:536 ../Doc/library/readline.rst:204
#: ../Doc/library/sets.rst:193 ../Doc/library/shelve.rst:145
#: ../Doc/library/signal.rst:249 ../Doc/library/socket.rst:860
#: ../Doc/library/termios.rst:84 ../Doc/library/tkinter.rst:441
#: ../Doc/library/uuid.rst:222 ../Doc/library/weakref.rst:329
#: ../Doc/library/xml.etree.elementtree.rst:278
msgid "Example"
msgstr ""

#: ../Doc/library/argparse.rst:31
msgid ""
"The following code is a Python program that takes a list of integers and "
"produces either the sum or the max::"
msgstr ""

#: ../Doc/library/argparse.rst:46
msgid ""
"Assuming the Python code above is saved into a file called ``prog.py``, it "
"can be run at the command line and provides useful help messages::"
msgstr ""

#: ../Doc/library/argparse.rst:61
msgid ""
"When run with the appropriate arguments, it prints either the sum or the max "
"of the command-line integers::"
msgstr ""

#: ../Doc/library/argparse.rst:70
msgid "If invalid arguments are passed in, it will issue an error::"
msgstr ""

#: ../Doc/library/argparse.rst:76
msgid "The following sections walk you through this example."
msgstr ""

#: ../Doc/library/argparse.rst:80
msgid "Creating a parser"
msgstr ""

#: ../Doc/library/argparse.rst:82
msgid ""
"The first step in using the :mod:`argparse` is creating an :class:"
"`ArgumentParser` object::"
msgstr ""

# 478edae810da4722b8b74e74709fe53a
#: ../Doc/library/argparse.rst:87
msgid ""
"The :class:`ArgumentParser` object will hold all the information necessary "
"to parse the command line into Python data types."
msgstr ""

#: ../Doc/library/argparse.rst:92
msgid "Adding arguments"
msgstr ""

#: ../Doc/library/argparse.rst:94
msgid ""
"Filling an :class:`ArgumentParser` with information about program arguments "
"is done by making calls to the :meth:`~ArgumentParser.add_argument` method. "
"Generally, these calls tell the :class:`ArgumentParser` how to take the "
"strings on the command line and turn them into objects.  This information is "
"stored and used when :meth:`~ArgumentParser.parse_args` is called. For "
"example::"
msgstr ""

# 1213864c7588469b8913d3b57a2772ca
#: ../Doc/library/argparse.rst:106
msgid ""
"Later, calling :meth:`~ArgumentParser.parse_args` will return an object with "
"two attributes, ``integers`` and ``accumulate``.  The ``integers`` attribute "
"will be a list of one or more ints, and the ``accumulate`` attribute will be "
"either the :func:`sum` function, if ``--sum`` was specified at the command "
"line, or the :func:`max` function if it was not."
msgstr ""

#: ../Doc/library/argparse.rst:114 ../Doc/library/optparse.rst:1317
msgid "Parsing arguments"
msgstr ""

# 36afa4ac88ea498b9d14ff5dd218be92
#: ../Doc/library/argparse.rst:116
msgid ""
":class:`ArgumentParser` parses arguments through the :meth:`~ArgumentParser."
"parse_args` method.  This will inspect the command line, convert each "
"argument to the appropriate type and then invoke the appropriate action. In "
"most cases, this means a simple :class:`Namespace` object will be built up "
"from attributes parsed out of the command line::"
msgstr ""

# c043d99fc713440695f4a7b8ea2b088e
#: ../Doc/library/argparse.rst:125
msgid ""
"In a script, :meth:`~ArgumentParser.parse_args` will typically be called "
"with no arguments, and the :class:`ArgumentParser` will automatically "
"determine the command-line arguments from :data:`sys.argv`."
msgstr ""

#: ../Doc/library/argparse.rst:131
msgid "ArgumentParser objects"
msgstr ""

#: ../Doc/library/argparse.rst:140
msgid ""
"Create a new :class:`ArgumentParser` object.  Each parameter has its own "
"more detailed description below, but in short they are:"
msgstr ""

#: ../Doc/library/argparse.rst:143
msgid "description_ - Text to display before the argument help."
msgstr ""

#: ../Doc/library/argparse.rst:145
msgid "epilog_ - Text to display after the argument help."
msgstr ""

#: ../Doc/library/argparse.rst:147
msgid "add_help_ - Add a -h/--help option to the parser. (default: ``True``)"
msgstr ""

#: ../Doc/library/argparse.rst:149
msgid ""
"argument_default_ - Set the global default value for arguments. (default: "
"``None``)"
msgstr ""

#: ../Doc/library/argparse.rst:152
msgid ""
"parents_ - A list of :class:`ArgumentParser` objects whose arguments should "
"also be included."
msgstr ""

#: ../Doc/library/argparse.rst:155
msgid ""
"prefix_chars_ - The set of characters that prefix optional arguments. "
"(default: '-')"
msgstr ""

#: ../Doc/library/argparse.rst:158
msgid ""
"fromfile_prefix_chars_ - The set of characters that prefix files from which "
"additional arguments should be read. (default: ``None``)"
msgstr ""

#: ../Doc/library/argparse.rst:161
msgid "formatter_class_ - A class for customizing the help output."
msgstr ""

#: ../Doc/library/argparse.rst:163
msgid ""
"conflict_handler_ - Usually unnecessary, defines strategy for resolving "
"conflicting optionals."
msgstr ""

# cb26ae531535452e997687fb73977eff
#: ../Doc/library/argparse.rst:166
msgid "prog_ - The name of the program (default: ``sys.argv[0]``)"
msgstr ""

#: ../Doc/library/argparse.rst:169
msgid "usage_ - The string describing the program usage (default: generated)"
msgstr ""

#: ../Doc/library/argparse.rst:171 ../Doc/library/argparse.rst:624
msgid "The following sections describe how each of these are used."
msgstr ""

#: ../Doc/library/argparse.rst:175 ../Doc/library/ttk.rst:139
#: ../Doc/library/ttk.rst:167 ../Doc/library/ttk.rst:208
#: ../Doc/library/ttk.rst:222 ../Doc/library/ttk.rst:307
#: ../Doc/library/ttk.rst:387 ../Doc/library/ttk.rst:411
#: ../Doc/library/ttk.rst:573 ../Doc/library/ttk.rst:642
#: ../Doc/library/ttk.rst:711 ../Doc/library/ttk.rst:760
#: ../Doc/library/ttk.rst:786 ../Doc/library/ttk.rst:829
msgid "description"
msgstr ""

#: ../Doc/library/argparse.rst:177
msgid ""
"Most calls to the :class:`ArgumentParser` constructor will use the "
"``description=`` keyword argument.  This argument gives a brief description "
"of what the program does and how it works.  In help messages, the "
"description is displayed between the command-line usage string and the help "
"messages for the various arguments::"
msgstr ""

#: ../Doc/library/argparse.rst:192
msgid ""
"By default, the description will be line-wrapped so that it fits within the "
"given space.  To change this behavior, see the formatter_class_ argument."
msgstr ""

#: ../Doc/library/argparse.rst:197
msgid "epilog"
msgstr ""

#: ../Doc/library/argparse.rst:199
msgid ""
"Some programs like to display additional description of the program after "
"the description of the arguments.  Such text can be specified using the "
"``epilog=`` argument to :class:`ArgumentParser`::"
msgstr ""

#: ../Doc/library/argparse.rst:216
msgid ""
"As with the description_ argument, the ``epilog=`` text is by default line-"
"wrapped, but this behavior can be adjusted with the formatter_class_ "
"argument to :class:`ArgumentParser`."
msgstr ""

#: ../Doc/library/argparse.rst:222
msgid "add_help"
msgstr ""

# 25fddbcd25ad4d579a2920256e37d3ba
#: ../Doc/library/argparse.rst:224
msgid ""
"By default, ArgumentParser objects add an option which simply displays the "
"parser's help message. For example, consider a file named ``myprogram.py`` "
"containing the following code::"
msgstr ""

# 11e6711a35d54ff4a60fc4c7479d4e90
#: ../Doc/library/argparse.rst:233
msgid ""
"If ``-h`` or ``--help`` is supplied at the command line, the ArgumentParser "
"help will be printed::"
msgstr ""

#: ../Doc/library/argparse.rst:243
msgid ""
"Occasionally, it may be useful to disable the addition of this help option. "
"This can be achieved by passing ``False`` as the ``add_help=`` argument to :"
"class:`ArgumentParser`::"
msgstr ""

# 1701f3f8b7f2494e9748787196141751
#: ../Doc/library/argparse.rst:255
msgid ""
"The help option is typically ``-h/--help``. The exception to this is if the "
"``prefix_chars=`` is specified and does not include ``-``, in which case ``-"
"h`` and ``--help`` are not valid options.  In this case, the first character "
"in ``prefix_chars`` is used to prefix the help options::"
msgstr ""

#: ../Doc/library/argparse.rst:270
msgid "prefix_chars"
msgstr ""

# 683f799309774190aa05e80667b61426
#: ../Doc/library/argparse.rst:272
msgid ""
"Most command-line options will use ``-`` as the prefix, e.g. ``-f/--foo``. "
"Parsers that need to support different or additional prefix characters, e.g. "
"for options like ``+f`` or ``/foo``, may specify them using the "
"``prefix_chars=`` argument to the ArgumentParser constructor::"
msgstr ""

# da826192c82c41dca7de3ef1e73c07b8
#: ../Doc/library/argparse.rst:284
msgid ""
"The ``prefix_chars=`` argument defaults to ``'-'``. Supplying a set of "
"characters that does not include ``-`` will cause ``-f/--foo`` options to be "
"disallowed."
msgstr ""

#: ../Doc/library/argparse.rst:290
msgid "fromfile_prefix_chars"
msgstr ""

#: ../Doc/library/argparse.rst:292
msgid ""
"Sometimes, for example when dealing with a particularly long argument lists, "
"it may make sense to keep the list of arguments in a file rather than typing "
"it out at the command line.  If the ``fromfile_prefix_chars=`` argument is "
"given to the :class:`ArgumentParser` constructor, then arguments that start "
"with any of the specified characters will be treated as files, and will be "
"replaced by the arguments they contain.  For example::"
msgstr ""

# 7abb87c7ea2c4d14b658a04aac55a1f6
#: ../Doc/library/argparse.rst:306
msgid ""
"Arguments read from a file must by default be one per line (but see also :"
"meth:`~ArgumentParser.convert_arg_line_to_args`) and are treated as if they "
"were in the same place as the original file referencing argument on the "
"command line.  So in the example above, the expression ``['-f', 'foo', "
"'@args.txt']`` is considered equivalent to the expression ``['-f', 'foo', '-"
"f', 'bar']``."
msgstr ""

#: ../Doc/library/argparse.rst:312
msgid ""
"The ``fromfile_prefix_chars=`` argument defaults to ``None``, meaning that "
"arguments will never be treated as file references."
msgstr ""

#: ../Doc/library/argparse.rst:317
msgid "argument_default"
msgstr ""

# a11b2b372b5a4195ae18bfdd43774c94
#: ../Doc/library/argparse.rst:319
msgid ""
"Generally, argument defaults are specified either by passing a default to :"
"meth:`~ArgumentParser.add_argument` or by calling the :meth:`~ArgumentParser."
"set_defaults` methods with a specific set of name-value pairs.  Sometimes "
"however, it may be useful to specify a single parser-wide default for "
"arguments.  This can be accomplished by passing the ``argument_default=`` "
"keyword argument to :class:`ArgumentParser`.  For example, to globally "
"suppress attribute creation on :meth:`~ArgumentParser.parse_args` calls, we "
"supply ``argument_default=SUPPRESS``::"
msgstr ""

#: ../Doc/library/argparse.rst:338
msgid "parents"
msgstr ""

#: ../Doc/library/argparse.rst:340
msgid ""
"Sometimes, several parsers share a common set of arguments. Rather than "
"repeating the definitions of these arguments, a single parser with all the "
"shared arguments and passed to ``parents=`` argument to :class:"
"`ArgumentParser` can be used.  The ``parents=`` argument takes a list of :"
"class:`ArgumentParser` objects, collects all the positional and optional "
"actions from them, and adds these actions to the :class:`ArgumentParser` "
"object being constructed::"
msgstr ""

#: ../Doc/library/argparse.rst:360
msgid ""
"Note that most parent parsers will specify ``add_help=False``.  Otherwise, "
"the :class:`ArgumentParser` will see two ``-h/--help`` options (one in the "
"parent and one in the child) and raise an error."
msgstr ""

# 4aa9c263088a43a6a49f688d453519fe
#: ../Doc/library/argparse.rst:365
msgid ""
"You must fully initialize the parsers before passing them via ``parents=``. "
"If you change the parent parsers after the child parser, those changes will "
"not be reflected in the child."
msgstr ""

#: ../Doc/library/argparse.rst:371
msgid "formatter_class"
msgstr ""

# 99524bd9014446e78953a5d358242531
#: ../Doc/library/argparse.rst:373
msgid ""
":class:`ArgumentParser` objects allow the help formatting to be customized "
"by specifying an alternate formatting class.  Currently, there are three "
"such classes:"
msgstr ""

# 30e3f9b5052041fb8fe46f29fc86f186
#: ../Doc/library/argparse.rst:381
msgid ""
"The first two allow more control over how textual descriptions are "
"displayed, while the last automatically adds information about argument "
"default values."
msgstr ""

#: ../Doc/library/argparse.rst:384
msgid ""
"By default, :class:`ArgumentParser` objects line-wrap the description_ and "
"epilog_ texts in command-line help messages::"
msgstr ""

# d5d2bbe8d42d46dea8aafa330a88cceb
#: ../Doc/library/argparse.rst:407
msgid ""
"Passing :class:`RawDescriptionHelpFormatter` as ``formatter_class=`` "
"indicates that description_ and epilog_ are already correctly formatted and "
"should not be line-wrapped::"
msgstr ""

# f44fd108776f4711a5b40a4973cd5528
#: ../Doc/library/argparse.rst:433
msgid ""
":class:`RawTextHelpFormatter` maintains whitespace for all sorts of help "
"text, including argument descriptions."
msgstr ""

#: ../Doc/library/argparse.rst:436
msgid ""
"The other formatter class available, :class:`ArgumentDefaultsHelpFormatter`, "
"will add information about the default value of each of the arguments::"
msgstr ""

#: ../Doc/library/argparse.rst:456
msgid "conflict_handler"
msgstr ""

#: ../Doc/library/argparse.rst:458
msgid ""
":class:`ArgumentParser` objects do not allow two actions with the same "
"option string.  By default, :class:`ArgumentParser` objects raises an "
"exception if an attempt is made to create an argument with an option string "
"that is already in use::"
msgstr ""

#: ../Doc/library/argparse.rst:470
msgid ""
"Sometimes (e.g. when using parents_) it may be useful to simply override any "
"older arguments with the same option string.  To get this behavior, the "
"value ``'resolve'`` can be supplied to the ``conflict_handler=`` argument "
"of :class:`ArgumentParser`::"
msgstr ""

#: ../Doc/library/argparse.rst:486
msgid ""
"Note that :class:`ArgumentParser` objects only remove an action if all of "
"its option strings are overridden.  So, in the example above, the old ``-f/--"
"foo`` action is retained as the ``-f`` action, because only the ``--foo`` "
"option string was overridden."
msgstr ""

#: ../Doc/library/argparse.rst:493
msgid "prog"
msgstr ""

#: ../Doc/library/argparse.rst:495
msgid ""
"By default, :class:`ArgumentParser` objects uses ``sys.argv[0]`` to "
"determine how to display the name of the program in help messages.  This "
"default is almost always desirable because it will make the help messages "
"match how the program was invoked on the command line.  For example, "
"consider a file named ``myprogram.py`` with the following code::"
msgstr ""

#: ../Doc/library/argparse.rst:506
msgid ""
"The help for this program will display ``myprogram.py`` as the program name "
"(regardless of where the program was invoked from)::"
msgstr ""

#: ../Doc/library/argparse.rst:523
msgid ""
"To change this default behavior, another value can be supplied using the "
"``prog=`` argument to :class:`ArgumentParser`::"
msgstr ""

#: ../Doc/library/argparse.rst:533
msgid ""
"Note that the program name, whether determined from ``sys.argv[0]`` or from "
"the ``prog=`` argument, is available to help messages using the ``%(prog)s`` "
"format specifier."
msgstr ""

#: ../Doc/library/argparse.rst:550
msgid "usage"
msgstr ""

#: ../Doc/library/argparse.rst:552
msgid ""
"By default, :class:`ArgumentParser` calculates the usage message from the "
"arguments it contains::"
msgstr ""

#: ../Doc/library/argparse.rst:568
msgid ""
"The default message can be overridden with the ``usage=`` keyword argument::"
msgstr ""

#: ../Doc/library/argparse.rst:583
msgid ""
"The ``%(prog)s`` format specifier is available to fill in the program name "
"in your usage messages."
msgstr ""

#: ../Doc/library/argparse.rst:588
msgid "The add_argument() method"
msgstr ""

# 6016e7e2e67d4fa3982c789d2fa498f8
#: ../Doc/library/argparse.rst:594
msgid ""
"Define how a single command-line argument should be parsed.  Each parameter "
"has its own more detailed description below, but in short they are:"
msgstr ""

# 1794f0ff273f48be9f2cac0ca75611ab
#: ../Doc/library/argparse.rst:597
msgid ""
"`name or flags`_ - Either a name or a list of option strings, e.g. ``foo`` "
"or ``-f, --foo``."
msgstr ""

# c406f35849164aa3a4573e84c5dc486e
#: ../Doc/library/argparse.rst:600
msgid ""
"action_ - The basic type of action to be taken when this argument is "
"encountered at the command line."
msgstr ""

#: ../Doc/library/argparse.rst:603
msgid "nargs_ - The number of command-line arguments that should be consumed."
msgstr ""

#: ../Doc/library/argparse.rst:605
msgid ""
"const_ - A constant value required by some action_ and nargs_ selections."
msgstr ""

# 7f27b5e7cd6b4fd588cd85e864353f62
#: ../Doc/library/argparse.rst:607
msgid ""
"default_ - The value produced if the argument is absent from the command "
"line."
msgstr ""

# f46d6ed86576489eb6c667cf26e01468
#: ../Doc/library/argparse.rst:610
msgid ""
"type_ - The type to which the command-line argument should be converted."
msgstr ""

#: ../Doc/library/argparse.rst:612
msgid "choices_ - A container of the allowable values for the argument."
msgstr ""

#: ../Doc/library/argparse.rst:614
msgid ""
"required_ - Whether or not the command-line option may be omitted (optionals "
"only)."
msgstr ""

#: ../Doc/library/argparse.rst:617
msgid "help_ - A brief description of what the argument does."
msgstr ""

#: ../Doc/library/argparse.rst:619
msgid "metavar_ - A name for the argument in usage messages."
msgstr ""

#: ../Doc/library/argparse.rst:621
msgid ""
"dest_ - The name of the attribute to be added to the object returned by :"
"meth:`parse_args`."
msgstr ""

#: ../Doc/library/argparse.rst:628
msgid "name or flags"
msgstr ""

# e3ed1e38f23d46e48e8d9d18dd0fc9e8
#: ../Doc/library/argparse.rst:630
msgid ""
"The :meth:`~ArgumentParser.add_argument` method must know whether an "
"optional argument, like ``-f`` or ``--foo``, or a positional argument, like "
"a list of filenames, is expected.  The first arguments passed to :meth:"
"`~ArgumentParser.add_argument` must therefore be either a series of flags, "
"or a simple argument name.  For example, an optional argument could be "
"created like::"
msgstr ""

#: ../Doc/library/argparse.rst:639
msgid "while a positional argument could be created like::"
msgstr ""

# f6407ed7f4844ae28e79128c7aa488a7
#: ../Doc/library/argparse.rst:643
msgid ""
"When :meth:`~ArgumentParser.parse_args` is called, optional arguments will "
"be identified by the ``-`` prefix, and the remaining arguments will be "
"assumed to be positional::"
msgstr ""

#: ../Doc/library/argparse.rst:660 ../Doc/library/tarfile.rst:50
msgid "action"
msgstr ""

# 090f45bba86b4f238cbdcf79feb06400
#: ../Doc/library/argparse.rst:662
msgid ""
":class:`ArgumentParser` objects associate command-line arguments with "
"actions.  These actions can do just about anything with the command-line "
"arguments associated with them, though most actions simply add an attribute "
"to the object returned by :meth:`~ArgumentParser.parse_args`.  The "
"``action`` keyword argument specifies how the command-line arguments should "
"be handled. The supported actions are:"
msgstr ""

# 9c476290af3c4041bd66e6077183fbdb
#: ../Doc/library/argparse.rst:668
msgid ""
"``'store'`` - This just stores the argument's value.  This is the default "
"action. For example::"
msgstr ""

# 9b638539cfc64d8fa0916f0804ab2acf
#: ../Doc/library/argparse.rst:676
msgid ""
"``'store_const'`` - This stores the value specified by the const_ keyword "
"argument.  (Note that the const_ keyword argument defaults to the rather "
"unhelpful ``None``.)  The ``'store_const'`` action is most commonly used "
"with optional arguments that specify some sort of flag.  For example::"
msgstr ""

# ff9d52f42f4d4de5b090403712de7359
#: ../Doc/library/argparse.rst:686
msgid ""
"``'store_true'`` and ``'store_false'`` - These are special cases of "
"``'store_const'`` using for storing the values ``True`` and ``False`` "
"respectively.  In addition, they create default values of *False* and *True* "
"respectively.  For example::"
msgstr ""

#: ../Doc/library/argparse.rst:698
msgid ""
"``'append'`` - This stores a list, and appends each argument value to the "
"list.  This is useful to allow an option to be specified multiple times. "
"Example usage::"
msgstr ""

#: ../Doc/library/argparse.rst:707
msgid ""
"``'append_const'`` - This stores a list, and appends the value specified by "
"the const_ keyword argument to the list.  (Note that the const_ keyword "
"argument defaults to ``None``.)  The ``'append_const'`` action is typically "
"useful when multiple arguments need to store constants to the same list. For "
"example::"
msgstr ""

# af512779fb134697821fd765132d221c
#: ../Doc/library/argparse.rst:719
msgid ""
"``'count'`` - This counts the number of times a keyword argument occurs. For "
"example, this is useful for increasing verbosity levels::"
msgstr ""

# c63505346237403bbd8ecc44793b4945
#: ../Doc/library/argparse.rst:727
msgid ""
"``'help'`` - This prints a complete help message for all the options in the "
"current parser and then exits. By default a help action is automatically "
"added to the parser. See :class:`ArgumentParser` for details of how the "
"output is created."
msgstr ""

# 45188950e8234d9198da94601bb36679
#: ../Doc/library/argparse.rst:732
msgid ""
"``'version'`` - This expects a ``version=`` keyword argument in the :meth:"
"`~ArgumentParser.add_argument` call, and prints version information and "
"exits when invoked::"
msgstr ""

#: ../Doc/library/argparse.rst:742
msgid ""
"You can also specify an arbitrary action by passing an object that "
"implements the Action API.  The easiest way to do this is to extend :class:"
"`argparse.Action`, supplying an appropriate ``__call__`` method.  The "
"``__call__`` method should accept four parameters:"
msgstr ""

#: ../Doc/library/argparse.rst:747
msgid "``parser`` - The ArgumentParser object which contains this action."
msgstr ""

# f42ea61fb83f444c959d4cd3dc9a509c
#: ../Doc/library/argparse.rst:749
msgid ""
"``namespace`` - The :class:`Namespace` object that will be returned by :meth:"
"`~ArgumentParser.parse_args`.  Most actions add an attribute to this object."
msgstr ""

# 023b77cb0c684449b313255abbf388d0
#: ../Doc/library/argparse.rst:753
msgid ""
"``values`` - The associated command-line arguments, with any type "
"conversions applied.  (Type conversions are specified with the type_ keyword "
"argument to :meth:`~ArgumentParser.add_argument`.)"
msgstr ""

#: ../Doc/library/argparse.rst:757
msgid ""
"``option_string`` - The option string that was used to invoke this action. "
"The ``option_string`` argument is optional, and will be absent if the action "
"is associated with a positional argument."
msgstr ""

#: ../Doc/library/argparse.rst:761
msgid "An example of a custom action::"
msgstr ""

#: ../Doc/library/argparse.rst:779
msgid "nargs"
msgstr ""

# ed73cdeeba884c09b282ad75bf2be4a0
#: ../Doc/library/argparse.rst:781
msgid ""
"ArgumentParser objects usually associate a single command-line argument with "
"a single action to be taken.  The ``nargs`` keyword argument associates a "
"different number of command-line arguments with a single action.  The "
"supported values are:"
msgstr ""

# 2fd1729499864b89983444420ca0d25c
#: ../Doc/library/argparse.rst:786
msgid ""
"``N`` (an integer).  ``N`` arguments from the command line will be gathered "
"together into a list.  For example::"
msgstr ""

# 8dbe7cceafb440ca872372f92875ccf6
#: ../Doc/library/argparse.rst:795
msgid ""
"Note that ``nargs=1`` produces a list of one item.  This is different from "
"the default, in which the item is produced by itself."
msgstr ""

# 7266fa8325bb43d4ab5cc3e3daacfca0
#: ../Doc/library/argparse.rst:798
msgid ""
"``'?'``. One argument will be consumed from the command line if possible, "
"and produced as a single item.  If no command-line argument is present, the "
"value from default_ will be produced.  Note that for optional arguments, "
"there is an additional case - the option string is present but not followed "
"by a command-line argument.  In this case the value from const_ will be "
"produced.  Some examples to illustrate this::"
msgstr ""

#: ../Doc/library/argparse.rst:815
msgid ""
"One of the more common uses of ``nargs='?'`` is to allow optional input and "
"output files::"
msgstr ""

# 81081a2783f54511bfc9f975f650e177
#: ../Doc/library/argparse.rst:830
msgid ""
"``'*'``.  All command-line arguments present are gathered into a list.  Note "
"that it generally doesn't make much sense to have more than one positional "
"argument with ``nargs='*'``, but multiple optional arguments with "
"``nargs='*'`` is possible.  For example::"
msgstr ""

# 97a21f8f00f040a1a5dfc44d4c17f282
#: ../Doc/library/argparse.rst:842
msgid ""
"``'+'``. Just like ``'*'``, all command-line args present are gathered into "
"a list.  Additionally, an error message will be generated if there wasn't at "
"least one command-line argument present.  For example::"
msgstr ""

# a84aa3ca5a3241f8b09c5fd46e5a927e
#: ../Doc/library/argparse.rst:854
msgid ""
"``argparse.REMAINDER``.  All the remaining command-line arguments are "
"gathered into a list.  This is commonly useful for command line utilities "
"that dispatch to other command line utilities::"
msgstr ""

# ef07b99c9fc64462bc2d4ec93c91c8b4
#: ../Doc/library/argparse.rst:865
msgid ""
"If the ``nargs`` keyword argument is not provided, the number of arguments "
"consumed is determined by the action_.  Generally this means a single "
"command-line argument will be consumed and a single item (not a list) will "
"be produced."
msgstr ""

#: ../Doc/library/argparse.rst:871
msgid "const"
msgstr ""

# a960f5589b70407cb0d0853eb6a7aad9
#: ../Doc/library/argparse.rst:873
msgid ""
"The ``const`` argument of :meth:`~ArgumentParser.add_argument` is used to "
"hold constant values that are not read from the command line but are "
"required for the various :class:`ArgumentParser` actions.  The two most "
"common uses of it are:"
msgstr ""

# 9319bc743a3b4375aa5b65b77011251d
#: ../Doc/library/argparse.rst:877
msgid ""
"When :meth:`~ArgumentParser.add_argument` is called with "
"``action='store_const'`` or ``action='append_const'``.  These actions add "
"the ``const`` value to one of the attributes of the object returned by :meth:"
"`~ArgumentParser.parse_args`. See the action_ description for examples."
msgstr ""

# d6f9213cbdcc4f5c8599d73daa9c6364
#: ../Doc/library/argparse.rst:882
msgid ""
"When :meth:`~ArgumentParser.add_argument` is called with option strings "
"(like ``-f`` or ``--foo``) and ``nargs='?'``.  This creates an optional "
"argument that can be followed by zero or one command-line arguments. When "
"parsing the command line, if the option string is encountered with no "
"command-line argument following it, the value of ``const`` will be assumed "
"instead. See the nargs_ description for examples."
msgstr ""

#: ../Doc/library/argparse.rst:889
msgid "The ``const`` keyword argument defaults to ``None``."
msgstr ""

#: ../Doc/library/argparse.rst:893
msgid "default"
msgstr ""

# 7df3b68af239487d90af211d9550cfd7
#: ../Doc/library/argparse.rst:895
msgid ""
"All optional arguments and some positional arguments may be omitted at the "
"command line.  The ``default`` keyword argument of :meth:`~ArgumentParser."
"add_argument`, whose value defaults to ``None``, specifies what value should "
"be used if the command-line argument is not present. For optional arguments, "
"the ``default`` value is used when the option string was not present at the "
"command line::"
msgstr ""

# 644eb14b88cc4b7fa822ae72eb15af44
#: ../Doc/library/argparse.rst:909
msgid ""
"For positional arguments with nargs_ equal to ``?`` or ``*``, the "
"``default`` value is used when no command-line argument was present::"
msgstr ""

#: ../Doc/library/argparse.rst:920
msgid ""
"Providing ``default=argparse.SUPPRESS`` causes no attribute to be added if "
"the command-line argument was not present.::"
msgstr ""

#: ../Doc/library/argparse.rst:932
msgid "type"
msgstr ""

# ada60444e5e64795bfedaabd8e71393b
#: ../Doc/library/argparse.rst:934
msgid ""
"By default, :class:`ArgumentParser` objects read command-line arguments in "
"as simple strings. However, quite often the command-line string should "
"instead be interpreted as another type, like a :class:`float` or :class:"
"`int`.  The ``type`` keyword argument of :meth:`~ArgumentParser."
"add_argument` allows any necessary type-checking and type conversions to be "
"performed.  Common built-in types and functions can be used directly as the "
"value of the ``type`` argument::"
msgstr ""

#: ../Doc/library/argparse.rst:947
msgid ""
"To ease the use of various types of files, the argparse module provides the "
"factory FileType which takes the ``mode=`` and ``bufsize=`` arguments of the "
"``file`` object.  For example, ``FileType('w')`` can be used to create a "
"writable file::"
msgstr ""

# f3d73da3512d4690b61541b4d31021c9
#: ../Doc/library/argparse.rst:957
msgid ""
"``type=`` can take any callable that takes a single string argument and "
"returns the converted value::"
msgstr ""

#: ../Doc/library/argparse.rst:976
msgid ""
"The choices_ keyword argument may be more convenient for type checkers that "
"simply check against a range of values::"
msgstr ""

#: ../Doc/library/argparse.rst:987
msgid "See the choices_ section for more details."
msgstr ""

#: ../Doc/library/argparse.rst:991
msgid "choices"
msgstr ""

# 68b064303be84b139fc81edf4030b218
#: ../Doc/library/argparse.rst:993
msgid ""
"Some command-line arguments should be selected from a restricted set of "
"values. These can be handled by passing a container object as the "
"``choices`` keyword argument to :meth:`~ArgumentParser.add_argument`.  When "
"the command line is parsed, argument values will be checked, and an error "
"message will be displayed if the argument was not one of the acceptable "
"values::"
msgstr ""

#: ../Doc/library/argparse.rst:1007
msgid ""
"Note that inclusion in the ``choices`` container is checked after any type_ "
"conversions have been performed, so the type of the objects in the "
"``choices`` container should match the type_ specified::"
msgstr ""

#: ../Doc/library/argparse.rst:1019
msgid ""
"Any object that supports the ``in`` operator can be passed as the "
"``choices`` value, so :class:`dict` objects, :class:`set` objects, custom "
"containers, etc. are all supported."
msgstr ""

#: ../Doc/library/argparse.rst:1025
msgid "required"
msgstr ""

# 963017f62e1e4a16a327e54ba2626bf9
#: ../Doc/library/argparse.rst:1027
msgid ""
"In general, the :mod:`argparse` module assumes that flags like ``-f`` and "
"``--bar`` indicate *optional* arguments, which can always be omitted at the "
"command line. To make an option *required*, ``True`` can be specified for "
"the ``required=`` keyword argument to :meth:`~ArgumentParser.add_argument`::"
msgstr ""

# e052ba43dc9342f48c1a7bce75ac3a53
#: ../Doc/library/argparse.rst:1040
msgid ""
"As the example shows, if an option is marked as ``required``, :meth:"
"`~ArgumentParser.parse_args` will report an error if that option is not "
"present at the command line."
msgstr ""

#: ../Doc/library/argparse.rst:1046
msgid ""
"Required options are generally considered bad form because users expect "
"*options* to be *optional*, and thus they should be avoided when possible."
msgstr ""

#: ../Doc/library/argparse.rst:1051
msgid "help"
msgstr ""

# 339202bc47ec44eda8cbcb37e09a4c73
#: ../Doc/library/argparse.rst:1053
msgid ""
"The ``help`` value is a string containing a brief description of the "
"argument. When a user requests help (usually by using ``-h`` or ``--help`` "
"at the command line), these ``help`` descriptions will be displayed with "
"each argument::"
msgstr ""

# 6c175ebbce79484593c0b7c7f771b823
#: ../Doc/library/argparse.rst:1073
msgid ""
"The ``help`` strings can include various format specifiers to avoid "
"repetition of things like the program name or the argument default_.  The "
"available specifiers include the program name, ``%(prog)s`` and most keyword "
"arguments to :meth:`~ArgumentParser.add_argument`, e.g. ``%(default)s``, ``"
"%(type)s``, etc.::"
msgstr ""

# cb529ff6df41455cbce4bbd80d518069
#: ../Doc/library/argparse.rst:1090
msgid ""
":mod:`argparse` supports silencing the help entry for certain options, by "
"setting the ``help`` value to ``argparse.SUPPRESS``::"
msgstr ""

#: ../Doc/library/argparse.rst:1103
msgid "metavar"
msgstr ""

# 191bc85c04ac49a9aab5b7456414b57d
#: ../Doc/library/argparse.rst:1105
msgid ""
"When :class:`ArgumentParser` generates help messages, it need some way to "
"refer to each expected argument.  By default, ArgumentParser objects use the "
"dest_ value as the \"name\" of each object.  By default, for positional "
"argument actions, the dest_ value is used directly, and for optional "
"argument actions, the dest_ value is uppercased.  So, a single positional "
"argument with ``dest='bar'`` will be referred to as ``bar``. A single "
"optional argument ``--foo`` that should be followed by a single command-line "
"argument will be referred to as ``FOO``.  An example::"
msgstr ""

#: ../Doc/library/argparse.rst:1129
msgid "An alternative name can be specified with ``metavar``::"
msgstr ""

# 85235280423346b7b9570fa96269c7a6
#: ../Doc/library/argparse.rst:1146
msgid ""
"Note that ``metavar`` only changes the *displayed* name - the name of the "
"attribute on the :meth:`~ArgumentParser.parse_args` object is still "
"determined by the dest_ value."
msgstr ""

#: ../Doc/library/argparse.rst:1150
msgid ""
"Different values of ``nargs`` may cause the metavar to be used multiple "
"times. Providing a tuple to ``metavar`` specifies a different display for "
"each of the arguments::"
msgstr ""

#: ../Doc/library/argparse.rst:1167
msgid "dest"
msgstr ""

# f7173e46811d486297a2edf3ae026425
#: ../Doc/library/argparse.rst:1169
msgid ""
"Most :class:`ArgumentParser` actions add some value as an attribute of the "
"object returned by :meth:`~ArgumentParser.parse_args`.  The name of this "
"attribute is determined by the ``dest`` keyword argument of :meth:"
"`~ArgumentParser.add_argument`.  For positional argument actions, ``dest`` "
"is normally supplied as the first argument to :meth:`~ArgumentParser."
"add_argument`::"
msgstr ""

# ddbe80005ba0446b94879c97c8d093ab
#: ../Doc/library/argparse.rst:1181
msgid ""
"For optional argument actions, the value of ``dest`` is normally inferred "
"from the option strings.  :class:`ArgumentParser` generates the value of "
"``dest`` by taking the first long option string and stripping away the "
"initial ``--`` string.  If no long option strings were supplied, ``dest`` "
"will be derived from the first short option string by stripping the initial "
"``-`` character.  Any internal ``-`` characters will be converted to ``_`` "
"characters to make sure the string is a valid attribute name.  The examples "
"below illustrate this behavior::"
msgstr ""

#: ../Doc/library/argparse.rst:1198
msgid "``dest`` allows a custom attribute name to be provided::"
msgstr ""

#: ../Doc/library/argparse.rst:1207
msgid "The parse_args() method"
msgstr ""

#: ../Doc/library/argparse.rst:1211
msgid ""
"Convert argument strings to objects and assign them as attributes of the "
"namespace.  Return the populated namespace."
msgstr ""

#: ../Doc/library/argparse.rst:1214
msgid ""
"Previous calls to :meth:`add_argument` determine exactly what objects are "
"created and how they are assigned. See the documentation for :meth:"
"`add_argument` for details."
msgstr ""

# 133a67d26b4845178ac83a868825f73f
#: ../Doc/library/argparse.rst:1218
msgid ""
"By default, the argument strings are taken from :data:`sys.argv`, and a new "
"empty :class:`Namespace` object is created for the attributes."
msgstr ""

#: ../Doc/library/argparse.rst:1223
msgid "Option value syntax"
msgstr ""

# b4cdba99e9044dd5a7e159e63864b6ae
#: ../Doc/library/argparse.rst:1225
msgid ""
"The :meth:`~ArgumentParser.parse_args` method supports several ways of "
"specifying the value of an option (if it takes one).  In the simplest case, "
"the option and its value are passed as two separate arguments::"
msgstr ""

# b1112ebea0f1464ab77cb3250ca29b22
#: ../Doc/library/argparse.rst:1237
msgid ""
"For long options (options with names longer than a single character), the "
"option and value can also be passed as a single command-line argument, using "
"``=`` to separate them::"
msgstr ""

#: ../Doc/library/argparse.rst:1244
msgid ""
"For short options (options only one character long), the option and its "
"value can be concatenated::"
msgstr ""

#: ../Doc/library/argparse.rst:1250
msgid ""
"Several short options can be joined together, using only a single ``-`` "
"prefix, as long as only the last option (or none of them) requires a value::"
msgstr ""

#: ../Doc/library/argparse.rst:1262
msgid "Invalid arguments"
msgstr ""

# 8611b20fa1ed41149c345aa7e40dadc7
#: ../Doc/library/argparse.rst:1264
msgid ""
"While parsing the command line, :meth:`~ArgumentParser.parse_args` checks "
"for a variety of errors, including ambiguous options, invalid types, invalid "
"options, wrong number of positional arguments, etc.  When it encounters such "
"an error, it exits and prints the error along with a usage message::"
msgstr ""

# 89e22e94fc1b4c3eaed6ff744611eb5d
#: ../Doc/library/argparse.rst:1290
msgid "Arguments containing ``-``"
msgstr ""

# c6b540e3570840d4ae0769d8c0c52c09
#: ../Doc/library/argparse.rst:1292
msgid ""
"The :meth:`~ArgumentParser.parse_args` method attempts to give errors "
"whenever the user has clearly made a mistake, but some situations are "
"inherently ambiguous.  For example, the command-line argument ``-1`` could "
"either be an attempt to specify an option or an attempt to provide a "
"positional argument. The :meth:`~ArgumentParser.parse_args` method is "
"cautious here: positional arguments may only begin with ``-`` if they look "
"like negative numbers and there are no options in the parser that look like "
"negative numbers::"
msgstr ""

# a0bc54f1d26d47c3ad92b5a6b67bf2a5
#: ../Doc/library/argparse.rst:1330
msgid ""
"If you have positional arguments that must begin with ``-`` and don't look "
"like negative numbers, you can insert the pseudo-argument ``'--'`` which "
"tells :meth:`~ArgumentParser.parse_args` that everything after that is a "
"positional argument::"
msgstr ""

#: ../Doc/library/argparse.rst:1340
msgid "Argument abbreviations"
msgstr ""

# 451591a7c0784ba0b3fed79952697026
#: ../Doc/library/argparse.rst:1342
msgid ""
"The :meth:`~ArgumentParser.parse_args` method allows long options to be "
"abbreviated if the abbreviation is unambiguous::"
msgstr ""

#: ../Doc/library/argparse.rst:1356
msgid ""
"An error is produced for arguments that could produce more than one options."
msgstr ""

#: ../Doc/library/argparse.rst:1360
msgid "Beyond ``sys.argv``"
msgstr ""

# b60b2bb7257342a2bd4b94c2472d2a67
#: ../Doc/library/argparse.rst:1362
msgid ""
"Sometimes it may be useful to have an ArgumentParser parse arguments other "
"than those of :data:`sys.argv`.  This can be accomplished by passing a list "
"of strings to :meth:`~ArgumentParser.parse_args`.  This is useful for "
"testing at the interactive prompt::"
msgstr ""

# 9e1587608af64d74b244def358177fb5
#: ../Doc/library/argparse.rst:1381
msgid "The Namespace object"
msgstr ""

# 62832e6ee2f6465893b9a6acc19a7ba4
#: ../Doc/library/argparse.rst:1385
msgid ""
"Simple class used by default by :meth:`~ArgumentParser.parse_args` to create "
"an object holding attributes and return it."
msgstr ""

# bfe6c90d849f4320aeaa679aaa803f87
#: ../Doc/library/argparse.rst:1388
msgid ""
"This class is deliberately simple, just an :class:`object` subclass with a "
"readable string representation. If you prefer to have dict-like view of the "
"attributes, you can use the standard Python idiom, :func:`vars`::"
msgstr ""

# 7216034e265e42cca9447b9ed2ca1a6b
#: ../Doc/library/argparse.rst:1398
msgid ""
"It may also be useful to have an :class:`ArgumentParser` assign attributes "
"to an already existing object, rather than a new :class:`Namespace` object.  "
"This can be achieved by specifying the ``namespace=`` keyword argument::"
msgstr ""

#: ../Doc/library/argparse.rst:1414
msgid "Other utilities"
msgstr ""

#: ../Doc/library/argparse.rst:1417
msgid "Sub-commands"
msgstr ""

# 1a1de0e2365f43f8a4e937668c8ab727
#: ../Doc/library/argparse.rst:1421
msgid ""
"Many programs split up their functionality into a number of sub-commands, "
"for example, the ``svn`` program can invoke sub-commands like ``svn "
"checkout``, ``svn update``, and ``svn commit``.  Splitting up functionality "
"this way can be a particularly good idea when a program performs several "
"different functions which require different kinds of command-line "
"arguments. :class:`ArgumentParser` supports the creation of such sub-"
"commands with the :meth:`add_subparsers` method.  The :meth:`add_subparsers` "
"method is normally called with no arguments and returns an special action "
"object.  This object has a single method, :meth:`~ArgumentParser."
"add_parser`, which takes a command name and any :class:`ArgumentParser` "
"constructor arguments, and returns an :class:`ArgumentParser` object that "
"can be modified as usual."
msgstr ""

#: ../Doc/library/argparse.rst:1433
msgid "Some example usage::"
msgstr ""

# 53b9600d19ff418e800c7948171d4f42
#: ../Doc/library/argparse.rst:1454
msgid ""
"Note that the object returned by :meth:`parse_args` will only contain "
"attributes for the main parser and the subparser that was selected by the "
"command line (and not any other subparsers).  So in the example above, when "
"the ``a`` command is specified, only the ``foo`` and ``bar`` attributes are "
"present, and when the ``b`` command is specified, only the ``foo`` and "
"``baz`` attributes are present."
msgstr ""

# d5e4f5d81594406caadc9bebd14c3468
#: ../Doc/library/argparse.rst:1461
msgid ""
"Similarly, when a help message is requested from a subparser, only the help "
"for that particular parser will be printed.  The help message will not "
"include parent parser or sibling parser messages.  (A help message for each "
"subparser command, however, can be given by supplying the ``help=`` argument "
"to :meth:`add_parser` as above.)"
msgstr ""

#: ../Doc/library/argparse.rst:1497
msgid ""
"The :meth:`add_subparsers` method also supports ``title`` and "
"``description`` keyword arguments.  When either is present, the subparser's "
"commands will appear in their own group in the help output.  For example::"
msgstr ""

#: ../Doc/library/argparse.rst:1519
msgid ""
"One particularly effective way of handling sub-commands is to combine the "
"use of the :meth:`add_subparsers` method with calls to :meth:`set_defaults` "
"so that each subparser knows which Python function it should execute.  For "
"example::"
msgstr ""

# 51812daa8b174e07bdff69608a8682f9
#: ../Doc/library/argparse.rst:1556
msgid ""
"This way, you can let :meth:`parse_args` do the job of calling the "
"appropriate function after argument parsing is complete.  Associating "
"functions with actions like this is typically the easiest way to handle the "
"different actions for each of your subparsers.  However, if it is necessary "
"to check the name of the subparser that was invoked, the ``dest`` keyword "
"argument to the :meth:`add_subparsers` call will work::"
msgstr ""

#: ../Doc/library/argparse.rst:1574
msgid "FileType objects"
msgstr ""

# b1dce9648b9047c18eb7c13db129a6f4
#: ../Doc/library/argparse.rst:1578
msgid ""
"The :class:`FileType` factory creates objects that can be passed to the type "
"argument of :meth:`ArgumentParser.add_argument`.  Arguments that have :class:"
"`FileType` objects as their type will open command-line arguments as files "
"with the requested modes and buffer sizes::"
msgstr ""

# db32ce7385234ffc96d2f3648d1face0
#: ../Doc/library/argparse.rst:1588
msgid ""
"FileType objects understand the pseudo-argument ``'-'`` and automatically "
"convert this into ``sys.stdin`` for readable :class:`FileType` objects and "
"``sys.stdout`` for writable :class:`FileType` objects::"
msgstr ""

#: ../Doc/library/argparse.rst:1599
msgid "Argument groups"
msgstr ""

#: ../Doc/library/argparse.rst:1603
msgid ""
"By default, :class:`ArgumentParser` groups command-line arguments into "
"\"positional arguments\" and \"optional arguments\" when displaying help "
"messages. When there is a better conceptual grouping of arguments than this "
"default one, appropriate groups can be created using the :meth:"
"`add_argument_group` method::"
msgstr ""

# 6e18d777d7374ad08598e3ae234bae4c
#: ../Doc/library/argparse.rst:1620
msgid ""
"The :meth:`add_argument_group` method returns an argument group object which "
"has an :meth:`~ArgumentParser.add_argument` method just like a regular :"
"class:`ArgumentParser`.  When an argument is added to the group, the parser "
"treats it just like a normal argument, but displays the argument in a "
"separate group for help messages.  The :meth:`add_argument_group` method "
"accepts *title* and *description* arguments which can be used to customize "
"this display::"
msgstr ""

# 693138a665234e648acc0088a50aaba6
#: ../Doc/library/argparse.rst:1646
msgid ""
"Note that any arguments not in your user-defined groups will end up back in "
"the usual \"positional arguments\" and \"optional arguments\" sections."
msgstr ""

#: ../Doc/library/argparse.rst:1651
msgid "Mutual exclusion"
msgstr ""

# 1e3a8c4b7b044b64b680b694f7a7918d
#: ../Doc/library/argparse.rst:1655
msgid ""
"Create a mutually exclusive group. :mod:`argparse` will make sure that only "
"one of the arguments in the mutually exclusive group was present on the "
"command line::"
msgstr ""

# 52cd312e6e944bc0bf0a0fc0717a36b0
#: ../Doc/library/argparse.rst:1671
msgid ""
"The :meth:`add_mutually_exclusive_group` method also accepts a *required* "
"argument, to indicate that at least one of the mutually exclusive arguments "
"is required::"
msgstr ""

# ee2ad3ccb7644047a275f84b948dcad9
#: ../Doc/library/argparse.rst:1683
msgid ""
"Note that currently mutually exclusive argument groups do not support the "
"*title* and *description* arguments of :meth:`~ArgumentParser."
"add_argument_group`."
msgstr ""

#: ../Doc/library/argparse.rst:1689
msgid "Parser defaults"
msgstr ""

# 3d0c7c3cca4b4e4783931f98764dc259
#: ../Doc/library/argparse.rst:1693
msgid ""
"Most of the time, the attributes of the object returned by :meth:"
"`parse_args` will be fully determined by inspecting the command-line "
"arguments and the argument actions.  :meth:`set_defaults` allows some "
"additional attributes that are determined without any inspection of the "
"command line to be added::"
msgstr ""

#: ../Doc/library/argparse.rst:1705
msgid ""
"Note that parser-level defaults always override argument-level defaults::"
msgstr ""

#: ../Doc/library/argparse.rst:1713
msgid ""
"Parser-level defaults can be particularly useful when working with multiple "
"parsers.  See the :meth:`~ArgumentParser.add_subparsers` method for an "
"example of this type."
msgstr ""

#: ../Doc/library/argparse.rst:1719
msgid ""
"Get the default value for a namespace attribute, as set by either :meth:"
"`~ArgumentParser.add_argument` or by :meth:`~ArgumentParser.set_defaults`::"
msgstr ""

#: ../Doc/library/argparse.rst:1730
msgid "Printing help"
msgstr ""

# f8da02f693d14bc49bab9c092758d4a7
#: ../Doc/library/argparse.rst:1732
msgid ""
"In most typical applications, :meth:`~ArgumentParser.parse_args` will take "
"care of formatting and printing any usage or error messages.  However, "
"several formatting methods are available:"
msgstr ""

# da3b28090d5a41e0976d62a2ea68417f
#: ../Doc/library/argparse.rst:1738
msgid ""
"Print a brief description of how the :class:`ArgumentParser` should be "
"invoked on the command line.  If *file* is ``None``, :data:`sys.stdout` is "
"assumed."
msgstr ""

# 3b748ecedbcf43108f3c63bcffa2daae
#: ../Doc/library/argparse.rst:1744
msgid ""
"Print a help message, including the program usage and information about the "
"arguments registered with the :class:`ArgumentParser`.  If *file* is "
"``None``, :data:`sys.stdout` is assumed."
msgstr ""

#: ../Doc/library/argparse.rst:1748
msgid ""
"There are also variants of these methods that simply return a string instead "
"of printing it:"
msgstr ""

#: ../Doc/library/argparse.rst:1753
msgid ""
"Return a string containing a brief description of how the :class:"
"`ArgumentParser` should be invoked on the command line."
msgstr ""

#: ../Doc/library/argparse.rst:1758
msgid ""
"Return a string containing a help message, including the program usage and "
"information about the arguments registered with the :class:`ArgumentParser`."
msgstr ""

#: ../Doc/library/argparse.rst:1763
msgid "Partial parsing"
msgstr ""

# 1edcb5e236a841949b2383ab9533852f
#: ../Doc/library/argparse.rst:1767
msgid ""
"Sometimes a script may only parse a few of the command-line arguments, "
"passing the remaining arguments on to another script or program. In these "
"cases, the :meth:`~ArgumentParser.parse_known_args` method can be useful.  "
"It works much like :meth:`~ArgumentParser.parse_args` except that it does "
"not produce an error when extra arguments are present.  Instead, it returns "
"a two item tuple containing the populated namespace and the list of "
"remaining argument strings."
msgstr ""

#: ../Doc/library/argparse.rst:1784
msgid "Customizing file parsing"
msgstr ""

# 931397bffce643f3b83f3f6ebdb805b8
#: ../Doc/library/argparse.rst:1788
msgid ""
"Arguments that are read from a file (see the *fromfile_prefix_chars* keyword "
"argument to the :class:`ArgumentParser` constructor) are read one argument "
"per line. :meth:`convert_arg_line_to_args` can be overriden for fancier "
"reading."
msgstr ""

# 482aa70b3a7e4fe49355b2a31d5bbb02
#: ../Doc/library/argparse.rst:1793
msgid ""
"This method takes a single argument *arg_line* which is a string read from "
"the argument file.  It returns a list of arguments parsed from this string. "
"The method is called once per line read from the argument file, in order."
msgstr ""

#: ../Doc/library/argparse.rst:1797
msgid ""
"A useful override of this method is one that treats each space-separated "
"word as an argument::"
msgstr ""

# 36bc56776fb74cb4bc32534b22e1164a
#: ../Doc/library/argparse.rst:1808
msgid "Exiting methods"
msgstr ""

# ca8c11826e224a78bd0dce70bf6f07a6
#: ../Doc/library/argparse.rst:1812
msgid ""
"This method terminates the program, exiting with the specified *status* and, "
"if given, it prints a *message* before that."
msgstr ""

# dbf924000dd447318e71cc453655cea6
#: ../Doc/library/argparse.rst:1817
msgid ""
"This method prints a usage message including the *message* to the standard "
"error and terminates the program with a status code of 2."
msgstr ""

#: ../Doc/library/argparse.rst:1824
msgid "Upgrading optparse code"
msgstr ""

# 0559e7a65c7343a4bad35813765820bf
#: ../Doc/library/argparse.rst:1826
msgid ""
"Originally, the :mod:`argparse` module had attempted to maintain "
"compatibility with :mod:`optparse`.  However, :mod:`optparse` was difficult "
"to extend transparently, particularly with the changes required to support "
"the new ``nargs=`` specifiers and better usage messages.  When most "
"everything in :mod:`optparse` had either been copy-pasted over or monkey-"
"patched, it no longer seemed practical to try to maintain the backwards "
"compatibility."
msgstr ""

# 198405a6c9374dd0a5410eec497a3aa5
#: ../Doc/library/argparse.rst:1833
msgid "A partial upgrade path from :mod:`optparse` to :mod:`argparse`:"
msgstr ""

# 1110b46756cc4a92afc49c44c4950e8f
#: ../Doc/library/argparse.rst:1835
msgid ""
"Replace all :meth:`optparse.OptionParser.add_option` calls with :meth:"
"`ArgumentParser.add_argument` calls."
msgstr ""

# f7f6c97f6d64407e9de7cee848f7d64a
#: ../Doc/library/argparse.rst:1838
msgid ""
"Replace ``(options, args) = parser.parse_args()`` with ``args = parser."
"parse_args()`` and add additional :meth:`ArgumentParser.add_argument` calls "
"for the positional arguments. Keep in mind that what was previously called "
"``options``, now in :mod:`argparse` context is called ``args``."
msgstr ""

#: ../Doc/library/argparse.rst:1843
msgid ""
"Replace callback actions and the ``callback_*`` keyword arguments with "
"``type`` or ``action`` arguments."
msgstr ""

#: ../Doc/library/argparse.rst:1846
msgid ""
"Replace string names for ``type`` keyword arguments with the corresponding "
"type objects (e.g. int, float, complex, etc)."
msgstr ""

#: ../Doc/library/argparse.rst:1849
msgid ""
"Replace :class:`optparse.Values` with :class:`Namespace` and :exc:`optparse."
"OptionError` and :exc:`optparse.OptionValueError` with :exc:`ArgumentError`."
msgstr ""

# 5631a3caa53b40b6ae9d53427032aa8b
#: ../Doc/library/argparse.rst:1853
msgid ""
"Replace strings with implicit arguments such as ``%default`` or ``%prog`` "
"with the standard Python syntax to use dictionaries to format strings, that "
"is, ``%(default)s`` and ``%(prog)s``."
msgstr ""

#: ../Doc/library/argparse.rst:1857
msgid ""
"Replace the OptionParser constructor ``version`` argument with a call to "
"``parser.add_argument('--version', action='version', version='<the version>')"
"``"
msgstr ""

#: ../Doc/library/array.rst:3
msgid ":mod:`array` --- Efficient arrays of numeric values"
msgstr ""

#: ../Doc/library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array of "
"basic values: characters, integers, floating point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The "
"following type codes are defined:"
msgstr ""

#: ../Doc/library/array.rst:19
msgid "Type code"
msgstr ""

#: ../Doc/library/array.rst:19 ../Doc/library/fl.rst:352
#: ../Doc/library/fl.rst:430 ../Doc/library/struct.rst:166
msgid "C Type"
msgstr ""

#: ../Doc/library/array.rst:19 ../Doc/library/xml.dom.rst:997
msgid "Python Type"
msgstr ""

#: ../Doc/library/array.rst:19
msgid "Minimum size in bytes"
msgstr ""

#: ../Doc/library/array.rst:21
msgid "char"
msgstr ""

# ccd15494206246d2a6644458e88eb1e4
#: ../Doc/library/array.rst:21
msgid "character"
msgstr ""

#: ../Doc/library/array.rst:21 ../Doc/library/array.rst:23
#: ../Doc/library/array.rst:25 ../Doc/library/grp.rst:22
#: ../Doc/library/pwd.rst:22 ../Doc/library/spwd.rst:27
#: ../Doc/library/struct.rst:170 ../Doc/library/struct.rst:172
#: ../Doc/library/struct.rst:174 ../Doc/library/struct.rst:176
#: ../Doc/library/time.rst:405 ../Doc/library/tkinter.rst:445
#: ../Doc/library/urlparse.rst:97 ../Doc/library/urlparse.rst:201
msgid "1"
msgstr ""

#: ../Doc/library/array.rst:23 ../Doc/library/io.rst:92
#: ../Doc/library/string.rst:422
msgid "``'b'``"
msgstr ""

#: ../Doc/library/array.rst:23
msgid "signed char"
msgstr ""

#: ../Doc/library/array.rst:23 ../Doc/library/array.rst:25
#: ../Doc/library/array.rst:29 ../Doc/library/array.rst:31
#: ../Doc/library/array.rst:33 ../Doc/library/array.rst:37
#: ../Doc/library/fl.rst:364 ../Doc/library/fl.rst:366
#: ../Doc/library/fl.rst:368 ../Doc/library/fl.rst:370
#: ../Doc/library/fl.rst:436 ../Doc/library/fl.rst:446
#: ../Doc/library/fl.rst:448 ../Doc/library/fl.rst:450
#: ../Doc/library/fl.rst:452 ../Doc/library/fl.rst:458
msgid "int"
msgstr ""

#: ../Doc/library/array.rst:25
msgid "``'B'``"
msgstr ""

#: ../Doc/library/array.rst:25
msgid "unsigned char"
msgstr ""

#: ../Doc/library/array.rst:27 ../Doc/library/gdbm.rst:70
#: ../Doc/library/stdtypes.rst:1429
msgid "``'u'``"
msgstr ""

#: ../Doc/library/array.rst:27
msgid "Py_UNICODE"
msgstr ""

#: ../Doc/library/array.rst:27
msgid "Unicode character"
msgstr ""

#: ../Doc/library/array.rst:27
msgid "2 (see note)"
msgstr ""

#: ../Doc/library/array.rst:29
msgid "``'h'``"
msgstr ""

#: ../Doc/library/array.rst:29
msgid "signed short"
msgstr ""

#: ../Doc/library/array.rst:29 ../Doc/library/array.rst:31
#: ../Doc/library/array.rst:33 ../Doc/library/array.rst:35
#: ../Doc/library/grp.rst:25 ../Doc/library/pwd.rst:24
#: ../Doc/library/spwd.rst:29 ../Doc/library/struct.rst:178
#: ../Doc/library/struct.rst:180 ../Doc/library/time.rst:407
#: ../Doc/library/tkinter.rst:447 ../Doc/library/urlparse.rst:99
#: ../Doc/library/urlparse.rst:203
msgid "2"
msgstr ""

#: ../Doc/library/array.rst:31 ../Doc/library/logging.handlers.rst:235
msgid "``'H'``"
msgstr ""

#: ../Doc/library/array.rst:31
msgid "unsigned short"
msgstr ""

#: ../Doc/library/array.rst:33 ../Doc/library/stdtypes.rst:1425
msgid "``'i'``"
msgstr ""

#: ../Doc/library/array.rst:33
msgid "signed int"
msgstr ""

#: ../Doc/library/array.rst:35
msgid "``'I'``"
msgstr ""

#: ../Doc/library/array.rst:35
msgid "unsigned int"
msgstr ""

# 5e1c889095214b8582900c5284e45003
# 75c4e8539a5744688e8c3c0dc07fbf21
#: ../Doc/library/array.rst:35 ../Doc/library/array.rst:39
msgid "long"
msgstr ""

#: ../Doc/library/array.rst:37
msgid "``'l'``"
msgstr ""

#: ../Doc/library/array.rst:37
msgid "signed long"
msgstr ""

#: ../Doc/library/array.rst:37 ../Doc/library/array.rst:39
#: ../Doc/library/array.rst:41 ../Doc/library/chunk.rst:28
#: ../Doc/library/chunk.rst:30 ../Doc/library/pwd.rst:28
#: ../Doc/library/spwd.rst:34 ../Doc/library/struct.rst:182
#: ../Doc/library/struct.rst:184 ../Doc/library/struct.rst:186
#: ../Doc/library/struct.rst:188 ../Doc/library/struct.rst:195
#: ../Doc/library/time.rst:411 ../Doc/library/tkinter.rst:452
#: ../Doc/library/urlparse.rst:104 ../Doc/library/urlparse.rst:207
msgid "4"
msgstr ""

#: ../Doc/library/array.rst:39
msgid "``'L'``"
msgstr ""

#: ../Doc/library/array.rst:39
msgid "unsigned long"
msgstr ""

#: ../Doc/library/array.rst:41 ../Doc/library/gdbm.rst:63
#: ../Doc/library/stdtypes.rst:1439 ../Doc/library/string.rst:460
msgid "``'f'``"
msgstr ""

#: ../Doc/library/array.rst:43 ../Doc/library/stdtypes.rst:1423
#: ../Doc/library/string.rst:427
msgid "``'d'``"
msgstr ""

#: ../Doc/library/array.rst:43
msgid "double"
msgstr ""

#: ../Doc/library/array.rst:43 ../Doc/library/chunk.rst:34
#: ../Doc/library/spwd.rst:47 ../Doc/library/struct.rst:190
#: ../Doc/library/struct.rst:192 ../Doc/library/struct.rst:197
#: ../Doc/library/time.rst:420
msgid "8"
msgstr ""

#: ../Doc/library/array.rst:48
msgid ""
"The ``'u'`` typecode corresponds to Python's unicode character.  On narrow "
"Unicode builds this is 2-bytes, on wide builds this is 4-bytes."
msgstr ""

# 157141bcfcd742d8bbf32b04642d22f6
#: ../Doc/library/array.rst:51
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`itemsize` attribute.  The values stored  "
"for ``'L'`` and ``'I'`` items will be represented as Python long integers "
"when retrieved, because Python's plain integer type cannot represent the "
"full range of C's unsigned (long) integers."
msgstr ""

#: ../Doc/library/array.rst:58
msgid "The module defines the following type:"
msgstr ""

# ebc015380d0a4be78ccf46a377a1b147
#: ../Doc/library/array.rst:63
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a list, string, or iterable "
"over elements of the appropriate type."
msgstr ""

#: ../Doc/library/array.rst:70
msgid ""
"If given a list or string, the initializer is passed to the new array's :"
"meth:`fromlist`, :meth:`fromstring`, or :meth:`fromunicode` method (see "
"below) to add initial items to the array.  Otherwise, the iterable "
"initializer is passed to the :meth:`extend` method."
msgstr ""

#: ../Doc/library/array.rst:78
msgid "Obsolete alias for :class:`array`."
msgstr ""

#: ../Doc/library/array.rst:80
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing, "
"concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other "
"cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever buffer objects are supported."
msgstr ""

#: ../Doc/library/array.rst:86
msgid "The following data items and methods are also supported:"
msgstr ""

#: ../Doc/library/array.rst:90
msgid "The typecode character used to create the array."
msgstr ""

#: ../Doc/library/array.rst:95
msgid "The length in bytes of one array item in the internal representation."
msgstr ""

#: ../Doc/library/array.rst:100
msgid "Append a new item with value *x* to the end of the array."
msgstr ""

# 7159bf2488fe4b39963232235d4fe51f
#: ../Doc/library/array.rst:105
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as ``array.buffer_info()"
"[1] * array.itemsize``.  This is occasionally useful when working with low-"
"level (and inherently unsafe) I/O interfaces that require memory addresses, "
"such as certain :c:func:`ioctl` operations.  The returned numbers are valid "
"as long as the array exists and no length-changing operations are applied to "
"it."
msgstr ""

#: ../Doc/library/array.rst:115
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""

#: ../Doc/library/array.rst:124
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, :exc:"
"`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""

#: ../Doc/library/array.rst:132
msgid "Return the number of occurrences of *x* in the array."
msgstr ""

#: ../Doc/library/array.rst:137
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, :exc:"
"`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the array."
msgstr ""

#: ../Doc/library/array.rst:148 ../Doc/library/array.rst:199
msgid ""
"Read *n* items (as machine values) from the file object *f* and append them "
"to the end of the array.  If less than *n* items are available, :exc:"
"`EOFError` is raised, but the items that were available are still inserted "
"into the array. *f* must be a real built-in file object; something else with "
"a :meth:`read` method won't do."
msgstr ""

#: ../Doc/library/array.rst:157
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: a.append"
"(x)`` except that if there is a type error, the array is unchanged."
msgstr ""

#: ../Doc/library/array.rst:163
msgid ""
"Appends items from the string, interpreting the string as an array of "
"machine values (as if it had been read from a file using the :meth:"
"`fromfile` method)."
msgstr ""

#: ../Doc/library/array.rst:169
msgid ""
"Extends this array with data from the given unicode string.  The array must "
"be a type ``'u'`` array; otherwise a :exc:`ValueError` is raised.  Use "
"``array.fromstring(unicodestring.encode(enc))`` to append Unicode data to an "
"array of some other type."
msgstr ""

#: ../Doc/library/array.rst:177
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array."
msgstr ""

#: ../Doc/library/array.rst:183
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr ""

#: ../Doc/library/array.rst:189
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""

#: ../Doc/library/array.rst:208
msgid "Remove the first occurrence of *x* from the array."
msgstr ""

#: ../Doc/library/array.rst:213
msgid "Reverse the order of the items in the array."
msgstr ""

#: ../Doc/library/array.rst:218 ../Doc/library/array.rst:245
msgid "Write all items (as machine values) to the file object *f*."
msgstr ""

#: ../Doc/library/array.rst:223
msgid "Convert the array to an ordinary list with the same items."
msgstr ""

#: ../Doc/library/array.rst:228
msgid ""
"Convert the array to an array of machine values and return the string "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""

#: ../Doc/library/array.rst:235
msgid ""
"Convert the array to a unicode string.  The array must be a type ``'u'`` "
"array; otherwise a :exc:`ValueError` is raised. Use ``array.tostring().decode"
"(enc)`` to obtain a unicode string from an array of some other type."
msgstr ""

# ff46fb546ae7482e93ca39e2b11fcb41
#: ../Doc/library/array.rst:247
msgid ""
"When an array object is printed or converted to a string, it is represented "
"as ``array(typecode, initializer)``.  The *initializer* is omitted if the "
"array is empty, otherwise it is a string if the *typecode* is ``'c'``, "
"otherwise it is a list of numbers.  The string is guaranteed to be able to "
"be converted back to an array with the same type and value using :func:"
"`eval`, so long as the :func:`array` function has been imported using ``from "
"array import array``. Examples::"
msgstr ""

#: ../Doc/library/array.rst:265
msgid "Packing and unpacking of heterogeneous binary data."
msgstr ""

#: ../Doc/library/array.rst:268
msgid ""
"Packing and unpacking of External Data Representation (XDR) data as used in "
"some remote procedure call systems."
msgstr ""

#: ../Doc/library/array.rst:272
msgid ""
"The Numeric Python extension (NumPy) defines another array type; see http://"
"numpy.sourceforge.net/ for further information about Numerical Python. (A "
"PDF version of the NumPy manual is available at http://numpy.sourceforge.net/"
"numdoc/numdoc.pdf)."
msgstr ""

# cf78e83829a442c78a83ba670f0bc323
#: ../Doc/library/ast.rst:2
msgid ":mod:`ast` --- Abstract Syntax Trees"
msgstr ""

# 382350ae85fa47acbcb769c253db72e6
#: ../Doc/library/ast.rst:16
msgid "**Source code:** :source:`Lib/ast.py`"
msgstr ""

#: ../Doc/library/ast.rst:20
msgid ""
"The :mod:`ast` module helps Python applications to process trees of the "
"Python abstract syntax grammar.  The abstract syntax itself might change "
"with each Python release; this module helps to find out programmatically "
"what the current grammar looks like."
msgstr ""

#: ../Doc/library/ast.rst:25
msgid ""
"An abstract syntax tree can be generated by passing :data:`ast."
"PyCF_ONLY_AST` as a flag to the :func:`compile` built-in function, or using "
"the :func:`parse` helper provided in this module.  The result will be a tree "
"of objects whose classes all inherit from :class:`ast.AST`.  An abstract "
"syntax tree can be compiled into a Python code object using the built-in :"
"func:`compile` function."
msgstr ""

#: ../Doc/library/ast.rst:33
msgid "Node classes"
msgstr ""

#: ../Doc/library/ast.rst:37
msgid ""
"This is the base of all AST node classes.  The actual node classes are "
"derived from the :file:`Parser/Python.asdl` file, which is reproduced :ref:"
"`below <abstract-grammar>`.  They are defined in the :mod:`_ast` C module "
"and re-exported in :mod:`ast`."
msgstr ""

#: ../Doc/library/ast.rst:42
msgid ""
"There is one class defined for each left-hand side symbol in the abstract "
"grammar (for example, :class:`ast.stmt` or :class:`ast.expr`).  In addition, "
"there is one class defined for each constructor on the right-hand side; "
"these classes inherit from the classes for the left-hand side trees.  For "
"example, :class:`ast.BinOp` inherits from :class:`ast.expr`.  For production "
"rules with alternatives (aka \"sums\"), the left-hand side class is "
"abstract: only instances of specific constructor nodes are ever created."
msgstr ""

#: ../Doc/library/ast.rst:52
msgid ""
"Each concrete class has an attribute :attr:`_fields` which gives the names "
"of all child nodes."
msgstr ""

#: ../Doc/library/ast.rst:55
msgid ""
"Each instance of a concrete class has one attribute for each child node, of "
"the type as defined in the grammar.  For example, :class:`ast.BinOp` "
"instances have an attribute :attr:`left` of type :class:`ast.expr`."
msgstr ""

#: ../Doc/library/ast.rst:59
msgid ""
"If these attributes are marked as optional in the grammar (using a question "
"mark), the value might be ``None``.  If the attributes can have zero-or-more "
"values (marked with an asterisk), the values are represented as Python "
"lists.  All possible attributes must be present and have valid values when "
"compiling an AST with :func:`compile`."
msgstr ""

#: ../Doc/library/ast.rst:68
msgid ""
"Instances of :class:`ast.expr` and :class:`ast.stmt` subclasses have :attr:"
"`lineno` and :attr:`col_offset` attributes.  The :attr:`lineno` is the line "
"number of source text (1-indexed so the first line is line 1) and the :attr:"
"`col_offset` is the UTF-8 byte offset of the first token that generated the "
"node.  The UTF-8 offset is recorded because the parser uses UTF-8 internally."
msgstr ""

#: ../Doc/library/ast.rst:75
msgid ""
"The constructor of a class :class:`ast.T` parses its arguments as follows:"
msgstr ""

#: ../Doc/library/ast.rst:77
msgid ""
"If there are positional arguments, there must be as many as there are items "
"in :attr:`T._fields`; they will be assigned as attributes of these names."
msgstr ""

#: ../Doc/library/ast.rst:79
msgid ""
"If there are keyword arguments, they will set the attributes of the same "
"names to the given values."
msgstr ""

#: ../Doc/library/ast.rst:82
msgid ""
"For example, to create and populate an :class:`ast.UnaryOp` node, you could "
"use ::"
msgstr ""

#: ../Doc/library/ast.rst:94
msgid "or the more compact ::"
msgstr ""

#: ../Doc/library/ast.rst:108
msgid "Abstract Grammar"
msgstr ""

#: ../Doc/library/ast.rst:110
msgid ""
"The module defines a string constant ``__version__`` which is the decimal "
"Subversion revision number of the file shown below."
msgstr ""

#: ../Doc/library/ast.rst:113
msgid "The abstract grammar is currently defined as follows:"
msgstr ""

#: ../Doc/library/ast.rst:119
msgid ":mod:`ast` Helpers"
msgstr ""

#: ../Doc/library/ast.rst:123
msgid ""
"Apart from the node classes, :mod:`ast` module defines these utility "
"functions and classes for traversing abstract syntax trees:"
msgstr ""

# 79d8e35762bc489999e581a32288c462
#: ../Doc/library/ast.rst:128
msgid ""
"Parse the source into an AST node.  Equivalent to ``compile(source, "
"filename, mode, ast.PyCF_ONLY_AST)``."
msgstr ""

#: ../Doc/library/ast.rst:134
msgid ""
"Safely evaluate an expression node or a string containing a Python "
"expression.  The string or node provided may only consist of the following "
"Python literal structures: strings, numbers, tuples, lists, dicts, booleans, "
"and ``None``."
msgstr ""

#: ../Doc/library/ast.rst:139
msgid ""
"This can be used for safely evaluating strings containing Python expressions "
"from untrusted sources without the need to parse the values oneself."
msgstr ""

#: ../Doc/library/ast.rst:145
msgid ""
"Return the docstring of the given *node* (which must be a :class:"
"`FunctionDef`, :class:`ClassDef` or :class:`Module` node), or ``None`` if it "
"has no docstring.  If *clean* is true, clean up the docstring's indentation "
"with :func:`inspect.cleandoc`."
msgstr ""

#: ../Doc/library/ast.rst:153
msgid ""
"When you compile a node tree with :func:`compile`, the compiler expects :"
"attr:`lineno` and :attr:`col_offset` attributes for every node that supports "
"them.  This is rather tedious to fill in for generated nodes, so this helper "
"adds these attributes recursively where not already set, by setting them to "
"the values of the parent node.  It works recursively starting at *node*."
msgstr ""

#: ../Doc/library/ast.rst:162
msgid ""
"Increment the line number of each node in the tree starting at *node* by "
"*n*. This is useful to \"move code\" to a different location in a file."
msgstr ""

#: ../Doc/library/ast.rst:168
msgid ""
"Copy source location (:attr:`lineno` and :attr:`col_offset`) from *old_node* "
"to *new_node* if possible, and return *new_node*."
msgstr ""

#: ../Doc/library/ast.rst:174
msgid ""
"Yield a tuple of ``(fieldname, value)`` for each field in ``node._fields`` "
"that is present on *node*."
msgstr ""

#: ../Doc/library/ast.rst:180
msgid ""
"Yield all direct child nodes of *node*, that is, all fields that are nodes "
"and all items of fields that are lists of nodes."
msgstr ""

# 881a3bb90aae4772a359f21614fd415d
#: ../Doc/library/ast.rst:186
msgid ""
"Recursively yield all descendant nodes in the tree starting at *node* "
"(including *node* itself), in no specified order.  This is useful if you "
"only want to modify nodes in place and don't care about the context."
msgstr ""

#: ../Doc/library/ast.rst:193
msgid ""
"A node visitor base class that walks the abstract syntax tree and calls a "
"visitor function for every node found.  This function may return a value "
"which is forwarded by the :meth:`visit` method."
msgstr ""

#: ../Doc/library/ast.rst:197
msgid ""
"This class is meant to be subclassed, with the subclass adding visitor "
"methods."
msgstr ""

#: ../Doc/library/ast.rst:202
msgid ""
"Visit a node.  The default implementation calls the method called :samp:"
"`self.visit_{classname}` where *classname* is the name of the node class, "
"or :meth:`generic_visit` if that method doesn't exist."
msgstr ""

#: ../Doc/library/ast.rst:208
msgid "This visitor calls :meth:`visit` on all children of the node."
msgstr ""

#: ../Doc/library/ast.rst:210
msgid ""
"Note that child nodes of nodes that have a custom visitor method won't be "
"visited unless the visitor calls :meth:`generic_visit` or visits them itself."
msgstr ""

#: ../Doc/library/ast.rst:214
msgid ""
"Don't use the :class:`NodeVisitor` if you want to apply changes to nodes "
"during traversal.  For this a special visitor exists (:class:"
"`NodeTransformer`) that allows modifications."
msgstr ""

#: ../Doc/library/ast.rst:221
msgid ""
"A :class:`NodeVisitor` subclass that walks the abstract syntax tree and "
"allows modification of nodes."
msgstr ""

#: ../Doc/library/ast.rst:224
msgid ""
"The :class:`NodeTransformer` will walk the AST and use the return value of "
"the visitor methods to replace or remove the old node.  If the return value "
"of the visitor method is ``None``, the node will be removed from its "
"location, otherwise it is replaced with the return value.  The return value "
"may be the original node in which case no replacement takes place."
msgstr ""

#: ../Doc/library/ast.rst:230
msgid ""
"Here is an example transformer that rewrites all occurrences of name lookups "
"(``foo``) to ``data['foo']``::"
msgstr ""

#: ../Doc/library/ast.rst:242
msgid ""
"Keep in mind that if the node you're operating on has child nodes you must "
"either transform the child nodes yourself or call the :meth:`generic_visit` "
"method for the node first."
msgstr ""

#: ../Doc/library/ast.rst:246
msgid ""
"For nodes that were part of a collection of statements (that applies to all "
"statement nodes), the visitor may also return a list of nodes rather than "
"just a single node."
msgstr ""

#: ../Doc/library/ast.rst:250
msgid "Usually you use the transformer like this::"
msgstr ""

#: ../Doc/library/ast.rst:257
msgid ""
"Return a formatted dump of the tree in *node*.  This is mainly useful for "
"debugging purposes.  The returned string will show the names and the values "
"for fields.  This makes the code impossible to evaluate, so if evaluation is "
"wanted *annotate_fields* must be set to False.  Attributes such as line "
"numbers and column offsets are not dumped by default.  If this is wanted, "
"*include_attributes* can be set to ``True``."
msgstr ""

#: ../Doc/library/asynchat.rst:2
msgid ":mod:`asynchat` --- Asynchronous socket command/response handler"
msgstr ""

# d67a0b970e824829b654c1c776ed08bc
#: ../Doc/library/asynchat.rst:9
msgid "**Source code:** :source:`Lib/asynchat.py`"
msgstr ""

#: ../Doc/library/asynchat.rst:13
msgid ""
"This module builds on the :mod:`asyncore` infrastructure, simplifying "
"asynchronous clients and servers and making it easier to handle protocols "
"whose elements are terminated by arbitrary strings, or are of variable "
"length. :mod:`asynchat` defines the abstract class :class:`async_chat` that "
"you subclass, providing implementations of the :meth:`collect_incoming_data` "
"and :meth:`found_terminator` methods. It uses the same asynchronous loop as :"
"mod:`asyncore`, and the two types of channel, :class:`asyncore.dispatcher` "
"and :class:`asynchat.async_chat`, can freely be mixed in the channel map. "
"Typically an :class:`asyncore.dispatcher` server channel generates new :"
"class:`asynchat.async_chat` channel objects as it receives incoming "
"connection requests."
msgstr ""

#: ../Doc/library/asynchat.rst:28
msgid ""
"This class is an abstract subclass of :class:`asyncore.dispatcher`. To make "
"practical use of the code you must subclass :class:`async_chat`, providing "
"meaningful :meth:`collect_incoming_data` and :meth:`found_terminator` "
"methods. The :class:`asyncore.dispatcher` methods can be used, although not "
"all make sense in a message/response context."
msgstr ""

# b1891fdf5fd94f85a60e0d56417618ae
#: ../Doc/library/asynchat.rst:35
msgid ""
"Like :class:`asyncore.dispatcher`, :class:`async_chat` defines a set of "
"events that are generated by an analysis of socket conditions after a :c:"
"func:`select` call. Once the polling loop has been started the :class:"
"`async_chat` object's methods are called by the event-processing framework "
"with no action on the part of the programmer."
msgstr ""

#: ../Doc/library/asynchat.rst:41
msgid ""
"Two class attributes can be modified, to improve performance, or possibly "
"even to conserve memory."
msgstr ""

#: ../Doc/library/asynchat.rst:47
msgid "The asynchronous input buffer size (default ``4096``)."
msgstr ""

#: ../Doc/library/asynchat.rst:52
msgid "The asynchronous output buffer size (default ``4096``)."
msgstr ""

#: ../Doc/library/asynchat.rst:54
msgid ""
"Unlike :class:`asyncore.dispatcher`, :class:`async_chat` allows you to "
"define a first-in-first-out queue (fifo) of *producers*. A producer need "
"have only one method, :meth:`more`, which should return data to be "
"transmitted on the channel. The producer indicates exhaustion (*i.e.* that "
"it contains no more data) by having its :meth:`more` method return the empty "
"string. At this point the :class:`async_chat` object removes the producer "
"from the fifo and starts using the next producer, if any. When the producer "
"fifo is empty the :meth:`handle_write` method does nothing. You use the "
"channel object's :meth:`set_terminator` method to describe how to recognize "
"the end of, or an important breakpoint in, an incoming transmission from the "
"remote endpoint."
msgstr ""

#: ../Doc/library/asynchat.rst:67
msgid ""
"To build a functioning :class:`async_chat` subclass your  input methods :"
"meth:`collect_incoming_data` and :meth:`found_terminator` must handle the "
"data that the channel receives asynchronously. The methods are described "
"below."
msgstr ""

#: ../Doc/library/asynchat.rst:75
msgid ""
"Pushes a ``None`` on to the producer fifo. When this producer is popped off "
"the fifo it causes the channel to be closed."
msgstr ""

#: ../Doc/library/asynchat.rst:81
msgid ""
"Called with *data* holding an arbitrary amount of received data.  The "
"default method, which must be overridden, raises a :exc:"
"`NotImplementedError` exception."
msgstr ""

#: ../Doc/library/asynchat.rst:88
msgid ""
"In emergencies this method will discard any data held in the input and/or "
"output buffers and the producer fifo."
msgstr ""

#: ../Doc/library/asynchat.rst:94
msgid ""
"Called when the incoming data stream  matches the termination condition set "
"by :meth:`set_terminator`. The default method, which must be overridden, "
"raises a :exc:`NotImplementedError` exception. The buffered input data "
"should be available via an instance attribute."
msgstr ""

#: ../Doc/library/asynchat.rst:102
msgid "Returns the current terminator for the channel."
msgstr ""

#: ../Doc/library/asynchat.rst:107
msgid ""
"Pushes data on to the channel's fifo to ensure its transmission. This is all "
"you need to do to have the channel write the data out to the network, "
"although it is possible to use your own producers in more complex schemes to "
"implement encryption and chunking, for example."
msgstr ""

#: ../Doc/library/asynchat.rst:115
msgid ""
"Takes a producer object and adds it to the producer fifo associated with the "
"channel.  When all currently-pushed producers have been exhausted the "
"channel will consume this producer's data by calling its :meth:`more` method "
"and send the data to the remote endpoint."
msgstr ""

#: ../Doc/library/asynchat.rst:123
msgid ""
"Sets the terminating condition to be recognized on the channel.  ``term`` "
"may be any of three types of value, corresponding to three different ways to "
"handle incoming protocol data."
msgstr ""

#: ../Doc/library/asynchat.rst:128
msgid "term"
msgstr ""

#: ../Doc/library/asynchat.rst:128 ../Doc/library/asyncore.rst:84
#: ../Doc/library/curses.rst:736 ../Doc/library/inspect.rst:40
#: ../Doc/library/logging.rst:564 ../Doc/library/logging.rst:879
#: ../Doc/library/ossaudiodev.rst:185 ../Doc/library/ossaudiodev.rst:239
#: ../Doc/library/ttk.rst:107 ../Doc/library/turtle.rst:2177
#: ../Doc/library/warnings.rst:61
msgid "Description"
msgstr ""

#: ../Doc/library/asynchat.rst:130
msgid "*string*"
msgstr ""

#: ../Doc/library/asynchat.rst:130
msgid ""
"Will call :meth:`found_terminator` when the string is found in the input "
"stream"
msgstr ""

#: ../Doc/library/asynchat.rst:133
msgid "*integer*"
msgstr ""

#: ../Doc/library/asynchat.rst:133
msgid ""
"Will call :meth:`found_terminator` when the indicated number of characters "
"have been received"
msgstr ""

#: ../Doc/library/asynchat.rst:137 ../Doc/library/stdtypes.rst:52
msgid "``None``"
msgstr ""

#: ../Doc/library/asynchat.rst:137
msgid "The channel continues to collect data forever"
msgstr ""

#: ../Doc/library/asynchat.rst:141
msgid ""
"Note that any data following the terminator will be available for reading by "
"the channel after :meth:`found_terminator` is called."
msgstr ""

#: ../Doc/library/asynchat.rst:146
msgid "asynchat - Auxiliary Classes"
msgstr ""

#: ../Doc/library/asynchat.rst:150
msgid ""
"A :class:`fifo` holding data which has been pushed by the application but "
"not yet popped for writing to the channel.  A :class:`fifo` is a list used "
"to hold data and/or producers until they are required.  If the *list* "
"argument is provided then it should contain producers or data items to be "
"written to the channel."
msgstr ""

#: ../Doc/library/asynchat.rst:159
msgid "Returns ``True`` if and only if the fifo is empty."
msgstr ""

#: ../Doc/library/asynchat.rst:164
msgid "Returns the least-recently :meth:`push`\\ ed item from the fifo."
msgstr ""

#: ../Doc/library/asynchat.rst:169
msgid ""
"Adds the given data (which may be a string or a producer object) to the "
"producer fifo."
msgstr ""

#: ../Doc/library/asynchat.rst:175
msgid ""
"If the fifo is not empty, returns ``True, first()``, deleting the popped "
"item.  Returns ``False, None`` for an empty fifo."
msgstr ""

#: ../Doc/library/asynchat.rst:182
msgid "asynchat Example"
msgstr ""

#: ../Doc/library/asynchat.rst:184
msgid ""
"The following partial example shows how HTTP requests can be read with :"
"class:`async_chat`.  A web server might create an :class:"
"`http_request_handler` object for each incoming client connection. Notice "
"that initially the channel terminator is set to match the blank line at the "
"end of the HTTP headers, and a flag indicates that the headers are being "
"read."
msgstr ""

#: ../Doc/library/asynchat.rst:191
msgid ""
"Once the headers have been read, if the request is of type POST (indicating "
"that further data are present in the input stream) then the ``Content-Length:"
"`` header is used to set a numeric terminator to read the right amount of "
"data from the channel."
msgstr ""

#: ../Doc/library/asynchat.rst:196
msgid ""
"The :meth:`handle_request` method is called once all relevant input has been "
"marshalled, after setting the channel terminator to ``None`` to ensure that "
"any extraneous data sent by the web client are ignored. ::"
msgstr ""

#: ../Doc/library/asyncore.rst:2
msgid ":mod:`asyncore` --- Asynchronous socket handler"
msgstr ""

# 981815bf26374954b2f8039e476b46e1
#: ../Doc/library/asyncore.rst:12
msgid "**Source code:** :source:`Lib/asyncore.py`"
msgstr ""

#: ../Doc/library/asyncore.rst:16
msgid ""
"This module provides the basic infrastructure for writing asynchronous  "
"socket service clients and servers."
msgstr ""

#: ../Doc/library/asyncore.rst:19
msgid ""
"There are only two ways to have a program on a single processor do  \"more "
"than one thing at a time.\" Multi-threaded programming is the  simplest and "
"most popular way to do it, but there is another very different technique, "
"that lets you have nearly all the advantages of  multi-threading, without "
"actually using multiple threads.  It's really  only practical if your "
"program is largely I/O bound.  If your program is processor bound, then pre-"
"emptive scheduled threads are probably what you really need.  Network "
"servers are rarely processor bound, however."
msgstr ""

# ed9ada1414e7417093d87bfea171b7e5
#: ../Doc/library/asyncore.rst:28
msgid ""
"If your operating system supports the :c:func:`select` system call in its I/"
"O library (and nearly all do), then you can use it to juggle multiple "
"communication channels at once; doing other work while your I/O is taking "
"place in the \"background.\"  Although this strategy can seem strange and "
"complex, especially at first, it is in many ways easier to understand and "
"control than multi-threaded programming.  The :mod:`asyncore` module solves "
"many of the difficult problems for you, making the task of building "
"sophisticated high-performance network servers and clients a snap.  For "
"\"conversational\" applications and protocols the companion :mod:`asynchat` "
"module is invaluable."
msgstr ""

#: ../Doc/library/asyncore.rst:39
msgid ""
"The basic idea behind both modules is to create one or more network "
"*channels*, instances of class :class:`asyncore.dispatcher` and :class:"
"`asynchat.async_chat`.  Creating the channels adds them to a global map, "
"used by the :func:`loop` function if you do not provide it with your own "
"*map*."
msgstr ""

#: ../Doc/library/asyncore.rst:45
msgid ""
"Once the initial channel(s) is(are) created, calling the :func:`loop` "
"function activates channel service, which continues until the last channel "
"(including any that have been added to the map during asynchronous service) "
"is closed."
msgstr ""

#: ../Doc/library/asyncore.rst:52
msgid ""
"Enter a polling loop that terminates after count passes or all open channels "
"have been closed.  All arguments are optional.  The *count* parameter "
"defaults to None, resulting in the loop terminating only when all channels "
"have been closed.  The *timeout* argument sets the timeout parameter for the "
"appropriate :func:`select` or :func:`poll` call, measured in seconds; the "
"default is 30 seconds.  The *use_poll* parameter, if true, indicates that :"
"func:`poll` should be used in preference to :func:`select` (the default is "
"``False``)."
msgstr ""

#: ../Doc/library/asyncore.rst:61
msgid ""
"The *map* parameter is a dictionary whose items are the channels to watch. "
"As channels are closed they are deleted from their map.  If *map* is "
"omitted, a global map is used. Channels (instances of :class:`asyncore."
"dispatcher`, :class:`asynchat.async_chat` and subclasses thereof) can freely "
"be mixed in the map."
msgstr ""

#: ../Doc/library/asyncore.rst:70
msgid ""
"The :class:`dispatcher` class is a thin wrapper around a low-level socket "
"object. To make it more useful, it has a few methods for event-handling "
"which are called from the asynchronous loop.   Otherwise, it can be treated "
"as a normal non-blocking socket object."
msgstr ""

#: ../Doc/library/asyncore.rst:75
msgid ""
"The firing of low-level events at certain times or in certain connection "
"states tells the asynchronous loop that certain higher-level events have "
"taken place.  For example, if we have asked for a socket to connect to "
"another host, we know that the connection has been made when the socket "
"becomes writable for the first time (at this point you know that you may "
"write to it with the expectation of success).  The implied higher-level "
"events are:"
msgstr ""

#: ../Doc/library/asyncore.rst:84
msgid "Event"
msgstr ""

#: ../Doc/library/asyncore.rst:86
msgid "``handle_connect()``"
msgstr ""

#: ../Doc/library/asyncore.rst:86
msgid "Implied by the first read or write event"
msgstr ""

#: ../Doc/library/asyncore.rst:89
msgid "``handle_close()``"
msgstr ""

#: ../Doc/library/asyncore.rst:89
msgid "Implied by a read event with no data available"
msgstr ""

#: ../Doc/library/asyncore.rst:92
msgid "``handle_accept()``"
msgstr ""

#: ../Doc/library/asyncore.rst:92
msgid "Implied by a read event on a listening socket"
msgstr ""

# cfdc4f6e20714deabace537e9a866325
#: ../Doc/library/asyncore.rst:96
msgid ""
"During asynchronous processing, each mapped channel's :meth:`readable` and :"
"meth:`writable` methods are used to determine whether the channel's socket "
"should be added to the list of channels :c:func:`select`\\ ed or :c:func:"
"`poll`\\ ed for read and write events."
msgstr ""

#: ../Doc/library/asyncore.rst:101
msgid ""
"Thus, the set of channel events is larger than the basic socket events.  The "
"full set of methods that can be overridden in your subclass follows:"
msgstr ""

#: ../Doc/library/asyncore.rst:107
msgid ""
"Called when the asynchronous loop detects that a :meth:`read` call on the "
"channel's socket will succeed."
msgstr ""

#: ../Doc/library/asyncore.rst:113
msgid ""
"Called when the asynchronous loop detects that a writable socket can be "
"written.  Often this method will implement the necessary buffering for "
"performance.  For example::"
msgstr ""

#: ../Doc/library/asyncore.rst:124
msgid ""
"Called when there is out of band (OOB) data for a socket connection.  This "
"will almost never happen, as OOB is tenuously supported and rarely used."
msgstr ""

#: ../Doc/library/asyncore.rst:130
msgid ""
"Called when the active opener's socket actually makes a connection.  Might "
"send a \"welcome\" banner, or initiate a protocol negotiation with the "
"remote endpoint, for example."
msgstr ""

#: ../Doc/library/asyncore.rst:137
msgid "Called when the socket is closed."
msgstr ""

#: ../Doc/library/asyncore.rst:142
msgid ""
"Called when an exception is raised and not otherwise handled.  The default "
"version prints a condensed traceback."
msgstr ""

#: ../Doc/library/asyncore.rst:148
msgid ""
"Called on listening channels (passive openers) when a connection can be "
"established with a new remote endpoint that has issued a :meth:`connect` "
"call for the local endpoint."
msgstr ""

#: ../Doc/library/asyncore.rst:155
msgid ""
"Called each time around the asynchronous loop to determine whether a "
"channel's socket should be added to the list on which read events can "
"occur.  The default method simply returns ``True``, indicating that by "
"default, all channels will be interested in read events."
msgstr ""

#: ../Doc/library/asyncore.rst:163
msgid ""
"Called each time around the asynchronous loop to determine whether a "
"channel's socket should be added to the list on which write events can "
"occur.  The default method simply returns ``True``, indicating that by "
"default, all channels will be interested in write events."
msgstr ""

#: ../Doc/library/asyncore.rst:169
msgid ""
"In addition, each channel delegates or extends many of the socket methods. "
"Most of these are nearly identical to their socket partners."
msgstr ""

#: ../Doc/library/asyncore.rst:175
msgid ""
"This is identical to the creation of a normal socket, and will use the same "
"options for creation.  Refer to the :mod:`socket` documentation for "
"information on creating sockets."
msgstr ""

#: ../Doc/library/asyncore.rst:182
msgid ""
"As with the normal socket object, *address* is a tuple with the first "
"element the host to connect to, and the second the port number."
msgstr ""

#: ../Doc/library/asyncore.rst:188
msgid "Send *data* to the remote end-point of the socket."
msgstr ""

#: ../Doc/library/asyncore.rst:193
msgid ""
"Read at most *buffer_size* bytes from the socket's remote end-point.  An "
"empty string implies that the channel has been closed from the other end."
msgstr ""

#: ../Doc/library/asyncore.rst:199
msgid ""
"Listen for connections made to the socket.  The *backlog* argument specifies "
"the maximum number of queued connections and should be at least 1; the "
"maximum value is system-dependent (usually 5)."
msgstr ""

#: ../Doc/library/asyncore.rst:206
msgid ""
"Bind the socket to *address*.  The socket must not already be bound.  (The "
"format of *address* depends on the address family --- refer to the :mod:"
"`socket` documentation for more information.)  To mark the socket as re-"
"usable (setting the :const:`SO_REUSEADDR` option), call the :class:"
"`dispatcher` object's :meth:`set_reuse_addr` method."
msgstr ""

# a63e1dd13a74425f940d04afb60e9f78
#: ../Doc/library/asyncore.rst:215
msgid ""
"Accept a connection.  The socket must be bound to an address and listening "
"for connections.  The return value can be either ``None`` or a pair ``(conn, "
"address)`` where *conn* is a *new* socket object usable to send and receive "
"data on the connection, and *address* is the address bound to the socket on "
"the other end of the connection. When ``None`` is returned it means the "
"connection didn't take place, in which case the server should just ignore "
"this event and keep listening for further incoming connections."
msgstr ""

#: ../Doc/library/asyncore.rst:227
msgid ""
"Close the socket.  All future operations on the socket object will fail. The "
"remote end-point will receive no more data (after queued data is flushed).  "
"Sockets are automatically closed when they are garbage-collected."
msgstr ""

# 12b54b9fb8444d0d982d96ae1155482b
#: ../Doc/library/asyncore.rst:234
msgid ""
"A :class:`dispatcher` subclass which adds simple buffered output capability, "
"useful for simple clients. For more sophisticated usage use :class:`asynchat."
"async_chat`."
msgstr ""

# e362d0ea425149078c5098f8c3384a96
#: ../Doc/library/asyncore.rst:240
msgid ""
"A file_dispatcher takes a file descriptor or file object along with an "
"optional map argument and wraps it for use with the :c:func:`poll` or :c:"
"func:`loop` functions.  If provided a file object or anything with a :c:func:"
"`fileno` method, that method will be called and passed to the :class:"
"`file_wrapper` constructor.  Availability: UNIX."
msgstr ""

#: ../Doc/library/asyncore.rst:248
msgid ""
"A file_wrapper takes an integer file descriptor and calls :func:`os.dup` to "
"duplicate the handle so that the original handle may be closed independently "
"of the file_wrapper.  This class implements sufficient methods to emulate a "
"socket for use by the :class:`file_dispatcher` class.  Availability: UNIX."
msgstr ""

#: ../Doc/library/asyncore.rst:257
msgid "asyncore Example basic HTTP client"
msgstr ""

#: ../Doc/library/asyncore.rst:259
msgid ""
"Here is a very basic HTTP client that uses the :class:`dispatcher` class to "
"implement its socket handling::"
msgstr ""

# 32480590aae34a3b8b43cb5781f62664
#: ../Doc/library/asyncore.rst:295
msgid "asyncore Example basic echo server"
msgstr ""

# 377043c71ef441ebb9fabafcf0e9f38d
#: ../Doc/library/asyncore.rst:297
msgid ""
"Here is a basic echo server that uses the :class:`dispatcher` class to "
"accept connections and dispatches the incoming connections to a handler::"
msgstr ""

#: ../Doc/library/atexit.rst:2
msgid ":mod:`atexit` --- Exit handlers"
msgstr ""

# fcb2756f93254f299fe9faa5ec380a69
#: ../Doc/library/atexit.rst:12
msgid "**Source code:** :source:`Lib/atexit.py`"
msgstr ""

# a1814875c04646deb46c6ce2885ba3e0
#: ../Doc/library/atexit.rst:16
msgid ""
"The :mod:`atexit` module defines a single function to register cleanup "
"functions.  Functions thus registered are automatically executed upon normal "
"interpreter termination.  The order in which the functions are called is not "
"defined; if you have cleanup operations that depend on each other, you "
"should wrap them in a function and register that one.  This keeps :mod:"
"`atexit` simple."
msgstr ""

# ae365c520d1f41859dc8a5ce828fe5a9
#: ../Doc/library/atexit.rst:22
msgid ""
"Note: the functions registered via this module are not called when the "
"program is killed by a signal not handled by Python, when a Python fatal "
"internal error is detected, or when :func:`os._exit` is called."
msgstr ""

# 8a186035e7ea4bff8c2171afa4f71a48
#: ../Doc/library/atexit.rst:28
msgid ""
"This is an alternate interface to the functionality provided by the :func:"
"`sys.exitfunc` variable."
msgstr ""

# eddfe8b3ea0f4ada823876430963c8c4
#: ../Doc/library/atexit.rst:31
msgid ""
"Note: This module is unlikely to work correctly when used with other code "
"that sets ``sys.exitfunc``.  In particular, other core Python modules are "
"free to use :mod:`atexit` without the programmer's knowledge.  Authors who "
"use ``sys.exitfunc`` should convert their code to use :mod:`atexit` "
"instead.  The simplest way to convert code that sets ``sys.exitfunc`` is to "
"import :mod:`atexit` and register the function that had been bound to ``sys."
"exitfunc``."
msgstr ""

# 8362a5bb4627413ea5d3c9fa4681322b
#: ../Doc/library/atexit.rst:41
msgid ""
"Register *func* as a function to be executed at termination.  Any optional "
"arguments that are to be passed to *func* must be passed as arguments to :"
"func:`register`.  It is possible to register the same function and arguments "
"more than once."
msgstr ""

#: ../Doc/library/atexit.rst:46
msgid ""
"At normal program termination (for instance, if :func:`sys.exit` is called "
"or the main module's execution completes), all functions registered are "
"called in last in, first out order.  The assumption is that lower level "
"modules will normally be imported before higher level modules and thus must "
"be cleaned up later."
msgstr ""

#: ../Doc/library/atexit.rst:52
msgid ""
"If an exception is raised during execution of the exit handlers, a traceback "
"is printed (unless :exc:`SystemExit` is raised) and the exception "
"information is saved.  After all exit handlers have had a chance to run the "
"last exception to be raised is re-raised."
msgstr ""

#: ../Doc/library/atexit.rst:65
msgid ""
"Useful example of :mod:`atexit` to read and write :mod:`readline` history "
"files."
msgstr ""

#: ../Doc/library/atexit.rst:71
msgid ":mod:`atexit` Example"
msgstr ""

#: ../Doc/library/atexit.rst:73
msgid ""
"The following simple example demonstrates how a module can initialize a "
"counter from a file when it is imported and save the counter's updated value "
"automatically when the program terminates without relying on the application "
"making an explicit call into this module at termination. ::"
msgstr ""

#: ../Doc/library/atexit.rst:93
msgid ""
"Positional and keyword arguments may also be passed to :func:`register` to "
"be passed along to the registered function when it is called::"
msgstr ""

#: ../Doc/library/atexit.rst:105
msgid "Usage as a :term:`decorator`::"
msgstr ""

# 8dc60ce276b940c8a9de237487014bbf
#: ../Doc/library/atexit.rst:113
msgid "This only works with functions that can be called without arguments."
msgstr ""

#: ../Doc/library/audioop.rst:3
msgid ":mod:`audioop` --- Manipulate raw audio data"
msgstr ""

# 77516e700b3140eab86af13620a7bbb2
#: ../Doc/library/audioop.rst:9
msgid ""
"The :mod:`audioop` module contains some useful operations on sound "
"fragments. It operates on sound fragments consisting of signed integer "
"samples 8, 16 or 32 bits wide, stored in Python strings.  This is the same "
"format as used by the :mod:`al` and :mod:`sunaudiodev` modules.  All scalar "
"items are integers, unless specified otherwise."
msgstr ""

#: ../Doc/library/audioop.rst:21
msgid ""
"This module provides support for a-LAW, u-LAW and Intel/DVI ADPCM encodings."
msgstr ""

#: ../Doc/library/audioop.rst:25
msgid ""
"A few of the more complicated operations only take 16-bit samples, otherwise "
"the sample size (in bytes) is always a parameter of the operation."
msgstr ""

#: ../Doc/library/audioop.rst:28 ../Doc/library/imageop.rst:16
#: ../Doc/library/imgfile.rst:20
msgid "The module defines the following variables and functions:"
msgstr ""

#: ../Doc/library/audioop.rst:33
msgid ""
"This exception is raised on all errors, such as unknown number of bytes per "
"sample, etc."
msgstr ""

#: ../Doc/library/audioop.rst:39
msgid ""
"Return a fragment which is the addition of the two samples passed as "
"parameters. *width* is the sample width in bytes, either ``1``, ``2`` or "
"``4``.  Both fragments should have the same length."
msgstr ""

#: ../Doc/library/audioop.rst:46
msgid ""
"Decode an Intel/DVI ADPCM coded fragment to a linear fragment.  See the "
"description of :func:`lin2adpcm` for details on ADPCM coding. Return a tuple "
"``(sample, newstate)`` where the sample has the width specified in *width*."
msgstr ""

#: ../Doc/library/audioop.rst:53
msgid ""
"Convert sound fragments in a-LAW encoding to linearly encoded sound "
"fragments. a-LAW encoding always uses 8 bits samples, so *width* refers only "
"to the sample width of the output fragment here."
msgstr ""

#: ../Doc/library/audioop.rst:62
msgid "Return the average over all samples in the fragment."
msgstr ""

#: ../Doc/library/audioop.rst:67
msgid ""
"Return the average peak-peak value over all samples in the fragment. No "
"filtering is done, so the usefulness of this routine is questionable."
msgstr ""

#: ../Doc/library/audioop.rst:73
msgid ""
"Return a fragment that is the original fragment with a bias added to each "
"sample."
msgstr ""

#: ../Doc/library/audioop.rst:79
msgid ""
"Return the number of zero crossings in the fragment passed as an argument."
msgstr ""

#: ../Doc/library/audioop.rst:84
msgid ""
"Return a factor *F* such that ``rms(add(fragment, mul(reference, -F)))`` is "
"minimal, i.e., return the factor with which you should multiply *reference* "
"to make it match as well as possible to *fragment*.  The fragments should "
"both contain 2-byte samples."
msgstr ""

#: ../Doc/library/audioop.rst:89
msgid "The time taken by this routine is proportional to ``len(fragment)``."
msgstr ""

#: ../Doc/library/audioop.rst:94
msgid ""
"Try to match *reference* as well as possible to a portion of *fragment* "
"(which should be the longer fragment).  This is (conceptually) done by "
"taking slices out of *fragment*, using :func:`findfactor` to compute the "
"best match, and minimizing the result.  The fragments should both contain 2-"
"byte samples. Return a tuple ``(offset, factor)`` where *offset* is the "
"(integer) offset into *fragment* where the optimal match started and "
"*factor* is the (floating-point) factor as per :func:`findfactor`."
msgstr ""

#: ../Doc/library/audioop.rst:105
msgid ""
"Search *fragment* for a slice of length *length* samples (not bytes!) with "
"maximum energy, i.e., return *i* for which ``rms(fragment[i*2:(i+length)*2])"
"`` is maximal.  The fragments should both contain 2-byte samples."
msgstr ""

#: ../Doc/library/audioop.rst:109
msgid "The routine takes time proportional to ``len(fragment)``."
msgstr ""

#: ../Doc/library/audioop.rst:114
msgid "Return the value of sample *index* from the fragment."
msgstr ""

#: ../Doc/library/audioop.rst:119
msgid ""
"Convert samples to 4 bit Intel/DVI ADPCM encoding.  ADPCM coding is an "
"adaptive coding scheme, whereby each 4 bit number is the difference between "
"one sample and the next, divided by a (varying) step.  The Intel/DVI ADPCM "
"algorithm has been selected for use by the IMA, so it may well become a "
"standard."
msgstr ""

#: ../Doc/library/audioop.rst:124
msgid ""
"*state* is a tuple containing the state of the coder.  The coder returns a "
"tuple ``(adpcmfrag, newstate)``, and the *newstate* should be passed to the "
"next call of :func:`lin2adpcm`.  In the initial call, ``None`` can be passed "
"as the state. *adpcmfrag* is the ADPCM coded fragment packed 2 4-bit values "
"per byte."
msgstr ""

#: ../Doc/library/audioop.rst:132
msgid ""
"Convert samples in the audio fragment to a-LAW encoding and return this as a "
"Python string.  a-LAW is an audio encoding format whereby you get a dynamic "
"range of about 13 bits using only 8 bit samples.  It is used by the Sun "
"audio hardware, among others."
msgstr ""

#: ../Doc/library/audioop.rst:142
msgid "Convert samples between 1-, 2- and 4-byte formats."
msgstr ""

#: ../Doc/library/audioop.rst:146
msgid ""
"In some audio formats, such as .WAV files, 16 and 32 bit samples are signed, "
"but 8 bit samples are unsigned.  So when converting to 8 bit wide samples "
"for these formats, you need to also add 128 to the result::"
msgstr ""

#: ../Doc/library/audioop.rst:153
msgid ""
"The same, in reverse, has to be applied when converting from 8 to 16 or 32 "
"bit width samples."
msgstr ""

#: ../Doc/library/audioop.rst:159
msgid ""
"Convert samples in the audio fragment to u-LAW encoding and return this as a "
"Python string.  u-LAW is an audio encoding format whereby you get a dynamic "
"range of about 14 bits using only 8 bit samples.  It is used by the Sun "
"audio hardware, among others."
msgstr ""

#: ../Doc/library/audioop.rst:167
msgid ""
"Return a tuple consisting of the minimum and maximum values of all samples "
"in the sound fragment."
msgstr ""

#: ../Doc/library/audioop.rst:173
msgid ""
"Return the maximum of the *absolute value* of all samples in a fragment."
msgstr ""

#: ../Doc/library/audioop.rst:178
msgid "Return the maximum peak-peak value in the sound fragment."
msgstr ""

#: ../Doc/library/audioop.rst:183
msgid ""
"Return a fragment that has all samples in the original fragment multiplied "
"by the floating-point value *factor*.  Overflow is silently ignored."
msgstr ""

#: ../Doc/library/audioop.rst:189
msgid "Convert the frame rate of the input fragment."
msgstr ""

#: ../Doc/library/audioop.rst:191
msgid ""
"*state* is a tuple containing the state of the converter.  The converter "
"returns a tuple ``(newfragment, newstate)``, and *newstate* should be passed "
"to the next call of :func:`ratecv`.  The initial call should pass ``None`` "
"as the state."
msgstr ""

#: ../Doc/library/audioop.rst:195
msgid ""
"The *weightA* and *weightB* arguments are parameters for a simple digital "
"filter and default to ``1`` and ``0`` respectively."
msgstr ""

#: ../Doc/library/audioop.rst:201
msgid "Reverse the samples in a fragment and returns the modified fragment."
msgstr ""

#: ../Doc/library/audioop.rst:206
msgid ""
"Return the root-mean-square of the fragment, i.e. ``sqrt(sum(S_i^2)/n)``."
msgstr ""

#: ../Doc/library/audioop.rst:208
msgid "This is a measure of the power in an audio signal."
msgstr ""

#: ../Doc/library/audioop.rst:213
msgid ""
"Convert a stereo fragment to a mono fragment.  The left channel is "
"multiplied by *lfactor* and the right channel by *rfactor* before adding the "
"two channels to give a mono signal."
msgstr ""

#: ../Doc/library/audioop.rst:220
msgid ""
"Generate a stereo fragment from a mono fragment.  Each pair of samples in "
"the stereo fragment are computed from the mono sample, whereby left channel "
"samples are multiplied by *lfactor* and right channel samples by *rfactor*."
msgstr ""

#: ../Doc/library/audioop.rst:227
msgid ""
"Convert sound fragments in u-LAW encoding to linearly encoded sound "
"fragments. u-LAW encoding always uses 8 bits samples, so *width* refers only "
"to the sample width of the output fragment here."
msgstr ""

#: ../Doc/library/audioop.rst:231
msgid ""
"Note that operations such as :func:`.mul` or :func:`.max` make no "
"distinction between mono and stereo fragments, i.e. all samples are treated "
"equal.  If this is a problem the stereo fragment should be split into two "
"mono fragments first and recombined later.  Here is an example of how to do "
"that::"
msgstr ""

#: ../Doc/library/audioop.rst:245
msgid ""
"If you use the ADPCM coder to build network packets and you want your "
"protocol to be stateless (i.e. to be able to tolerate packet loss) you "
"should not only transmit the data but also the state.  Note that you should "
"send the *initial* state (the one you passed to :func:`lin2adpcm`) along to "
"the decoder, not the final state (as returned by the coder).  If you want to "
"use :func:`struct.struct` to store the state in binary you can code the "
"first element (the predicted value) in 16 bits and the second (the delta "
"index) in 8."
msgstr ""

#: ../Doc/library/audioop.rst:253
msgid ""
"The ADPCM coders have never been tried against other ADPCM coders, only "
"against themselves.  It could well be that I misinterpreted the standards in "
"which case they will not be interoperable with the respective standards."
msgstr ""

#: ../Doc/library/audioop.rst:257
msgid ""
"The :func:`find\\*` routines might look a bit funny at first sight. They are "
"primarily meant to do echo cancellation.  A reasonably fast way to do this "
"is to pick the most energetic piece of the output sample, locate that in the "
"input sample and subtract the whole output sample from the input sample::"
msgstr ""

# f9174d41a7e64afe8b8374e68479bc93
#: ../Doc/library/autogil.rst:3
msgid ":mod:`autoGIL` --- Global Interpreter Lock handling in event loops"
msgstr ""

# 1728c3edee40471398dc9674a752e164
#: ../Doc/library/autogil.rst:12
msgid ""
"The :mod:`autoGIL` module provides a function :func:`installAutoGIL` that "
"automatically locks and unlocks Python's :term:`Global Interpreter Lock` "
"when running an event loop."
msgstr ""

# 3ad21e86a0d54e51ab1b594fa5a8e15b
#: ../Doc/library/autogil.rst:23
msgid ""
"Raised if the observer callback cannot be installed, for example because the "
"current thread does not have a run loop."
msgstr ""

# 2e78047db81342b9a978fd0e69c238fa
#: ../Doc/library/autogil.rst:29
msgid ""
"Install an observer callback in the event loop (CFRunLoop) for the current "
"thread, that will lock and unlock the Global Interpreter Lock (GIL) at "
"appropriate times, allowing other Python threads to run while the event loop "
"is idle."
msgstr ""

# 5bc52dae66cb42439eac0ed3caba33a5
#: ../Doc/library/autogil.rst:34
msgid "Availability: OSX 10.1 or later."
msgstr ""

#: ../Doc/library/base64.rst:2
msgid ":mod:`base64` --- RFC 3548: Base16, Base32, Base64 Data Encodings"
msgstr ""

#: ../Doc/library/base64.rst:12
msgid ""
"This module provides data encoding and decoding as specified in :rfc:`3548`. "
"This standard defines the Base16, Base32, and Base64 algorithms for encoding "
"and decoding arbitrary binary strings into text strings that can be safely "
"sent by email, used as parts of URLs, or included as part of an HTTP POST "
"request.  The encoding algorithm is not the same as the :program:`uuencode` "
"program."
msgstr ""

#: ../Doc/library/base64.rst:18
msgid ""
"There are two interfaces provided by this module.  The modern interface "
"supports encoding and decoding string objects using all three alphabets.  "
"The legacy interface provides for encoding and decoding to and from file-"
"like objects as well as strings, but only using the Base64 standard alphabet."
msgstr ""

# 9d6560cad0a9401189d07636cc507bdc
#: ../Doc/library/base64.rst:23
msgid "The modern interface, which was introduced in Python 2.4, provides:"
msgstr ""

#: ../Doc/library/base64.rst:28
msgid "Encode a string use Base64."
msgstr ""

#: ../Doc/library/base64.rst:30
msgid ""
"*s* is the string to encode.  Optional *altchars* must be a string of at "
"least length 2 (additional characters are ignored) which specifies an "
"alternative alphabet for the ``+`` and ``/`` characters.  This allows an "
"application to e.g. generate URL or filesystem safe Base64 strings.  The "
"default is ``None``, for which the standard Base64 alphabet is used."
msgstr ""

#: ../Doc/library/base64.rst:36
msgid "The encoded string is returned."
msgstr ""

#: ../Doc/library/base64.rst:41
msgid "Decode a Base64 encoded string."
msgstr ""

#: ../Doc/library/base64.rst:43
msgid ""
"*s* is the string to decode.  Optional *altchars* must be a string of at "
"least length 2 (additional characters are ignored) which specifies the "
"alternative alphabet used instead of the ``+`` and ``/`` characters."
msgstr ""

#: ../Doc/library/base64.rst:47 ../Doc/library/base64.rst:96
#: ../Doc/library/base64.rst:116
msgid ""
"The decoded string is returned.  A :exc:`TypeError` is raised if *s* were "
"incorrectly padded or if there are non-alphabet characters present in the "
"string."
msgstr ""

#: ../Doc/library/base64.rst:54
msgid "Encode string *s* using the standard Base64 alphabet."
msgstr ""

#: ../Doc/library/base64.rst:59
msgid "Decode string *s* using the standard Base64 alphabet."
msgstr ""

#: ../Doc/library/base64.rst:64
msgid ""
"Encode string *s* using a URL-safe alphabet, which substitutes ``-`` instead "
"of ``+`` and ``_`` instead of ``/`` in the standard Base64 alphabet.  The "
"result can still contain ``=``."
msgstr ""

#: ../Doc/library/base64.rst:71
msgid ""
"Decode string *s* using a URL-safe alphabet, which substitutes ``-`` instead "
"of ``+`` and ``_`` instead of ``/`` in the standard Base64 alphabet."
msgstr ""

#: ../Doc/library/base64.rst:77
msgid ""
"Encode a string using Base32.  *s* is the string to encode.  The encoded "
"string is returned."
msgstr ""

#: ../Doc/library/base64.rst:83
msgid "Decode a Base32 encoded string."
msgstr ""

#: ../Doc/library/base64.rst:85 ../Doc/library/base64.rst:112
msgid ""
"*s* is the string to decode.  Optional *casefold* is a flag specifying "
"whether a lowercase alphabet is acceptable as input.  For security purposes, "
"the default is ``False``."
msgstr ""

#: ../Doc/library/base64.rst:89
msgid ""
":rfc:`3548` allows for optional mapping of the digit 0 (zero) to the letter "
"O (oh), and for optional mapping of the digit 1 (one) to either the letter I "
"(eye) or letter L (el).  The optional argument *map01* when not ``None``, "
"specifies which letter the digit 1 should be mapped to (when *map01* is not "
"``None``, the digit 0 is always mapped to the letter O).  For security "
"purposes the default is ``None``, so that 0 and 1 are not allowed in the "
"input."
msgstr ""

#: ../Doc/library/base64.rst:103
msgid "Encode a string using Base16."
msgstr ""

#: ../Doc/library/base64.rst:105
msgid "*s* is the string to encode.  The encoded string is returned."
msgstr ""

#: ../Doc/library/base64.rst:110
msgid "Decode a Base16 encoded string."
msgstr ""

#: ../Doc/library/base64.rst:120
msgid "The legacy interface:"
msgstr ""

# 35ec3789bb7640c89e87b3388bf49dec
#: ../Doc/library/base64.rst:125
msgid ""
"Decode the contents of the *input* file and write the resulting binary data "
"to the *output* file. *input* and *output* must either be file objects or "
"objects that mimic the file object interface. *input* will be read until "
"``input.read()`` returns an empty string."
msgstr ""

# d78fbe2b859d4a2d9ff8f88a9a887585
#: ../Doc/library/base64.rst:133
msgid ""
"Decode the string *s*, which must contain one or more lines of base64 "
"encoded data, and return a string containing the resulting binary data."
msgstr ""

# 3b1569fd053a4cd8bf210dd9bd536dcd
#: ../Doc/library/base64.rst:139
msgid ""
"Encode the contents of the *input* file and write the resulting base64 "
"encoded data to the *output* file. *input* and *output* must either be file "
"objects or objects that mimic the file object interface. *input* will be "
"read until ``input.read()`` returns an empty string.  :func:`encode` returns "
"the encoded data plus a trailing newline character (``'\\n'``)."
msgstr ""

# b36871922e23474c87515c90638bd509
#: ../Doc/library/base64.rst:148
msgid ""
"Encode the string *s*, which can contain arbitrary binary data, and return a "
"string containing one or more lines of base64-encoded data. :func:"
"`encodestring` returns a string containing one or more lines of base64-"
"encoded data always including an extra trailing newline (``'\\n'``)."
msgstr ""

#: ../Doc/library/base64.rst:153
msgid "An example usage of the module:"
msgstr ""

#: ../Doc/library/base64.rst:167 ../Doc/library/binhex.rst:48
#: ../Doc/library/uu.rst:61
msgid ""
"Support module containing ASCII-to-binary and binary-to-ASCII conversions."
msgstr ""

#: ../Doc/library/base64.rst:170
msgid ""
"Section 5.2, \"Base64 Content-Transfer-Encoding,\" provides the definition "
"of the base64 encoding."
msgstr ""

# f882b76ab0c040d1a4ff010e0491cf40
#: ../Doc/library/basehttpserver.rst:2
msgid ":mod:`BaseHTTPServer` --- Basic HTTP server"
msgstr ""

# 26174b60eab44b0f91d511feec3f1994
#: ../Doc/library/basehttpserver.rst:8
msgid ""
"The :mod:`BaseHTTPServer` module has been merged into :mod:`http.server` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# d00ca249d1884118a87ae8661eaaae18
#: ../Doc/library/basehttpserver.rst:21
msgid "**Source code:** :source:`Lib/BaseHTTPServer.py`"
msgstr ""

# 2db2f9cb4f5947d8a1fa3dab0980372f
#: ../Doc/library/basehttpserver.rst:25
msgid ""
"This module defines two classes for implementing HTTP servers (Web servers). "
"Usually, this module isn't used directly, but is used as a basis for "
"building functioning Web servers. See the :mod:`SimpleHTTPServer` and :mod:"
"`CGIHTTPServer` modules."
msgstr ""

# 596ca7fdefb2428785589803a391ecf3
#: ../Doc/library/basehttpserver.rst:30
msgid ""
"The first class, :class:`HTTPServer`, is a :class:`SocketServer.TCPServer` "
"subclass, and therefore implements the :class:`SocketServer.BaseServer` "
"interface.  It creates and listens at the HTTP socket, dispatching the "
"requests to a handler.  Code to create and run the server looks like this::"
msgstr ""

#: ../Doc/library/basehttpserver.rst:44
msgid ""
"This class builds on the :class:`TCPServer` class by storing the server "
"address as instance variables named :attr:`server_name` and :attr:"
"`server_port`. The server is accessible by the handler, typically through "
"the handler's :attr:`server` instance variable."
msgstr ""

# b9db7768b9b6496c9a02a977fb115c94
#: ../Doc/library/basehttpserver.rst:52
msgid ""
"This class is used to handle the HTTP requests that arrive at the server. By "
"itself, it cannot respond to any actual HTTP requests; it must be subclassed "
"to handle each request method (e.g. GET or POST). :class:"
"`BaseHTTPRequestHandler` provides a number of class and instance variables, "
"and methods for use by subclasses."
msgstr ""

#: ../Doc/library/basehttpserver.rst:58
msgid ""
"The handler will parse the request and the headers, then call a method "
"specific to the request type. The method name is constructed from the "
"request. For example, for the request method ``SPAM``, the :meth:`do_SPAM` "
"method will be called with no arguments. All of the relevant information is "
"stored in instance variables of the handler.  Subclasses should not need to "
"override or extend the :meth:`__init__` method."
msgstr ""

#: ../Doc/library/basehttpserver.rst:65
msgid ":class:`BaseHTTPRequestHandler` has the following instance variables:"
msgstr ""

#: ../Doc/library/basehttpserver.rst:70
msgid ""
"Contains a tuple of the form ``(host, port)`` referring to the client's "
"address."
msgstr ""

#: ../Doc/library/basehttpserver.rst:76
msgid "Contains the server instance."
msgstr ""

#: ../Doc/library/basehttpserver.rst:81
msgid "Contains the command (request type). For example, ``'GET'``."
msgstr ""

#: ../Doc/library/basehttpserver.rst:86
msgid "Contains the request path."
msgstr ""

#: ../Doc/library/basehttpserver.rst:91
msgid ""
"Contains the version string from the request. For example, ``'HTTP/1.0'``."
msgstr ""

#: ../Doc/library/basehttpserver.rst:96
msgid ""
"Holds an instance of the class specified by the :attr:`MessageClass` class "
"variable. This instance parses and manages the headers in the HTTP request."
msgstr ""

#: ../Doc/library/basehttpserver.rst:103
msgid ""
"Contains an input stream, positioned at the start of the optional input data."
msgstr ""

#: ../Doc/library/basehttpserver.rst:109
msgid ""
"Contains the output stream for writing a response back to the client. Proper "
"adherence to the HTTP protocol must be used when writing to this stream."
msgstr ""

#: ../Doc/library/basehttpserver.rst:114
msgid ":class:`BaseHTTPRequestHandler` has the following class variables:"
msgstr ""

#: ../Doc/library/basehttpserver.rst:119
msgid ""
"Specifies the server software version.  You may want to override this. The "
"format is multiple whitespace-separated strings, where each string is of the "
"form name[/version]. For example, ``'BaseHTTP/0.2'``."
msgstr ""

#: ../Doc/library/basehttpserver.rst:126
msgid ""
"Contains the Python system version, in a form usable by the :attr:"
"`version_string` method and the :attr:`server_version` class variable. For "
"example, ``'Python/1.4'``."
msgstr ""

#: ../Doc/library/basehttpserver.rst:133
msgid ""
"Specifies a format string for building an error response to the client. It "
"uses parenthesized, keyed format specifiers, so the format operand must be a "
"dictionary. The *code* key should be an integer, specifying the numeric HTTP "
"error code value. *message* should be a string containing a (detailed) error "
"message of what occurred, and *explain* should be an explanation of the "
"error code number. Default *message* and *explain* values can found in the "
"*responses* class variable."
msgstr ""

#: ../Doc/library/basehttpserver.rst:144
msgid ""
"Specifies the Content-Type HTTP header of error responses sent to the "
"client.  The default value is ``'text/html'``."
msgstr ""

#: ../Doc/library/basehttpserver.rst:153
msgid ""
"This specifies the HTTP protocol version used in responses.  If set to "
"``'HTTP/1.1'``, the server will permit HTTP persistent connections; however, "
"your server *must* then include an accurate ``Content-Length`` header "
"(using :meth:`send_header`) in all of its responses to clients. For "
"backwards compatibility, the setting defaults to ``'HTTP/1.0'``."
msgstr ""

# a2d44f075b344f05806dbe52347f0059
#: ../Doc/library/basehttpserver.rst:164
msgid ""
"Specifies a :class:`rfc822.Message`\\ -like class to parse HTTP headers. "
"Typically, this is not overridden, and it defaults to :class:`mimetools."
"Message`."
msgstr ""

#: ../Doc/library/basehttpserver.rst:171
msgid ""
"This variable contains a mapping of error code integers to two-element "
"tuples containing a short and long message. For example, ``{code: "
"(shortmessage, longmessage)}``. The *shortmessage* is usually used as the "
"*message* key in an error response, and *longmessage* as the *explain* key "
"(see the :attr:`error_message_format` class variable)."
msgstr ""

#: ../Doc/library/basehttpserver.rst:178
msgid "A :class:`BaseHTTPRequestHandler` instance has the following methods:"
msgstr ""

#: ../Doc/library/basehttpserver.rst:183
msgid ""
"Calls :meth:`handle_one_request` once (or, if persistent connections are "
"enabled, multiple times) to handle incoming HTTP requests. You should never "
"need to override it; instead, implement appropriate :meth:`do_\\*` methods."
msgstr ""

#: ../Doc/library/basehttpserver.rst:191
msgid ""
"This method will parse and dispatch the request to the appropriate :meth:`do_"
"\\*` method.  You should never need to override it."
msgstr ""

#: ../Doc/library/basehttpserver.rst:197
msgid ""
"Sends and logs a complete error reply to the client. The numeric *code* "
"specifies the HTTP error code, with *message* as optional, more specific "
"text. A complete set of headers is sent, followed by text composed using "
"the :attr:`error_message_format` class variable."
msgstr ""

#: ../Doc/library/basehttpserver.rst:205
msgid ""
"Sends a response header and logs the accepted request. The HTTP response "
"line is sent, followed by *Server* and *Date* headers. The values for these "
"two headers are picked up from the :meth:`version_string` and :meth:"
"`date_time_string` methods, respectively."
msgstr ""

#: ../Doc/library/basehttpserver.rst:213
msgid ""
"Writes a specific HTTP header to the output stream. *keyword* should specify "
"the header keyword, with *value* specifying its value."
msgstr ""

#: ../Doc/library/basehttpserver.rst:219
msgid ""
"Sends a blank line, indicating the end of the HTTP headers in the response."
msgstr ""

#: ../Doc/library/basehttpserver.rst:225
msgid ""
"Logs an accepted (successful) request. *code* should specify the numeric "
"HTTP code associated with the response. If a size of the response is "
"available, then it should be passed as the *size* parameter."
msgstr ""

#: ../Doc/library/basehttpserver.rst:232
msgid ""
"Logs an error when a request cannot be fulfilled. By default, it passes the "
"message to :meth:`log_message`, so it takes the same arguments (*format* and "
"additional values)."
msgstr ""

# 57b458d0889440f5a152c0bf467b6eed
#: ../Doc/library/basehttpserver.rst:239
msgid ""
"Logs an arbitrary message to ``sys.stderr``. This is typically overridden to "
"create custom error logging mechanisms. The *format* argument is a standard "
"printf-style format string, where the additional arguments to :meth:"
"`log_message` are applied as inputs to the formatting. The client ip address "
"and current date and time are prefixed to every message logged."
msgstr ""

#: ../Doc/library/basehttpserver.rst:248
msgid ""
"Returns the server software's version string. This is a combination of the :"
"attr:`server_version` and :attr:`sys_version` class variables."
msgstr ""

# f2b260004aa94075b98f6c17cd568923
#: ../Doc/library/basehttpserver.rst:254
msgid ""
"Returns the date and time given by *timestamp* (which must be in the format "
"returned by :func:`time.time`), formatted for a message header. If "
"*timestamp* is omitted, it uses the current date and time."
msgstr ""

#: ../Doc/library/basehttpserver.rst:258
msgid "The result looks like ``'Sun, 06 Nov 1994 08:49:37 GMT'``."
msgstr ""

#: ../Doc/library/basehttpserver.rst:266
msgid "Returns the current date and time, formatted for logging."
msgstr ""

#: ../Doc/library/basehttpserver.rst:271
msgid ""
"Returns the client address, formatted for logging. A name lookup is "
"performed on the client's IP address."
msgstr ""

#: ../Doc/library/basehttpserver.rst:276
msgid "More examples"
msgstr ""

# d97d5935d4434ea28e0dc7cf649ec41c
#: ../Doc/library/basehttpserver.rst:278
msgid ""
"To create a server that doesn't run forever, but until some condition is "
"fulfilled::"
msgstr ""

# 75d884c0baff4376979d9f069f8d615e
#: ../Doc/library/basehttpserver.rst:297
msgid "Extended request handler that supports CGI scripts."
msgstr ""

# 19bbfdc2d9884c6c94372443c901e644
#: ../Doc/library/basehttpserver.rst:300
msgid ""
"Basic request handler that limits response to files actually under the "
"document root."
msgstr ""

# c6186d97e82a4f5a8ae0fb8e1af1c763
#: ../Doc/library/bastion.rst:3
msgid ":mod:`Bastion` --- Restricting access to objects"
msgstr ""

# c0d115086127406ea603d7bfb4e80e15
# 72964db5f0e4414aa247275610ae5181
#: ../Doc/library/bastion.rst:20 ../Doc/library/rexec.rst:16
msgid ""
"The documentation has been left in place to help in reading old code that "
"uses the module."
msgstr ""

# 8d1d83b8966b4efcbf55aac902e3e2bb
#: ../Doc/library/bastion.rst:23
msgid ""
"According to the dictionary, a bastion is \"a fortified area or position\", "
"or \"something that is considered a stronghold.\"  It's a suitable name for "
"this module, which provides a way to forbid access to certain attributes of "
"an object.  It must always be used with the :mod:`rexec` module, in order to "
"allow restricted-mode programs access to certain safe attributes of an "
"object, while denying access to other, unsafe attributes."
msgstr ""

# ccb3c1e1513345c1ac6bdb6f6c21d803
#: ../Doc/library/bastion.rst:39
msgid ""
"Protect the object *object*, returning a bastion for the object.  Any "
"attempt to access one of the object's attributes will have to be approved by "
"the *filter* function; if the access is denied an :exc:`AttributeError` "
"exception will be raised."
msgstr ""

# 32892da78e0c4b30bd4147466e2edeeb
#: ../Doc/library/bastion.rst:44
msgid ""
"If present, *filter* must be a function that accepts a string containing an "
"attribute name, and returns true if access to that attribute will be "
"permitted; if *filter* returns false, the access is denied.  The default "
"filter denies access to any function beginning with an underscore "
"(``'_'``).  The bastion's string representation will be ``<Bastion for "
"name>`` if a value for *name* is provided; otherwise, ``repr(object)`` will "
"be used."
msgstr ""

# 64fe34e2407a400792666dfc90872f7f
#: ../Doc/library/bastion.rst:51
msgid ""
"*class*, if present, should be a subclass of :class:`BastionClass`;  see the "
"code in :file:`bastion.py` for the details.  Overriding the default :class:"
"`BastionClass` will rarely be required."
msgstr ""

# c6b553c3b8cc4739a6fe327bc4311987
#: ../Doc/library/bastion.rst:58
msgid ""
"Class which actually implements bastion objects.  This is the default class "
"used by :func:`Bastion`.  The *getfunc* parameter is a function which "
"returns the value of an attribute which should be exposed to the restricted "
"execution environment when called with the name of the attribute as the only "
"parameter. *name* is used to construct the :func:`repr` of the :class:"
"`BastionClass` instance."
msgstr ""

#: ../Doc/library/bdb.rst:2
msgid ":mod:`bdb` --- Debugger framework"
msgstr ""

# 276acfd1d4b449779b0e9de8e388c0ac
#: ../Doc/library/bdb.rst:7
msgid "**Source code:** :source:`Lib/bdb.py`"
msgstr ""

#: ../Doc/library/bdb.rst:11
msgid ""
"The :mod:`bdb` module handles basic debugger functions, like setting "
"breakpoints or managing execution via the debugger."
msgstr ""

#: ../Doc/library/bdb.rst:14 ../Doc/library/webbrowser.rst:43
msgid "The following exception is defined:"
msgstr ""

#: ../Doc/library/bdb.rst:18
msgid "Exception raised by the :class:`Bdb` class for quitting the debugger."
msgstr ""

#: ../Doc/library/bdb.rst:21
msgid "The :mod:`bdb` module also defines two classes:"
msgstr ""

#: ../Doc/library/bdb.rst:25
msgid ""
"This class implements temporary breakpoints, ignore counts, disabling and "
"(re-)enabling, and conditionals."
msgstr ""

#: ../Doc/library/bdb.rst:28
msgid ""
"Breakpoints are indexed by number through a list called :attr:`bpbynumber` "
"and by ``(file, line)`` pairs through :attr:`bplist`.  The former points to "
"a single instance of class :class:`Breakpoint`.  The latter points to a list "
"of such instances since there may be more than one breakpoint per line."
msgstr ""

#: ../Doc/library/bdb.rst:33
msgid ""
"When creating a breakpoint, its associated filename should be in canonical "
"form.  If a *funcname* is defined, a breakpoint hit will be counted when the "
"first line of that function is executed.  A conditional breakpoint always "
"counts a hit."
msgstr ""

#: ../Doc/library/bdb.rst:38
msgid ":class:`Breakpoint` instances have the following methods:"
msgstr ""

#: ../Doc/library/bdb.rst:42
msgid ""
"Delete the breakpoint from the list associated to a file/line.  If it is the "
"last breakpoint in that position, it also deletes the entry for the file/"
"line."
msgstr ""

#: ../Doc/library/bdb.rst:49
msgid "Mark the breakpoint as enabled."
msgstr ""

#: ../Doc/library/bdb.rst:54
msgid "Mark the breakpoint as disabled."
msgstr ""

#: ../Doc/library/bdb.rst:59
msgid "Print all the information about the breakpoint:"
msgstr ""

#: ../Doc/library/bdb.rst:61
msgid "The breakpoint number."
msgstr ""

#: ../Doc/library/bdb.rst:62
msgid "If it is temporary or not."
msgstr ""

#: ../Doc/library/bdb.rst:63
msgid "Its file,line position."
msgstr ""

#: ../Doc/library/bdb.rst:64
msgid "The condition that causes a break."
msgstr ""

#: ../Doc/library/bdb.rst:65
msgid "If it must be ignored the next N times."
msgstr ""

#: ../Doc/library/bdb.rst:66
msgid "The breakpoint hit count."
msgstr ""

#: ../Doc/library/bdb.rst:71
msgid "The :class:`Bdb` class acts as a generic Python debugger base class."
msgstr ""

#: ../Doc/library/bdb.rst:73
msgid ""
"This class takes care of the details of the trace facility; a derived class "
"should implement user interaction.  The standard debugger class (:class:`pdb."
"Pdb`) is an example."
msgstr ""

#: ../Doc/library/bdb.rst:77
msgid ""
"The *skip* argument, if given, must be an iterable of glob-style module name "
"patterns.  The debugger will not step into frames that originate in a module "
"that matches one of these patterns. Whether a frame is considered to "
"originate in a certain module is determined by the ``__name__`` in the frame "
"globals."
msgstr ""

#: ../Doc/library/bdb.rst:86
msgid ""
"The following methods of :class:`Bdb` normally don't need to be overridden."
msgstr ""

#: ../Doc/library/bdb.rst:90
msgid ""
"Auxiliary method for getting a filename in a canonical form, that is, as a "
"case-normalized (on case-insensitive filesystems) absolute path, stripped of "
"surrounding angle brackets."
msgstr ""

#: ../Doc/library/bdb.rst:96
msgid ""
"Set the :attr:`botframe`, :attr:`stopframe`, :attr:`returnframe` and :attr:"
"`quitting` attributes with values ready to start debugging."
msgstr ""

#: ../Doc/library/bdb.rst:101
msgid ""
"This function is installed as the trace function of debugged frames.  Its "
"return value is the new trace function (in most cases, that is, itself)."
msgstr ""

#: ../Doc/library/bdb.rst:104
msgid ""
"The default implementation decides how to dispatch a frame, depending on the "
"type of event (passed as a string) that is about to be executed. *event* can "
"be one of the following:"
msgstr ""

#: ../Doc/library/bdb.rst:108
msgid "``\"line\"``: A new line of code is going to be executed."
msgstr ""

#: ../Doc/library/bdb.rst:109
msgid ""
"``\"call\"``: A function is about to be called, or another code block "
"entered."
msgstr ""

#: ../Doc/library/bdb.rst:111
msgid "``\"return\"``: A function or other code block is about to return."
msgstr ""

#: ../Doc/library/bdb.rst:112
msgid "``\"exception\"``: An exception has occurred."
msgstr ""

#: ../Doc/library/bdb.rst:113
msgid "``\"c_call\"``: A C function is about to be called."
msgstr ""

#: ../Doc/library/bdb.rst:114
msgid "``\"c_return\"``: A C function has returned."
msgstr ""

# 3c22051c616944d5bb9e50e0753a7d7e
#: ../Doc/library/bdb.rst:115
msgid "``\"c_exception\"``: A C function has raised an exception."
msgstr ""

#: ../Doc/library/bdb.rst:117
msgid ""
"For the Python events, specialized functions (see below) are called.  For "
"the C events, no action is taken."
msgstr ""

#: ../Doc/library/bdb.rst:120
msgid "The *arg* parameter depends on the previous event."
msgstr ""

#: ../Doc/library/bdb.rst:122
msgid ""
"See the documentation for :func:`sys.settrace` for more information on the "
"trace function.  For more information on code and frame objects, refer to :"
"ref:`types`."
msgstr ""

#: ../Doc/library/bdb.rst:128
msgid ""
"If the debugger should stop on the current line, invoke the :meth:"
"`user_line` method (which should be overridden in subclasses). Raise a :exc:"
"`BdbQuit` exception if the :attr:`Bdb.quitting` flag is set (which can be "
"set from :meth:`user_line`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""

#: ../Doc/library/bdb.rst:136
msgid ""
"If the debugger should stop on this function call, invoke the :meth:"
"`user_call` method (which should be overridden in subclasses). Raise a :exc:"
"`BdbQuit` exception if the :attr:`Bdb.quitting` flag is set (which can be "
"set from :meth:`user_call`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""

#: ../Doc/library/bdb.rst:144
msgid ""
"If the debugger should stop on this function return, invoke the :meth:"
"`user_return` method (which should be overridden in subclasses). Raise a :"
"exc:`BdbQuit` exception if the :attr:`Bdb.quitting` flag is set (which can "
"be set from :meth:`user_return`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""

#: ../Doc/library/bdb.rst:152
msgid ""
"If the debugger should stop at this exception, invokes the :meth:"
"`user_exception` method (which should be overridden in subclasses). Raise a :"
"exc:`BdbQuit` exception if the :attr:`Bdb.quitting` flag is set (which can "
"be set from :meth:`user_exception`).  Return a reference to the :meth:"
"`trace_dispatch` method for further tracing in that scope."
msgstr ""

#: ../Doc/library/bdb.rst:158
msgid ""
"Normally derived classes don't override the following methods, but they may "
"if they want to redefine the definition of stopping and breakpoints."
msgstr ""

#: ../Doc/library/bdb.rst:163
msgid ""
"This method checks if the *frame* is somewhere below :attr:`botframe` in the "
"call stack.  :attr:`botframe` is the frame in which debugging started."
msgstr ""

#: ../Doc/library/bdb.rst:168
msgid ""
"This method checks if there is a breakpoint in the filename and line "
"belonging to *frame* or, at least, in the current function.  If the "
"breakpoint is a temporary one, this method deletes it."
msgstr ""

#: ../Doc/library/bdb.rst:174
msgid ""
"This method checks if there is a breakpoint in the filename of the current "
"frame."
msgstr ""

#: ../Doc/library/bdb.rst:177
msgid ""
"Derived classes should override these methods to gain control over debugger "
"operation."
msgstr ""

#: ../Doc/library/bdb.rst:182
msgid ""
"This method is called from :meth:`dispatch_call` when there is the "
"possibility that a break might be necessary anywhere inside the called "
"function."
msgstr ""

#: ../Doc/library/bdb.rst:188
msgid ""
"This method is called from :meth:`dispatch_line` when either :meth:"
"`stop_here` or :meth:`break_here` yields True."
msgstr ""

#: ../Doc/library/bdb.rst:193
msgid ""
"This method is called from :meth:`dispatch_return` when :meth:`stop_here` "
"yields True."
msgstr ""

#: ../Doc/library/bdb.rst:198
msgid ""
"This method is called from :meth:`dispatch_exception` when :meth:`stop_here` "
"yields True."
msgstr ""

#: ../Doc/library/bdb.rst:203
msgid "Handle how a breakpoint must be removed when it is a temporary one."
msgstr ""

#: ../Doc/library/bdb.rst:205
msgid "This method must be implemented by derived classes."
msgstr ""

#: ../Doc/library/bdb.rst:208
msgid ""
"Derived classes and clients can call the following methods to affect the "
"stepping state."
msgstr ""

#: ../Doc/library/bdb.rst:213
msgid "Stop after one line of code."
msgstr ""

#: ../Doc/library/bdb.rst:217
msgid "Stop on the next line in or below the given frame."
msgstr ""

#: ../Doc/library/bdb.rst:221
msgid "Stop when returning from the given frame."
msgstr ""

#: ../Doc/library/bdb.rst:225
msgid ""
"Stop when the line with the line no greater than the current one is reached "
"or when returning from current frame"
msgstr ""

#: ../Doc/library/bdb.rst:230
msgid ""
"Start debugging from *frame*.  If *frame* is not specified, debugging starts "
"from caller's frame."
msgstr ""

#: ../Doc/library/bdb.rst:235
msgid ""
"Stop only at breakpoints or when finished.  If there are no breakpoints, set "
"the system trace function to None."
msgstr ""

#: ../Doc/library/bdb.rst:240
msgid ""
"Set the :attr:`quitting` attribute to True.  This raises :exc:`BdbQuit` in "
"the next call to one of the :meth:`dispatch_\\*` methods."
msgstr ""

#: ../Doc/library/bdb.rst:244
msgid ""
"Derived classes and clients can call the following methods to manipulate "
"breakpoints.  These methods return a string containing an error message if "
"something went wrong, or ``None`` if all is well."
msgstr ""

#: ../Doc/library/bdb.rst:250
msgid ""
"Set a new breakpoint.  If the *lineno* line doesn't exist for the *filename* "
"passed as argument, return an error message.  The *filename* should be in "
"canonical form, as described in the :meth:`canonic` method."
msgstr ""

#: ../Doc/library/bdb.rst:256
msgid ""
"Delete the breakpoints in *filename* and *lineno*.  If none were set, an "
"error message is returned."
msgstr ""

#: ../Doc/library/bdb.rst:261
msgid ""
"Delete the breakpoint which has the index *arg* in the :attr:`Breakpoint."
"bpbynumber`.  If *arg* is not numeric or out of range, return an error "
"message."
msgstr ""

#: ../Doc/library/bdb.rst:267
msgid ""
"Delete all breakpoints in *filename*.  If none were set, an error message is "
"returned."
msgstr ""

#: ../Doc/library/bdb.rst:272
msgid "Delete all existing breakpoints."
msgstr ""

#: ../Doc/library/bdb.rst:276
msgid "Check if there is a breakpoint for *lineno* of *filename*."
msgstr ""

#: ../Doc/library/bdb.rst:280
msgid ""
"Return all breakpoints for *lineno* in *filename*, or an empty list if none "
"are set."
msgstr ""

#: ../Doc/library/bdb.rst:285
msgid "Return all breakpoints in *filename*, or an empty list if none are set."
msgstr ""

#: ../Doc/library/bdb.rst:289
msgid "Return all breakpoints that are set."
msgstr ""

#: ../Doc/library/bdb.rst:292
msgid ""
"Derived classes and clients can call the following methods to get a data "
"structure representing a stack trace."
msgstr ""

#: ../Doc/library/bdb.rst:297
msgid ""
"Get a list of records for a frame and all higher (calling) and lower frames, "
"and the size of the higher part."
msgstr ""

#: ../Doc/library/bdb.rst:302
msgid ""
"Return a string with information about a stack entry, identified by a ``"
"(frame, lineno)`` tuple:"
msgstr ""

#: ../Doc/library/bdb.rst:305
msgid "The canonical form of the filename which contains the frame."
msgstr ""

#: ../Doc/library/bdb.rst:306
msgid "The function name, or ``\"<lambda>\"``."
msgstr ""

#: ../Doc/library/bdb.rst:307
msgid "The input arguments."
msgstr ""

#: ../Doc/library/bdb.rst:308
msgid "The return value."
msgstr ""

#: ../Doc/library/bdb.rst:309
msgid "The line of code (if it exists)."
msgstr ""

#: ../Doc/library/bdb.rst:312
msgid ""
"The following two methods can be called by clients to use a debugger to "
"debug a :term:`statement`, given as a string."
msgstr ""

# 3c2d6eb6edbb46c7b4748b99260ca5c1
#: ../Doc/library/bdb.rst:317
msgid ""
"Debug a statement executed via the :keyword:`exec` statement.  *globals* "
"defaults to :attr:`__main__.__dict__`, *locals* defaults to *globals*."
msgstr ""

#: ../Doc/library/bdb.rst:322
msgid ""
"Debug an expression executed via the :func:`eval` function.  *globals* and "
"*locals* have the same meaning as in :meth:`run`."
msgstr ""

#: ../Doc/library/bdb.rst:327
msgid "For backwards compatibility.  Calls the :meth:`run` method."
msgstr ""

#: ../Doc/library/bdb.rst:331
msgid "Debug a single function call, and return its result."
msgstr ""

#: ../Doc/library/bdb.rst:334
msgid "Finally, the module defines the following functions:"
msgstr ""

#: ../Doc/library/bdb.rst:338
msgid ""
"Check whether we should break here, depending on the way the breakpoint *b* "
"was set."
msgstr ""

#: ../Doc/library/bdb.rst:341
msgid ""
"If it was set via line number, it checks if ``b.line`` is the same as the "
"one in the frame also passed as argument.  If the breakpoint was set via "
"function name, we have to check we are in the right frame (the right "
"function) and if we are in its first executable line."
msgstr ""

# 4f5f6d6885d646d19c5ddbdd99dc2d60
#: ../Doc/library/bdb.rst:348
msgid ""
"Determine if there is an effective (active) breakpoint at this line of code. "
"Return a tuple of the breakpoint and a boolean that indicates if it is ok to "
"delete a temporary breakpoint.  Return ``(None, None)`` if there is no "
"matching breakpoint."
msgstr ""

# 54245c4c4bcf410dbcd68bff9d8651d5
#: ../Doc/library/bdb.rst:355
msgid "Start debugging with a :class:`Bdb` instance from caller's frame."
msgstr ""

#: ../Doc/library/binascii.rst:3
msgid ":mod:`binascii` --- Convert between binary and ASCII"
msgstr ""

#: ../Doc/library/binascii.rst:15
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`uu`, :"
"mod:`base64`, or :mod:`binhex` instead. The :mod:`binascii` module contains "
"low-level functions written in C for greater speed that are used by the "
"higher-level modules."
msgstr ""

#: ../Doc/library/binascii.rst:22
msgid "The :mod:`binascii` module defines the following functions:"
msgstr ""

#: ../Doc/library/binascii.rst:27
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary "
"data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr ""

#: ../Doc/library/binascii.rst:34
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45."
msgstr ""

#: ../Doc/library/binascii.rst:41
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr ""

#: ../Doc/library/binascii.rst:47
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char. The length of "
"*data* should be at most 57 to adhere to the base64 standard."
msgstr ""

#: ../Doc/library/binascii.rst:54
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as spaces."
msgstr ""

#: ../Doc/library/binascii.rst:61
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores "
"per RFC1522. If the optional argument *header* is present and false, newline "
"characters will be encoded as well; otherwise linefeed conversion might "
"corrupt the binary data stream."
msgstr ""

#: ../Doc/library/binascii.rst:74
msgid ""
"Convert binhex4 formatted ASCII data to binary, without doing RLE-"
"decompression. The string should contain a complete number of binary bytes, "
"or (in case of the last portion of the binhex4 data) have the remaining bits "
"zero."
msgstr ""

#: ../Doc/library/binascii.rst:81
msgid ""
"Perform RLE-decompression on the data, as per the binhex4 standard. The "
"algorithm uses ``0x90`` after a byte as a repeat indicator, followed by a "
"count. A count of ``0`` specifies a byte value of ``0x90``. The routine "
"returns the decompressed data, unless data input data ends in an orphaned "
"repeat indicator, in which case the :exc:`Incomplete` exception is raised."
msgstr ""

#: ../Doc/library/binascii.rst:90
msgid "Perform binhex4 style RLE-compression on *data* and return the result."
msgstr ""

#: ../Doc/library/binascii.rst:95
msgid ""
"Perform hexbin4 binary-to-ASCII translation and return the resulting string. "
"The argument should already be RLE-coded, and have a length divisible by 3 "
"(except possibly the last fragment)."
msgstr ""

#: ../Doc/library/binascii.rst:102
msgid ""
"Compute the binhex4 crc value of *data*, starting with an initial *crc* and "
"returning the result."
msgstr ""

#: ../Doc/library/binascii.rst:108
msgid ""
"Compute CRC-32, the 32-bit checksum of data, starting with an initial crc.  "
"This is consistent with the ZIP file checksum.  Since the algorithm is "
"designed for use as a checksum algorithm, it is not suitable for use as a "
"general hash algorithm.  Use as follows::"
msgstr ""

#: ../Doc/library/binascii.rst:120 ../Doc/library/zlib.rst:96
msgid ""
"To generate the same numeric value across all Python versions and platforms "
"use crc32(data) & 0xffffffff.  If you are only using the checksum in packed "
"binary format this is not necessary as the return value is the correct 32bit "
"binary representation regardless of sign."
msgstr ""

#: ../Doc/library/binascii.rst:140
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"resulting string is therefore twice as long as the length of *data*."
msgstr ""

#: ../Doc/library/binascii.rst:148
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This "
"function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"a :exc:`TypeError` is raised."
msgstr ""

#: ../Doc/library/binascii.rst:156
msgid "Exception raised on errors. These are usually programming errors."
msgstr ""

#: ../Doc/library/binascii.rst:161
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr ""

#: ../Doc/library/binascii.rst:168
msgid "Support for base64 encoding used in MIME email messages."
msgstr ""

#: ../Doc/library/binascii.rst:171
msgid "Support for the binhex format used on the Macintosh."
msgstr ""

#: ../Doc/library/binascii.rst:174
msgid "Support for UU encoding used on Unix."
msgstr ""

#: ../Doc/library/binascii.rst:177
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr ""

#: ../Doc/library/binhex.rst:2
msgid ":mod:`binhex` --- Encode and decode binhex4 files"
msgstr ""

# 584338f36e3e4ec2aeb51058b0f69142
#: ../Doc/library/binhex.rst:8
msgid ""
"This module encodes and decodes files in binhex4 format, a format allowing "
"representation of Macintosh files in ASCII.  On the Macintosh, both forks of "
"a file and the finder information are encoded (or decoded), on other "
"platforms only the data fork is handled."
msgstr ""

# 8082852af48b48b28e818b709f8ae45e
#: ../Doc/library/binhex.rst:15
msgid "In Python 3.x, special Macintosh support has been removed."
msgstr ""

#: ../Doc/library/binhex.rst:18
msgid "The :mod:`binhex` module defines the following functions:"
msgstr ""

#: ../Doc/library/binhex.rst:23
msgid ""
"Convert a binary file with filename *input* to binhex file *output*. The "
"*output* parameter can either be a filename or a file-like object (any "
"object supporting a :meth:`write` and :meth:`close` method)."
msgstr ""

# 314c58666ede42ff9bf08b27cbbf0b76
#: ../Doc/library/binhex.rst:30
msgid ""
"Decode a binhex file *input*. *input* may be a filename or a file-like "
"object supporting :meth:`read` and :meth:`close` methods. The resulting file "
"is written to a file named *output*, unless the argument is omitted in which "
"case the output filename is read from the binhex file."
msgstr ""

#: ../Doc/library/binhex.rst:35
msgid "The following exception is also defined:"
msgstr ""

#: ../Doc/library/binhex.rst:40
msgid ""
"Exception raised when something can't be encoded using the binhex format "
"(for example, a filename is too long to fit in the filename field), or when "
"input is not properly encoded binhex data."
msgstr ""

#: ../Doc/library/binhex.rst:54 ../Doc/library/datetime.rst:1607
#: ../Doc/library/inspect.rst:40 ../Doc/library/posixfile.rst:123
#: ../Doc/library/posixfile.rst:158 ../Doc/library/stdtypes.rst:95
#: ../Doc/library/stdtypes.rst:153 ../Doc/library/stdtypes.rst:288
#: ../Doc/library/stdtypes.rst:386 ../Doc/library/stdtypes.rst:429
#: ../Doc/library/stdtypes.rst:719 ../Doc/library/stdtypes.rst:1421
#: ../Doc/library/stdtypes.rst:1572 ../Doc/library/struct.rst:166
#: ../Doc/library/subprocess.rst:877 ../Doc/library/time.rst:256
#: ../Doc/library/webbrowser.rst:107
msgid "Notes"
msgstr ""

#: ../Doc/library/binhex.rst:56
msgid ""
"There is an alternative, more powerful interface to the coder and decoder, "
"see the source for details."
msgstr ""

#: ../Doc/library/binhex.rst:59
msgid ""
"If you code or decode textfiles on non-Macintosh platforms they will still "
"use the old Macintosh newline convention (carriage-return as end of line)."
msgstr ""

#: ../Doc/library/binhex.rst:62
msgid "As of this writing, :func:`hexbin` appears to not work in all cases."
msgstr ""

#: ../Doc/library/bisect.rst:2
msgid ":mod:`bisect` --- Array bisection algorithm"
msgstr ""

# 064b2129aa1d4b6d8a5888d47701eeaa
#: ../Doc/library/bisect.rst:12
msgid "**Source code:** :source:`Lib/bisect.py`"
msgstr ""

#: ../Doc/library/bisect.rst:16
msgid ""
"This module provides support for maintaining a list in sorted order without "
"having to sort the list after each insertion.  For long lists of items with "
"expensive comparison operations, this can be an improvement over the more "
"common approach.  The module is called :mod:`bisect` because it uses a basic "
"bisection algorithm to do its work.  The source code may be most useful as a "
"working example of the algorithm (the boundary conditions are already "
"right!)."
msgstr ""

#: ../Doc/library/bisect.rst:23 ../Doc/library/heapq.rst:41
msgid "The following functions are provided:"
msgstr ""

# f329364df1f64b67bacb0cb9d0a5d1d9
#: ../Doc/library/bisect.rst:28
msgid ""
"Locate the insertion point for *x* in *a* to maintain sorted order. The "
"parameters *lo* and *hi* may be used to specify a subset of the list which "
"should be considered; by default the entire list is used.  If *x* is already "
"present in *a*, the insertion point will be before (to the left of) any "
"existing entries.  The return value is suitable for use as the first "
"parameter to ``list.insert()`` assuming that *a* is already sorted."
msgstr ""

# d2d05e3d06e849b49ee2fa2711745cc8
#: ../Doc/library/bisect.rst:35
msgid ""
"The returned insertion point *i* partitions the array *a* into two halves so "
"that ``all(val < x for val in a[lo:i])`` for the left side and ``all(val >= "
"x for val in a[i:hi])`` for the right side."
msgstr ""

#: ../Doc/library/bisect.rst:42
msgid ""
"Similar to :func:`bisect_left`, but returns an insertion point which comes "
"after (to the right of) any existing entries of *x* in *a*."
msgstr ""

# 2420c4f6089942d0be19c8109d6fd046
#: ../Doc/library/bisect.rst:45
msgid ""
"The returned insertion point *i* partitions the array *a* into two halves so "
"that ``all(val <= x for val in a[lo:i])`` for the left side and ``all(val > "
"x for val in a[i:hi])`` for the right side."
msgstr ""

# 44445fa02e8d483bbc16a8c3f67f3e03
#: ../Doc/library/bisect.rst:51
msgid ""
"Insert *x* in *a* in sorted order.  This is equivalent to ``a.insert(bisect."
"bisect_left(a, x, lo, hi), x)`` assuming that *a* is already sorted.  Keep "
"in mind that the O(log n) search is dominated by the slow O(n) insertion "
"step."
msgstr ""

#: ../Doc/library/bisect.rst:59
msgid ""
"Similar to :func:`insort_left`, but inserting *x* in *a* after any existing "
"entries of *x*."
msgstr ""

# 402d617b9e4649c5848e1a70808bb8ba
#: ../Doc/library/bisect.rst:64
msgid ""
"`SortedCollection recipe <http://code.activestate.com/recipes/577197-"
"sortedcollection/>`_ that uses bisect to build a full-featured collection "
"class with straight-forward search methods and support for a key-function.  "
"The keys are precomputed to save unnecessary calls to the key function "
"during searches."
msgstr ""

# 373954dd00e94bcfb197b8d03be0bddc
#: ../Doc/library/bisect.rst:72
msgid "Searching Sorted Lists"
msgstr ""

# 0e17d64f1a35491fa100bea6909bdd95
#: ../Doc/library/bisect.rst:74
msgid ""
"The above :func:`bisect` functions are useful for finding insertion points "
"but can be tricky or awkward to use for common searching tasks. The "
"following five functions show how to transform them into the standard "
"lookups for sorted lists::"
msgstr ""

# a2a5409e158944ec89a469d59df56c96
#: ../Doc/library/bisect.rst:116
msgid "Other Examples"
msgstr ""

# f4820af387574eec8dc6082204d7e09c
#: ../Doc/library/bisect.rst:120
msgid ""
"The :func:`bisect` function can be useful for numeric table lookups. This "
"example uses :func:`bisect` to look up a letter grade for an exam score "
"(say) based on a set of ordered numeric breakpoints: 90 and up is an 'A', 80 "
"to 89 is a 'B', and so on::"
msgstr ""

# bf4adb9b49cf4eaba59ddb782c49d693
#: ../Doc/library/bisect.rst:132
msgid ""
"Unlike the :func:`sorted` function, it does not make sense for the :func:"
"`bisect` functions to have *key* or *reversed* arguments because that would "
"lead to an inefficient design (successive calls to bisect functions would "
"not \"remember\" all of the previous key lookups)."
msgstr ""

#: ../Doc/library/bisect.rst:137
msgid ""
"Instead, it is better to search a list of precomputed keys to find the index "
"of the record in question::"
msgstr ""

# 0f4aa1e3df8942a3acd965336846ea1f
#: ../Doc/library/bsddb.rst:3
msgid ":mod:`bsddb` --- Interface to Berkeley DB library"
msgstr ""

# b4d294711f974967914d60a1098540df
#: ../Doc/library/bsddb.rst:13
msgid ""
"The :mod:`bsddb` module provides an interface to the Berkeley DB library.  "
"Users can create hash, btree or record based library files using the "
"appropriate open call. Bsddb objects behave generally like dictionaries.  "
"Keys and values must be strings, however, so to use other objects as keys or "
"to store other kinds of objects the user must serialize them somehow, "
"typically using :func:`marshal.dumps` or  :func:`pickle.dumps`."
msgstr ""

# ec1b25b075a64dada5e879e9f572ea58
#: ../Doc/library/bsddb.rst:20
msgid ""
"The :mod:`bsddb` module requires a Berkeley DB library version from 4.0 thru "
"4.7."
msgstr ""

# 3fd2c4d3bdfe4e0281e3e8a80427dcb7
#: ../Doc/library/bsddb.rst:27
msgid ""
"The website with documentation for the :mod:`bsddb.db` Python Berkeley DB "
"interface that closely mirrors the object oriented interface provided in "
"Berkeley DB 4.x itself."
msgstr ""

# 128b259372fc41fdb515b970409c0dcf
#: ../Doc/library/bsddb.rst:32
msgid "The Berkeley DB library."
msgstr ""

# 4fddbfd4820d4fc4bb224fed5860197d
#: ../Doc/library/bsddb.rst:34
msgid ""
"A more modern DB, DBEnv and DBSequence object interface is available in the :"
"mod:`bsddb.db` module which closely matches the Berkeley DB C API documented "
"at the above URLs.  Additional features provided by the :mod:`bsddb.db` API "
"include fine tuning, transactions, logging, and multiprocess concurrent "
"database access."
msgstr ""

# 46f8a4f7d181480eafd5ddf644056345
#: ../Doc/library/bsddb.rst:39
msgid ""
"The following is a description of the legacy :mod:`bsddb` interface "
"compatible with the old Python bsddb module.  Starting in Python 2.5 this "
"interface should be safe for multithreaded access.  The :mod:`bsddb.db` API "
"is recommended for threading users as it provides better control."
msgstr ""

# b12eae2577d54bd2abcfe51be0b8c0e4
#: ../Doc/library/bsddb.rst:44
msgid ""
"The :mod:`bsddb` module defines the following functions that create objects "
"that access the appropriate type of Berkeley DB file.  The first two "
"arguments of each function are the same.  For ease of portability, only the "
"first two arguments should be used in most instances."
msgstr ""

# fad3e645c6974a2685eaaa97e1dadfad
#: ../Doc/library/bsddb.rst:52
msgid ""
"Open the hash format file named *filename*.  Files never intended to be "
"preserved on disk may be created by passing ``None`` as the  *filename*.  "
"The optional *flag* identifies the mode used to open the file.  It may be "
"``'r'`` (read only), ``'w'`` (read-write) , ``'c'`` (read-write - create if "
"necessary; the default) or ``'n'`` (read-write - truncate to zero length).  "
"The other arguments are rarely used and are just passed to the low-level :c:"
"func:`dbopen` function.  Consult the Berkeley DB documentation for their use "
"and interpretation."
msgstr ""

# a7199916efe84ccd98708becdd96bdea
#: ../Doc/library/bsddb.rst:64
msgid ""
"Open the btree format file named *filename*.  Files never intended  to be "
"preserved on disk may be created by passing ``None`` as the  *filename*.  "
"The optional *flag* identifies the mode used to open the file.  It may be "
"``'r'`` (read only), ``'w'`` (read-write), ``'c'`` (read-write - create if "
"necessary; the default) or ``'n'`` (read-write - truncate to zero length).  "
"The other arguments are rarely used and are just passed to the low-level "
"dbopen function. Consult the Berkeley DB documentation for their use and "
"interpretation."
msgstr ""

# 8d7a90cbaccf4fdca9c69fa19d3a2ca0
#: ../Doc/library/bsddb.rst:75
msgid ""
"Open a DB record format file named *filename*.  Files never intended  to be "
"preserved on disk may be created by passing ``None`` as the  *filename*.  "
"The optional *flag* identifies the mode used to open the file.  It may be "
"``'r'`` (read only), ``'w'`` (read-write), ``'c'`` (read-write - create if "
"necessary; the default) or ``'n'`` (read-write - truncate to zero length).  "
"The other arguments are rarely used and are just passed to the low-level "
"dbopen function. Consult the Berkeley DB documentation for their use and "
"interpretation."
msgstr ""

# 954160d6dbfc41a1bdf5c91be6fd5d52
#: ../Doc/library/bsddb.rst:85
msgid ""
"Beginning in 2.3 some Unix versions of Python may have a :mod:`bsddb185` "
"module. This is present *only* to allow backwards compatibility with systems "
"which ship with the old Berkeley DB 1.85 database library.  The :mod:"
"`bsddb185` module should never be used directly in new code. The module has "
"been removed in Python 3.  If you find you still need it look in PyPI."
msgstr ""

# f3ce334c3fda48b5a3fe22a5bb396d4a
#: ../Doc/library/bsddb.rst:95
msgid "DBM-style interface to the :mod:`bsddb`"
msgstr ""

# 75dd40575dc942dd8a1472e7811d469f
#: ../Doc/library/bsddb.rst:101
msgid "Hash, BTree and Record Objects"
msgstr ""

# a20d690950e7480f99e5f9b18ec2c870
#: ../Doc/library/bsddb.rst:103
msgid ""
"Once instantiated, hash, btree and record objects support the same methods "
"as dictionaries.  In addition, they support the methods listed below."
msgstr ""

# ea60fb9669a24be9beced6b14cfc3a51
#: ../Doc/library/bsddb.rst:112
msgid ""
"Close the underlying file.  The object can no longer be accessed.  Since "
"there is no open :meth:`open` method for these objects, to open the file "
"again a new :mod:`bsddb` module open function must be called."
msgstr ""

# 2422ebace13746118be8876e51414e49
#: ../Doc/library/bsddb.rst:119
msgid ""
"Return the list of keys contained in the DB file.  The order of the list is "
"unspecified and should not be relied on.  In particular, the order of the "
"list returned is different for different file formats."
msgstr ""

# a06e40f0ea7949a9a1f55b65253cad81
#: ../Doc/library/bsddb.rst:126
msgid "Return ``1`` if the DB file contains the argument as a key."
msgstr ""

# ea676822ef164b21b5f2e67e82610681
#: ../Doc/library/bsddb.rst:131
msgid ""
"Set the cursor to the item indicated by *key* and return a tuple containing "
"the key and its value.  For binary tree databases (opened using :func:"
"`btopen`), if *key* does not actually exist in the database, the cursor will "
"point to the next item in sorted order and return that key and value.  For "
"other databases, :exc:`KeyError` will be raised if *key* is not found in the "
"database."
msgstr ""

# b34cdcb8b9f841f59511af764e8318e9
#: ../Doc/library/bsddb.rst:140
msgid ""
"Set the cursor to the first item in the DB file and return it.  The order of "
"keys in the file is unspecified, except in the case of B-Tree databases. "
"This method raises :exc:`bsddb.error` if the database is empty."
msgstr ""

# c096e3c11b2045ab8e65955d5f625068
#: ../Doc/library/bsddb.rst:147
msgid ""
"Set the cursor to the next item in the DB file and return it.  The order of "
"keys in the file is unspecified, except in the case of B-Tree databases."
msgstr ""

# 0ffca4ae262a44b38f99333b061d94ca
#: ../Doc/library/bsddb.rst:153
msgid ""
"Set the cursor to the previous item in the DB file and return it.  The order "
"of keys in the file is unspecified, except in the case of B-Tree databases.  "
"This is not supported on hashtable databases (those opened with :func:"
"`hashopen`)."
msgstr ""

# b3f2a5a482d544f09ac3d4436d10f090
#: ../Doc/library/bsddb.rst:160
msgid ""
"Set the cursor to the last item in the DB file and return it.  The order of "
"keys in the file is unspecified.  This is not supported on hashtable "
"databases (those opened with :func:`hashopen`). This method raises :exc:"
"`bsddb.error` if the database is empty."
msgstr ""

# 4fc34906827c4d2ea332d6425f86a22e
#: ../Doc/library/bsddb.rst:168
msgid "Synchronize the database on disk."
msgstr ""

#: ../Doc/library/bsddb.rst:170 ../Doc/library/colorsys.rst:58
#: ../Doc/library/commands.rst:61 ../Doc/library/dl.rst:65
#: ../Doc/library/filecmp.rst:54 ../Doc/library/fpformat.rst:56
#: ../Doc/library/functools.rst:38 ../Doc/library/imaplib.rst:368
#: ../Doc/library/imghdr.rst:68 ../Doc/library/linecache.rst:50
#: ../Doc/library/locale.rst:479 ../Doc/library/optparse.rst:1099
#: ../Doc/library/optparse.rst:1119 ../Doc/library/optparse.rst:1141
#: ../Doc/library/optparse.rst:1159 ../Doc/library/optparse.rst:1198
#: ../Doc/library/optparse.rst:1236 ../Doc/library/os.rst:1436
#: ../Doc/library/pipes.rst:26 ../Doc/library/rlcompleter.rst:19
#: ../Doc/library/sched.rst:28 ../Doc/library/sched.rst:53
#: ../Doc/library/simplexmlrpcserver.rst:247 ../Doc/library/sqlite3.rst:454
#: ../Doc/library/stat.rst:78 ../Doc/library/tkinter.rst:455
msgid "Example::"
msgstr ""

#: ../Doc/library/bz2.rst:3
msgid ":mod:`bz2` --- Compression compatible with :program:`bzip2`"
msgstr ""

#: ../Doc/library/bz2.rst:13
msgid ""
"This module provides a comprehensive interface for the bz2 compression "
"library. It implements a complete file interface, one-shot (de)compression "
"functions, and types for sequential (de)compression."
msgstr ""

#: ../Doc/library/bz2.rst:17
msgid "Here is a summary of the features offered by the bz2 module:"
msgstr ""

#: ../Doc/library/bz2.rst:19
msgid ""
":class:`BZ2File` class implements a complete file interface, including :meth:"
"`~BZ2File.readline`, :meth:`~BZ2File.readlines`, :meth:`~BZ2File."
"writelines`, :meth:`~BZ2File.seek`, etc;"
msgstr ""

#: ../Doc/library/bz2.rst:23
msgid ""
":class:`BZ2File` class implements emulated :meth:`~BZ2File.seek` support;"
msgstr ""

#: ../Doc/library/bz2.rst:25
msgid ":class:`BZ2File` class implements universal newline support;"
msgstr ""

#: ../Doc/library/bz2.rst:27
msgid ""
":class:`BZ2File` class offers an optimized line iteration using the "
"readahead algorithm borrowed from file objects;"
msgstr ""

#: ../Doc/library/bz2.rst:30
msgid ""
"Sequential (de)compression supported by :class:`BZ2Compressor` and :class:"
"`BZ2Decompressor` classes;"
msgstr ""

#: ../Doc/library/bz2.rst:33
msgid ""
"One-shot (de)compression supported by :func:`compress` and :func:"
"`decompress` functions;"
msgstr ""

#: ../Doc/library/bz2.rst:36
msgid "Thread safety uses individual locking mechanism."
msgstr ""

#: ../Doc/library/bz2.rst:40
msgid "(De)compression of files"
msgstr ""

#: ../Doc/library/bz2.rst:42
msgid "Handling of compressed files is offered by the :class:`BZ2File` class."
msgstr ""

# bb729a90fbf44b12a818c66f98f0661d
#: ../Doc/library/bz2.rst:50
msgid ""
"Open a bz2 file. Mode can be either ``'r'`` or ``'w'``, for reading "
"(default) or writing. When opened for writing, the file will be created if "
"it doesn't exist, and truncated otherwise. If *buffering* is given, ``0`` "
"means unbuffered, and larger numbers specify the buffer size; the default is "
"``0``. If *compresslevel* is given, it must be a number between ``1`` and "
"``9``; the default is ``9``. Add a ``'U'`` to mode to open the file for "
"input in :term:`universal newlines` mode. Any line ending in the input file "
"will be seen as a ``'\\n'`` in Python.  Also, a file so opened gains the "
"attribute :attr:`newlines`; the value for this attribute is one of ``None`` "
"(no newline read yet), ``'\\r'``, ``'\\n'``, ``'\\r\\n'`` or a tuple "
"containing all the newline types seen. Universal newlines are available only "
"when reading. Instances support iteration in the same way as normal :class:"
"`file` instances."
msgstr ""

#: ../Doc/library/bz2.rst:64
msgid ":class:`BZ2File` supports the :keyword:`with` statement."
msgstr ""

# be2f358b7c7d4b4896e5d5af5711d754
#: ../Doc/library/bz2.rst:72
msgid ""
"This class does not support input files containing multiple streams (such as "
"those produced by the :program:`pbzip2` tool). When reading such an input "
"file, only the first stream will be accessible. If you require support for "
"multi-stream files, consider using the third-party :mod:`bz2file` module "
"(available from `PyPI <http://pypi.python.org/pypi/bz2file>`_). This module "
"provides a backport of Python 3.3's :class:`BZ2File` class, which does "
"support multi-stream files."
msgstr ""

#: ../Doc/library/bz2.rst:84
msgid ""
"Close the file. Sets data attribute :attr:`closed` to true. A closed file "
"cannot be used for further I/O operations. :meth:`close` may be called more "
"than once without error."
msgstr ""

# 4c8a854b8c054436a298c9835c7a6b4e
#: ../Doc/library/bz2.rst:91
msgid ""
"Read at most *size* uncompressed bytes, returned as a string. If the *size* "
"argument is negative or omitted, read until EOF is reached."
msgstr ""

# 881bbef2be5d459e9e46e0044ea41d4b
#: ../Doc/library/bz2.rst:97
msgid ""
"Return the next line from the file, as a string, retaining newline. A non-"
"negative *size* argument limits the maximum number of bytes to return (an "
"incomplete line may be returned then). Return an empty string at EOF."
msgstr ""

#: ../Doc/library/bz2.rst:104
msgid ""
"Return a list of lines read. The optional *size* argument, if given, is an "
"approximate bound on the total number of bytes in the lines returned."
msgstr ""

# b4a4f463fefd4aeb930785a3effa7510
#: ../Doc/library/bz2.rst:110
msgid ""
"For backward compatibility. :class:`BZ2File` objects now include the "
"performance optimizations previously implemented in the :mod:`xreadlines` "
"module."
msgstr ""

#: ../Doc/library/bz2.rst:122
msgid ""
"Move to new file position. Argument *offset* is a byte count. Optional "
"argument *whence* defaults to ``os.SEEK_SET`` or ``0`` (offset from start of "
"file; offset should be ``>= 0``); other values are ``os.SEEK_CUR`` or ``1`` "
"(move relative to current position; offset can be positive or negative), and "
"``os.SEEK_END`` or ``2`` (move relative to end of file; offset is usually "
"negative, although many platforms allow seeking beyond the end of a file)."
msgstr ""

#: ../Doc/library/bz2.rst:130
msgid ""
"Note that seeking of bz2 files is emulated, and depending on the parameters "
"the operation may be extremely slow."
msgstr ""

# 7bd36368fefb4d11bb8c7d60b2d41d34
#: ../Doc/library/bz2.rst:136
msgid "Return the current file position, an integer (may be a long integer)."
msgstr ""

# ef818f5e66d146a4ba5ed233a9649787
#: ../Doc/library/bz2.rst:141
msgid ""
"Write string *data* to file. Note that due to buffering, :meth:`close` may "
"be needed before the file on disk reflects the data written."
msgstr ""

# dcd492cab0cc4b20b0b2c4b3051517b8
#: ../Doc/library/bz2.rst:147
msgid ""
"Write the sequence of strings to the file. Note that newlines are not added. "
"The sequence can be any iterable object producing strings. This is "
"equivalent to calling write() for each string."
msgstr ""

#: ../Doc/library/bz2.rst:153
msgid "Sequential (de)compression"
msgstr ""

#: ../Doc/library/bz2.rst:155
msgid ""
"Sequential compression and decompression is done using the classes :class:"
"`BZ2Compressor` and :class:`BZ2Decompressor`."
msgstr ""

#: ../Doc/library/bz2.rst:161
msgid ""
"Create a new compressor object. This object may be used to compress data "
"sequentially. If you want to compress data in one shot, use the :func:"
"`compress` function instead. The *compresslevel* parameter, if given, must "
"be a number between ``1`` and ``9``; the default is ``9``."
msgstr ""

#: ../Doc/library/bz2.rst:169
msgid ""
"Provide more data to the compressor object. It will return chunks of "
"compressed data whenever possible. When you've finished providing data to "
"compress, call the :meth:`flush` method to finish the compression process, "
"and return what is left in internal buffers."
msgstr ""

#: ../Doc/library/bz2.rst:177
msgid ""
"Finish the compression process and return what is left in internal buffers. "
"You must not use the compressor object after calling this method."
msgstr ""

#: ../Doc/library/bz2.rst:183
msgid ""
"Create a new decompressor object. This object may be used to decompress data "
"sequentially. If you want to decompress data in one shot, use the :func:"
"`decompress` function instead."
msgstr ""

#: ../Doc/library/bz2.rst:190
msgid ""
"Provide more data to the decompressor object. It will return chunks of "
"decompressed data whenever possible. If you try to decompress data after the "
"end of stream is found, :exc:`EOFError` will be raised. If any data was "
"found after the end of stream, it'll be ignored and saved in :attr:"
"`unused_data` attribute."
msgstr ""

#: ../Doc/library/bz2.rst:198
msgid "One-shot (de)compression"
msgstr ""

#: ../Doc/library/bz2.rst:200
msgid ""
"One-shot compression and decompression is provided through the :func:"
"`compress` and :func:`decompress` functions."
msgstr ""

#: ../Doc/library/bz2.rst:206
msgid ""
"Compress *data* in one shot. If you want to compress data sequentially, use "
"an instance of :class:`BZ2Compressor` instead. The *compresslevel* "
"parameter, if given, must be a number between ``1`` and ``9``; the default "
"is ``9``."
msgstr ""

#: ../Doc/library/bz2.rst:213
msgid ""
"Decompress *data* in one shot. If you want to decompress data sequentially, "
"use an instance of :class:`BZ2Decompressor` instead."
msgstr ""

#: ../Doc/library/calendar.rst:2
msgid ":mod:`calendar` --- General calendar-related functions"
msgstr ""

# 51689a9b30b64acf9bfb0dc5709b76ec
#: ../Doc/library/calendar.rst:9
msgid "**Source code:** :source:`Lib/calendar.py`"
msgstr ""

#: ../Doc/library/calendar.rst:13
msgid ""
"This module allows you to output calendars like the Unix :program:`cal` "
"program, and provides additional useful functions related to the calendar. "
"By default, these calendars have Monday as the first day of the week, and "
"Sunday as the last (the European convention). Use :func:`setfirstweekday` to "
"set the first day of the week to Sunday (6) or to any other weekday.  "
"Parameters that specify dates are given as integers. For related "
"functionality, see also the :mod:`datetime` and :mod:`time` modules."
msgstr ""

#: ../Doc/library/calendar.rst:21
msgid ""
"Most of these functions and classes rely on the :mod:`datetime` module which "
"uses an idealized calendar, the current Gregorian calendar indefinitely "
"extended in both directions.  This matches the definition of the \"proleptic "
"Gregorian\" calendar in Dershowitz and Reingold's book \"Calendrical "
"Calculations\", where it's the base calendar for all computations."
msgstr ""

#: ../Doc/library/calendar.rst:30
msgid ""
"Creates a :class:`Calendar` object. *firstweekday* is an integer specifying "
"the first day of the week. ``0`` is Monday (the default), ``6`` is Sunday."
msgstr ""

#: ../Doc/library/calendar.rst:33
msgid ""
"A :class:`Calendar` object provides several methods that can be used for "
"preparing the calendar data for formatting. This class doesn't do any "
"formatting itself. This is the job of subclasses."
msgstr ""

#: ../Doc/library/calendar.rst:39
msgid ":class:`Calendar` instances have the following methods:"
msgstr ""

#: ../Doc/library/calendar.rst:44
msgid ""
"Return an iterator for the week day numbers that will be used for one week.  "
"The first value from the iterator will be the same as the value of the :attr:"
"`firstweekday` property."
msgstr ""

#: ../Doc/library/calendar.rst:51
msgid ""
"Return an iterator for the month *month* (1-12) in the year *year*. This "
"iterator will return all days (as :class:`datetime.date` objects) for the "
"month and all days before the start of the month or after the end of the "
"month that are required to get a complete week."
msgstr ""

#: ../Doc/library/calendar.rst:59
msgid ""
"Return an iterator for the month *month* in the year *year* similar to :meth:"
"`itermonthdates`. Days returned will be tuples consisting of a day number "
"and a week day number."
msgstr ""

#: ../Doc/library/calendar.rst:66
msgid ""
"Return an iterator for the month *month* in the year *year* similar to :meth:"
"`itermonthdates`. Days returned will simply be day numbers."
msgstr ""

#: ../Doc/library/calendar.rst:72
msgid ""
"Return a list of the weeks in the month *month* of the *year* as full "
"weeks.  Weeks are lists of seven :class:`datetime.date` objects."
msgstr ""

#: ../Doc/library/calendar.rst:78
msgid ""
"Return a list of the weeks in the month *month* of the *year* as full "
"weeks.  Weeks are lists of seven tuples of day numbers and weekday numbers."
msgstr ""

#: ../Doc/library/calendar.rst:85
msgid ""
"Return a list of the weeks in the month *month* of the *year* as full "
"weeks.  Weeks are lists of seven day numbers."
msgstr ""

#: ../Doc/library/calendar.rst:91
msgid ""
"Return the data for the specified year ready for formatting. The return "
"value is a list of month rows. Each month row contains up to *width* months "
"(defaulting to 3). Each month contains between 4 and 6 weeks and each week "
"contains 1--7 days. Days are :class:`datetime.date` objects."
msgstr ""

#: ../Doc/library/calendar.rst:99
msgid ""
"Return the data for the specified year ready for formatting (similar to :"
"meth:`yeardatescalendar`). Entries in the week lists are tuples of day "
"numbers and weekday numbers. Day numbers outside this month are zero."
msgstr ""

#: ../Doc/library/calendar.rst:106
msgid ""
"Return the data for the specified year ready for formatting (similar to :"
"meth:`yeardatescalendar`). Entries in the week lists are day numbers. Day "
"numbers outside this month are zero."
msgstr ""

#: ../Doc/library/calendar.rst:113
msgid "This class can be used to generate plain text calendars."
msgstr ""

#: ../Doc/library/calendar.rst:117
msgid ":class:`TextCalendar` instances have the following methods:"
msgstr ""

#: ../Doc/library/calendar.rst:122
msgid ""
"Return a month's calendar in a multi-line string. If *w* is provided, it "
"specifies the width of the date columns, which are centered. If *l* is "
"given, it specifies the number of lines that each week will use. Depends on "
"the first weekday as specified in the constructor or set by the :meth:"
"`setfirstweekday` method."
msgstr ""

#: ../Doc/library/calendar.rst:131
msgid "Print a month's calendar as returned by :meth:`formatmonth`."
msgstr ""

#: ../Doc/library/calendar.rst:136
msgid ""
"Return a *m*-column calendar for an entire year as a multi-line string. "
"Optional parameters *w*, *l*, and *c* are for date column width, lines per "
"week, and number of spaces between month columns, respectively. Depends on "
"the first weekday as specified in the constructor or set by the :meth:"
"`setfirstweekday` method.  The earliest year for which a calendar can be "
"generated is platform-dependent."
msgstr ""

#: ../Doc/library/calendar.rst:146
msgid ""
"Print the calendar for an entire year as returned by :meth:`formatyear`."
msgstr ""

#: ../Doc/library/calendar.rst:151
msgid "This class can be used to generate HTML calendars."
msgstr ""

#: ../Doc/library/calendar.rst:155
msgid ":class:`HTMLCalendar` instances have the following methods:"
msgstr ""

#: ../Doc/library/calendar.rst:160
msgid ""
"Return a month's calendar as an HTML table. If *withyear* is true the year "
"will be included in the header, otherwise just the month name will be used."
msgstr ""

#: ../Doc/library/calendar.rst:167
msgid ""
"Return a year's calendar as an HTML table. *width* (defaulting to 3) "
"specifies the number of months per row."
msgstr ""

#: ../Doc/library/calendar.rst:173
msgid ""
"Return a year's calendar as a complete HTML page. *width* (defaulting to 3) "
"specifies the number of months per row. *css* is the name for the cascading "
"style sheet to be used. :const:`None` can be passed if no style sheet should "
"be used. *encoding* specifies the encoding to be used for the output "
"(defaulting to the system default encoding)."
msgstr ""

#: ../Doc/library/calendar.rst:182
msgid ""
"This subclass of :class:`TextCalendar` can be passed a locale name in the "
"constructor and will return month and weekday names in the specified locale. "
"If this locale includes an encoding all strings containing month and weekday "
"names will be returned as unicode."
msgstr ""

#: ../Doc/library/calendar.rst:192
msgid ""
"This subclass of :class:`HTMLCalendar` can be passed a locale name in the "
"constructor and will return month and weekday names in the specified locale. "
"If this locale includes an encoding all strings containing month and weekday "
"names will be returned as unicode."
msgstr ""

# 6acae7b28c2e4887a6e5d5dbbadc04b5
#: ../Doc/library/calendar.rst:201
msgid ""
"The :meth:`formatweekday` and :meth:`formatmonthname` methods of these two "
"classes temporarily change the current locale to the given *locale*.  "
"Because the current locale is a process-wide setting, they are not thread-"
"safe."
msgstr ""

#: ../Doc/library/calendar.rst:206
msgid "For simple text calendars this module provides the following functions."
msgstr ""

#: ../Doc/library/calendar.rst:211
msgid ""
"Sets the weekday (``0`` is Monday, ``6`` is Sunday) to start each week. The "
"values :const:`MONDAY`, :const:`TUESDAY`, :const:`WEDNESDAY`, :const:"
"`THURSDAY`, :const:`FRIDAY`, :const:`SATURDAY`, and :const:`SUNDAY` are "
"provided for convenience. For example, to set the first weekday to Sunday::"
msgstr ""

#: ../Doc/library/calendar.rst:224
msgid "Returns the current setting for the weekday to start each week."
msgstr ""

#: ../Doc/library/calendar.rst:231
msgid ""
"Returns :const:`True` if *year* is a leap year, otherwise :const:`False`."
msgstr ""

#: ../Doc/library/calendar.rst:236
msgid ""
"Returns the number of leap years in the range from *y1* to *y2* (exclusive), "
"where *y1* and *y2* are years."
msgstr ""

#: ../Doc/library/calendar.rst:246
msgid ""
"Returns the day of the week (``0`` is Monday) for *year* (``1970``--...), "
"*month* (``1``--``12``), *day* (``1``--``31``)."
msgstr ""

#: ../Doc/library/calendar.rst:252
msgid ""
"Return a header containing abbreviated weekday names. *n* specifies the "
"width in characters for one weekday."
msgstr ""

#: ../Doc/library/calendar.rst:258
msgid ""
"Returns weekday of first day of the month and number of days in month,  for "
"the specified *year* and *month*."
msgstr ""

#: ../Doc/library/calendar.rst:264
msgid ""
"Returns a matrix representing a month's calendar.  Each row represents a "
"week; days outside of the month a represented by zeros. Each week begins "
"with Monday unless set by :func:`setfirstweekday`."
msgstr ""

#: ../Doc/library/calendar.rst:271
msgid "Prints a month's calendar as returned by :func:`month`."
msgstr ""

#: ../Doc/library/calendar.rst:276
msgid ""
"Returns a month's calendar in a multi-line string using the :meth:"
"`formatmonth` of the :class:`TextCalendar` class."
msgstr ""

#: ../Doc/library/calendar.rst:284
msgid ""
"Prints the calendar for an entire year as returned by  :func:`calendar`."
msgstr ""

#: ../Doc/library/calendar.rst:289
msgid ""
"Returns a 3-column calendar for an entire year as a multi-line string using "
"the :meth:`formatyear` of the :class:`TextCalendar` class."
msgstr ""

#: ../Doc/library/calendar.rst:297
msgid ""
"An unrelated but handy function that takes a time tuple such as returned by "
"the :func:`gmtime` function in the :mod:`time` module, and returns the "
"corresponding Unix timestamp value, assuming an epoch of 1970, and the POSIX "
"encoding.  In fact, :func:`time.gmtime` and :func:`timegm` are each others' "
"inverse."
msgstr ""

#: ../Doc/library/calendar.rst:304
msgid "The :mod:`calendar` module exports the following data attributes:"
msgstr ""

#: ../Doc/library/calendar.rst:309
msgid "An array that represents the days of the week in the current locale."
msgstr ""

#: ../Doc/library/calendar.rst:314
msgid ""
"An array that represents the abbreviated days of the week in the current "
"locale."
msgstr ""

#: ../Doc/library/calendar.rst:319
msgid ""
"An array that represents the months of the year in the current locale.  This "
"follows normal convention of January being month number 1, so it has a "
"length of 13 and  ``month_name[0]`` is the empty string."
msgstr ""

#: ../Doc/library/calendar.rst:326
msgid ""
"An array that represents the abbreviated months of the year in the current "
"locale.  This follows normal convention of January being month number 1, so "
"it has a length of 13 and  ``month_abbr[0]`` is the empty string."
msgstr ""

#: ../Doc/library/calendar.rst:334
msgid ""
"Object-oriented interface to dates and times with similar functionality to "
"the :mod:`time` module."
msgstr ""

#: ../Doc/library/calendar.rst:338
msgid "Low-level time related functions."
msgstr ""

# 2022f5cafd05447997b7f00a4a6a8237
#: ../Doc/library/carbon.rst:6
msgid "Mac OS Toolbox Modules"
msgstr ""

# a8886671092c430d86c5f468b773970b
#: ../Doc/library/carbon.rst:8
msgid ""
"There are a set of modules that provide interfaces to various Mac OS "
"toolboxes. If applicable the module will define a number of Python objects "
"for the various structures declared by the toolbox, and operations will be "
"implemented as methods of the object.  Other operations will be implemented "
"as functions in the module.  Not all operations possible in C will also be "
"possible in Python (callbacks are often a problem), and parameters will "
"occasionally be different in Python (input and output buffers, especially).  "
"All methods and functions have a :attr:`__doc__` string describing their "
"arguments and return values, and for additional description you are referred "
"to `Inside Macintosh <http://developer.apple.com/legacy/mac/library/"
"#documentation/macos8/mac8.html>`_ or similar works."
msgstr ""

# 66129fd830f647759a3cb765a032e632
#: ../Doc/library/carbon.rst:19
msgid ""
"These modules all live in a package called :mod:`Carbon`. Despite that name "
"they are not all part of the Carbon framework: CF is really in the "
"CoreFoundation framework and Qt is in the QuickTime framework. The normal "
"use pattern is ::"
msgstr ""

# 1709278dc76946d48a1b800537558203
#: ../Doc/library/carbon.rst:27
msgid "The Carbon modules have been removed in Python 3."
msgstr ""

# eb0b4a45d4364963bfb6a115ecfe1b79
#: ../Doc/library/carbon.rst:31
msgid ":mod:`Carbon.AE` --- Apple Events"
msgstr ""

# 85e0343682e2420e9027aa276470b43f
#: ../Doc/library/carbon.rst:41
msgid ":mod:`Carbon.AH` --- Apple Help"
msgstr ""

# 5ffa9be949e14b83a5f787f140e377a5
#: ../Doc/library/carbon.rst:51
msgid ":mod:`Carbon.App` --- Appearance Manager"
msgstr ""

# 5adf2478218f458cb42556f776429bb8
#: ../Doc/library/carbon.rst:59
msgid ":mod:`Carbon.Appearance` --- Appearance Manager constants"
msgstr ""

# 82c5d856bad4484d98e61adf4a476cb5
#: ../Doc/library/carbon.rst:69
msgid ":mod:`Carbon.CF` --- Core Foundation"
msgstr ""

# fe70276f4f2c414f9a9b9f100010722b
#: ../Doc/library/carbon.rst:77
msgid ""
"The ``CFBase``, ``CFArray``, ``CFData``, ``CFDictionary``, ``CFString`` and "
"``CFURL`` objects are supported, some only partially."
msgstr ""

# 3f0b189b2fdf494b801eb6e8f7f146ea
#: ../Doc/library/carbon.rst:82
msgid ":mod:`Carbon.CG` --- Core Graphics"
msgstr ""

# 43bc455c8d504ababb63de056372acd5
#: ../Doc/library/carbon.rst:92
msgid ":mod:`Carbon.CarbonEvt` --- Carbon Event Manager"
msgstr ""

# 99a8d826e223403f8c7832c18c5c67f5
#: ../Doc/library/carbon.rst:100
msgid ":mod:`Carbon.CarbonEvents` --- Carbon Event Manager constants"
msgstr ""

# 8f86fff804634b2ab7db6e12d2613afa
#: ../Doc/library/carbon.rst:110
msgid ":mod:`Carbon.Cm` --- Component Manager"
msgstr ""

# efbb55b6ba25437089dbff264b28321c
#: ../Doc/library/carbon.rst:118
msgid ":mod:`Carbon.Components` --- Component Manager constants"
msgstr ""

# e39116ebe1934578a7bb095a872921d4
#: ../Doc/library/carbon.rst:127
msgid ":mod:`Carbon.ControlAccessor` --- Control Manager accssors"
msgstr ""

# e10e00b62d4b4bd89269644637e19d6a
#: ../Doc/library/carbon.rst:135
msgid ":mod:`Carbon.Controls` --- Control Manager constants"
msgstr ""

# 574dd310980747f0b1ef184f23721c74
#: ../Doc/library/carbon.rst:143
msgid ":mod:`Carbon.CoreFounation` --- CoreFounation constants"
msgstr ""

# 29aa3bfe0c314b0b9842ded5b605a3e1
#: ../Doc/library/carbon.rst:151
msgid ":mod:`Carbon.CoreGraphics` --- CoreGraphics constants"
msgstr ""

# 4b0162ceea5444178864f92ad5da9cec
#: ../Doc/library/carbon.rst:159
msgid ":mod:`Carbon.Ctl` --- Control Manager"
msgstr ""

# 6772b9a37e9f46d993532249b72b5c14
#: ../Doc/library/carbon.rst:167
msgid ":mod:`Carbon.Dialogs` --- Dialog Manager constants"
msgstr ""

# 5f756a43e6854478b88b2a9497c7eb9d
#: ../Doc/library/carbon.rst:175
msgid ":mod:`Carbon.Dlg` --- Dialog Manager"
msgstr ""

# 9e9a229ea75246d881f7de7f95bbc5a5
#: ../Doc/library/carbon.rst:183
msgid ":mod:`Carbon.Drag` --- Drag and Drop Manager"
msgstr ""

# 6ad1ae10628944b7bd322dfdfc8c8efe
#: ../Doc/library/carbon.rst:191
msgid ":mod:`Carbon.Dragconst` --- Drag and Drop Manager constants"
msgstr ""

# 72ad99c11b6f4826b0eb682495f71b4d
#: ../Doc/library/carbon.rst:199
msgid ":mod:`Carbon.Events` --- Event Manager constants"
msgstr ""

# 07418a24354342d099cfd9c4f308b8d0
#: ../Doc/library/carbon.rst:207
msgid ":mod:`Carbon.Evt` --- Event Manager"
msgstr ""

# 3318008171984a2bbbc0a4fbe4db7204
#: ../Doc/library/carbon.rst:215
msgid ":mod:`Carbon.File` --- File Manager"
msgstr ""

# 3ca98ac2b6d44fe2aa5d1ba4cdbd6d0f
#: ../Doc/library/carbon.rst:223
msgid ":mod:`Carbon.Files` --- File Manager constants"
msgstr ""

# 58c212ba8f894fdaa77e707b5601fcb2
#: ../Doc/library/carbon.rst:232
msgid ":mod:`Carbon.Fm` --- Font Manager"
msgstr ""

# b582b3f4d348467282383fb2452bf7fc
#: ../Doc/library/carbon.rst:242
msgid ":mod:`Carbon.Folder` --- Folder Manager"
msgstr ""

# a35b9c80704c4eb7bf653a38c4529b7a
#: ../Doc/library/carbon.rst:250
msgid ":mod:`Carbon.Folders` --- Folder Manager constants"
msgstr ""

# b1619603725e4af3b421716dc2aa14e3
#: ../Doc/library/carbon.rst:259
msgid ":mod:`Carbon.Fonts` --- Font Manager constants"
msgstr ""

# f1dc16b05e48460f95a187e8a3971d71
#: ../Doc/library/carbon.rst:269
msgid ":mod:`Carbon.Help` --- Help Manager"
msgstr ""

# 7f9a73b1e6d64a72813e2e3ba3757823
#: ../Doc/library/carbon.rst:277
msgid ":mod:`Carbon.IBCarbon` --- Carbon InterfaceBuilder"
msgstr ""

# 248d2dc516214e38b03f51134cc9bafc
#: ../Doc/library/carbon.rst:285
msgid ":mod:`Carbon.IBCarbonRuntime` --- Carbon InterfaceBuilder constants"
msgstr ""

# a4bd490e0b634cd9ad415c68a653f6df
#: ../Doc/library/carbon.rst:293
msgid ":mod:`Carbon.Icn` --- Carbon Icon Manager"
msgstr ""

# c340fb51213d44ff87dbda0d07e11921
#: ../Doc/library/carbon.rst:301
msgid ":mod:`Carbon.Icons` --- Carbon Icon Manager constants"
msgstr ""

# afa42ce93bda4af6b6f395f945528eaf
#: ../Doc/library/carbon.rst:309
msgid ":mod:`Carbon.Launch` --- Carbon Launch Services"
msgstr ""

# cdd5f0babb0840fbbd627b620b1a121a
#: ../Doc/library/carbon.rst:317
msgid ":mod:`Carbon.LaunchServices` --- Carbon Launch Services constants"
msgstr ""

# 1a1146daab884306bfff3074a601bf06
#: ../Doc/library/carbon.rst:326
msgid ":mod:`Carbon.List` --- List Manager"
msgstr ""

# 1a2529e79689469ea9ce6f9efbbf144c
#: ../Doc/library/carbon.rst:336
msgid ":mod:`Carbon.Lists` --- List Manager constants"
msgstr ""

# d230a144e0ad4252be2c98a6c232bddc
#: ../Doc/library/carbon.rst:344
msgid ":mod:`Carbon.MacHelp` --- Help Manager constants"
msgstr ""

# fd1ab7025b09410095a41af5f4735cdc
#: ../Doc/library/carbon.rst:352
msgid ""
":mod:`Carbon.MediaDescr` --- Parsers and generators for Quicktime Media "
"descriptors"
msgstr ""

# 37d9ad9c780f44b2808bc9ebd85179e4
#: ../Doc/library/carbon.rst:361
msgid ":mod:`Carbon.Menu` --- Menu Manager"
msgstr ""

# 1a82dbecf93148b0aa220e35d4a5b5f2
#: ../Doc/library/carbon.rst:369
msgid ":mod:`Carbon.Menus` --- Menu Manager constants"
msgstr ""

# 0a6b79ecdc4645eeb4cf272fb19a7c46
#: ../Doc/library/carbon.rst:378
msgid ":mod:`Carbon.Mlte` --- MultiLingual Text Editor"
msgstr ""

# 8b0b998cb6bf4dd09ff616d55c9e4d28
#: ../Doc/library/carbon.rst:386
msgid ":mod:`Carbon.OSA` --- Carbon OSA Interface"
msgstr ""

# 9be4d71cfb5c40d5820f315259f92fcf
#: ../Doc/library/carbon.rst:394
msgid ":mod:`Carbon.OSAconst` --- Carbon OSA Interface constants"
msgstr ""

# 69b453e999884e96a9946bd97099fc2e
#: ../Doc/library/carbon.rst:402
msgid ":mod:`Carbon.QDOffscreen` --- QuickDraw Offscreen constants"
msgstr ""

# 1e55dfb6cacb4de9beecd8faf700eecc
#: ../Doc/library/carbon.rst:411
msgid ":mod:`Carbon.Qd` --- QuickDraw"
msgstr ""

# ae3b767a21784c0b8a7f52f11bf7b28f
#: ../Doc/library/carbon.rst:421
msgid ":mod:`Carbon.Qdoffs` --- QuickDraw Offscreen"
msgstr ""

# 4c911d916654487098050fb9b458b541
#: ../Doc/library/carbon.rst:431
msgid ":mod:`Carbon.Qt` --- QuickTime"
msgstr ""

# e37e0b72fa2b44dc8548a443a63bd98f
#: ../Doc/library/carbon.rst:439
msgid ":mod:`Carbon.QuickDraw` --- QuickDraw constants"
msgstr ""

# bc2e0e23cad5417d862c42288be1ea02
#: ../Doc/library/carbon.rst:447
msgid ":mod:`Carbon.QuickTime` --- QuickTime constants"
msgstr ""

# 1bc57ee918584a1389f83c6563fd5bf4
#: ../Doc/library/carbon.rst:456
msgid ":mod:`Carbon.Res` --- Resource Manager and Handles"
msgstr ""

# 9d2fecba34024f9c8bde05ff098535eb
#: ../Doc/library/carbon.rst:464
msgid ":mod:`Carbon.Resources` --- Resource Manager and Handles constants"
msgstr ""

# a689e91637334873ad2a043690217b41
#: ../Doc/library/carbon.rst:473
msgid ":mod:`Carbon.Scrap` --- Scrap Manager"
msgstr ""

# c03748d2eccc4e14966c4028d67e0e8f
#: ../Doc/library/carbon.rst:482
msgid ""
"This module is only fully available on Mac OS 9 and earlier under classic "
"PPC MacPython.  Very limited functionality is available under Carbon "
"MacPython."
msgstr ""

# c63a55c2a0e8436e8361dcfd6b08ee5f
#: ../Doc/library/carbon.rst:487
msgid ""
"The Scrap Manager supports the simplest form of cut & paste operations on "
"the Macintosh.  It can be use for both inter- and intra-application "
"clipboard operations."
msgstr ""

# ee858c198e864f36a06868c44b77f7a9
#: ../Doc/library/carbon.rst:491
msgid ""
"The :mod:`Scrap` module provides low-level access to the functions of the "
"Scrap Manager.  It contains the following functions:"
msgstr ""

# a74a76b976994befaac6dc9f1ff9f1fc
#: ../Doc/library/carbon.rst:497
msgid ""
"Return current information about the scrap.  The information is encoded as a "
"tuple containing the fields ``(size, handle, count, state, path)``."
msgstr ""

#: ../Doc/library/carbon.rst:501 ../Doc/library/resource.rst:168
#: ../Doc/library/sunau.rst:20 ../Doc/library/uuid.rst:69
msgid "Field"
msgstr ""

# 82f5618d5385458b99c78965a6481cb9
#: ../Doc/library/carbon.rst:503
msgid "*size*"
msgstr ""

# ddf0c2a099c64c63aafd135798b3df75
#: ../Doc/library/carbon.rst:503
msgid "Size of the scrap in bytes."
msgstr ""

# b1a7833c43c24edeaf58f3afe1eef9bc
#: ../Doc/library/carbon.rst:505
msgid "*handle*"
msgstr ""

# f51cf03d40804e3a8fe7ea7a184ffe40
#: ../Doc/library/carbon.rst:505
msgid "Resource object representing the scrap."
msgstr ""

# 5c60af958d9946d48a74f933bc610e07
#: ../Doc/library/carbon.rst:507
msgid "*count*"
msgstr ""

# 18cb3bcf2b0c4cf0a0d5a06c8622279d
#: ../Doc/library/carbon.rst:507
msgid "Serial number of the scrap contents."
msgstr ""

# a14360f3525e4acbb95f6be1344476ab
#: ../Doc/library/carbon.rst:509
msgid "*state*"
msgstr ""

# 2b0c44e595724aa2b95c0df182e667f9
#: ../Doc/library/carbon.rst:509
msgid ""
"Integer; positive if in memory, ``0`` if on disk, negative if uninitialized."
msgstr ""

# 6e8b7b2de09d46a1962d2c2a51598c14
#: ../Doc/library/carbon.rst:512
msgid "*path*"
msgstr ""

# d21a4dddfa45480fba7ff92ed1355f7f
#: ../Doc/library/carbon.rst:512
msgid "Filename of the scrap when stored on disk."
msgstr ""

# 84a3f7e678bd4fe58f26a4c512c96dcb
#: ../Doc/library/carbon.rst:519
msgid ""
"Apple's documentation for the Scrap Manager gives a lot of useful "
"information about using the Scrap Manager in applications."
msgstr ""

# 1245a307157a4dc29416956353ac48d7
#: ../Doc/library/carbon.rst:525
msgid ":mod:`Carbon.Snd` --- Sound Manager"
msgstr ""

# 4d76a899c66144a086a1221ac2b9b826
#: ../Doc/library/carbon.rst:533
msgid ":mod:`Carbon.Sound` --- Sound Manager constants"
msgstr ""

# bba0cccab9ba406189aabd6787be136d
#: ../Doc/library/carbon.rst:542
msgid ":mod:`Carbon.TE` --- TextEdit"
msgstr ""

# e4140438222e4cf39eec37c5bc77ccca
#: ../Doc/library/carbon.rst:550
msgid ":mod:`Carbon.TextEdit` --- TextEdit constants"
msgstr ""

# dfd3f200d32f4cba95d837b6d66ad7b6
#: ../Doc/library/carbon.rst:560
msgid ":mod:`Carbon.Win` --- Window Manager"
msgstr ""

# b06b6c724a9248b0a1449a3fd6aa6d6f
#: ../Doc/library/carbon.rst:568
msgid ":mod:`Carbon.Windows` --- Window Manager constants"
msgstr ""

# 98a40b49239b4a9fbf0b1ffadf61870c
#: ../Doc/library/cd.rst:3
msgid ":mod:`cd` --- CD-ROM access on SGI systems"
msgstr ""

# 7b826e5cc4b64bad9eac61987bec8a5b
#: ../Doc/library/cd.rst:15
msgid ""
"This module provides an interface to the Silicon Graphics CD library. It is "
"available only on Silicon Graphics systems."
msgstr ""

# 0df1bfeec83b4215989270deaee1b109
#: ../Doc/library/cd.rst:18
msgid ""
"The way the library works is as follows.  A program opens the CD-ROM device "
"with :func:`.open` and creates a parser to parse the data from the CD with :"
"func:`createparser`.  The object returned by :func:`.open` can be used to "
"read data from the CD, but also to get status information for the CD-ROM "
"device, and to get information about the CD, such as the table of contents.  "
"Data from the CD is passed to the parser, which parses the frames, and calls "
"any callback functions that have previously been added."
msgstr ""

# cfad04a28630487e96e59d80f516ff75
#: ../Doc/library/cd.rst:26
msgid ""
"An audio CD is divided into :dfn:`tracks` or :dfn:`programs` (the terms are "
"used interchangeably).  Tracks can be subdivided into :dfn:`indices`.  An "
"audio CD contains a :dfn:`table of contents` which gives the starts of the "
"tracks on the CD.  Index 0 is usually the pause before the start of a "
"track.  The start of the track as given by the table of contents is normally "
"the start of index 1."
msgstr ""

# 286b77ebf5994824acbc2014f027a9fd
#: ../Doc/library/cd.rst:32
msgid ""
"Positions on a CD can be represented in two ways.  Either a frame number or "
"a tuple of three values, minutes, seconds and frames.  Most functions use "
"the latter representation.  Positions can be both relative to the beginning "
"of the CD, and to the beginning of the track."
msgstr ""

# 2291a83fb1db47349b1e3d7249637ec8
#: ../Doc/library/cd.rst:37
msgid "Module :mod:`cd` defines the following functions and constants:"
msgstr ""

# 7d4555140b0444bd98367f312d9acbd3
#: ../Doc/library/cd.rst:42
msgid ""
"Create and return an opaque parser object.  The methods of the parser object "
"are described below."
msgstr ""

# 6a9f8d0b95ca4ff78c02df22d054da46
#: ../Doc/library/cd.rst:48
msgid ""
"Converts a ``(minutes, seconds, frames)`` triple representing time in "
"absolute time code into the corresponding CD frame number."
msgstr ""

# dd7b7f1a63e8447e8d1ca0ab5c06d210
#: ../Doc/library/cd.rst:54
msgid ""
"Open the CD-ROM device.  The return value is an opaque player object; "
"methods of the player object are described below.  The device is the name of "
"the SCSI device file, e.g. ``'/dev/scsi/sc0d4l0'``, or ``None``.  If omitted "
"or ``None``, the hardware inventory is consulted to locate a CD-ROM drive.  "
"The *mode*, if not omitted, should be the string ``'r'``."
msgstr ""

# 8a971a8636b24e80a24b3d66d8bee4bd
#: ../Doc/library/cd.rst:60
msgid "The module defines the following variables:"
msgstr ""

# 208e90b81eb248ef8e7604fa3129c763
#: ../Doc/library/cd.rst:65
msgid "Exception raised on various errors."
msgstr ""

# 8305cfd3a79a461d806535e038904ca6
#: ../Doc/library/cd.rst:70
msgid ""
"The size of one frame's worth of audio data.  This is the size of the audio "
"data as passed to the callback of type ``audio``."
msgstr ""

# 90a15ad5d19549e3aa59ab6f4ecb32c0
#: ../Doc/library/cd.rst:76
msgid "The size of one uninterpreted frame of audio data."
msgstr ""

# f8ea78cca8c04ba89e249662f940006d
#: ../Doc/library/cd.rst:78
msgid "The following variables are states as returned by :func:`getstatus`:"
msgstr ""

# 76a0b6e03bff47668bbd77815cc12bfc
#: ../Doc/library/cd.rst:83
msgid "The drive is ready for operation loaded with an audio CD."
msgstr ""

# b1e4ff1754964ddebf4b390ab2af5fb5
#: ../Doc/library/cd.rst:88
msgid "The drive does not have a CD loaded."
msgstr ""

# c94bb8ac337d4ca0bada1ac0044bb655
#: ../Doc/library/cd.rst:93
msgid ""
"The drive is loaded with a CD-ROM.  Subsequent play or read operations will "
"return I/O errors."
msgstr ""

# d4db4874ef7948688ced83f262caa93d
#: ../Doc/library/cd.rst:99
msgid ""
"An error occurred while trying to read the disc or its table of contents."
msgstr ""

# d4c73c9da1e44f74a2d4657cd359f8f1
#: ../Doc/library/cd.rst:104
msgid ""
"The drive is in CD player mode playing an audio CD through its audio jacks."
msgstr ""

# e5a40e8f187e452e9c8591ada53eb1bf
#: ../Doc/library/cd.rst:109
msgid "The drive is in CD layer mode with play paused."
msgstr ""

# 2e72d640774d46159d262c5aaa26a5e2
#: ../Doc/library/cd.rst:114
msgid ""
"The equivalent of :const:`PAUSED` on older (non 3301) model Toshiba CD-ROM "
"drives.  Such drives have never been shipped by SGI."
msgstr ""

# 6b92e602a4e847c49552e3a6ef5e1a81
#: ../Doc/library/cd.rst:127
msgid ""
"Integer constants describing the various types of parser callbacks that can "
"be set by the :meth:`addcallback` method of CD parser objects (see below)."
msgstr ""

# 6c53c460f034496e8270b2c567873468
#: ../Doc/library/cd.rst:134
msgid "Player Objects"
msgstr ""

# 1e1b6c83cbb44859ac4654e0404f5e7c
#: ../Doc/library/cd.rst:136
msgid "Player objects (returned by :func:`.open`) have the following methods:"
msgstr ""

# 084a98258926487eb53b3d7570c16378
#: ../Doc/library/cd.rst:141
msgid ""
"Unlocks the eject button on the CD-ROM drive permitting the user to eject "
"the caddy if desired."
msgstr ""

# d0927d8ab1014d4582ce8d24f6a6ed3b
#: ../Doc/library/cd.rst:147
msgid ""
"Returns the best value to use for the *num_frames* parameter of the :meth:"
"`readda` method.  Best is defined as the value that permits a continuous "
"flow of data from the CD-ROM drive."
msgstr ""

# 71a6c8ab91e549a7874867d92e680115
#: ../Doc/library/cd.rst:154
msgid ""
"Frees the resources associated with the player object.  After calling :meth:"
"`close`, the methods of the object should no longer be used."
msgstr ""

# b43cc3a9305645ed988325a1877e454b
#: ../Doc/library/cd.rst:160
msgid "Ejects the caddy from the CD-ROM drive."
msgstr ""

# ccde2c9d980e4cb6952fa312f9f839b8
#: ../Doc/library/cd.rst:165
msgid ""
"Returns information pertaining to the current state of the CD-ROM drive.  "
"The returned information is a tuple with the following values: *state*, "
"*track*, *rtime*, *atime*, *ttime*, *first*, *last*, *scsi_audio*, "
"*cur_block*. *rtime* is the time relative to the start of the current track; "
"*atime* is the time relative to the beginning of the disc; *ttime* is the "
"total time on the disc. For more information on the meaning of the values, "
"see the man page :manpage:`CDgetstatus(3dm)`. The value of *state* is one of "
"the following: :const:`ERROR`, :const:`NODISC`, :const:`READY`, :const:"
"`PLAYING`, :const:`PAUSED`, :const:`STILL`, or :const:`CDROM`."
msgstr ""

# ea6af7a7874d499ab3c441703f43bd23
#: ../Doc/library/cd.rst:178
msgid ""
"Returns information about the specified track.  The returned information is "
"a tuple consisting of two elements, the start time of the track and the "
"duration of the track."
msgstr ""

# 57faf098ab9d43e380ccbdaa4465654e
#: ../Doc/library/cd.rst:185
msgid ""
"Converts a minutes, seconds, frames triple representing a time in absolute "
"time code into the corresponding logical block number for the given CD-ROM "
"drive. You should use :func:`msftoframe` rather than :meth:`msftoblock` for "
"comparing times.  The logical block number differs from the frame number by "
"an offset required by certain CD-ROM drives."
msgstr ""

# 234fd4fce2be4c848272f5412cc4b214
#: ../Doc/library/cd.rst:194
msgid ""
"Starts playback of an audio CD in the CD-ROM drive at the specified track.  "
"The audio output appears on the CD-ROM drive's headphone and audio jacks (if "
"fitted).  Play stops at the end of the disc. *start* is the number of the "
"track at which to start playing the CD; if *play* is 0, the CD will be set "
"to an initial paused state.  The method :meth:`togglepause` can then be used "
"to commence play."
msgstr ""

# af804dbec77843aba9066739610b48b1
#: ../Doc/library/cd.rst:204
msgid ""
"Like :meth:`play`, except that the start is given in minutes, seconds, and "
"frames instead of a track number."
msgstr ""

# 6b077736adc44c39b64610c1aaa52faa
#: ../Doc/library/cd.rst:210
msgid "Like :meth:`play`, except that playing stops at the end of the track."
msgstr ""

# bfd99b25d80f4c3c87b77b425f2cbeb3
#: ../Doc/library/cd.rst:215
msgid ""
"Like :meth:`play`, except that playing begins at the specified absolute time "
"and ends at the end of the specified track."
msgstr ""

# 80da374cfad343b7a5cf22593a992607
#: ../Doc/library/cd.rst:221
msgid ""
"Locks the eject button on the CD-ROM drive thus preventing the user from "
"arbitrarily ejecting the caddy."
msgstr ""

# 1c42a8d660594274bfffa810745d503a
#: ../Doc/library/cd.rst:227
msgid ""
"Reads the specified number of frames from an audio CD mounted in the CD-ROM "
"drive.  The return value is a string representing the audio frames.  This "
"string can be passed unaltered to the :meth:`parseframe` method of the "
"parser object."
msgstr ""

# e16f1fda42784778806ddfede46afafc
#: ../Doc/library/cd.rst:234
msgid ""
"Sets the pointer that indicates the starting point of the next read of "
"digital audio data from a CD-ROM.  The pointer is set to an absolute time "
"code location specified in *minutes*, *seconds*, and *frames*.  The return "
"value is the logical block number to which the pointer has been set."
msgstr ""

# 090d5b2837ea4332b21f815a1d69ea82
#: ../Doc/library/cd.rst:242
msgid ""
"Sets the pointer that indicates the starting point of the next read of "
"digital audio data from a CD-ROM.  The pointer is set to the specified "
"logical block number.  The return value is the logical block number to which "
"the pointer has been set."
msgstr ""

# 2d20c36e76f14238873c36d7cbc5867f
#: ../Doc/library/cd.rst:250
msgid ""
"Sets the pointer that indicates the starting point of the next read of "
"digital audio data from a CD-ROM.  The pointer is set to the specified "
"track.  The return value is the logical block number to which the pointer "
"has been set."
msgstr ""

# 46dc2234ea674867bc99cdc7e201ffc8
#: ../Doc/library/cd.rst:257
msgid "Stops the current playing operation."
msgstr ""

# 9eb5d62970a9422691f55d14ad3bd681
#: ../Doc/library/cd.rst:262
msgid "Pauses the CD if it is playing, and makes it play if it is paused."
msgstr ""

# 10a9a5531f34464d9ca6cf98063d58bb
#: ../Doc/library/cd.rst:268
msgid "Parser Objects"
msgstr ""

# 4fe01e1fc9ab480c8a60a54d06847ecb
#: ../Doc/library/cd.rst:270
msgid ""
"Parser objects (returned by :func:`createparser`) have the following methods:"
msgstr ""

# 63ba588b0afb490681993b0dc2f00b9c
#: ../Doc/library/cd.rst:275
msgid ""
"Adds a callback for the parser.  The parser has callbacks for eight "
"different types of data in the digital audio data stream.  Constants for "
"these types are defined at the :mod:`cd` module level (see above). The "
"callback is called as follows: ``func(arg, type, data)``, where *arg* is the "
"user supplied argument, *type* is the particular type of callback, and "
"*data* is the data returned for this *type* of callback.  The type of the "
"data depends on the *type* of callback as follows:"
msgstr ""

#: ../Doc/library/cd.rst:284 ../Doc/library/inspect.rst:40
#: ../Doc/library/string.rst:409 ../Doc/library/string.rst:420
#: ../Doc/library/string.rst:452
msgid "Type"
msgstr ""

# 6e9137949ec64164bb948aadbfe860a5
#: ../Doc/library/cd.rst:286
msgid "``audio``"
msgstr ""

# 20123f36a5934dd8bfc1d04993688089
#: ../Doc/library/cd.rst:286
msgid "String which can be passed unmodified to :func:`al.writesamps`."
msgstr ""

# 3b8e759031c24336b834fe6160a3c763
#: ../Doc/library/cd.rst:289
msgid "``pnum``"
msgstr ""

# 3be295abdd684206b24a65924ea92b7f
#: ../Doc/library/cd.rst:289
msgid "Integer giving the program (track) number."
msgstr ""

# e68b0165e58c4e03b7be1f9cc42a5b9f
#: ../Doc/library/cd.rst:291
msgid "``index``"
msgstr ""

# 6f950db718b743ba82e06131954c593f
#: ../Doc/library/cd.rst:291
msgid "Integer giving the index number."
msgstr ""

# 24c3e4f7361844339b6c7c50548be70a
#: ../Doc/library/cd.rst:293
msgid "``ptime``"
msgstr ""

# 6e58686b14264e96869ee72695c5f57b
#: ../Doc/library/cd.rst:293
msgid "Tuple consisting of the program time in minutes, seconds, and frames."
msgstr ""

# e0fab20df25d400d8ba88050f383db67
#: ../Doc/library/cd.rst:296
msgid "``atime``"
msgstr ""

# 1dcf94fbe2594b6bb6390a90c865bf16
#: ../Doc/library/cd.rst:296
msgid "Tuple consisting of the absolute time in minutes, seconds, and frames."
msgstr ""

# 878233429e9245acaf3aefb0fa46531a
#: ../Doc/library/cd.rst:299
msgid "``catalog``"
msgstr ""

# 2a7cf7fda69b4cbfaed26aad0990c2d5
#: ../Doc/library/cd.rst:299
msgid "String of 13 characters, giving the catalog number of the CD."
msgstr ""

# 047cf9aa890e487a9d4317c2558bf520
#: ../Doc/library/cd.rst:302
msgid "``ident``"
msgstr ""

# ea08d48682e34b57bc30f3670292ef71
#: ../Doc/library/cd.rst:302
msgid ""
"String of 12 characters, giving the ISRC identification number of the "
"recording. The string consists of two characters country code, three "
"characters owner code, two characters giving the year, and five characters "
"giving a serial number."
msgstr ""

# 9a80c57ad1cf4f30a8b091b3d40f4548
#: ../Doc/library/cd.rst:309
msgid "``control``"
msgstr ""

# ed025366930c408da6e5d7d16bbb6a85
#: ../Doc/library/cd.rst:309
msgid "Integer giving the control bits from the CD subcode data"
msgstr ""

# 3c0311fa8ace434c84c7e8f1e086316a
#: ../Doc/library/cd.rst:316
msgid ""
"Deletes the parser and frees the memory it was using.  The object should not "
"be used after this call.  This call is done automatically when the last "
"reference to the object is removed."
msgstr ""

# e7527cd1cfa04ae2a97a63864f05d365
#: ../Doc/library/cd.rst:323
msgid ""
"Parses one or more frames of digital audio data from a CD such as returned "
"by :meth:`readda`.  It determines which subcodes are present in the data.  "
"If these subcodes have changed since the last frame, then :meth:`parseframe` "
"executes a callback of the appropriate type passing to it the subcode data "
"found in the frame. Unlike the C function, more than one frame of digital "
"audio data can be passed to this method."
msgstr ""

# 77936e5aa2d24ac88447c08d3f925ac4
#: ../Doc/library/cd.rst:333
msgid "Removes the callback for the given *type*."
msgstr ""

# 319f0c14ac4c4300a38e71ce46c20ba3
#: ../Doc/library/cd.rst:338
msgid ""
"Resets the fields of the parser used for tracking subcodes to an initial "
"state. :meth:`resetparser` should be called after the disc has been changed."
msgstr ""

#: ../Doc/library/cgi.rst:2
msgid ":mod:`cgi` --- Common Gateway Interface support"
msgstr ""

# fcedbb6aeb4048748fffcb84fe6cad78
#: ../Doc/library/cgi.rst:16
msgid "**Source code:** :source:`Lib/cgi.py`"
msgstr ""

#: ../Doc/library/cgi.rst:20
msgid "Support module for Common Gateway Interface (CGI) scripts."
msgstr ""

#: ../Doc/library/cgi.rst:22
msgid ""
"This module defines a number of utilities for use by CGI scripts written in "
"Python."
msgstr ""

#: ../Doc/library/cgi.rst:27 ../Doc/library/intro.rst:6
#: ../Doc/library/multiprocessing.rst:11 ../Doc/library/sqlite3.rst:654
#: ../Doc/library/turtle.rst:15
msgid "Introduction"
msgstr ""

#: ../Doc/library/cgi.rst:31
msgid ""
"A CGI script is invoked by an HTTP server, usually to process user input "
"submitted through an HTML ``<FORM>`` or ``<ISINDEX>`` element."
msgstr ""

#: ../Doc/library/cgi.rst:34
msgid ""
"Most often, CGI scripts live in the server's special :file:`cgi-bin` "
"directory. The HTTP server places all sorts of information about the request "
"(such as the client's hostname, the requested URL, the query string, and "
"lots of other goodies) in the script's shell environment, executes the "
"script, and sends the script's output back to the client."
msgstr ""

#: ../Doc/library/cgi.rst:40
msgid ""
"The script's input is connected to the client too, and sometimes the form "
"data is read this way; at other times the form data is passed via the "
"\"query string\" part of the URL.  This module is intended to take care of "
"the different cases and provide a simpler interface to the Python script.  "
"It also provides a number of utilities that help in debugging scripts, and "
"the latest addition is support for file uploads from a form (if your browser "
"supports it)."
msgstr ""

#: ../Doc/library/cgi.rst:47
msgid ""
"The output of a CGI script should consist of two sections, separated by a "
"blank line.  The first section contains a number of headers, telling the "
"client what kind of data is following.  Python code to generate a minimal "
"header section looks like this::"
msgstr ""

#: ../Doc/library/cgi.rst:55
msgid ""
"The second section is usually HTML, which allows the client software to "
"display nicely formatted text with header, in-line images, etc. Here's "
"Python code that prints a simple piece of HTML::"
msgstr ""

#: ../Doc/library/cgi.rst:67
msgid "Using the cgi module"
msgstr ""

# 57dfd7ef03a44b8e88280a976a4516f6
#: ../Doc/library/cgi.rst:69
msgid ""
"Begin by writing ``import cgi``.  Do not use ``from cgi import *`` --- the "
"module defines all sorts of names for its own use or for backward "
"compatibility that you don't want in your namespace."
msgstr ""

#: ../Doc/library/cgi.rst:73
msgid "When you write a new script, consider adding these lines::"
msgstr ""

#: ../Doc/library/cgi.rst:78
msgid ""
"This activates a special exception handler that will display detailed "
"reports in the Web browser if any errors occur.  If you'd rather not show "
"the guts of your program to users of your script, you can have the reports "
"saved to files instead, with code like this::"
msgstr ""

#: ../Doc/library/cgi.rst:86
msgid ""
"It's very helpful to use this feature during script development. The reports "
"produced by :mod:`cgitb` provide information that can save you a lot of time "
"in tracking down bugs.  You can always remove the ``cgitb`` line later when "
"you have tested your script and are confident that it works correctly."
msgstr ""

# c668750101d047daba93cd1960f74818
#: ../Doc/library/cgi.rst:91
msgid ""
"To get at submitted form data, it's best to use the :class:`FieldStorage` "
"class. The other classes defined in this module are provided mostly for "
"backward compatibility. Instantiate it exactly once, without arguments.  "
"This reads the form contents from standard input or the environment "
"(depending on the value of various environment variables set according to "
"the CGI standard).  Since it may consume standard input, it should be "
"instantiated only once."
msgstr ""

#: ../Doc/library/cgi.rst:98
msgid ""
"The :class:`FieldStorage` instance can be indexed like a Python dictionary. "
"It allows membership testing with the :keyword:`in` operator, and also "
"supports the standard dictionary method :meth:`keys` and the built-in "
"function :func:`len`.  Form fields containing empty strings are ignored and "
"do not appear in the dictionary; to keep such values, provide a true value "
"for the optional *keep_blank_values* keyword parameter when creating the :"
"class:`FieldStorage` instance."
msgstr ""

#: ../Doc/library/cgi.rst:106
msgid ""
"For instance, the following code (which assumes that the :mailheader:"
"`Content-Type` header and blank line have already been printed) checks that "
"the fields ``name`` and ``addr`` are both set to a non-empty string::"
msgstr ""

#: ../Doc/library/cgi.rst:120
msgid ""
"Here the fields, accessed through ``form[key]``, are themselves instances "
"of :class:`FieldStorage` (or :class:`MiniFieldStorage`, depending on the "
"form encoding). The :attr:`value` attribute of the instance yields the "
"string value of the field.  The :meth:`getvalue` method returns this string "
"value directly; it also accepts an optional second argument as a default to "
"return if the requested key is not present."
msgstr ""

#: ../Doc/library/cgi.rst:127
msgid ""
"If the submitted form data contains more than one field with the same name, "
"the object retrieved by ``form[key]`` is not a :class:`FieldStorage` or :"
"class:`MiniFieldStorage` instance but a list of such instances.  Similarly, "
"in this situation, ``form.getvalue(key)`` would return a list of strings. If "
"you expect this possibility (when your HTML form contains multiple fields "
"with the same name), use the :func:`getlist` function, which always returns "
"a list of values (so that you do not need to special-case the single item "
"case).  For example, this code concatenates any number of username fields, "
"separated by commas::"
msgstr ""

#: ../Doc/library/cgi.rst:140
msgid ""
"If a field represents an uploaded file, accessing the value via the :attr:"
"`value` attribute or the :func:`getvalue` method reads the entire file in "
"memory as a string.  This may not be what you want. You can test for an "
"uploaded file by testing either the :attr:`filename` attribute or the :attr:"
"`!file` attribute.  You can then read the data at leisure from the :attr:`!"
"file` attribute::"
msgstr ""

#: ../Doc/library/cgi.rst:156
msgid ""
"If an error is encountered when obtaining the contents of an uploaded file "
"(for example, when the user interrupts the form submission by clicking on a "
"Back or Cancel button) the :attr:`done` attribute of the object for the "
"field will be set to the value -1."
msgstr ""

#: ../Doc/library/cgi.rst:161
msgid ""
"The file upload draft standard entertains the possibility of uploading "
"multiple files from one field (using a recursive :mimetype:`multipart/\\*` "
"encoding). When this occurs, the item will be a dictionary-like :class:"
"`FieldStorage` item. This can be determined by testing its :attr:`!type` "
"attribute, which should be :mimetype:`multipart/form-data` (or perhaps "
"another MIME type matching :mimetype:`multipart/\\*`).  In this case, it can "
"be iterated over recursively just like the top-level form object."
msgstr ""

#: ../Doc/library/cgi.rst:169
msgid ""
"When a form is submitted in the \"old\" format (as the query string or as a "
"single data part of type :mimetype:`application/x-www-form-urlencoded`), the "
"items will actually be instances of the class :class:`MiniFieldStorage`.  In "
"this case, the :attr:`!list`, :attr:`!file`, and :attr:`filename` attributes "
"are always ``None``."
msgstr ""

#: ../Doc/library/cgi.rst:174
msgid ""
"A form submitted via POST that also has a query string will contain both :"
"class:`FieldStorage` and :class:`MiniFieldStorage` items."
msgstr ""

#: ../Doc/library/cgi.rst:178
msgid "Higher Level Interface"
msgstr ""

#: ../Doc/library/cgi.rst:182
msgid ""
"The previous section explains how to read CGI form data using the :class:"
"`FieldStorage` class.  This section describes a higher level interface which "
"was added to this class to allow one to do it in a more readable and "
"intuitive way.  The interface doesn't make the techniques described in "
"previous sections obsolete --- they are still useful to process file uploads "
"efficiently, for example."
msgstr ""

#: ../Doc/library/cgi.rst:191
msgid ""
"The interface consists of two simple methods. Using the methods you can "
"process form data in a generic way, without the need to worry whether only "
"one or more values were posted under one name."
msgstr ""

#: ../Doc/library/cgi.rst:195
msgid ""
"In the previous section, you learned to write following code anytime you "
"expected a user to post more than one value under one name::"
msgstr ""

#: ../Doc/library/cgi.rst:204
msgid ""
"This situation is common for example when a form contains a group of "
"multiple checkboxes with the same name::"
msgstr ""

#: ../Doc/library/cgi.rst:210
msgid ""
"In most situations, however, there's only one form control with a particular "
"name in a form and then you expect and need only one value associated with "
"this name.  So you write a script containing for example this code::"
msgstr ""

#: ../Doc/library/cgi.rst:216
msgid ""
"The problem with the code is that you should never expect that a client will "
"provide valid input to your scripts.  For example, if a curious user appends "
"another ``user=foo`` pair to the query string, then the script would crash, "
"because in this situation the ``getvalue(\"user\")`` method call returns a "
"list instead of a string.  Calling the :meth:`~str.upper` method on a list "
"is not valid (since lists do not have a method of this name) and results in "
"an :exc:`AttributeError` exception."
msgstr ""

#: ../Doc/library/cgi.rst:224
msgid ""
"Therefore, the appropriate way to read form data values was to always use "
"the code which checks whether the obtained value is a single value or a list "
"of values.  That's annoying and leads to less readable scripts."
msgstr ""

#: ../Doc/library/cgi.rst:228
msgid ""
"A more convenient approach is to use the methods :meth:`getfirst` and :meth:"
"`getlist` provided by this higher level interface."
msgstr ""

#: ../Doc/library/cgi.rst:234
msgid ""
"This method always returns only one value associated with form field *name*. "
"The method returns only the first value in case that more values were posted "
"under such name.  Please note that the order in which the values are "
"received may vary from browser to browser and should not be counted on. [#]"
"_  If no such form field or value exists then the method returns the value "
"specified by the optional parameter *default*.  This parameter defaults to "
"``None`` if not specified."
msgstr ""

#: ../Doc/library/cgi.rst:245
msgid ""
"This method always returns a list of values associated with form field "
"*name*. The method returns an empty list if no such form field or value "
"exists for *name*.  It returns a list consisting of one item if only one "
"such value exists."
msgstr ""

#: ../Doc/library/cgi.rst:249
msgid "Using these methods you can write nice compact code::"
msgstr ""

# c0f46c33b74541a481d9b9829ae20d50
#: ../Doc/library/cgi.rst:259
msgid "Old classes"
msgstr ""

# fe7ef28360a84eba86c70bc5335d03af
#: ../Doc/library/cgi.rst:267
msgid ""
":class:`SvFormContentDict` stores single value form content as dictionary; "
"it assumes each field name occurs in the form only once."
msgstr ""

# 8954a01393f24976b6f934ac9c3c2f3c
#: ../Doc/library/cgi.rst:270
msgid ""
":class:`FormContentDict` stores multiple value form content as a dictionary "
"(the form items are lists of values).  Useful if your form contains multiple "
"fields with the same name."
msgstr ""

# da9ba687bf744e79826860e38047af70
#: ../Doc/library/cgi.rst:274
msgid ""
"Other classes (:class:`FormContent`, :class:`InterpFormContentDict`) are "
"present for backwards compatibility with really old applications only."
msgstr ""

#: ../Doc/library/cgi.rst:281 ../Doc/library/curses.rst:58
#: ../Doc/library/curses.panel.rst:17 ../Doc/library/stdtypes.rst:2832
#: ../Doc/library/xml.etree.elementtree.rst:355
msgid "Functions"
msgstr ""

#: ../Doc/library/cgi.rst:283
msgid ""
"These are useful if you want more control, or if you want to employ some of "
"the algorithms implemented in this module in other circumstances."
msgstr ""

# 0e3dfbb9e8284eb39f8da7bd7ca7bad1
#: ../Doc/library/cgi.rst:289
msgid ""
"Parse a query in the environment or from a file (the file defaults to ``sys."
"stdin`` and environment defaults to ``os.environ``).  The "
"*keep_blank_values* and *strict_parsing* parameters are passed to :func:"
"`urlparse.parse_qs` unchanged."
msgstr ""

# 46328c262e4b4b9db67182a0d533096d
#: ../Doc/library/cgi.rst:296
msgid ""
"This function is deprecated in this module. Use :func:`urlparse.parse_qs` "
"instead. It is maintained here only for backward compatiblity."
msgstr ""

# 69fc5c47ae97486a867a0e7ca347ebd0
#: ../Doc/library/cgi.rst:301
msgid ""
"This function is deprecated in this module. Use :func:`urlparse.parse_qsl` "
"instead. It is maintained here only for backward compatiblity."
msgstr ""

#: ../Doc/library/cgi.rst:306
msgid ""
"Parse input of type :mimetype:`multipart/form-data` (for  file uploads). "
"Arguments are *fp* for the input file and *pdict* for a dictionary "
"containing other parameters in the :mailheader:`Content-Type` header."
msgstr ""

# bd4f07f61c934f248b8ac8965190effe
#: ../Doc/library/cgi.rst:310
msgid ""
"Returns a dictionary just like :func:`urlparse.parse_qs` keys are the field "
"names, each value is a list of values for that field.  This is easy to use "
"but not much good if you are expecting megabytes to be uploaded --- in that "
"case, use the :class:`FieldStorage` class instead which is much more "
"flexible."
msgstr ""

#: ../Doc/library/cgi.rst:315
msgid ""
"Note that this does not parse nested multipart parts --- use :class:"
"`FieldStorage` for that."
msgstr ""

#: ../Doc/library/cgi.rst:321
msgid ""
"Parse a MIME header (such as :mailheader:`Content-Type`) into a main value "
"and a dictionary of parameters."
msgstr ""

#: ../Doc/library/cgi.rst:327
msgid ""
"Robust test CGI script, usable as main program. Writes minimal HTTP headers "
"and formats all information provided to the script in HTML form."
msgstr ""

#: ../Doc/library/cgi.rst:333
msgid "Format the shell environment in HTML."
msgstr ""

#: ../Doc/library/cgi.rst:338
msgid "Format a form in HTML."
msgstr ""

#: ../Doc/library/cgi.rst:343
msgid "Format the current directory in HTML."
msgstr ""

#: ../Doc/library/cgi.rst:348
msgid "Print a list of useful (used by CGI) environment variables in HTML."
msgstr ""

# 149b1a7a898c4b74980c7e28b4937ed5
#: ../Doc/library/cgi.rst:353
msgid ""
"Convert the characters ``'&'``, ``'<'`` and ``'>'`` in string *s* to HTML-"
"safe sequences.  Use this if you need to display text that might contain "
"such characters in HTML.  If the optional flag *quote* is true, the "
"quotation mark character (``\"``) is also translated; this helps for "
"inclusion in an HTML attribute value delimited by double quotes, as in ``<a "
"href=\"...\">``.  Note that single quotes are never translated."
msgstr ""

# 1beb527348ab4020bc687d0557350c3f
#: ../Doc/library/cgi.rst:360
msgid ""
"If the value to be quoted might include single- or double-quote characters, "
"or both, consider using the :func:`~xml.sax.saxutils.quoteattr` function in "
"the :mod:`xml.sax.saxutils` module instead."
msgstr ""

#: ../Doc/library/cgi.rst:368
msgid "Caring about security"
msgstr ""

#: ../Doc/library/cgi.rst:372
msgid ""
"There's one important rule: if you invoke an external program (via the :func:"
"`os.system` or :func:`os.popen` functions. or others with similar "
"functionality), make very sure you don't pass arbitrary strings received "
"from the client to the shell.  This is a well-known security hole whereby "
"clever hackers anywhere on the Web can exploit a gullible CGI script to "
"invoke arbitrary shell commands.  Even parts of the URL or field names "
"cannot be trusted, since the request doesn't have to come from your form!"
msgstr ""

#: ../Doc/library/cgi.rst:380
msgid ""
"To be on the safe side, if you must pass a string gotten from a form to a "
"shell command, you should make sure the string contains only alphanumeric "
"characters, dashes, underscores, and periods."
msgstr ""

#: ../Doc/library/cgi.rst:386
msgid "Installing your CGI script on a Unix system"
msgstr ""

#: ../Doc/library/cgi.rst:388
msgid ""
"Read the documentation for your HTTP server and check with your local system "
"administrator to find the directory where CGI scripts should be installed; "
"usually this is in a directory :file:`cgi-bin` in the server tree."
msgstr ""

# 0571fa015ab64189b50091d68977d114
#: ../Doc/library/cgi.rst:392
msgid ""
"Make sure that your script is readable and executable by \"others\"; the "
"Unix file mode should be ``0755`` octal (use ``chmod 0755 filename``).  Make "
"sure that the first line of the script contains ``#!`` starting in column 1 "
"followed by the pathname of the Python interpreter, for instance::"
msgstr ""

#: ../Doc/library/cgi.rst:399
msgid ""
"Make sure the Python interpreter exists and is executable by \"others\"."
msgstr ""

# 33287d2b96c44adb88711ff086e8d8d4
#: ../Doc/library/cgi.rst:401
msgid ""
"Make sure that any files your script needs to read or write are readable or "
"writable, respectively, by \"others\" --- their mode should be ``0644`` for "
"readable and ``0666`` for writable.  This is because, for security reasons, "
"the HTTP server executes your script as user \"nobody\", without any special "
"privileges.  It can only read (write, execute) files that everybody can read "
"(write, execute).  The current directory at execution time is also different "
"(it is usually the server's cgi-bin directory) and the set of environment "
"variables is also different from what you get when you log in.  In "
"particular, don't count on the shell's search path for executables (:envvar:"
"`PATH`) or the Python module search path (:envvar:`PYTHONPATH`) to be set to "
"anything interesting."
msgstr ""

#: ../Doc/library/cgi.rst:412
msgid ""
"If you need to load modules from a directory which is not on Python's "
"default module search path, you can change the path in your script, before "
"importing other modules.  For example::"
msgstr ""

#: ../Doc/library/cgi.rst:420
msgid "(This way, the directory inserted last will be searched first!)"
msgstr ""

#: ../Doc/library/cgi.rst:422
msgid ""
"Instructions for non-Unix systems will vary; check your HTTP server's "
"documentation (it will usually have a section on CGI scripts)."
msgstr ""

#: ../Doc/library/cgi.rst:427
msgid "Testing your CGI script"
msgstr ""

#: ../Doc/library/cgi.rst:429
msgid ""
"Unfortunately, a CGI script will generally not run when you try it from the "
"command line, and a script that works perfectly from the command line may "
"fail mysteriously when run from the server.  There's one reason why you "
"should still test your script from the command line: if it contains a syntax "
"error, the Python interpreter won't execute it at all, and the HTTP server "
"will most likely send a cryptic error to the client."
msgstr ""

#: ../Doc/library/cgi.rst:436
msgid ""
"Assuming your script has no syntax errors, yet it does not work, you have no "
"choice but to read the next section."
msgstr ""

#: ../Doc/library/cgi.rst:441
msgid "Debugging CGI scripts"
msgstr ""

#: ../Doc/library/cgi.rst:445
msgid ""
"First of all, check for trivial installation errors --- reading the section "
"above on installing your CGI script carefully can save you a lot of time.  "
"If you wonder whether you have understood the installation procedure "
"correctly, try installing a copy of this module file (:file:`cgi.py`) as a "
"CGI script.  When invoked as a script, the file will dump its environment "
"and the contents of the form in HTML form. Give it the right mode etc, and "
"send it a request.  If it's installed in the standard :file:`cgi-bin` "
"directory, it should be possible to send it a request by entering a URL into "
"your browser of the form::"
msgstr ""

#: ../Doc/library/cgi.rst:456
msgid ""
"If this gives an error of type 404, the server cannot find the script -- "
"perhaps you need to install it in a different directory.  If it gives "
"another error, there's an installation problem that you should fix before "
"trying to go any further.  If you get a nicely formatted listing of the "
"environment and form content (in this example, the fields should be listed "
"as \"addr\" with value \"At Home\" and \"name\" with value \"Joe Blow\"), "
"the :file:`cgi.py` script has been installed correctly.  If you follow the "
"same procedure for your own script, you should now be able to debug it."
msgstr ""

#: ../Doc/library/cgi.rst:465
msgid ""
"The next step could be to call the :mod:`cgi` module's :func:`test` function "
"from your script: replace its main code with the single statement ::"
msgstr ""

#: ../Doc/library/cgi.rst:470
msgid ""
"This should produce the same results as those gotten from installing the :"
"file:`cgi.py` file itself."
msgstr ""

#: ../Doc/library/cgi.rst:473
msgid ""
"When an ordinary Python script raises an unhandled exception (for whatever "
"reason: of a typo in a module name, a file that can't be opened, etc.), the "
"Python interpreter prints a nice traceback and exits.  While the Python "
"interpreter will still do this when your CGI script raises an exception, "
"most likely the traceback will end up in one of the HTTP server's log files, "
"or be discarded altogether."
msgstr ""

#: ../Doc/library/cgi.rst:480
msgid ""
"Fortunately, once you have managed to get your script to execute *some* "
"code, you can easily send tracebacks to the Web browser using the :mod:"
"`cgitb` module. If you haven't done so already, just add the lines::"
msgstr ""

#: ../Doc/library/cgi.rst:487
msgid ""
"to the top of your script.  Then try running it again; when a problem "
"occurs, you should see a detailed report that will likely make apparent the "
"cause of the crash."
msgstr ""

#: ../Doc/library/cgi.rst:491
msgid ""
"If you suspect that there may be a problem in importing the :mod:`cgitb` "
"module, you can use an even more robust approach (which only uses built-in "
"modules)::"
msgstr ""

#: ../Doc/library/cgi.rst:500
msgid ""
"This relies on the Python interpreter to print the traceback.  The content "
"type of the output is set to plain text, which disables all HTML "
"processing.  If your script works, the raw HTML will be displayed by your "
"client.  If it raises an exception, most likely after the first two lines "
"have been printed, a traceback will be displayed. Because no HTML "
"interpretation is going on, the traceback will be readable."
msgstr ""

#: ../Doc/library/cgi.rst:509
msgid "Common problems and solutions"
msgstr ""

#: ../Doc/library/cgi.rst:511
msgid ""
"Most HTTP servers buffer the output from CGI scripts until the script is "
"completed.  This means that it is not possible to display a progress report "
"on the client's display while the script is running."
msgstr ""

#: ../Doc/library/cgi.rst:515
msgid "Check the installation instructions above."
msgstr ""

#: ../Doc/library/cgi.rst:517
msgid ""
"Check the HTTP server's log files.  (``tail -f logfile`` in a separate "
"window may be useful!)"
msgstr ""

#: ../Doc/library/cgi.rst:520
msgid ""
"Always check a script for syntax errors first, by doing something like "
"``python script.py``."
msgstr ""

#: ../Doc/library/cgi.rst:523
msgid ""
"If your script does not have any syntax errors, try adding ``import cgitb; "
"cgitb.enable()`` to the top of the script."
msgstr ""

#: ../Doc/library/cgi.rst:526
msgid ""
"When invoking external programs, make sure they can be found. Usually, this "
"means using absolute path names --- :envvar:`PATH` is usually not set to a "
"very useful value in a CGI script."
msgstr ""

#: ../Doc/library/cgi.rst:530
msgid ""
"When reading or writing external files, make sure they can be read or "
"written by the userid under which your CGI script will be running: this is "
"typically the userid under which the web server is running, or some "
"explicitly specified userid for a web server's ``suexec`` feature."
msgstr ""

#: ../Doc/library/cgi.rst:535
msgid ""
"Don't try to give a CGI script a set-uid mode.  This doesn't work on most "
"systems, and is a security liability as well."
msgstr ""

#: ../Doc/library/cgi.rst:540
msgid ""
"Note that some recent versions of the HTML specification do state what order "
"the field values should be supplied in, but knowing whether a request was "
"received from a conforming browser, or even from a browser at all, is "
"tedious and error-prone."
msgstr ""

# 6dc736de11b34846b6dd9d698b87d834
#: ../Doc/library/cgihttpserver.rst:2
msgid ":mod:`CGIHTTPServer` --- CGI-capable HTTP request handler"
msgstr ""

# 2cdeea1d24634888abf0c5635550501f
#: ../Doc/library/cgihttpserver.rst:10
msgid ""
"The :mod:`CGIHTTPServer` module has been merged into :mod:`http.server` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# fa40726753964c9d9ae13fecad90c170
#: ../Doc/library/cgihttpserver.rst:15
msgid ""
"The :mod:`CGIHTTPServer` module defines a request-handler class, interface "
"compatible with :class:`BaseHTTPServer.BaseHTTPRequestHandler` and inherits "
"behavior from :class:`SimpleHTTPServer.SimpleHTTPRequestHandler` but can "
"also run CGI scripts."
msgstr ""

# 358f2632173e47d085b6388444c634fa
#: ../Doc/library/cgihttpserver.rst:22
msgid "This module can run CGI scripts on Unix and Windows systems."
msgstr ""

#: ../Doc/library/cgihttpserver.rst:26
msgid ""
"CGI scripts run by the :class:`CGIHTTPRequestHandler` class cannot execute "
"redirects (HTTP code 302), because code 200 (script output follows) is sent "
"prior to execution of the CGI script.  This pre-empts the status code."
msgstr ""

# 6a90bdb122b64c05b564f0936bba54f5
#: ../Doc/library/cgihttpserver.rst:30
msgid "The :mod:`CGIHTTPServer` module defines the following class:"
msgstr ""

# 95db753508764c7b84c1371a0ca955c5
#: ../Doc/library/cgihttpserver.rst:35
msgid ""
"This class is used to serve either files or output of CGI scripts from  the "
"current directory and below. Note that mapping HTTP hierarchic structure to "
"local directory structure is exactly as in :class:`SimpleHTTPServer."
"SimpleHTTPRequestHandler`."
msgstr ""

# 9a36f329e290494480e109bf7572762a
#: ../Doc/library/cgihttpserver.rst:40
msgid ""
"The class will however, run the CGI script, instead of serving it as a file, "
"if it guesses it to be a CGI script. Only directory-based CGI are used --- "
"the other common server configuration is to treat special extensions as "
"denoting CGI scripts."
msgstr ""

#: ../Doc/library/cgihttpserver.rst:45
msgid ""
"The :func:`do_GET` and :func:`do_HEAD` functions are modified to run CGI "
"scripts and serve the output, instead of serving files, if the request leads "
"to somewhere below the ``cgi_directories`` path."
msgstr ""

#: ../Doc/library/cgihttpserver.rst:49
msgid "The :class:`CGIHTTPRequestHandler` defines the following data member:"
msgstr ""

#: ../Doc/library/cgihttpserver.rst:54
msgid ""
"This defaults to ``['/cgi-bin', '/htbin']`` and describes directories to "
"treat as containing CGI scripts."
msgstr ""

# da9d2d2515754d348991a80532d402c6
#: ../Doc/library/cgihttpserver.rst:57
msgid "The :class:`CGIHTTPRequestHandler` defines the following methods:"
msgstr ""

#: ../Doc/library/cgihttpserver.rst:62
msgid ""
"This method serves the ``'POST'`` request type, only allowed for CGI "
"scripts.  Error 501, \"Can only POST to CGI scripts\", is output when trying "
"to POST to a non-CGI url."
msgstr ""

# cb396961eba6477ebc68bcdf70caf9d4
#: ../Doc/library/cgihttpserver.rst:66
msgid ""
"Note that CGI scripts will be run with UID of user nobody, for security "
"reasons. Problems with the CGI script will be translated to error 403."
msgstr ""

# 56ee9b01da134252a3448f555271f786
#: ../Doc/library/cgihttpserver.rst:69
msgid "For example usage, see the implementation of the :func:`test` function."
msgstr ""

# b463d0ab6a904808b0c89276890c6681
# 603000f4c97a41829e7232d9ab1f2f25
#: ../Doc/library/cgihttpserver.rst:75 ../Doc/library/simplehttpserver.rst:118
msgid "Base class implementation for Web server and request handler."
msgstr ""

#: ../Doc/library/cgitb.rst:3
msgid ":mod:`cgitb` --- Traceback manager for CGI scripts"
msgstr ""

#: ../Doc/library/cgitb.rst:19
msgid ""
"The :mod:`cgitb` module provides a special exception handler for Python "
"scripts. (Its name is a bit misleading.  It was originally designed to "
"display extensive traceback information in HTML for CGI scripts.  It was "
"later generalized to also display this information in plain text.)  After "
"this module is activated, if an uncaught exception occurs, a detailed, "
"formatted report will be displayed.  The report includes a traceback showing "
"excerpts of the source code for each level, as well as the values of the "
"arguments and local variables to currently running functions, to help you "
"debug the problem.  Optionally, you can save this information to a file "
"instead of sending it to the browser."
msgstr ""

#: ../Doc/library/cgitb.rst:29
msgid "To enable this feature, simply add this to the top of your CGI script::"
msgstr ""

#: ../Doc/library/cgitb.rst:34
msgid ""
"The options to the :func:`enable` function control whether the report is "
"displayed in the browser and whether the report is logged to a file for "
"later analysis."
msgstr ""

#: ../Doc/library/cgitb.rst:43
msgid ""
"This function causes the :mod:`cgitb` module to take over the interpreter's "
"default handling for exceptions by setting the value of :attr:`sys."
"excepthook`."
msgstr ""

#: ../Doc/library/cgitb.rst:46
msgid ""
"The optional argument *display* defaults to ``1`` and can be set to ``0`` to "
"suppress sending the traceback to the browser. If the argument *logdir* is "
"present, the traceback reports are written to files.  The value of *logdir* "
"should be a directory where these files will be placed. The optional "
"argument *context* is the number of lines of context to display around the "
"current line of source code in the traceback; this defaults to ``5``. If the "
"optional argument *format* is ``\"html\"``, the output is formatted as "
"HTML.  Any other value forces plain text output.  The default value is ``"
"\"html\"``."
msgstr ""

#: ../Doc/library/cgitb.rst:58
msgid ""
"This function handles an exception using the default settings (that is, show "
"a report in the browser, but don't log to a file). This can be used when "
"you've caught an exception and want to report it using :mod:`cgitb`.  The "
"optional *info* argument should be a 3-tuple containing an exception type, "
"exception value, and traceback object, exactly like the tuple returned by :"
"func:`sys.exc_info`.  If the *info* argument is not supplied, the current "
"exception is obtained from :func:`sys.exc_info`."
msgstr ""

#: ../Doc/library/chunk.rst:3
msgid ":mod:`chunk` --- Read IFF chunked data"
msgstr ""

#: ../Doc/library/chunk.rst:18
msgid ""
"This module provides an interface for reading files that use EA IFF 85 "
"chunks. [#]_  This format is used in at least the Audio Interchange File "
"Format (AIFF/AIFF-C) and the Real Media File Format (RMFF).  The WAVE audio "
"file format is closely related and can also be read using this module."
msgstr ""

#: ../Doc/library/chunk.rst:23
msgid "A chunk has the following structure:"
msgstr ""

#: ../Doc/library/chunk.rst:26
msgid "Offset"
msgstr ""

#: ../Doc/library/chunk.rst:26
msgid "Length"
msgstr ""

#: ../Doc/library/chunk.rst:26 ../Doc/library/sunau.rst:20
msgid "Contents"
msgstr ""

#: ../Doc/library/chunk.rst:28 ../Doc/library/grp.rst:20
#: ../Doc/library/pwd.rst:20 ../Doc/library/spwd.rst:25
#: ../Doc/library/time.rst:403 ../Doc/library/tkinter.rst:443
#: ../Doc/library/urlparse.rst:95 ../Doc/library/urlparse.rst:199
msgid "0"
msgstr ""

#: ../Doc/library/chunk.rst:28
msgid "Chunk ID"
msgstr ""

#: ../Doc/library/chunk.rst:30
msgid "Size of chunk in big-endian byte order, not including the header"
msgstr ""

#: ../Doc/library/chunk.rst:34
msgid "*n*"
msgstr ""

#: ../Doc/library/chunk.rst:34
msgid "Data bytes, where *n* is the size given in the preceding field"
msgstr ""

#: ../Doc/library/chunk.rst:38
msgid "8 + *n*"
msgstr ""

#: ../Doc/library/chunk.rst:38
msgid "0 or 1"
msgstr ""

#: ../Doc/library/chunk.rst:38
msgid "Pad byte needed if *n* is odd and chunk alignment is used"
msgstr ""

#: ../Doc/library/chunk.rst:42
msgid "The ID is a 4-byte string which identifies the type of chunk."
msgstr ""

#: ../Doc/library/chunk.rst:44
msgid ""
"The size field (a 32-bit value, encoded using big-endian byte order) gives "
"the size of the chunk data, not including the 8-byte header."
msgstr ""

#: ../Doc/library/chunk.rst:47
msgid ""
"Usually an IFF-type file consists of one or more chunks.  The proposed usage "
"of the :class:`Chunk` class defined here is to instantiate an instance at "
"the start of each chunk and read from the instance until it reaches the end, "
"after which a new instance can be instantiated. At the end of the file, "
"creating a new instance will fail with a :exc:`EOFError` exception."
msgstr ""

#: ../Doc/library/chunk.rst:56
msgid ""
"Class which represents a chunk.  The *file* argument is expected to be a "
"file-like object.  An instance of this class is specifically allowed.  The "
"only method that is needed is :meth:`read`.  If the methods :meth:`seek` "
"and :meth:`tell` are present and don't raise an exception, they are also "
"used. If these methods are present and raise an exception, they are expected "
"to not have altered the object.  If the optional argument *align* is true, "
"chunks are assumed to be aligned on 2-byte boundaries.  If *align* is false, "
"no alignment is assumed.  The default value is true.  If the optional "
"argument *bigendian* is false, the chunk size is assumed to be in little-"
"endian order. This is needed for WAVE audio files. The default value is "
"true.  If the optional argument *inclheader* is true, the size given in the "
"chunk header includes the size of the header.  The default value is false."
msgstr ""

#: ../Doc/library/chunk.rst:69
msgid "A :class:`Chunk` object supports the following methods:"
msgstr ""

#: ../Doc/library/chunk.rst:74
msgid ""
"Returns the name (ID) of the chunk.  This is the first 4 bytes of the chunk."
msgstr ""

#: ../Doc/library/chunk.rst:80
msgid "Returns the size of the chunk."
msgstr ""

#: ../Doc/library/chunk.rst:85
msgid ""
"Close and skip to the end of the chunk.  This does not close the underlying "
"file."
msgstr ""

#: ../Doc/library/chunk.rst:88
msgid ""
"The remaining methods will raise :exc:`IOError` if called after the :meth:"
"`close` method has been called."
msgstr ""

#: ../Doc/library/chunk.rst:94
msgid "Returns ``False``."
msgstr ""

#: ../Doc/library/chunk.rst:99
msgid ""
"Set the chunk's current position.  The *whence* argument is optional and "
"defaults to ``0`` (absolute file positioning); other values are ``1`` (seek "
"relative to the current position) and ``2`` (seek relative to the file's "
"end).  There is no return value. If the underlying file does not allow seek, "
"only forward seeks are allowed."
msgstr ""

#: ../Doc/library/chunk.rst:108
msgid "Return the current position into the chunk."
msgstr ""

#: ../Doc/library/chunk.rst:113
msgid ""
"Read at most *size* bytes from the chunk (less if the read hits the end of "
"the chunk before obtaining *size* bytes).  If the *size* argument is "
"negative or omitted, read all data until the end of the chunk.  The bytes "
"are returned as a string object.  An empty string is returned when the end "
"of the chunk is encountered immediately."
msgstr ""

#: ../Doc/library/chunk.rst:122
msgid ""
"Skip to the end of the chunk.  All further calls to :meth:`read` for the "
"chunk will return ``''``.  If you are not interested in the contents of the "
"chunk, this method should be called so that the file points to the start of "
"the next chunk."
msgstr ""

#: ../Doc/library/chunk.rst:130
msgid ""
"\"EA IFF 85\" Standard for Interchange Format Files, Jerry Morrison, "
"Electronic Arts, January 1985."
msgstr ""

#: ../Doc/library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ""

#: ../Doc/library/cmath.rst:8
msgid ""
"This module is always available.  It provides access to mathematical "
"functions for complex numbers.  The functions in this module accept "
"integers, floating-point numbers or complex numbers as arguments. They will "
"also accept any Python object that has either a :meth:`__complex__` or a :"
"meth:`__float__` method: these methods are used to convert the object to a "
"complex or floating-point number, respectively, and the function is then "
"applied to the result of the conversion."
msgstr ""

#: ../Doc/library/cmath.rst:18
msgid ""
"On platforms with hardware and system-level support for signed zeros, "
"functions involving branch cuts are continuous on *both* sides of the branch "
"cut: the sign of the zero distinguishes one side of the branch cut from the "
"other.  On platforms that do not support signed zeros the continuity is as "
"specified below."
msgstr ""

#: ../Doc/library/cmath.rst:26
msgid "Conversions to and from polar coordinates"
msgstr ""

#: ../Doc/library/cmath.rst:28
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""

#: ../Doc/library/cmath.rst:35
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""

#: ../Doc/library/cmath.rst:42
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""

#: ../Doc/library/cmath.rst:47
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float.  "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-π, π], and the branch cut for this operation lies along "
"the negative real axis, continuous from above.  On systems with support for "
"signed zeros (which includes most systems in current use), this means that "
"the sign of the result is the same as the sign of ``x.imag``, even when ``x."
"imag`` is zero::"
msgstr ""

#: ../Doc/library/cmath.rst:66
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""

#: ../Doc/library/cmath.rst:73
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  ``polar"
"(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""

#: ../Doc/library/cmath.rst:83
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""

#: ../Doc/library/cmath.rst:90 ../Doc/library/math.rst:155
msgid "Power and logarithmic functions"
msgstr ""

#: ../Doc/library/cmath.rst:94
msgid "Return the exponential value ``e**x``."
msgstr ""

#: ../Doc/library/cmath.rst:99
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞, continuous from above."
msgstr ""

#: ../Doc/library/cmath.rst:109
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr ""

#: ../Doc/library/cmath.rst:115
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr ""

#: ../Doc/library/cmath.rst:119 ../Doc/library/math.rst:222
msgid "Trigonometric functions"
msgstr ""

#: ../Doc/library/cmath.rst:123
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞, continuous from below. The other extends "
"left from -1 along the real axis to -∞, continuous from above."
msgstr ""

#: ../Doc/library/cmath.rst:130
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr ""

#: ../Doc/library/cmath.rst:135
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``, continuous from the right. The "
"other extends from ``-1j`` along the imaginary axis to ``-∞j``, continuous "
"from the left."
msgstr ""

#: ../Doc/library/cmath.rst:146
msgid "Return the cosine of *x*."
msgstr ""

#: ../Doc/library/cmath.rst:151
msgid "Return the sine of *x*."
msgstr ""

#: ../Doc/library/cmath.rst:156
msgid "Return the tangent of *x*."
msgstr ""

#: ../Doc/library/cmath.rst:160 ../Doc/library/math.rst:284
msgid "Hyperbolic functions"
msgstr ""

#: ../Doc/library/cmath.rst:164
msgid ""
"Return the hyperbolic arc cosine of *x*. There is one branch cut, extending "
"left from 1 along the real axis to -∞, continuous from above."
msgstr ""

#: ../Doc/library/cmath.rst:170
msgid ""
"Return the hyperbolic arc sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``, continuous from the "
"right.  The other extends from ``-1j`` along the imaginary axis to ``-∞j``, "
"continuous from the left."
msgstr ""

#: ../Doc/library/cmath.rst:181
msgid ""
"Return the hyperbolic arc tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``, continuous from below. The "
"other extends from ``-1`` along the real axis to ``-∞``, continuous from "
"above."
msgstr ""

#: ../Doc/library/cmath.rst:192 ../Doc/library/math.rst:309
msgid "Return the hyperbolic cosine of *x*."
msgstr ""

#: ../Doc/library/cmath.rst:197 ../Doc/library/math.rst:314
msgid "Return the hyperbolic sine of *x*."
msgstr ""

#: ../Doc/library/cmath.rst:202 ../Doc/library/math.rst:319
msgid "Return the hyperbolic tangent of *x*."
msgstr ""

#: ../Doc/library/cmath.rst:206
msgid "Classification functions"
msgstr ""

#: ../Doc/library/cmath.rst:210
msgid ""
"Return *True* if the real or the imaginary part of x is positive or negative "
"infinity."
msgstr ""

#: ../Doc/library/cmath.rst:218
msgid "Return *True* if the real or imaginary part of x is not a number (NaN)."
msgstr ""

#: ../Doc/library/cmath.rst:229
msgid "The mathematical constant *π*, as a float."
msgstr ""

#: ../Doc/library/cmath.rst:234
msgid "The mathematical constant *e*, as a float."
msgstr ""

#: ../Doc/library/cmath.rst:238
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""

#: ../Doc/library/cmath.rst:246
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""

#: ../Doc/library/cmath.rst:256
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165-211."
msgstr ""

#: ../Doc/library/cmd.rst:2
msgid ":mod:`cmd` --- Support for line-oriented command interpreters"
msgstr ""

# 4fed978571684b2fa6a2914b62bbf1e4
#: ../Doc/library/cmd.rst:8
msgid "**Source code:** :source:`Lib/cmd.py`"
msgstr ""

#: ../Doc/library/cmd.rst:12
msgid ""
"The :class:`Cmd` class provides a simple framework for writing line-oriented "
"command interpreters.  These are often useful for test harnesses, "
"administrative tools, and prototypes that will later be wrapped in a more "
"sophisticated interface."
msgstr ""

#: ../Doc/library/cmd.rst:19
msgid ""
"A :class:`Cmd` instance or subclass instance is a line-oriented interpreter "
"framework.  There is no good reason to instantiate :class:`Cmd` itself; "
"rather, it's useful as a superclass of an interpreter class you define "
"yourself in order to inherit :class:`Cmd`'s methods and encapsulate action "
"methods."
msgstr ""

#: ../Doc/library/cmd.rst:24
msgid ""
"The optional argument *completekey* is the :mod:`readline` name of a "
"completion key; it defaults to :kbd:`Tab`. If *completekey* is not :const:"
"`None` and :mod:`readline` is available, command completion is done "
"automatically."
msgstr ""

#: ../Doc/library/cmd.rst:28
msgid ""
"The optional arguments *stdin* and *stdout* specify the  input and output "
"file objects that the Cmd instance or subclass  instance will use for input "
"and output. If not specified, they will default to :data:`sys.stdin` and :"
"data:`sys.stdout`."
msgstr ""

#: ../Doc/library/cmd.rst:33
msgid ""
"If you want a given *stdin* to be used, make sure to set the instance's :"
"attr:`use_rawinput` attribute to ``False``, otherwise *stdin* will be "
"ignored."
msgstr ""

#: ../Doc/library/cmd.rst:44
msgid "Cmd Objects"
msgstr ""

#: ../Doc/library/cmd.rst:46
msgid "A :class:`Cmd` instance has the following methods:"
msgstr ""

#: ../Doc/library/cmd.rst:51
msgid ""
"Repeatedly issue a prompt, accept input, parse an initial prefix off the "
"received input, and dispatch to action methods, passing them the remainder "
"of the line as argument."
msgstr ""

# 1c9fea792dc446f5bcd88d3dc40aac4c
#: ../Doc/library/cmd.rst:55
msgid ""
"The optional argument is a banner or intro string to be issued before the "
"first prompt (this overrides the :attr:`intro` class attribute)."
msgstr ""

#: ../Doc/library/cmd.rst:58
msgid ""
"If the :mod:`readline` module is loaded, input will automatically inherit :"
"program:`bash`\\ -like history-list editing (e.g. :kbd:`Control-P` scrolls "
"back to the last command, :kbd:`Control-N` forward to the next one, :kbd:"
"`Control-F` moves the cursor to the right non-destructively, :kbd:`Control-"
"B` moves the cursor to the left non-destructively, etc.)."
msgstr ""

#: ../Doc/library/cmd.rst:64
msgid "An end-of-file on input is passed back as the string ``'EOF'``."
msgstr ""

#: ../Doc/library/cmd.rst:66
msgid ""
"An interpreter instance will recognize a command name ``foo`` if and only if "
"it has a method :meth:`do_foo`.  As a special case, a line beginning with "
"the character ``'?'`` is dispatched to the method :meth:`do_help`.  As "
"another special case, a line beginning with the character ``'!'`` is "
"dispatched to the method :meth:`do_shell` (if such a method is defined)."
msgstr ""

#: ../Doc/library/cmd.rst:72
msgid ""
"This method will return when the :meth:`postcmd` method returns a true "
"value. The *stop* argument to :meth:`postcmd` is the return value from the "
"command's corresponding :meth:`do_\\*` method."
msgstr ""

#: ../Doc/library/cmd.rst:76
msgid ""
"If completion is enabled, completing commands will be done automatically, "
"and completing of commands args is done by calling :meth:`complete_foo` with "
"arguments *text*, *line*, *begidx*, and *endidx*.  *text* is the string "
"prefix we are attempting to match: all returned matches must begin with it. "
"*line* is the current input line with leading whitespace removed, *begidx* "
"and *endidx* are the beginning and ending indexes of the prefix text, which "
"could be used to provide different completion depending upon which position "
"the argument is in."
msgstr ""

# f62536825a804fbb9f5158ad82eb25ee
#: ../Doc/library/cmd.rst:84
msgid ""
"All subclasses of :class:`Cmd` inherit a predefined :meth:`do_help`.  This "
"method, called with an argument ``'bar'``, invokes the corresponding method :"
"meth:`help_bar`, and if that is not present, prints the docstring of :meth:"
"`do_bar`, if available.  With no argument, :meth:`do_help` lists all "
"available help topics (that is, all commands with corresponding :meth:`help_"
"\\*` methods or commands that have docstrings), and also lists any "
"undocumented commands."
msgstr ""

#: ../Doc/library/cmd.rst:95
msgid ""
"Interpret the argument as though it had been typed in response to the "
"prompt. This may be overridden, but should not normally need to be; see the :"
"meth:`precmd` and :meth:`postcmd` methods for useful execution hooks.  The "
"return value is a flag indicating whether interpretation of commands by the "
"interpreter should stop.  If there is a :meth:`do_\\*` method for the "
"command *str*, the return value of that method is returned, otherwise the "
"return value from the :meth:`default` method is returned."
msgstr ""

#: ../Doc/library/cmd.rst:106
msgid ""
"Method called when an empty line is entered in response to the prompt. If "
"this method is not overridden, it repeats the last nonempty command entered."
msgstr ""

#: ../Doc/library/cmd.rst:112
msgid ""
"Method called on an input line when the command prefix is not recognized. If "
"this method is not overridden, it prints an error message and returns."
msgstr ""

#: ../Doc/library/cmd.rst:118
msgid ""
"Method called to complete an input line when no command-specific :meth:"
"`complete_\\*` method is available.  By default, it returns an empty list."
msgstr ""

#: ../Doc/library/cmd.rst:124
msgid ""
"Hook method executed just before the command line *line* is interpreted, but "
"after the input prompt is generated and issued.  This method is a stub in :"
"class:`Cmd`; it exists to be overridden by subclasses.  The return value is "
"used as the command which will be executed by the :meth:`onecmd` method; "
"the :meth:`precmd` implementation may re-write the command or simply return "
"*line* unchanged."
msgstr ""

#: ../Doc/library/cmd.rst:134
msgid ""
"Hook method executed just after a command dispatch is finished.  This method "
"is a stub in :class:`Cmd`; it exists to be overridden by subclasses.  *line* "
"is the command line which was executed, and *stop* is a flag which indicates "
"whether execution will be terminated after the call to :meth:`postcmd`; this "
"will be the return value of the :meth:`onecmd` method.  The return value of "
"this method will be used as the new value for the internal flag which "
"corresponds to *stop*; returning false will cause interpretation to continue."
msgstr ""

#: ../Doc/library/cmd.rst:145
msgid ""
"Hook method executed once when :meth:`cmdloop` is called.  This method is a "
"stub in :class:`Cmd`; it exists to be overridden by subclasses."
msgstr ""

#: ../Doc/library/cmd.rst:151
msgid ""
"Hook method executed once when :meth:`cmdloop` is about to return. This "
"method is a stub in :class:`Cmd`; it exists to be overridden by subclasses."
msgstr ""

#: ../Doc/library/cmd.rst:154
msgid ""
"Instances of :class:`Cmd` subclasses have some public instance variables:"
msgstr ""

#: ../Doc/library/cmd.rst:159
msgid "The prompt issued to solicit input."
msgstr ""

#: ../Doc/library/cmd.rst:164
msgid "The string of characters accepted for the command prefix."
msgstr ""

#: ../Doc/library/cmd.rst:169
msgid "The last nonempty command prefix seen."
msgstr ""

#: ../Doc/library/cmd.rst:174
msgid ""
"A string to issue as an intro or banner.  May be overridden by giving the :"
"meth:`cmdloop` method an argument."
msgstr ""

#: ../Doc/library/cmd.rst:180
msgid ""
"The header to issue if the help output has a section for documented commands."
msgstr ""

#: ../Doc/library/cmd.rst:185
msgid ""
"The header to issue if the help output has a section for miscellaneous  help "
"topics (that is, there are :meth:`help_\\*` methods without corresponding :"
"meth:`do_\\*` methods)."
msgstr ""

#: ../Doc/library/cmd.rst:192
msgid ""
"The header to issue if the help output has a section for undocumented  "
"commands (that is, there are :meth:`do_\\*` methods without corresponding :"
"meth:`help_\\*` methods)."
msgstr ""

#: ../Doc/library/cmd.rst:199
msgid ""
"The character used to draw separator lines under the help-message headers.  "
"If empty, no ruler line is drawn.  It defaults to ``'='``."
msgstr ""

# 036a10300098451790185177fde20381
#: ../Doc/library/cmd.rst:205
msgid ""
"A flag, defaulting to true.  If true, :meth:`cmdloop` uses :func:`raw_input` "
"to display a prompt and read the next command; if false, :meth:`sys.stdout."
"write` and :meth:`sys.stdin.readline` are used. (This means that by "
"importing :mod:`readline`, on systems that support it, the interpreter will "
"automatically support :program:`Emacs`\\ -like line editing  and command-"
"history keystrokes.)"
msgstr ""

#: ../Doc/library/code.rst:3
msgid ":mod:`code` --- Interpreter base classes"
msgstr ""

#: ../Doc/library/code.rst:10
msgid ""
"The ``code`` module provides facilities to implement read-eval-print loops "
"in Python.  Two classes and convenience functions are included which can be "
"used to build applications which provide an interactive interpreter prompt."
msgstr ""

#: ../Doc/library/code.rst:17
msgid ""
"This class deals with parsing and interpreter state (the user's namespace); "
"it does not deal with input buffering or prompting or input file naming (the "
"filename is always passed in explicitly). The optional *locals* argument "
"specifies the dictionary in which code will be executed; it defaults to a "
"newly created dictionary with key ``'__name__'`` set to ``'__console__'`` "
"and key ``'__doc__'`` set to ``None``."
msgstr ""

#: ../Doc/library/code.rst:27
msgid ""
"Closely emulate the behavior of the interactive Python interpreter. This "
"class builds on :class:`InteractiveInterpreter` and adds prompting using the "
"familiar ``sys.ps1`` and ``sys.ps2``, and input buffering."
msgstr ""

#: ../Doc/library/code.rst:34
msgid ""
"Convenience function to run a read-eval-print loop.  This creates a new "
"instance of :class:`InteractiveConsole` and sets *readfunc* to be used as "
"the :meth:`raw_input` method, if provided.  If *local* is provided, it is "
"passed to the :class:`InteractiveConsole` constructor for use as the default "
"namespace for the interpreter loop.  The :meth:`interact` method of the "
"instance is then run with *banner* passed as the banner to use, if "
"provided.  The console object is discarded after use."
msgstr ""

#: ../Doc/library/code.rst:45
msgid ""
"This function is useful for programs that want to emulate Python's "
"interpreter main loop (a.k.a. the read-eval-print loop).  The tricky part is "
"to determine when the user has entered an incomplete command that can be "
"completed by entering more text (as opposed to a complete command or a "
"syntax error).  This function *almost* always makes the same decision as the "
"real interpreter main loop."
msgstr ""

#: ../Doc/library/code.rst:52
msgid ""
"*source* is the source string; *filename* is the optional filename from "
"which source was read, defaulting to ``'<input>'``; and *symbol* is the "
"optional grammar start symbol, which should be either ``'single'`` (the "
"default) or ``'eval'``."
msgstr ""

#: ../Doc/library/code.rst:57
msgid ""
"Returns a code object (the same as ``compile(source, filename, symbol)``) if "
"the command is complete and valid; ``None`` if the command is incomplete; "
"raises :exc:`SyntaxError` if the command is complete and contains a syntax "
"error, or raises :exc:`OverflowError` or :exc:`ValueError` if the command "
"contains an invalid literal."
msgstr ""

#: ../Doc/library/code.rst:67
msgid "Interactive Interpreter Objects"
msgstr ""

#: ../Doc/library/code.rst:72
msgid ""
"Compile and run some source in the interpreter. Arguments are the same as "
"for :func:`compile_command`; the default for *filename* is ``'<input>'``, "
"and for *symbol* is ``'single'``.  One several things can happen:"
msgstr ""

#: ../Doc/library/code.rst:76
msgid ""
"The input is incorrect; :func:`compile_command` raised an exception (:exc:"
"`SyntaxError` or :exc:`OverflowError`).  A syntax traceback will be printed "
"by calling the :meth:`showsyntaxerror` method.  :meth:`runsource` returns "
"``False``."
msgstr ""

#: ../Doc/library/code.rst:81
msgid ""
"The input is incomplete, and more input is required; :func:`compile_command` "
"returned ``None``. :meth:`runsource` returns ``True``."
msgstr ""

#: ../Doc/library/code.rst:84
msgid ""
"The input is complete; :func:`compile_command` returned a code object.  The "
"code is executed by calling the :meth:`runcode` (which also handles run-time "
"exceptions, except for :exc:`SystemExit`). :meth:`runsource` returns "
"``False``."
msgstr ""

#: ../Doc/library/code.rst:88
msgid ""
"The return value can be used to decide whether to use ``sys.ps1`` or ``sys."
"ps2`` to prompt the next line."
msgstr ""

#: ../Doc/library/code.rst:94
msgid ""
"Execute a code object. When an exception occurs, :meth:`showtraceback` is "
"called to display a traceback.  All exceptions are caught except :exc:"
"`SystemExit`, which is allowed to propagate."
msgstr ""

#: ../Doc/library/code.rst:98
msgid ""
"A note about :exc:`KeyboardInterrupt`: this exception may occur elsewhere in "
"this code, and may not always be caught.  The caller should be prepared to "
"deal with it."
msgstr ""

#: ../Doc/library/code.rst:105
msgid ""
"Display the syntax error that just occurred.  This does not display a stack "
"trace because there isn't one for syntax errors. If *filename* is given, it "
"is stuffed into the exception instead of the default filename provided by "
"Python's parser, because it always uses ``'<string>'`` when reading from a "
"string. The output is written by the :meth:`write` method."
msgstr ""

#: ../Doc/library/code.rst:114
msgid ""
"Display the exception that just occurred.  We remove the first stack item "
"because it is within the interpreter object implementation. The output is "
"written by the :meth:`write` method."
msgstr ""

#: ../Doc/library/code.rst:121
msgid ""
"Write a string to the standard error stream (``sys.stderr``). Derived "
"classes should override this to provide the appropriate output handling as "
"needed."
msgstr ""

#: ../Doc/library/code.rst:128
msgid "Interactive Console Objects"
msgstr ""

#: ../Doc/library/code.rst:130
msgid ""
"The :class:`InteractiveConsole` class is a subclass of :class:"
"`InteractiveInterpreter`, and so offers all the methods of the interpreter "
"objects as well as the following additions."
msgstr ""

#: ../Doc/library/code.rst:137
msgid ""
"Closely emulate the interactive Python console. The optional banner argument "
"specify the banner to print before the first interaction; by default it "
"prints a banner similar to the one printed by the standard Python "
"interpreter, followed by the class name of the console object in parentheses "
"(so as not to confuse this with the real interpreter -- since it's so "
"close!)."
msgstr ""

#: ../Doc/library/code.rst:146
msgid ""
"Push a line of source text to the interpreter. The line should not have a "
"trailing newline; it may have internal newlines.  The line is appended to a "
"buffer and the interpreter's :meth:`runsource` method is called with the "
"concatenated contents of the buffer as source.  If this indicates that the "
"command was executed or invalid, the buffer is reset; otherwise, the command "
"is incomplete, and the buffer is left as it was after the line was "
"appended.  The return value is ``True`` if more input is required, ``False`` "
"if the line was dealt with in some way (this is the same as :meth:"
"`runsource`)."
msgstr ""

#: ../Doc/library/code.rst:158
msgid "Remove any unhandled source text from the input buffer."
msgstr ""

# c2cd41cfb0d1405b87162a16682d0385
#: ../Doc/library/code.rst:163
msgid ""
"Write a prompt and read a line.  The returned line does not include the "
"trailing newline.  When the user enters the EOF key sequence, :exc:"
"`EOFError` is raised. The base implementation uses the built-in function :"
"func:`raw_input`; a subclass may replace this with a different "
"implementation."
msgstr ""

#: ../Doc/library/codecs.rst:3
msgid ":mod:`codecs` --- Codec registry and base classes"
msgstr ""

#: ../Doc/library/codecs.rst:20
msgid ""
"This module defines base classes for standard Python codecs (encoders and "
"decoders) and provides access to the internal Python codec registry which "
"manages the codec and error handling lookup process."
msgstr ""

#: ../Doc/library/codecs.rst:24
msgid "It defines the following functions:"
msgstr ""

#: ../Doc/library/codecs.rst:29
msgid ""
"Register a codec search function. Search functions are expected to take one "
"argument, the encoding name in all lower case letters, and return a :class:"
"`CodecInfo` object having the following attributes:"
msgstr ""

#: ../Doc/library/codecs.rst:33
msgid "``name`` The name of the encoding;"
msgstr ""

#: ../Doc/library/codecs.rst:35
msgid "``encode`` The stateless encoding function;"
msgstr ""

#: ../Doc/library/codecs.rst:37
msgid "``decode`` The stateless decoding function;"
msgstr ""

#: ../Doc/library/codecs.rst:39
msgid ""
"``incrementalencoder`` An incremental encoder class or factory function;"
msgstr ""

#: ../Doc/library/codecs.rst:41
msgid ""
"``incrementaldecoder`` An incremental decoder class or factory function;"
msgstr ""

#: ../Doc/library/codecs.rst:43
msgid "``streamwriter`` A stream writer class or factory function;"
msgstr ""

#: ../Doc/library/codecs.rst:45
msgid "``streamreader`` A stream reader class or factory function."
msgstr ""

#: ../Doc/library/codecs.rst:47
msgid "The various functions or classes take the following arguments:"
msgstr ""

#: ../Doc/library/codecs.rst:49
msgid ""
"*encode* and *decode*: These must be functions or methods which have the "
"same interface as the :meth:`encode`/:meth:`decode` methods of Codec "
"instances (see Codec Interface). The functions/methods are expected to work "
"in a stateless mode."
msgstr ""

#: ../Doc/library/codecs.rst:54
msgid ""
"*incrementalencoder* and *incrementaldecoder*: These have to be factory "
"functions providing the following interface:"
msgstr ""

#: ../Doc/library/codecs.rst:57
msgid "``factory(errors='strict')``"
msgstr ""

#: ../Doc/library/codecs.rst:59
msgid ""
"The factory functions must return objects providing the interfaces defined "
"by the base classes :class:`IncrementalEncoder` and :class:"
"`IncrementalDecoder`, respectively. Incremental codecs can maintain state."
msgstr ""

#: ../Doc/library/codecs.rst:63
msgid ""
"*streamreader* and *streamwriter*: These have to be factory functions "
"providing the following interface:"
msgstr ""

#: ../Doc/library/codecs.rst:66
msgid "``factory(stream, errors='strict')``"
msgstr ""

#: ../Doc/library/codecs.rst:68
msgid ""
"The factory functions must return objects providing the interfaces defined "
"by the base classes :class:`StreamWriter` and :class:`StreamReader`, "
"respectively. Stream codecs can maintain state."
msgstr ""

#: ../Doc/library/codecs.rst:72
msgid "Possible values for errors are"
msgstr ""

#: ../Doc/library/codecs.rst:74
msgid "``'strict'``: raise an exception in case of an encoding error"
msgstr ""

#: ../Doc/library/codecs.rst:75
msgid ""
"``'replace'``: replace malformed data with a suitable replacement marker, "
"such as ``'?'`` or ``'\\ufffd'``"
msgstr ""

#: ../Doc/library/codecs.rst:77
msgid "``'ignore'``: ignore malformed data and continue without further notice"
msgstr ""

#: ../Doc/library/codecs.rst:78
msgid ""
"``'xmlcharrefreplace'``: replace with the appropriate XML character "
"reference (for encoding only)"
msgstr ""

#: ../Doc/library/codecs.rst:80
msgid ""
"``'backslashreplace'``: replace with backslashed escape sequences (for "
"encoding only)"
msgstr ""

#: ../Doc/library/codecs.rst:83
msgid ""
"as well as any other error handling name defined via :func:`register_error`."
msgstr ""

#: ../Doc/library/codecs.rst:85
msgid ""
"In case a search function cannot find a given encoding, it should return "
"``None``."
msgstr ""

#: ../Doc/library/codecs.rst:91
msgid ""
"Looks up the codec info in the Python codec registry and returns a :class:"
"`CodecInfo` object as defined above."
msgstr ""

#: ../Doc/library/codecs.rst:94
msgid ""
"Encodings are first looked up in the registry's cache. If not found, the "
"list of registered search functions is scanned. If no :class:`CodecInfo` "
"object is found, a :exc:`LookupError` is raised. Otherwise, the :class:"
"`CodecInfo` object is stored in the cache and returned to the caller."
msgstr ""

#: ../Doc/library/codecs.rst:99
msgid ""
"To simplify access to the various codecs, the module provides these "
"additional functions which use :func:`lookup` for the codec lookup:"
msgstr ""

#: ../Doc/library/codecs.rst:105
msgid ""
"Look up the codec for the given encoding and return its encoder function."
msgstr ""

#: ../Doc/library/codecs.rst:107 ../Doc/library/codecs.rst:114
#: ../Doc/library/codecs.rst:144 ../Doc/library/codecs.rst:152
msgid "Raises a :exc:`LookupError` in case the encoding cannot be found."
msgstr ""

#: ../Doc/library/codecs.rst:112
msgid ""
"Look up the codec for the given encoding and return its decoder function."
msgstr ""

#: ../Doc/library/codecs.rst:119
msgid ""
"Look up the codec for the given encoding and return its incremental encoder "
"class or factory function."
msgstr ""

#: ../Doc/library/codecs.rst:122
msgid ""
"Raises a :exc:`LookupError` in case the encoding cannot be found or the "
"codec doesn't support an incremental encoder."
msgstr ""

#: ../Doc/library/codecs.rst:130
msgid ""
"Look up the codec for the given encoding and return its incremental decoder "
"class or factory function."
msgstr ""

#: ../Doc/library/codecs.rst:133
msgid ""
"Raises a :exc:`LookupError` in case the encoding cannot be found or the "
"codec doesn't support an incremental decoder."
msgstr ""

#: ../Doc/library/codecs.rst:141
msgid ""
"Look up the codec for the given encoding and return its StreamReader class "
"or factory function."
msgstr ""

#: ../Doc/library/codecs.rst:149
msgid ""
"Look up the codec for the given encoding and return its StreamWriter class "
"or factory function."
msgstr ""

#: ../Doc/library/codecs.rst:157
msgid ""
"Register the error handling function *error_handler* under the name *name*. "
"*error_handler* will be called during encoding and decoding in case of an "
"error, when *name* is specified as the errors parameter."
msgstr ""

#: ../Doc/library/codecs.rst:161
msgid ""
"For encoding *error_handler* will be called with a :exc:`UnicodeEncodeError` "
"instance, which contains information about the location of the error. The "
"error handler must either raise this or a different exception or return a "
"tuple with a replacement for the unencodable part of the input and a "
"position where encoding should continue. The encoder will encode the "
"replacement and continue encoding the original input at the specified "
"position. Negative position values will be treated as being relative to the "
"end of the input string. If the resulting position is out of bound an :exc:"
"`IndexError` will be raised."
msgstr ""

#: ../Doc/library/codecs.rst:170
msgid ""
"Decoding and translating works similar, except :exc:`UnicodeDecodeError` or :"
"exc:`UnicodeTranslateError` will be passed to the handler and that the "
"replacement from the error handler will be put into the output directly."
msgstr ""

#: ../Doc/library/codecs.rst:177
msgid "Return the error handler previously registered under the name *name*."
msgstr ""

#: ../Doc/library/codecs.rst:179
msgid "Raises a :exc:`LookupError` in case the handler cannot be found."
msgstr ""

#: ../Doc/library/codecs.rst:184
msgid ""
"Implements the ``strict`` error handling: each encoding or decoding error "
"raises a :exc:`UnicodeError`."
msgstr ""

#: ../Doc/library/codecs.rst:190
msgid ""
"Implements the ``replace`` error handling: malformed data is replaced with a "
"suitable replacement character such as ``'?'`` in bytestrings and "
"``'\\ufffd'`` in Unicode strings."
msgstr ""

#: ../Doc/library/codecs.rst:197
msgid ""
"Implements the ``ignore`` error handling: malformed data is ignored and "
"encoding or decoding is continued without further notice."
msgstr ""

#: ../Doc/library/codecs.rst:203
msgid ""
"Implements the ``xmlcharrefreplace`` error handling (for encoding only): the "
"unencodable character is replaced by an appropriate XML character reference."
msgstr ""

#: ../Doc/library/codecs.rst:209
msgid ""
"Implements the ``backslashreplace`` error handling (for encoding only): the "
"unencodable character is replaced by a backslashed escape sequence."
msgstr ""

#: ../Doc/library/codecs.rst:212
msgid ""
"To simplify working with encoded files or stream, the module also defines "
"these utility functions:"
msgstr ""

#: ../Doc/library/codecs.rst:218
msgid ""
"Open an encoded file using the given *mode* and return a wrapped version "
"providing transparent encoding/decoding.  The default file mode is ``'r'`` "
"meaning to open the file in read mode."
msgstr ""

# fef0941964384cb69d687c607eec1a94
#: ../Doc/library/codecs.rst:224
msgid ""
"The wrapped version will only accept the object format defined by the "
"codecs, i.e. Unicode objects for most built-in codecs.  Output is also codec-"
"dependent and will usually be Unicode as well."
msgstr ""

# 21c34fd81e0244a99f1d7b10c5489c17
#: ../Doc/library/codecs.rst:230
msgid ""
"Files are always opened in binary mode, even if no binary mode was "
"specified.  This is done to avoid data loss due to encodings using 8-bit "
"values.  This means that no automatic conversion of ``'\\n'`` is done on "
"reading and writing."
msgstr ""

#: ../Doc/library/codecs.rst:235
msgid "*encoding* specifies the encoding which is to be used for the file."
msgstr ""

#: ../Doc/library/codecs.rst:237
msgid ""
"*errors* may be given to define the error handling. It defaults to "
"``'strict'`` which causes a :exc:`ValueError` to be raised in case an "
"encoding error occurs."
msgstr ""

#: ../Doc/library/codecs.rst:240
msgid ""
"*buffering* has the same meaning as for the built-in :func:`open` function.  "
"It defaults to line buffered."
msgstr ""

#: ../Doc/library/codecs.rst:246
msgid ""
"Return a wrapped version of file which provides transparent encoding "
"translation."
msgstr ""

# 9b8623994238459eb63ef9003e15895a
#: ../Doc/library/codecs.rst:249
msgid ""
"Strings written to the wrapped file are interpreted according to the given "
"*input* encoding and then written to the original file as strings using the "
"*output* encoding. The intermediate encoding will usually be Unicode but "
"depends on the specified codecs."
msgstr ""

# e0d9c0b9c9894b1a9628a772297ce806
#: ../Doc/library/codecs.rst:254
msgid "If *output* is not given, it defaults to *input*."
msgstr ""

#: ../Doc/library/codecs.rst:256
msgid ""
"*errors* may be given to define the error handling. It defaults to "
"``'strict'``, which causes :exc:`ValueError` to be raised in case an "
"encoding error occurs."
msgstr ""

# f54f15846c674506aa452ca0b602f95e
#: ../Doc/library/codecs.rst:262
msgid ""
"Uses an incremental encoder to iteratively encode the input provided by "
"*iterable*. This function is a :term:`generator`.  *errors* (as well as any "
"other keyword argument) is passed through to the incremental encoder."
msgstr ""

# 270c0f06d53d4dd79383910fc9f9ff18
#: ../Doc/library/codecs.rst:271
msgid ""
"Uses an incremental decoder to iteratively decode the input provided by "
"*iterable*. This function is a :term:`generator`.  *errors* (as well as any "
"other keyword argument) is passed through to the incremental decoder."
msgstr ""

#: ../Doc/library/codecs.rst:277
msgid ""
"The module also provides the following constants which are useful for "
"reading and writing to platform dependent files:"
msgstr ""

#: ../Doc/library/codecs.rst:292
msgid ""
"These constants define various encodings of the Unicode byte order mark "
"(BOM) used in UTF-16 and UTF-32 data streams to indicate the byte order used "
"in the stream or file and in UTF-8 as a Unicode signature. :const:"
"`BOM_UTF16` is either :const:`BOM_UTF16_BE` or :const:`BOM_UTF16_LE` "
"depending on the platform's native byte order, :const:`BOM` is an alias for :"
"const:`BOM_UTF16`, :const:`BOM_LE` for :const:`BOM_UTF16_LE` and :const:"
"`BOM_BE` for :const:`BOM_UTF16_BE`. The others represent the BOM in UTF-8 "
"and UTF-32 encodings."
msgstr ""

#: ../Doc/library/codecs.rst:305
msgid "Codec Base Classes"
msgstr ""

#: ../Doc/library/codecs.rst:307
msgid ""
"The :mod:`codecs` module defines a set of base classes which define the "
"interface and can also be used to easily write your own codecs for use in "
"Python."
msgstr ""

#: ../Doc/library/codecs.rst:311
msgid ""
"Each codec has to define four interfaces to make it usable as codec in "
"Python: stateless encoder, stateless decoder, stream reader and stream "
"writer. The stream reader and writers typically reuse the stateless encoder/"
"decoder to implement the file protocols."
msgstr ""

#: ../Doc/library/codecs.rst:316
msgid ""
"The :class:`Codec` class defines the interface for stateless encoders/"
"decoders."
msgstr ""

#: ../Doc/library/codecs.rst:318
msgid ""
"To simplify and standardize error handling, the :meth:`encode` and :meth:"
"`decode` methods may implement different error handling schemes by providing "
"the *errors* string argument.  The following string values are defined and "
"implemented by all standard Python codecs:"
msgstr ""

#: ../Doc/library/codecs.rst:326
msgid "``'strict'``"
msgstr ""

#: ../Doc/library/codecs.rst:326
msgid "Raise :exc:`UnicodeError` (or a subclass); this is the default."
msgstr ""

#: ../Doc/library/codecs.rst:329
msgid "``'ignore'``"
msgstr ""

#: ../Doc/library/codecs.rst:329
msgid "Ignore the character and continue with the next."
msgstr ""

#: ../Doc/library/codecs.rst:332 ../Doc/library/difflib.rst:469
msgid "``'replace'``"
msgstr ""

#: ../Doc/library/codecs.rst:332
msgid ""
"Replace with a suitable replacement character; Python will use the official U"
"+FFFD REPLACEMENT CHARACTER for the built-in Unicode codecs on decoding and "
"'?' on encoding."
msgstr ""

#: ../Doc/library/codecs.rst:338
msgid "``'xmlcharrefreplace'``"
msgstr ""

#: ../Doc/library/codecs.rst:338
msgid ""
"Replace with the appropriate XML character reference (only for encoding)."
msgstr ""

#: ../Doc/library/codecs.rst:341
msgid "``'backslashreplace'``"
msgstr ""

#: ../Doc/library/codecs.rst:341
msgid "Replace with backslashed escape sequences (only for encoding)."
msgstr ""

#: ../Doc/library/codecs.rst:345
msgid "The set of allowed values can be extended via :meth:`register_error`."
msgstr ""

#: ../Doc/library/codecs.rst:351
msgid "Codec Objects"
msgstr ""

#: ../Doc/library/codecs.rst:353
msgid ""
"The :class:`Codec` class defines these methods which also define the "
"function interfaces of the stateless encoder and decoder:"
msgstr ""

# 63a212f3d859433486f45bca26cf2dec
#: ../Doc/library/codecs.rst:359
msgid ""
"Encodes the object *input* and returns a tuple (output object, length "
"consumed). While codecs are not restricted to use with Unicode, in a Unicode "
"context, encoding converts a Unicode object to a plain string using a "
"particular character set encoding (e.g., ``cp1252`` or ``iso-8859-1``)."
msgstr ""

#: ../Doc/library/codecs.rst:364 ../Doc/library/codecs.rst:385
msgid ""
"*errors* defines the error handling to apply. It defaults to ``'strict'`` "
"handling."
msgstr ""

#: ../Doc/library/codecs.rst:367 ../Doc/library/codecs.rst:388
msgid ""
"The method may not store state in the :class:`Codec` instance. Use :class:"
"`StreamCodec` for codecs which have to keep state in order to make encoding/"
"decoding efficient."
msgstr ""

#: ../Doc/library/codecs.rst:371
msgid ""
"The encoder must be able to handle zero length input and return an empty "
"object of the output object type in this situation."
msgstr ""

# ae873b8e81f940c18e13b82ebb663f30
#: ../Doc/library/codecs.rst:377
msgid ""
"Decodes the object *input* and returns a tuple (output object, length "
"consumed). In a Unicode context, decoding converts a plain string encoded "
"using a particular character set encoding to a Unicode object."
msgstr ""

# 385454b1f23f41149f9072972f80232e
#: ../Doc/library/codecs.rst:381
msgid ""
"*input* must be an object which provides the ``bf_getreadbuf`` buffer slot. "
"Python strings, buffer objects and memory mapped files are examples of "
"objects providing this slot."
msgstr ""

#: ../Doc/library/codecs.rst:392
msgid ""
"The decoder must be able to handle zero length input and return an empty "
"object of the output object type in this situation."
msgstr ""

#: ../Doc/library/codecs.rst:395
msgid ""
"The :class:`IncrementalEncoder` and :class:`IncrementalDecoder` classes "
"provide the basic interface for incremental encoding and decoding. Encoding/"
"decoding the input isn't done with one call to the stateless encoder/decoder "
"function, but with multiple calls to the :meth:`encode`/:meth:`decode` "
"method of the incremental encoder/decoder. The incremental encoder/decoder "
"keeps track of the encoding/decoding process during method calls."
msgstr ""

#: ../Doc/library/codecs.rst:402
msgid ""
"The joined output of calls to the :meth:`encode`/:meth:`decode` method is "
"the same as if all the single inputs were joined into one, and this input "
"was encoded/decoded with the stateless encoder/decoder."
msgstr ""

#: ../Doc/library/codecs.rst:410
msgid "IncrementalEncoder Objects"
msgstr ""

#: ../Doc/library/codecs.rst:414
msgid ""
"The :class:`IncrementalEncoder` class is used for encoding an input in "
"multiple steps. It defines the following methods which every incremental "
"encoder must define in order to be compatible with the Python codec registry."
msgstr ""

#: ../Doc/library/codecs.rst:421
msgid "Constructor for an :class:`IncrementalEncoder` instance."
msgstr ""

#: ../Doc/library/codecs.rst:423
msgid ""
"All incremental encoders must provide this constructor interface. They are "
"free to add additional keyword arguments, but only the ones defined here are "
"used by the Python codec registry."
msgstr ""

#: ../Doc/library/codecs.rst:427
msgid ""
"The :class:`IncrementalEncoder` may implement different error handling "
"schemes by providing the *errors* keyword argument. These parameters are "
"predefined:"
msgstr ""

#: ../Doc/library/codecs.rst:430 ../Doc/library/codecs.rst:482
#: ../Doc/library/codecs.rst:541 ../Doc/library/codecs.rst:606
msgid ""
"``'strict'`` Raise :exc:`ValueError` (or a subclass); this is the default."
msgstr ""

#: ../Doc/library/codecs.rst:432 ../Doc/library/codecs.rst:484
#: ../Doc/library/codecs.rst:543 ../Doc/library/codecs.rst:608
msgid "``'ignore'`` Ignore the character and continue with the next."
msgstr ""

#: ../Doc/library/codecs.rst:434 ../Doc/library/codecs.rst:545
msgid "``'replace'`` Replace with a suitable replacement character"
msgstr ""

#: ../Doc/library/codecs.rst:436 ../Doc/library/codecs.rst:547
msgid ""
"``'xmlcharrefreplace'`` Replace with the appropriate XML character reference"
msgstr ""

#: ../Doc/library/codecs.rst:438 ../Doc/library/codecs.rst:549
msgid "``'backslashreplace'`` Replace with backslashed escape sequences."
msgstr ""

#: ../Doc/library/codecs.rst:440
msgid ""
"The *errors* argument will be assigned to an attribute of the same name. "
"Assigning to this attribute makes it possible to switch between different "
"error handling strategies during the lifetime of the :class:"
"`IncrementalEncoder` object."
msgstr ""

#: ../Doc/library/codecs.rst:445 ../Doc/library/codecs.rst:493
#: ../Doc/library/codecs.rst:555 ../Doc/library/codecs.rst:616
msgid ""
"The set of allowed values for the *errors* argument can be extended with :"
"func:`register_error`."
msgstr ""

#: ../Doc/library/codecs.rst:451
msgid ""
"Encodes *object* (taking the current state of the encoder into account) and "
"returns the resulting encoded object. If this is the last call to :meth:"
"`encode` *final* must be true (the default is false)."
msgstr ""

#: ../Doc/library/codecs.rst:458
msgid "Reset the encoder to the initial state."
msgstr ""

#: ../Doc/library/codecs.rst:464
msgid "IncrementalDecoder Objects"
msgstr ""

#: ../Doc/library/codecs.rst:466
msgid ""
"The :class:`IncrementalDecoder` class is used for decoding an input in "
"multiple steps. It defines the following methods which every incremental "
"decoder must define in order to be compatible with the Python codec registry."
msgstr ""

#: ../Doc/library/codecs.rst:473
msgid "Constructor for an :class:`IncrementalDecoder` instance."
msgstr ""

#: ../Doc/library/codecs.rst:475
msgid ""
"All incremental decoders must provide this constructor interface. They are "
"free to add additional keyword arguments, but only the ones defined here are "
"used by the Python codec registry."
msgstr ""

#: ../Doc/library/codecs.rst:479
msgid ""
"The :class:`IncrementalDecoder` may implement different error handling "
"schemes by providing the *errors* keyword argument. These parameters are "
"predefined:"
msgstr ""

#: ../Doc/library/codecs.rst:486 ../Doc/library/codecs.rst:610
msgid "``'replace'`` Replace with a suitable replacement character."
msgstr ""

#: ../Doc/library/codecs.rst:488
msgid ""
"The *errors* argument will be assigned to an attribute of the same name. "
"Assigning to this attribute makes it possible to switch between different "
"error handling strategies during the lifetime of the :class:"
"`IncrementalDecoder` object."
msgstr ""

#: ../Doc/library/codecs.rst:499
msgid ""
"Decodes *object* (taking the current state of the decoder into account) and "
"returns the resulting decoded object. If this is the last call to :meth:"
"`decode` *final* must be true (the default is false). If *final* is true the "
"decoder must decode the input completely and must flush all buffers. If this "
"isn't possible (e.g. because of incomplete byte sequences at the end of the "
"input) it must initiate error handling just like in the stateless case "
"(which might raise an exception)."
msgstr ""

#: ../Doc/library/codecs.rst:510
msgid "Reset the decoder to the initial state."
msgstr ""

#: ../Doc/library/codecs.rst:513
msgid ""
"The :class:`StreamWriter` and :class:`StreamReader` classes provide generic "
"working interfaces which can be used to implement new encoding submodules "
"very easily. See :mod:`encodings.utf_8` for an example of how this is done."
msgstr ""

#: ../Doc/library/codecs.rst:521
msgid "StreamWriter Objects"
msgstr ""

#: ../Doc/library/codecs.rst:523
msgid ""
"The :class:`StreamWriter` class is a subclass of :class:`Codec` and defines "
"the following methods which every stream writer must define in order to be "
"compatible with the Python codec registry."
msgstr ""

#: ../Doc/library/codecs.rst:530
msgid "Constructor for a :class:`StreamWriter` instance."
msgstr ""

#: ../Doc/library/codecs.rst:532
msgid ""
"All stream writers must provide this constructor interface. They are free to "
"add additional keyword arguments, but only the ones defined here are used by "
"the Python codec registry."
msgstr ""

#: ../Doc/library/codecs.rst:536
msgid "*stream* must be a file-like object open for writing binary data."
msgstr ""

#: ../Doc/library/codecs.rst:538
msgid ""
"The :class:`StreamWriter` may implement different error handling schemes by "
"providing the *errors* keyword argument. These parameters are predefined:"
msgstr ""

#: ../Doc/library/codecs.rst:551
msgid ""
"The *errors* argument will be assigned to an attribute of the same name. "
"Assigning to this attribute makes it possible to switch between different "
"error handling strategies during the lifetime of the :class:`StreamWriter` "
"object."
msgstr ""

#: ../Doc/library/codecs.rst:561
msgid "Writes the object's contents encoded to the stream."
msgstr ""

#: ../Doc/library/codecs.rst:566
msgid ""
"Writes the concatenated list of strings to the stream (possibly by reusing "
"the :meth:`write` method)."
msgstr ""

#: ../Doc/library/codecs.rst:572
msgid "Flushes and resets the codec buffers used for keeping state."
msgstr ""

#: ../Doc/library/codecs.rst:574
msgid ""
"Calling this method should ensure that the data on the output is put into a "
"clean state that allows appending of new fresh data without having to rescan "
"the whole stream to recover state."
msgstr ""

#: ../Doc/library/codecs.rst:579
msgid ""
"In addition to the above methods, the :class:`StreamWriter` must also "
"inherit all other methods and attributes from the underlying stream."
msgstr ""

#: ../Doc/library/codecs.rst:586
msgid "StreamReader Objects"
msgstr ""

#: ../Doc/library/codecs.rst:588
msgid ""
"The :class:`StreamReader` class is a subclass of :class:`Codec` and defines "
"the following methods which every stream reader must define in order to be "
"compatible with the Python codec registry."
msgstr ""

#: ../Doc/library/codecs.rst:595
msgid "Constructor for a :class:`StreamReader` instance."
msgstr ""

#: ../Doc/library/codecs.rst:597
msgid ""
"All stream readers must provide this constructor interface. They are free to "
"add additional keyword arguments, but only the ones defined here are used by "
"the Python codec registry."
msgstr ""

#: ../Doc/library/codecs.rst:601
msgid "*stream* must be a file-like object open for reading (binary) data."
msgstr ""

#: ../Doc/library/codecs.rst:603
msgid ""
"The :class:`StreamReader` may implement different error handling schemes by "
"providing the *errors* keyword argument. These parameters are defined:"
msgstr ""

#: ../Doc/library/codecs.rst:612
msgid ""
"The *errors* argument will be assigned to an attribute of the same name. "
"Assigning to this attribute makes it possible to switch between different "
"error handling strategies during the lifetime of the :class:`StreamReader` "
"object."
msgstr ""

#: ../Doc/library/codecs.rst:622
msgid "Decodes data from the stream and returns the resulting object."
msgstr ""

#: ../Doc/library/codecs.rst:624
msgid ""
"*chars* indicates the number of characters to read from the stream. :func:"
"`read` will never return more than *chars* characters, but it might return "
"less, if there are not enough characters available."
msgstr ""

#: ../Doc/library/codecs.rst:628
msgid ""
"*size* indicates the approximate maximum number of bytes to read from the "
"stream for decoding purposes. The decoder can modify this setting as "
"appropriate. The default value -1 indicates to read and decode as much as "
"possible.  *size* is intended to prevent having to decode huge files in one "
"step."
msgstr ""

#: ../Doc/library/codecs.rst:634
msgid ""
"*firstline* indicates that it would be sufficient to only return the first "
"line, if there are decoding errors on later lines."
msgstr ""

#: ../Doc/library/codecs.rst:637
msgid ""
"The method should use a greedy read strategy meaning that it should read as "
"much data as is allowed within the definition of the encoding and the given "
"size, e.g.  if optional encoding endings or state markers are available on "
"the stream, these should be read too."
msgstr ""

#: ../Doc/library/codecs.rst:651
msgid "Read one line from the input stream and return the decoded data."
msgstr ""

#: ../Doc/library/codecs.rst:653
msgid ""
"*size*, if given, is passed as size argument to the stream's :meth:"
"`readline` method."
msgstr ""

#: ../Doc/library/codecs.rst:656
msgid ""
"If *keepends* is false line-endings will be stripped from the lines returned."
msgstr ""

#: ../Doc/library/codecs.rst:665
msgid ""
"Read all lines available on the input stream and return them as a list of "
"lines."
msgstr ""

#: ../Doc/library/codecs.rst:668
msgid ""
"Line-endings are implemented using the codec's decoder method and are "
"included in the list entries if *keepends* is true."
msgstr ""

#: ../Doc/library/codecs.rst:671
msgid ""
"*sizehint*, if given, is passed as the *size* argument to the stream's :meth:"
"`read` method."
msgstr ""

#: ../Doc/library/codecs.rst:677
msgid "Resets the codec buffers used for keeping state."
msgstr ""

#: ../Doc/library/codecs.rst:679
msgid ""
"Note that no stream repositioning should take place.  This method is "
"primarily intended to be able to recover from decoding errors."
msgstr ""

#: ../Doc/library/codecs.rst:683
msgid ""
"In addition to the above methods, the :class:`StreamReader` must also "
"inherit all other methods and attributes from the underlying stream."
msgstr ""

#: ../Doc/library/codecs.rst:686
msgid ""
"The next two base classes are included for convenience. They are not needed "
"by the codec registry, but may provide useful in practice."
msgstr ""

#: ../Doc/library/codecs.rst:693
msgid "StreamReaderWriter Objects"
msgstr ""

#: ../Doc/library/codecs.rst:695
msgid ""
"The :class:`StreamReaderWriter` allows wrapping streams which work in both "
"read and write modes."
msgstr ""

#: ../Doc/library/codecs.rst:698 ../Doc/library/codecs.rst:722
msgid ""
"The design is such that one can use the factory functions returned by the :"
"func:`lookup` function to construct the instance."
msgstr ""

#: ../Doc/library/codecs.rst:704
msgid ""
"Creates a :class:`StreamReaderWriter` instance. *stream* must be a file-like "
"object. *Reader* and *Writer* must be factory functions or classes providing "
"the :class:`StreamReader` and :class:`StreamWriter` interface resp. Error "
"handling is done in the same way as defined for the stream readers and "
"writers."
msgstr ""

#: ../Doc/library/codecs.rst:709
msgid ""
":class:`StreamReaderWriter` instances define the combined interfaces of :"
"class:`StreamReader` and :class:`StreamWriter` classes. They inherit all "
"other methods and attributes from the underlying stream."
msgstr ""

#: ../Doc/library/codecs.rst:717
msgid "StreamRecoder Objects"
msgstr ""

#: ../Doc/library/codecs.rst:719
msgid ""
"The :class:`StreamRecoder` provide a frontend - backend view of encoding "
"data which is sometimes useful when dealing with different encoding "
"environments."
msgstr ""

#: ../Doc/library/codecs.rst:728
msgid ""
"Creates a :class:`StreamRecoder` instance which implements a two-way "
"conversion: *encode* and *decode* work on the frontend (the input to :meth:"
"`read` and output of :meth:`write`) while *Reader* and *Writer* work on the "
"backend (reading and writing to the stream)."
msgstr ""

#: ../Doc/library/codecs.rst:733
msgid ""
"You can use these objects to do transparent direct recodings from e.g. "
"Latin-1 to UTF-8 and back."
msgstr ""

#: ../Doc/library/codecs.rst:736
msgid "*stream* must be a file-like object."
msgstr ""

#: ../Doc/library/codecs.rst:738
msgid ""
"*encode*, *decode* must adhere to the :class:`Codec` interface. *Reader*, "
"*Writer* must be factory functions or classes providing objects of the :"
"class:`StreamReader` and :class:`StreamWriter` interface respectively."
msgstr ""

# 8ec9fc258c044f0d82ddb5b80f91bd82
#: ../Doc/library/codecs.rst:742
msgid ""
"*encode* and *decode* are needed for the frontend translation, *Reader* and "
"*Writer* for the backend translation.  The intermediate format used is "
"determined by the two sets of codecs, e.g. the Unicode codecs will use "
"Unicode as the intermediate encoding."
msgstr ""

#: ../Doc/library/codecs.rst:747
msgid ""
"Error handling is done in the same way as defined for the stream readers and "
"writers."
msgstr ""

#: ../Doc/library/codecs.rst:751
msgid ""
":class:`StreamRecoder` instances define the combined interfaces of :class:"
"`StreamReader` and :class:`StreamWriter` classes. They inherit all other "
"methods and attributes from the underlying stream."
msgstr ""

#: ../Doc/library/codecs.rst:759
msgid "Encodings and Unicode"
msgstr ""

# 16e82ca5e6c64c88958271bbcf12f43e
#: ../Doc/library/codecs.rst:761
msgid ""
"Unicode strings are stored internally as sequences of codepoints (to be "
"precise as :c:type:`Py_UNICODE` arrays). Depending on the way Python is "
"compiled (either via ``--enable-unicode=ucs2`` or ``--enable-unicode=ucs4``, "
"with the former being the default) :c:type:`Py_UNICODE` is either a 16-bit "
"or 32-bit data type. Once a Unicode object is used outside of CPU and "
"memory, CPU endianness and how these arrays are stored as bytes become an "
"issue.  Transforming a unicode object into a sequence of bytes is called "
"encoding and recreating the unicode object from the sequence of bytes is "
"known as decoding.  There are many different methods for how this "
"transformation can be done (these methods are also called encodings). The "
"simplest method is to map the codepoints 0-255 to the bytes ``0x0``-"
"``0xff``. This means that a unicode object that contains codepoints above ``U"
"+00FF`` can't be encoded with this method (which is called ``'latin-1'`` or "
"``'iso-8859-1'``). :func:`unicode.encode` will raise a :exc:"
"`UnicodeEncodeError` that looks like this: ``UnicodeEncodeError: 'latin-1' "
"codec can't encode character u'\\u1234' in position 3: ordinal not in range"
"(256)``."
msgstr ""

# 4a41b8dc95244af98ff94e9410039346
#: ../Doc/library/codecs.rst:778
msgid ""
"There's another group of encodings (the so called charmap encodings) that "
"choose a different subset of all unicode code points and how these "
"codepoints are mapped to the bytes ``0x0``-``0xff``. To see how this is done "
"simply open e.g. :file:`encodings/cp1252.py` (which is an encoding that is "
"used primarily on Windows). There's a string constant with 256 characters "
"that shows you which character is mapped to which byte value."
msgstr ""

# 1efa5cd23e2a4f4ba466ac1d7a7607ba
#: ../Doc/library/codecs.rst:785
msgid ""
"All of these encodings can only encode 256 of the 1114112 codepoints defined "
"in unicode. A simple and straightforward way that can store each Unicode "
"code point, is to store each codepoint as four consecutive bytes. There are "
"two possibilities: store the bytes in big endian or in little endian order. "
"These two encodings are called ``UTF-32-BE`` and ``UTF-32-LE`` respectively. "
"Their disadvantage is that if e.g. you use ``UTF-32-BE`` on a little endian "
"machine you will always have to swap bytes on encoding and decoding. "
"``UTF-32`` avoids this problem: bytes will always be in natural endianness. "
"When these bytes are read by a CPU with a different endianness, then bytes "
"have to be swapped though. To be able to detect the endianness of a "
"``UTF-16`` or ``UTF-32`` byte sequence, there's the so called BOM (\"Byte "
"Order Mark\"). This is the Unicode character ``U+FEFF``. This character can "
"be prepended to every ``UTF-16`` or ``UTF-32`` byte sequence. The byte "
"swapped version of this character (``0xFFFE``) is an illegal character that "
"may not appear in a Unicode text. So when the first character in an "
"``UTF-16`` or ``UTF-32`` byte sequence appears to be a ``U+FFFE`` the bytes "
"have to be swapped on decoding. Unfortunately the character ``U+FEFF`` had a "
"second purpose as a ``ZERO WIDTH NO-BREAK SPACE``: a character that has no "
"width and doesn't allow a word to be split. It can e.g. be used to give "
"hints to a ligature algorithm. With Unicode 4.0 using ``U+FEFF`` as a ``ZERO "
"WIDTH NO-BREAK SPACE`` has been deprecated (with ``U+2060`` (``WORD "
"JOINER``) assuming this role). Nevertheless Unicode software still must be "
"able to handle ``U+FEFF`` in both roles: as a BOM it's a device to determine "
"the storage layout of the encoded bytes, and vanishes once the byte sequence "
"has been decoded into a Unicode string; as a ``ZERO WIDTH NO-BREAK SPACE`` "
"it's a normal character that will be decoded like any other."
msgstr ""

# ffc27a9566f141ecb10291d4add2606f
#: ../Doc/library/codecs.rst:811
msgid ""
"There's another encoding that is able to encoding the full range of Unicode "
"characters: UTF-8. UTF-8 is an 8-bit encoding, which means there are no "
"issues with byte order in UTF-8. Each byte in a UTF-8 byte sequence consists "
"of two parts: marker bits (the most significant bits) and payload bits. The "
"marker bits are a sequence of zero to four ``1`` bits followed by a ``0`` "
"bit. Unicode characters are encoded like this (with x being payload bits, "
"which when concatenated give the Unicode character):"
msgstr ""

#: ../Doc/library/codecs.rst:820
msgid "Range"
msgstr ""

#: ../Doc/library/codecs.rst:820
msgid "Encoding"
msgstr ""

#: ../Doc/library/codecs.rst:822
msgid "``U-00000000`` ... ``U-0000007F``"
msgstr ""

#: ../Doc/library/codecs.rst:822
msgid "0xxxxxxx"
msgstr ""

#: ../Doc/library/codecs.rst:824
msgid "``U-00000080`` ... ``U-000007FF``"
msgstr ""

#: ../Doc/library/codecs.rst:824
msgid "110xxxxx 10xxxxxx"
msgstr ""

#: ../Doc/library/codecs.rst:826
msgid "``U-00000800`` ... ``U-0000FFFF``"
msgstr ""

#: ../Doc/library/codecs.rst:826
msgid "1110xxxx 10xxxxxx 10xxxxxx"
msgstr ""

# c26e43fb3b05448ca92468a8854020e3
#: ../Doc/library/codecs.rst:828
msgid "``U-00010000`` ... ``U-0010FFFF``"
msgstr ""

#: ../Doc/library/codecs.rst:828
msgid "11110xxx 10xxxxxx 10xxxxxx 10xxxxxx"
msgstr ""

#: ../Doc/library/codecs.rst:831
msgid ""
"The least significant bit of the Unicode character is the rightmost x bit."
msgstr ""

# 0ff9b7dc1fc442a19a104d434256d4bc
#: ../Doc/library/codecs.rst:833
msgid ""
"As UTF-8 is an 8-bit encoding no BOM is required and any ``U+FEFF`` "
"character in the decoded Unicode string (even if it's the first character) "
"is treated as a ``ZERO WIDTH NO-BREAK SPACE``."
msgstr ""

# 3597c098f49c45bfb370c5064fd4baf4
#: ../Doc/library/codecs.rst:837
msgid ""
"Without external information it's impossible to reliably determine which "
"encoding was used for encoding a Unicode string. Each charmap encoding can "
"decode any random byte sequence. However that's not possible with UTF-8, as "
"UTF-8 byte sequences have a structure that doesn't allow arbitrary byte "
"sequences. To increase the reliability with which a UTF-8 encoding can be "
"detected, Microsoft invented a variant of UTF-8 (that Python 2.5 calls ``"
"\"utf-8-sig\"``) for its Notepad program: Before any of the Unicode "
"characters is written to the file, a UTF-8 encoded BOM (which looks like "
"this as a byte sequence: ``0xef``, ``0xbb``, ``0xbf``) is written. As it's "
"rather improbable that any charmap encoded file starts with these byte "
"values (which would e.g. map to"
msgstr ""

# 282643f1f8184837be8789f111fc0e43
#: ../Doc/library/codecs.rst:853
msgid ""
"in iso-8859-1), this increases the probability that a ``utf-8-sig`` encoding "
"can be correctly guessed from the byte sequence. So here the BOM is not used "
"to be able to determine the byte order used for generating the byte "
"sequence, but as a signature that helps in guessing the encoding. On "
"encoding the utf-8-sig codec will write ``0xef``, ``0xbb``, ``0xbf`` as the "
"first three bytes to the file. On decoding ``utf-8-sig`` will skip those "
"three bytes if they appear as the first three bytes in the file.  In UTF-8, "
"the use of the BOM is discouraged and should generally be avoided."
msgstr ""

#: ../Doc/library/codecs.rst:866
msgid "Standard Encodings"
msgstr ""

#: ../Doc/library/codecs.rst:868
msgid ""
"Python comes with a number of codecs built-in, either implemented as C "
"functions or with dictionaries as mapping tables. The following table lists "
"the codecs by name, together with a few common aliases, and the languages "
"for which the encoding is likely used. Neither the list of aliases nor the "
"list of languages is meant to be exhaustive. Notice that spelling "
"alternatives that only differ in case or use a hyphen instead of an "
"underscore are also valid aliases; therefore, e.g. ``'utf-8'`` is a valid "
"alias for the ``'utf_8'`` codec."
msgstr ""

#: ../Doc/library/codecs.rst:876
msgid ""
"Many of the character sets support the same languages. They vary in "
"individual characters (e.g. whether the EURO SIGN is supported or not), and "
"in the assignment of characters to code positions. For the European "
"languages in particular, the following variants typically exist:"
msgstr ""

#: ../Doc/library/codecs.rst:881
msgid "an ISO 8859 codeset"
msgstr ""

#: ../Doc/library/codecs.rst:883
msgid ""
"a Microsoft Windows code page, which is typically derived from a 8859 "
"codeset, but replaces control characters with additional graphic characters"
msgstr ""

#: ../Doc/library/codecs.rst:886
msgid "an IBM EBCDIC code page"
msgstr ""

#: ../Doc/library/codecs.rst:888
msgid "an IBM PC code page, which is ASCII compatible"
msgstr ""

#: ../Doc/library/codecs.rst:891 ../Doc/library/codecs.rst:1107
msgid "Codec"
msgstr ""

#: ../Doc/library/codecs.rst:891 ../Doc/library/codecs.rst:1107
msgid "Aliases"
msgstr ""

#: ../Doc/library/codecs.rst:891
msgid "Languages"
msgstr ""

#: ../Doc/library/codecs.rst:893
msgid "ascii"
msgstr ""

#: ../Doc/library/codecs.rst:893
msgid "646, us-ascii"
msgstr ""

#: ../Doc/library/codecs.rst:893 ../Doc/library/codecs.rst:899
#: ../Doc/library/codecs.rst:903
msgid "English"
msgstr ""

#: ../Doc/library/codecs.rst:895
msgid "big5"
msgstr ""

#: ../Doc/library/codecs.rst:895
msgid "big5-tw, csbig5"
msgstr ""

#: ../Doc/library/codecs.rst:895 ../Doc/library/codecs.rst:897
#: ../Doc/library/codecs.rst:951
msgid "Traditional Chinese"
msgstr ""

#: ../Doc/library/codecs.rst:897
msgid "big5hkscs"
msgstr ""

#: ../Doc/library/codecs.rst:897
msgid "big5-hkscs, hkscs"
msgstr ""

#: ../Doc/library/codecs.rst:899
msgid "cp037"
msgstr ""

#: ../Doc/library/codecs.rst:899
msgid "IBM037, IBM039"
msgstr ""

#: ../Doc/library/codecs.rst:901
msgid "cp424"
msgstr ""

#: ../Doc/library/codecs.rst:901
msgid "EBCDIC-CP-HE, IBM424"
msgstr ""

#: ../Doc/library/codecs.rst:901 ../Doc/library/codecs.rst:921
#: ../Doc/library/codecs.rst:931 ../Doc/library/codecs.rst:970
#: ../Doc/library/codecs.rst:1033
msgid "Hebrew"
msgstr ""

#: ../Doc/library/codecs.rst:903
msgid "cp437"
msgstr ""

#: ../Doc/library/codecs.rst:903
msgid "437, IBM437"
msgstr ""

#: ../Doc/library/codecs.rst:905
msgid "cp500"
msgstr ""

#: ../Doc/library/codecs.rst:905
msgid "EBCDIC-CP-BE, EBCDIC-CP-CH, IBM500"
msgstr ""

#: ../Doc/library/codecs.rst:905 ../Doc/library/codecs.rst:914
#: ../Doc/library/codecs.rst:925 ../Doc/library/codecs.rst:957
#: ../Doc/library/codecs.rst:964 ../Doc/library/codecs.rst:1043
#: ../Doc/library/codecs.rst:1062
msgid "Western Europe"
msgstr ""

#: ../Doc/library/codecs.rst:908
msgid "cp720"
msgstr ""

#: ../Doc/library/codecs.rst:908 ../Doc/library/codecs.rst:935
#: ../Doc/library/codecs.rst:972 ../Doc/library/codecs.rst:1029
msgid "Arabic"
msgstr ""

#: ../Doc/library/codecs.rst:910
msgid "cp737"
msgstr ""

#: ../Doc/library/codecs.rst:910 ../Doc/library/codecs.rst:941
#: ../Doc/library/codecs.rst:945 ../Doc/library/codecs.rst:966
#: ../Doc/library/codecs.rst:1031 ../Doc/library/codecs.rst:1056
msgid "Greek"
msgstr ""

#: ../Doc/library/codecs.rst:912
msgid "cp775"
msgstr ""

#: ../Doc/library/codecs.rst:912
msgid "IBM775"
msgstr ""

#: ../Doc/library/codecs.rst:912 ../Doc/library/codecs.rst:974
#: ../Doc/library/codecs.rst:1024 ../Doc/library/codecs.rst:1039
msgid "Baltic languages"
msgstr ""

#: ../Doc/library/codecs.rst:914
msgid "cp850"
msgstr ""

#: ../Doc/library/codecs.rst:914
msgid "850, IBM850"
msgstr ""

#: ../Doc/library/codecs.rst:916
msgid "cp852"
msgstr ""

#: ../Doc/library/codecs.rst:916
msgid "852, IBM852"
msgstr ""

#: ../Doc/library/codecs.rst:916 ../Doc/library/codecs.rst:959
#: ../Doc/library/codecs.rst:1020 ../Doc/library/codecs.rst:1060
msgid "Central and Eastern Europe"
msgstr ""

#: ../Doc/library/codecs.rst:918
msgid "cp855"
msgstr ""

#: ../Doc/library/codecs.rst:918
msgid "855, IBM855"
msgstr ""

#: ../Doc/library/codecs.rst:918 ../Doc/library/codecs.rst:961
#: ../Doc/library/codecs.rst:1026 ../Doc/library/codecs.rst:1053
msgid "Bulgarian, Byelorussian, Macedonian, Russian, Serbian"
msgstr ""

#: ../Doc/library/codecs.rst:921
msgid "cp856"
msgstr ""

#: ../Doc/library/codecs.rst:923
msgid "cp857"
msgstr ""

#: ../Doc/library/codecs.rst:923
msgid "857, IBM857"
msgstr ""

#: ../Doc/library/codecs.rst:923 ../Doc/library/codecs.rst:955
#: ../Doc/library/codecs.rst:968 ../Doc/library/codecs.rst:1035
#: ../Doc/library/codecs.rst:1064
msgid "Turkish"
msgstr ""

#: ../Doc/library/codecs.rst:925
msgid "cp858"
msgstr ""

#: ../Doc/library/codecs.rst:925
msgid "858, IBM858"
msgstr ""

#: ../Doc/library/codecs.rst:927
msgid "cp860"
msgstr ""

#: ../Doc/library/codecs.rst:927
msgid "860, IBM860"
msgstr ""

#: ../Doc/library/codecs.rst:927
msgid "Portuguese"
msgstr ""

#: ../Doc/library/codecs.rst:929
msgid "cp861"
msgstr ""

#: ../Doc/library/codecs.rst:929
msgid "861, CP-IS, IBM861"
msgstr ""

#: ../Doc/library/codecs.rst:929 ../Doc/library/codecs.rst:1058
msgid "Icelandic"
msgstr ""

#: ../Doc/library/codecs.rst:931
msgid "cp862"
msgstr ""

#: ../Doc/library/codecs.rst:931
msgid "862, IBM862"
msgstr ""

#: ../Doc/library/codecs.rst:933
msgid "cp863"
msgstr ""

#: ../Doc/library/codecs.rst:933
msgid "863, IBM863"
msgstr ""

#: ../Doc/library/codecs.rst:933
msgid "Canadian"
msgstr ""

#: ../Doc/library/codecs.rst:935
msgid "cp864"
msgstr ""

#: ../Doc/library/codecs.rst:935
msgid "IBM864"
msgstr ""

#: ../Doc/library/codecs.rst:937
msgid "cp865"
msgstr ""

#: ../Doc/library/codecs.rst:937
msgid "865, IBM865"
msgstr ""

#: ../Doc/library/codecs.rst:937
msgid "Danish, Norwegian"
msgstr ""

#: ../Doc/library/codecs.rst:939
msgid "cp866"
msgstr ""

#: ../Doc/library/codecs.rst:939
msgid "866, IBM866"
msgstr ""

#: ../Doc/library/codecs.rst:939 ../Doc/library/codecs.rst:1049
msgid "Russian"
msgstr ""

#: ../Doc/library/codecs.rst:941
msgid "cp869"
msgstr ""

#: ../Doc/library/codecs.rst:941
msgid "869, CP-GR, IBM869"
msgstr ""

#: ../Doc/library/codecs.rst:943
msgid "cp874"
msgstr ""

#: ../Doc/library/codecs.rst:943
msgid "Thai"
msgstr ""

#: ../Doc/library/codecs.rst:945
msgid "cp875"
msgstr ""

#: ../Doc/library/codecs.rst:947
msgid "cp932"
msgstr ""

#: ../Doc/library/codecs.rst:947
msgid "932, ms932, mskanji, ms-kanji"
msgstr ""

#: ../Doc/library/codecs.rst:947 ../Doc/library/codecs.rst:978
#: ../Doc/library/codecs.rst:980 ../Doc/library/codecs.rst:982
#: ../Doc/library/codecs.rst:999 ../Doc/library/codecs.rst:1002
#: ../Doc/library/codecs.rst:1007 ../Doc/library/codecs.rst:1010
#: ../Doc/library/codecs.rst:1012 ../Doc/library/codecs.rst:1069
#: ../Doc/library/codecs.rst:1072 ../Doc/library/codecs.rst:1075
msgid "Japanese"
msgstr ""

#: ../Doc/library/codecs.rst:949
msgid "cp949"
msgstr ""

#: ../Doc/library/codecs.rst:949
msgid "949, ms949, uhc"
msgstr ""

#: ../Doc/library/codecs.rst:949 ../Doc/library/codecs.rst:984
#: ../Doc/library/codecs.rst:1014 ../Doc/library/codecs.rst:1047
msgid "Korean"
msgstr ""

#: ../Doc/library/codecs.rst:951
msgid "cp950"
msgstr ""

#: ../Doc/library/codecs.rst:951
msgid "950, ms950"
msgstr ""

#: ../Doc/library/codecs.rst:953
msgid "cp1006"
msgstr ""

#: ../Doc/library/codecs.rst:953
msgid "Urdu"
msgstr ""

#: ../Doc/library/codecs.rst:955
msgid "cp1026"
msgstr ""

#: ../Doc/library/codecs.rst:955
msgid "ibm1026"
msgstr ""

#: ../Doc/library/codecs.rst:957
msgid "cp1140"
msgstr ""

#: ../Doc/library/codecs.rst:957
msgid "ibm1140"
msgstr ""

#: ../Doc/library/codecs.rst:959
msgid "cp1250"
msgstr ""

#: ../Doc/library/codecs.rst:959
msgid "windows-1250"
msgstr ""

#: ../Doc/library/codecs.rst:961
msgid "cp1251"
msgstr ""

#: ../Doc/library/codecs.rst:961
msgid "windows-1251"
msgstr ""

#: ../Doc/library/codecs.rst:964
msgid "cp1252"
msgstr ""

#: ../Doc/library/codecs.rst:964
msgid "windows-1252"
msgstr ""

#: ../Doc/library/codecs.rst:966
msgid "cp1253"
msgstr ""

#: ../Doc/library/codecs.rst:966
msgid "windows-1253"
msgstr ""

#: ../Doc/library/codecs.rst:968
msgid "cp1254"
msgstr ""

#: ../Doc/library/codecs.rst:968
msgid "windows-1254"
msgstr ""

#: ../Doc/library/codecs.rst:970
msgid "cp1255"
msgstr ""

#: ../Doc/library/codecs.rst:970
msgid "windows-1255"
msgstr ""

#: ../Doc/library/codecs.rst:972
msgid "cp1256"
msgstr ""

#: ../Doc/library/codecs.rst:972
msgid "windows-1256"
msgstr ""

#: ../Doc/library/codecs.rst:974
msgid "cp1257"
msgstr ""

#: ../Doc/library/codecs.rst:974
msgid "windows-1257"
msgstr ""

#: ../Doc/library/codecs.rst:976
msgid "cp1258"
msgstr ""

#: ../Doc/library/codecs.rst:976
msgid "windows-1258"
msgstr ""

#: ../Doc/library/codecs.rst:976
msgid "Vietnamese"
msgstr ""

#: ../Doc/library/codecs.rst:978
msgid "euc_jp"
msgstr ""

#: ../Doc/library/codecs.rst:978
msgid "eucjp, ujis, u-jis"
msgstr ""

#: ../Doc/library/codecs.rst:980
msgid "euc_jis_2004"
msgstr ""

#: ../Doc/library/codecs.rst:980
msgid "jisx0213, eucjis2004"
msgstr ""

#: ../Doc/library/codecs.rst:982
msgid "euc_jisx0213"
msgstr ""

#: ../Doc/library/codecs.rst:982
msgid "eucjisx0213"
msgstr ""

#: ../Doc/library/codecs.rst:984
msgid "euc_kr"
msgstr ""

#: ../Doc/library/codecs.rst:984
msgid "euckr, korean, ksc5601, ks_c-5601, ks_c-5601-1987, ksx1001, ks_x-1001"
msgstr ""

#: ../Doc/library/codecs.rst:988
msgid "gb2312"
msgstr ""

#: ../Doc/library/codecs.rst:988
msgid ""
"chinese, csiso58gb231280, euc- cn, euccn, eucgb2312-cn, gb2312-1980, "
"gb2312-80, iso- ir-58"
msgstr ""

#: ../Doc/library/codecs.rst:988 ../Doc/library/codecs.rst:997
msgid "Simplified Chinese"
msgstr ""

#: ../Doc/library/codecs.rst:993
msgid "gbk"
msgstr ""

#: ../Doc/library/codecs.rst:993
msgid "936, cp936, ms936"
msgstr ""

#: ../Doc/library/codecs.rst:993 ../Doc/library/codecs.rst:995
msgid "Unified Chinese"
msgstr ""

#: ../Doc/library/codecs.rst:995
msgid "gb18030"
msgstr ""

#: ../Doc/library/codecs.rst:995
msgid "gb18030-2000"
msgstr ""

#: ../Doc/library/codecs.rst:997
msgid "hz"
msgstr ""

#: ../Doc/library/codecs.rst:997
msgid "hzgb, hz-gb, hz-gb-2312"
msgstr ""

#: ../Doc/library/codecs.rst:999
msgid "iso2022_jp"
msgstr ""

#: ../Doc/library/codecs.rst:999
msgid "csiso2022jp, iso2022jp, iso-2022-jp"
msgstr ""

#: ../Doc/library/codecs.rst:1002
msgid "iso2022_jp_1"
msgstr ""

#: ../Doc/library/codecs.rst:1002
msgid "iso2022jp-1, iso-2022-jp-1"
msgstr ""

#: ../Doc/library/codecs.rst:1004
msgid "iso2022_jp_2"
msgstr ""

#: ../Doc/library/codecs.rst:1004
msgid "iso2022jp-2, iso-2022-jp-2"
msgstr ""

#: ../Doc/library/codecs.rst:1004
msgid "Japanese, Korean, Simplified Chinese, Western Europe, Greek"
msgstr ""

#: ../Doc/library/codecs.rst:1007
msgid "iso2022_jp_2004"
msgstr ""

#: ../Doc/library/codecs.rst:1007
msgid "iso2022jp-2004, iso-2022-jp-2004"
msgstr ""

#: ../Doc/library/codecs.rst:1010
msgid "iso2022_jp_3"
msgstr ""

#: ../Doc/library/codecs.rst:1010
msgid "iso2022jp-3, iso-2022-jp-3"
msgstr ""

#: ../Doc/library/codecs.rst:1012
msgid "iso2022_jp_ext"
msgstr ""

#: ../Doc/library/codecs.rst:1012
msgid "iso2022jp-ext, iso-2022-jp-ext"
msgstr ""

#: ../Doc/library/codecs.rst:1014
msgid "iso2022_kr"
msgstr ""

#: ../Doc/library/codecs.rst:1014
msgid "csiso2022kr, iso2022kr, iso-2022-kr"
msgstr ""

#: ../Doc/library/codecs.rst:1017
msgid "latin_1"
msgstr ""

#: ../Doc/library/codecs.rst:1017
msgid "iso-8859-1, iso8859-1, 8859, cp819, latin, latin1, L1"
msgstr ""

#: ../Doc/library/codecs.rst:1017
msgid "West Europe"
msgstr ""

#: ../Doc/library/codecs.rst:1020
msgid "iso8859_2"
msgstr ""

#: ../Doc/library/codecs.rst:1020
msgid "iso-8859-2, latin2, L2"
msgstr ""

#: ../Doc/library/codecs.rst:1022
msgid "iso8859_3"
msgstr ""

#: ../Doc/library/codecs.rst:1022
msgid "iso-8859-3, latin3, L3"
msgstr ""

#: ../Doc/library/codecs.rst:1022
msgid "Esperanto, Maltese"
msgstr ""

#: ../Doc/library/codecs.rst:1024
msgid "iso8859_4"
msgstr ""

#: ../Doc/library/codecs.rst:1024
msgid "iso-8859-4, latin4, L4"
msgstr ""

#: ../Doc/library/codecs.rst:1026
msgid "iso8859_5"
msgstr ""

#: ../Doc/library/codecs.rst:1026
msgid "iso-8859-5, cyrillic"
msgstr ""

#: ../Doc/library/codecs.rst:1029
msgid "iso8859_6"
msgstr ""

#: ../Doc/library/codecs.rst:1029
msgid "iso-8859-6, arabic"
msgstr ""

#: ../Doc/library/codecs.rst:1031
msgid "iso8859_7"
msgstr ""

#: ../Doc/library/codecs.rst:1031
msgid "iso-8859-7, greek, greek8"
msgstr ""

#: ../Doc/library/codecs.rst:1033
msgid "iso8859_8"
msgstr ""

#: ../Doc/library/codecs.rst:1033
msgid "iso-8859-8, hebrew"
msgstr ""

#: ../Doc/library/codecs.rst:1035
msgid "iso8859_9"
msgstr ""

#: ../Doc/library/codecs.rst:1035
msgid "iso-8859-9, latin5, L5"
msgstr ""

#: ../Doc/library/codecs.rst:1037
msgid "iso8859_10"
msgstr ""

#: ../Doc/library/codecs.rst:1037
msgid "iso-8859-10, latin6, L6"
msgstr ""

#: ../Doc/library/codecs.rst:1037
msgid "Nordic languages"
msgstr ""

#: ../Doc/library/codecs.rst:1039
msgid "iso8859_13"
msgstr ""

#: ../Doc/library/codecs.rst:1039
msgid "iso-8859-13, latin7, L7"
msgstr ""

#: ../Doc/library/codecs.rst:1041
msgid "iso8859_14"
msgstr ""

#: ../Doc/library/codecs.rst:1041
msgid "iso-8859-14, latin8, L8"
msgstr ""

#: ../Doc/library/codecs.rst:1041
msgid "Celtic languages"
msgstr ""

#: ../Doc/library/codecs.rst:1043
msgid "iso8859_15"
msgstr ""

#: ../Doc/library/codecs.rst:1043
msgid "iso-8859-15, latin9, L9"
msgstr ""

#: ../Doc/library/codecs.rst:1045
msgid "iso8859_16"
msgstr ""

#: ../Doc/library/codecs.rst:1045
msgid "iso-8859-16, latin10, L10"
msgstr ""

#: ../Doc/library/codecs.rst:1045
msgid "South-Eastern Europe"
msgstr ""

#: ../Doc/library/codecs.rst:1047
msgid "johab"
msgstr ""

#: ../Doc/library/codecs.rst:1047
msgid "cp1361, ms1361"
msgstr ""

#: ../Doc/library/codecs.rst:1049
msgid "koi8_r"
msgstr ""

#: ../Doc/library/codecs.rst:1051
msgid "koi8_u"
msgstr ""

#: ../Doc/library/codecs.rst:1051
msgid "Ukrainian"
msgstr ""

#: ../Doc/library/codecs.rst:1053
msgid "mac_cyrillic"
msgstr ""

#: ../Doc/library/codecs.rst:1053
msgid "maccyrillic"
msgstr ""

#: ../Doc/library/codecs.rst:1056
msgid "mac_greek"
msgstr ""

#: ../Doc/library/codecs.rst:1056
msgid "macgreek"
msgstr ""

#: ../Doc/library/codecs.rst:1058
msgid "mac_iceland"
msgstr ""

#: ../Doc/library/codecs.rst:1058
msgid "maciceland"
msgstr ""

#: ../Doc/library/codecs.rst:1060
msgid "mac_latin2"
msgstr ""

#: ../Doc/library/codecs.rst:1060
msgid "maclatin2, maccentraleurope"
msgstr ""

#: ../Doc/library/codecs.rst:1062
msgid "mac_roman"
msgstr ""

#: ../Doc/library/codecs.rst:1062
msgid "macroman"
msgstr ""

#: ../Doc/library/codecs.rst:1064
msgid "mac_turkish"
msgstr ""

#: ../Doc/library/codecs.rst:1064
msgid "macturkish"
msgstr ""

#: ../Doc/library/codecs.rst:1066
msgid "ptcp154"
msgstr ""

#: ../Doc/library/codecs.rst:1066
msgid "csptcp154, pt154, cp154, cyrillic-asian"
msgstr ""

#: ../Doc/library/codecs.rst:1066
msgid "Kazakh"
msgstr ""

#: ../Doc/library/codecs.rst:1069
msgid "shift_jis"
msgstr ""

#: ../Doc/library/codecs.rst:1069
msgid "csshiftjis, shiftjis, sjis, s_jis"
msgstr ""

#: ../Doc/library/codecs.rst:1072
msgid "shift_jis_2004"
msgstr ""

#: ../Doc/library/codecs.rst:1072
msgid "shiftjis2004, sjis_2004, sjis2004"
msgstr ""

#: ../Doc/library/codecs.rst:1075
msgid "shift_jisx0213"
msgstr ""

#: ../Doc/library/codecs.rst:1075
msgid "shiftjisx0213, sjisx0213, s_jisx0213"
msgstr ""

#: ../Doc/library/codecs.rst:1078
msgid "utf_32"
msgstr ""

#: ../Doc/library/codecs.rst:1078
msgid "U32, utf32"
msgstr ""

#: ../Doc/library/codecs.rst:1078 ../Doc/library/codecs.rst:1080
#: ../Doc/library/codecs.rst:1082 ../Doc/library/codecs.rst:1084
#: ../Doc/library/codecs.rst:1090 ../Doc/library/codecs.rst:1092
#: ../Doc/library/codecs.rst:1094
msgid "all languages"
msgstr ""

#: ../Doc/library/codecs.rst:1080
msgid "utf_32_be"
msgstr ""

#: ../Doc/library/codecs.rst:1080
msgid "UTF-32BE"
msgstr ""

#: ../Doc/library/codecs.rst:1082
msgid "utf_32_le"
msgstr ""

#: ../Doc/library/codecs.rst:1082
msgid "UTF-32LE"
msgstr ""

#: ../Doc/library/codecs.rst:1084
msgid "utf_16"
msgstr ""

#: ../Doc/library/codecs.rst:1084
msgid "U16, utf16"
msgstr ""

#: ../Doc/library/codecs.rst:1086
msgid "utf_16_be"
msgstr ""

#: ../Doc/library/codecs.rst:1086
msgid "UTF-16BE"
msgstr ""

#: ../Doc/library/codecs.rst:1086 ../Doc/library/codecs.rst:1088
msgid "all languages (BMP only)"
msgstr ""

#: ../Doc/library/codecs.rst:1088
msgid "utf_16_le"
msgstr ""

#: ../Doc/library/codecs.rst:1088
msgid "UTF-16LE"
msgstr ""

#: ../Doc/library/codecs.rst:1090
msgid "utf_7"
msgstr ""

#: ../Doc/library/codecs.rst:1090
msgid "U7, unicode-1-1-utf-7"
msgstr ""

#: ../Doc/library/codecs.rst:1092
msgid "utf_8"
msgstr ""

#: ../Doc/library/codecs.rst:1092
msgid "U8, UTF, utf8"
msgstr ""

#: ../Doc/library/codecs.rst:1094
msgid "utf_8_sig"
msgstr ""

# 739527b1c2234238a795ac81b648bf06
#: ../Doc/library/codecs.rst:1097
msgid ""
"A number of codecs are specific to Python, so their codec names have no "
"meaning outside Python. Some of them don't convert from Unicode strings to "
"byte strings, but instead use the property of the Python codecs machinery "
"that any bijective function with one argument can be considered as an "
"encoding."
msgstr ""

# f0922c16d8c34f1389b6746a77fce0c8
#: ../Doc/library/codecs.rst:1102
msgid ""
"For the codecs listed below, the result in the \"encoding\" direction is "
"always a byte string. The result of the \"decoding\" direction is listed as "
"operand type in the table."
msgstr ""

# 6e87360baeea45289a0bafaa16fd710d
#: ../Doc/library/codecs.rst:1107
msgid "Operand type"
msgstr ""

#: ../Doc/library/codecs.rst:1107 ../Doc/library/xml.dom.rst:175
msgid "Purpose"
msgstr ""

# 13e582fa92cb45b2b984232e6504a3a0
#: ../Doc/library/codecs.rst:1109
msgid "base64_codec"
msgstr ""

# 5d936f85971c4895a28c2dd4305f8966
#: ../Doc/library/codecs.rst:1109
msgid "base64, base-64"
msgstr ""

# 6859462cfef0413f882c1279061fbf1b
# 4baee612523b4959a5279080c3c61afd
# bfcb0d479a00434b9af24517dfc82d1a
# eec3bee168a0453ab951806c53ded682
# 6d1a6fbba7c94c0ba073d91768c33e47
# 2534845cb72a4472bedcd3696df50519
# 905ebe41c79e42c597403d0158d1926e
#: ../Doc/library/codecs.rst:1109 ../Doc/library/codecs.rst:1112
#: ../Doc/library/codecs.rst:1115 ../Doc/library/codecs.rst:1132
#: ../Doc/library/codecs.rst:1143 ../Doc/library/codecs.rst:1165
#: ../Doc/library/codecs.rst:1168
msgid "byte string"
msgstr ""

# fb7a62d5f8d84da3a9b155da0851c128
#: ../Doc/library/codecs.rst:1109
msgid "Convert operand to MIME base64"
msgstr ""

# 8d32dd32e7904cb198bb89de8a2e8b65
#: ../Doc/library/codecs.rst:1112
msgid "bz2_codec"
msgstr ""

# 9d9646346055420bbb1562683a52c47a
#: ../Doc/library/codecs.rst:1112
msgid "bz2"
msgstr ""

# 8e6bba16e2ac42848ee1831ebd13e088
#: ../Doc/library/codecs.rst:1112
msgid "Compress the operand using bz2"
msgstr ""

# d14ed22daaef4a84a533a8fdd724185a
#: ../Doc/library/codecs.rst:1115
msgid "hex_codec"
msgstr ""

# 441cd94239cd4bacb651d20e1cd4074e
#: ../Doc/library/codecs.rst:1115
msgid "hex"
msgstr ""

# 6d78ac0540204112bb4bdfae5937d98f
#: ../Doc/library/codecs.rst:1115
msgid "Convert operand to hexadecimal representation, with two digits per byte"
msgstr ""

#: ../Doc/library/codecs.rst:1120
msgid "idna"
msgstr ""

# ec07b9305590444b99fea9ad5ec8301a
# 25e16748ac694e1892c88753fd33a50e
# 7cd105273f5a49dfb80db46844df0646
# 721fe9408908424db23d0023c128d8a7
# 438a1bcabf264f4b8f430753d2f62cad
# 199ba47a6dc64dd6a8bb05218acf332c
# 0e6d20d94d0745feb4693cbc4f196fcb
# b48f22ea1ca24e37a3f640e73283f826
#: ../Doc/library/codecs.rst:1120 ../Doc/library/codecs.rst:1124
#: ../Doc/library/codecs.rst:1128 ../Doc/library/codecs.rst:1130
#: ../Doc/library/codecs.rst:1135 ../Doc/library/codecs.rst:1140
#: ../Doc/library/codecs.rst:1156 ../Doc/library/codecs.rst:1161
msgid "Unicode string"
msgstr ""

#: ../Doc/library/codecs.rst:1120
msgid "Implements :rfc:`3490`, see also :mod:`encodings.idna`"
msgstr ""

#: ../Doc/library/codecs.rst:1124
msgid "mbcs"
msgstr ""

#: ../Doc/library/codecs.rst:1124
msgid "dbcs"
msgstr ""

#: ../Doc/library/codecs.rst:1124
msgid "Windows only: Encode operand according to the ANSI codepage (CP_ACP)"
msgstr ""

#: ../Doc/library/codecs.rst:1128
msgid "palmos"
msgstr ""

#: ../Doc/library/codecs.rst:1128
msgid "Encoding of PalmOS 3.5"
msgstr ""

#: ../Doc/library/codecs.rst:1130
msgid "punycode"
msgstr ""

#: ../Doc/library/codecs.rst:1130
msgid "Implements :rfc:`3492`"
msgstr ""

# 7abc95247e3248f9b0925095449173ee
#: ../Doc/library/codecs.rst:1132
msgid "quopri_codec"
msgstr ""

# a2216180aa104ff3aa5788579c959c4d
#: ../Doc/library/codecs.rst:1132
msgid "quopri, quoted-printable, quotedprintable"
msgstr ""

# 51d49a78b67f486ebcee42884907b477
#: ../Doc/library/codecs.rst:1132
msgid "Convert operand to MIME quoted printable"
msgstr ""

#: ../Doc/library/codecs.rst:1135
msgid "raw_unicode_escape"
msgstr ""

#: ../Doc/library/codecs.rst:1135
msgid ""
"Produce a string that is suitable as raw Unicode literal in Python source "
"code"
msgstr ""

# fc5c55b098414fc39d6f00c952294705
#: ../Doc/library/codecs.rst:1140
msgid "rot_13"
msgstr ""

# 772b38b65a504591a31756eff52854ea
#: ../Doc/library/codecs.rst:1140
msgid "rot13"
msgstr ""

# c69e1fc187ca487cbac198219f5657b8
#: ../Doc/library/codecs.rst:1140
msgid "Returns the Caesar-cypher encryption of the operand"
msgstr ""

# 8a5f96a93e5642109dcf8bdb77f74fc1
#: ../Doc/library/codecs.rst:1143
msgid "string_escape"
msgstr ""

# 7f374948b81a4b51b9598c0474319ed0
#: ../Doc/library/codecs.rst:1143
msgid ""
"Produce a string that is suitable as string literal in Python source code"
msgstr ""

#: ../Doc/library/codecs.rst:1148
msgid "undefined"
msgstr ""

# d03e71a89eab451eb66db9582b347f39
#: ../Doc/library/codecs.rst:1148
msgid "any"
msgstr ""

# 439f9f51572c486397b0e4f141e8bfa5
#: ../Doc/library/codecs.rst:1148
msgid ""
"Raise an exception for all conversions. Can be used as the system encoding "
"if no automatic :term:`coercion` between byte and Unicode strings is desired."
msgstr ""

#: ../Doc/library/codecs.rst:1156
msgid "unicode_escape"
msgstr ""

#: ../Doc/library/codecs.rst:1156
msgid ""
"Produce a string that is suitable as Unicode literal in Python source code"
msgstr ""

#: ../Doc/library/codecs.rst:1161
msgid "unicode_internal"
msgstr ""

#: ../Doc/library/codecs.rst:1161
msgid "Return the internal representation of the operand"
msgstr ""

# 81f52665bf864328912d71b1028cee22
#: ../Doc/library/codecs.rst:1165
msgid "uu_codec"
msgstr ""

# 6f34c0d7cd7945a7bcb7bb8ba6ab6824
#: ../Doc/library/codecs.rst:1165
msgid "uu"
msgstr ""

# 716106bd8b8843e9ae6a7d69e2830a1a
#: ../Doc/library/codecs.rst:1165
msgid "Convert the operand using uuencode"
msgstr ""

# cacc994839a04c48afafeb900857db4d
#: ../Doc/library/codecs.rst:1168
msgid "zlib_codec"
msgstr ""

# eebcc017ad904a6fbe0360d0b14d08cf
#: ../Doc/library/codecs.rst:1168
msgid "zip, zlib"
msgstr ""

# ca692b8e6bfb4a08a770ee90fcde3dc2
#: ../Doc/library/codecs.rst:1168
msgid "Compress the operand using gzip"
msgstr ""

#: ../Doc/library/codecs.rst:1177
msgid ""
":mod:`encodings.idna` --- Internationalized Domain Names in Applications"
msgstr ""

#: ../Doc/library/codecs.rst:1185
msgid ""
"This module implements :rfc:`3490` (Internationalized Domain Names in "
"Applications) and :rfc:`3492` (Nameprep: A Stringprep Profile for "
"Internationalized Domain Names (IDN)). It builds upon the ``punycode`` "
"encoding and :mod:`stringprep`."
msgstr ""

#: ../Doc/library/codecs.rst:1190
msgid ""
"These RFCs together define a protocol to support non-ASCII characters in "
"domain names. A domain name containing non-ASCII characters (such as ``www."
"Alliancefrançaise.nu``) is converted into an ASCII-compatible encoding (ACE, "
"such as ``www.xn--alliancefranaise-npb.nu``). The ACE form of the domain "
"name is then used in all places where arbitrary characters are not allowed "
"by the protocol, such as DNS queries, HTTP :mailheader:`Host` fields, and so "
"on. This conversion is carried out in the application; if possible invisible "
"to the user: The application should transparently convert Unicode domain "
"labels to IDNA on the wire, and convert back ACE labels to Unicode before "
"presenting them to the user."
msgstr ""

# efb0fdf641f949c9a88195c9f3ca56a7
#: ../Doc/library/codecs.rst:1201
msgid ""
"Python supports this conversion in several ways:  the ``idna`` codec "
"performs conversion between Unicode and ACE, separating an input string into "
"labels based on the separator characters defined in `section 3.1`_ (1) of :"
"rfc:`3490` and converting each label to ACE as required, and conversely "
"separating an input byte string into labels based on the ``.`` separator and "
"converting any ACE labels found into unicode.  Furthermore, the :mod:"
"`socket` module transparently converts Unicode host names to ACE, so that "
"applications need not be concerned about converting host names themselves "
"when they pass them to the socket module. On top of that, modules that have "
"host names as function parameters, such as :mod:`httplib` and :mod:`ftplib`, "
"accept Unicode host names (:mod:`httplib` then also transparently sends an "
"IDNA hostname in the :mailheader:`Host` field if it sends that field at all)."
msgstr ""

#: ../Doc/library/codecs.rst:1216
msgid ""
"When receiving host names from the wire (such as in reverse name lookup), no "
"automatic conversion to Unicode is performed: Applications wishing to "
"present such host names to the user should decode them to Unicode."
msgstr ""

#: ../Doc/library/codecs.rst:1220
msgid ""
"The module :mod:`encodings.idna` also implements the nameprep procedure, "
"which performs certain normalizations on host names, to achieve case-"
"insensitivity of international domain names, and to unify similar "
"characters. The nameprep functions can be used directly if desired."
msgstr ""

#: ../Doc/library/codecs.rst:1228
msgid ""
"Return the nameprepped version of *label*. The implementation currently "
"assumes query strings, so ``AllowUnassigned`` is true."
msgstr ""

#: ../Doc/library/codecs.rst:1234
msgid ""
"Convert a label to ASCII, as specified in :rfc:`3490`. ``UseSTD3ASCIIRules`` "
"is assumed to be false."
msgstr ""

#: ../Doc/library/codecs.rst:1240
msgid "Convert a label to Unicode, as specified in :rfc:`3490`."
msgstr ""

#: ../Doc/library/codecs.rst:1244
msgid ":mod:`encodings.utf_8_sig` --- UTF-8 codec with BOM signature"
msgstr ""

#: ../Doc/library/codecs.rst:1252
msgid ""
"This module implements a variant of the UTF-8 codec: On encoding a UTF-8 "
"encoded BOM will be prepended to the UTF-8 encoded bytes. For the stateful "
"encoder this is only done once (on the first write to the byte stream).  For "
"decoding an optional UTF-8 encoded BOM at the start of the data will be "
"skipped."
msgstr ""

#: ../Doc/library/codeop.rst:3
msgid ":mod:`codeop` --- Compile Python code"
msgstr ""

#: ../Doc/library/codeop.rst:10
msgid ""
"The :mod:`codeop` module provides utilities upon which the Python read-eval-"
"print loop can be emulated, as is done in the :mod:`code` module.  As a "
"result, you probably don't want to use the module directly; if you want to "
"include such a loop in your program you probably want to use the :mod:`code` "
"module instead."
msgstr ""

#: ../Doc/library/codeop.rst:16
msgid "There are two parts to this job:"
msgstr ""

#: ../Doc/library/codeop.rst:18
msgid ""
"Being able to tell if a line of input completes a Python  statement: in "
"short, telling whether to print '``>>>``' or '``...``' next."
msgstr ""

#: ../Doc/library/codeop.rst:21
msgid ""
"Remembering which future statements the user has entered, so  subsequent "
"input can be compiled with these in effect."
msgstr ""

#: ../Doc/library/codeop.rst:24
msgid ""
"The :mod:`codeop` module provides a way of doing each of these things, and a "
"way of doing them both."
msgstr ""

#: ../Doc/library/codeop.rst:27
msgid "To do just the former:"
msgstr ""

#: ../Doc/library/codeop.rst:31
msgid ""
"Tries to compile *source*, which should be a string of Python code and "
"return a code object if *source* is valid Python code. In that case, the "
"filename attribute of the code object will be *filename*, which defaults to "
"``'<input>'``. Returns ``None`` if *source* is *not* valid Python code, but "
"is a prefix of valid Python code."
msgstr ""

#: ../Doc/library/codeop.rst:37
msgid ""
"If there is a problem with *source*, an exception will be raised. :exc:"
"`SyntaxError` is raised if there is invalid Python syntax, and :exc:"
"`OverflowError` or :exc:`ValueError` if there is an invalid literal."
msgstr ""

#: ../Doc/library/codeop.rst:41
msgid ""
"The *symbol* argument determines whether *source* is compiled as a statement "
"(``'single'``, the default) or as an :term:`expression` (``'eval'``).  Any "
"other value will cause :exc:`ValueError` to  be raised."
msgstr ""

#: ../Doc/library/codeop.rst:47
msgid ""
"It is possible (but not likely) that the parser stops parsing with a "
"successful outcome before reaching the end of the source; in this case, "
"trailing symbols may be ignored instead of causing an error.  For example, a "
"backslash followed by two newlines may be followed by arbitrary garbage. "
"This will be fixed once the API for the parser is better."
msgstr ""

#: ../Doc/library/codeop.rst:56
msgid ""
"Instances of this class have :meth:`__call__` methods identical in signature "
"to the built-in function :func:`compile`, but with the difference that if "
"the instance compiles program text containing a :mod:`__future__` statement, "
"the instance 'remembers' and compiles all subsequent program texts with the "
"statement in force."
msgstr ""

#: ../Doc/library/codeop.rst:65
msgid ""
"Instances of this class have :meth:`__call__` methods identical in signature "
"to :func:`compile_command`; the difference is that if the instance compiles "
"program text containing a ``__future__`` statement, the instance 'remembers' "
"and compiles all subsequent program texts with the statement in force."
msgstr ""

# 38205231c3574f0e9d93a9cf63a8978f
#: ../Doc/library/codeop.rst:70
msgid ""
"A note on version compatibility: the :class:`Compile` and :class:"
"`CommandCompiler` are new in Python 2.2.  If you want to enable the future-"
"tracking features of 2.2 but also retain compatibility with 2.1 and earlier "
"versions of Python you can either write ::"
msgstr ""

# a7eab19dba61470395248612c4389c85
#: ../Doc/library/codeop.rst:82
msgid ""
"which is a low-impact change, but introduces possibly unwanted global state "
"into your program, or you can write::"
msgstr ""

# a90ee9b9b26a4c12b4e7863bcf086943
#: ../Doc/library/codeop.rst:92
msgid ""
"and then call ``CommandCompiler`` every time you need a fresh compiler "
"object."
msgstr ""

# ac885e41c698470ebf0969ca4fe3b782
#: ../Doc/library/collections.rst:2
msgid ":mod:`collections` --- High-performance container datatypes"
msgstr ""

# 9b94efded17348e794e6cfa354d20ebd
#: ../Doc/library/collections.rst:17
msgid ""
"**Source code:** :source:`Lib/collections.py` and :source:`Lib/_abcoll.py`"
msgstr ""

# af96896de3084d6e85d6707e75e81c60
#: ../Doc/library/collections.rst:21
msgid ""
"This module implements specialized container datatypes providing "
"alternatives to Python's general purpose built-in containers, :class:"
"`dict`, :class:`list`, :class:`set`, and :class:`tuple`."
msgstr ""

# 1ba90929cb0349a1a87b5fa9bc651d86
#: ../Doc/library/collections.rst:26
msgid ":func:`namedtuple`"
msgstr ""

# 6145efcdca3a43ec99ce22f0d09e9ec9
#: ../Doc/library/collections.rst:26
msgid "factory function for creating tuple subclasses with named fields"
msgstr ""

# 09f0579a442547628ab3e03cf7a7b30d
#: ../Doc/library/collections.rst:27
msgid ":class:`deque`"
msgstr ""

# 63fab7c29fd34ecaa2eec2743741df71
#: ../Doc/library/collections.rst:27
msgid "list-like container with fast appends and pops on either end"
msgstr ""

# 71d0ac3557df4b89b962a51ed410bb19
#: ../Doc/library/collections.rst:28
msgid ":class:`Counter`"
msgstr ""

# 88a0927af6e744ad9b9395d627ae10a3
#: ../Doc/library/collections.rst:28
msgid "dict subclass for counting hashable objects"
msgstr ""

# 914c7b38dc754cf2b38c0b62db9d2db2
#: ../Doc/library/collections.rst:29
msgid ":class:`OrderedDict`"
msgstr ""

# 0757397dbc3c4fe1b397c023ec3019bf
#: ../Doc/library/collections.rst:29
msgid "dict subclass that remembers the order entries were added"
msgstr ""

# 599b3da067b4463fbd68d91661810189
#: ../Doc/library/collections.rst:30
msgid ":class:`defaultdict`"
msgstr ""

# ba6cc9eb7eb24cfbbb63d48ea8abe1a3
#: ../Doc/library/collections.rst:30
msgid "dict subclass that calls a factory function to supply missing values"
msgstr ""

# d5da27ba44d841089694dff4bee6d9a0
#: ../Doc/library/collections.rst:33
msgid ""
"In addition to the concrete container classes, the collections module "
"provides :ref:`abstract base classes <collections-abstract-base-classes>` "
"that can be used to test whether a class provides a particular interface, "
"for example, whether it is hashable or a mapping."
msgstr ""

#: ../Doc/library/collections.rst:40
msgid ":class:`Counter` objects"
msgstr ""

#: ../Doc/library/collections.rst:42
msgid ""
"A counter tool is provided to support convenient and rapid tallies. For "
"example::"
msgstr ""

#: ../Doc/library/collections.rst:61
msgid ""
"A :class:`Counter` is a :class:`dict` subclass for counting hashable "
"objects. It is an unordered collection where elements are stored as "
"dictionary keys and their counts are stored as dictionary values.  Counts "
"are allowed to be any integer value including zero or negative counts.  The :"
"class:`Counter` class is similar to bags or multisets in other languages."
msgstr ""

#: ../Doc/library/collections.rst:67
msgid ""
"Elements are counted from an *iterable* or initialized from another "
"*mapping* (or counter):"
msgstr ""

#: ../Doc/library/collections.rst:75
msgid ""
"Counter objects have a dictionary interface except that they return a zero "
"count for missing items instead of raising a :exc:`KeyError`:"
msgstr ""

#: ../Doc/library/collections.rst:82
msgid ""
"Setting a count to zero does not remove an element from a counter. Use "
"``del`` to remove it entirely:"
msgstr ""

#: ../Doc/library/collections.rst:91
msgid ""
"Counter objects support three methods beyond those available for all "
"dictionaries:"
msgstr ""

#: ../Doc/library/collections.rst:96
msgid ""
"Return an iterator over elements repeating each as many times as its count.  "
"Elements are returned in arbitrary order.  If an element's count is less "
"than one, :meth:`elements` will ignore it."
msgstr ""

#: ../Doc/library/collections.rst:106
msgid ""
"Return a list of the *n* most common elements and their counts from the most "
"common to the least.  If *n* is not specified, :func:`most_common` returns "
"*all* elements in the counter.  Elements with equal counts are ordered "
"arbitrarily:"
msgstr ""

#: ../Doc/library/collections.rst:116
msgid ""
"Elements are subtracted from an *iterable* or from another *mapping* (or "
"counter).  Like :meth:`dict.update` but subtracts counts instead of "
"replacing them.  Both inputs and outputs may be zero or negative."
msgstr ""

#: ../Doc/library/collections.rst:125
msgid ""
"The usual dictionary methods are available for :class:`Counter` objects "
"except for two which work differently for counters."
msgstr ""

#: ../Doc/library/collections.rst:130
msgid "This class method is not implemented for :class:`Counter` objects."
msgstr ""

#: ../Doc/library/collections.rst:134
msgid ""
"Elements are counted from an *iterable* or added-in from another *mapping* "
"(or counter).  Like :meth:`dict.update` but adds counts instead of replacing "
"them.  Also, the *iterable* is expected to be a sequence of elements, not a "
"sequence of ``(key, value)`` pairs."
msgstr ""

#: ../Doc/library/collections.rst:139
msgid "Common patterns for working with :class:`Counter` objects::"
msgstr ""

#: ../Doc/library/collections.rst:151
msgid ""
"Several mathematical operations are provided for combining :class:`Counter` "
"objects to produce multisets (counters that have counts greater than zero). "
"Addition and subtraction combine counters by adding or subtracting the "
"counts of corresponding elements.  Intersection and union return the minimum "
"and maximum of corresponding counts.  Each operation can accept inputs with "
"signed counts, but the output will exclude results with counts of zero or "
"less."
msgstr ""

#: ../Doc/library/collections.rst:171
msgid ""
"Counters were primarily designed to work with positive integers to represent "
"running counts; however, care was taken to not unnecessarily preclude use "
"cases needing other types or negative values.  To help with those use cases, "
"this section documents the minimum range and type restrictions."
msgstr ""

#: ../Doc/library/collections.rst:176
msgid ""
"The :class:`Counter` class itself is a dictionary subclass with no "
"restrictions on its keys and values.  The values are intended to be numbers "
"representing counts, but you *could* store anything in the value field."
msgstr ""

#: ../Doc/library/collections.rst:180
msgid ""
"The :meth:`most_common` method requires only that the values be orderable."
msgstr ""

#: ../Doc/library/collections.rst:182
msgid ""
"For in-place operations such as ``c[key] += 1``, the value type need only "
"support addition and subtraction.  So fractions, floats, and decimals would "
"work and negative values are supported.  The same is also true for :meth:"
"`update` and :meth:`subtract` which allow negative and zero values for both "
"inputs and outputs."
msgstr ""

# 6e373abb88274339919bd0858203b647
#: ../Doc/library/collections.rst:188
msgid ""
"The multiset methods are designed only for use cases with positive values. "
"The inputs may be negative or zero, but only outputs with positive values "
"are created.  There are no type restrictions, but the value type needs to "
"support addition, subtraction, and comparison."
msgstr ""

#: ../Doc/library/collections.rst:193
msgid ""
"The :meth:`elements` method requires integer counts.  It ignores zero and "
"negative counts."
msgstr ""

#: ../Doc/library/collections.rst:198
msgid ""
"`Counter class <http://code.activestate.com/recipes/576611/>`_ adapted for "
"Python 2.5 and an early `Bag recipe <http://code.activestate.com/"
"recipes/259174/>`_ for Python 2.4."
msgstr ""

#: ../Doc/library/collections.rst:202
msgid ""
"`Bag class <http://www.gnu.org/software/smalltalk/manual-base/html_node/Bag."
"html>`_ in Smalltalk."
msgstr ""

# 9cffb25f8920426cbfd525362e091006
#: ../Doc/library/collections.rst:205
msgid ""
"Wikipedia entry for `Multisets <http://en.wikipedia.org/wiki/Multiset>`_."
msgstr ""

#: ../Doc/library/collections.rst:207
msgid ""
"`C++ multisets <http://www.demo2s.com/Tutorial/Cpp/0380__set-multiset/"
"Catalog0380__set-multiset.htm>`_ tutorial with examples."
msgstr ""

# 3bba4c1b41ea4a3ebe2ed7cc5c804bb9
#: ../Doc/library/collections.rst:210
msgid ""
"For mathematical operations on multisets and their use cases, see *Knuth, "
"Donald. The Art of Computer Programming Volume II, Section 4.6.3, Exercise "
"19*."
msgstr ""

#: ../Doc/library/collections.rst:214
msgid ""
"To enumerate all distinct multisets of a given size over a given set of "
"elements, see :func:`itertools.combinations_with_replacement`."
msgstr ""

#: ../Doc/library/collections.rst:217
msgid ""
"map(Counter, combinations_with_replacement('ABC', 2)) --> AA AB AC BB BC CC"
msgstr ""

#: ../Doc/library/collections.rst:221
msgid ":class:`deque` objects"
msgstr ""

#: ../Doc/library/collections.rst:225
msgid ""
"Returns a new deque object initialized left-to-right (using :meth:`append`) "
"with data from *iterable*.  If *iterable* is not specified, the new deque is "
"empty."
msgstr ""

#: ../Doc/library/collections.rst:228
msgid ""
"Deques are a generalization of stacks and queues (the name is pronounced "
"\"deck\" and is short for \"double-ended queue\").  Deques support thread-"
"safe, memory efficient appends and pops from either side of the deque with "
"approximately the same O(1) performance in either direction."
msgstr ""

#: ../Doc/library/collections.rst:233
msgid ""
"Though :class:`list` objects support similar operations, they are optimized "
"for fast fixed-length operations and incur O(n) memory movement costs for "
"``pop(0)`` and ``insert(0, v)`` operations which change both the size and "
"position of the underlying data representation."
msgstr ""

#: ../Doc/library/collections.rst:240
msgid ""
"If *maxlen* is not specified or is *None*, deques may grow to an arbitrary "
"length.  Otherwise, the deque is bounded to the specified maximum length.  "
"Once a bounded length deque is full, when new items are added, a "
"corresponding number of items are discarded from the opposite end.  Bounded "
"length deques provide functionality similar to the ``tail`` filter in Unix. "
"They are also useful for tracking transactions and other pools of data where "
"only the most recent activity is of interest."
msgstr ""

#: ../Doc/library/collections.rst:251
msgid "Deque objects support the following methods:"
msgstr ""

#: ../Doc/library/collections.rst:256
msgid "Add *x* to the right side of the deque."
msgstr ""

#: ../Doc/library/collections.rst:261
msgid "Add *x* to the left side of the deque."
msgstr ""

#: ../Doc/library/collections.rst:266
msgid "Remove all elements from the deque leaving it with length 0."
msgstr ""

#: ../Doc/library/collections.rst:271
msgid "Count the number of deque elements equal to *x*."
msgstr ""

#: ../Doc/library/collections.rst:277
msgid ""
"Extend the right side of the deque by appending elements from the iterable "
"argument."
msgstr ""

#: ../Doc/library/collections.rst:283
msgid ""
"Extend the left side of the deque by appending elements from *iterable*. "
"Note, the series of left appends results in reversing the order of elements "
"in the iterable argument."
msgstr ""

#: ../Doc/library/collections.rst:290
msgid ""
"Remove and return an element from the right side of the deque. If no "
"elements are present, raises an :exc:`IndexError`."
msgstr ""

#: ../Doc/library/collections.rst:296
msgid ""
"Remove and return an element from the left side of the deque. If no elements "
"are present, raises an :exc:`IndexError`."
msgstr ""

#: ../Doc/library/collections.rst:302
msgid ""
"Removed the first occurrence of *value*.  If not found, raises a :exc:"
"`ValueError`."
msgstr ""

#: ../Doc/library/collections.rst:309
msgid "Reverse the elements of the deque in-place and then return ``None``."
msgstr ""

#: ../Doc/library/collections.rst:315
msgid ""
"Rotate the deque *n* steps to the right.  If *n* is negative, rotate to the "
"left.  Rotating one step to the right is equivalent to: ``d.appendleft(d.pop"
"())``."
msgstr ""

#: ../Doc/library/collections.rst:320
msgid "Deque objects also provide one read-only attribute:"
msgstr ""

#: ../Doc/library/collections.rst:324
msgid "Maximum size of a deque or *None* if unbounded."
msgstr ""

#: ../Doc/library/collections.rst:329
msgid ""
"In addition to the above, deques support iteration, pickling, ``len(d)``, "
"``reversed(d)``, ``copy.copy(d)``, ``copy.deepcopy(d)``, membership testing "
"with the :keyword:`in` operator, and subscript references such as ``d[-1]"
"``.  Indexed access is O(1) at both ends but slows to O(n) in the middle.  "
"For fast random access, use lists instead."
msgstr ""

#: ../Doc/library/collections.rst:335 ../Doc/library/collections.rst:597
#: ../Doc/library/datetime.rst:1294 ../Doc/library/difflib.rst:258
#: ../Doc/library/fnmatch.rst:81 ../Doc/library/sqlite3.rst:294
#: ../Doc/library/sqlite3.rst:310 ../Doc/library/sqlite3.rst:406
#: ../Doc/library/sqlite3.rst:512 ../Doc/library/turtle.rst:1949
msgid "Example:"
msgstr ""

#: ../Doc/library/collections.rst:392
msgid ":class:`deque` Recipes"
msgstr ""

#: ../Doc/library/collections.rst:394
msgid "This section shows various approaches to working with deques."
msgstr ""

#: ../Doc/library/collections.rst:396
msgid ""
"Bounded length deques provide functionality similar to the ``tail`` filter "
"in Unix::"
msgstr ""

#: ../Doc/library/collections.rst:403
msgid ""
"Another approach to using deques is to maintain a sequence of recently added "
"elements by appending to the right and popping to the left::"
msgstr ""

#: ../Doc/library/collections.rst:418
msgid ""
"The :meth:`rotate` method provides a way to implement :class:`deque` slicing "
"and deletion.  For example, a pure Python implementation of ``del d[n]`` "
"relies on the :meth:`rotate` method to position elements to be popped::"
msgstr ""

#: ../Doc/library/collections.rst:427
msgid ""
"To implement :class:`deque` slicing, use a similar approach applying :meth:"
"`rotate` to bring a target element to the left side of the deque. Remove old "
"entries with :meth:`popleft`, add new entries with :meth:`extend`, and then "
"reverse the rotation. With minor variations on that approach, it is easy to "
"implement Forth style stack manipulations such as ``dup``, ``drop``, "
"``swap``, ``over``, ``pick``, ``rot``, and ``roll``."
msgstr ""

#: ../Doc/library/collections.rst:437
msgid ":class:`defaultdict` objects"
msgstr ""

#: ../Doc/library/collections.rst:441
msgid ""
"Returns a new dictionary-like object.  :class:`defaultdict` is a subclass of "
"the built-in :class:`dict` class.  It overrides one method and adds one "
"writable instance variable.  The remaining functionality is the same as for "
"the :class:`dict` class and is not documented here."
msgstr ""

#: ../Doc/library/collections.rst:446
msgid ""
"The first argument provides the initial value for the :attr:"
"`default_factory` attribute; it defaults to ``None``. All remaining "
"arguments are treated the same as if they were passed to the :class:`dict` "
"constructor, including keyword arguments."
msgstr ""

#: ../Doc/library/collections.rst:453
msgid ""
":class:`defaultdict` objects support the following method in addition to the "
"standard :class:`dict` operations:"
msgstr ""

#: ../Doc/library/collections.rst:458
msgid ""
"If the :attr:`default_factory` attribute is ``None``, this raises a :exc:"
"`KeyError` exception with the *key* as argument."
msgstr ""

#: ../Doc/library/collections.rst:461
msgid ""
"If :attr:`default_factory` is not ``None``, it is called without arguments "
"to provide a default value for the given *key*, this value is inserted in "
"the dictionary for the *key*, and returned."
msgstr ""

#: ../Doc/library/collections.rst:465
msgid ""
"If calling :attr:`default_factory` raises an exception this exception is "
"propagated unchanged."
msgstr ""

#: ../Doc/library/collections.rst:468
msgid ""
"This method is called by the :meth:`__getitem__` method of the :class:`dict` "
"class when the requested key is not found; whatever it returns or raises is "
"then returned or raised by :meth:`__getitem__`."
msgstr ""

# a17ad275fb6f420f84fff13f54b1e243
#: ../Doc/library/collections.rst:472
msgid ""
"Note that :meth:`__missing__` is *not* called for any operations besides :"
"meth:`__getitem__`. This means that :meth:`get` will, like normal "
"dictionaries, return ``None`` as a default rather than using :attr:"
"`default_factory`."
msgstr ""

#: ../Doc/library/collections.rst:478
msgid ":class:`defaultdict` objects support the following instance variable:"
msgstr ""

#: ../Doc/library/collections.rst:483
msgid ""
"This attribute is used by the :meth:`__missing__` method; it is initialized "
"from the first argument to the constructor, if present, or to ``None``, if "
"absent."
msgstr ""

#: ../Doc/library/collections.rst:489
msgid ":class:`defaultdict` Examples"
msgstr ""

#: ../Doc/library/collections.rst:491
msgid ""
"Using :class:`list` as the :attr:`default_factory`, it is easy to group a "
"sequence of key-value pairs into a dictionary of lists:"
msgstr ""

#: ../Doc/library/collections.rst:502
msgid ""
"When each key is encountered for the first time, it is not already in the "
"mapping; so an entry is automatically created using the :attr:"
"`default_factory` function which returns an empty :class:`list`.  The :meth:"
"`list.append` operation then attaches the value to the new list.  When keys "
"are encountered again, the look-up proceeds normally (returning the list for "
"that key) and the :meth:`list.append` operation adds another value to the "
"list. This technique is simpler and faster than an equivalent technique "
"using :meth:`dict.setdefault`:"
msgstr ""

#: ../Doc/library/collections.rst:517
msgid ""
"Setting the :attr:`default_factory` to :class:`int` makes the :class:"
"`defaultdict` useful for counting (like a bag or multiset in other "
"languages):"
msgstr ""

#: ../Doc/library/collections.rst:529
msgid ""
"When a letter is first encountered, it is missing from the mapping, so the :"
"attr:`default_factory` function calls :func:`int` to supply a default count "
"of zero.  The increment operation then builds up the count for each letter."
msgstr ""

# 13cec38831d64b81abc97d55ff74edeb
#: ../Doc/library/collections.rst:533
msgid ""
"The function :func:`int` which always returns zero is just a special case of "
"constant functions.  A faster and more flexible way to create constant "
"functions is to use :func:`itertools.repeat` which can supply any constant "
"value (not just zero):"
msgstr ""

#: ../Doc/library/collections.rst:545
msgid ""
"Setting the :attr:`default_factory` to :class:`set` makes the :class:"
"`defaultdict` useful for building a dictionary of sets:"
msgstr ""

#: ../Doc/library/collections.rst:558
msgid ":func:`namedtuple` Factory Function for Tuples with Named Fields"
msgstr ""

#: ../Doc/library/collections.rst:560
msgid ""
"Named tuples assign meaning to each position in a tuple and allow for more "
"readable, self-documenting code.  They can be used wherever regular tuples "
"are used, and they add the ability to access fields by name instead of "
"position index."
msgstr ""

#: ../Doc/library/collections.rst:566
msgid ""
"Returns a new tuple subclass named *typename*.  The new subclass is used to "
"create tuple-like objects that have fields accessible by attribute lookup as "
"well as being indexable and iterable.  Instances of the subclass also have a "
"helpful docstring (with typename and field_names) and a helpful :meth:"
"`__repr__` method which lists the tuple contents in a ``name=value`` format."
msgstr ""

# 9cc9540ba2104071ba89e84a255add7a
#: ../Doc/library/collections.rst:572
msgid ""
"The *field_names* are a sequence of strings such as ``['x', 'y']``. "
"Alternatively, *field_names* can be a single string with each fieldname "
"separated by whitespace and/or commas, for example ``'x y'`` or ``'x, y'``."
msgstr ""

# c054193bd19a4490b4fabe87ba04533a
#: ../Doc/library/collections.rst:576
msgid ""
"Any valid Python identifier may be used for a fieldname except for names "
"starting with an underscore.  Valid identifiers consist of letters, digits, "
"and underscores but do not start with a digit or underscore and cannot be a :"
"mod:`keyword` such as *class*, *for*, *return*, *global*, *pass*, *print*, "
"or *raise*."
msgstr ""

#: ../Doc/library/collections.rst:582
msgid ""
"If *rename* is true, invalid fieldnames are automatically replaced with "
"positional names.  For example, ``['abc', 'def', 'ghi', 'abc']`` is "
"converted to ``['abc', '_1', 'ghi', '_3']``, eliminating the keyword ``def`` "
"and the duplicate fieldname ``abc``."
msgstr ""

#: ../Doc/library/collections.rst:587
msgid ""
"If *verbose* is true, the class definition is printed just before being "
"built."
msgstr ""

#: ../Doc/library/collections.rst:589
msgid ""
"Named tuple instances do not have per-instance dictionaries, so they are "
"lightweight and require no more memory than regular tuples."
msgstr ""

#: ../Doc/library/collections.rst:659
msgid ""
"Named tuples are especially useful for assigning field names to result "
"tuples returned by the :mod:`csv` or :mod:`sqlite3` modules::"
msgstr ""

#: ../Doc/library/collections.rst:675
msgid ""
"In addition to the methods inherited from tuples, named tuples support three "
"additional methods and one attribute.  To prevent conflicts with field "
"names, the method and attribute names start with an underscore."
msgstr ""

#: ../Doc/library/collections.rst:681
msgid ""
"Class method that makes a new instance from an existing sequence or iterable."
msgstr ""

#: ../Doc/library/collections.rst:691
msgid ""
"Return a new :class:`OrderedDict` which maps field names to their "
"corresponding values::"
msgstr ""

# a47a7115ae0149cfa2d07a4a68bfc3e1
#: ../Doc/library/collections.rst:702
msgid ""
"Return a new instance of the named tuple replacing specified fields with new "
"values::"
msgstr ""

#: ../Doc/library/collections.rst:714
msgid ""
"Tuple of strings listing the field names.  Useful for introspection and for "
"creating new named tuple types from existing named tuples."
msgstr ""

#: ../Doc/library/collections.rst:727
msgid ""
"To retrieve a field whose name is stored in a string, use the :func:"
"`getattr` function:"
msgstr ""

#: ../Doc/library/collections.rst:733
msgid ""
"To convert a dictionary to a named tuple, use the double-star-operator (as "
"described in :ref:`tut-unpacking-arguments`):"
msgstr ""

#: ../Doc/library/collections.rst:740
msgid ""
"Since a named tuple is a regular Python class, it is easy to add or change "
"functionality with a subclass.  Here is how to add a calculated field and a "
"fixed-width print format:"
msgstr ""

#: ../Doc/library/collections.rst:757
msgid ""
"The subclass shown above sets ``__slots__`` to an empty tuple.  This helps "
"keep memory requirements low by preventing the creation of instance "
"dictionaries."
msgstr ""

#: ../Doc/library/collections.rst:760
msgid ""
"Subclassing is not useful for adding new, stored fields.  Instead, simply "
"create a new named tuple type from the :attr:`_fields` attribute:"
msgstr ""

#: ../Doc/library/collections.rst:765
msgid ""
"Default values can be implemented by using :meth:`_replace` to customize a "
"prototype instance:"
msgstr ""

#: ../Doc/library/collections.rst:772
msgid ""
"Enumerated constants can be implemented with named tuples, but it is simpler "
"and more efficient to use a simple class declaration:"
msgstr ""

#: ../Doc/library/collections.rst:783
msgid ""
"`Named tuple recipe <http://code.activestate.com/recipes/500261/>`_ adapted "
"for Python 2.4."
msgstr ""

#: ../Doc/library/collections.rst:788
msgid ":class:`OrderedDict` objects"
msgstr ""

#: ../Doc/library/collections.rst:790
msgid ""
"Ordered dictionaries are just like regular dictionaries but they remember "
"the order that items were inserted.  When iterating over an ordered "
"dictionary, the items are returned in the order their keys were first added."
msgstr ""

#: ../Doc/library/collections.rst:796
msgid ""
"Return an instance of a dict subclass, supporting the usual :class:`dict` "
"methods.  An *OrderedDict* is a dict that remembers the order that keys were "
"first inserted. If a new entry overwrites an existing entry, the original "
"insertion position is left unchanged.  Deleting an entry and reinserting it "
"will move it to the end."
msgstr ""

#: ../Doc/library/collections.rst:806
msgid ""
"The :meth:`popitem` method for ordered dictionaries returns and removes a "
"(key, value) pair.  The pairs are returned in LIFO order if *last* is true "
"or FIFO order if false."
msgstr ""

#: ../Doc/library/collections.rst:810
msgid ""
"In addition to the usual mapping methods, ordered dictionaries also support "
"reverse iteration using :func:`reversed`."
msgstr ""

#: ../Doc/library/collections.rst:813
msgid ""
"Equality tests between :class:`OrderedDict` objects are order-sensitive and "
"are implemented as ``list(od1.items())==list(od2.items())``. Equality tests "
"between :class:`OrderedDict` objects and other :class:`Mapping` objects are "
"order-insensitive like regular dictionaries. This allows :class:"
"`OrderedDict` objects to be substituted anywhere a regular dictionary is "
"used."
msgstr ""

#: ../Doc/library/collections.rst:820
msgid ""
"The :class:`OrderedDict` constructor and :meth:`update` method both accept "
"keyword arguments, but their order is lost because Python's function call "
"semantics pass-in keyword arguments using a regular unordered dictionary."
msgstr ""

#: ../Doc/library/collections.rst:826
msgid ""
"`Equivalent OrderedDict recipe <http://code.activestate.com/recipes/576693/"
">`_ that runs on Python 2.4 or later."
msgstr ""

# 1495176b99dc4c0fadffe2d5777f777c
#: ../Doc/library/collections.rst:830
msgid ":class:`OrderedDict` Examples and Recipes"
msgstr ""

#: ../Doc/library/collections.rst:832
msgid ""
"Since an ordered dictionary remembers its insertion order, it can be used in "
"conjuction with sorting to make a sorted dictionary::"
msgstr ""

#: ../Doc/library/collections.rst:850
msgid ""
"The new sorted dictionaries maintain their sort order when entries are "
"deleted.  But when new keys are added, the keys are appended to the end and "
"the sort is not maintained."
msgstr ""

# 69805af190f04fc2a35b26fbb2edac35
#: ../Doc/library/collections.rst:854
msgid ""
"It is also straight-forward to create an ordered dictionary variant that "
"remembers the order the keys were *last* inserted. If a new entry overwrites "
"an existing entry, the original insertion position is changed and moved to "
"the end::"
msgstr ""

# d914efb05d944494b3a46b637f6f5c3a
#: ../Doc/library/collections.rst:867
msgid ""
"An ordered dictionary can be combined with the :class:`Counter` class so "
"that the counter remembers the order elements are first encountered::"
msgstr ""

# 994f2118d137495abd8d712ee6abed6e
#: ../Doc/library/collections.rst:883
msgid "Collections Abstract Base Classes"
msgstr ""

# f0f4c4e038644bdfbc032266091c4233
#: ../Doc/library/collections.rst:885
msgid ""
"The collections module offers the following :term:`ABCs <abstract base "
"class>`:"
msgstr ""

#: ../Doc/library/collections.rst:888
msgid "ABC"
msgstr ""

# f44b05f2f8dc4a31847b23278bea7303
#: ../Doc/library/collections.rst:888
msgid "Inherits from"
msgstr ""

#: ../Doc/library/collections.rst:888
msgid "Abstract Methods"
msgstr ""

#: ../Doc/library/collections.rst:888
msgid "Mixin Methods"
msgstr ""

#: ../Doc/library/collections.rst:890
msgid ":class:`Container`"
msgstr ""

#: ../Doc/library/collections.rst:890
msgid "``__contains__``"
msgstr ""

#: ../Doc/library/collections.rst:891
msgid ":class:`Hashable`"
msgstr ""

#: ../Doc/library/collections.rst:891
msgid "``__hash__``"
msgstr ""

#: ../Doc/library/collections.rst:892 ../Doc/library/collections.rst:893
msgid ":class:`Iterable`"
msgstr ""

#: ../Doc/library/collections.rst:892 ../Doc/library/collections.rst:893
msgid "``__iter__``"
msgstr ""

#: ../Doc/library/collections.rst:893
msgid ":class:`Iterator`"
msgstr ""

# c2246da0882c48cdb3e84e7da950c550
#: ../Doc/library/collections.rst:893
msgid "``next``"
msgstr ""

#: ../Doc/library/collections.rst:894 ../Doc/library/collections.rst:922
msgid ":class:`Sized`"
msgstr ""

#: ../Doc/library/collections.rst:894 ../Doc/library/collections.rst:922
msgid "``__len__``"
msgstr ""

#: ../Doc/library/collections.rst:895
msgid ":class:`Callable`"
msgstr ""

#: ../Doc/library/collections.rst:895
msgid "``__call__``"
msgstr ""

#: ../Doc/library/collections.rst:897 ../Doc/library/collections.rst:901
msgid ":class:`Sequence`"
msgstr ""

#: ../Doc/library/collections.rst:897 ../Doc/library/collections.rst:905
#: ../Doc/library/collections.rst:913
msgid ":class:`Sized`, :class:`Iterable`, :class:`Container`"
msgstr ""

#: ../Doc/library/collections.rst:897 ../Doc/library/collections.rst:913
msgid "``__getitem__``"
msgstr ""

# 39a6e54081784499b2e8c93015ce58bf
#: ../Doc/library/collections.rst:897
msgid ""
"``__contains__``, ``__iter__``, ``__reversed__``, ``index``, and ``count``"
msgstr ""

#: ../Doc/library/collections.rst:901
msgid ":class:`MutableSequence`"
msgstr ""

# e371e74696584239a30d0d25b4d6b222
#: ../Doc/library/collections.rst:901
msgid "``__setitem__``, ``__delitem__``, ``insert``"
msgstr ""

# f205cd9d459c4268a76915313559af53
#: ../Doc/library/collections.rst:901
msgid ""
"Inherited :class:`Sequence` methods and ``append``, ``reverse``, ``extend``, "
"``pop``, ``remove``, and ``__iadd__``"
msgstr ""

#: ../Doc/library/collections.rst:905 ../Doc/library/collections.rst:909
msgid ":class:`Set`"
msgstr ""

# 95449ddb25984d158a4a4c84caec390b
#: ../Doc/library/collections.rst:905
msgid ""
"``__le__``, ``__lt__``, ``__eq__``, ``__ne__``, ``__gt__``, ``__ge__``, "
"``__and__``, ``__or__``, ``__sub__``, ``__xor__``, and ``isdisjoint``"
msgstr ""

#: ../Doc/library/collections.rst:909
msgid ":class:`MutableSet`"
msgstr ""

# bab8f830f4cb4cadb44499f3af469d4b
#: ../Doc/library/collections.rst:909
msgid "``add``, ``discard``"
msgstr ""

# b7b2bcc5f5514c7f8e5356e1b0b10409
#: ../Doc/library/collections.rst:909
msgid ""
"Inherited :class:`Set` methods and ``clear``, ``pop``, ``remove``, "
"``__ior__``, ``__iand__``, ``__ixor__``, and ``__isub__``"
msgstr ""

#: ../Doc/library/collections.rst:913 ../Doc/library/collections.rst:917
msgid ":class:`Mapping`"
msgstr ""

#: ../Doc/library/collections.rst:913
msgid ""
"``__contains__``, ``keys``, ``items``, ``values``, ``get``, ``__eq__``, and "
"``__ne__``"
msgstr ""

#: ../Doc/library/collections.rst:917
msgid ":class:`MutableMapping`"
msgstr ""

# 2ac5abde17ef4b0fa6f2dcae31453ce0
#: ../Doc/library/collections.rst:917
msgid "``__setitem__``, ``__delitem__``"
msgstr ""

# ee86af580c1041cb86d8f3c676188936
#: ../Doc/library/collections.rst:917
msgid ""
"Inherited :class:`Mapping` methods and ``pop``, ``popitem``, ``clear``, "
"``update``, and ``setdefault``"
msgstr ""

#: ../Doc/library/collections.rst:922 ../Doc/library/collections.rst:927
msgid ":class:`MappingView`"
msgstr ""

#: ../Doc/library/collections.rst:923
msgid ":class:`ItemsView`"
msgstr ""

#: ../Doc/library/collections.rst:923 ../Doc/library/collections.rst:925
msgid ":class:`MappingView`, :class:`Set`"
msgstr ""

#: ../Doc/library/collections.rst:923 ../Doc/library/collections.rst:925
#: ../Doc/library/collections.rst:927
msgid "``__contains__``, ``__iter__``"
msgstr ""

#: ../Doc/library/collections.rst:925
msgid ":class:`KeysView`"
msgstr ""

#: ../Doc/library/collections.rst:927
msgid ":class:`ValuesView`"
msgstr ""

# f6e1dc8d7c4f407a869711313e115acf
#: ../Doc/library/collections.rst:936
msgid ""
"ABCs for classes that provide respectively the methods :meth:"
"`__contains__`, :meth:`__hash__`, :meth:`__len__`, and :meth:`__call__`."
msgstr ""

# 85f99c90eba8403d8ad53040177a3f9f
#: ../Doc/library/collections.rst:941
msgid ""
"ABC for classes that provide the :meth:`__iter__` method. See also the "
"definition of :term:`iterable`."
msgstr ""

# 3da2812354f54749b94842dbf4f038f5
#: ../Doc/library/collections.rst:946
msgid ""
"ABC for classes that provide the :meth:`__iter__` and :meth:`next` methods. "
"See also the definition of :term:`iterator`."
msgstr ""

# db9f8a02ca6240379ea622c3b83d9aa1
#: ../Doc/library/collections.rst:952
msgid "ABCs for read-only and mutable :term:`sequences <sequence>`."
msgstr ""

# c8022e30550146038610948ba31039eb
#: ../Doc/library/collections.rst:957
msgid "ABCs for read-only and mutable sets."
msgstr ""

# 5afe778406f04c78a679b44fc84834cc
#: ../Doc/library/collections.rst:962
msgid "ABCs for read-only and mutable :term:`mappings <mapping>`."
msgstr ""

# 122862fb0f0b403cac4df105930bde52
#: ../Doc/library/collections.rst:969
msgid "ABCs for mapping, items, keys, and values :term:`views <view>`."
msgstr ""

#: ../Doc/library/collections.rst:972
msgid ""
"These ABCs allow us to ask classes or instances if they provide particular "
"functionality, for example::"
msgstr ""

#: ../Doc/library/collections.rst:979
msgid ""
"Several of the ABCs are also useful as mixins that make it easier to develop "
"classes supporting container APIs.  For example, to write a class supporting "
"the full :class:`Set` API, it only necessary to supply the three underlying "
"abstract methods: :meth:`__contains__`, :meth:`__iter__`, and :meth:"
"`__len__`. The ABC supplies the remaining methods such as :meth:`__and__` "
"and :meth:`isdisjoint` ::"
msgstr ""

#: ../Doc/library/collections.rst:1005
msgid "Notes on using :class:`Set` and :class:`MutableSet` as a mixin:"
msgstr ""

# bec6d2cc39a1439b9768068ba2e91731
#: ../Doc/library/collections.rst:1008
msgid ""
"Since some set operations create new sets, the default mixin methods need a "
"way to create new instances from an iterable. The class constructor is "
"assumed to have a signature in the form ``ClassName(iterable)``. That "
"assumption is factored-out to an internal classmethod called :meth:"
"`_from_iterable` which calls ``cls(iterable)`` to produce a new set. If the :"
"class:`Set` mixin is being used in a class with a different constructor "
"signature, you will need to override :meth:`_from_iterable` with a "
"classmethod that can construct new instances from an iterable argument."
msgstr ""

#: ../Doc/library/collections.rst:1019
msgid ""
"To override the comparisons (presumably for speed, as the semantics are "
"fixed), redefine :meth:`__le__` and then the other operations will "
"automatically follow suit."
msgstr ""

#: ../Doc/library/collections.rst:1024
msgid ""
"The :class:`Set` mixin provides a :meth:`_hash` method to compute a hash "
"value for the set; however, :meth:`__hash__` is not defined because not all "
"sets are hashable or immutable.  To add set hashabilty using mixins, inherit "
"from both :meth:`Set` and :meth:`Hashable`, then define ``__hash__ = Set."
"_hash``."
msgstr ""

#: ../Doc/library/collections.rst:1032
msgid ""
"`OrderedSet recipe <http://code.activestate.com/recipes/576694/>`_ for an "
"example built on :class:`MutableSet`."
msgstr ""

#: ../Doc/library/collections.rst:1035
msgid "For more about ABCs, see the :mod:`abc` module and :pep:`3119`."
msgstr ""

# 93ee14e8037f4e0dabd2dfae28ddf350
#: ../Doc/library/colorpicker.rst:3
msgid ":mod:`ColorPicker` --- Color selection dialog"
msgstr ""

# 3c1aa5b9a9cd4b4c9c025b7d52906ca2
#: ../Doc/library/colorpicker.rst:13
msgid ""
"The :mod:`ColorPicker` module provides access to the standard color picker "
"dialog."
msgstr ""

# 881d0e4c2a164e32a03fdc1694c467d8
#: ../Doc/library/colorpicker.rst:23
msgid ""
"Show a standard color selection dialog and allow the user to select a color. "
"The user is given instruction by the *prompt* string, and the default color "
"is set to *rgb*.  *rgb* must be a tuple giving the red, green, and blue "
"components of the color. :func:`GetColor` returns a tuple giving the user's "
"selected color and a flag indicating whether they accepted the selection of "
"cancelled."
msgstr ""

#: ../Doc/library/colorsys.rst:2
msgid ":mod:`colorsys` --- Conversions between color systems"
msgstr ""

# 5168012550c24a46a9f10cc5e8d92cf1
#: ../Doc/library/colorsys.rst:8
msgid "**Source code:** :source:`Lib/colorsys.py`"
msgstr ""

#: ../Doc/library/colorsys.rst:12
msgid ""
"The :mod:`colorsys` module defines bidirectional conversions of color values "
"between colors expressed in the RGB (Red Green Blue) color space used in "
"computer monitors and three other coordinate systems: YIQ, HLS (Hue "
"Lightness Saturation) and HSV (Hue Saturation Value).  Coordinates in all of "
"these color spaces are floating point values.  In the YIQ space, the Y "
"coordinate is between 0 and 1, but the I and Q coordinates can be positive "
"or negative.  In all other spaces, the coordinates are all between 0 and 1."
msgstr ""

#: ../Doc/library/colorsys.rst:22
msgid ""
"More information about color spaces can be found at http://www.poynton.com/"
"ColorFAQ.html and http://www.cambridgeincolour.com/tutorials/color-spaces."
"htm."
msgstr ""

#: ../Doc/library/colorsys.rst:26
msgid "The :mod:`colorsys` module defines the following functions:"
msgstr ""

#: ../Doc/library/colorsys.rst:31
msgid "Convert the color from RGB coordinates to YIQ coordinates."
msgstr ""

#: ../Doc/library/colorsys.rst:36
msgid "Convert the color from YIQ coordinates to RGB coordinates."
msgstr ""

#: ../Doc/library/colorsys.rst:41
msgid "Convert the color from RGB coordinates to HLS coordinates."
msgstr ""

#: ../Doc/library/colorsys.rst:46
msgid "Convert the color from HLS coordinates to RGB coordinates."
msgstr ""

#: ../Doc/library/colorsys.rst:51
msgid "Convert the color from RGB coordinates to HSV coordinates."
msgstr ""

#: ../Doc/library/colorsys.rst:56
msgid "Convert the color from HSV coordinates to RGB coordinates."
msgstr ""

# aa4935d7cf7744f29013017f6eb2365e
#: ../Doc/library/commands.rst:3
msgid ":mod:`commands` --- Utilities for running commands"
msgstr ""

# 36dbcd962e3f42198e8b0ad1e4fde80f
#: ../Doc/library/commands.rst:17
msgid ""
"The :mod:`commands` module contains wrapper functions for :func:`os.popen` "
"which take a system command as a string and return any output generated by "
"the command and, optionally, the exit status."
msgstr ""

# bcfd56d0bdd64277816d5eb88b4457d8
#: ../Doc/library/commands.rst:21
msgid ""
"The :mod:`subprocess` module provides more powerful facilities for spawning "
"new processes and retrieving their results.  Using the :mod:`subprocess` "
"module is preferable to using the :mod:`commands` module."
msgstr ""

# 4b7b9a7b756a4d7daef7422d7cb9c3e7
#: ../Doc/library/commands.rst:27
msgid ""
"In Python 3.x, :func:`getstatus` and two undocumented functions (:func:"
"`mk2arg` and :func:`mkarg`) have been removed.  Also, :func:"
"`getstatusoutput` and :func:`getoutput` have been moved to the :mod:"
"`subprocess` module."
msgstr ""

# 79382633f7c14bb7a58c6ebcd032ec8e
#: ../Doc/library/commands.rst:32
msgid "The :mod:`commands` module defines the following functions:"
msgstr ""

# c460a16f65c444faa10ecf7348fa1da5
#: ../Doc/library/commands.rst:37
msgid ""
"Execute the string *cmd* in a shell with :func:`os.popen` and return a 2-"
"tuple ``(status, output)``.  *cmd* is actually run as ``{ cmd ; } 2>&1``, so "
"that the returned output will contain output or error messages. A trailing "
"newline is stripped from the output. The exit status for the command can be "
"interpreted according to the rules for the C function :c:func:`wait`."
msgstr ""

# c5ded7e1c94445208c6cae3d275f0ae3
#: ../Doc/library/commands.rst:46
msgid ""
"Like :func:`getstatusoutput`, except the exit status is ignored and the "
"return value is a string containing the command's output."
msgstr ""

# 586a586c60b44ee59d8ef3e7e979ec98
#: ../Doc/library/commands.rst:52
msgid ""
"Return the output of ``ls -ld file`` as a string.  This function uses the :"
"func:`getoutput` function, and properly escapes backslashes and dollar signs "
"in the argument."
msgstr ""

# ddc9af8b2dcc46f7824e5af75b29c603
# 3d371b668eed4e8a8e4ebb92812cec73
#: ../Doc/library/commands.rst:79 ../Doc/library/popen2.rst:198
msgid "Module for spawning and managing subprocesses."
msgstr ""

#: ../Doc/library/compileall.rst:2
msgid ":mod:`compileall` --- Byte-compile Python libraries"
msgstr ""

# 8a203966bf864480921ce3a0f8554bf0
#: ../Doc/library/compileall.rst:8
msgid ""
"This module provides some utility functions to support installing Python "
"libraries.  These functions compile Python source files in a directory tree. "
"This module can be used to create the cached byte-code files at library "
"installation time, which makes them available for use even by users who "
"don't have write permission to the library directories."
msgstr ""

# 16dd46d2a231423a94f6b377929918a1
#: ../Doc/library/compileall.rst:16
msgid "Command-line use"
msgstr ""

# f7d21de2ff254d7d83d5f9f54e90d254
#: ../Doc/library/compileall.rst:18
msgid ""
"This module can work as a script (using :program:`python -m compileall`) to "
"compile Python sources."
msgstr ""

# bbf30f6e12684286b84b3c938401ee3e
#: ../Doc/library/compileall.rst:25
msgid ""
"Positional arguments are files to compile or directories that contain source "
"files, traversed recursively.  If no argument is given, behave as if the "
"command line was ``-l <directories from sys.path>``."
msgstr ""

# 65205bcdff984130b7760f9657cbc4e6
#: ../Doc/library/compileall.rst:31
msgid ""
"Do not recurse into subdirectories, only compile source code files directly "
"contained in the named or implied directories."
msgstr ""

# d40177499f094708a2e7af53f616d2e8
#: ../Doc/library/compileall.rst:36
msgid "Force rebuild even if timestamps are up-to-date."
msgstr ""

# a28741f33e8b4596896d202005d6558f
#: ../Doc/library/compileall.rst:40
msgid "Do not print the list of files compiled, print only error messages."
msgstr ""

# 4740982f84fa42fba04b50e05dc11be2
#: ../Doc/library/compileall.rst:44
msgid ""
"Directory prepended to the path to each file being compiled.  This will "
"appear in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""

# 9f8c1d8a3cc3473eb9c56aa5259721bf
#: ../Doc/library/compileall.rst:52
msgid ""
"regex is used to search the full path to each file considered for "
"compilation, and if the regex produces a match, the file is skipped."
msgstr ""

# ba3d38bb3f614e3da4823dce66d31258
#: ../Doc/library/compileall.rst:57
msgid ""
"Read the file ``list`` and add each line that it contains to the list of "
"files and directories to compile.  If ``list`` is ``-``, read lines from "
"``stdin``."
msgstr ""

# 6931cc6948d94b988f889dc68620bfc0
#: ../Doc/library/compileall.rst:66
msgid "Public functions"
msgstr ""

# eed20510159346ec90c5b3bb1d012329
#: ../Doc/library/compileall.rst:70
msgid ""
"Recursively descend the directory tree named by *dir*, compiling all :file:`."
"py` files along the way."
msgstr ""

# 7ea4c1801ab54a8b8226c6fafc7dfe04
#: ../Doc/library/compileall.rst:73
msgid ""
"The *maxlevels* parameter is used to limit the depth of the recursion; it "
"defaults to ``10``."
msgstr ""

# 1ac47e8d4e614c319bd9851ad239b228
#: ../Doc/library/compileall.rst:76
msgid ""
"If *ddir* is given, it is prepended to the path to each file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""

# f4ee6f74c72f4409bb6481d80be9244d
#: ../Doc/library/compileall.rst:82
msgid ""
"If *force* is true, modules are re-compiled even if the timestamps are up to "
"date."
msgstr ""

# b4ba42a123a54c05862fb6c69b0d2ded
#: ../Doc/library/compileall.rst:85
msgid ""
"If *rx* is given, its search method is called on the complete path to each "
"file considered for compilation, and if it returns a true value, the file is "
"skipped."
msgstr ""

# 196d1136b4f94ed890dbf9838bda98c4
# 56e4b63cdac04152b04d5cd4f3a9b520
#: ../Doc/library/compileall.rst:89 ../Doc/library/compileall.rst:107
msgid ""
"If *quiet* is true, nothing is printed to the standard output unless errors "
"occur."
msgstr ""

# 7e50ac98e3544899aed7743956e32cc9
#: ../Doc/library/compileall.rst:95
msgid "Compile the file with path *fullname*."
msgstr ""

# bfb3978ad08543afb2b57dbd7548d756
#: ../Doc/library/compileall.rst:97
msgid ""
"If *ddir* is given, it is prepended to the path to the file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""

# fb8e2c89224e429eae4c21b4c6aa85d6
#: ../Doc/library/compileall.rst:103
msgid ""
"If *rx* is given, its search method is passed the full path name to the file "
"being compiled, and if it returns a true value, the file is not compiled and "
"``True`` is returned."
msgstr ""

# 1718971c2d7c444a836b6283fab4fcf9
#: ../Doc/library/compileall.rst:115
msgid ""
"Byte-compile all the :file:`.py` files found along ``sys.path``. If "
"*skip_curdir* is true (the default), the current directory is not included "
"in the search.  All other parameters are passed to the :func:`compile_dir` "
"function.  Note that unlike the other compile functions, ``maxlevels`` "
"defaults to ``0``."
msgstr ""

#: ../Doc/library/compileall.rst:121
msgid ""
"To force a recompile of all the :file:`.py` files in the :file:`Lib/` "
"subdirectory and all its subdirectories::"
msgstr ""

#: ../Doc/library/compileall.rst:136
msgid "Byte-compile a single source file."
msgstr ""

# d998fb2b0d574218b891467257a54ccf
#: ../Doc/library/compiler.rst:6
msgid "Python compiler package"
msgstr ""

# 885fc5ccf7c344fe97a4c578920cde35
#: ../Doc/library/compiler.rst:14
msgid ""
"The Python compiler package is a tool for analyzing Python source code and "
"generating Python bytecode.  The compiler contains libraries to generate an "
"abstract syntax tree from Python source code and to generate Python :term:"
"`bytecode` from the tree."
msgstr ""

# b21b8d30e7754bd9bfc9d71d5ee7e37d
#: ../Doc/library/compiler.rst:19
msgid ""
"The :mod:`compiler` package is a Python source to bytecode translator "
"written in Python.  It uses the built-in parser and standard :mod:`parser` "
"module to generate a concrete syntax tree.  This tree is used to generate an "
"abstract syntax tree (AST) and then Python bytecode."
msgstr ""

# 31132e3634164c7ab70733bd48060f40
#: ../Doc/library/compiler.rst:24
msgid ""
"The full functionality of the package duplicates the built-in compiler "
"provided with the Python interpreter.  It is intended to match its behavior "
"almost exactly.  Why implement another compiler that does the same thing?  "
"The package is useful for a variety of purposes.  It can be modified more "
"easily than the built-in compiler.  The AST it generates is useful for "
"analyzing Python source code."
msgstr ""

# 93ddc15394f34247a94b98faacc525dc
#: ../Doc/library/compiler.rst:31
msgid ""
"This chapter explains how the various components of the :mod:`compiler` "
"package work.  It blends reference material with a tutorial."
msgstr ""

# ed187d52b9fe4346b484795867c28868
#: ../Doc/library/compiler.rst:36
msgid "The basic interface"
msgstr ""

# cbc1e2d6014c4368b9362d7446990cf2
#: ../Doc/library/compiler.rst:43
msgid ""
"The top-level of the package defines four functions.  If you import :mod:"
"`compiler`, you will get these functions and a collection of modules "
"contained in the package."
msgstr ""

# 70e3a6cb9d154d4eabae5bcf4122e88d
#: ../Doc/library/compiler.rst:50
msgid ""
"Returns an abstract syntax tree for the Python source code in *buf*. The "
"function raises :exc:`SyntaxError` if there is an error in the source code.  "
"The return value is a :class:`compiler.ast.Module` instance that contains "
"the tree."
msgstr ""

# 12abd3aac86549f484157331462cd4b8
#: ../Doc/library/compiler.rst:57
msgid ""
"Return an abstract syntax tree for the Python source code in the file "
"specified by *path*.  It is equivalent to ``parse(open(path).read())``."
msgstr ""

# 77bf9156ba2c4eae96f1b8639eec2150
#: ../Doc/library/compiler.rst:63
msgid ""
"Do a pre-order walk over the abstract syntax tree *ast*.  Call the "
"appropriate method on the *visitor* instance for each node encountered."
msgstr ""

# b6af40082f8c46dfa9c99010a88944d9
#: ../Doc/library/compiler.rst:69
msgid ""
"Compile the string *source*, a Python module, statement or expression, into "
"a code object that can be executed by the exec statement or :func:`eval`. "
"This function is a replacement for the built-in :func:`compile` function."
msgstr ""

# d9eb1627afa84d0b9636f9c488d0a4a9
#: ../Doc/library/compiler.rst:73
msgid "The *filename* will be used for run-time error messages."
msgstr ""

# a84ef98e501a4aec8cf5715bccbb17d4
#: ../Doc/library/compiler.rst:75
msgid ""
"The *mode* must be 'exec' to compile a module, 'single' to compile a single "
"(interactive) statement, or 'eval' to compile an expression."
msgstr ""

# 135fbccd095740a59a9cfa68cca5bfeb
#: ../Doc/library/compiler.rst:78
msgid ""
"The *flags* and *dont_inherit* arguments affect future-related statements, "
"but are not supported yet."
msgstr ""

# c9ff66e4866d426c9467b0a86e4b1fba
#: ../Doc/library/compiler.rst:84
msgid "Compiles the file *source* and generates a .pyc file."
msgstr ""

# 9ba59312cb5c4111a9807557f063aefc
#: ../Doc/library/compiler.rst:86
msgid ""
"The :mod:`compiler` package contains the following modules: :mod:`ast`, :mod:"
"`consts`, :mod:`future`, :mod:`misc`, :mod:`pyassem`, :mod:`pycodegen`, :mod:"
"`symbols`, :mod:`transformer`, and :mod:`visitor`."
msgstr ""

#: ../Doc/library/compiler.rst:92 ../Doc/library/profile.rst:488
msgid "Limitations"
msgstr ""

# a327b01f829a4dbe88112fdd72c3a8bc
#: ../Doc/library/compiler.rst:94
msgid ""
"There are some problems with the error checking of the compiler package.  "
"The interpreter detects syntax errors in two distinct phases.  One set of "
"errors is detected by the interpreter's parser, the other set by the "
"compiler.  The compiler package relies on the interpreter's parser, so it "
"get the first phases of error checking for free.  It implements the second "
"phase itself, and that implementation is incomplete.  For example, the "
"compiler package does not raise an error if a name appears more than once in "
"an argument list:  ``def f(x, x): ...``"
msgstr ""

# ac6898448098455f92cf72406bf7b79f
#: ../Doc/library/compiler.rst:103
msgid "A future version of the compiler should fix these problems."
msgstr ""

# 5f8e1188f92e45b08f00eb681922b99e
#: ../Doc/library/compiler.rst:107
msgid "Python Abstract Syntax"
msgstr ""

# 5511c35fbc3444359a653ec87af83706
#: ../Doc/library/compiler.rst:109
msgid ""
"The :mod:`compiler.ast` module defines an abstract syntax for Python.  In "
"the abstract syntax tree, each node represents a syntactic construct.  The "
"root of the tree is :class:`Module` object."
msgstr ""

# 7e6cae74128647ae8006f47f5cf2618b
#: ../Doc/library/compiler.rst:113
msgid ""
"The abstract syntax offers a higher level interface to parsed Python source "
"code.  The :mod:`parser` module and the compiler written in C for the Python "
"interpreter use a concrete syntax tree.  The concrete syntax is tied closely "
"to the grammar description used for the Python parser.  Instead of a single "
"node for a construct, there are often several levels of nested nodes that "
"are introduced by Python's precedence rules."
msgstr ""

# 16759b127bd8461d9c1302903f6caf07
#: ../Doc/library/compiler.rst:120
msgid ""
"The abstract syntax tree is created by the :mod:`compiler.transformer` "
"module. The transformer relies on the built-in Python parser to generate a "
"concrete syntax tree.  It generates an abstract syntax tree from the "
"concrete tree."
msgstr ""

# dc45b3dd76d0494c96b680b9fa28c52d
#: ../Doc/library/compiler.rst:128
msgid ""
"The :mod:`transformer` module was created by Greg Stein and Bill Tutt for an "
"experimental Python-to-C compiler.  The current version contains a number of "
"modifications and improvements, but the basic form of the abstract syntax "
"and of the transformer are due to Stein and Tutt."
msgstr ""

# 7d663aad22f74dac9da8f8b1bb29c85c
#: ../Doc/library/compiler.rst:135
msgid "AST Nodes"
msgstr ""

# c8feecbc13434676b120fdec7c810579
#: ../Doc/library/compiler.rst:140
msgid ""
"The :mod:`compiler.ast` module is generated from a text file that describes "
"each node type and its elements.  Each node type is represented as a class "
"that inherits from the abstract base class :class:`compiler.ast.Node` and "
"defines a set of named attributes for child nodes."
msgstr ""

# a21233b3c12a493ebafab7d6f2bfb79d
#: ../Doc/library/compiler.rst:148
msgid ""
"The :class:`Node` instances are created automatically by the parser "
"generator. The recommended interface for specific :class:`Node` instances is "
"to use the public attributes to access child nodes.  A public attribute may "
"be bound to a single node or to a sequence of nodes, depending on the :class:"
"`Node` type.  For example, the :attr:`bases` attribute of the :class:`Class` "
"node, is bound to a list of base class nodes, and the :attr:`doc` attribute "
"is bound to a single node."
msgstr ""

# 70c4e088626f40d4af0296284a89ff73
#: ../Doc/library/compiler.rst:156
msgid ""
"Each :class:`Node` instance has a :attr:`lineno` attribute which may be "
"``None``.  XXX Not sure what the rules are for which nodes will have a "
"useful lineno."
msgstr ""

# 00736333e8cb4fddbca5759040ee5e3d
#: ../Doc/library/compiler.rst:160
msgid "All :class:`Node` objects offer the following methods:"
msgstr ""

# baeb7ac902764927bac593e04046f2d0
#: ../Doc/library/compiler.rst:165
msgid ""
"Returns a flattened list of the child nodes and objects in the order they "
"occur.  Specifically, the order of the nodes is the order in which they "
"appear in the Python grammar.  Not all of the children are :class:`Node` "
"instances.  The names of functions and classes, for example, are plain "
"strings."
msgstr ""

# d8df83e9b5ff4e3aa80ee883d34def07
#: ../Doc/library/compiler.rst:174
msgid ""
"Returns a flattened list of the child nodes in the order they occur.  This "
"method is like :meth:`getChildren`, except that it only returns those "
"children that are :class:`Node` instances."
msgstr ""

# 1296fb6eb7f14ba8ac799b5121202039
#: ../Doc/library/compiler.rst:179
msgid ""
"Two examples illustrate the general structure of :class:`Node` classes.  "
"The :keyword:`while` statement is defined by the following grammar "
"production::"
msgstr ""

# df52e3e1a4044c42bdbee1867661b72b
#: ../Doc/library/compiler.rst:185
msgid ""
"The :class:`While` node has three attributes: :attr:`test`, :attr:`body`, "
"and :attr:`else_`.  (If the natural name for an attribute is also a Python "
"reserved word, it can't be used as an attribute name.  An underscore is "
"appended to the word to make it a legal identifier, hence :attr:`else_` "
"instead of :keyword:`else`.)"
msgstr ""

# c46dfa4084cb45d7b7ee82e80993bb4f
#: ../Doc/library/compiler.rst:191
msgid ""
"The :keyword:`if` statement is more complicated because it can include "
"several tests.   ::"
msgstr ""

# 189b6c4f15b64cd0a65217823b59fb07
#: ../Doc/library/compiler.rst:196
msgid ""
"The :class:`If` node only defines two attributes: :attr:`tests` and :attr:"
"`else_`.  The :attr:`tests` attribute is a sequence of test expression, "
"consequent body pairs.  There is one pair for each :keyword:`if`/:keyword:"
"`elif` clause.  The first element of the pair is the test expression.  The "
"second elements is a :class:`Stmt` node that contains the code to execute if "
"the test is true."
msgstr ""

# 2d7c968b2c1d464d915aad59c8941151
#: ../Doc/library/compiler.rst:203
msgid ""
"The :meth:`getChildren` method of :class:`If` returns a flat list of child "
"nodes.  If there are three :keyword:`if`/:keyword:`elif` clauses and no :"
"keyword:`else` clause, then :meth:`getChildren` will return a list of six "
"elements: the first test expression, the first :class:`Stmt`, the second "
"text expression, etc."
msgstr ""

# 3499f4731f5c4ac6bae0bf44549e6c18
#: ../Doc/library/compiler.rst:209
msgid ""
"The following table lists each of the :class:`Node` subclasses defined in :"
"mod:`compiler.ast` and each of the public attributes available on their "
"instances.  The values of most of the attributes are themselves :class:"
"`Node` instances or sequences of instances.  When the value is something "
"other than an instance, the type is noted in the comment.  The attributes "
"are listed in the order in which they are returned by :meth:`getChildren` "
"and :meth:`getChildNodes`."
msgstr ""

# d80fef9f9e084bbe9c1aa1fdcae86ede
#: ../Doc/library/compiler.rst:218
msgid "Node type"
msgstr ""

#: ../Doc/library/compiler.rst:218 ../Doc/library/curses.rst:1240
#: ../Doc/library/datetime.rst:205 ../Doc/library/grp.rst:18
#: ../Doc/library/inspect.rst:40 ../Doc/library/pwd.rst:18
#: ../Doc/library/spwd.rst:23 ../Doc/library/sys.rst:603
#: ../Doc/library/time.rst:401 ../Doc/library/urlparse.rst:93
#: ../Doc/library/urlparse.rst:197
msgid "Attribute"
msgstr ""

# 7436db8ba7004da5857c227858118f76
#: ../Doc/library/compiler.rst:220
msgid ":class:`Add`"
msgstr ""

# 03c9e579f1fa4699b9755cd7f9ac15ce
# eedc3348438f4ec59f8c500a1ebd0f90
# 1644d888d3bc4334853ca970f99299a0
# 3d5dadb441da4597bd1159d5f6e329f5
# faf3893af56f45c0b1697aef116f6d2b
# 79ed679b7e63447092781ae21f43a026
# a081591cd42843eaa787686e3aa98eb3
# 89868065d1b34d2d901327830850e847
# 612bdceb894c4ba49e17f227a5ae59d6
#: ../Doc/library/compiler.rst:220 ../Doc/library/compiler.rst:304
#: ../Doc/library/compiler.rst:318 ../Doc/library/compiler.rst:390
#: ../Doc/library/compiler.rst:408 ../Doc/library/compiler.rst:418
#: ../Doc/library/compiler.rst:430 ../Doc/library/compiler.rst:450
#: ../Doc/library/compiler.rst:466
msgid ":attr:`left`"
msgstr ""

# 8af010b3dd9d47c09132690fa78bba71
#: ../Doc/library/compiler.rst:220
msgid "left operand"
msgstr ""

# 01d2844ae5d54f83a865d017a59dd636
# aa29d7977a634cf1a2b39e91ecc2e1e2
# c16d41b1ba6e43719f1ff2282f5e61a3
# 209bf216b50a4da683befb6a72a9a532
# f3e32f658d0c442da32511243ad197ea
# 4c089f86e7e74511bf43b441cb202a83
# 9f119b6560a14af9821530e4f5960d56
# 1453696139c04051a59ceca74cf6c0ad
# e3ae2f86c98c42bc89059f8f61ba3551
#: ../Doc/library/compiler.rst:222 ../Doc/library/compiler.rst:306
#: ../Doc/library/compiler.rst:320 ../Doc/library/compiler.rst:392
#: ../Doc/library/compiler.rst:410 ../Doc/library/compiler.rst:420
#: ../Doc/library/compiler.rst:432 ../Doc/library/compiler.rst:452
#: ../Doc/library/compiler.rst:468
msgid ":attr:`right`"
msgstr ""

# 39d9af53ed044e9bb5bf90c5b21a8de0
#: ../Doc/library/compiler.rst:222
msgid "right operand"
msgstr ""

# 022b128a5d57473e9247c180f8a6b680
#: ../Doc/library/compiler.rst:224
msgid ":class:`And`"
msgstr ""

# 3cbf85df686345fa8147de925469adcd
# 1fa9d69707aa421dbdcd52b79aadf8c8
# bb703ebaec004c5183ca50593c666829
# f0420a5ff33f4cf9944114478b8c543b
# 5079d81ae2f941ff9626b66c945c0e70
# 128c2307657c40818fcda21ecf54c880
# 5eef0211fca04de2b69a65377f48f1d4
# dc27c52cf2494984952d75bd2af8b481
# c5335829683a4275938f2864d9e6b35e
# 8eb625b5d7e84c82bfe1a8fb66d7cc96
# fa83a618a5e243b8b15c5da10b048ad9
# 79b3879c70db47d1bafc09809b7a6a19
# 111fb504c01844c7837d80b96e8a0452
# 48d34844f337475282bb12a05e6adca8
# 11f68d83ec8c4a369f0c8330adcf47fc
#: ../Doc/library/compiler.rst:224 ../Doc/library/compiler.rst:236
#: ../Doc/library/compiler.rst:243 ../Doc/library/compiler.rst:251
#: ../Doc/library/compiler.rst:264 ../Doc/library/compiler.rst:266
#: ../Doc/library/compiler.rst:268 ../Doc/library/compiler.rst:297
#: ../Doc/library/compiler.rst:394 ../Doc/library/compiler.rst:426
#: ../Doc/library/compiler.rst:434 ../Doc/library/compiler.rst:438
#: ../Doc/library/compiler.rst:462 ../Doc/library/compiler.rst:464
#: ../Doc/library/compiler.rst:486
msgid ":attr:`nodes`"
msgstr ""

# 61de672dff394fe296dd31903a83925a
#: ../Doc/library/compiler.rst:224
msgid "list of operands"
msgstr ""

# c9a32eb86c2249588bb0d54b3f7497ba
#: ../Doc/library/compiler.rst:226
msgid ":class:`AssAttr`"
msgstr ""

# c3f23c22b47c4a23826f8b81fb8a0050
#: ../Doc/library/compiler.rst:226
msgid "*attribute as target of assignment*"
msgstr ""

# d05e09b7a79349a3ab63838175fa8036
# 16a2a09ceeac4b00b0f097a5da32889e
# 7ef510327f454bcbb9827cc08b596660
# 7caecb6fa4084055bb513d30370b2579
# bd0f4f5967504b9ea8cd86a288345eb3
# 5440dffcad6f4f54be8c317d865d27d2
# e82ae91e597749e091263d5c7ad59923
# 1230c03afe9542379344e5cf311b59fa
# 8a27455973744cd4887929142871f1f8
# 77df437a62e14ee0a0702b50ec696d95
# a74f6314926b4606b24711175e4f3e3c
# 6b8df6410aa74464815766faa276ea94
# 44de8db47f2d46b683d93f73bff48080
# dfcbcb8e858041e5831b4515ba44531e
# 78d106d66ebd49f1a66447707502e2cf
# 7f6ec908de694ef5b4d43aa568c9188d
# eb4f53b693b844d4aad3fa9d76f4972a
# bdd4b0da7dce43c8a17fc7191cc358c3
#: ../Doc/library/compiler.rst:229 ../Doc/library/compiler.rst:254
#: ../Doc/library/compiler.rst:260 ../Doc/library/compiler.rst:262
#: ../Doc/library/compiler.rst:289 ../Doc/library/compiler.rst:302
#: ../Doc/library/compiler.rst:312 ../Doc/library/compiler.rst:360
#: ../Doc/library/compiler.rst:364 ../Doc/library/compiler.rst:376
#: ../Doc/library/compiler.rst:380 ../Doc/library/compiler.rst:396
#: ../Doc/library/compiler.rst:424 ../Doc/library/compiler.rst:454
#: ../Doc/library/compiler.rst:470 ../Doc/library/compiler.rst:488
#: ../Doc/library/compiler.rst:490 ../Doc/library/compiler.rst:498
msgid ":attr:`expr`"
msgstr ""

# f4aba99c1f7744e984f000c4f321687a
#: ../Doc/library/compiler.rst:229
msgid "expression on the left-hand side of the dot"
msgstr ""

# 22bf588702e04caeb1b79d42e5ca8914
# 5589f5be3dc74034b58e89cd7493c9ac
#: ../Doc/library/compiler.rst:232 ../Doc/library/compiler.rst:366
msgid ":attr:`attrname`"
msgstr ""

# 38104022579f4559b983582eb7c02561
#: ../Doc/library/compiler.rst:232
msgid "the attribute name, a string"
msgstr ""

# 92f442793c1640a890d7770d7ad77943
# ce4398abb1ef4767b6cda8994a6c5fbb
# 2c7f5a549eca48ef9ce9fe9d03a76607
# 089d028f29654b039b7d05e045c59c6a
# 48e77b225db2431eb6237820a09fdd3a
# ffee6c8055ed499db24f6a7eab3ffaff
#: ../Doc/library/compiler.rst:234 ../Doc/library/compiler.rst:241
#: ../Doc/library/compiler.rst:343 ../Doc/library/compiler.rst:386
#: ../Doc/library/compiler.rst:456 ../Doc/library/compiler.rst:472
msgid ":attr:`flags`"
msgstr ""

# c8894934a6c34bfdba21893ea59f7f0d
# b1d83ed6218b4349b4f0fa588587287b
#: ../Doc/library/compiler.rst:234 ../Doc/library/compiler.rst:241
msgid "XXX"
msgstr ""

# b45842647123424ca12a29721cde09d2
#: ../Doc/library/compiler.rst:236
msgid ":class:`AssList`"
msgstr ""

# 68e47140667b41e68ea4cffd87088f07
#: ../Doc/library/compiler.rst:236
msgid "list of list elements being assigned to"
msgstr ""

# bc783b5022524fffba377b8bee27d6e2
#: ../Doc/library/compiler.rst:239
msgid ":class:`AssName`"
msgstr ""

# 9da5d07a13e3413e8e8eb51bf98ccddc
# 78f5eeaf1736463382b8dfb6e24c7d8d
# 6ae9f1a563cd45b5a8e38dfe241d0d3c
# cd03c0cf713245b2a95474759f0a630f
# 9477d63fd9604b0c862cb09fd3281123
#: ../Doc/library/compiler.rst:239 ../Doc/library/compiler.rst:280
#: ../Doc/library/compiler.rst:336 ../Doc/library/compiler.rst:378
#: ../Doc/library/compiler.rst:422
msgid ":attr:`name`"
msgstr ""

# 782431d1fca24611a33ea94a0ff616c3
#: ../Doc/library/compiler.rst:239
msgid "name being assigned to"
msgstr ""

# 78f08fcf19934bf5a6d87db388c1a185
#: ../Doc/library/compiler.rst:243
msgid ":class:`AssTuple`"
msgstr ""

# f177a75649d34416b0b708b42424b1be
#: ../Doc/library/compiler.rst:243
msgid "list of tuple elements being assigned to"
msgstr ""

# 64b1c3aa50a543d098578a7d880353f1
#: ../Doc/library/compiler.rst:246
msgid ":class:`Assert`"
msgstr ""

# ade4add5763441d0aa65a29fd1cfd8d3
# 680b7a52a2d6466f98311c8e01edd18c
# e168735b5af64c0ea3b363740e2f34ba
# 7169da900b93496ba9374a1c9fd23f72
#: ../Doc/library/compiler.rst:246 ../Doc/library/compiler.rst:358
#: ../Doc/library/compiler.rst:406 ../Doc/library/compiler.rst:492
msgid ":attr:`test`"
msgstr ""

# 544e8430a1314f39b011181e78316429
#: ../Doc/library/compiler.rst:246
msgid "the expression to be tested"
msgstr ""

# 1ac723825d1e485c88c4fd3eb23c4424
#: ../Doc/library/compiler.rst:248
msgid ":attr:`fail`"
msgstr ""

# 663c6a47cda04d28a5659010110e399d
#: ../Doc/library/compiler.rst:248
msgid "the value of the :exc:`AssertionError`"
msgstr ""

# c250a26403e246258b971bac9271ce51
#: ../Doc/library/compiler.rst:251
msgid ":class:`Assign`"
msgstr ""

# 08156820fc06495882eff4f850000792
#: ../Doc/library/compiler.rst:251
msgid "a list of assignment targets, one per equal sign"
msgstr ""

# 0c3501e2d6b34d4daad1f7251c55291c
#: ../Doc/library/compiler.rst:254
msgid "the value being assigned"
msgstr ""

# acdb8727540b469a8c227be91953f91a
#: ../Doc/library/compiler.rst:256
msgid ":class:`AugAssign`"
msgstr ""

#: ../Doc/library/compiler.rst:256 ../Doc/library/compiler.rst:272
#: ../Doc/library/compiler.rst:310 ../Doc/library/compiler.rst:415
#: ../Doc/library/uuid.rst:81
msgid ":attr:`node`"
msgstr ""

# 94fefcc8d61a45908e7be3b771a12ca7
#: ../Doc/library/compiler.rst:258
msgid ":attr:`op`"
msgstr ""

# 748cfef7f3e3489c9dd97c4708111521
#: ../Doc/library/compiler.rst:262
msgid ":class:`Backquote`"
msgstr ""

# 1017836a14df4b3fa4041c1aaf2cb56d
#: ../Doc/library/compiler.rst:264
msgid ":class:`Bitand`"
msgstr ""

# 6e521b7d1a7741f89d73ed37b686e949
#: ../Doc/library/compiler.rst:266
msgid ":class:`Bitor`"
msgstr ""

# 4790a0fb566144b9a2a71d7f64f7d44a
#: ../Doc/library/compiler.rst:268
msgid ":class:`Bitxor`"
msgstr ""

# 261d777399ae4983b7535dc03e8dbe81
#: ../Doc/library/compiler.rst:270
msgid ":class:`Break`"
msgstr ""

# 3a58342bb4c74e61a28c19277e8bc137
#: ../Doc/library/compiler.rst:272
msgid ":class:`CallFunc`"
msgstr ""

# ed6e001a633a4002859cb9bcca351212
#: ../Doc/library/compiler.rst:272
msgid "expression for the callee"
msgstr ""

# 89c089499dcb4aa696a2e9737a4ba848
#: ../Doc/library/compiler.rst:274
msgid ":attr:`args`"
msgstr ""

# a0f51894bca3406cb319683924586e2f
#: ../Doc/library/compiler.rst:274
msgid "a list of arguments"
msgstr ""

# b0c40b1c730e406aa779a9725c577c33
#: ../Doc/library/compiler.rst:276
msgid ":attr:`star_args`"
msgstr ""

# 202bbab58b0b4ddcbccefeab349cbf5d
#: ../Doc/library/compiler.rst:276
msgid "the extended \\*-arg value"
msgstr ""

# c7e788f80ac44604bc47de1baecc844e
#: ../Doc/library/compiler.rst:278
msgid ":attr:`dstar_args`"
msgstr ""

# c7e4053e59534b4fa0bbd0591e25dd15
#: ../Doc/library/compiler.rst:278
msgid "the extended \\*\\*-arg value"
msgstr ""

# 554cf83a92454c08bb381c03186d1393
#: ../Doc/library/compiler.rst:280
msgid ":class:`Class`"
msgstr ""

# 9621230ccff749ed88abf6689db0c473
#: ../Doc/library/compiler.rst:280
msgid "the name of the class, a string"
msgstr ""

# f17d978302c04f698bf8d39805b2df4d
#: ../Doc/library/compiler.rst:282
msgid ":attr:`bases`"
msgstr ""

# c4107ece7e2343538bf4ecb4c584b225
#: ../Doc/library/compiler.rst:282
msgid "a list of base classes"
msgstr ""

# c3f14d8d9652498d920600ba01a8f8e1
# ce0da66dcf8244da8bb01edba79f67b4
# 04811c8a59e940d7889734867dcee291
#: ../Doc/library/compiler.rst:284 ../Doc/library/compiler.rst:345
#: ../Doc/library/compiler.rst:412
msgid ":attr:`doc`"
msgstr ""

# 3cfb7afc109a4eb896e87c535b7c5687
# acf8bde9dfc0436497d001d9c2d9eeee
# 3e6be9df64df4c90893724f188a7f104
#: ../Doc/library/compiler.rst:284 ../Doc/library/compiler.rst:345
#: ../Doc/library/compiler.rst:412
msgid "doc string, a string or ``None``"
msgstr ""

# 956b7930c62b47bdb4322f6376abb93c
# 9cdb708476674457863629ff1ed3634b
# 50b8684957034638b200c5162339a71a
# 4f802b1cd28d4673bb68d0daf7999ea4
#: ../Doc/library/compiler.rst:287 ../Doc/library/compiler.rst:348
#: ../Doc/library/compiler.rst:350 ../Doc/library/compiler.rst:388
msgid ":attr:`code`"
msgstr ""

# 6c6806336e6044b3bf419e8b8f374b7b
#: ../Doc/library/compiler.rst:287
msgid "the body of the class statement"
msgstr ""

# 9b8c8a69b5d34d4a804e628b31f84e01
#: ../Doc/library/compiler.rst:289
msgid ":class:`Compare`"
msgstr ""

# 598ad4d74ff846e2acce6a1837d61ab0
#: ../Doc/library/compiler.rst:291
msgid ":attr:`ops`"
msgstr ""

# cea49ab5544b4c618c47bf5c8d382d6e
#: ../Doc/library/compiler.rst:293
msgid ":class:`Const`"
msgstr ""

# df9473addf884d968942f7323ec46d40
# 7b424407daac4586899671dfa02cbc0b
# bad81b90f9fe4b2a965066674160457d
#: ../Doc/library/compiler.rst:293 ../Doc/library/compiler.rst:448
#: ../Doc/library/compiler.rst:504
msgid ":attr:`value`"
msgstr ""

# d08cdc6c090644a6b92183a63c7d8fe7
#: ../Doc/library/compiler.rst:295
msgid ":class:`Continue`"
msgstr ""

# be28d074e0284ea9acf9ac9d7c20290e
#: ../Doc/library/compiler.rst:297
msgid ":class:`Decorators`"
msgstr ""

# 9aa927cfdd20429e93afa3586c6a47a4
#: ../Doc/library/compiler.rst:297
msgid "List of function decorator expressions"
msgstr ""

# a8069ccefbc84b1a80749ceca43f0804
#: ../Doc/library/compiler.rst:300
msgid ":class:`Dict`"
msgstr ""

# 72b4a049d3e74890882fddc856cf1447
#: ../Doc/library/compiler.rst:300
msgid ":attr:`items`"
msgstr ""

# a827e85a4c0048f786d3756fa7cc4b66
#: ../Doc/library/compiler.rst:302
msgid ":class:`Discard`"
msgstr ""

# 3094bd30af574a2e91b2dc108ba285c3
#: ../Doc/library/compiler.rst:304
msgid ":class:`Div`"
msgstr ""

# 81d2ba65a2114304af420099d44649b1
#: ../Doc/library/compiler.rst:308
msgid ":class:`Ellipsis`"
msgstr ""

# 79cb18cb650a4e8f987ed8f451ef44af
#: ../Doc/library/compiler.rst:310
msgid ":class:`Expression`"
msgstr ""

# 431774b8d6964fa2890ddc3c359c34b2
#: ../Doc/library/compiler.rst:312
msgid ":class:`Exec`"
msgstr ""

# 0117bef594164428ba9d3988772c5db8
#: ../Doc/library/compiler.rst:314
msgid ":attr:`locals`"
msgstr ""

# 764f2061071f4bf4bb14508291bd865b
#: ../Doc/library/compiler.rst:316
msgid ":attr:`globals`"
msgstr ""

# 850eabbb46b947a2b56e6084377dedf2
#: ../Doc/library/compiler.rst:318
msgid ":class:`FloorDiv`"
msgstr ""

# d51b4547062140dc8413cbf481b6cc3c
#: ../Doc/library/compiler.rst:322
msgid ":class:`For`"
msgstr ""

# 2b5a9f6250054eb5bc022489f77507fb
# c1293357fd2b4dc4ab1a038d427fc9ca
# e4822dad88a6432fbaeac1df25b220b3
#: ../Doc/library/compiler.rst:322 ../Doc/library/compiler.rst:352
#: ../Doc/library/compiler.rst:400
msgid ":attr:`assign`"
msgstr ""

# 9b38e27cce824761a78dd4faa873681f
# 4174a48141124646919f7e6392f9e1c1
#: ../Doc/library/compiler.rst:324 ../Doc/library/compiler.rst:402
msgid ":attr:`list`"
msgstr ""

# 2c5ad69ab076469d99396a1e99b002da
# 80ec6302473c43f2b332a34bc3f0e150
# 6600d2c1e6bd4ac58d255a7252b7a17d
# 090afeb669e94bf8b5a5810a9468c818
# 92fd23480a894654882150ec81bc7bca
#: ../Doc/library/compiler.rst:326 ../Doc/library/compiler.rst:476
#: ../Doc/library/compiler.rst:482 ../Doc/library/compiler.rst:494
#: ../Doc/library/compiler.rst:502
msgid ":attr:`body`"
msgstr ""

# c95f5353f0e24329b3aba42bce332d5b
# c674ff48ec714333bd9a51b7aadccf36
# 7e32a000cfd44ecaaeddfe4095911f61
# ca01b4455dc44fb9aaa855b5f85d899b
#: ../Doc/library/compiler.rst:328 ../Doc/library/compiler.rst:372
#: ../Doc/library/compiler.rst:480 ../Doc/library/compiler.rst:496
msgid ":attr:`else_`"
msgstr ""

# 2b3e6941aeec450c8e71049bfb7958a9
#: ../Doc/library/compiler.rst:330
msgid ":class:`From`"
msgstr ""

# 7f7ea50c007340b8bea62c897b1f2475
#: ../Doc/library/compiler.rst:330
msgid ":attr:`modname`"
msgstr ""

# 94c8ed6f9f42471589f357387c31c9d2
# 4a7d4cca19ab45a7aa8127f567c2ba0e
# f3906eecdf57494692a6adb2cc015d30
#: ../Doc/library/compiler.rst:332 ../Doc/library/compiler.rst:368
#: ../Doc/library/compiler.rst:374
msgid ":attr:`names`"
msgstr ""

# f9bda064c86c4ba7b314fda3be960159
#: ../Doc/library/compiler.rst:334
msgid ":class:`Function`"
msgstr ""

# 45e69dbc570745fbadc15edf01f8f4a6
#: ../Doc/library/compiler.rst:334
msgid ":attr:`decorators`"
msgstr ""

# 211a6523739b45829211e92bc3161e09
#: ../Doc/library/compiler.rst:334
msgid ":class:`Decorators` or ``None``"
msgstr ""

# a7366a089c844f00b7cd75a6549aa182
#: ../Doc/library/compiler.rst:336
msgid "name used in def, a string"
msgstr ""

# 4761f11f59864b21a00a0efc0a1e1d98
# 7a8d8c793dba4ead95661bcf20ddc9bc
#: ../Doc/library/compiler.rst:338 ../Doc/library/compiler.rst:382
msgid ":attr:`argnames`"
msgstr ""

# 15b26b15894045eb890340437d556d35
#: ../Doc/library/compiler.rst:338
msgid "list of argument names, as strings"
msgstr ""

# 44df8b2d9e564bce813feaff5eab0ac2
# 9b27c1f9dfb34e5fbeea27c55446dcb1
#: ../Doc/library/compiler.rst:341 ../Doc/library/compiler.rst:384
msgid ":attr:`defaults`"
msgstr ""

# b6b2abb0a39743498b597368a3ea29ba
#: ../Doc/library/compiler.rst:341
msgid "list of default values"
msgstr ""

# a1ab3dd093714e5484818058dcc8e973
#: ../Doc/library/compiler.rst:343
msgid "xxx"
msgstr ""

# b2d093dabc2c416fb0f4ec0b998b2260
#: ../Doc/library/compiler.rst:348
msgid "the body of the function"
msgstr ""

# a360cf2c13434824afcd024fe85f2d01
#: ../Doc/library/compiler.rst:350
msgid ":class:`GenExpr`"
msgstr ""

# ee055b7a400a4eec9923537a4b2fd02a
#: ../Doc/library/compiler.rst:352
msgid ":class:`GenExprFor`"
msgstr ""

# a39e3df1da3041248b07d39ab78aefed
#: ../Doc/library/compiler.rst:354
msgid ":attr:`iter`"
msgstr ""

# 0ecbacbdfba7418fb59ab246f5ee00bd
# 8dc0258e3003431a92e446dc446a4544
#: ../Doc/library/compiler.rst:356 ../Doc/library/compiler.rst:404
msgid ":attr:`ifs`"
msgstr ""

# 79569fd0953642318f9bfab8f2857036
#: ../Doc/library/compiler.rst:358
msgid ":class:`GenExprIf`"
msgstr ""

# 31cd42b307b342678561f8d190024271
#: ../Doc/library/compiler.rst:360
msgid ":class:`GenExprInner`"
msgstr ""

# 794c849c9aa949c18aa2e6935fbb33d4
# 13066c71ad914a38aa0fe29002b4cd12
#: ../Doc/library/compiler.rst:362 ../Doc/library/compiler.rst:398
msgid ":attr:`quals`"
msgstr ""

# 1f8f72fefab744f8828b9cc04fcab9ba
#: ../Doc/library/compiler.rst:364
msgid ":class:`Getattr`"
msgstr ""

# 01118637cfd341bfa906e29457768cb4
#: ../Doc/library/compiler.rst:368
msgid ":class:`Global`"
msgstr ""

# 01f1fa23133b46f2a9181c2eabb1a8b1
#: ../Doc/library/compiler.rst:370
msgid ":class:`If`"
msgstr ""

# 6dd3096bf1dc4932a8777a3e743ae62e
#: ../Doc/library/compiler.rst:370
msgid ":attr:`tests`"
msgstr ""

# f0bef8103b464c5894ed25f65e5f467c
#: ../Doc/library/compiler.rst:374
msgid ":class:`Import`"
msgstr ""

# c0215a88d19a410eac04c634a23c9ee0
#: ../Doc/library/compiler.rst:376
msgid ":class:`Invert`"
msgstr ""

# 50e8e22f5b13400d807c962ae1a64e8b
#: ../Doc/library/compiler.rst:378
msgid ":class:`Keyword`"
msgstr ""

# 12f855b5e37844118412d62dc5adbd92
#: ../Doc/library/compiler.rst:382
msgid ":class:`Lambda`"
msgstr ""

# f18b62a28fff4168b025c7973602d311
#: ../Doc/library/compiler.rst:390
msgid ":class:`LeftShift`"
msgstr ""

# 81dfacc704974ef09d7236fb58056967
#: ../Doc/library/compiler.rst:394
msgid ":class:`List`"
msgstr ""

# 7d781e44836248b48581c8d0b611492c
#: ../Doc/library/compiler.rst:396
msgid ":class:`ListComp`"
msgstr ""

# 600c0a8d3ec54b218743ca4321e2f3fa
#: ../Doc/library/compiler.rst:400
msgid ":class:`ListCompFor`"
msgstr ""

# 9f772371821c4f7fba903f14f2521e70
#: ../Doc/library/compiler.rst:406
msgid ":class:`ListCompIf`"
msgstr ""

# 89e560bd42d543168e0c03c41bd0820c
#: ../Doc/library/compiler.rst:408
msgid ":class:`Mod`"
msgstr ""

# e0d8d0ea510a4205944db3545a5d38e7
#: ../Doc/library/compiler.rst:412
msgid ":class:`Module`"
msgstr ""

# d30a40301c1f4b28b0402f70c848ba8c
#: ../Doc/library/compiler.rst:415
msgid "body of the module, a :class:`Stmt`"
msgstr ""

# 0062bff63c1b4b749cef790fa7fcd4bc
#: ../Doc/library/compiler.rst:418
msgid ":class:`Mul`"
msgstr ""

# 1f17411cd1584aa09e7b9410db45fdf5
#: ../Doc/library/compiler.rst:422
msgid ":class:`Name`"
msgstr ""

# b9c89b2b703945a297a7d8e61181bcba
#: ../Doc/library/compiler.rst:424
msgid ":class:`Not`"
msgstr ""

# 0fc5fee165514ff19bc541ed0d90bf7e
#: ../Doc/library/compiler.rst:426
msgid ":class:`Or`"
msgstr ""

# 82a62bc4f51e4dd98f5b0ce3504ce010
#: ../Doc/library/compiler.rst:428
msgid ":class:`Pass`"
msgstr ""

# 5871b73bf6394329af91329cc175d4c5
#: ../Doc/library/compiler.rst:430
msgid ":class:`Power`"
msgstr ""

# 111d553901744c4eaf8dd71d1f475391
#: ../Doc/library/compiler.rst:434
msgid ":class:`Print`"
msgstr ""

# ff2a3d8878fc48f8ae10b1b6d7bc9bf5
# c597cea8b7174208a7ada6e49531d08f
#: ../Doc/library/compiler.rst:436 ../Doc/library/compiler.rst:440
msgid ":attr:`dest`"
msgstr ""

# 940a65dbe9fa4fa5a9ba1911df2c6c13
#: ../Doc/library/compiler.rst:438
msgid ":class:`Printnl`"
msgstr ""

# ff77610053ad4260b9b13748d2b86b49
#: ../Doc/library/compiler.rst:442
msgid ":class:`Raise`"
msgstr ""

# 11d04e981bdf4e24913f128f1cd520d7
#: ../Doc/library/compiler.rst:442
msgid ":attr:`expr1`"
msgstr ""

# 575015304e584ec9adee388017406460
#: ../Doc/library/compiler.rst:444
msgid ":attr:`expr2`"
msgstr ""

# 5e6ef7ab66d84bcb834334823662403e
#: ../Doc/library/compiler.rst:446
msgid ":attr:`expr3`"
msgstr ""

# ddf41c7445cc4f5cbc4b4a9b8291c03a
#: ../Doc/library/compiler.rst:448
msgid ":class:`Return`"
msgstr ""

# 78a3ac2570314a5a8f2a18482961960a
#: ../Doc/library/compiler.rst:450
msgid ":class:`RightShift`"
msgstr ""

# e016a3187349487ea7916ddf11319bbe
#: ../Doc/library/compiler.rst:454
msgid ":class:`Slice`"
msgstr ""

# fe8f32db5ef54457aefbc9f2fb7f2d95
#: ../Doc/library/compiler.rst:458
msgid ":attr:`lower`"
msgstr ""

# cb04dcc2a6574ce88742028fdb463c36
#: ../Doc/library/compiler.rst:460
msgid ":attr:`upper`"
msgstr ""

# 93d677cc75e145728816fb9e6b345b7f
#: ../Doc/library/compiler.rst:462
msgid ":class:`Sliceobj`"
msgstr ""

# dadc15c4e74c495e850a4efc5fc3976f
#: ../Doc/library/compiler.rst:462
msgid "list of statements"
msgstr ""

# eeb651ccd75a4ae087a1da364fd4c3ca
#: ../Doc/library/compiler.rst:464
msgid ":class:`Stmt`"
msgstr ""

# 6655b09951ad4d4286287a20703b2e4b
#: ../Doc/library/compiler.rst:466
msgid ":class:`Sub`"
msgstr ""

# e900d17757454b9c80ff7b40fe2dd7ab
#: ../Doc/library/compiler.rst:470
msgid ":class:`Subscript`"
msgstr ""

# 0f1d8fcdade449a99c0d0eeaf7ccfbfc
#: ../Doc/library/compiler.rst:474
msgid ":attr:`subs`"
msgstr ""

# 02aad1e8829141f08b7b36dfe32a89c2
#: ../Doc/library/compiler.rst:476
msgid ":class:`TryExcept`"
msgstr ""

# 35a232bcaa63421e80be18b78f5fef57
#: ../Doc/library/compiler.rst:478
msgid ":attr:`handlers`"
msgstr ""

# b19ed730b0ff4f119f23e937fd671d2a
#: ../Doc/library/compiler.rst:482
msgid ":class:`TryFinally`"
msgstr ""

# 89ea4d6b926f4158b587b2ebb84a8403
#: ../Doc/library/compiler.rst:484
msgid ":attr:`final`"
msgstr ""

# cd7de79ea0c9473c9b4cf536b9951c51
#: ../Doc/library/compiler.rst:486
msgid ":class:`Tuple`"
msgstr ""

# d3e7ead680034d2a81b4dfbde64d01bb
#: ../Doc/library/compiler.rst:488
msgid ":class:`UnaryAdd`"
msgstr ""

# d86b1a2f2cf9423fa72a4a8a5cccd56b
#: ../Doc/library/compiler.rst:490
msgid ":class:`UnarySub`"
msgstr ""

# e8dcf22411fa40788c50085aaf6f7e22
#: ../Doc/library/compiler.rst:492
msgid ":class:`While`"
msgstr ""

# 1438d80feac04549be0c86455642278a
#: ../Doc/library/compiler.rst:498
msgid ":class:`With`"
msgstr ""

# a55c4616ae954feea118df5fcee7c73b
#: ../Doc/library/compiler.rst:500
msgid ":attr:`vars`"
msgstr ""

# f1bc945e9118486ba8c5b54255620103
#: ../Doc/library/compiler.rst:504
msgid ":class:`Yield`"
msgstr ""

# 6f1954c4cce14373af69fb837b49ed1e
#: ../Doc/library/compiler.rst:509
msgid "Assignment nodes"
msgstr ""

# 806078e3fc9d489088af6d75ef92949f
#: ../Doc/library/compiler.rst:511
msgid ""
"There is a collection of nodes used to represent assignments.  Each "
"assignment statement in the source code becomes a single :class:`Assign` "
"node in the AST. The :attr:`nodes` attribute is a list that contains a node "
"for each assignment target.  This is necessary because assignment can be "
"chained, e.g. ``a = b = 2``. Each :class:`Node` in the list will be one of "
"the following classes: :class:`AssAttr`, :class:`AssList`, :class:`AssName`, "
"or :class:`AssTuple`."
msgstr ""

# 7f5a0e60a96a4620a58d47cb670d8fad
#: ../Doc/library/compiler.rst:518
msgid ""
"Each target assignment node will describe the kind of object being assigned "
"to: :class:`AssName` for a simple name, e.g. ``a = 1``. :class:`AssAttr` for "
"an attribute assigned, e.g. ``a.x = 1``. :class:`AssList` and :class:"
"`AssTuple` for list and tuple expansion respectively, e.g. ``a, b, c = "
"a_tuple``."
msgstr ""

# 0bf1a0313e7a419590e8e0326ed78029
#: ../Doc/library/compiler.rst:523
msgid ""
"The target assignment nodes also have a :attr:`flags` attribute that "
"indicates whether the node is being used for assignment or in a delete "
"statement.  The :class:`AssName` is also used to represent a delete "
"statement, e.g. :class:`del x`."
msgstr ""

# 0d4cd8660d28486fb10c909b48579e09
#: ../Doc/library/compiler.rst:528
msgid ""
"When an expression contains several attribute references, an assignment or "
"delete statement will contain only one :class:`AssAttr` node -- for the "
"final attribute reference.  The other attribute references will be "
"represented as :class:`Getattr` nodes in the :attr:`expr` attribute of the :"
"class:`AssAttr` instance."
msgstr ""

#: ../Doc/library/compiler.rst:536 ../Doc/library/configparser.rst:438
#: ../Doc/library/cookielib.rst:740 ../Doc/library/csv.rst:440
#: ../Doc/library/htmlparser.rst:242 ../Doc/library/httplib.rst:566
#: ../Doc/library/imp.rst:276 ../Doc/library/imputil.rst:104
#: ../Doc/library/mailbox.rst:1637 ../Doc/library/multiprocessing.rst:2249
#: ../Doc/library/plistlib.rst:111 ../Doc/library/re.rst:976
#: ../Doc/library/socketserver.rst:339 ../Doc/library/ssl.rst:504
#: ../Doc/library/struct.rst:294 ../Doc/library/syslog.rst:86
#: ../Doc/library/tarfile.rst:633 ../Doc/library/timeit.rst:200
#: ../Doc/library/urllib.rst:471 ../Doc/library/urllib2.rst:922
#: ../Doc/library/wsgiref.rst:704 ../Doc/library/zipimport.rst:149
msgid "Examples"
msgstr ""

# 1015b71467124f63b7003a0bb60f4977
#: ../Doc/library/compiler.rst:538
msgid ""
"This section shows several simple examples of ASTs for Python source code.  "
"The examples demonstrate how to use the :func:`parse` function, what the "
"repr of an AST looks like, and how to access attributes of an AST node."
msgstr ""

# e3ad3e6d376e4a0a95c0c60f6d81c0e5
#: ../Doc/library/compiler.rst:542
msgid ""
"The first module defines a single function.  Assume it is stored in :file:`/"
"tmp/doublelib.py`.  ::"
msgstr ""

# 7b56562c6a8646159d813b39fc489aa4
#: ../Doc/library/compiler.rst:554
msgid ""
"In the interactive interpreter session below, I have reformatted the long "
"AST reprs for readability.  The AST reprs use unqualified class names.  If "
"you want to create an instance from a repr, you must import the class names "
"from the :mod:`compiler.ast` module. ::"
msgstr ""

# adf128225a7145998cfb05541580b0bf
#: ../Doc/library/compiler.rst:588
msgid "Using Visitors to Walk ASTs"
msgstr ""

# 0dab37bc62a647bfa6a1f6c69ef0ce7d
#: ../Doc/library/compiler.rst:593
msgid ""
"The visitor pattern is ...  The :mod:`compiler` package uses a variant on "
"the visitor pattern that takes advantage of Python's introspection features "
"to eliminate the need for much of the visitor's infrastructure."
msgstr ""

# deddd28931e14aa39adc7e12e9d367e4
#: ../Doc/library/compiler.rst:597
msgid ""
"The classes being visited do not need to be programmed to accept visitors.  "
"The visitor need only define visit methods for classes it is specifically "
"interested in; a default visit method can handle the rest."
msgstr ""

# 55ebf98cb6494b0c997bfc0773a94f52
#: ../Doc/library/compiler.rst:601
msgid "XXX The magic :meth:`visit` method for visitors."
msgstr ""

# e4a41ff2b8c94d6bb3e6720b7798d4a3
#: ../Doc/library/compiler.rst:609
msgid ""
"The :class:`ASTVisitor` is responsible for walking over the tree in the "
"correct order.  A walk begins with a call to :meth:`preorder`.  For each "
"node, it checks the *visitor* argument to :meth:`preorder` for a method "
"named 'visitNodeType,' where NodeType is the name of the node's class, e.g. "
"for a :class:`While` node a :meth:`visitWhile` would be called.  If the "
"method exists, it is called with the node as its first argument."
msgstr ""

# 179ccff6d3ed40d7905e7386222f3df1
#: ../Doc/library/compiler.rst:616
msgid ""
"The visitor method for a particular node type can control how child nodes "
"are visited during the walk.  The :class:`ASTVisitor` modifies the visitor "
"argument by adding a visit method to the visitor; this method can be used to "
"visit a particular child node.  If no visitor is found for a particular node "
"type, the :meth:`default` method is called."
msgstr ""

# 73c6ea429b224fafb6cdbe0afbacca9a
#: ../Doc/library/compiler.rst:622
msgid ":class:`ASTVisitor` objects have the following methods:"
msgstr ""

# c9f86c8c7a5a45e690cd3337ae93c435
#: ../Doc/library/compiler.rst:624
msgid "XXX describe extra arguments"
msgstr ""

# 78267ded1ae84f249d3f0eb0c15f0c4b
#: ../Doc/library/compiler.rst:637
msgid "Bytecode Generation"
msgstr ""

# b8fbc04748a14d6684704dc2a5c9a071
#: ../Doc/library/compiler.rst:639
msgid ""
"The code generator is a visitor that emits bytecodes.  Each visit method can "
"call the :meth:`emit` method to emit a new bytecode.  The basic code "
"generator is specialized for modules, classes, and functions.  An assembler "
"converts that emitted instructions to the low-level bytecode format.  It "
"handles things like generation of constant lists of code objects and "
"calculation of jump offsets."
msgstr ""

# e028a16017bc44cb9870f0d24d240114
#: ../Doc/library/configparser.rst:2
msgid ":mod:`ConfigParser` --- Configuration file parser"
msgstr ""

# f22facf641c54c22bf77dbe302134e74
#: ../Doc/library/configparser.rst:14
msgid ""
"The :mod:`ConfigParser` module has been renamed to :mod:`configparser` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

#: ../Doc/library/configparser.rst:24
msgid ""
"This module defines the class :class:`ConfigParser`.   The :class:"
"`ConfigParser` class implements a basic configuration file parser language "
"which provides a structure similar to what you would find on Microsoft "
"Windows INI files.  You can use this to write Python programs which can be "
"customized by end users easily."
msgstr ""

#: ../Doc/library/configparser.rst:32
msgid ""
"This library does *not* interpret or write the value-type prefixes used in "
"the Windows Registry extended version of INI syntax."
msgstr ""

#: ../Doc/library/configparser.rst:38 ../Doc/library/configparser.rst:224
msgid ""
"Support for a creating Unix shell-like mini-languages which can be used as "
"an alternate format for application configuration files."
msgstr ""

# 2669b531e0164503a116466cce465571
#: ../Doc/library/configparser.rst:42
msgid ""
"The json module implements a subset of JavaScript syntax which can also be "
"used for this purpose."
msgstr ""

#: ../Doc/library/configparser.rst:45
msgid ""
"The configuration file consists of sections, led by a ``[section]`` header "
"and followed by ``name: value`` entries, with continuations in the style of :"
"rfc:`822` (see section 3.1.1, \"LONG HEADER FIELDS\"); ``name=value`` is "
"also accepted.  Note that leading whitespace is removed from values. The "
"optional values can contain format strings which refer to other values in "
"the same section, or values in a special ``DEFAULT`` section.  Additional "
"defaults can be provided on initialization and retrieval.  Lines beginning "
"with ``'#'`` or ``';'`` are ignored and may be used to provide comments."
msgstr ""

# 19d072c731394b1088741800f63f380c
#: ../Doc/library/configparser.rst:54
msgid ""
"Configuration files may include comments, prefixed by specific characters "
"(``#`` and ``;``).  Comments may appear on their own in an otherwise empty "
"line, or may be entered in lines holding values or section names.  In the "
"latter case, they need to be preceded by a whitespace character to be "
"recognized as a comment. (For backwards compatibility, only ``;`` starts an "
"inline comment, while ``#`` does not.)"
msgstr ""

# e26d93da8ac441e38ee5724c3a1bcfa3
#: ../Doc/library/configparser.rst:61
msgid ""
"On top of the core functionality, :class:`SafeConfigParser` supports "
"interpolation.  This means values can contain format strings which refer to "
"other values in the same section, or values in a special ``DEFAULT`` "
"section. Additional defaults can be provided on initialization."
msgstr ""

#: ../Doc/library/configparser.rst:66 ../Doc/library/functools.rst:54
#: ../Doc/library/multiprocessing.rst:277 ../Doc/library/optparse.rst:331
#: ../Doc/library/re.rst:1095 ../Doc/library/symtable.rst:171
#: ../Doc/library/textwrap.rst:69 ../Doc/library/threading.rst:744
#: ../Doc/library/tkinter.rst:285 ../Doc/library/tkinter.rst:546
#: ../Doc/library/tkinter.rst:722 ../Doc/library/winsound.rst:80
msgid "For example::"
msgstr ""

#: ../Doc/library/configparser.rst:74
msgid ""
"would resolve the ``%(dir)s`` to the value of ``dir`` (``frob`` in this "
"case). All reference expansions are done on demand."
msgstr ""

#: ../Doc/library/configparser.rst:77
msgid ""
"Default values can be specified by passing them into the :class:"
"`ConfigParser` constructor as a dictionary.  Additional defaults  may be "
"passed into the :meth:`get` method which will override all others."
msgstr ""

#: ../Doc/library/configparser.rst:81
msgid ""
"Sections are normally stored in a built-in dictionary. An alternative "
"dictionary type can be passed to the :class:`ConfigParser` constructor. For "
"example, if a dictionary type is passed that sorts its keys, the sections "
"will be sorted on write-back, as will be the keys within each section."
msgstr ""

#: ../Doc/library/configparser.rst:89
msgid ""
"The basic configuration object.  When *defaults* is given, it is initialized "
"into the dictionary of intrinsic defaults.  When *dict_type* is given, it "
"will be used to create the dictionary objects for the list of sections, for "
"the options within a section, and for the default values.  When "
"*allow_no_value* is true (default: ``False``), options without values are "
"accepted; the value presented for these is ``None``."
msgstr ""

#: ../Doc/library/configparser.rst:96
msgid "This class does not support the magical interpolation behavior."
msgstr ""

# 4a7b2b7b8aab4ad8ace277d2f21a7f8a
#: ../Doc/library/configparser.rst:99
msgid ""
"All option names are passed through the :meth:`optionxform` method.  Its "
"default implementation converts option names to lower case."
msgstr ""

#: ../Doc/library/configparser.rst:114
msgid ""
"Derived class of :class:`RawConfigParser` that implements the magical "
"interpolation feature and adds optional arguments to the :meth:`get` and :"
"meth:`items` methods.  The values in *defaults* must be appropriate for the "
"``%()s`` string interpolation.  Note that *__name__* is an intrinsic "
"default; its value is the section name, and will override any value provided "
"in *defaults*."
msgstr ""

# c88aefe27ebd497ca06873f66783acdb
#: ../Doc/library/configparser.rst:121
msgid ""
"All option names used in interpolation will be passed through the :meth:"
"`optionxform` method just like any other option name reference.  Using the "
"default implementation of :meth:`optionxform`, the values ``foo %(bar)s`` "
"and ``foo %(BAR)s`` are equivalent."
msgstr ""

#: ../Doc/library/configparser.rst:138
msgid ""
"Derived class of :class:`ConfigParser` that implements a more-sane variant "
"of the magical interpolation feature.  This implementation is more "
"predictable as well. New applications should prefer this version if they "
"don't need to be compatible with older versions of Python."
msgstr ""

# f3d24aebeaed4aaab6b1f31acb819e64
#: ../Doc/library/configparser.rst:157
msgid "Base class for all other configparser exceptions."
msgstr ""

#: ../Doc/library/configparser.rst:162
msgid "Exception raised when a specified section is not found."
msgstr ""

#: ../Doc/library/configparser.rst:167
msgid ""
"Exception raised if :meth:`add_section` is called with the name of a section "
"that is already present."
msgstr ""

#: ../Doc/library/configparser.rst:173
msgid ""
"Exception raised when a specified option is not found in the specified  "
"section."
msgstr ""

#: ../Doc/library/configparser.rst:178
msgid ""
"Base class for exceptions raised when problems occur performing string "
"interpolation."
msgstr ""

#: ../Doc/library/configparser.rst:184
msgid ""
"Exception raised when string interpolation cannot be completed because the "
"number of iterations exceeds :const:`MAX_INTERPOLATION_DEPTH`. Subclass of :"
"exc:`InterpolationError`."
msgstr ""

#: ../Doc/library/configparser.rst:191
msgid ""
"Exception raised when an option referenced from a value does not exist. "
"Subclass of :exc:`InterpolationError`."
msgstr ""

#: ../Doc/library/configparser.rst:199
msgid ""
"Exception raised when the source text into which substitutions are made does "
"not conform to the required syntax. Subclass of :exc:`InterpolationError`."
msgstr ""

#: ../Doc/library/configparser.rst:207
msgid ""
"Exception raised when attempting to parse a file which has no section "
"headers."
msgstr ""

#: ../Doc/library/configparser.rst:212
msgid "Exception raised when errors occur attempting to parse a file."
msgstr ""

#: ../Doc/library/configparser.rst:217
msgid ""
"The maximum depth for recursive interpolation for :meth:`get` when the *raw* "
"parameter is false.  This is relevant only for the :class:`ConfigParser` "
"class."
msgstr ""

#: ../Doc/library/configparser.rst:231
msgid "RawConfigParser Objects"
msgstr ""

#: ../Doc/library/configparser.rst:233
msgid ":class:`RawConfigParser` instances have the following methods:"
msgstr ""

#: ../Doc/library/configparser.rst:238
msgid "Return a dictionary containing the instance-wide defaults."
msgstr ""

#: ../Doc/library/configparser.rst:243
msgid ""
"Return a list of the sections available; ``DEFAULT`` is not included in the "
"list."
msgstr ""

#: ../Doc/library/configparser.rst:249
msgid ""
"Add a section named *section* to the instance.  If a section by the given "
"name already exists, :exc:`DuplicateSectionError` is raised. If the name "
"``DEFAULT`` (or any of it's case-insensitive variants) is passed, :exc:"
"`ValueError` is raised."
msgstr ""

#: ../Doc/library/configparser.rst:256
msgid ""
"Indicates whether the named section is present in the configuration. The "
"``DEFAULT`` section is not acknowledged."
msgstr ""

#: ../Doc/library/configparser.rst:262
msgid "Returns a list of options available in the specified *section*."
msgstr ""

#: ../Doc/library/configparser.rst:267
msgid ""
"If the given section exists, and contains the given option, return :const:"
"`True`; otherwise return :const:`False`."
msgstr ""

# f5ec37df3a7844c987792302c925e377
#: ../Doc/library/configparser.rst:275
msgid ""
"Attempt to read and parse a list of filenames, returning a list of filenames "
"which were successfully parsed.  If *filenames* is a string or Unicode "
"string, it is treated as a single filename. If a file named in *filenames* "
"cannot be opened, that file will be ignored.  This is designed so that you "
"can specify a list of potential configuration file locations (for example, "
"the current directory, the user's home directory, and some system-wide "
"directory), and all existing configuration files in the list will be read.  "
"If none of the named files exist, the :class:`ConfigParser` instance will "
"contain an empty dataset. An application which requires initial values to be "
"loaded from a file should load the required file or files using :meth:"
"`readfp` before calling :meth:`read` for any optional files::"
msgstr ""

# 3463563c19964d67b624045fc562bc24
#: ../Doc/library/configparser.rst:299
msgid ""
"Read and parse configuration data from the file or file-like object in *fp* "
"(only the :meth:`readline` method is used).  If *filename* is omitted and "
"*fp* has a :attr:`name` attribute, that is used for *filename*; the default "
"is ``<???>``."
msgstr ""

#: ../Doc/library/configparser.rst:307
msgid "Get an *option* value for the named *section*."
msgstr ""

#: ../Doc/library/configparser.rst:312
msgid ""
"A convenience method which coerces the *option* in the specified *section* "
"to an integer."
msgstr ""

#: ../Doc/library/configparser.rst:318
msgid ""
"A convenience method which coerces the *option* in the specified *section* "
"to a floating point number."
msgstr ""

#: ../Doc/library/configparser.rst:324
msgid ""
"A convenience method which coerces the *option* in the specified *section* "
"to a Boolean value.  Note that the accepted values for the option are ``"
"\"1\"``, ``\"yes\"``, ``\"true\"``, and ``\"on\"``, which cause this method "
"to return ``True``, and ``\"0\"``, ``\"no\"``, ``\"false\"``, and ``\"off"
"\"``, which cause it to return ``False``.  These string values are checked "
"in a case-insensitive manner.  Any other value will cause it to raise :exc:"
"`ValueError`."
msgstr ""

#: ../Doc/library/configparser.rst:334
msgid ""
"Return a list of ``(name, value)`` pairs for each option in the given "
"*section*."
msgstr ""

#: ../Doc/library/configparser.rst:339
msgid ""
"If the given section exists, set the given option to the specified value; "
"otherwise raise :exc:`NoSectionError`.  While it is possible to use :class:"
"`RawConfigParser` (or :class:`ConfigParser` with *raw* parameters set to "
"true) for *internal* storage of non-string values, full functionality "
"(including interpolation and output to files) can only be achieved using "
"string values."
msgstr ""

# 689be7ea6383477a93ceb0bf4e908412
#: ../Doc/library/configparser.rst:350
msgid ""
"Write a representation of the configuration to the specified file object.  "
"This representation can be parsed by a future :meth:`read` call."
msgstr ""

#: ../Doc/library/configparser.rst:358
msgid ""
"Remove the specified *option* from the specified *section*. If the section "
"does not exist, raise :exc:`NoSectionError`.  If the option existed to be "
"removed, return :const:`True`; otherwise return :const:`False`."
msgstr ""

#: ../Doc/library/configparser.rst:367
msgid ""
"Remove the specified *section* from the configuration. If the section in "
"fact existed, return ``True``. Otherwise return ``False``."
msgstr ""

#: ../Doc/library/configparser.rst:373
msgid ""
"Transforms the option name *option* as found in an input file or as passed "
"in by client code to the form that should be used in the internal "
"structures. The default implementation returns a lower-case version of "
"*option*; subclasses may override this or client code can set an attribute "
"of this name on instances to affect this behavior."
msgstr ""

#: ../Doc/library/configparser.rst:379
msgid ""
"You don't necessarily need to subclass a ConfigParser to use this method, "
"you can also re-set it on an instance, to a function that takes a string "
"argument.  Setting it to ``str``, for example, would make option names case "
"sensitive::"
msgstr ""

#: ../Doc/library/configparser.rst:388
msgid ""
"Note that when reading configuration files, whitespace around the option "
"names are stripped before :meth:`optionxform` is called."
msgstr ""

#: ../Doc/library/configparser.rst:395
msgid "ConfigParser Objects"
msgstr ""

#: ../Doc/library/configparser.rst:397
msgid ""
"The :class:`ConfigParser` class extends some methods of the :class:"
"`RawConfigParser` interface, adding some optional arguments."
msgstr ""

# 12a76c065477476596df6b484425b8ec
#: ../Doc/library/configparser.rst:403
msgid ""
"Get an *option* value for the named *section*.  If *vars* is provided, it "
"must be a dictionary.  The *option* is looked up in *vars* (if provided), "
"*section*, and in *defaults* in that order."
msgstr ""

# 5770d21c97d14354b7c766f546e29662
#: ../Doc/library/configparser.rst:407
msgid ""
"All the ``'%'`` interpolations are expanded in the return values, unless the "
"*raw* argument is true.  Values for interpolation keys are looked up in the "
"same manner as the option."
msgstr ""

#: ../Doc/library/configparser.rst:413
msgid ""
"Return a list of ``(name, value)`` pairs for each option in the given "
"*section*. Optional arguments have the same meaning as for the :meth:`get` "
"method."
msgstr ""

#: ../Doc/library/configparser.rst:422
msgid "SafeConfigParser Objects"
msgstr ""

#: ../Doc/library/configparser.rst:424
msgid ""
"The :class:`SafeConfigParser` class implements the same extended interface "
"as :class:`ConfigParser`, with the following addition:"
msgstr ""

# cd7ca3686487459eabcd79ed765b94b8
#: ../Doc/library/configparser.rst:430
msgid ""
"If the given section exists, set the given option to the specified value; "
"otherwise raise :exc:`NoSectionError`.  *value* must be a string (:class:"
"`str` or :class:`unicode`); if not, :exc:`TypeError` is raised."
msgstr ""

#: ../Doc/library/configparser.rst:440
msgid "An example of writing to a configuration file::"
msgstr ""

#: ../Doc/library/configparser.rst:465
msgid "An example of reading the configuration file again::"
msgstr ""

#: ../Doc/library/configparser.rst:483
msgid ""
"To get interpolation, you will need to use a :class:`ConfigParser` or :class:"
"`SafeConfigParser`::"
msgstr ""

#: ../Doc/library/configparser.rst:500
msgid ""
"Defaults are available in all three types of ConfigParsers. They are used in "
"interpolation if an option used is not defined elsewhere. ::"
msgstr ""

#: ../Doc/library/configparser.rst:514
msgid ""
"The function ``opt_move`` below can be used to move options between "
"sections::"
msgstr ""

# afa6a03691e84b70ba22cba714779cc0
#: ../Doc/library/configparser.rst:526
msgid ""
"Some configuration files are known to include settings without values, but "
"which otherwise conform to the syntax supported by :mod:`ConfigParser`.  The "
"*allow_no_value* parameter to the constructor can be used to indicate that "
"such values should be accepted:"
msgstr ""

#: ../Doc/library/constants.rst:4
msgid "Built-in Constants"
msgstr ""

#: ../Doc/library/constants.rst:6
msgid "A small number of constants live in the built-in namespace.  They are:"
msgstr ""

# 4fac94a163ab450089fab38485fb94a1
#: ../Doc/library/constants.rst:10
msgid "The false value of the :class:`bool` type."
msgstr ""

# 49f70db6987f44b8990711100305cfd0
#: ../Doc/library/constants.rst:17
msgid "The true value of the :class:`bool` type."
msgstr ""

# 9c75f78ab28a413f99f4fefcf34805de
#: ../Doc/library/constants.rst:24
msgid ""
"The sole value of :attr:`types.NoneType`.  ``None`` is frequently used to "
"represent the absence of a value, as when default arguments are not passed "
"to a function."
msgstr ""

#: ../Doc/library/constants.rst:34
msgid ""
"Special value which can be returned by the \"rich comparison\" special "
"methods (:meth:`__eq__`, :meth:`__lt__`, and friends), to indicate that the "
"comparison is not implemented with respect to the other type."
msgstr ""

# dd63d1c7cf6c4b269ec205af9eb58948
#: ../Doc/library/constants.rst:41
msgid "Special value used in conjunction with extended slicing syntax."
msgstr ""

# cd26e420b089453da7d96754711d5021
#: ../Doc/library/constants.rst:46
msgid ""
"This constant is true if Python was not started with an :option:`-O` option. "
"See also the :keyword:`assert` statement."
msgstr ""

# f437ebfa93de4b1e9610d076287b71f0
#: ../Doc/library/constants.rst:52
msgid ""
"The names :data:`None` and :data:`__debug__` cannot be reassigned "
"(assignments to them, even as an attribute name, raise :exc:`SyntaxError`), "
"so they can be considered \"true\" constants."
msgstr ""

#: ../Doc/library/constants.rst:61
msgid "Constants added by the :mod:`site` module"
msgstr ""

#: ../Doc/library/constants.rst:63
msgid ""
"The :mod:`site` module (which is imported automatically during startup, "
"except if the :option:`-S` command-line option is given) adds several "
"constants to the built-in namespace.  They are useful for the interactive "
"interpreter shell and should not be used in programs."
msgstr ""

#: ../Doc/library/constants.rst:71
msgid ""
"Objects that when printed, print a message like \"Use quit() or Ctrl-D (i.e. "
"EOF) to exit\", and when called, raise :exc:`SystemExit` with the specified "
"exit code."
msgstr ""

#: ../Doc/library/constants.rst:79
msgid ""
"Objects that when printed, print a message like \"Type license() to see the "
"full license text\", and when called, display the corresponding text in a "
"pager-like fashion (one screen at a time)."
msgstr ""

#: ../Doc/library/contextlib.rst:2
msgid ""
":mod:`contextlib` --- Utilities for :keyword:`with`\\ -statement contexts"
msgstr ""

# d3ef442669cc41feb1b43d01ea8f118c
#: ../Doc/library/contextlib.rst:10
msgid "**Source code:** :source:`Lib/contextlib.py`"
msgstr ""

#: ../Doc/library/contextlib.rst:14
msgid ""
"This module provides utilities for common tasks involving the :keyword:"
"`with` statement. For more information see also :ref:`typecontextmanager` "
"and :ref:`context-managers`."
msgstr ""

#: ../Doc/library/contextlib.rst:18
msgid "Functions provided:"
msgstr ""

#: ../Doc/library/contextlib.rst:23
msgid ""
"This function is a :term:`decorator` that can be used to define a factory "
"function for :keyword:`with` statement context managers, without needing to "
"create a class or separate :meth:`__enter__` and :meth:`__exit__` methods."
msgstr ""

#: ../Doc/library/contextlib.rst:27
msgid ""
"A simple example (this is not recommended as a real way of generating "
"HTML!)::"
msgstr ""

#: ../Doc/library/contextlib.rst:44
msgid ""
"The function being decorated must return a :term:`generator`-iterator when "
"called. This iterator must yield exactly one value, which will be bound to "
"the targets in the :keyword:`with` statement's :keyword:`as` clause, if any."
msgstr ""

#: ../Doc/library/contextlib.rst:48
msgid ""
"At the point where the generator yields, the block nested in the :keyword:"
"`with` statement is executed.  The generator is then resumed after the block "
"is exited. If an unhandled exception occurs in the block, it is reraised "
"inside the generator at the point where the yield occurred.  Thus, you can "
"use a :keyword:`try`...\\ :keyword:`except`...\\ :keyword:`finally` "
"statement to trap the error (if any), or ensure that some cleanup takes "
"place. If an exception is trapped merely in order to log it or to perform "
"some action (rather than to suppress it entirely), the generator must "
"reraise that exception. Otherwise the generator context manager will "
"indicate to the :keyword:`with` statement that the exception has been "
"handled, and execution will resume with the statement immediately following "
"the :keyword:`with` statement."
msgstr ""

# ec8f56e1b102413687d7c3e1bfba674b
#: ../Doc/library/contextlib.rst:63
msgid "Combine multiple context managers into a single nested context manager."
msgstr ""

# 5a7ba534050446ee8187393d1a733883
#: ../Doc/library/contextlib.rst:65
msgid ""
"This function has been deprecated in favour of the multiple manager form of "
"the :keyword:`with` statement."
msgstr ""

# 4c313cd0fe1744e6b08af06e6b2bfd12
#: ../Doc/library/contextlib.rst:68
msgid ""
"The one advantage of this function over the multiple manager form of the :"
"keyword:`with` statement is that argument unpacking allows it to be used "
"with a variable number of context managers as follows::"
msgstr ""

# 4bbbd57174464e1f8ae7cc4985699b93
#: ../Doc/library/contextlib.rst:77
msgid ""
"Note that if the :meth:`__exit__` method of one of the nested context "
"managers indicates an exception should be suppressed, no exception "
"information will be passed to any remaining outer context managers. "
"Similarly, if the :meth:`__exit__` method of one of the nested managers "
"raises an exception, any previous exception state will be lost; the new "
"exception will be passed to the :meth:`__exit__` methods of any remaining "
"outer context managers. In general, :meth:`__exit__` methods should avoid "
"raising exceptions, and in particular they should not re-raise a passed-in "
"exception."
msgstr ""

# 6aef4676dcaa4682aaf574e946ef0a00
#: ../Doc/library/contextlib.rst:86
msgid ""
"This function has two major quirks that have led to it being deprecated. "
"Firstly, as the context managers are all constructed before the function is "
"invoked, the :meth:`__new__` and :meth:`__init__` methods of the inner "
"context managers are not actually covered by the scope of the outer context "
"managers. That means, for example, that using :func:`nested` to open two "
"files is a programming error as the first file will not be closed promptly "
"if an exception is thrown when opening the second file."
msgstr ""

# 7944632e4ebe46338b4a319eb7082673
#: ../Doc/library/contextlib.rst:94
msgid ""
"Secondly, if the :meth:`__enter__` method of one of the inner context "
"managers raises an exception that is caught and suppressed by the :meth:"
"`__exit__` method of one of the outer context managers, this construct will "
"raise :exc:`RuntimeError` rather than skipping the body of the :keyword:"
"`with` statement."
msgstr ""

# a4477767c022422d976b48a0fcf742a4
#: ../Doc/library/contextlib.rst:100
msgid ""
"Developers that need to support nesting of a variable number of context "
"managers can either use the :mod:`warnings` module to suppress the "
"DeprecationWarning raised by this function or else use this function as a "
"model for an application specific implementation."
msgstr ""

#: ../Doc/library/contextlib.rst:111
msgid ""
"Return a context manager that closes *thing* upon completion of the block.  "
"This is basically equivalent to::"
msgstr ""

#: ../Doc/library/contextlib.rst:123
msgid "And lets you write code like this::"
msgstr ""

#: ../Doc/library/contextlib.rst:132
msgid ""
"without needing to explicitly close ``page``.  Even if an error occurs, "
"``page.close()`` will be called when the :keyword:`with` block is exited."
msgstr ""

#: ../Doc/library/contextlib.rst:139
msgid ""
"The specification, background, and examples for the Python :keyword:`with` "
"statement."
msgstr ""

# 06dbcf029a5742a698bd7ef1bbf013c2
#: ../Doc/library/cookie.rst:2
msgid ":mod:`Cookie` --- HTTP state management"
msgstr ""

# 1d03a98cb3644629b20fa0df4b0561c4
#: ../Doc/library/cookie.rst:10
msgid ""
"The :mod:`Cookie` module has been renamed to :mod:`http.cookies` in Python "
"3.  The :term:`2to3` tool will automatically adapt imports when converting "
"your sources to Python 3."
msgstr ""

# 73326897bda7476c8d4f2f9809bb30d5
#: ../Doc/library/cookie.rst:14
msgid "**Source code:** :source:`Lib/Cookie.py`"
msgstr ""

# 215490eae28c4ac794ff2d2f82cb00f9
#: ../Doc/library/cookie.rst:18
msgid ""
"The :mod:`Cookie` module defines classes for abstracting the concept of "
"cookies, an HTTP state management mechanism. It supports both simple string-"
"only cookies, and provides an abstraction for having any serializable data-"
"type as cookie value."
msgstr ""

# ff7981e8228241399dc4f89bff47bcee
#: ../Doc/library/cookie.rst:23
msgid ""
"The module formerly strictly applied the parsing rules described in the :rfc:"
"`2109` and :rfc:`2068` specifications.  It has since been discovered that "
"MSIE 3.0x doesn't follow the character rules outlined in those specs and "
"also many current day browsers and servers have relaxed parsing rules when "
"comes to Cookie handling.  As a result, the parsing rules used are a bit "
"less strict."
msgstr ""

# 070627842b514a458fa6dc42ab42b27c
#: ../Doc/library/cookie.rst:29
msgid ""
"The character set, :data:`string.ascii_letters`, :data:`string.digits` and "
"``!#$%&'*+-.^_`|~`` denote the set of valid characters allowed by this "
"module in Cookie name (as :attr:`~Morsel.key`)."
msgstr ""

#: ../Doc/library/cookie.rst:36
msgid ""
"On encountering an invalid cookie, :exc:`CookieError` is raised, so if your "
"cookie data comes from a browser you should always prepare for invalid data "
"and catch :exc:`CookieError` on parsing."
msgstr ""

#: ../Doc/library/cookie.rst:43
msgid ""
"Exception failing because of :rfc:`2109` invalidity: incorrect attributes, "
"incorrect :mailheader:`Set-Cookie` header, etc."
msgstr ""

#: ../Doc/library/cookie.rst:49
msgid ""
"This class is a dictionary-like object whose keys are strings and whose "
"values are :class:`Morsel` instances. Note that upon setting a key to a "
"value, the value is first converted to a :class:`Morsel` containing the key "
"and the value."
msgstr ""

#: ../Doc/library/cookie.rst:53
msgid "If *input* is given, it is passed to the :meth:`load` method."
msgstr ""

#: ../Doc/library/cookie.rst:58
msgid ""
"This class derives from :class:`BaseCookie` and overrides :meth:"
"`value_decode` and :meth:`value_encode` to be the identity and :func:`str` "
"respectively."
msgstr ""

# 9cb21888d29641bf9766849282e65cbc
#: ../Doc/library/cookie.rst:64
msgid ""
"This class derives from :class:`BaseCookie` and overrides :meth:"
"`value_decode` and :meth:`value_encode` to be the :func:`pickle.loads` and :"
"func:`pickle.dumps`."
msgstr ""

# 7e750104cecc46558dd0fa335955d164
#: ../Doc/library/cookie.rst:76
msgid ""
"This class derives from :class:`BaseCookie`. It overrides :meth:"
"`value_decode` to be :func:`pickle.loads` if it is a valid pickle, and "
"otherwise the value itself. It overrides :meth:`value_encode` to be :func:"
"`pickle.dumps` unless it is a string, in which case it returns the value "
"itself."
msgstr ""

# 883553cd6cd34f6f97ed2e6388bb6d03
#: ../Doc/library/cookie.rst:84
msgid ""
"A further security note is warranted.  For backwards compatibility, the :mod:"
"`Cookie` module exports a class named :class:`Cookie` which is just an alias "
"for :class:`SmartCookie`.  This is probably a mistake and will likely be "
"removed in a future version.  You should not use the :class:`Cookie` class "
"in your applications, for the same reason why you should not use the :class:"
"`SerialCookie` class."
msgstr ""

# dc1350fff01c4e399760b1134f354a06
#: ../Doc/library/cookie.rst:95
msgid ""
"HTTP cookie handling for web *clients*.  The :mod:`cookielib` and :mod:"
"`Cookie` modules do not depend on each other."
msgstr ""

#: ../Doc/library/cookie.rst:99
msgid "This is the state management specification implemented by this module."
msgstr ""

#: ../Doc/library/cookie.rst:105 ../Doc/library/cookielib.rst:609
msgid "Cookie Objects"
msgstr ""

#: ../Doc/library/cookie.rst:110
msgid ""
"Return a decoded value from a string representation. Return value can be any "
"type. This method does nothing in :class:`BaseCookie` --- it exists so it "
"can be overridden."
msgstr ""

#: ../Doc/library/cookie.rst:117
msgid ""
"Return an encoded value. *val* can be any type, but return value must be a "
"string. This method does nothing in :class:`BaseCookie` --- it exists so it "
"can be overridden"
msgstr ""

#: ../Doc/library/cookie.rst:121
msgid ""
"In general, it should be the case that :meth:`value_encode` and :meth:"
"`value_decode` are inverses on the range of *value_decode*."
msgstr ""

#: ../Doc/library/cookie.rst:127
msgid ""
"Return a string representation suitable to be sent as HTTP headers. *attrs* "
"and *header* are sent to each :class:`Morsel`'s :meth:`output` method. *sep* "
"is used to join the headers together, and is by default the combination "
"``'\\r\\n'`` (CRLF)."
msgstr ""

#: ../Doc/library/cookie.rst:139
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP headers was sent."
msgstr ""

#: ../Doc/library/cookie.rst:142 ../Doc/library/cookie.rst:224
#: ../Doc/library/cookie.rst:232
msgid "The meaning for *attrs* is the same as in :meth:`output`."
msgstr ""

#: ../Doc/library/cookie.rst:147
msgid ""
"If *rawdata* is a string, parse it as an ``HTTP_COOKIE`` and add the values "
"found there as :class:`Morsel`\\ s. If it is a dictionary, it is equivalent "
"to::"
msgstr ""

#: ../Doc/library/cookie.rst:157
msgid "Morsel Objects"
msgstr ""

#: ../Doc/library/cookie.rst:162
msgid "Abstract a key/value pair, which has some :rfc:`2109` attributes."
msgstr ""

#: ../Doc/library/cookie.rst:164
msgid ""
"Morsels are dictionary-like objects, whose set of keys is constant --- the "
"valid :rfc:`2109` attributes, which are"
msgstr ""

#: ../Doc/library/cookie.rst:167
msgid "``expires``"
msgstr ""

#: ../Doc/library/cookie.rst:168
msgid "``path``"
msgstr ""

#: ../Doc/library/cookie.rst:169
msgid "``comment``"
msgstr ""

#: ../Doc/library/cookie.rst:170
msgid "``domain``"
msgstr ""

#: ../Doc/library/cookie.rst:171
msgid "``max-age``"
msgstr ""

#: ../Doc/library/cookie.rst:172
msgid "``secure``"
msgstr ""

#: ../Doc/library/cookie.rst:173
msgid "``version``"
msgstr ""

#: ../Doc/library/cookie.rst:174
msgid "``httponly``"
msgstr ""

#: ../Doc/library/cookie.rst:176
msgid ""
"The attribute :attr:`httponly` specifies that the cookie is only transfered "
"in HTTP requests, and is not accessible through JavaScript. This is intended "
"to mitigate some forms of cross-site scripting."
msgstr ""

#: ../Doc/library/cookie.rst:180
msgid "The keys are case-insensitive."
msgstr ""

#: ../Doc/library/cookie.rst:188
msgid "The value of the cookie."
msgstr ""

#: ../Doc/library/cookie.rst:193
msgid "The encoded value of the cookie --- this is what should be sent."
msgstr ""

#: ../Doc/library/cookie.rst:198
msgid "The name of the cookie."
msgstr ""

# 3b1fb3a57e894553ba2faf771b418ef6
#: ../Doc/library/cookie.rst:203
msgid "Set the *key*, *value* and *coded_value* attributes."
msgstr ""

#: ../Doc/library/cookie.rst:208
msgid "Whether *K* is a member of the set of keys of a :class:`Morsel`."
msgstr ""

#: ../Doc/library/cookie.rst:213
msgid ""
"Return a string representation of the Morsel, suitable to be sent as an HTTP "
"header. By default, all the attributes are included, unless *attrs* is "
"given, in which case it should be a list of attributes to use. *header* is "
"by default ``\"Set-Cookie:\"``."
msgstr ""

#: ../Doc/library/cookie.rst:221
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP header was sent."
msgstr ""

#: ../Doc/library/cookie.rst:229
msgid ""
"Return a string representing the Morsel, without any surrounding HTTP or "
"JavaScript."
msgstr ""

# 112c6a75df5e4f41a37a6c594bbf95ce
#: ../Doc/library/cookie.rst:240
msgid "The following example demonstrates how to use the :mod:`Cookie` module."
msgstr ""

# 9ad9b658d1844e798813082787b9ffa3
#: ../Doc/library/cookielib.rst:2
msgid ":mod:`cookielib` --- Cookie handling for HTTP clients"
msgstr ""

# 8622b42448d042d8b018943672e036b2
#: ../Doc/library/cookielib.rst:10
msgid ""
"The :mod:`cookielib` module has been renamed to :mod:`http.cookiejar` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# becf54766139488f85ffc89432b331a4
#: ../Doc/library/cookielib.rst:16
msgid "**Source code:** :source:`Lib/cookielib.py`"
msgstr ""

# 459d6d3fdb844c2da9990a3b22c5f7a2
#: ../Doc/library/cookielib.rst:20
msgid ""
"The :mod:`cookielib` module defines classes for automatic handling of HTTP "
"cookies.  It is useful for accessing web sites that require small pieces of "
"data -- :dfn:`cookies` -- to be set on the client machine by an HTTP "
"response from a web server, and then returned to the server in later HTTP "
"requests."
msgstr ""

# ed9f47cc8c56492ea18cc6f300055adb
#: ../Doc/library/cookielib.rst:25
msgid ""
"Both the regular Netscape cookie protocol and the protocol defined by :rfc:"
"`2965` are handled.  RFC 2965 handling is switched off by default. :rfc:"
"`2109` cookies are parsed as Netscape cookies and subsequently treated "
"either as Netscape or RFC 2965 cookies according to the 'policy' in effect. "
"Note that the great majority of cookies on the Internet are Netscape "
"cookies. :mod:`cookielib` attempts to follow the de-facto Netscape cookie "
"protocol (which differs substantially from that set out in the original "
"Netscape specification), including taking note of the ``max-age`` and "
"``port`` cookie-attributes introduced with RFC 2965."
msgstr ""

#: ../Doc/library/cookielib.rst:37
msgid ""
"The various named parameters found in :mailheader:`Set-Cookie` and :"
"mailheader:`Set-Cookie2` headers (eg. ``domain`` and ``expires``) are "
"conventionally referred to as :dfn:`attributes`.  To distinguish them from "
"Python attributes, the documentation for this module uses the term :dfn:"
"`cookie-attribute` instead."
msgstr ""

#: ../Doc/library/cookielib.rst:44
msgid "The module defines the following exception:"
msgstr ""

# db46edde51f94c00b1f2b5ffd02d6ee7
#: ../Doc/library/cookielib.rst:49
msgid ""
"Instances of :class:`FileCookieJar` raise this exception on failure to load "
"cookies from a file."
msgstr ""

# 124cf79bef3b42649bc06c1c7785abf5
# 8c5e15fd72974b4eb334d99870e28c68
#: ../Doc/library/cookielib.rst:54 ../Doc/library/cookielib.rst:276
msgid ""
"For backwards-compatibility with Python 2.4 (which raised an :exc:"
"`IOError`), :exc:`LoadError` is a subclass of :exc:`IOError`."
msgstr ""

#: ../Doc/library/cookielib.rst:58 ../Doc/library/urllib2.rst:126
msgid "The following classes are provided:"
msgstr ""

#: ../Doc/library/cookielib.rst:63
msgid "*policy* is an object implementing the :class:`CookiePolicy` interface."
msgstr ""

#: ../Doc/library/cookielib.rst:65
msgid ""
"The :class:`CookieJar` class stores HTTP cookies.  It extracts cookies from "
"HTTP requests, and returns them in HTTP responses. :class:`CookieJar` "
"instances automatically expire contained cookies when necessary.  Subclasses "
"are also responsible for storing and retrieving cookies from a file or "
"database."
msgstr ""

#: ../Doc/library/cookielib.rst:73
msgid ""
"*policy* is an object implementing the :class:`CookiePolicy` interface.  For "
"the other arguments, see the documentation for the corresponding attributes."
msgstr ""

#: ../Doc/library/cookielib.rst:76
msgid ""
"A :class:`CookieJar` which can load cookies from, and perhaps save cookies "
"to, a file on disk.  Cookies are **NOT** loaded from the named file until "
"either the :meth:`load` or :meth:`revert` method is called.  Subclasses of "
"this class are documented in section :ref:`file-cookie-jar-classes`."
msgstr ""

#: ../Doc/library/cookielib.rst:84
msgid ""
"This class is responsible for deciding whether each cookie should be "
"accepted from / returned to the server."
msgstr ""

#: ../Doc/library/cookielib.rst:90
msgid ""
"Constructor arguments should be passed as keyword arguments only. "
"*blocked_domains* is a sequence of domain names that we never accept cookies "
"from, nor return cookies to. *allowed_domains* if not :const:`None`, this is "
"a sequence of the only domains for which we accept and return cookies.  For "
"all other arguments, see the documentation for :class:`CookiePolicy` and :"
"class:`DefaultCookiePolicy` objects."
msgstr ""

#: ../Doc/library/cookielib.rst:97
msgid ""
":class:`DefaultCookiePolicy` implements the standard accept / reject rules "
"for Netscape and RFC 2965 cookies.  By default, RFC 2109 cookies (ie. "
"cookies received in a :mailheader:`Set-Cookie` header with a version cookie-"
"attribute of 1) are treated according to the RFC 2965 rules.  However, if "
"RFC 2965 handling is turned off or :attr:`rfc2109_as_netscape` is True, RFC "
"2109 cookies are 'downgraded' by the :class:`CookieJar` instance to Netscape "
"cookies, by setting the :attr:`version` attribute of the :class:`Cookie` "
"instance to 0. :class:`DefaultCookiePolicy` also provides some parameters to "
"allow some fine-tuning of policy."
msgstr ""

# 8a0f6bec79784b81a7e4fc2a60da9db0
#: ../Doc/library/cookielib.rst:110
msgid ""
"This class represents Netscape, RFC 2109 and RFC 2965 cookies.  It is not "
"expected that users of :mod:`cookielib` construct their own :class:`Cookie` "
"instances.  Instead, if necessary, call :meth:`make_cookies` on a :class:"
"`CookieJar` instance."
msgstr ""

#: ../Doc/library/cookielib.rst:119
msgid "URL opening with automatic cookie handling."
msgstr ""

# 320084f7db4d4827a4c6476908901d35
#: ../Doc/library/cookielib.rst:122
msgid ""
"HTTP cookie classes, principally useful for server-side code.  The :mod:"
"`cookielib` and :mod:`Cookie` modules do not depend on each other."
msgstr ""

# e6c07ac6b75c4bb7b6a94d22df7870e2
#: ../Doc/library/cookielib.rst:126
msgid ""
"The specification of the original Netscape cookie protocol.  Though this is "
"still the dominant protocol, the 'Netscape cookie protocol' implemented by "
"all the major browsers (and :mod:`cookielib`) only bears a passing "
"resemblance to the one sketched out in ``cookie_spec.html``."
msgstr ""

#: ../Doc/library/cookielib.rst:132
msgid "Obsoleted by RFC 2965. Uses :mailheader:`Set-Cookie` with version=1."
msgstr ""

#: ../Doc/library/cookielib.rst:135
msgid ""
"The Netscape protocol with the bugs fixed.  Uses :mailheader:`Set-Cookie2` "
"in place of :mailheader:`Set-Cookie`.  Not widely used."
msgstr ""

#: ../Doc/library/cookielib.rst:139
msgid "Unfinished errata to RFC 2965."
msgstr ""

#: ../Doc/library/cookielib.rst:141
msgid ":rfc:`2964` - Use of HTTP State Management"
msgstr ""

#: ../Doc/library/cookielib.rst:146
msgid "CookieJar and FileCookieJar Objects"
msgstr ""

#: ../Doc/library/cookielib.rst:148
msgid ""
":class:`CookieJar` objects support the :term:`iterator` protocol for "
"iterating over contained :class:`Cookie` objects."
msgstr ""

#: ../Doc/library/cookielib.rst:151
msgid ":class:`CookieJar` has the following methods:"
msgstr ""

#: ../Doc/library/cookielib.rst:156
msgid "Add correct :mailheader:`Cookie` header to *request*."
msgstr ""

#: ../Doc/library/cookielib.rst:158
msgid ""
"If policy allows (ie. the :attr:`rfc2965` and :attr:`hide_cookie2` "
"attributes of the :class:`CookieJar`'s :class:`CookiePolicy` instance are "
"true and false respectively), the :mailheader:`Cookie2` header is also added "
"when appropriate."
msgstr ""

# a1c18b924b8a47479be7f1425897746e
#: ../Doc/library/cookielib.rst:162
msgid ""
"The *request* object (usually a :class:`urllib2.Request` instance) must "
"support the methods :meth:`get_full_url`, :meth:`get_host`, :meth:"
"`get_type`, :meth:`unverifiable`, :meth:`get_origin_req_host`, :meth:"
"`has_header`, :meth:`get_header`, :meth:`header_items`, and :meth:"
"`add_unredirected_header`,as documented by :mod:`urllib2`."
msgstr ""

#: ../Doc/library/cookielib.rst:171
msgid ""
"Extract cookies from HTTP *response* and store them in the :class:"
"`CookieJar`, where allowed by policy."
msgstr ""

#: ../Doc/library/cookielib.rst:174
msgid ""
"The :class:`CookieJar` will look for allowable :mailheader:`Set-Cookie` and :"
"mailheader:`Set-Cookie2` headers in the *response* argument, and store "
"cookies as appropriate (subject to the :meth:`CookiePolicy.set_ok` method's "
"approval)."
msgstr ""

# fb5f37088a1f4556b260e3bf6f334792
#: ../Doc/library/cookielib.rst:178
msgid ""
"The *response* object (usually the result of a call to :meth:`urllib2."
"urlopen`, or similar) should support an :meth:`info` method, which returns "
"an object with a :meth:`getallmatchingheaders` method (usually a :class:"
"`mimetools.Message` instance)."
msgstr ""

# cdac8101a1ba43e281ad272e7fa0dc2b
#: ../Doc/library/cookielib.rst:183
msgid ""
"The *request* object (usually a :class:`urllib2.Request` instance) must "
"support the methods :meth:`get_full_url`, :meth:`get_host`, :meth:"
"`unverifiable`, and :meth:`get_origin_req_host`, as documented by :mod:"
"`urllib2`.  The request is used to set default values for cookie-attributes "
"as well as for checking that the cookie is allowed to be set."
msgstr ""

#: ../Doc/library/cookielib.rst:192
msgid "Set the :class:`CookiePolicy` instance to be used."
msgstr ""

#: ../Doc/library/cookielib.rst:197
msgid ""
"Return sequence of :class:`Cookie` objects extracted from *response* object."
msgstr ""

#: ../Doc/library/cookielib.rst:199
msgid ""
"See the documentation for :meth:`extract_cookies` for the interfaces "
"required of the *response* and *request* arguments."
msgstr ""

#: ../Doc/library/cookielib.rst:205
msgid "Set a :class:`Cookie` if policy says it's OK to do so."
msgstr ""

#: ../Doc/library/cookielib.rst:210
msgid ""
"Set a :class:`Cookie`, without checking with policy to see whether or not it "
"should be set."
msgstr ""

#: ../Doc/library/cookielib.rst:216
msgid "Clear some cookies."
msgstr ""

#: ../Doc/library/cookielib.rst:218
msgid ""
"If invoked without arguments, clear all cookies.  If given a single "
"argument, only cookies belonging to that *domain* will be removed. If given "
"two arguments, cookies belonging to the specified *domain* and URL *path* "
"are removed.  If given three arguments, then the cookie with the specified "
"*domain*, *path* and *name* is removed."
msgstr ""

#: ../Doc/library/cookielib.rst:224
msgid "Raises :exc:`KeyError` if no matching cookie exists."
msgstr ""

#: ../Doc/library/cookielib.rst:229
msgid "Discard all session cookies."
msgstr ""

#: ../Doc/library/cookielib.rst:231
msgid ""
"Discards all contained cookies that have a true :attr:`discard` attribute "
"(usually because they had either no ``max-age`` or ``expires`` cookie-"
"attribute, or an explicit ``discard`` cookie-attribute).  For interactive "
"browsers, the end of a session usually corresponds to closing the browser "
"window."
msgstr ""

#: ../Doc/library/cookielib.rst:236
msgid ""
"Note that the :meth:`save` method won't save session cookies anyway, unless "
"you ask otherwise by passing a true *ignore_discard* argument."
msgstr ""

#: ../Doc/library/cookielib.rst:239
msgid ":class:`FileCookieJar` implements the following additional methods:"
msgstr ""

#: ../Doc/library/cookielib.rst:244
msgid "Save cookies to a file."
msgstr ""

#: ../Doc/library/cookielib.rst:246
msgid ""
"This base class raises :exc:`NotImplementedError`.  Subclasses may leave "
"this method unimplemented."
msgstr ""

#: ../Doc/library/cookielib.rst:249
msgid ""
"*filename* is the name of file in which to save cookies.  If *filename* is "
"not specified, :attr:`self.filename` is used (whose default is the value "
"passed to the constructor, if any); if :attr:`self.filename` is :const:"
"`None`, :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/cookielib.rst:254
msgid ""
"*ignore_discard*: save even cookies set to be discarded. *ignore_expires*: "
"save even cookies that have expired"
msgstr ""

#: ../Doc/library/cookielib.rst:257
msgid ""
"The file is overwritten if it already exists, thus wiping all the cookies it "
"contains.  Saved cookies can be restored later using the :meth:`load` or :"
"meth:`revert` methods."
msgstr ""

#: ../Doc/library/cookielib.rst:264
msgid "Load cookies from a file."
msgstr ""

#: ../Doc/library/cookielib.rst:266
msgid "Old cookies are kept unless overwritten by newly loaded ones."
msgstr ""

#: ../Doc/library/cookielib.rst:268
msgid "Arguments are as for :meth:`save`."
msgstr ""

#: ../Doc/library/cookielib.rst:270
msgid ""
"The named file must be in the format understood by the class, or :exc:"
"`LoadError` will be raised.  Also, :exc:`IOError` may be raised, for example "
"if the file does not exist."
msgstr ""

#: ../Doc/library/cookielib.rst:282
msgid "Clear all cookies and reload cookies from a saved file."
msgstr ""

#: ../Doc/library/cookielib.rst:284
msgid ""
":meth:`revert` can raise the same exceptions as :meth:`load`. If there is a "
"failure, the object's state will not be altered."
msgstr ""

#: ../Doc/library/cookielib.rst:287
msgid ":class:`FileCookieJar` instances have the following public attributes:"
msgstr ""

#: ../Doc/library/cookielib.rst:292
msgid ""
"Filename of default file in which to keep cookies.  This attribute may be "
"assigned to."
msgstr ""

#: ../Doc/library/cookielib.rst:298
msgid ""
"If true, load cookies lazily from disk.  This attribute should not be "
"assigned to.  This is only a hint, since this only affects performance, not "
"behaviour (unless the cookies on disk are changing). A :class:`CookieJar` "
"object may ignore it.  None of the :class:`FileCookieJar` classes included "
"in the standard library lazily loads cookies."
msgstr ""

#: ../Doc/library/cookielib.rst:308
msgid "FileCookieJar subclasses and co-operation with web browsers"
msgstr ""

# d00a9b00db814d42a2e3373d78563721
#: ../Doc/library/cookielib.rst:310
msgid ""
"The following :class:`CookieJar` subclasses are provided for reading and "
"writing ."
msgstr ""

#: ../Doc/library/cookielib.rst:315
msgid ""
"A :class:`FileCookieJar` that can load from and save cookies to disk in the "
"Mozilla ``cookies.txt`` file format (which is also used by the Lynx and "
"Netscape browsers)."
msgstr ""

# 011551efb9384cf3acc8ef6effc7384e
#: ../Doc/library/cookielib.rst:321
msgid ""
"Version 3 of the Firefox web browser no longer writes cookies in the "
"``cookies.txt`` file format."
msgstr ""

#: ../Doc/library/cookielib.rst:326
msgid ""
"This loses information about RFC 2965 cookies, and also about newer or non-"
"standard cookie-attributes such as ``port``."
msgstr ""

#: ../Doc/library/cookielib.rst:331
msgid ""
"Back up your cookies before saving if you have cookies whose loss / "
"corruption would be inconvenient (there are some subtleties which may lead "
"to slight changes in the file over a load / save round-trip)."
msgstr ""

#: ../Doc/library/cookielib.rst:335
msgid ""
"Also note that cookies saved while Mozilla is running will get clobbered by "
"Mozilla."
msgstr ""

#: ../Doc/library/cookielib.rst:341
msgid ""
"A :class:`FileCookieJar` that can load from and save cookies to disk in "
"format compatible with the libwww-perl library's ``Set-Cookie3`` file "
"format.  This is convenient if you want to store cookies in a human-readable "
"file."
msgstr ""

#: ../Doc/library/cookielib.rst:349
msgid "CookiePolicy Objects"
msgstr ""

#: ../Doc/library/cookielib.rst:351
msgid ""
"Objects implementing the :class:`CookiePolicy` interface have the following "
"methods:"
msgstr ""

#: ../Doc/library/cookielib.rst:357
msgid ""
"Return boolean value indicating whether cookie should be accepted from "
"server."
msgstr ""

# f59dca63c56e44149bd5aae12d056e33
#: ../Doc/library/cookielib.rst:359
msgid ""
"*cookie* is a :class:`cookielib.Cookie` instance.  *request* is an object "
"implementing the interface defined by the documentation for :meth:`CookieJar."
"extract_cookies`."
msgstr ""

#: ../Doc/library/cookielib.rst:366
msgid ""
"Return boolean value indicating whether cookie should be returned to server."
msgstr ""

# 0a2c3f4903334d9f8545af957e76b4f4
#: ../Doc/library/cookielib.rst:368
msgid ""
"*cookie* is a :class:`cookielib.Cookie` instance.  *request* is an object "
"implementing the interface defined by the documentation for :meth:`CookieJar."
"add_cookie_header`."
msgstr ""

#: ../Doc/library/cookielib.rst:375
msgid "Return false if cookies should not be returned, given cookie domain."
msgstr ""

#: ../Doc/library/cookielib.rst:377
msgid ""
"This method is an optimization.  It removes the need for checking every "
"cookie with a particular domain (which might involve reading many files).  "
"Returning true from :meth:`domain_return_ok` and :meth:`path_return_ok` "
"leaves all the work to :meth:`return_ok`."
msgstr ""

#: ../Doc/library/cookielib.rst:382
msgid ""
"If :meth:`domain_return_ok` returns true for the cookie domain, :meth:"
"`path_return_ok` is called for the cookie path.  Otherwise, :meth:"
"`path_return_ok` and :meth:`return_ok` are never called for that cookie "
"domain.  If :meth:`path_return_ok` returns true, :meth:`return_ok` is called "
"with the :class:`Cookie` object itself for a full check.  Otherwise, :meth:"
"`return_ok` is never called for that cookie path."
msgstr ""

#: ../Doc/library/cookielib.rst:389
msgid ""
"Note that :meth:`domain_return_ok` is called for every *cookie* domain, not "
"just for the *request* domain.  For example, the function might be called "
"with both ``\".example.com\"`` and ``\"www.example.com\"`` if the request "
"domain is ``\"www.example.com\"``.  The same goes for :meth:`path_return_ok`."
msgstr ""

#: ../Doc/library/cookielib.rst:394
msgid "The *request* argument is as documented for :meth:`return_ok`."
msgstr ""

#: ../Doc/library/cookielib.rst:399
msgid "Return false if cookies should not be returned, given cookie path."
msgstr ""

#: ../Doc/library/cookielib.rst:401
msgid "See the documentation for :meth:`domain_return_ok`."
msgstr ""

#: ../Doc/library/cookielib.rst:403
msgid ""
"In addition to implementing the methods above, implementations of the :class:"
"`CookiePolicy` interface must also supply the following attributes, "
"indicating which protocols should be used, and how.  All of these attributes "
"may be assigned to."
msgstr ""

#: ../Doc/library/cookielib.rst:411
msgid "Implement Netscape protocol."
msgstr ""

#: ../Doc/library/cookielib.rst:416
msgid "Implement RFC 2965 protocol."
msgstr ""

#: ../Doc/library/cookielib.rst:421
msgid ""
"Don't add :mailheader:`Cookie2` header to requests (the presence of this "
"header indicates to the server that we understand RFC 2965 cookies)."
msgstr ""

#: ../Doc/library/cookielib.rst:424
msgid ""
"The most useful way to define a :class:`CookiePolicy` class is by "
"subclassing from :class:`DefaultCookiePolicy` and overriding some or all of "
"the methods above.  :class:`CookiePolicy` itself may be used as a 'null "
"policy' to allow setting and receiving any and all cookies (this is unlikely "
"to be useful)."
msgstr ""

#: ../Doc/library/cookielib.rst:433
msgid "DefaultCookiePolicy Objects"
msgstr ""

#: ../Doc/library/cookielib.rst:435
msgid "Implements the standard rules for accepting and returning cookies."
msgstr ""

#: ../Doc/library/cookielib.rst:437
msgid ""
"Both RFC 2965 and Netscape cookies are covered.  RFC 2965 handling is "
"switched off by default."
msgstr ""

#: ../Doc/library/cookielib.rst:440
msgid ""
"The easiest way to provide your own policy is to override this class and "
"call its methods in your overridden implementations before adding your own "
"additional checks::"
msgstr ""

#: ../Doc/library/cookielib.rst:453
msgid ""
"In addition to the features required to implement the :class:`CookiePolicy` "
"interface, this class allows you to block and allow domains from setting and "
"receiving cookies.  There are also some strictness switches that allow you "
"to tighten up the rather loose Netscape protocol rules a little bit (at the "
"cost of blocking some benign cookies)."
msgstr ""

#: ../Doc/library/cookielib.rst:459
msgid ""
"A domain blacklist and whitelist is provided (both off by default). Only "
"domains not in the blacklist and present in the whitelist (if the whitelist "
"is active) participate in cookie setting and returning.  Use the "
"*blocked_domains* constructor argument, and :meth:`blocked_domains` and :"
"meth:`set_blocked_domains` methods (and the corresponding argument and "
"methods for *allowed_domains*).  If you set a whitelist, you can turn it off "
"again by setting it to :const:`None`."
msgstr ""

#: ../Doc/library/cookielib.rst:467
msgid ""
"Domains in block or allow lists that do not start with a dot must equal the "
"cookie domain to be matched.  For example, ``\"example.com\"`` matches a "
"blacklist entry of ``\"example.com\"``, but ``\"www.example.com\"`` does "
"not.  Domains that do start with a dot are matched by more specific domains "
"too. For example, both ``\"www.example.com\"`` and ``\"www.coyote.example.com"
"\"`` match ``\".example.com\"`` (but ``\"example.com\"`` itself does not).  "
"IP addresses are an exception, and must match exactly.  For example, if "
"blocked_domains contains ``\"192.168.1.2\"`` and ``\".168.1.2\"``, "
"192.168.1.2 is blocked, but 193.168.1.2 is not."
msgstr ""

#: ../Doc/library/cookielib.rst:476
msgid ""
":class:`DefaultCookiePolicy` implements the following additional methods:"
msgstr ""

#: ../Doc/library/cookielib.rst:481
msgid "Return the sequence of blocked domains (as a tuple)."
msgstr ""

#: ../Doc/library/cookielib.rst:486
msgid "Set the sequence of blocked domains."
msgstr ""

#: ../Doc/library/cookielib.rst:491
msgid ""
"Return whether *domain* is on the blacklist for setting or receiving cookies."
msgstr ""

#: ../Doc/library/cookielib.rst:496
msgid "Return :const:`None`, or the sequence of allowed domains (as a tuple)."
msgstr ""

#: ../Doc/library/cookielib.rst:501
msgid "Set the sequence of allowed domains, or :const:`None`."
msgstr ""

#: ../Doc/library/cookielib.rst:506
msgid ""
"Return whether *domain* is not on the whitelist for setting or receiving "
"cookies."
msgstr ""

#: ../Doc/library/cookielib.rst:509
msgid ""
":class:`DefaultCookiePolicy` instances have the following attributes, which "
"are all initialised from the constructor arguments of the same name, and "
"which may all be assigned to."
msgstr ""

#: ../Doc/library/cookielib.rst:516
msgid ""
"If true, request that the :class:`CookieJar` instance downgrade RFC 2109 "
"cookies (ie. cookies received in a :mailheader:`Set-Cookie` header with a "
"version cookie-attribute of 1) to Netscape cookies by setting the version "
"attribute of the :class:`Cookie` instance to 0.  The default value is :const:"
"`None`, in which case RFC 2109 cookies are downgraded if and only if RFC "
"2965 handling is turned off.  Therefore, RFC 2109 cookies are downgraded by "
"default."
msgstr ""

#: ../Doc/library/cookielib.rst:525
msgid "General strictness switches:"
msgstr ""

#: ../Doc/library/cookielib.rst:530
msgid ""
"Don't allow sites to set two-component domains with country-code top-level "
"domains like ``.co.uk``, ``.gov.uk``, ``.co.nz``.etc.  This is far from "
"perfect and isn't guaranteed to work!"
msgstr ""

#: ../Doc/library/cookielib.rst:534
msgid "RFC 2965 protocol strictness switches:"
msgstr ""

#: ../Doc/library/cookielib.rst:539
msgid ""
"Follow RFC 2965 rules on unverifiable transactions (usually, an unverifiable "
"transaction is one resulting from a redirect or a request for an image "
"hosted on another site).  If this is false, cookies are *never* blocked on "
"the basis of verifiability"
msgstr ""

#: ../Doc/library/cookielib.rst:544
msgid "Netscape protocol strictness switches:"
msgstr ""

#: ../Doc/library/cookielib.rst:549
msgid ""
"apply RFC 2965 rules on unverifiable transactions even to Netscape cookies"
msgstr ""

#: ../Doc/library/cookielib.rst:554
msgid ""
"Flags indicating how strict to be with domain-matching rules for Netscape "
"cookies.  See below for acceptable values."
msgstr ""

#: ../Doc/library/cookielib.rst:560
msgid ""
"Ignore cookies in Set-Cookie: headers that have names starting with ``'$'``."
msgstr ""

#: ../Doc/library/cookielib.rst:565
msgid "Don't allow setting cookies whose path doesn't path-match request URI."
msgstr ""

#: ../Doc/library/cookielib.rst:567
msgid ""
":attr:`strict_ns_domain` is a collection of flags.  Its value is constructed "
"by or-ing together (for example, ``DomainStrictNoDots|"
"DomainStrictNonDomain`` means both flags are set)."
msgstr ""

#: ../Doc/library/cookielib.rst:574
msgid ""
"When setting cookies, the 'host prefix' must not contain a dot (eg. ``www."
"foo.bar.com`` can't set a cookie for ``.bar.com``, because ``www.foo`` "
"contains a dot)."
msgstr ""

#: ../Doc/library/cookielib.rst:581
msgid ""
"Cookies that did not explicitly specify a ``domain`` cookie-attribute can "
"only be returned to a domain equal to the domain that set the cookie (eg. "
"``spam.example.com`` won't be returned cookies from ``example.com`` that had "
"no ``domain`` cookie-attribute)."
msgstr ""

#: ../Doc/library/cookielib.rst:589
msgid "When setting cookies, require a full RFC 2965 domain-match."
msgstr ""

#: ../Doc/library/cookielib.rst:591
msgid ""
"The following attributes are provided for convenience, and are the most "
"useful combinations of the above flags:"
msgstr ""

#: ../Doc/library/cookielib.rst:597
msgid ""
"Equivalent to 0 (ie. all of the above Netscape domain strictness flags "
"switched off)."
msgstr ""

#: ../Doc/library/cookielib.rst:603
msgid "Equivalent to ``DomainStrictNoDots|DomainStrictNonDomain``."
msgstr ""

# 17696b694d3d4d3f8786d5a947be1e2a
#: ../Doc/library/cookielib.rst:611
msgid ""
":class:`Cookie` instances have Python attributes roughly corresponding to "
"the standard cookie-attributes specified in the various cookie standards.  "
"The correspondence is not one-to-one, because there are complicated rules "
"for assigning default values, because the ``max-age`` and ``expires`` cookie-"
"attributes contain equivalent information, and because RFC 2109 cookies may "
"be 'downgraded' by :mod:`cookielib` from version 1 to version 0 (Netscape) "
"cookies."
msgstr ""

#: ../Doc/library/cookielib.rst:619
msgid ""
"Assignment to these attributes should not be necessary other than in rare "
"circumstances in a :class:`CookiePolicy` method.  The class does not enforce "
"internal consistency, so you should know what you're doing if you do that."
msgstr ""

# 49654d154a514a34a522890d0bd22240
#: ../Doc/library/cookielib.rst:626
msgid ""
"Integer or :const:`None`.  Netscape cookies have :attr:`version` 0. RFC 2965 "
"and RFC 2109 cookies have a ``version`` cookie-attribute of 1.  However, "
"note that :mod:`cookielib` may 'downgrade' RFC 2109 cookies to Netscape "
"cookies, in which case :attr:`version` is 0."
msgstr ""

#: ../Doc/library/cookielib.rst:634
msgid "Cookie name (a string)."
msgstr ""

#: ../Doc/library/cookielib.rst:639
msgid "Cookie value (a string), or :const:`None`."
msgstr ""

#: ../Doc/library/cookielib.rst:644
msgid ""
"String representing a port or a set of ports (eg. '80', or '80,8080'), or :"
"const:`None`."
msgstr ""

#: ../Doc/library/cookielib.rst:650
msgid "Cookie path (a string, eg. ``'/acme/rocket_launchers'``)."
msgstr ""

#: ../Doc/library/cookielib.rst:655
msgid "True if cookie should only be returned over a secure connection."
msgstr ""

#: ../Doc/library/cookielib.rst:660
msgid ""
"Integer expiry date in seconds since epoch, or :const:`None`.  See also the :"
"meth:`is_expired` method."
msgstr ""

#: ../Doc/library/cookielib.rst:666
msgid "True if this is a session cookie."
msgstr ""

#: ../Doc/library/cookielib.rst:671
msgid ""
"String comment from the server explaining the function of this cookie, or :"
"const:`None`."
msgstr ""

#: ../Doc/library/cookielib.rst:677
msgid ""
"URL linking to a comment from the server explaining the function of this "
"cookie, or :const:`None`."
msgstr ""

# f0c0b4db3bec46729c0a6b070093508f
#: ../Doc/library/cookielib.rst:683
msgid ""
"True if this cookie was received as an RFC 2109 cookie (ie. the cookie "
"arrived in a :mailheader:`Set-Cookie` header, and the value of the Version "
"cookie-attribute in that header was 1).  This attribute is provided because :"
"mod:`cookielib` may 'downgrade' RFC 2109 cookies to Netscape cookies, in "
"which case :attr:`version` is 0."
msgstr ""

#: ../Doc/library/cookielib.rst:694
msgid ""
"True if a port or set of ports was explicitly specified by the server (in "
"the :mailheader:`Set-Cookie` / :mailheader:`Set-Cookie2` header)."
msgstr ""

#: ../Doc/library/cookielib.rst:700
msgid "True if a domain was explicitly specified by the server."
msgstr ""

#: ../Doc/library/cookielib.rst:705
msgid ""
"True if the domain explicitly specified by the server began with a dot "
"(``'.'``)."
msgstr ""

#: ../Doc/library/cookielib.rst:708
msgid ""
"Cookies may have additional non-standard cookie-attributes.  These may be "
"accessed using the following methods:"
msgstr ""

#: ../Doc/library/cookielib.rst:714
msgid "Return true if cookie has the named cookie-attribute."
msgstr ""

#: ../Doc/library/cookielib.rst:719
msgid ""
"If cookie has the named cookie-attribute, return its value. Otherwise, "
"return *default*."
msgstr ""

#: ../Doc/library/cookielib.rst:725
msgid "Set the value of the named cookie-attribute."
msgstr ""

#: ../Doc/library/cookielib.rst:727
msgid "The :class:`Cookie` class also defines the following method:"
msgstr ""

#: ../Doc/library/cookielib.rst:732
msgid ""
"True if cookie has passed the time at which the server requested it should "
"expire.  If *now* is given (in seconds since the epoch), return whether the "
"cookie has expired at the specified time."
msgstr ""

# a2d7b5f463f94ba6b8b187f25b4afbca
#: ../Doc/library/cookielib.rst:742
msgid "The first example shows the most common usage of :mod:`cookielib`::"
msgstr ""

#: ../Doc/library/cookielib.rst:749
msgid ""
"This example illustrates how to open a URL using your Netscape, Mozilla, or "
"Lynx cookies (assumes Unix/Netscape convention for location of the cookies "
"file)::"
msgstr ""

#: ../Doc/library/cookielib.rst:758
msgid ""
"The next example illustrates the use of :class:`DefaultCookiePolicy`. Turn "
"on RFC 2965 cookies, be more strict about domains when setting and returning "
"Netscape cookies, and block some domains from setting cookies or having them "
"returned::"
msgstr ""

#: ../Doc/library/copy.rst:2
msgid ":mod:`copy` --- Shallow and deep copy operations"
msgstr ""

# a7418d65aa704a4980b5b8b3cb9fd4a8
#: ../Doc/library/copy.rst:7
msgid ""
"Assignment statements in Python do not copy objects, they create bindings "
"between a target and an object. For collections that are mutable or contain "
"mutable items, a copy is sometimes needed so one can change one copy without "
"changing the other. This module provides generic shallow and deep copy "
"operations (explained below)."
msgstr ""

#: ../Doc/library/copy.rst:14
msgid "Interface summary:"
msgstr ""

#: ../Doc/library/copy.rst:18
msgid "Return a shallow copy of *x*."
msgstr ""

#: ../Doc/library/copy.rst:23
msgid "Return a deep copy of *x*."
msgstr ""

#: ../Doc/library/copy.rst:28
msgid "Raised for module specific errors."
msgstr ""

#: ../Doc/library/copy.rst:31
msgid ""
"The difference between shallow and deep copying is only relevant for "
"compound objects (objects that contain other objects, like lists or class "
"instances):"
msgstr ""

#: ../Doc/library/copy.rst:34
msgid ""
"A *shallow copy* constructs a new compound object and then (to the extent "
"possible) inserts *references* into it to the objects found in the original."
msgstr ""

#: ../Doc/library/copy.rst:37
msgid ""
"A *deep copy* constructs a new compound object and then, recursively, "
"inserts *copies* into it of the objects found in the original."
msgstr ""

#: ../Doc/library/copy.rst:40
msgid ""
"Two problems often exist with deep copy operations that don't exist with "
"shallow copy operations:"
msgstr ""

#: ../Doc/library/copy.rst:43
msgid ""
"Recursive objects (compound objects that, directly or indirectly, contain a "
"reference to themselves) may cause a recursive loop."
msgstr ""

#: ../Doc/library/copy.rst:46
msgid ""
"Because deep copy copies *everything* it may copy too much, e.g., "
"administrative data structures that should be shared even between copies."
msgstr ""

#: ../Doc/library/copy.rst:49
msgid "The :func:`deepcopy` function avoids these problems by:"
msgstr ""

#: ../Doc/library/copy.rst:51
msgid ""
"keeping a \"memo\" dictionary of objects already copied during the current "
"copying pass; and"
msgstr ""

#: ../Doc/library/copy.rst:54
msgid ""
"letting user-defined classes override the copying operation or the set of "
"components copied."
msgstr ""

#: ../Doc/library/copy.rst:57
msgid ""
"This module does not copy types like module, method, stack trace, stack "
"frame, file, socket, window, array, or any similar types.  It does \"copy\" "
"functions and classes (shallow and deeply), by returning the original object "
"unchanged; this is compatible with the way these are treated by the :mod:"
"`pickle` module."
msgstr ""

#: ../Doc/library/copy.rst:62
msgid ""
"Shallow copies of dictionaries can be made using :meth:`dict.copy`, and of "
"lists by assigning a slice of the entire list, for example, ``copied_list = "
"original_list[:]``."
msgstr ""

# 3770dc9733b747e2b93be5ffc88492a2
#: ../Doc/library/copy.rst:71
msgid ""
"Classes can use the same interfaces to control copying that they use to "
"control pickling.  See the description of module :mod:`pickle` for "
"information on these methods.  The :mod:`copy` module does not use the :mod:"
"`copy_reg` registration module."
msgstr ""

#: ../Doc/library/copy.rst:80
msgid ""
"In order for a class to define its own copy implementation, it can define "
"special methods :meth:`__copy__` and :meth:`__deepcopy__`.  The former is "
"called to implement the shallow copy operation; no additional arguments are "
"passed. The latter is called to implement the deep copy operation; it is "
"passed one argument, the memo dictionary.  If the :meth:`__deepcopy__` "
"implementation needs to make a deep copy of a component, it should call the :"
"func:`deepcopy` function with the component as first argument and the memo "
"dictionary as second argument."
msgstr ""

#: ../Doc/library/copy.rst:92
msgid ""
"Discussion of the special methods used to support object state retrieval and "
"restoration."
msgstr ""

# c5ffdf10012f4052b90c98a91db5b99d
#: ../Doc/library/copy_reg.rst:2
msgid ":mod:`copy_reg` --- Register :mod:`pickle` support functions"
msgstr ""

# 7e16e80a19d94843a6da841fedb0eb11
#: ../Doc/library/copy_reg.rst:8
msgid ""
"The :mod:`copy_reg` module has been renamed to :mod:`copyreg` in Python 3. "
"The :term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

# 4b32238f63eb4bc685fdd38aca0dc9c9
#: ../Doc/library/copy_reg.rst:17
msgid ""
"The :mod:`copy_reg` module provides support for the :mod:`pickle` and :mod:"
"`cPickle` modules.  The :mod:`copy` module is likely to use this in the "
"future as well.  It provides configuration information about object "
"constructors which are not classes.  Such constructors may be factory "
"functions or class instances."
msgstr ""

#: ../Doc/library/copy_reg.rst:26
msgid ""
"Declares *object* to be a valid constructor.  If *object* is not callable "
"(and hence not valid as a constructor), raises :exc:`TypeError`."
msgstr ""

# 10292369ee594322ac430093747fac70
#: ../Doc/library/copy_reg.rst:32
msgid ""
"Declares that *function* should be used as a \"reduction\" function for "
"objects of type *type*; *type* must not be a \"classic\" class object.  "
"(Classic classes are handled differently; see the documentation for the :mod:"
"`pickle` module for details.)  *function* should return either a string or a "
"tuple containing two or three elements."
msgstr ""

#: ../Doc/library/copy_reg.rst:38
msgid ""
"The optional *constructor* parameter, if provided, is a callable object "
"which can be used to reconstruct the object when called with the tuple of "
"arguments returned by *function* at pickling time.  :exc:`TypeError` will be "
"raised if *object* is a class or *constructor* is not callable."
msgstr ""

#: ../Doc/library/copy_reg.rst:43
msgid ""
"See the :mod:`pickle` module for more details on the interface expected of "
"*function* and *constructor*."
msgstr ""

#: ../Doc/library/crypt.rst:3
msgid ":mod:`crypt` --- Function to check Unix passwords"
msgstr ""

#: ../Doc/library/crypt.rst:17
msgid ""
"This module implements an interface to the :manpage:`crypt(3)` routine, "
"which is a one-way hash function based upon a modified DES algorithm; see "
"the Unix man page for further details.  Possible uses include allowing "
"Python scripts to accept typed passwords from the user, or attempting to "
"crack Unix passwords with a dictionary."
msgstr ""

#: ../Doc/library/crypt.rst:25
msgid ""
"Notice that the behavior of this module depends on the actual "
"implementation  of the :manpage:`crypt(3)` routine in the running system.  "
"Therefore, any extensions available on the current implementation will also  "
"be available on this module."
msgstr ""

#: ../Doc/library/crypt.rst:33
msgid ""
"*word* will usually be a user's password as typed at a prompt or  in a "
"graphical interface.  *salt* is usually a random two-character string which "
"will be used to perturb the DES algorithm in one of 4096 ways.  The "
"characters in *salt* must be in the set ``[./a-zA-Z0-9]``.  Returns the "
"hashed password as a string, which will be composed of characters from the "
"same alphabet as the salt (the first two characters represent the salt "
"itself)."
msgstr ""

#: ../Doc/library/crypt.rst:42
msgid ""
"Since a few :manpage:`crypt(3)` extensions allow different values, with "
"different sizes in the *salt*, it is recommended to use  the full crypted "
"password as salt when checking for a password."
msgstr ""

#: ../Doc/library/crypt.rst:46 ../Doc/library/telnetlib.rst:223
msgid "A simple example illustrating typical use::"
msgstr ""

#: ../Doc/library/crypto.rst:6
msgid "Cryptographic Services"
msgstr ""

#: ../Doc/library/crypto.rst:10
msgid ""
"The modules described in this chapter implement various algorithms of a "
"cryptographic nature.  They are available at the discretion of the "
"installation. Here's an overview:"
msgstr ""

# c87516c9d3e543b6ac727ac482239d5f
#: ../Doc/library/crypto.rst:26
msgid ""
"Hardcore cypherpunks will probably find the cryptographic modules written by "
"A.M. Kuchling of further interest; the package contains modules for various "
"encryption algorithms, most notably AES.  These modules are not distributed "
"with Python but available separately.  See the URL http://www.pycrypto.org  "
"for more information."
msgstr ""

#: ../Doc/library/csv.rst:3
msgid ":mod:`csv` --- CSV File Reading and Writing"
msgstr ""

#: ../Doc/library/csv.rst:16
msgid ""
"The so-called CSV (Comma Separated Values) format is the most common import "
"and export format for spreadsheets and databases.  There is no \"CSV standard"
"\", so the format is operationally defined by the many applications which "
"read and write it.  The lack of a standard means that subtle differences "
"often exist in the data produced and consumed by different applications.  "
"These differences can make it annoying to process CSV files from multiple "
"sources.  Still, while the delimiters and quoting characters vary, the "
"overall format is similar enough that it is possible to write a single "
"module which can efficiently manipulate such data, hiding the details of "
"reading and writing the data from the programmer."
msgstr ""

#: ../Doc/library/csv.rst:27
msgid ""
"The :mod:`csv` module implements classes to read and write tabular data in "
"CSV format.  It allows programmers to say, \"write this data in the format "
"preferred by Excel,\" or \"read data from this file which was generated by "
"Excel,\" without knowing the precise details of the CSV format used by "
"Excel.  Programmers can also describe the CSV formats understood by other "
"applications or define their own special-purpose CSV formats."
msgstr ""

#: ../Doc/library/csv.rst:34
msgid ""
"The :mod:`csv` module's :class:`reader` and :class:`writer` objects read and "
"write sequences.  Programmers can also read and write data in dictionary "
"form using the :class:`DictReader` and :class:`DictWriter` classes."
msgstr ""

# e68556ae6b7c4f88abc3de1d659fdf60
#: ../Doc/library/csv.rst:40
msgid ""
"This version of the :mod:`csv` module doesn't support Unicode input.  Also, "
"there are currently some issues regarding ASCII NUL characters.  "
"Accordingly, all input should be UTF-8 or printable ASCII to be safe; see "
"the examples in section :ref:`csv-examples`."
msgstr ""

#: ../Doc/library/csv.rst:49
msgid "The Python Enhancement Proposal which proposed this addition to Python."
msgstr ""

#: ../Doc/library/csv.rst:55 ../Doc/library/re.rst:413
#: ../Doc/library/xml.dom.rst:87
msgid "Module Contents"
msgstr ""

#: ../Doc/library/csv.rst:57
msgid "The :mod:`csv` module defines the following functions:"
msgstr ""

# 9fad2db547a44fd68602befd00271fcc
#: ../Doc/library/csv.rst:62
msgid ""
"Return a reader object which will iterate over lines in the given *csvfile*. "
"*csvfile* can be any object which supports the :term:`iterator` protocol and "
"returns a string each time its :meth:`!next` method is called --- file "
"objects and list objects are both suitable.   If *csvfile* is a file object, "
"it must be opened with the 'b' flag on platforms where that makes a "
"difference.  An optional *dialect* parameter can be given which is used to "
"define a set of parameters specific to a particular CSV dialect.  It may be "
"an instance of a subclass of the :class:`Dialect` class or one of the "
"strings returned by the :func:`list_dialects` function.  The other optional "
"*fmtparams* keyword arguments can be given to override individual formatting "
"parameters in the current dialect.  For full details about the dialect and "
"formatting parameters, see section :ref:`csv-fmt-params`."
msgstr ""

# a7f0ce1039e64d4098416f4b76c299fd
#: ../Doc/library/csv.rst:75
msgid ""
"Each row read from the csv file is returned as a list of strings.  No "
"automatic data type conversion is performed."
msgstr ""

#: ../Doc/library/csv.rst:78 ../Doc/library/csv.rst:116
msgid "A short usage example::"
msgstr ""

# 00ca128340884dd59f4816173c4e845e
#: ../Doc/library/csv.rst:99
msgid ""
"Return a writer object responsible for converting the user's data into "
"delimited strings on the given file-like object.  *csvfile* can be any "
"object with a :func:`write` method.  If *csvfile* is a file object, it must "
"be opened with the 'b' flag on platforms where that makes a difference.  An "
"optional *dialect* parameter can be given which is used to define a set of "
"parameters specific to a particular CSV dialect.  It may be an instance of a "
"subclass of the :class:`Dialect` class or one of the strings returned by "
"the :func:`list_dialects` function.  The other optional *fmtparams* keyword "
"arguments can be given to override individual formatting parameters in the "
"current dialect.  For full details about the dialect and formatting "
"parameters, see section :ref:`csv-fmt-params`. To make it as easy as "
"possible to interface with modules which implement the DB API, the value :"
"const:`None` is written as the empty string.  While this isn't a reversible "
"transformation, it makes it easier to dump SQL NULL data values to CSV files "
"without preprocessing the data returned from a ``cursor.fetch*`` call. All "
"other non-string data are stringified with :func:`str` before being written."
msgstr ""

# fcd2242c89d6418492fd766139776b3f
#: ../Doc/library/csv.rst:127
msgid ""
"Associate *dialect* with *name*.  *name* must be a string or Unicode object. "
"The dialect can be specified either by passing a sub-class of :class:"
"`Dialect`, or by *fmtparams* keyword arguments, or both, with keyword "
"arguments overriding parameters of the dialect. For full details about the "
"dialect and formatting parameters, see section :ref:`csv-fmt-params`."
msgstr ""

#: ../Doc/library/csv.rst:136
msgid ""
"Delete the dialect associated with *name* from the dialect registry.  An :"
"exc:`Error` is raised if *name* is not a registered dialect name."
msgstr ""

# ba4e973de4754356bc829287733a49e5
#: ../Doc/library/csv.rst:142
msgid ""
"Return the dialect associated with *name*.  An :exc:`Error` is raised if "
"*name* is not a registered dialect name."
msgstr ""

#: ../Doc/library/csv.rst:152
msgid "Return the names of all registered dialects."
msgstr ""

#: ../Doc/library/csv.rst:157
msgid ""
"Returns the current maximum field size allowed by the parser. If *new_limit* "
"is given, this becomes the new limit."
msgstr ""

#: ../Doc/library/csv.rst:162
msgid "The :mod:`csv` module defines the following classes:"
msgstr ""

#: ../Doc/library/csv.rst:167
msgid ""
"Create an object which operates like a regular reader but maps the "
"information read into a dict whose keys are given by the optional  "
"*fieldnames* parameter. If the *fieldnames* parameter is omitted, the values "
"in the first row of the *csvfile* will be used as the fieldnames.  If the "
"row read has more fields than the fieldnames sequence, the remaining data is "
"added as a sequence keyed by the value of *restkey*.  If the row read has "
"fewer fields than the fieldnames sequence, the remaining keys take the value "
"of the optional *restval* parameter.  Any other optional or keyword "
"arguments are passed to the underlying :class:`reader` instance."
msgstr ""

#: ../Doc/library/csv.rst:180
msgid ""
"Create an object which operates like a regular writer but maps dictionaries "
"onto output rows.  The *fieldnames* parameter identifies the order in which "
"values in the dictionary passed to the :meth:`writerow` method are written "
"to the *csvfile*.  The optional *restval* parameter specifies the value to "
"be written if the dictionary is missing a key in *fieldnames*.  If the "
"dictionary passed to the :meth:`writerow` method contains a key not found in "
"*fieldnames*, the optional *extrasaction* parameter indicates what action to "
"take.  If it is set to ``'raise'`` a :exc:`ValueError` is raised.  If it is "
"set to ``'ignore'``, extra values in the dictionary are ignored.  Any other "
"optional or keyword arguments are passed to the underlying :class:`writer` "
"instance."
msgstr ""

#: ../Doc/library/csv.rst:191
msgid ""
"Note that unlike the :class:`DictReader` class, the *fieldnames* parameter "
"of the :class:`DictWriter` is not optional.  Since Python's :class:`dict` "
"objects are not ordered, there is not enough information available to deduce "
"the order in which the row should be written to the *csvfile*."
msgstr ""

#: ../Doc/library/csv.rst:199
msgid ""
"The :class:`Dialect` class is a container class relied on primarily for its "
"attributes, which are used to define the parameters for a specific :class:"
"`reader` or :class:`writer` instance."
msgstr ""

#: ../Doc/library/csv.rst:206
msgid ""
"The :class:`excel` class defines the usual properties of an Excel-generated "
"CSV file.  It is registered with the dialect name ``'excel'``."
msgstr ""

#: ../Doc/library/csv.rst:212
msgid ""
"The :class:`excel_tab` class defines the usual properties of an Excel-"
"generated TAB-delimited file.  It is registered with the dialect name "
"``'excel-tab'``."
msgstr ""

#: ../Doc/library/csv.rst:218
msgid "The :class:`Sniffer` class is used to deduce the format of a CSV file."
msgstr ""

#: ../Doc/library/csv.rst:220
msgid "The :class:`Sniffer` class provides two methods:"
msgstr ""

#: ../Doc/library/csv.rst:224
msgid ""
"Analyze the given *sample* and return a :class:`Dialect` subclass reflecting "
"the parameters found.  If the optional *delimiters* parameter is given, it "
"is interpreted as a string containing possible valid delimiter characters."
msgstr ""

#: ../Doc/library/csv.rst:232
msgid ""
"Analyze the sample text (presumed to be in CSV format) and return :const:"
"`True` if the first row appears to be a series of column headers."
msgstr ""

#: ../Doc/library/csv.rst:235
msgid "An example for :class:`Sniffer` use::"
msgstr ""

#: ../Doc/library/csv.rst:244
msgid "The :mod:`csv` module defines the following constants:"
msgstr ""

#: ../Doc/library/csv.rst:248
msgid "Instructs :class:`writer` objects to quote all fields."
msgstr ""

#: ../Doc/library/csv.rst:253
msgid ""
"Instructs :class:`writer` objects to only quote those fields which contain "
"special characters such as *delimiter*, *quotechar* or any of the characters "
"in *lineterminator*."
msgstr ""

#: ../Doc/library/csv.rst:260
msgid "Instructs :class:`writer` objects to quote all non-numeric fields."
msgstr ""

#: ../Doc/library/csv.rst:262
msgid "Instructs the reader to convert all non-quoted fields to type *float*."
msgstr ""

#: ../Doc/library/csv.rst:267
msgid ""
"Instructs :class:`writer` objects to never quote fields.  When the current "
"*delimiter* occurs in output data it is preceded by the current *escapechar* "
"character.  If *escapechar* is not set, the writer will raise :exc:`Error` "
"if any characters that require escaping are encountered."
msgstr ""

#: ../Doc/library/csv.rst:272
msgid ""
"Instructs :class:`reader` to perform no special processing of quote "
"characters."
msgstr ""

#: ../Doc/library/csv.rst:274
msgid "The :mod:`csv` module defines the following exception:"
msgstr ""

#: ../Doc/library/csv.rst:279
msgid "Raised by any of the functions when an error is detected."
msgstr ""

#: ../Doc/library/csv.rst:285
msgid "Dialects and Formatting Parameters"
msgstr ""

#: ../Doc/library/csv.rst:287
msgid ""
"To make it easier to specify the format of input and output records, "
"specific formatting parameters are grouped together into dialects.  A "
"dialect is a subclass of the :class:`Dialect` class having a set of specific "
"methods and a single :meth:`validate` method.  When creating :class:`reader` "
"or :class:`writer` objects, the programmer can specify a string or a "
"subclass of the :class:`Dialect` class as the dialect parameter.  In "
"addition to, or instead of, the *dialect* parameter, the programmer can also "
"specify individual formatting parameters, which have the same names as the "
"attributes defined below for the :class:`Dialect` class."
msgstr ""

#: ../Doc/library/csv.rst:297
msgid "Dialects support the following attributes:"
msgstr ""

#: ../Doc/library/csv.rst:302
msgid ""
"A one-character string used to separate fields.  It defaults to ``','``."
msgstr ""

#: ../Doc/library/csv.rst:307
msgid ""
"Controls how instances of *quotechar* appearing inside a field should be "
"themselves be quoted.  When :const:`True`, the character is doubled. When :"
"const:`False`, the *escapechar* is used as a prefix to the *quotechar*.  It "
"defaults to :const:`True`."
msgstr ""

#: ../Doc/library/csv.rst:312
msgid ""
"On output, if *doublequote* is :const:`False` and no *escapechar* is set, :"
"exc:`Error` is raised if a *quotechar* is found in a field."
msgstr ""

#: ../Doc/library/csv.rst:318
msgid ""
"A one-character string used by the writer to escape the *delimiter* if "
"*quoting* is set to :const:`QUOTE_NONE` and the *quotechar* if *doublequote* "
"is :const:`False`. On reading, the *escapechar* removes any special meaning "
"from the following character. It defaults to :const:`None`, which disables "
"escaping."
msgstr ""

#: ../Doc/library/csv.rst:326
msgid ""
"The string used to terminate lines produced by the :class:`writer`. It "
"defaults to ``'\\r\\n'``."
msgstr ""

#: ../Doc/library/csv.rst:331
msgid ""
"The :class:`reader` is hard-coded to recognise either ``'\\r'`` or ``'\\n'`` "
"as end-of-line, and ignores *lineterminator*. This behavior may change in "
"the future."
msgstr ""

#: ../Doc/library/csv.rst:338
msgid ""
"A one-character string used to quote fields containing special characters, "
"such as the *delimiter* or *quotechar*, or which contain new-line "
"characters.  It defaults to ``'\"'``."
msgstr ""

#: ../Doc/library/csv.rst:345
msgid ""
"Controls when quotes should be generated by the writer and recognised by the "
"reader.  It can take on any of the :const:`QUOTE_\\*` constants (see "
"section :ref:`csv-contents`) and defaults to :const:`QUOTE_MINIMAL`."
msgstr ""

#: ../Doc/library/csv.rst:352
msgid ""
"When :const:`True`, whitespace immediately following the *delimiter* is "
"ignored. The default is :const:`False`."
msgstr ""

#: ../Doc/library/csv.rst:357
msgid "Reader Objects"
msgstr ""

#: ../Doc/library/csv.rst:359
msgid ""
"Reader objects (:class:`DictReader` instances and objects returned by the :"
"func:`reader` function) have the following public methods:"
msgstr ""

# ccc67c2be1c34c4d83f50c5066a70483
#: ../Doc/library/csv.rst:365
msgid ""
"Return the next row of the reader's iterable object as a list, parsed "
"according to the current dialect."
msgstr ""

#: ../Doc/library/csv.rst:368
msgid "Reader objects have the following public attributes:"
msgstr ""

#: ../Doc/library/csv.rst:373
msgid "A read-only description of the dialect in use by the parser."
msgstr ""

#: ../Doc/library/csv.rst:378
msgid ""
"The number of lines read from the source iterator. This is not the same as "
"the number of records returned, as records can span multiple lines."
msgstr ""

#: ../Doc/library/csv.rst:384
msgid "DictReader objects have the following public attribute:"
msgstr ""

#: ../Doc/library/csv.rst:389
msgid ""
"If not passed as a parameter when creating the object, this attribute is "
"initialized upon first access or when the first record is read from the file."
msgstr ""

#: ../Doc/library/csv.rst:397
msgid "Writer Objects"
msgstr ""

#: ../Doc/library/csv.rst:399
msgid ""
":class:`Writer` objects (:class:`DictWriter` instances and objects returned "
"by the :func:`writer` function) have the following public methods.  A *row* "
"must be a sequence of strings or numbers for :class:`Writer` objects and a "
"dictionary mapping fieldnames to strings or numbers (by passing them "
"through :func:`str` first) for :class:`DictWriter` objects.  Note that "
"complex numbers are written out surrounded by parens. This may cause some "
"problems for other programs which read CSV files (assuming they support "
"complex numbers at all)."
msgstr ""

#: ../Doc/library/csv.rst:410
msgid ""
"Write the *row* parameter to the writer's file object, formatted according "
"to the current dialect."
msgstr ""

#: ../Doc/library/csv.rst:416
msgid ""
"Write all the *rows* parameters (a list of *row* objects as described above) "
"to the writer's file object, formatted according to the current dialect."
msgstr ""

#: ../Doc/library/csv.rst:419
msgid "Writer objects have the following public attribute:"
msgstr ""

#: ../Doc/library/csv.rst:424
msgid "A read-only description of the dialect in use by the writer."
msgstr ""

#: ../Doc/library/csv.rst:427
msgid "DictWriter objects have the following public method:"
msgstr ""

#: ../Doc/library/csv.rst:432
msgid "Write a row with the field names (as specified in the constructor)."
msgstr ""

#: ../Doc/library/csv.rst:442
msgid "The simplest example of reading a CSV file::"
msgstr ""

#: ../Doc/library/csv.rst:450
msgid "Reading a file with an alternate format::"
msgstr ""

#: ../Doc/library/csv.rst:458
msgid "The corresponding simplest possible writing example is::"
msgstr ""

#: ../Doc/library/csv.rst:465
msgid "Registering a new dialect::"
msgstr ""

#: ../Doc/library/csv.rst:472
msgid ""
"A slightly more advanced use of the reader --- catching and reporting "
"errors::"
msgstr ""

#: ../Doc/library/csv.rst:484
msgid ""
"And while the module doesn't directly support parsing strings, it can easily "
"be done::"
msgstr ""

# 08aeb9184bb748699ab6ded26a165d7a
#: ../Doc/library/csv.rst:491
msgid ""
"The :mod:`csv` module doesn't directly support reading and writing Unicode, "
"but it is 8-bit-clean save for some problems with ASCII NUL characters.  So "
"you can write functions or classes that handle the encoding and decoding for "
"you as long as you avoid encodings like UTF-16 that use NULs.  UTF-8 is "
"recommended."
msgstr ""

# ef2f49695f2e48238eff180800c6e5a1
#: ../Doc/library/csv.rst:496
msgid ""
":func:`unicode_csv_reader` below is a :term:`generator` that wraps :class:"
"`csv.reader` to handle Unicode CSV data (a list of Unicode strings).  :func:"
"`utf_8_encoder` is a :term:`generator` that encodes the Unicode strings as "
"UTF-8, one string (or row) at a time.  The encoded strings are parsed by the "
"CSV reader, and :func:`unicode_csv_reader` decodes the UTF-8-encoded cells "
"back into Unicode::"
msgstr ""

# a321b0b2971b4ac2abf18d3759389d40
#: ../Doc/library/csv.rst:516
msgid ""
"For all other encodings the following :class:`UnicodeReader` and :class:"
"`UnicodeWriter` classes can be used. They take an additional *encoding* "
"parameter in their constructor and make sure that the data passes the real "
"reader or writer encoded as UTF-8::"
msgstr ""

#: ../Doc/library/ctypes.rst:2
msgid ":mod:`ctypes` --- A foreign function library for Python"
msgstr ""

#: ../Doc/library/ctypes.rst:11
msgid ""
":mod:`ctypes` is a foreign function library for Python.  It provides C "
"compatible data types, and allows calling functions in DLLs or shared "
"libraries.  It can be used to wrap these libraries in pure Python."
msgstr ""

#: ../Doc/library/ctypes.rst:19
msgid "ctypes tutorial"
msgstr ""

#: ../Doc/library/ctypes.rst:21
msgid ""
"Note: The code samples in this tutorial use :mod:`doctest` to make sure that "
"they actually work.  Since some code samples behave differently under Linux, "
"Windows, or Mac OS X, they contain doctest directives in comments."
msgstr ""

#: ../Doc/library/ctypes.rst:25
msgid ""
"Note: Some code samples reference the ctypes :class:`c_int` type. This type "
"is an alias for the :class:`c_long` type on 32-bit systems.  So, you should "
"not be confused if :class:`c_long` is printed if you would expect :class:"
"`c_int` --- they are actually the same type."
msgstr ""

#: ../Doc/library/ctypes.rst:34
msgid "Loading dynamic link libraries"
msgstr ""

#: ../Doc/library/ctypes.rst:36
msgid ""
":mod:`ctypes` exports the *cdll*, and on Windows *windll* and *oledll* "
"objects, for loading dynamic link libraries."
msgstr ""

# 66f32ab98e6643cf99c4abd85107d9d2
#: ../Doc/library/ctypes.rst:39
msgid ""
"You load libraries by accessing them as attributes of these objects. *cdll* "
"loads libraries which export functions using the standard ``cdecl`` calling "
"convention, while *windll* libraries call functions using the ``stdcall`` "
"calling convention. *oledll* also uses the ``stdcall`` calling convention, "
"and assumes the functions return a Windows :c:type:`HRESULT` error code. The "
"error code is used to automatically raise a :class:`WindowsError` exception "
"when the function call fails."
msgstr ""

#: ../Doc/library/ctypes.rst:47
msgid ""
"Here are some examples for Windows. Note that ``msvcrt`` is the MS standard "
"C library containing most standard C functions, and uses the cdecl calling "
"convention::"
msgstr ""

#: ../Doc/library/ctypes.rst:59
msgid "Windows appends the usual ``.dll`` file suffix automatically."
msgstr ""

#: ../Doc/library/ctypes.rst:61
msgid ""
"On Linux, it is required to specify the filename *including* the extension "
"to load a library, so attribute access can not be used to load libraries. "
"Either the :meth:`LoadLibrary` method of the dll loaders should be used, or "
"you should load the library by creating an instance of CDLL by calling the "
"constructor::"
msgstr ""

#: ../Doc/library/ctypes.rst:79
msgid "Accessing functions from loaded dlls"
msgstr ""

#: ../Doc/library/ctypes.rst:81
msgid "Functions are accessed as attributes of dll objects::"
msgstr ""

#: ../Doc/library/ctypes.rst:96
msgid ""
"Note that win32 system dlls like ``kernel32`` and ``user32`` often export "
"ANSI as well as UNICODE versions of a function. The UNICODE version is "
"exported with an ``W`` appended to the name, while the ANSI version is "
"exported with an ``A`` appended to the name. The win32 ``GetModuleHandle`` "
"function, which returns a *module handle* for a given module name, has the "
"following C prototype, and a macro is used to expose one of them as "
"``GetModuleHandle`` depending on whether UNICODE is defined or not::"
msgstr ""

# 23fa99c005ed42cda9b8880d8bf15f68
#: ../Doc/library/ctypes.rst:109
msgid ""
"*windll* does not try to select one of them by magic, you must access the "
"version you need by specifying ``GetModuleHandleA`` or ``GetModuleHandleW`` "
"explicitly, and then call it with strings or unicode strings respectively."
msgstr ""

#: ../Doc/library/ctypes.rst:114
msgid ""
"Sometimes, dlls export functions with names which aren't valid Python "
"identifiers, like ``\"??2@YAPAXI@Z\"``. In this case you have to use :func:"
"`getattr` to retrieve the function::"
msgstr ""

#: ../Doc/library/ctypes.rst:122
msgid ""
"On Windows, some dlls export functions not by name but by ordinal. These "
"functions can be accessed by indexing the dll object with the ordinal "
"number::"
msgstr ""

#: ../Doc/library/ctypes.rst:139
msgid "Calling functions"
msgstr ""

#: ../Doc/library/ctypes.rst:141
msgid ""
"You can call these functions like any other Python callable. This example "
"uses the ``time()`` function, which returns system time in seconds since the "
"Unix epoch, and the ``GetModuleHandleA()`` function, which returns a win32 "
"module handle."
msgstr ""

#: ../Doc/library/ctypes.rst:146
msgid ""
"This example calls both functions with a NULL pointer (``None`` should be "
"used as the NULL pointer)::"
msgstr ""

#: ../Doc/library/ctypes.rst:155
msgid ""
":mod:`ctypes` tries to protect you from calling functions with the wrong "
"number of arguments or the wrong calling convention.  Unfortunately this "
"only works on Windows.  It does this by examining the stack after the "
"function returns, so although an error is raised the function *has* been "
"called::"
msgstr ""

#: ../Doc/library/ctypes.rst:170
msgid ""
"The same exception is raised when you call an ``stdcall`` function with the "
"``cdecl`` calling convention, or vice versa::"
msgstr ""

#: ../Doc/library/ctypes.rst:185
msgid ""
"To find out the correct calling convention you have to look into the C "
"header file or the documentation for the function you want to call."
msgstr ""

#: ../Doc/library/ctypes.rst:188
msgid ""
"On Windows, :mod:`ctypes` uses win32 structured exception handling to "
"prevent crashes from general protection faults when functions are called "
"with invalid argument values::"
msgstr ""

#: ../Doc/library/ctypes.rst:198
msgid ""
"There are, however, enough ways to crash Python with :mod:`ctypes`, so you "
"should be careful anyway."
msgstr ""

# 5d388f102cae4f439d0a3a9774774a1f
#: ../Doc/library/ctypes.rst:201
msgid ""
"``None``, integers, longs, byte strings and unicode strings are the only "
"native Python objects that can directly be used as parameters in these "
"function calls. ``None`` is passed as a C ``NULL`` pointer, byte strings and "
"unicode strings are passed as pointer to the memory block that contains "
"their data (:c:type:`char *` or :c:type:`wchar_t *`).  Python integers and "
"Python longs are passed as the platforms default C :c:type:`int` type, their "
"value is masked to fit into the C type."
msgstr ""

#: ../Doc/library/ctypes.rst:209
msgid ""
"Before we move on calling functions with other parameter types, we have to "
"learn more about :mod:`ctypes` data types."
msgstr ""

#: ../Doc/library/ctypes.rst:216 ../Doc/library/ctypes.rst:2118
msgid "Fundamental data types"
msgstr ""

#: ../Doc/library/ctypes.rst:218
msgid ":mod:`ctypes` defines a number of primitive C compatible data types :"
msgstr ""

#: ../Doc/library/ctypes.rst:221
msgid "ctypes type"
msgstr ""

#: ../Doc/library/ctypes.rst:221
msgid "C type"
msgstr ""

# 6cd7a0858c6c4a468679e28d667b9f40
#: ../Doc/library/ctypes.rst:223
msgid ":class:`c_bool`"
msgstr ""

# 5ed490b44fae43bfada05fbd0c85b528
# 8b06803fc6cd4c6da6dc0a250cb493d5
#: ../Doc/library/ctypes.rst:223 ../Doc/library/struct.rst:176
msgid ":c:type:`_Bool`"
msgstr ""

# 48e989e856944f729e975dffd124032c
#: ../Doc/library/ctypes.rst:223
msgid "bool (1)"
msgstr ""

#: ../Doc/library/ctypes.rst:225
msgid ":class:`c_char`"
msgstr ""

# cce6525a2b904dbb8f156bb71db358ae
# dc670fc79c254b8abdf5ad5db3a09cdf
# 34d45f8360bd4e46831027a560e11a40
#: ../Doc/library/ctypes.rst:225 ../Doc/library/ctypes.rst:229
#: ../Doc/library/struct.rst:170
msgid ":c:type:`char`"
msgstr ""

#: ../Doc/library/ctypes.rst:225
msgid "1-character string"
msgstr ""

#: ../Doc/library/ctypes.rst:227
msgid ":class:`c_wchar`"
msgstr ""

# 525bcd9a6c91443e9c3d71704796c442
#: ../Doc/library/ctypes.rst:227
msgid ":c:type:`wchar_t`"
msgstr ""

# 00048a08ce2b432e9c3ec2e869cc4f7d
#: ../Doc/library/ctypes.rst:227
msgid "1-character unicode string"
msgstr ""

#: ../Doc/library/ctypes.rst:229
msgid ":class:`c_byte`"
msgstr ""

# e4c86f229e67407baddec491fb455300
# ae1e469f0e1f4851a539616cf01ffe19
# ff06ae4418404dfab3a99dcc7b8acfc6
# 9bf200d1de264fb797fafe8aef0dfcdf
# 3ca9a60dee3b4284b940bba84c0cbdbf
# ee727bfecf08464b9c2cb6aa98628a14
# 793b17829de242b98010071cf4998b6b
# 8bdff48716f04b839a400b0fc5957f2d
# a4b7459972294a218a4da9d060d31505
# 3f3bb18386104b7eadbe78e4c4150478
#: ../Doc/library/ctypes.rst:229 ../Doc/library/ctypes.rst:231
#: ../Doc/library/ctypes.rst:233 ../Doc/library/ctypes.rst:235
#: ../Doc/library/ctypes.rst:237 ../Doc/library/ctypes.rst:239
#: ../Doc/library/ctypes.rst:241 ../Doc/library/ctypes.rst:243
#: ../Doc/library/ctypes.rst:245 ../Doc/library/ctypes.rst:247
msgid "int/long"
msgstr ""

#: ../Doc/library/ctypes.rst:231
msgid ":class:`c_ubyte`"
msgstr ""

# 21939577e77a46b1bd693bb2a9b9b304
# 9ddf711049e24829851f67e3f06314cf
#: ../Doc/library/ctypes.rst:231 ../Doc/library/struct.rst:174
msgid ":c:type:`unsigned char`"
msgstr ""

#: ../Doc/library/ctypes.rst:233
msgid ":class:`c_short`"
msgstr ""

# 7d8afccefb074c1a808bd8f75577b53d
# 36895e11a7ca4fdfab279511ae51f4e3
#: ../Doc/library/ctypes.rst:233 ../Doc/library/struct.rst:178
msgid ":c:type:`short`"
msgstr ""

#: ../Doc/library/ctypes.rst:235
msgid ":class:`c_ushort`"
msgstr ""

# ae3c48a32208489c9d74ef92bfc8baa4
# 41ebe2caaba343ffa37bd38982b96297
#: ../Doc/library/ctypes.rst:235 ../Doc/library/struct.rst:180
msgid ":c:type:`unsigned short`"
msgstr ""

#: ../Doc/library/ctypes.rst:237
msgid ":class:`c_int`"
msgstr ""

# e86e06498c2b40c3ae0b1a5cc6506fc7
# 9cfbe780c88a4c88b8666cc22bb839aa
#: ../Doc/library/ctypes.rst:237 ../Doc/library/struct.rst:182
msgid ":c:type:`int`"
msgstr ""

#: ../Doc/library/ctypes.rst:239
msgid ":class:`c_uint`"
msgstr ""

# 0a54f726020a4cd9b9e0cde2b3bead69
# f328fb37425a43fcbc793650f3b9a8d4
#: ../Doc/library/ctypes.rst:239 ../Doc/library/struct.rst:184
msgid ":c:type:`unsigned int`"
msgstr ""

#: ../Doc/library/ctypes.rst:241
msgid ":class:`c_long`"
msgstr ""

# 7b5a8dabe21a4851a2f103ef892e6473
# e51d1ffc4810460eaedd6ff81a3586cd
#: ../Doc/library/ctypes.rst:241 ../Doc/library/struct.rst:186
msgid ":c:type:`long`"
msgstr ""

#: ../Doc/library/ctypes.rst:243
msgid ":class:`c_ulong`"
msgstr ""

# 0669333095b64e00b1eddbe3d7c543b2
# 2c3c00a9af80436e9d0fab8f24d8a627
#: ../Doc/library/ctypes.rst:243 ../Doc/library/struct.rst:188
msgid ":c:type:`unsigned long`"
msgstr ""

#: ../Doc/library/ctypes.rst:245
msgid ":class:`c_longlong`"
msgstr ""

# 8b209a2adad44ba5910f866ffd77a0ca
#: ../Doc/library/ctypes.rst:245
msgid ":c:type:`__int64` or :c:type:`long long`"
msgstr ""

#: ../Doc/library/ctypes.rst:247
msgid ":class:`c_ulonglong`"
msgstr ""

# 17ba863af8374a699a95f13d39237cf6
#: ../Doc/library/ctypes.rst:247
msgid ":c:type:`unsigned __int64` or :c:type:`unsigned long long`"
msgstr ""

#: ../Doc/library/ctypes.rst:250
msgid ":class:`c_float`"
msgstr ""

# ebad3f29b4894798b31bc6de37409344
# 45c82a9352fd42c8b0a53c335f2b439b
#: ../Doc/library/ctypes.rst:250 ../Doc/library/struct.rst:195
msgid ":c:type:`float`"
msgstr ""

#: ../Doc/library/ctypes.rst:252
msgid ":class:`c_double`"
msgstr ""

# cdfb31ae56894a00bb08768e20e46288
# 5533d9d3d6a5436bb002da6433349206
#: ../Doc/library/ctypes.rst:252 ../Doc/library/struct.rst:197
msgid ":c:type:`double`"
msgstr ""

#: ../Doc/library/ctypes.rst:254
msgid ":class:`c_longdouble`"
msgstr ""

# c479fbd925204e2289b32a07a821b706
#: ../Doc/library/ctypes.rst:254
msgid ":c:type:`long double`"
msgstr ""

#: ../Doc/library/ctypes.rst:256
msgid ":class:`c_char_p`"
msgstr ""

# 2b3a0d1b17364806b23cbee23f4e5c62
#: ../Doc/library/ctypes.rst:256
msgid ":c:type:`char *` (NUL terminated)"
msgstr ""

#: ../Doc/library/ctypes.rst:256
msgid "string or ``None``"
msgstr ""

#: ../Doc/library/ctypes.rst:258
msgid ":class:`c_wchar_p`"
msgstr ""

# 8181ed59494a410e8f301094de400380
#: ../Doc/library/ctypes.rst:258
msgid ":c:type:`wchar_t *` (NUL terminated)"
msgstr ""

# 40d9f30a4fe646368d00de971b00ea56
#: ../Doc/library/ctypes.rst:258
msgid "unicode or ``None``"
msgstr ""

#: ../Doc/library/ctypes.rst:260
msgid ":class:`c_void_p`"
msgstr ""

# 469fa4445a6945dda3d53c8ee8558da2
#: ../Doc/library/ctypes.rst:260
msgid ":c:type:`void *`"
msgstr ""

# c0263245719e4fa2a66a05f18f09b427
#: ../Doc/library/ctypes.rst:260
msgid "int/long or ``None``"
msgstr ""

# 4b8543883f314a9cb365be4cdba512e9
#: ../Doc/library/ctypes.rst:264
msgid "The constructor accepts any object with a truth value."
msgstr ""

#: ../Doc/library/ctypes.rst:266
msgid ""
"All these types can be created by calling them with an optional initializer "
"of the correct type and value::"
msgstr ""

#: ../Doc/library/ctypes.rst:277
msgid ""
"Since these types are mutable, their value can also be changed afterwards::"
msgstr ""

# bd41d73b738c4c78b275686bbe102611
#: ../Doc/library/ctypes.rst:289
msgid ""
"Assigning a new value to instances of the pointer types :class:`c_char_p`, :"
"class:`c_wchar_p`, and :class:`c_void_p` changes the *memory location* they "
"point to, *not the contents* of the memory block (of course not, because "
"Python strings are immutable)::"
msgstr ""

#: ../Doc/library/ctypes.rst:305
msgid ""
"You should be careful, however, not to pass them to functions expecting "
"pointers to mutable memory. If you need mutable memory blocks, ctypes has a :"
"func:`create_string_buffer` function which creates these in various ways.  "
"The current memory block contents can be accessed (or changed) with the "
"``raw`` property; if you want to access it as NUL terminated string, use the "
"``value`` property::"
msgstr ""

# e73603f59dde4a8da21d7dc981f3be99
#: ../Doc/library/ctypes.rst:329
msgid ""
"The :func:`create_string_buffer` function replaces the :func:`c_buffer` "
"function (which is still available as an alias), as well as the :func:"
"`c_string` function from earlier ctypes releases.  To create a mutable "
"memory block containing unicode characters of the C type :c:type:`wchar_t` "
"use the :func:`create_unicode_buffer` function."
msgstr ""

#: ../Doc/library/ctypes.rst:339
msgid "Calling functions, continued"
msgstr ""

#: ../Doc/library/ctypes.rst:341
msgid ""
"Note that printf prints to the real standard output channel, *not* to :data:"
"`sys.stdout`, so these examples will only work at the console prompt, not "
"from within *IDLE* or *PythonWin*::"
msgstr ""

# 7a5ae9db12cc489b807d048bdb8e3f18
#: ../Doc/library/ctypes.rst:361
msgid ""
"As has been mentioned before, all Python types except integers, strings, and "
"unicode strings have to be wrapped in their corresponding :mod:`ctypes` "
"type, so that they can be converted to the required C data type::"
msgstr ""

#: ../Doc/library/ctypes.rst:374
msgid "Calling functions with your own custom data types"
msgstr ""

# 5311ae199b834d50a5be2ace8d524f74
#: ../Doc/library/ctypes.rst:376
msgid ""
"You can also customize :mod:`ctypes` argument conversion to allow instances "
"of your own classes be used as function arguments.  :mod:`ctypes` looks for "
"an :attr:`_as_parameter_` attribute and uses this as the function argument.  "
"Of course, it must be one of integer, string, or unicode::"
msgstr ""

# d6e3c4d20fc140178d77065c9f048cb1
#: ../Doc/library/ctypes.rst:391
msgid ""
"If you don't want to store the instance's data in the :attr:`_as_parameter_` "
"instance variable, you could define a :func:`property` which makes the data "
"available."
msgstr ""

#: ../Doc/library/ctypes.rst:399
msgid "Specifying the required argument types (function prototypes)"
msgstr ""

#: ../Doc/library/ctypes.rst:401
msgid ""
"It is possible to specify the required argument types of functions exported "
"from DLLs by setting the :attr:`argtypes` attribute."
msgstr ""

#: ../Doc/library/ctypes.rst:404
msgid ""
":attr:`argtypes` must be a sequence of C data types (the ``printf`` function "
"is probably not a good example here, because it takes a variable number and "
"different types of parameters depending on the format string, on the other "
"hand this is quite handy to experiment with this feature)::"
msgstr ""

#: ../Doc/library/ctypes.rst:415
msgid ""
"Specifying a format protects against incompatible argument types (just as a "
"prototype for a C function), and tries to convert the arguments to valid "
"types::"
msgstr ""

# e8d611390ad84212a3d4485a75f5dea3
#: ../Doc/library/ctypes.rst:427
msgid ""
"If you have defined your own classes which you pass to function calls, you "
"have to implement a :meth:`from_param` class method for them to be able to "
"use them in the :attr:`argtypes` sequence. The :meth:`from_param` class "
"method receives the Python object passed to the function call, it should do "
"a typecheck or whatever is needed to make sure this object is acceptable, "
"and then return the object itself, its :attr:`_as_parameter_` attribute, or "
"whatever you want to pass as the C function argument in this case. Again, "
"the result should be an integer, string, unicode, a :mod:`ctypes` instance, "
"or an object with an :attr:`_as_parameter_` attribute."
msgstr ""

#: ../Doc/library/ctypes.rst:441
msgid "Return types"
msgstr ""

# b206651566e0481fbb4dff45717c1599
#: ../Doc/library/ctypes.rst:443
msgid ""
"By default functions are assumed to return the C :c:type:`int` type.  Other "
"return types can be specified by setting the :attr:`restype` attribute of "
"the function object."
msgstr ""

#: ../Doc/library/ctypes.rst:447
msgid ""
"Here is a more advanced example, it uses the ``strchr`` function, which "
"expects a string pointer and a char, and returns a pointer to a string::"
msgstr ""

# da574ee462d645b18de506fd90991e9e
#: ../Doc/library/ctypes.rst:460
msgid ""
"If you want to avoid the ``ord(\"x\")`` calls above, you can set the :attr:"
"`argtypes` attribute, and the second argument will be converted from a "
"single character Python string into a C char::"
msgstr ""

#: ../Doc/library/ctypes.rst:478
msgid ""
"You can also use a callable Python object (a function or a class for "
"example) as the :attr:`restype` attribute, if the foreign function returns "
"an integer.  The callable will be called with the *integer* the C function "
"returns, and the result of this call will be used as the result of your "
"function call. This is useful to check for error return values and "
"automatically raise an exception::"
msgstr ""

#: ../Doc/library/ctypes.rst:501
msgid ""
"``WinError`` is a function which will call Windows ``FormatMessage()`` api "
"to get the string representation of an error code, and *returns* an "
"exception. ``WinError`` takes an optional error code parameter, if no one is "
"used, it calls :func:`GetLastError` to retrieve it."
msgstr ""

#: ../Doc/library/ctypes.rst:506
msgid ""
"Please note that a much more powerful error checking mechanism is available "
"through the :attr:`errcheck` attribute; see the reference manual for details."
msgstr ""

#: ../Doc/library/ctypes.rst:513
msgid "Passing pointers (or: passing parameters by reference)"
msgstr ""

#: ../Doc/library/ctypes.rst:515
msgid ""
"Sometimes a C api function expects a *pointer* to a data type as parameter, "
"probably to write into the corresponding location, or if the data is too "
"large to be passed by value. This is also known as *passing parameters by "
"reference*."
msgstr ""

#: ../Doc/library/ctypes.rst:519
msgid ""
":mod:`ctypes` exports the :func:`byref` function which is used to pass "
"parameters by reference.  The same effect can be achieved with the :func:"
"`pointer` function, although :func:`pointer` does a lot more work since it "
"constructs a real pointer object, so it is faster to use :func:`byref` if "
"you don't need the pointer object in Python itself::"
msgstr ""

#: ../Doc/library/ctypes.rst:541
msgid "Structures and unions"
msgstr ""

#: ../Doc/library/ctypes.rst:543
msgid ""
"Structures and unions must derive from the :class:`Structure` and :class:"
"`Union` base classes which are defined in the :mod:`ctypes` module. Each "
"subclass must define a :attr:`_fields_` attribute.  :attr:`_fields_` must be "
"a list of *2-tuples*, containing a *field name* and a *field type*."
msgstr ""

#: ../Doc/library/ctypes.rst:548
msgid ""
"The field type must be a :mod:`ctypes` type like :class:`c_int`, or any "
"other derived :mod:`ctypes` type: structure, union, array, pointer."
msgstr ""

#: ../Doc/library/ctypes.rst:551
msgid ""
"Here is a simple example of a POINT structure, which contains two integers "
"named *x* and *y*, and also shows how to initialize a structure in the "
"constructor::"
msgstr ""

#: ../Doc/library/ctypes.rst:571
msgid ""
"You can, however, build much more complicated structures. Structures can "
"itself contain other structures by using a structure as a field type."
msgstr ""

#: ../Doc/library/ctypes.rst:574
msgid ""
"Here is a RECT structure which contains two POINTs named *upperleft* and "
"*lowerright*::"
msgstr ""

#: ../Doc/library/ctypes.rst:588
msgid ""
"Nested structures can also be initialized in the constructor in several "
"ways::"
msgstr ""

#: ../Doc/library/ctypes.rst:593
msgid ""
"Field :term:`descriptor`\\s can be retrieved from the *class*, they are "
"useful for debugging because they can provide useful information::"
msgstr ""

#: ../Doc/library/ctypes.rst:606
msgid "Structure/union alignment and byte order"
msgstr ""

#: ../Doc/library/ctypes.rst:608
msgid ""
"By default, Structure and Union fields are aligned in the same way the C "
"compiler does it. It is possible to override this behavior be specifying a :"
"attr:`_pack_` class attribute in the subclass definition. This must be set "
"to a positive integer and specifies the maximum alignment for the fields. "
"This is what ``#pragma pack(n)`` also does in MSVC."
msgstr ""

#: ../Doc/library/ctypes.rst:614
msgid ""
":mod:`ctypes` uses the native byte order for Structures and Unions.  To "
"build structures with non-native byte order, you can use one of the :class:"
"`BigEndianStructure`, :class:`LittleEndianStructure`, :class:"
"`BigEndianUnion`, and :class:`LittleEndianUnion` base classes.  These "
"classes cannot contain pointer fields."
msgstr ""

#: ../Doc/library/ctypes.rst:624
msgid "Bit fields in structures and unions"
msgstr ""

#: ../Doc/library/ctypes.rst:626
msgid ""
"It is possible to create structures and unions containing bit fields. Bit "
"fields are only possible for integer fields, the bit width is specified as "
"the third item in the :attr:`_fields_` tuples::"
msgstr ""

#: ../Doc/library/ctypes.rst:644
msgid "Arrays"
msgstr ""

#: ../Doc/library/ctypes.rst:646
msgid ""
"Arrays are sequences, containing a fixed number of instances of the same "
"type."
msgstr ""

#: ../Doc/library/ctypes.rst:648
msgid ""
"The recommended way to create array types is by multiplying a data type with "
"a positive integer::"
msgstr ""

#: ../Doc/library/ctypes.rst:653
msgid ""
"Here is an example of an somewhat artificial data type, a structure "
"containing 4 POINTs among other stuff::"
msgstr ""

#: ../Doc/library/ctypes.rst:669
msgid "Instances are created in the usual way, by calling the class::"
msgstr ""

#: ../Doc/library/ctypes.rst:675
msgid ""
"The above code print a series of ``0 0`` lines, because the array contents "
"is initialized to zeros."
msgstr ""

#: ../Doc/library/ctypes.rst:678
msgid "Initializers of the correct type can also be specified::"
msgstr ""

#: ../Doc/library/ctypes.rst:694
msgid "Pointers"
msgstr ""

#: ../Doc/library/ctypes.rst:696
msgid ""
"Pointer instances are created by calling the :func:`pointer` function on a :"
"mod:`ctypes` type::"
msgstr ""

#: ../Doc/library/ctypes.rst:704
msgid ""
"Pointer instances have a :attr:`contents` attribute which returns the object "
"to which the pointer points, the ``i`` object above::"
msgstr ""

#: ../Doc/library/ctypes.rst:711
msgid ""
"Note that :mod:`ctypes` does not have OOR (original object return), it "
"constructs a new, equivalent object each time you retrieve an attribute::"
msgstr ""

#: ../Doc/library/ctypes.rst:720
msgid ""
"Assigning another :class:`c_int` instance to the pointer's contents "
"attribute would cause the pointer to point to the memory location where this "
"is stored::"
msgstr ""

#: ../Doc/library/ctypes.rst:732
msgid "Pointer instances can also be indexed with integers::"
msgstr ""

#: ../Doc/library/ctypes.rst:738
msgid "Assigning to an integer index changes the pointed to value::"
msgstr ""

#: ../Doc/library/ctypes.rst:747
msgid ""
"It is also possible to use indexes different from 0, but you must know what "
"you're doing, just as in C: You can access or change arbitrary memory "
"locations. Generally you only use this feature if you receive a pointer from "
"a C function, and you *know* that the pointer actually points to an array "
"instead of a single item."
msgstr ""

# 8cb97e077cdb4efab2ec912cf34b0de9
#: ../Doc/library/ctypes.rst:753
msgid ""
"Behind the scenes, the :func:`pointer` function does more than simply create "
"pointer instances, it has to create pointer *types* first.  This is done "
"with the :func:`POINTER` function, which accepts any :mod:`ctypes` type, and "
"returns a new type::"
msgstr ""

#: ../Doc/library/ctypes.rst:769
msgid ""
"Calling the pointer type without an argument creates a ``NULL`` pointer. "
"``NULL`` pointers have a ``False`` boolean value::"
msgstr ""

#: ../Doc/library/ctypes.rst:777
msgid ""
":mod:`ctypes` checks for ``NULL`` when dereferencing pointers (but "
"dereferencing invalid non-\\ ``NULL`` pointers would crash Python)::"
msgstr ""

#: ../Doc/library/ctypes.rst:796
msgid "Type conversions"
msgstr ""

#: ../Doc/library/ctypes.rst:798
msgid ""
"Usually, ctypes does strict type checking.  This means, if you have ``POINTER"
"(c_int)`` in the :attr:`argtypes` list of a function or as the type of a "
"member field in a structure definition, only instances of exactly the same "
"type are accepted.  There are some exceptions to this rule, where ctypes "
"accepts other objects.  For example, you can pass compatible array instances "
"instead of pointer types.  So, for ``POINTER(c_int)``, ctypes accepts an "
"array of c_int::"
msgstr ""

#: ../Doc/library/ctypes.rst:819
msgid "To set a POINTER type field to ``NULL``, you can assign ``None``::"
msgstr ""

#: ../Doc/library/ctypes.rst:826
msgid ""
"Sometimes you have instances of incompatible types.  In C, you can cast one "
"type into another type.  :mod:`ctypes` provides a :func:`cast` function "
"which can be used in the same way.  The ``Bar`` structure defined above "
"accepts ``POINTER(c_int)`` pointers or :class:`c_int` arrays for its "
"``values`` field, but not instances of other types::"
msgstr ""

#: ../Doc/library/ctypes.rst:838
msgid "For these cases, the :func:`cast` function is handy."
msgstr ""

#: ../Doc/library/ctypes.rst:840
msgid ""
"The :func:`cast` function can be used to cast a ctypes instance into a "
"pointer to a different ctypes data type.  :func:`cast` takes two parameters, "
"a ctypes object that is or can be converted to a pointer of some kind, and a "
"ctypes pointer type.  It returns an instance of the second argument, which "
"references the same memory block as the first argument::"
msgstr ""

#: ../Doc/library/ctypes.rst:851
msgid ""
"So, :func:`cast` can be used to assign to the ``values`` field of ``Bar`` "
"the structure::"
msgstr ""

#: ../Doc/library/ctypes.rst:864
msgid "Incomplete Types"
msgstr ""

#: ../Doc/library/ctypes.rst:866
msgid ""
"*Incomplete Types* are structures, unions or arrays whose members are not "
"yet specified. In C, they are specified by forward declarations, which are "
"defined later::"
msgstr ""

#: ../Doc/library/ctypes.rst:877
msgid ""
"The straightforward translation into ctypes code would be this, but it does "
"not work::"
msgstr ""

#: ../Doc/library/ctypes.rst:890
msgid ""
"because the new ``class cell`` is not available in the class statement "
"itself. In :mod:`ctypes`, we can define the ``cell`` class and set the :attr:"
"`_fields_` attribute later, after the class statement::"
msgstr ""

#: ../Doc/library/ctypes.rst:902
msgid ""
"Lets try it. We create two instances of ``cell``, and let them point to each "
"other, and finally follow the pointer chain a few times::"
msgstr ""

#: ../Doc/library/ctypes.rst:923
msgid "Callback functions"
msgstr ""

#: ../Doc/library/ctypes.rst:925
msgid ""
":mod:`ctypes` allows to create C callable function pointers from Python "
"callables. These are sometimes called *callback functions*."
msgstr ""

#: ../Doc/library/ctypes.rst:928
msgid ""
"First, you must create a class for the callback function, the class knows "
"the calling convention, the return type, and the number and types of "
"arguments this function will receive."
msgstr ""

#: ../Doc/library/ctypes.rst:932
msgid ""
"The CFUNCTYPE factory function creates types for callback functions using "
"the normal cdecl calling convention, and, on Windows, the WINFUNCTYPE "
"factory function creates types for callback functions using the stdcall "
"calling convention."
msgstr ""

#: ../Doc/library/ctypes.rst:937
msgid ""
"Both of these factory functions are called with the result type as first "
"argument, and the callback functions expected argument types as the "
"remaining arguments."
msgstr ""

# bbb3714b2a5a4d2e9dfe7ad9d2055a80
#: ../Doc/library/ctypes.rst:941
msgid ""
"I will present an example here which uses the standard C library's :func:"
"`qsort` function, this is used to sort items with the help of a callback "
"function. :func:`qsort` will be used to sort an array of integers::"
msgstr ""

#: ../Doc/library/ctypes.rst:951
msgid ""
":func:`qsort` must be called with a pointer to the data to sort, the number "
"of items in the data array, the size of one item, and a pointer to the "
"comparison function, the callback. The callback will then be called with two "
"pointers to items, and it must return a negative integer if the first item "
"is smaller than the second, a zero if they are equal, and a positive integer "
"else."
msgstr ""

#: ../Doc/library/ctypes.rst:957
msgid ""
"So our callback function receives pointers to integers, and must return an "
"integer. First we create the ``type`` for the callback function::"
msgstr ""

#: ../Doc/library/ctypes.rst:963
msgid ""
"For the first implementation of the callback function, we simply print the "
"arguments we get, and return 0 (incremental development ;-)::"
msgstr ""

#: ../Doc/library/ctypes.rst:972
msgid "Create the C callable callback::"
msgstr ""

#: ../Doc/library/ctypes.rst:977
msgid "And we're ready to go::"
msgstr ""

#: ../Doc/library/ctypes.rst:992
msgid ""
"We know how to access the contents of a pointer, so lets redefine our "
"callback::"
msgstr ""

#: ../Doc/library/ctypes.rst:1001
msgid "Here is what we get on Windows::"
msgstr ""

#: ../Doc/library/ctypes.rst:1016
msgid ""
"It is funny to see that on linux the sort function seems to work much more "
"efficiently, it is doing less comparisons::"
msgstr ""

#: ../Doc/library/ctypes.rst:1027
msgid ""
"Ah, we're nearly done! The last step is to actually compare the two items "
"and return a useful result::"
msgstr ""

#: ../Doc/library/ctypes.rst:1036
msgid "Final run on Windows::"
msgstr ""

#: ../Doc/library/ctypes.rst:1051
msgid "and on Linux::"
msgstr ""

#: ../Doc/library/ctypes.rst:1061
msgid ""
"It is quite interesting to see that the Windows :func:`qsort` function needs "
"more comparisons than the linux version!"
msgstr ""

#: ../Doc/library/ctypes.rst:1064
msgid "As we can easily check, our array is sorted now::"
msgstr ""

#: ../Doc/library/ctypes.rst:1071
msgid "**Important note for callback functions:**"
msgstr ""

#: ../Doc/library/ctypes.rst:1073
msgid ""
"Make sure you keep references to CFUNCTYPE objects as long as they are used "
"from C code. :mod:`ctypes` doesn't, and if you don't, they may be garbage "
"collected, crashing your program when a callback is made."
msgstr ""

#: ../Doc/library/ctypes.rst:1081
msgid "Accessing values exported from dlls"
msgstr ""

# cf89ed7c1336482cba100fc848e68b23
#: ../Doc/library/ctypes.rst:1083
msgid ""
"Some shared libraries not only export functions, they also export variables. "
"An example in the Python library itself is the ``Py_OptimizeFlag``, an "
"integer set to 0, 1, or 2, depending on the :option:`-O` or :option:`-OO` "
"flag given on startup."
msgstr ""

#: ../Doc/library/ctypes.rst:1088
msgid ""
":mod:`ctypes` can access values like this with the :meth:`in_dll` class "
"methods of the type.  *pythonapi* is a predefined symbol giving access to "
"the Python C api::"
msgstr ""

#: ../Doc/library/ctypes.rst:1097
msgid ""
"If the interpreter would have been started with :option:`-O`, the sample "
"would have printed ``c_long(1)``, or ``c_long(2)`` if :option:`-OO` would "
"have been specified."
msgstr ""

# 35a4be35cbac4b22b36886eded2453eb
#: ../Doc/library/ctypes.rst:1101
msgid ""
"An extended example which also demonstrates the use of pointers accesses the "
"``PyImport_FrozenModules`` pointer exported by Python."
msgstr ""

# 165717d4359c4764b5626d087460dfaa
#: ../Doc/library/ctypes.rst:1104
msgid ""
"Quoting the Python docs: *This pointer is initialized to point to an array "
"of \"struct _frozen\" records, terminated by one whose members are all NULL "
"or zero. When a frozen module is imported, it is searched in this table. "
"Third-party code could play tricks with this to provide a dynamically "
"created collection of frozen modules.*"
msgstr ""

#: ../Doc/library/ctypes.rst:1110
msgid ""
"So manipulating this pointer could even prove useful. To restrict the "
"example size, we show only how this table can be read with :mod:`ctypes`::"
msgstr ""

# 6d76bbd08af442979b18e192101550fc
#: ../Doc/library/ctypes.rst:1122
msgid ""
"We have defined the ``struct _frozen`` data type, so we can get the pointer "
"to the table::"
msgstr ""

#: ../Doc/library/ctypes.rst:1129
msgid ""
"Since ``table`` is a ``pointer`` to the array of ``struct_frozen`` records, "
"we can iterate over it, but we just have to make sure that our loop "
"terminates, because pointers have no size. Sooner or later it would probably "
"crash with an access violation or whatever, so it's better to break out of "
"the loop when we hit the NULL entry::"
msgstr ""

#: ../Doc/library/ctypes.rst:1146
msgid ""
"The fact that standard Python has a frozen module and a frozen package "
"(indicated by the negative size member) is not well known, it is only used "
"for testing. Try it out with ``import __hello__`` for example."
msgstr ""

#: ../Doc/library/ctypes.rst:1154
msgid "Surprises"
msgstr ""

#: ../Doc/library/ctypes.rst:1156
msgid ""
"There are some edges in :mod:`ctypes` where you may be expect something else "
"than what actually happens."
msgstr ""

#: ../Doc/library/ctypes.rst:1159
msgid "Consider the following example::"
msgstr ""

#: ../Doc/library/ctypes.rst:1179
msgid ""
"Hm. We certainly expected the last statement to print ``3 4 1 2``. What "
"happened? Here are the steps of the ``rc.a, rc.b = rc.b, rc.a`` line above::"
msgstr ""

#: ../Doc/library/ctypes.rst:1187
msgid ""
"Note that ``temp0`` and ``temp1`` are objects still using the internal "
"buffer of the ``rc`` object above. So executing ``rc.a = temp0`` copies the "
"buffer contents of ``temp0`` into ``rc`` 's buffer.  This, in turn, changes "
"the contents of ``temp1``. So, the last assignment ``rc.b = temp1``, doesn't "
"have the expected effect."
msgstr ""

#: ../Doc/library/ctypes.rst:1193
msgid ""
"Keep in mind that retrieving sub-objects from Structure, Unions, and Arrays "
"doesn't *copy* the sub-object, instead it retrieves a wrapper object "
"accessing the root-object's underlying buffer."
msgstr ""

#: ../Doc/library/ctypes.rst:1197
msgid ""
"Another example that may behave different from what one would expect is "
"this::"
msgstr ""

#: ../Doc/library/ctypes.rst:1207
msgid ""
"Why is it printing ``False``?  ctypes instances are objects containing a "
"memory block plus some :term:`descriptor`\\s accessing the contents of the "
"memory. Storing a Python object in the memory block does not store the "
"object itself, instead the ``contents`` of the object is stored.  Accessing "
"the contents again constructs a new Python object each time!"
msgstr ""

#: ../Doc/library/ctypes.rst:1217
msgid "Variable-sized data types"
msgstr ""

#: ../Doc/library/ctypes.rst:1219
msgid ""
":mod:`ctypes` provides some support for variable-sized arrays and structures."
msgstr ""

#: ../Doc/library/ctypes.rst:1221
msgid ""
"The :func:`resize` function can be used to resize the memory buffer of an "
"existing ctypes object.  The function takes the object as first argument, "
"and the requested size in bytes as the second argument.  The memory block "
"cannot be made smaller than the natural memory block specified by the "
"objects type, a :exc:`ValueError` is raised if this is tried::"
msgstr ""

#: ../Doc/library/ctypes.rst:1241
msgid ""
"This is nice and fine, but how would one access the additional elements "
"contained in this array?  Since the type still only knows about 4 elements, "
"we get errors accessing other elements::"
msgstr ""

#: ../Doc/library/ctypes.rst:1253
msgid ""
"Another way to use variable-sized data types with :mod:`ctypes` is to use "
"the dynamic nature of Python, and (re-)define the data type after the "
"required size is already known, on a case by case basis."
msgstr ""

#: ../Doc/library/ctypes.rst:1261
msgid "ctypes reference"
msgstr ""

#: ../Doc/library/ctypes.rst:1267
msgid "Finding shared libraries"
msgstr ""

#: ../Doc/library/ctypes.rst:1269
msgid ""
"When programming in a compiled language, shared libraries are accessed when "
"compiling/linking a program, and when the program is run."
msgstr ""

#: ../Doc/library/ctypes.rst:1272
msgid ""
"The purpose of the :func:`find_library` function is to locate a library in a "
"way similar to what the compiler does (on platforms with several versions of "
"a shared library the most recent should be loaded), while the ctypes library "
"loaders act like when a program is run, and call the runtime loader directly."
msgstr ""

#: ../Doc/library/ctypes.rst:1277
msgid ""
"The :mod:`ctypes.util` module provides a function which can help to "
"determine the library to load."
msgstr ""

#: ../Doc/library/ctypes.rst:1285
msgid ""
"Try to find a library and return a pathname.  *name* is the library name "
"without any prefix like *lib*, suffix like ``.so``, ``.dylib`` or version "
"number (this is the form used for the posix linker option :option:`-l`).  If "
"no library can be found, returns ``None``."
msgstr ""

#: ../Doc/library/ctypes.rst:1290 ../Doc/library/ctypes.rst:1879
msgid "The exact functionality is system dependent."
msgstr ""

#: ../Doc/library/ctypes.rst:1292
msgid ""
"On Linux, :func:`find_library` tries to run external programs (``/sbin/"
"ldconfig``, ``gcc``, and ``objdump``) to find the library file.  It returns "
"the filename of the library file.  Here are some examples::"
msgstr ""

#: ../Doc/library/ctypes.rst:1305
msgid ""
"On OS X, :func:`find_library` tries several predefined naming schemes and "
"paths to locate the library, and returns a full pathname if successful::"
msgstr ""

#: ../Doc/library/ctypes.rst:1319
msgid ""
"On Windows, :func:`find_library` searches along the system search path, and "
"returns the full pathname, but since there is no predefined naming scheme a "
"call like ``find_library(\"c\")`` will fail and return ``None``."
msgstr ""

#: ../Doc/library/ctypes.rst:1323
msgid ""
"If wrapping a shared library with :mod:`ctypes`, it *may* be better to "
"determine the shared library name at development type, and hardcode that "
"into the wrapper module instead of using :func:`find_library` to locate the "
"library at runtime."
msgstr ""

#: ../Doc/library/ctypes.rst:1331
msgid "Loading shared libraries"
msgstr ""

#: ../Doc/library/ctypes.rst:1333
msgid ""
"There are several ways to loaded shared libraries into the Python process.  "
"One way is to instantiate one of the following classes:"
msgstr ""

# 012d7244083942dfa8e416d659f53b2d
#: ../Doc/library/ctypes.rst:1339
msgid ""
"Instances of this class represent loaded shared libraries. Functions in "
"these libraries use the standard C calling convention, and are assumed to "
"return :c:type:`int`."
msgstr ""

#: ../Doc/library/ctypes.rst:1346
msgid ""
"Windows only: Instances of this class represent loaded shared libraries, "
"functions in these libraries use the ``stdcall`` calling convention, and are "
"assumed to return the windows specific :class:`HRESULT` code.  :class:"
"`HRESULT` values contain information specifying whether the function call "
"failed or succeeded, together with additional error code.  If the return "
"value signals a failure, an :class:`WindowsError` is automatically raised."
msgstr ""

# 9f87983c8e954524a97a57bbb0a4237d
#: ../Doc/library/ctypes.rst:1356
msgid ""
"Windows only: Instances of this class represent loaded shared libraries, "
"functions in these libraries use the ``stdcall`` calling convention, and are "
"assumed to return :c:type:`int` by default."
msgstr ""

#: ../Doc/library/ctypes.rst:1360
msgid ""
"On Windows CE only the standard calling convention is used, for convenience "
"the :class:`WinDLL` and :class:`OleDLL` use the standard calling convention "
"on this platform."
msgstr ""

#: ../Doc/library/ctypes.rst:1364
msgid ""
"The Python :term:`global interpreter lock` is released before calling any "
"function exported by these libraries, and reacquired afterwards."
msgstr ""

#: ../Doc/library/ctypes.rst:1370
msgid ""
"Instances of this class behave like :class:`CDLL` instances, except that the "
"Python GIL is *not* released during the function call, and after the "
"function execution the Python error flag is checked. If the error flag is "
"set, a Python exception is raised."
msgstr ""

#: ../Doc/library/ctypes.rst:1375
msgid "Thus, this is only useful to call Python C api functions directly."
msgstr ""

#: ../Doc/library/ctypes.rst:1377
msgid ""
"All these classes can be instantiated by calling them with at least one "
"argument, the pathname of the shared library.  If you have an existing "
"handle to an already loaded shared library, it can be passed as the "
"``handle`` named parameter, otherwise the underlying platforms ``dlopen`` or "
"``LoadLibrary`` function is used to load the library into the process, and "
"to get a handle to it."
msgstr ""

#: ../Doc/library/ctypes.rst:1384
msgid ""
"The *mode* parameter can be used to specify how the library is loaded.  For "
"details, consult the :manpage:`dlopen(3)` manpage, on Windows, *mode* is "
"ignored."
msgstr ""

#: ../Doc/library/ctypes.rst:1388
msgid ""
"The *use_errno* parameter, when set to True, enables a ctypes mechanism that "
"allows to access the system :data:`errno` error number in a safe way. :mod:"
"`ctypes` maintains a thread-local copy of the systems :data:`errno` "
"variable; if you call foreign functions created with ``use_errno=True`` then "
"the :data:`errno` value before the function call is swapped with the ctypes "
"private copy, the same happens immediately after the function call."
msgstr ""

#: ../Doc/library/ctypes.rst:1395
msgid ""
"The function :func:`ctypes.get_errno` returns the value of the ctypes "
"private copy, and the function :func:`ctypes.set_errno` changes the ctypes "
"private copy to a new value and returns the former value."
msgstr ""

#: ../Doc/library/ctypes.rst:1399
msgid ""
"The *use_last_error* parameter, when set to True, enables the same mechanism "
"for the Windows error code which is managed by the :func:`GetLastError` and :"
"func:`SetLastError` Windows API functions; :func:`ctypes.get_last_error` "
"and :func:`ctypes.set_last_error` are used to request and change the ctypes "
"private copy of the windows error code."
msgstr ""

#: ../Doc/library/ctypes.rst:1411
msgid ""
"Flag to use as *mode* parameter.  On platforms where this flag is not "
"available, it is defined as the integer zero."
msgstr ""

#: ../Doc/library/ctypes.rst:1418
msgid ""
"Flag to use as *mode* parameter.  On platforms where this is not available, "
"it is the same as *RTLD_GLOBAL*."
msgstr ""

#: ../Doc/library/ctypes.rst:1425
msgid ""
"The default mode which is used to load shared libraries.  On OSX 10.3, this "
"is *RTLD_GLOBAL*, otherwise it is the same as *RTLD_LOCAL*."
msgstr ""

#: ../Doc/library/ctypes.rst:1428
msgid ""
"Instances of these classes have no public methods, however :meth:"
"`__getattr__` and :meth:`__getitem__` have special behavior: functions "
"exported by the shared library can be accessed as attributes of by index.  "
"Please note that both :meth:`__getattr__` and :meth:`__getitem__` cache "
"their result, so calling them repeatedly returns the same object each time."
msgstr ""

#: ../Doc/library/ctypes.rst:1434
msgid ""
"The following public attributes are available, their name starts with an "
"underscore to not clash with exported function names:"
msgstr ""

#: ../Doc/library/ctypes.rst:1440
msgid "The system handle used to access the library."
msgstr ""

#: ../Doc/library/ctypes.rst:1445
msgid "The name of the library passed in the constructor."
msgstr ""

#: ../Doc/library/ctypes.rst:1447
msgid ""
"Shared libraries can also be loaded by using one of the prefabricated "
"objects, which are instances of the :class:`LibraryLoader` class, either by "
"calling the :meth:`LoadLibrary` method, or by retrieving the library as "
"attribute of the loader instance."
msgstr ""

#: ../Doc/library/ctypes.rst:1455
msgid ""
"Class which loads shared libraries.  *dlltype* should be one of the :class:"
"`CDLL`, :class:`PyDLL`, :class:`WinDLL`, or :class:`OleDLL` types."
msgstr ""

#: ../Doc/library/ctypes.rst:1458
msgid ""
":meth:`__getattr__` has special behavior: It allows to load a shared library "
"by accessing it as attribute of a library loader instance.  The result is "
"cached, so repeated attribute accesses return the same library each time."
msgstr ""

#: ../Doc/library/ctypes.rst:1465
msgid ""
"Load a shared library into the process and return it.  This method always "
"returns a new instance of the library."
msgstr ""

#: ../Doc/library/ctypes.rst:1468
msgid "These prefabricated library loaders are available:"
msgstr ""

#: ../Doc/library/ctypes.rst:1474
msgid "Creates :class:`CDLL` instances."
msgstr ""

#: ../Doc/library/ctypes.rst:1480
msgid "Windows only: Creates :class:`WinDLL` instances."
msgstr ""

#: ../Doc/library/ctypes.rst:1486
msgid "Windows only: Creates :class:`OleDLL` instances."
msgstr ""

#: ../Doc/library/ctypes.rst:1492
msgid "Creates :class:`PyDLL` instances."
msgstr ""

#: ../Doc/library/ctypes.rst:1494
msgid ""
"For accessing the C Python api directly, a ready-to-use Python shared "
"library object is available:"
msgstr ""

# 250a929ac14c455788f1498ee58f2986
#: ../Doc/library/ctypes.rst:1501
msgid ""
"An instance of :class:`PyDLL` that exposes Python C API functions as "
"attributes.  Note that all these functions are assumed to return C :c:type:"
"`int`, which is of course not always the truth, so you have to assign the "
"correct :attr:`restype` attribute to use these functions."
msgstr ""

#: ../Doc/library/ctypes.rst:1510
msgid "Foreign functions"
msgstr ""

#: ../Doc/library/ctypes.rst:1512
msgid ""
"As explained in the previous section, foreign functions can be accessed as "
"attributes of loaded shared libraries.  The function objects created in this "
"way by default accept any number of arguments, accept any ctypes data "
"instances as arguments, and return the default result type specified by the "
"library loader. They are instances of a private class:"
msgstr ""

#: ../Doc/library/ctypes.rst:1521
msgid "Base class for C callable foreign functions."
msgstr ""

#: ../Doc/library/ctypes.rst:1523
msgid ""
"Instances of foreign functions are also C compatible data types; they "
"represent C function pointers."
msgstr ""

#: ../Doc/library/ctypes.rst:1526
msgid ""
"This behavior can be customized by assigning to special attributes of the "
"foreign function object."
msgstr ""

# b5aef609ee134b96b975ff5b1a173f73
#: ../Doc/library/ctypes.rst:1532
msgid ""
"Assign a ctypes type to specify the result type of the foreign function. Use "
"``None`` for :c:type:`void`, a function not returning anything."
msgstr ""

# b66e36f5c95e43b3937bf9bfd31461fb
#: ../Doc/library/ctypes.rst:1535
msgid ""
"It is possible to assign a callable Python object that is not a ctypes type, "
"in this case the function is assumed to return a C :c:type:`int`, and the "
"callable will be called with this integer, allowing to do further processing "
"or error checking.  Using this is deprecated, for more flexible post "
"processing or error checking use a ctypes data type as :attr:`restype` and "
"assign a callable to the :attr:`errcheck` attribute."
msgstr ""

#: ../Doc/library/ctypes.rst:1545
msgid ""
"Assign a tuple of ctypes types to specify the argument types that the "
"function accepts.  Functions using the ``stdcall`` calling convention can "
"only be called with the same number of arguments as the length of this "
"tuple; functions using the C calling convention accept additional, "
"unspecified arguments as well."
msgstr ""

# 5bc24d864687493bac820d2e2f46cdf2
#: ../Doc/library/ctypes.rst:1551
msgid ""
"When a foreign function is called, each actual argument is passed to the :"
"meth:`from_param` class method of the items in the :attr:`argtypes` tuple, "
"this method allows to adapt the actual argument to an object that the "
"foreign function accepts.  For example, a :class:`c_char_p` item in the :"
"attr:`argtypes` tuple will convert a unicode string passed as argument into "
"an byte string using ctypes conversion rules."
msgstr ""

#: ../Doc/library/ctypes.rst:1558
msgid ""
"New: It is now possible to put items in argtypes which are not ctypes types, "
"but each item must have a :meth:`from_param` method which returns a value "
"usable as argument (integer, string, ctypes instance).  This allows to "
"define adapters that can adapt custom objects as function parameters."
msgstr ""

#: ../Doc/library/ctypes.rst:1566
msgid ""
"Assign a Python function or another callable to this attribute. The callable "
"will be called with three or more arguments:"
msgstr ""

#: ../Doc/library/ctypes.rst:1572
msgid ""
"*result* is what the foreign function returns, as specified by the :attr:"
"`restype` attribute."
msgstr ""

#: ../Doc/library/ctypes.rst:1575
msgid ""
"*func* is the foreign function object itself, this allows to reuse the same "
"callable object to check or post process the results of several functions."
msgstr ""

#: ../Doc/library/ctypes.rst:1579
msgid ""
"*arguments* is a tuple containing the parameters originally passed to the "
"function call, this allows to specialize the behavior on the arguments used."
msgstr ""

#: ../Doc/library/ctypes.rst:1583
msgid ""
"The object that this function returns will be returned from the foreign "
"function call, but it can also check the result value and raise an exception "
"if the foreign function call failed."
msgstr ""

#: ../Doc/library/ctypes.rst:1590
msgid ""
"This exception is raised when a foreign function call cannot convert one of "
"the passed arguments."
msgstr ""

#: ../Doc/library/ctypes.rst:1597
msgid "Function prototypes"
msgstr ""

#: ../Doc/library/ctypes.rst:1599
msgid ""
"Foreign functions can also be created by instantiating function prototypes. "
"Function prototypes are similar to function prototypes in C; they describe a "
"function (return type, argument types, calling convention) without defining "
"an implementation.  The factory functions must be called with the desired "
"result type and the argument types of the function."
msgstr ""

#: ../Doc/library/ctypes.rst:1608
msgid ""
"The returned function prototype creates functions that use the standard C "
"calling convention.  The function will release the GIL during the call.  If "
"*use_errno* is set to True, the ctypes private copy of the system :data:"
"`errno` variable is exchanged with the real :data:`errno` value before and "
"after the call; *use_last_error* does the same for the Windows error code."
msgstr ""

#: ../Doc/library/ctypes.rst:1621
msgid ""
"Windows only: The returned function prototype creates functions that use the "
"``stdcall`` calling convention, except on Windows CE where :func:"
"`WINFUNCTYPE` is the same as :func:`CFUNCTYPE`.  The function will release "
"the GIL during the call.  *use_errno* and *use_last_error* have the same "
"meaning as above."
msgstr ""

#: ../Doc/library/ctypes.rst:1630
msgid ""
"The returned function prototype creates functions that use the Python "
"calling convention.  The function will *not* release the GIL during the call."
msgstr ""

#: ../Doc/library/ctypes.rst:1633
msgid ""
"Function prototypes created by these factory functions can be instantiated "
"in different ways, depending on the type and number of the parameters in the "
"call:"
msgstr ""

#: ../Doc/library/ctypes.rst:1641
msgid ""
"Returns a foreign function at the specified address which must be an integer."
msgstr ""

#: ../Doc/library/ctypes.rst:1648
msgid ""
"Create a C callable function (a callback function) from a Python *callable*."
msgstr ""

#: ../Doc/library/ctypes.rst:1655
msgid ""
"Returns a foreign function exported by a shared library. *func_spec* must be "
"a 2-tuple ``(name_or_ordinal, library)``. The first item is the name of the "
"exported function as string, or the ordinal of the exported function as "
"small integer.  The second item is the shared library instance."
msgstr ""

#: ../Doc/library/ctypes.rst:1665
msgid ""
"Returns a foreign function that will call a COM method. *vtbl_index* is the "
"index into the virtual function table, a small non-negative integer. *name* "
"is name of the COM method. *iid* is an optional pointer to the interface "
"identifier which is used in extended error reporting."
msgstr ""

#: ../Doc/library/ctypes.rst:1670
msgid ""
"COM methods use a special calling convention: They require a pointer to the "
"COM interface as first argument, in addition to those parameters that are "
"specified in the :attr:`argtypes` tuple."
msgstr ""

#: ../Doc/library/ctypes.rst:1674
msgid ""
"The optional *paramflags* parameter creates foreign function wrappers with "
"much more functionality than the features described above."
msgstr ""

#: ../Doc/library/ctypes.rst:1677
msgid "*paramflags* must be a tuple of the same length as :attr:`argtypes`."
msgstr ""

#: ../Doc/library/ctypes.rst:1679
msgid ""
"Each item in this tuple contains further information about a parameter, it "
"must be a tuple containing one, two, or three items."
msgstr ""

#: ../Doc/library/ctypes.rst:1682
msgid ""
"The first item is an integer containing a combination of direction flags for "
"the parameter:"
msgstr ""

#: ../Doc/library/ctypes.rst:1686
msgid "Specifies an input parameter to the function."
msgstr ""

#: ../Doc/library/ctypes.rst:1689
msgid "Output parameter.  The foreign function fills in a value."
msgstr ""

#: ../Doc/library/ctypes.rst:1692
msgid "Input parameter which defaults to the integer zero."
msgstr ""

#: ../Doc/library/ctypes.rst:1694
msgid ""
"The optional second item is the parameter name as string.  If this is "
"specified, the foreign function can be called with named parameters."
msgstr ""

#: ../Doc/library/ctypes.rst:1697
msgid "The optional third item is the default value for this parameter."
msgstr ""

#: ../Doc/library/ctypes.rst:1699
msgid ""
"This example demonstrates how to wrap the Windows ``MessageBoxA`` function "
"so that it supports default parameters and named arguments. The C "
"declaration from the windows header file is this::"
msgstr ""

#: ../Doc/library/ctypes.rst:1710 ../Doc/library/ctypes.rst:1735
msgid "Here is the wrapping with :mod:`ctypes`::"
msgstr ""

#: ../Doc/library/ctypes.rst:1719
msgid "The MessageBox foreign function can now be called in these ways::"
msgstr ""

#: ../Doc/library/ctypes.rst:1726
msgid ""
"A second example demonstrates output parameters.  The win32 "
"``GetWindowRect`` function retrieves the dimensions of a specified window by "
"copying them into ``RECT`` structure that the caller has to supply.  Here is "
"the C declaration::"
msgstr ""

#: ../Doc/library/ctypes.rst:1744
msgid ""
"Functions with output parameters will automatically return the output "
"parameter value if there is a single one, or a tuple containing the output "
"parameter values when there are more than one, so the GetWindowRect function "
"now returns a RECT instance, when called."
msgstr ""

#: ../Doc/library/ctypes.rst:1749
msgid ""
"Output parameters can be combined with the :attr:`errcheck` protocol to do "
"further output processing and error checking.  The win32 ``GetWindowRect`` "
"api function returns a ``BOOL`` to signal success or failure, so this "
"function could do the error checking, and raises an exception when the api "
"call failed::"
msgstr ""

#: ../Doc/library/ctypes.rst:1762
msgid ""
"If the :attr:`errcheck` function returns the argument tuple it receives "
"unchanged, :mod:`ctypes` continues the normal processing it does on the "
"output parameters.  If you want to return a tuple of window coordinates "
"instead of a ``RECT`` instance, you can retrieve the fields in the function "
"and return them instead, the normal processing will no longer take place::"
msgstr ""

#: ../Doc/library/ctypes.rst:1781 ../Doc/library/urllib.rst:208
msgid "Utility functions"
msgstr ""

#: ../Doc/library/ctypes.rst:1786
msgid ""
"Returns the address of the memory buffer as integer.  *obj* must be an "
"instance of a ctypes type."
msgstr ""

#: ../Doc/library/ctypes.rst:1792
msgid ""
"Returns the alignment requirements of a ctypes type. *obj_or_type* must be a "
"ctypes type or instance."
msgstr ""

#: ../Doc/library/ctypes.rst:1798
msgid ""
"Returns a light-weight pointer to *obj*, which must be an instance of a "
"ctypes type.  *offset* defaults to zero, and must be an integer that will be "
"added to the internal pointer value."
msgstr ""

#: ../Doc/library/ctypes.rst:1802
msgid "``byref(obj, offset)`` corresponds to this C code::"
msgstr ""

# 290b3234ea0e4f9ba676a9c4b5529c02
#: ../Doc/library/ctypes.rst:1806
msgid ""
"The returned object can only be used as a foreign function call parameter.  "
"It behaves similar to ``pointer(obj)``, but the construction is a lot faster."
msgstr ""

# 75f74eb78d134b458612c90d56637153
#: ../Doc/library/ctypes.rst:1816
msgid ""
"This function is similar to the cast operator in C.  It returns a new "
"instance of *type* which points to the same memory block as *obj*.  *type* "
"must be a pointer type, and *obj* must be an object that can be interpreted "
"as a pointer."
msgstr ""

#: ../Doc/library/ctypes.rst:1824
msgid ""
"This function creates a mutable character buffer. The returned object is a "
"ctypes array of :class:`c_char`."
msgstr ""

#: ../Doc/library/ctypes.rst:1827
msgid ""
"*init_or_size* must be an integer which specifies the size of the array, or "
"a string which will be used to initialize the array items."
msgstr ""

#: ../Doc/library/ctypes.rst:1830
msgid ""
"If a string is specified as first argument, the buffer is made one item "
"larger than the length of the string so that the last element in the array "
"is a NUL termination character. An integer can be passed as second argument "
"which allows to specify the size of the array if the length of the string "
"should not be used."
msgstr ""

# d5eccf1373904eaca4eaa54dc8d1b79f
#: ../Doc/library/ctypes.rst:1835
msgid ""
"If the first parameter is a unicode string, it is converted into an 8-bit "
"string according to ctypes conversion rules."
msgstr ""

#: ../Doc/library/ctypes.rst:1841
msgid ""
"This function creates a mutable unicode character buffer. The returned "
"object is a ctypes array of :class:`c_wchar`."
msgstr ""

# f54e41a64e064025b10b00e588aa573f
#: ../Doc/library/ctypes.rst:1844
msgid ""
"*init_or_size* must be an integer which specifies the size of the array, or "
"a unicode string which will be used to initialize the array items."
msgstr ""

# ae0452bf5c9e4e2f964df083bea4898a
#: ../Doc/library/ctypes.rst:1847
msgid ""
"If a unicode string is specified as first argument, the buffer is made one "
"item larger than the length of the string so that the last element in the "
"array is a NUL termination character. An integer can be passed as second "
"argument which allows to specify the size of the array if the length of the "
"string should not be used."
msgstr ""

# 0fc860e43e6444a8a479c8dc231ad0e5
#: ../Doc/library/ctypes.rst:1853
msgid ""
"If the first parameter is a 8-bit string, it is converted into an unicode "
"string according to ctypes conversion rules."
msgstr ""

#: ../Doc/library/ctypes.rst:1859
msgid ""
"Windows only: This function is a hook which allows to implement in-process "
"COM servers with ctypes.  It is called from the DllCanUnloadNow function "
"that the _ctypes extension dll exports."
msgstr ""

#: ../Doc/library/ctypes.rst:1866
msgid ""
"Windows only: This function is a hook which allows to implement in-process "
"COM servers with ctypes.  It is called from the DllGetClassObject function "
"that the ``_ctypes`` extension dll exports."
msgstr ""

#: ../Doc/library/ctypes.rst:1874
msgid ""
"Try to find a library and return a pathname.  *name* is the library name "
"without any prefix like ``lib``, suffix like ``.so``, ``.dylib`` or version "
"number (this is the form used for the posix linker option :option:`-l`).  If "
"no library can be found, returns ``None``."
msgstr ""

#: ../Doc/library/ctypes.rst:1889
msgid ""
"Windows only: return the filename of the VC runtype library used by Python, "
"and by the extension modules.  If the name of the library cannot be "
"determined, ``None`` is returned."
msgstr ""

#: ../Doc/library/ctypes.rst:1893
msgid ""
"If you need to free memory, for example, allocated by an extension module "
"with a call to the ``free(void *)``, it is important that you use the "
"function in the same library that allocated the memory."
msgstr ""

#: ../Doc/library/ctypes.rst:1902
msgid ""
"Windows only: Returns a textual description of the error code *code*.  If no "
"error code is specified, the last error code is used by calling the Windows "
"api function GetLastError."
msgstr ""

#: ../Doc/library/ctypes.rst:1909
msgid ""
"Windows only: Returns the last error code set by Windows in the calling "
"thread. This function calls the Windows `GetLastError()` function directly, "
"it does not return the ctypes-private copy of the error code."
msgstr ""

#: ../Doc/library/ctypes.rst:1915
msgid ""
"Returns the current value of the ctypes-private copy of the system :data:"
"`errno` variable in the calling thread."
msgstr ""

#: ../Doc/library/ctypes.rst:1922
msgid ""
"Windows only: returns the current value of the ctypes-private copy of the "
"system :data:`LastError` variable in the calling thread."
msgstr ""

#: ../Doc/library/ctypes.rst:1929
msgid ""
"Same as the standard C memmove library function: copies *count* bytes from "
"*src* to *dst*. *dst* and *src* must be integers or ctypes instances that "
"can be converted to pointers."
msgstr ""

#: ../Doc/library/ctypes.rst:1936
msgid ""
"Same as the standard C memset library function: fills the memory block at "
"address *dst* with *count* bytes of value *c*. *dst* must be an integer "
"specifying an address, or a ctypes instance."
msgstr ""

#: ../Doc/library/ctypes.rst:1943
msgid ""
"This factory function creates and returns a new ctypes pointer type. Pointer "
"types are cached an reused internally, so calling this function repeatedly "
"is cheap. *type* must be a ctypes type."
msgstr ""

#: ../Doc/library/ctypes.rst:1950
msgid ""
"This function creates a new pointer instance, pointing to *obj*. The "
"returned object is of the type ``POINTER(type(obj))``."
msgstr ""

#: ../Doc/library/ctypes.rst:1953
msgid ""
"Note: If you just want to pass a pointer to an object to a foreign function "
"call, you should use ``byref(obj)`` which is much faster."
msgstr ""

#: ../Doc/library/ctypes.rst:1959
msgid ""
"This function resizes the internal memory buffer of *obj*, which must be an "
"instance of a ctypes type.  It is not possible to make the buffer smaller "
"than the native size of the objects type, as given by ``sizeof(type(obj))``, "
"but it is possible to enlarge the buffer."
msgstr ""

# bbec09d2fea14947820be1998911dd74
#: ../Doc/library/ctypes.rst:1967
msgid ""
"This function sets the rules that ctypes objects use when converting between "
"8-bit strings and unicode strings.  *encoding* must be a string specifying "
"an encoding, like ``'utf-8'`` or ``'mbcs'``, *errors* must be a string "
"specifying the error handling on encoding/decoding errors.  Examples of "
"possible values are ``\"strict\"``, ``\"replace\"``, or ``\"ignore\"``."
msgstr ""

# b52a8a4c48f04228ae2caec2a6c722d1
#: ../Doc/library/ctypes.rst:1973
msgid ""
":func:`set_conversion_mode` returns a 2-tuple containing the previous "
"conversion rules.  On windows, the initial conversion rules are ``('mbcs', "
"'ignore')``, on other systems ``('ascii', 'strict')``."
msgstr ""

#: ../Doc/library/ctypes.rst:1980
msgid ""
"Set the current value of the ctypes-private copy of the system :data:`errno` "
"variable in the calling thread to *value* and return the previous value."
msgstr ""

#: ../Doc/library/ctypes.rst:1988
msgid ""
"Windows only: set the current value of the ctypes-private copy of the "
"system :data:`LastError` variable in the calling thread to *value* and "
"return the previous value."
msgstr ""

#: ../Doc/library/ctypes.rst:1997
msgid ""
"Returns the size in bytes of a ctypes type or instance memory buffer. Does "
"the same as the C ``sizeof()`` function."
msgstr ""

# fe488b2c19774b7394ff7ea2dd3680aa
#: ../Doc/library/ctypes.rst:2003
msgid ""
"This function returns the string starting at memory address *address*. If "
"size is specified, it is used as size, otherwise the string is assumed to be "
"zero-terminated."
msgstr ""

# d3b72d2ef97b476aa933813275cafb7c
#: ../Doc/library/ctypes.rst:2010
msgid ""
"Windows only: this function is probably the worst-named thing in ctypes.  It "
"creates an instance of WindowsError.  If *code* is not specified, "
"``GetLastError`` is called to determine the error code.  If ``descr`` is not "
"specified, :func:`FormatError` is called to get a textual description of the "
"error."
msgstr ""

# 8d6f968e5ce7484da0cc3c44b336d3cc
#: ../Doc/library/ctypes.rst:2019
msgid ""
"This function returns the wide character string starting at memory address "
"*address* as unicode string.  If *size* is specified, it is used as the "
"number of characters of the string, otherwise the string is assumed to be "
"zero-terminated."
msgstr ""

#: ../Doc/library/ctypes.rst:2028
msgid "Data types"
msgstr ""

# 8bc1b9e01ce34cf3b53ac42ad9bf7805
#: ../Doc/library/ctypes.rst:2033
msgid ""
"This non-public class is the common base class of all ctypes data types. "
"Among other things, all ctypes type instances contain a memory block that "
"hold C compatible data; the address of the memory block is returned by the :"
"func:`addressof` helper function.  Another instance variable is exposed as :"
"attr:`_objects`; this contains other Python objects that need to be kept "
"alive in case the memory block contains pointers."
msgstr ""

#: ../Doc/library/ctypes.rst:2040
msgid ""
"Common methods of ctypes data types, these are all class methods (to be "
"exact, they are methods of the :term:`metaclass`):"
msgstr ""

#: ../Doc/library/ctypes.rst:2046
msgid ""
"This method returns a ctypes instance that shares the buffer of the *source* "
"object.  The *source* object must support the writeable buffer interface.  "
"The optional *offset* parameter specifies an offset into the source buffer "
"in bytes; the default is zero.  If the source buffer is not large enough a :"
"exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/ctypes.rst:2057
msgid ""
"This method creates a ctypes instance, copying the buffer from the *source* "
"object buffer which must be readable.  The optional *offset* parameter "
"specifies an offset into the source buffer in bytes; the default is zero.  "
"If the source buffer is not large enough a :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/ctypes.rst:2068
msgid ""
"This method returns a ctypes type instance using the memory specified by "
"*address* which must be an integer."
msgstr ""

#: ../Doc/library/ctypes.rst:2074
msgid ""
"This method adapts *obj* to a ctypes type.  It is called with the actual "
"object used in a foreign function call when the type is present in the "
"foreign function's :attr:`argtypes` tuple; it must return an object that can "
"be used as a function call parameter."
msgstr ""

#: ../Doc/library/ctypes.rst:2079
msgid ""
"All ctypes data types have a default implementation of this classmethod that "
"normally returns *obj* if that is an instance of the type.  Some types "
"accept other objects as well."
msgstr ""

#: ../Doc/library/ctypes.rst:2086
msgid ""
"This method returns a ctypes type instance exported by a shared library. "
"*name* is the name of the symbol that exports the data, *library* is the "
"loaded shared library."
msgstr ""

#: ../Doc/library/ctypes.rst:2091
msgid "Common instance variables of ctypes data types:"
msgstr ""

#: ../Doc/library/ctypes.rst:2095
msgid ""
"Sometimes ctypes data instances do not own the memory block they contain, "
"instead they share part of the memory block of a base object.  The :attr:"
"`_b_base_` read-only member is the root ctypes object that owns the memory "
"block."
msgstr ""

#: ../Doc/library/ctypes.rst:2103
msgid ""
"This read-only variable is true when the ctypes data instance has allocated "
"the memory block itself, false otherwise."
msgstr ""

#: ../Doc/library/ctypes.rst:2109
msgid ""
"This member is either ``None`` or a dictionary containing Python objects "
"that need to be kept alive so that the memory block contents is kept valid.  "
"This object is only exposed for debugging; never modify the contents of this "
"dictionary."
msgstr ""

# 8f1bf0725779491cbd7a5c4d9973c038
#: ../Doc/library/ctypes.rst:2123
msgid ""
"This non-public class is the base class of all fundamental ctypes data "
"types. It is mentioned here because it contains the common attributes of the "
"fundamental ctypes data types.  :class:`_SimpleCData` is a subclass of :"
"class:`_CData`, so it inherits their methods and attributes."
msgstr ""

#: ../Doc/library/ctypes.rst:2132
msgid "Instances have a single attribute:"
msgstr ""

# 64065f1acb7e47bc93e93d3559672f99
#: ../Doc/library/ctypes.rst:2136
msgid ""
"This attribute contains the actual value of the instance. For integer and "
"pointer types, it is an integer, for character types, it is a single "
"character string, for character pointer types it is a Python string or "
"unicode string."
msgstr ""

#: ../Doc/library/ctypes.rst:2141
msgid ""
"When the ``value`` attribute is retrieved from a ctypes instance, usually a "
"new object is returned each time.  :mod:`ctypes` does *not* implement "
"original object return, always a new object is constructed.  The same is "
"true for all other ctypes object instances."
msgstr ""

# 5e1bb795382a4b7bbcf3bdbed4e2c3cd
#: ../Doc/library/ctypes.rst:2147
msgid ""
"Fundamental data types, when returned as foreign function call results, or, "
"for example, by retrieving structure field members or array items, are "
"transparently converted to native Python types.  In other words, if a "
"foreign function has a :attr:`restype` of :class:`c_char_p`, you will always "
"receive a Python string, *not* a :class:`c_char_p` instance."
msgstr ""

#: ../Doc/library/ctypes.rst:2153
msgid ""
"Subclasses of fundamental data types do *not* inherit this behavior. So, if "
"a foreign functions :attr:`restype` is a subclass of :class:`c_void_p`, you "
"will receive an instance of this subclass from the function call. Of course, "
"you can get the value of the pointer by accessing the ``value`` attribute."
msgstr ""

#: ../Doc/library/ctypes.rst:2158
msgid "These are the fundamental ctypes data types:"
msgstr ""

# 64f5f5d79ad94cbb86805ffd96443524
#: ../Doc/library/ctypes.rst:2162
msgid ""
"Represents the C :c:type:`signed char` datatype, and interprets the value as "
"small integer.  The constructor accepts an optional integer initializer; no "
"overflow checking is done."
msgstr ""

# dfee66815636420d8fad00e8d1d16504
#: ../Doc/library/ctypes.rst:2169
msgid ""
"Represents the C :c:type:`char` datatype, and interprets the value as a "
"single character.  The constructor accepts an optional string initializer, "
"the length of the string must be exactly one character."
msgstr ""

# ce46754e3a244e2c85dd159f32e91351
#: ../Doc/library/ctypes.rst:2176
msgid ""
"Represents the C :c:type:`char *` datatype when it points to a zero-"
"terminated string.  For a general character pointer that may also point to "
"binary data, ``POINTER(c_char)`` must be used.  The constructor accepts an "
"integer address, or a string."
msgstr ""

# 2a69365c90824fea9ff47f85efaa1800
#: ../Doc/library/ctypes.rst:2184
msgid ""
"Represents the C :c:type:`double` datatype.  The constructor accepts an "
"optional float initializer."
msgstr ""

# 16010134bd774184bbdf7ded6020d255
#: ../Doc/library/ctypes.rst:2190
msgid ""
"Represents the C :c:type:`long double` datatype.  The constructor accepts an "
"optional float initializer.  On platforms where ``sizeof(long double) == "
"sizeof(double)`` it is an alias to :class:`c_double`."
msgstr ""

# fe560e27c23e40a1a4cde0de3e273ee5
#: ../Doc/library/ctypes.rst:2198
msgid ""
"Represents the C :c:type:`float` datatype.  The constructor accepts an "
"optional float initializer."
msgstr ""

# e24be7c004aa476bb426782a8195ba31
#: ../Doc/library/ctypes.rst:2204
msgid ""
"Represents the C :c:type:`signed int` datatype.  The constructor accepts an "
"optional integer initializer; no overflow checking is done.  On platforms "
"where ``sizeof(int) == sizeof(long)`` it is an alias to :class:`c_long`."
msgstr ""

# 6be5f39b672140c3a25f962929c16005
#: ../Doc/library/ctypes.rst:2211
msgid ""
"Represents the C 8-bit :c:type:`signed int` datatype.  Usually an alias for :"
"class:`c_byte`."
msgstr ""

# c841579ec3924bfebbd887c7b58d78c9
#: ../Doc/library/ctypes.rst:2217
msgid ""
"Represents the C 16-bit :c:type:`signed int` datatype.  Usually an alias "
"for :class:`c_short`."
msgstr ""

# 3b008aea75d64048b1b994eab57af945
#: ../Doc/library/ctypes.rst:2223
msgid ""
"Represents the C 32-bit :c:type:`signed int` datatype.  Usually an alias "
"for :class:`c_int`."
msgstr ""

# ea4e81ee76b34c4b98a6f910e50e7f6e
#: ../Doc/library/ctypes.rst:2229
msgid ""
"Represents the C 64-bit :c:type:`signed int` datatype.  Usually an alias "
"for :class:`c_longlong`."
msgstr ""

# 3abd5113218d42e38b6567be39a2c391
#: ../Doc/library/ctypes.rst:2235
msgid ""
"Represents the C :c:type:`signed long` datatype.  The constructor accepts an "
"optional integer initializer; no overflow checking is done."
msgstr ""

# 9422e473b8ee400a9d99c14c63b9115e
#: ../Doc/library/ctypes.rst:2241
msgid ""
"Represents the C :c:type:`signed long long` datatype.  The constructor "
"accepts an optional integer initializer; no overflow checking is done."
msgstr ""

# cb6c2891178f43b4aea5afec4184cd81
#: ../Doc/library/ctypes.rst:2247
msgid ""
"Represents the C :c:type:`signed short` datatype.  The constructor accepts "
"an optional integer initializer; no overflow checking is done."
msgstr ""

# e70b43c7147640319ab5f658b2a11735
#: ../Doc/library/ctypes.rst:2253
msgid "Represents the C :c:type:`size_t` datatype."
msgstr ""

# 528ae6c7deba4d039c3368e604bfc17a
#: ../Doc/library/ctypes.rst:2258
msgid "Represents the C :c:type:`ssize_t` datatype."
msgstr ""

# 92b36a166d1d47cb9138000784b58876
#: ../Doc/library/ctypes.rst:2265
msgid ""
"Represents the C :c:type:`unsigned char` datatype, it interprets the value "
"as small integer.  The constructor accepts an optional integer initializer; "
"no overflow checking is done."
msgstr ""

# de77480487764b57aedf257de33329fc
#: ../Doc/library/ctypes.rst:2272
msgid ""
"Represents the C :c:type:`unsigned int` datatype.  The constructor accepts "
"an optional integer initializer; no overflow checking is done.  On platforms "
"where ``sizeof(int) == sizeof(long)`` it is an alias for :class:`c_ulong`."
msgstr ""

# a7c7ac81356e463bbd173f6a69f35a9e
#: ../Doc/library/ctypes.rst:2279
msgid ""
"Represents the C 8-bit :c:type:`unsigned int` datatype.  Usually an alias "
"for :class:`c_ubyte`."
msgstr ""

# 58852261fffb4eb3a722c5bb1d0938c3
#: ../Doc/library/ctypes.rst:2285
msgid ""
"Represents the C 16-bit :c:type:`unsigned int` datatype.  Usually an alias "
"for :class:`c_ushort`."
msgstr ""

# 85b95dfcc77942d39e150e6aa8fd0a4f
#: ../Doc/library/ctypes.rst:2291
msgid ""
"Represents the C 32-bit :c:type:`unsigned int` datatype.  Usually an alias "
"for :class:`c_uint`."
msgstr ""

# 4b6ac6634d124e8a86d4bb459afe41ec
#: ../Doc/library/ctypes.rst:2297
msgid ""
"Represents the C 64-bit :c:type:`unsigned int` datatype.  Usually an alias "
"for :class:`c_ulonglong`."
msgstr ""

# 7bbd1c10554f4d83b81075b4ebbf31ba
#: ../Doc/library/ctypes.rst:2303
msgid ""
"Represents the C :c:type:`unsigned long` datatype.  The constructor accepts "
"an optional integer initializer; no overflow checking is done."
msgstr ""

# eb2f7d6a2b754643ad444929fd7b4d48
#: ../Doc/library/ctypes.rst:2309
msgid ""
"Represents the C :c:type:`unsigned long long` datatype.  The constructor "
"accepts an optional integer initializer; no overflow checking is done."
msgstr ""

# 0588e74656a14652b250d98b11d0db34
#: ../Doc/library/ctypes.rst:2315
msgid ""
"Represents the C :c:type:`unsigned short` datatype.  The constructor accepts "
"an optional integer initializer; no overflow checking is done."
msgstr ""

# 58e6efea737f44aa9599ab33163746d7
#: ../Doc/library/ctypes.rst:2321
msgid ""
"Represents the C :c:type:`void *` type.  The value is represented as "
"integer. The constructor accepts an optional integer initializer."
msgstr ""

# 26944068f46a43468153122e72d843b5
#: ../Doc/library/ctypes.rst:2327
msgid ""
"Represents the C :c:type:`wchar_t` datatype, and interprets the value as a "
"single character unicode string.  The constructor accepts an optional string "
"initializer, the length of the string must be exactly one character."
msgstr ""

# 33408605b34e44a1a3d62aae8d95a572
#: ../Doc/library/ctypes.rst:2334
msgid ""
"Represents the C :c:type:`wchar_t *` datatype, which must be a pointer to a "
"zero-terminated wide character string.  The constructor accepts an integer "
"address, or a string."
msgstr ""

# 48575052dc8b432c8dce290e277b78ed
#: ../Doc/library/ctypes.rst:2341
msgid ""
"Represent the C :c:type:`bool` datatype (more accurately, :c:type:`_Bool` "
"from C99).  Its value can be True or False, and the constructor accepts any "
"object that has a truth value."
msgstr ""

# 90463214e5ad405eb585ec93daeac522
#: ../Doc/library/ctypes.rst:2350
msgid ""
"Windows only: Represents a :c:type:`HRESULT` value, which contains success "
"or error information for a function or method call."
msgstr ""

# d57839b1631c4188a89cdab3f05eba65
#: ../Doc/library/ctypes.rst:2356
msgid ""
"Represents the C :c:type:`PyObject *` datatype.  Calling this without an "
"argument creates a ``NULL`` :c:type:`PyObject *` pointer."
msgstr ""

# fc8e77066658420793722bd30ffcb1cd
#: ../Doc/library/ctypes.rst:2359
msgid ""
"The :mod:`ctypes.wintypes` module provides quite some other Windows specific "
"data types, for example :c:type:`HWND`, :c:type:`WPARAM`, or :c:type:"
"`DWORD`.  Some useful structures like :c:type:`MSG` or :c:type:`RECT` are "
"also defined."
msgstr ""

#: ../Doc/library/ctypes.rst:2367
msgid "Structured data types"
msgstr ""

#: ../Doc/library/ctypes.rst:2372
msgid "Abstract base class for unions in native byte order."
msgstr ""

#: ../Doc/library/ctypes.rst:2377
msgid "Abstract base class for structures in *big endian* byte order."
msgstr ""

#: ../Doc/library/ctypes.rst:2382
msgid "Abstract base class for structures in *little endian* byte order."
msgstr ""

#: ../Doc/library/ctypes.rst:2384
msgid ""
"Structures with non-native byte order cannot contain pointer type fields, or "
"any other data types containing pointer type fields."
msgstr ""

#: ../Doc/library/ctypes.rst:2390
msgid "Abstract base class for structures in *native* byte order."
msgstr ""

#: ../Doc/library/ctypes.rst:2392
msgid ""
"Concrete structure and union types must be created by subclassing one of "
"these types, and at least define a :attr:`_fields_` class variable. :mod:"
"`ctypes` will create :term:`descriptor`\\s which allow reading and writing "
"the fields by direct attribute accesses.  These are the"
msgstr ""

#: ../Doc/library/ctypes.rst:2400
msgid ""
"A sequence defining the structure fields.  The items must be 2-tuples or 3-"
"tuples.  The first item is the name of the field, the second item specifies "
"the type of the field; it can be any ctypes data type."
msgstr ""

#: ../Doc/library/ctypes.rst:2404
msgid ""
"For integer type fields like :class:`c_int`, a third optional item can be "
"given.  It must be a small positive integer defining the bit width of the "
"field."
msgstr ""

#: ../Doc/library/ctypes.rst:2408
msgid ""
"Field names must be unique within one structure or union.  This is not "
"checked, only one field can be accessed when names are repeated."
msgstr ""

#: ../Doc/library/ctypes.rst:2411
msgid ""
"It is possible to define the :attr:`_fields_` class variable *after* the "
"class statement that defines the Structure subclass, this allows to create "
"data types that directly or indirectly reference themselves::"
msgstr ""

# c7a37cb7d8f04703bfa7424981d8370c
#: ../Doc/library/ctypes.rst:2421
msgid ""
"The :attr:`_fields_` class variable must, however, be defined before the "
"type is first used (an instance is created, ``sizeof()`` is called on it, "
"and so on).  Later assignments to the :attr:`_fields_` class variable will "
"raise an AttributeError."
msgstr ""

#: ../Doc/library/ctypes.rst:2426
msgid ""
"Structure and union subclass constructors accept both positional and named "
"arguments.  Positional arguments are used to initialize the fields in the "
"same order as they appear in the :attr:`_fields_` definition, named "
"arguments are used to initialize the fields with the corresponding name."
msgstr ""

#: ../Doc/library/ctypes.rst:2431
msgid ""
"It is possible to defined sub-subclasses of structure types, they inherit "
"the fields of the base class plus the :attr:`_fields_` defined in the sub-"
"subclass, if any."
msgstr ""

#: ../Doc/library/ctypes.rst:2438
msgid ""
"An optional small integer that allows to override the alignment of structure "
"fields in the instance.  :attr:`_pack_` must already be defined when :attr:"
"`_fields_` is assigned, otherwise it will have no effect."
msgstr ""

#: ../Doc/library/ctypes.rst:2445
msgid ""
"An optional sequence that lists the names of unnamed (anonymous) fields. :"
"attr:`_anonymous_` must be already defined when :attr:`_fields_` is "
"assigned, otherwise it will have no effect."
msgstr ""

#: ../Doc/library/ctypes.rst:2449
msgid ""
"The fields listed in this variable must be structure or union type fields. :"
"mod:`ctypes` will create descriptors in the structure type that allows to "
"access the nested fields directly, without the need to create the structure "
"or union field."
msgstr ""

#: ../Doc/library/ctypes.rst:2454
msgid "Here is an example type (Windows)::"
msgstr ""

#: ../Doc/library/ctypes.rst:2467
msgid ""
"The ``TYPEDESC`` structure describes a COM data type, the ``vt`` field "
"specifies which one of the union fields is valid.  Since the ``u`` field is "
"defined as anonymous field, it is now possible to access the members "
"directly off the TYPEDESC instance. ``td.lptdesc`` and ``td.u.lptdesc`` are "
"equivalent, but the former is faster since it does not need to create a "
"temporary union instance::"
msgstr ""

#: ../Doc/library/ctypes.rst:2479
msgid ""
"It is possible to defined sub-subclasses of structures, they inherit the "
"fields of the base class.  If the subclass definition has a separate :attr:"
"`_fields_` variable, the fields specified in this are appended to the fields "
"of the base class."
msgstr ""

#: ../Doc/library/ctypes.rst:2484
msgid ""
"Structure and union constructors accept both positional and keyword "
"arguments.  Positional arguments are used to initialize member fields in the "
"same order as they are appear in :attr:`_fields_`.  Keyword arguments in the "
"constructor are interpreted as attribute assignments, so they will "
"initialize :attr:`_fields_` with the same name, or create new attributes for "
"names not present in :attr:`_fields_`."
msgstr ""

#: ../Doc/library/ctypes.rst:2495
msgid "Arrays and pointers"
msgstr ""

#: ../Doc/library/ctypes.rst:2497
msgid ""
"Not yet written - please see the sections :ref:`ctypes-pointers` and "
"section :ref:`ctypes-arrays` in the tutorial."
msgstr ""

#: ../Doc/library/curses.rst:2
msgid ":mod:`curses` --- Terminal handling for character-cell displays"
msgstr ""

#: ../Doc/library/curses.rst:14
msgid ""
"The :mod:`curses` module provides an interface to the curses library, the de-"
"facto standard for portable advanced terminal handling."
msgstr ""

#: ../Doc/library/curses.rst:17
msgid ""
"While curses is most widely used in the Unix environment, versions are "
"available for DOS, OS/2, and possibly other systems as well.  This extension "
"module is designed to match the API of ncurses, an open-source curses "
"library hosted on Linux and the BSD variants of Unix."
msgstr ""

#: ../Doc/library/curses.rst:24
msgid ""
"Since version 5.4, the ncurses library decides how to interpret non-ASCII "
"data using the ``nl_langinfo`` function.  That means that you have to call :"
"func:`locale.setlocale` in the application and encode Unicode strings using "
"one of the system's available encodings.  This example uses the system's "
"default encoding::"
msgstr ""

#: ../Doc/library/curses.rst:34
msgid "Then use *code* as the encoding for :meth:`str.encode` calls."
msgstr ""

#: ../Doc/library/curses.rst:39
msgid ""
"Utilities for working with ASCII characters, regardless of your locale "
"settings."
msgstr ""

#: ../Doc/library/curses.rst:42
msgid "A panel stack extension that adds depth to  curses windows."
msgstr ""

#: ../Doc/library/curses.rst:45
msgid ""
"Editable text widget for curses supporting  :program:`Emacs`\\ -like "
"bindings."
msgstr ""

#: ../Doc/library/curses.rst:48
msgid ""
"Tutorial material on using curses with Python, by Andrew Kuchling and Eric "
"Raymond."
msgstr ""

#: ../Doc/library/curses.rst:51
msgid ""
"The :file:`Demo/curses/` directory in the Python source distribution "
"contains some example programs using the curses bindings provided by this "
"module."
msgstr ""

#: ../Doc/library/curses.rst:60
msgid "The module :mod:`curses` defines the following exception:"
msgstr ""

#: ../Doc/library/curses.rst:65
msgid "Exception raised when a curses library function returns an error."
msgstr ""

#: ../Doc/library/curses.rst:69
msgid ""
"Whenever *x* or *y* arguments to a function or a method are optional, they "
"default to the current cursor location. Whenever *attr* is optional, it "
"defaults to :const:`A_NORMAL`."
msgstr ""

#: ../Doc/library/curses.rst:73
msgid "The module :mod:`curses` defines the following functions:"
msgstr ""

# 9be0a10e3a884eb5b302f854fdcbd81c
#: ../Doc/library/curses.rst:78
msgid ""
"Return the output speed of the terminal in bits per second.  On software "
"terminal emulators it will have a fixed high value. Included for historical "
"reasons; in former times, it was used to  write output loops for time delays "
"and occasionally to change interfaces depending on the line speed."
msgstr ""

#: ../Doc/library/curses.rst:86
msgid "Emit a short attention sound."
msgstr ""

# d694f35488654fd1bd0877727a1d5678
#: ../Doc/library/curses.rst:91
msgid ""
"Return ``True`` or ``False``, depending on whether the programmer can change "
"the colors displayed by the terminal."
msgstr ""

#: ../Doc/library/curses.rst:97
msgid ""
"Enter cbreak mode.  In cbreak mode (sometimes called \"rare\" mode) normal "
"tty line buffering is turned off and characters are available to be read one "
"by one. However, unlike raw mode, special characters (interrupt, quit, "
"suspend, and flow control) retain their effects on the tty driver and "
"calling program.  Calling first :func:`raw` then :func:`cbreak` leaves the "
"terminal in cbreak mode."
msgstr ""

# bcb4bb373ed74c87adcbd0e620cd652e
#: ../Doc/library/curses.rst:106
msgid ""
"Return the intensity of the red, green, and blue (RGB) components in the "
"color *color_number*, which must be between ``0`` and :const:`COLORS`.  A 3-"
"tuple is returned, containing the R,G,B values for the given color, which "
"will be between ``0`` (no component) and ``1000`` (maximum amount of "
"component)."
msgstr ""

# 1e46b20533af4d88815494a4c581a4b9
#: ../Doc/library/curses.rst:114
msgid ""
"Return the attribute value for displaying text in the specified color.  This "
"attribute value can be combined with :const:`A_STANDOUT`, :const:"
"`A_REVERSE`, and the other :const:`A_\\*` attributes.  :func:`pair_number` "
"is the counterpart to this function."
msgstr ""

# 8bd4fd4b65934a10a0310acd6746d741
#: ../Doc/library/curses.rst:122
msgid ""
"Set the cursor state.  *visibility* can be set to 0, 1, or 2, for invisible, "
"normal, or very visible.  If the terminal supports the visibility requested, "
"the previous cursor state is returned; otherwise, an exception is raised.  "
"On many terminals, the \"visible\" mode is an underline cursor and the "
"\"very visible\" mode is a block cursor."
msgstr ""

# e6f65356a4ef4c18891b6df4d44743f4
#: ../Doc/library/curses.rst:131
msgid ""
"Save the current terminal mode as the \"program\" mode, the mode when the "
"running program is using curses.  (Its counterpart is the \"shell\" mode, "
"for when the program is not in curses.)  Subsequent calls to :func:"
"`reset_prog_mode` will restore this mode."
msgstr ""

# cd56de74cdda4d5e9efdd9cddbde2653
#: ../Doc/library/curses.rst:139
msgid ""
"Save the current terminal mode as the \"shell\" mode, the mode when the "
"running program is not using curses.  (Its counterpart is the \"program\" "
"mode, when the program is using curses capabilities.) Subsequent calls to :"
"func:`reset_shell_mode` will restore this mode."
msgstr ""

# c9ac7e1e9f9d4549a1408c32d7be41c9
#: ../Doc/library/curses.rst:147
msgid "Insert an *ms* millisecond pause in output."
msgstr ""

#: ../Doc/library/curses.rst:152
msgid ""
"Update the physical screen.  The curses library keeps two data structures, "
"one representing the current physical screen contents and a virtual screen "
"representing the desired next state.  The :func:`doupdate` ground updates "
"the physical screen to match the virtual screen."
msgstr ""

#: ../Doc/library/curses.rst:157
msgid ""
"The virtual screen may be updated by a :meth:`noutrefresh` call after write "
"operations such as :meth:`addstr` have been performed on a window.  The "
"normal :meth:`refresh` call is simply :meth:`noutrefresh` followed by :func:"
"`doupdate`; if you have to update multiple windows, you can speed "
"performance and perhaps reduce screen flicker by issuing :meth:`noutrefresh` "
"calls on all windows, followed by a single :func:`doupdate`."
msgstr ""

#: ../Doc/library/curses.rst:167
msgid ""
"Enter echo mode.  In echo mode, each character input is echoed to the screen "
"as it is entered."
msgstr ""

#: ../Doc/library/curses.rst:173
msgid "De-initialize the library, and return terminal to normal status."
msgstr ""

# b37327ba1af9408da707f867b23cb139
#: ../Doc/library/curses.rst:178
msgid ""
"Return the user's current erase character.  Under Unix operating systems "
"this is a property of the controlling tty of the curses program, and is not "
"set by the curses library itself."
msgstr ""

# 846ce36126b842c3b1afece249f1bf1f
#: ../Doc/library/curses.rst:185
msgid ""
"The :func:`.filter` routine, if used, must be called before :func:`initscr` "
"is called.  The effect is that, during those calls, :envvar:`LINES` is set "
"to 1; the capabilities clear, cup, cud, cud1, cuu1, cuu, vpa are disabled; "
"and the home string is set to the value of cr. The effect is that the cursor "
"is confined to the current line, and so are screen updates.  This may be "
"used for enabling character-at-a-time  line editing without touching the "
"rest of the screen."
msgstr ""

#: ../Doc/library/curses.rst:195
msgid ""
"Flash the screen.  That is, change it to reverse-video and then change it "
"back in a short interval.  Some people prefer such as 'visible bell' to the "
"audible attention signal produced by :func:`beep`."
msgstr ""

#: ../Doc/library/curses.rst:202
msgid ""
"Flush all input buffers.  This throws away any  typeahead  that  has been "
"typed by the user and has not yet been processed by the program."
msgstr ""

# 5a85a22b761c47caa985e8bc8020ecc0
#: ../Doc/library/curses.rst:208
msgid ""
"After :meth:`getch` returns :const:`KEY_MOUSE` to signal a mouse event, this "
"method should be call to retrieve the queued mouse event, represented as a 5-"
"tuple ``(id, x, y, z, bstate)``. *id* is an ID value used to distinguish "
"multiple devices, and *x*, *y*, *z* are the event's coordinates.  (*z* is "
"currently unused.)  *bstate* is an integer value whose bits will be set to "
"indicate the type of event, and will be the bitwise OR of one or more of the "
"following constants, where *n* is the button number from 1 to 4: :const:"
"`BUTTONn_PRESSED`, :const:`BUTTONn_RELEASED`, :const:`BUTTONn_CLICKED`, :"
"const:`BUTTONn_DOUBLE_CLICKED`, :const:`BUTTONn_TRIPLE_CLICKED`, :const:"
"`BUTTON_SHIFT`, :const:`BUTTON_CTRL`, :const:`BUTTON_ALT`."
msgstr ""

# d1d07a2a0e75412db929475e27e60bbc
#: ../Doc/library/curses.rst:222
msgid ""
"Return the current coordinates of the virtual screen cursor in y and x.  If "
"leaveok is currently true, then -1,-1 is returned."
msgstr ""

# 50d9725d436047548528957756ada1bd
#: ../Doc/library/curses.rst:228
msgid ""
"Read window related data stored in the file by an earlier :func:`putwin` "
"call. The routine then creates and initializes a new window using that data, "
"returning the new window object."
msgstr ""

# 1d87a8bba5894e99b45d7d9428c82a6d
#: ../Doc/library/curses.rst:235
msgid ""
"Return ``True`` if the terminal can display colors; otherwise, return "
"``False``."
msgstr ""

# 216f19870f9847629406cf84e461ccc2
#: ../Doc/library/curses.rst:240
msgid ""
"Return ``True`` if the terminal has insert- and delete-character "
"capabilities. This function is included for historical reasons only, as all "
"modern software terminal emulators have such capabilities."
msgstr ""

# 19a7a309ac4b495da8d76e71dd7136f9
#: ../Doc/library/curses.rst:247
msgid ""
"Return ``True`` if the terminal has insert- and delete-line capabilities, or "
"can simulate  them  using scrolling regions. This function is included for "
"historical reasons only, as all modern software terminal emulators have such "
"capabilities."
msgstr ""

# 5038f16062804a76ace3caa65bb26669
#: ../Doc/library/curses.rst:255
msgid ""
"Take a key value *ch*, and return ``True`` if the current terminal type "
"recognizes a key with that value."
msgstr ""

# 848682727a6d4ca68b6091a69d45c9b4
#: ../Doc/library/curses.rst:261
msgid ""
"Used for half-delay mode, which is similar to cbreak mode in that characters "
"typed by the user are immediately available to the program. However, after "
"blocking for *tenths* tenths of seconds, an exception is raised if nothing "
"has been typed.  The value of *tenths* must be a number between ``1`` and "
"``255``.  Use :func:`nocbreak` to leave half-delay mode."
msgstr ""

# 2152f5c053bb4d33acc263e9cd6fa4cd
#: ../Doc/library/curses.rst:270
msgid ""
"Change the definition of a color, taking the number of the color to be "
"changed followed by three RGB values (for the amounts of red, green, and "
"blue components).  The value of *color_number* must be between ``0`` and :"
"const:`COLORS`.  Each of *r*, *g*, *b*, must be a value between ``0`` and "
"``1000``.  When :func:`init_color` is used, all occurrences of that color on "
"the screen immediately change to the new definition.  This function is a no-"
"op on most terminals; it is active only if :func:`can_change_color` returns "
"``1``."
msgstr ""

# c402bb06346445cbb4caceb7dd87f0b4
#: ../Doc/library/curses.rst:281
msgid ""
"Change the definition of a color-pair.  It takes three arguments: the number "
"of the color-pair to be changed, the foreground color number, and the "
"background color number.  The value of *pair_number* must be between ``1`` "
"and ``COLOR_PAIRS - 1`` (the ``0`` color pair is wired to white on black and "
"cannot be changed).  The value of *fg* and *bg* arguments must be between "
"``0`` and :const:`COLORS`.  If the color-pair was previously initialized, "
"the screen is refreshed and all occurrences of that color-pair are changed "
"to the new definition."
msgstr ""

# f1982ec1588c4f2192fb5eeea8dd36b4
#: ../Doc/library/curses.rst:293
msgid ""
"Initialize the library. Return a :class:`WindowObject` which represents the "
"whole screen."
msgstr ""

#: ../Doc/library/curses.rst:298
msgid ""
"If there is an error opening the terminal, the underlying curses library may "
"cause the interpreter to exit."
msgstr ""

# ccd55da29d0b4ba88a0de9b77afa54e6
#: ../Doc/library/curses.rst:304
msgid ""
"Return ``True`` if :func:`resize_term` would modify the window structure, "
"``False`` otherwise."
msgstr ""

# 5142671b86c24e58bc4985521ea11abc
#: ../Doc/library/curses.rst:310
msgid ""
"Return ``True`` if :func:`endwin` has been called (that is, the  curses "
"library has been deinitialized)."
msgstr ""

#: ../Doc/library/curses.rst:316
msgid ""
"Return the name of the key numbered *k*.  The name of a key generating "
"printable ASCII character is the key's character.  The name of a control-key "
"combination is a two-character string consisting of a caret followed by the "
"corresponding printable ASCII character.  The name of an alt-key combination "
"(128-255) is a string consisting of the prefix 'M-' followed by the name of "
"the corresponding ASCII character."
msgstr ""

# b3d7625e95274406bb58db5627ecd5f5
#: ../Doc/library/curses.rst:326
msgid ""
"Return the user's current line kill character. Under Unix operating systems "
"this is a property of the controlling tty of the curses program, and is not "
"set by the curses library itself."
msgstr ""

# 6612508df32f40258bf0b2c495e37ce9
#: ../Doc/library/curses.rst:333
msgid ""
"Return a string containing the terminfo long name field describing the "
"current terminal.  The maximum length of a verbose description is 128 "
"characters.  It is defined only after the call to :func:`initscr`."
msgstr ""

#: ../Doc/library/curses.rst:340
msgid ""
"If *yes* is 1, allow 8-bit characters to be input. If *yes* is 0,  allow "
"only 7-bit chars."
msgstr ""

# 6f1e09b2bc83448790c0023f84572d22
#: ../Doc/library/curses.rst:346
msgid ""
"Set the maximum time in milliseconds that can elapse between press and "
"release events in order for them to be recognized as a click, and return the "
"previous interval value.  The default value is 200 msec, or one fifth of a "
"second."
msgstr ""

# 67dc3128d0624091a1a7df8fc1adf108
#: ../Doc/library/curses.rst:353
msgid ""
"Set the mouse events to be reported, and return a tuple ``(availmask, "
"oldmask)``.   *availmask* indicates which of the specified mouse events can "
"be reported; on complete failure it returns 0.  *oldmask* is the previous "
"value of the given window's mouse event mask.  If this function is never "
"called, no mouse events are ever reported."
msgstr ""

#: ../Doc/library/curses.rst:362
msgid "Sleep for *ms* milliseconds."
msgstr ""

# dce83d490d2a4897933e443037d3a180
#: ../Doc/library/curses.rst:367
msgid ""
"Create and return a pointer to a new pad data structure with the given "
"number of lines and columns.  A pad is returned as a window object."
msgstr ""

# fddbfb3f70914889b67480d460d997da
#: ../Doc/library/curses.rst:370
msgid ""
"A pad is like a window, except that it is not restricted by the screen size, "
"and is not necessarily associated with a particular part of the screen.  "
"Pads can be used when a large window is needed, and only a part of the "
"window will be on the screen at one time.  Automatic refreshes of pads (such "
"as from scrolling or echoing of input) do not occur.  The :meth:`refresh` "
"and :meth:`noutrefresh` methods of a pad require 6 arguments to specify the "
"part of the pad to be displayed and the location on the screen to be used "
"for the display. The arguments are *pminrow*, *pmincol*, *sminrow*, "
"*smincol*, *smaxrow*, *smaxcol*; the *p* arguments refer to the upper left "
"corner of the pad region to be displayed and the *s* arguments define a "
"clipping box on the screen within which the pad region is to be displayed."
msgstr ""

#: ../Doc/library/curses.rst:386
msgid ""
"Return a new window, whose left-upper corner is at  ``(begin_y, begin_x)``, "
"and whose height/width is  *nlines*/*ncols*."
msgstr ""

#: ../Doc/library/curses.rst:389
msgid ""
"By default, the window will extend from the  specified position to the lower "
"right corner of the screen."
msgstr ""

#: ../Doc/library/curses.rst:395
msgid ""
"Enter newline mode.  This mode translates the return key into newline on "
"input, and translates newline into return and line-feed on output. Newline "
"mode is initially on."
msgstr ""

#: ../Doc/library/curses.rst:402
msgid ""
"Leave cbreak mode.  Return to normal \"cooked\" mode with line buffering."
msgstr ""

#: ../Doc/library/curses.rst:407
msgid "Leave echo mode.  Echoing of input characters is turned off."
msgstr ""

#: ../Doc/library/curses.rst:412
msgid ""
"Leave newline mode.  Disable translation of return into newline on input, "
"and disable low-level translation of newline into newline/return on output "
"(but this does not change the behavior of ``addch('\\n')``, which always "
"does the equivalent of return and line feed on the virtual screen).  With "
"translation off, curses can sometimes speed up vertical motion a little; "
"also, it will be able to detect the return key on input."
msgstr ""

# aa805880354a407487e005a4f7e07d73
#: ../Doc/library/curses.rst:422
msgid ""
"When the :func:`noqiflush` routine is used, normal flush of input and output "
"queues associated with the INTR, QUIT and SUSP characters will not be done.  "
"You may want to call :func:`noqiflush` in a signal handler if you want "
"output to continue as though the interrupt had not occurred, after the "
"handler exits."
msgstr ""

#: ../Doc/library/curses.rst:430
msgid "Leave raw mode. Return to normal \"cooked\" mode with line buffering."
msgstr ""

# 348431036b1c4601998d3e484030778c
#: ../Doc/library/curses.rst:435
msgid ""
"Return a tuple ``(fg, bg)`` containing the colors for the requested color "
"pair. The value of *pair_number* must be between ``1`` and ``COLOR_PAIRS - "
"1``."
msgstr ""

# 5ad838d6255b4972b01901e63a565cc6
#: ../Doc/library/curses.rst:441
msgid ""
"Return the number of the color-pair set by the attribute value *attr*. :func:"
"`color_pair` is the counterpart to this function."
msgstr ""

# a915c864042446ec90baf82b920e68ec
#: ../Doc/library/curses.rst:447
msgid ""
"Equivalent to ``tputs(str, 1, putchar)``; emit the value of a specified "
"terminfo capability for the current terminal.  Note that the output of :func:"
"`putp` always goes to standard output."
msgstr ""

# 5215deabb9d742e08f0d4c40b46f54f2
#: ../Doc/library/curses.rst:454
msgid ""
"If *flag* is ``False``, the effect is the same as calling :func:`noqiflush`. "
"If *flag* is ``True``, or no argument is provided, the queues will be "
"flushed when these control characters are read."
msgstr ""

#: ../Doc/library/curses.rst:461
msgid ""
"Enter raw mode.  In raw mode, normal line buffering and  processing of "
"interrupt, quit, suspend, and flow control keys are turned off; characters "
"are presented to curses input functions one by one."
msgstr ""

# b5ee412f094e4013b7076c4bc76446ae
#: ../Doc/library/curses.rst:468
msgid ""
"Restore the  terminal  to \"program\" mode, as previously saved  by :func:"
"`def_prog_mode`."
msgstr ""

# 7e815805df9d4fb4a3c7f5018b7154ac
#: ../Doc/library/curses.rst:474
msgid ""
"Restore the  terminal  to \"shell\" mode, as previously saved  by :func:"
"`def_shell_mode`."
msgstr ""

# 5dced7ef91e14032966908c3a50e27ce
#: ../Doc/library/curses.rst:480
msgid ""
"Restore the state of the terminal modes to what it was at the last call to :"
"func:`savetty`."
msgstr ""

# 7aef76a05eb14e91b7d1024a3f353813
#: ../Doc/library/curses.rst:486
msgid ""
"Backend function used by :func:`resizeterm`, performing most of the work; "
"when resizing the windows, :func:`resize_term` blank-fills the areas that "
"are extended.  The calling application should fill in these areas with "
"appropriate data.  The :func:`resize_term` function attempts to resize all "
"windows.  However, due to the calling convention of pads, it is not possible "
"to resize these without additional interaction with the application."
msgstr ""

# 9b660d199b354c2980b15d0714783477
#: ../Doc/library/curses.rst:496
msgid ""
"Resize the standard and current windows to the specified dimensions, and "
"adjusts other bookkeeping data used by the curses library that record the "
"window dimensions (in particular the SIGWINCH handler)."
msgstr ""

# ea08fe8ad6c5400b815f15302553edde
#: ../Doc/library/curses.rst:503
msgid ""
"Save the current state of the terminal modes in a buffer, usable by :func:"
"`resetty`."
msgstr ""

# c28ccc7436db40cea9e051d8fa582cd6
#: ../Doc/library/curses.rst:509
msgid ""
"Set the virtual screen cursor to *y*, *x*. If *y* and *x* are both -1, then "
"leaveok is set."
msgstr ""

# 5590ee4f21334ba4950fb8a358dc9d94
#: ../Doc/library/curses.rst:515
msgid ""
"Initialize the terminal.  *termstr* is a string giving the terminal name; if "
"omitted, the value of the :envvar:`TERM` environment variable will be used.  "
"*fd* is the file descriptor to which any initialization sequences will be "
"sent; if not supplied, the file descriptor for ``sys.stdout`` will be used."
msgstr ""

#: ../Doc/library/curses.rst:523
msgid ""
"Must be called if the programmer wants to use colors, and before any other "
"color manipulation routine is called.  It is good practice to call this "
"routine right after :func:`initscr`."
msgstr ""

#: ../Doc/library/curses.rst:527
msgid ""
":func:`start_color` initializes eight basic colors (black, red,  green, "
"yellow, blue, magenta, cyan, and white), and two global variables in the :"
"mod:`curses` module, :const:`COLORS` and :const:`COLOR_PAIRS`, containing "
"the maximum number of colors and color-pairs the terminal can support.  It "
"also restores the colors on the terminal to the values they had when the "
"terminal was just turned on."
msgstr ""

# 71f5eb4047a042069c76b2b490699967
#: ../Doc/library/curses.rst:536
msgid ""
"Return a logical OR of all video attributes supported by the terminal.  This "
"information is useful when a curses program needs complete control over the "
"appearance of the screen."
msgstr ""

# db0189016d7a4851a936968e592fecd6
#: ../Doc/library/curses.rst:543
msgid ""
"Return the value of the environment variable :envvar:`TERM`, truncated to 14 "
"characters."
msgstr ""

# 6eb0bf0912674f0aa33a0191a9a4f3d8
#: ../Doc/library/curses.rst:548
msgid ""
"Return the value of the Boolean capability corresponding to the terminfo "
"capability name *capname*.  The value ``-1`` is returned if *capname* is not "
"a Boolean capability, or ``0`` if it is canceled or absent from the terminal "
"description."
msgstr ""

# 12ffe99b1cd34be5846fd9e4e53970c5
#: ../Doc/library/curses.rst:556
msgid ""
"Return the value of the numeric capability corresponding to the terminfo "
"capability name *capname*.  The value ``-2`` is returned if *capname* is not "
"a numeric capability, or ``-1`` if it is canceled or absent from the "
"terminal description."
msgstr ""

# c38dc221ccf044c1b8a2eb2cc003e62a
#: ../Doc/library/curses.rst:564
msgid ""
"Return the value of the string capability corresponding to the terminfo "
"capability name *capname*.  ``None`` is returned if *capname* is not a "
"string capability, or is canceled or absent from the terminal description."
msgstr ""

# 2fe18888dd4c42b9b452f36ed0dca1e2
#: ../Doc/library/curses.rst:571
msgid ""
"Instantiate the string *str* with the supplied parameters, where *str* "
"should be a parameterized string obtained from the terminfo database.  E.g. "
"``tparm(tigetstr(\"cup\"), 5, 3)`` could result in ``'\\033[6;4H'``, the "
"exact result depending on terminal type."
msgstr ""

# a55e0a9f49f041c1b4e2eb633c4afe2e
#: ../Doc/library/curses.rst:579
msgid ""
"Specify that the file descriptor *fd* be used for typeahead checking.  If "
"*fd* is ``-1``, then no typeahead checking is done."
msgstr ""

#: ../Doc/library/curses.rst:582
msgid ""
"The curses library does \"line-breakout optimization\" by looking for "
"typeahead periodically while updating the screen.  If input is found, and it "
"is coming from a tty, the current update is postponed until refresh or "
"doupdate is called again, allowing faster response to commands typed in "
"advance. This function allows specifying a different file descriptor for "
"typeahead checking."
msgstr ""

# 9cd5739481184e498adcb9134eba2893
#: ../Doc/library/curses.rst:591
msgid ""
"Return a string which is a printable representation of the character *ch*. "
"Control characters are displayed as a caret followed by the character, for "
"example as ``^C``. Printing characters are left as they are."
msgstr ""

#: ../Doc/library/curses.rst:598
msgid "Push *ch* so the next :meth:`getch` will return it."
msgstr ""

#: ../Doc/library/curses.rst:602
msgid "Only one *ch* can be pushed before :meth:`getch` is called."
msgstr ""

#: ../Doc/library/curses.rst:607
msgid ""
"Push a :const:`KEY_MOUSE` event onto the input queue, associating the given "
"state data with it."
msgstr ""

# cdcf9d33327d4812bce2aa6a9f4999a3
#: ../Doc/library/curses.rst:613
msgid ""
"If used, this function should be called before :func:`initscr` or newterm "
"are called.  When *flag* is ``False``, the values of lines and columns "
"specified in the terminfo database will be used, even if environment "
"variables :envvar:`LINES` and :envvar:`COLUMNS` (used by default) are set, "
"or if curses is running in a window (in which case default behavior would be "
"to use the window size if :envvar:`LINES` and :envvar:`COLUMNS` are not set)."
msgstr ""

#: ../Doc/library/curses.rst:623
msgid ""
"Allow use of default values for colors on terminals supporting this feature. "
"Use this to support transparency in your application.  The default color is "
"assigned to the color number -1. After calling this function,  ``init_pair"
"(x, curses.COLOR_RED, -1)`` initializes, for instance, color pair *x* to a "
"red foreground color on the default background."
msgstr ""

# bf5b6b5381804496a63b46b5327f16fc
#: ../Doc/library/curses.rst:632
msgid ""
"Initialize curses and call another callable object, *func*, which should be "
"the rest of your curses-using application.  If the application raises an "
"exception, this function will restore the terminal to a sane state before re-"
"raising the exception and generating a traceback.  The callable object "
"*func* is then passed the main window 'stdscr' as its first argument, "
"followed by any other arguments passed to :func:`wrapper`.  Before calling "
"*func*, :func:`wrapper` turns on cbreak mode, turns off echo, enables the "
"terminal keypad, and initializes colors if the terminal has color support.  "
"On exit (whether normally or by exception) it restores cooked mode, turns on "
"echo, and disables the terminal keypad."
msgstr ""

#: ../Doc/library/curses.rst:646 ../Doc/library/framework.rst:202
msgid "Window Objects"
msgstr ""

#: ../Doc/library/curses.rst:648
msgid ""
"Window objects, as returned by :func:`initscr` and :func:`newwin` above, "
"have the following methods:"
msgstr ""

# 6848ea0a7eb8493d9b81f17a59028ffd
#: ../Doc/library/curses.rst:657
msgid ""
"A *character* means a C character (an ASCII code), rather than a Python "
"character (a string of length 1). (This note is true whenever the "
"documentation mentions a character.) The built-in :func:`ord` is handy for "
"conveying strings to codes."
msgstr ""

#: ../Doc/library/curses.rst:662
msgid ""
"Paint character *ch* at ``(y, x)`` with attributes *attr*, overwriting any "
"character previously painter at that location.  By default, the character "
"position and attributes are the current settings for the window object."
msgstr ""

#: ../Doc/library/curses.rst:670
msgid ""
"Paint at most *n* characters of the  string *str* at ``(y, x)`` with "
"attributes *attr*, overwriting anything previously on the display."
msgstr ""

#: ../Doc/library/curses.rst:677
msgid ""
"Paint the string *str* at ``(y, x)`` with attributes *attr*, overwriting "
"anything previously on the display."
msgstr ""

#: ../Doc/library/curses.rst:683
msgid ""
"Remove attribute *attr* from the \"background\" set applied to all writes to "
"the current window."
msgstr ""

#: ../Doc/library/curses.rst:689
msgid ""
"Add attribute *attr* from the \"background\" set applied to all writes to "
"the current window."
msgstr ""

#: ../Doc/library/curses.rst:695
msgid ""
"Set the \"background\" set of attributes to *attr*.  This set is initially 0 "
"(no attributes)."
msgstr ""

# 4e706c22d67c498786ccdbe509769af8
#: ../Doc/library/curses.rst:701
msgid ""
"Set the background property of the window to the character *ch*, with "
"attributes *attr*.  The change is then applied to every character position "
"in that window:"
msgstr ""

#: ../Doc/library/curses.rst:705
msgid ""
"The attribute of every character in the window  is changed to the new "
"background attribute."
msgstr ""

#: ../Doc/library/curses.rst:708
msgid ""
"Wherever  the  former background character appears, it is changed to the new "
"background character."
msgstr ""

# 491b74f7602f4f65b0e350c89c210cf4
#: ../Doc/library/curses.rst:714
msgid ""
"Set the window's background.  A window's background consists of a character "
"and any combination of attributes.  The attribute part of the background is "
"combined (OR'ed) with all non-blank characters that are written into the "
"window.  Both the character and attribute parts of the background are "
"combined with the blank characters.  The background becomes a property of "
"the character and moves with the character through any scrolling and insert/"
"delete line/character operations."
msgstr ""

#: ../Doc/library/curses.rst:724
msgid ""
"Draw a border around the edges of the window. Each parameter specifies  the "
"character to use for a specific part of the border; see the table below for "
"more details.  The characters can be specified as integers or as one-"
"character strings."
msgstr ""

#: ../Doc/library/curses.rst:731
msgid ""
"A ``0`` value for any parameter will cause the default character to be used "
"for that parameter.  Keyword parameters can *not* be used.  The defaults are "
"listed in this table:"
msgstr ""

#: ../Doc/library/curses.rst:736
msgid "Parameter"
msgstr ""

#: ../Doc/library/curses.rst:736
msgid "Default value"
msgstr ""

#: ../Doc/library/curses.rst:738
msgid "*ls*"
msgstr ""

#: ../Doc/library/curses.rst:738
msgid "Left side"
msgstr ""

#: ../Doc/library/curses.rst:738 ../Doc/library/curses.rst:740
msgid ":const:`ACS_VLINE`"
msgstr ""

#: ../Doc/library/curses.rst:740
msgid "*rs*"
msgstr ""

#: ../Doc/library/curses.rst:740
msgid "Right side"
msgstr ""

#: ../Doc/library/curses.rst:742
msgid "*ts*"
msgstr ""

#: ../Doc/library/curses.rst:742
msgid "Top"
msgstr ""

#: ../Doc/library/curses.rst:742 ../Doc/library/curses.rst:744
msgid ":const:`ACS_HLINE`"
msgstr ""

#: ../Doc/library/curses.rst:744
msgid "*bs*"
msgstr ""

#: ../Doc/library/curses.rst:744
msgid "Bottom"
msgstr ""

#: ../Doc/library/curses.rst:746
msgid "*tl*"
msgstr ""

#: ../Doc/library/curses.rst:746
msgid "Upper-left corner"
msgstr ""

#: ../Doc/library/curses.rst:746
msgid ":const:`ACS_ULCORNER`"
msgstr ""

#: ../Doc/library/curses.rst:748
msgid "*tr*"
msgstr ""

#: ../Doc/library/curses.rst:748
msgid "Upper-right corner"
msgstr ""

#: ../Doc/library/curses.rst:748
msgid ":const:`ACS_URCORNER`"
msgstr ""

#: ../Doc/library/curses.rst:750
msgid "*bl*"
msgstr ""

#: ../Doc/library/curses.rst:750
msgid "Bottom-left corner"
msgstr ""

#: ../Doc/library/curses.rst:750
msgid ":const:`ACS_LLCORNER`"
msgstr ""

#: ../Doc/library/curses.rst:752
msgid "*br*"
msgstr ""

#: ../Doc/library/curses.rst:752
msgid "Bottom-right corner"
msgstr ""

#: ../Doc/library/curses.rst:752
msgid ":const:`ACS_LRCORNER`"
msgstr ""

# afc3f897e43b43aaaff944d14ce55a1e
#: ../Doc/library/curses.rst:758
msgid ""
"Similar to :meth:`border`, but both *ls* and *rs* are *vertch* and both *ts* "
"and *bs* are *horch*.  The default corner characters are always used by this "
"function."
msgstr ""

# 406c35d89a9a46ca83010f291e92b94b
#: ../Doc/library/curses.rst:767
msgid ""
"Set the attributes of *num* characters at the current cursor position, or at "
"position ``(y, x)`` if supplied. If no value of *num* is given or *num* = "
"-1, the attribute will  be set on all the characters to the end of the "
"line.  This function does not move the cursor. The changed line will be "
"touched using the :meth:`touchline` method so that the contents will be "
"redisplayed by the next window refresh."
msgstr ""

# 7a5a4190a0e04a908d7ea4b3e4f752a7
#: ../Doc/library/curses.rst:777
msgid ""
"Like :meth:`erase`, but also cause the whole window to be repainted upon "
"next call to :meth:`refresh`."
msgstr ""

#: ../Doc/library/curses.rst:783
msgid ""
"If *yes* is 1, the next call to :meth:`refresh` will clear the window "
"completely."
msgstr ""

#: ../Doc/library/curses.rst:789
msgid ""
"Erase from cursor to the end of the window: all lines below the cursor are "
"deleted, and then the equivalent of :meth:`clrtoeol` is performed."
msgstr ""

#: ../Doc/library/curses.rst:795
msgid "Erase from cursor to the end of the line."
msgstr ""

# 82ccdd7e5b204d9a98e928f566a1f04c
#: ../Doc/library/curses.rst:800
msgid ""
"Update the current cursor position of all the ancestors of the window to "
"reflect the current cursor position of the window."
msgstr ""

#: ../Doc/library/curses.rst:806
msgid "Delete any character at ``(y, x)``."
msgstr ""

# a4e9c246f6bc450e8f7fa4f7d8f86027
#: ../Doc/library/curses.rst:811
msgid ""
"Delete the line under the cursor. All following lines are moved up by one "
"line."
msgstr ""

# 9404c85dddb94600a571195f1d279a0a
#: ../Doc/library/curses.rst:817
msgid ""
"An abbreviation for \"derive window\", :meth:`derwin` is the same as "
"calling :meth:`subwin`, except that *begin_y* and *begin_x* are relative to "
"the origin of the window, rather than relative to the entire screen.  Return "
"a window object for the derived window."
msgstr ""

#: ../Doc/library/curses.rst:825
msgid ""
"Add character *ch* with attribute *attr*, and immediately  call :meth:"
"`refresh` on the window."
msgstr ""

# 559de103e67c4be9844d14fc39574b6d
#: ../Doc/library/curses.rst:831
msgid ""
"Test whether the given pair of screen-relative character-cell coordinates "
"are enclosed by the given window, returning ``True`` or ``False``.  It is "
"useful for determining what subset of the screen windows enclose the "
"location of a mouse event."
msgstr ""

#: ../Doc/library/curses.rst:839
msgid "Clear the window."
msgstr ""

#: ../Doc/library/curses.rst:844
msgid "Return a tuple ``(y, x)`` of co-ordinates of upper-left corner."
msgstr ""

# ad1a26c2ff614892a1a30ab3654bc01f
#: ../Doc/library/curses.rst:849
msgid "Return the given window's current background character/attribute pair."
msgstr ""

#: ../Doc/library/curses.rst:854
msgid ""
"Get a character. Note that the integer returned does *not* have to be in "
"ASCII range: function keys, keypad keys and so on return numbers higher than "
"256. In no-delay mode, -1 is returned if there is no input, else :func:"
"`getch` waits until a key is pressed."
msgstr ""

#: ../Doc/library/curses.rst:862
msgid ""
"Get a character, returning a string instead of an integer, as :meth:`getch` "
"does. Function keys, keypad keys and so on return a multibyte string "
"containing the key name.  In no-delay mode, an exception is raised if there "
"is no input."
msgstr ""

#: ../Doc/library/curses.rst:869
msgid "Return a tuple ``(y, x)`` of the height and width of the window."
msgstr ""

# 5fec4f4ffbf6412f83269cdb8cf9141f
#: ../Doc/library/curses.rst:874
msgid ""
"Return the beginning coordinates of this window relative to its parent "
"window into two integer variables y and x.  Return ``-1, -1`` if this window "
"has no parent."
msgstr ""

#: ../Doc/library/curses.rst:881
msgid "Read a string from the user, with primitive line editing capacity."
msgstr ""

#: ../Doc/library/curses.rst:886
msgid ""
"Return a tuple ``(y, x)`` of current cursor position  relative to the "
"window's upper-left corner."
msgstr ""

#: ../Doc/library/curses.rst:893
msgid ""
"Display a horizontal line starting at ``(y, x)`` with length *n* consisting "
"of the character *ch*."
msgstr ""

# 43a263e8dfce4b14bdba8b7d242b299c
#: ../Doc/library/curses.rst:899
msgid ""
"If *flag* is ``False``, curses no longer considers using the hardware insert/"
"delete character feature of the terminal; if *flag* is ``True``, use of "
"character insertion and deletion is enabled.  When curses is first "
"initialized, use of character insert/delete is enabled by default."
msgstr ""

#: ../Doc/library/curses.rst:907
msgid ""
"If called with *yes* equal to 1, :mod:`curses` will try and use hardware "
"line editing facilities. Otherwise, line insertion/deletion are disabled."
msgstr ""

# 0aa5ff5063c540f7b7db1d8ab20b7419
#: ../Doc/library/curses.rst:913
msgid ""
"If *flag* is ``True``, any change in the window image automatically causes "
"the window to be refreshed; you no longer have to call :meth:`refresh` "
"yourself. However, it may degrade performance considerably, due to repeated "
"calls to wrefresh.  This option is disabled by default."
msgstr ""

#: ../Doc/library/curses.rst:921
msgid ""
"Return the character at the given position in the window. The bottom 8 bits "
"are the character proper, and upper bits are the attributes."
msgstr ""

#: ../Doc/library/curses.rst:928
msgid ""
"Paint character *ch* at ``(y, x)`` with attributes *attr*, moving the line "
"from position *x* right by one character."
msgstr ""

# 9fef1110cde64e37917e1a705f3c1007
#: ../Doc/library/curses.rst:934
msgid ""
"Insert *nlines* lines into the specified window above the current line.  The "
"*nlines* bottom lines are lost.  For negative *nlines*, delete *nlines* "
"lines starting with the one under the cursor, and move the remaining lines "
"up.  The bottom *nlines* lines are cleared.  The current cursor position "
"remains the same."
msgstr ""

# 5ce820f8a999406cbbdbc23cb27d32b1
#: ../Doc/library/curses.rst:943
msgid ""
"Insert a blank line under the cursor. All following lines are moved down by "
"one line."
msgstr ""

#: ../Doc/library/curses.rst:950
msgid ""
"Insert a character string (as many characters as will fit on the line) "
"before the character under the cursor, up to *n* characters.   If *n* is "
"zero or negative, the entire string is inserted. All characters to the right "
"of the cursor are shifted right, with the rightmost characters on the line "
"being lost. The cursor position does not change (after moving to *y*, *x*, "
"if specified)."
msgstr ""

#: ../Doc/library/curses.rst:960
msgid ""
"Insert a character string (as many characters as will fit on the line) "
"before the character under the cursor.  All characters to the right of the "
"cursor are shifted right, with the rightmost characters on the line being "
"lost.  The cursor position does not change (after moving to *y*, *x*, if "
"specified)."
msgstr ""

# 98726d7c4564467797cefba80121044c
#: ../Doc/library/curses.rst:969
msgid ""
"Return a string of characters, extracted from the window starting at the "
"current cursor position, or at *y*, *x* if specified. Attributes are "
"stripped from the characters.  If *n* is specified, :meth:`instr` returns a "
"string at most *n* characters long (exclusive of the trailing NUL)."
msgstr ""

# 08847fde964c4be397502486e90c3066
#: ../Doc/library/curses.rst:977
msgid ""
"Return ``True`` if the specified line was modified since the last call to :"
"meth:`refresh`; otherwise return ``False``.  Raise a :exc:`curses.error` "
"exception if *line* is not valid for the given window."
msgstr ""

# a3af045542aa4f3dbf2c0b391dbc477d
#: ../Doc/library/curses.rst:984
msgid ""
"Return ``True`` if the specified window was modified since the last call to :"
"meth:`refresh`; otherwise return ``False``."
msgstr ""

#: ../Doc/library/curses.rst:990
msgid ""
"If *yes* is 1, escape sequences generated by some keys (keypad,  function "
"keys) will be interpreted by :mod:`curses`. If *yes* is 0, escape sequences "
"will be left as is in the input stream."
msgstr ""

#: ../Doc/library/curses.rst:997
msgid ""
"If *yes* is 1, cursor is left where it is on update, instead of being at "
"\"cursor position.\"  This reduces cursor movement where possible. If "
"possible the cursor will be made invisible."
msgstr ""

#: ../Doc/library/curses.rst:1001
msgid ""
"If *yes* is 0, cursor will always be at \"cursor position\" after an update."
msgstr ""

#: ../Doc/library/curses.rst:1006
msgid "Move cursor to ``(new_y, new_x)``."
msgstr ""

# e74899cead8c4438b22da67df2a049e8
#: ../Doc/library/curses.rst:1011
msgid ""
"Move the window inside its parent window.  The screen-relative parameters of "
"the window are not changed.  This routine is used to display different parts "
"of the parent window at the same physical position on the screen."
msgstr ""

#: ../Doc/library/curses.rst:1018
msgid "Move the window so its upper-left corner is at ``(new_y, new_x)``."
msgstr ""

#: ../Doc/library/curses.rst:1023
msgid "If *yes* is ``1``, :meth:`getch` will be non-blocking."
msgstr ""

#: ../Doc/library/curses.rst:1028
msgid "If *yes* is ``1``, escape sequences will not be timed out."
msgstr ""

#: ../Doc/library/curses.rst:1030
msgid ""
"If *yes* is ``0``, after a few milliseconds, an escape sequence will not be "
"interpreted, and will be left in the input stream as is."
msgstr ""

#: ../Doc/library/curses.rst:1036
msgid ""
"Mark for refresh but wait.  This function updates the data structure "
"representing the desired state of the window, but does not force an update "
"of the physical screen.  To accomplish that, call  :func:`doupdate`."
msgstr ""

#: ../Doc/library/curses.rst:1043
msgid ""
"Overlay the window on top of *destwin*. The windows need not be the same "
"size, only the overlapping region is copied. This copy is non-destructive, "
"which means that the current background character does not overwrite the old "
"contents of *destwin*."
msgstr ""

#: ../Doc/library/curses.rst:1048
msgid ""
"To get fine-grained control over the copied region, the second form of :meth:"
"`overlay` can be used. *sminrow* and *smincol* are the upper-left "
"coordinates of the source window, and the other variables mark a rectangle "
"in the destination window."
msgstr ""

#: ../Doc/library/curses.rst:1056
msgid ""
"Overwrite the window on top of *destwin*. The windows need not be the same "
"size, in which case only the overlapping region is copied. This copy is "
"destructive, which means that the current background character overwrites "
"the old contents of *destwin*."
msgstr ""

#: ../Doc/library/curses.rst:1061
msgid ""
"To get fine-grained control over the copied region, the second form of :meth:"
"`overwrite` can be used. *sminrow* and *smincol* are the upper-left "
"coordinates of the source window, the other variables mark a rectangle in "
"the destination window."
msgstr ""

# 85c2053d93ae4b0580787959dfca7156
#: ../Doc/library/curses.rst:1069
msgid ""
"Write all data associated with the window into the provided file object.  "
"This information can be later retrieved using the :func:`getwin` function."
msgstr ""

# d8d5cc02ba3d4dd2901742b64aa2d3f2
#: ../Doc/library/curses.rst:1075
msgid ""
"Indicate that the *num* screen lines, starting at line *beg*, are corrupted "
"and should be completely redrawn on the next :meth:`refresh` call."
msgstr ""

# f6db3b6d6de14315b4929396c49b3221
#: ../Doc/library/curses.rst:1081
msgid ""
"Touch the entire window, causing it to be completely redrawn on the next :"
"meth:`refresh` call."
msgstr ""

#: ../Doc/library/curses.rst:1087
msgid ""
"Update the display immediately (sync actual screen with previous drawing/"
"deleting methods)."
msgstr ""

#: ../Doc/library/curses.rst:1090
msgid ""
"The 6 optional arguments can only be specified when the window is a pad "
"created with :func:`newpad`.  The additional parameters are needed to "
"indicate what part of the pad and screen are involved. *pminrow* and "
"*pmincol* specify the upper left-hand corner of the rectangle to be "
"displayed in the pad.  *sminrow*, *smincol*, *smaxrow*, and *smaxcol* "
"specify the edges of the rectangle to be displayed on the screen.  The lower "
"right-hand corner of the rectangle to be displayed in the pad is calculated "
"from the screen coordinates, since the rectangles must be the same size.  "
"Both rectangles must be entirely contained within their respective "
"structures.  Negative values of *pminrow*, *pmincol*, *sminrow*, or "
"*smincol* are treated as if they were zero."
msgstr ""

# bb268d5a58564247ac162769eea94681
#: ../Doc/library/curses.rst:1104
msgid ""
"Reallocate storage for a curses window to adjust its dimensions to the "
"specified values.  If either dimension is larger than the current values, "
"the window's data is filled with blanks that have the current background "
"rendition (as set by :meth:`bkgdset`) merged into them."
msgstr ""

#: ../Doc/library/curses.rst:1112
msgid "Scroll the screen or scrolling region upward by *lines* lines."
msgstr ""

# 2a038300e3a343b9903569ff4cd9991b
#: ../Doc/library/curses.rst:1117
msgid ""
"Control what happens when the cursor of a window is moved off the edge of "
"the window or scrolling region, either as a result of a newline action on "
"the bottom line, or typing the last character of the last line.  If *flag* "
"is false, the cursor is left on the bottom line.  If *flag* is true, the "
"window is scrolled up one line.  Note that in order to get the physical "
"scrolling effect on the terminal, it is also necessary to call :meth:`idlok`."
msgstr ""

#: ../Doc/library/curses.rst:1127
msgid ""
"Set the scrolling region from line *top* to line *bottom*. All scrolling "
"actions will take place in this region."
msgstr ""

#: ../Doc/library/curses.rst:1133
msgid ""
"Turn off the standout attribute.  On some terminals this has the side effect "
"of turning off all attributes."
msgstr ""

#: ../Doc/library/curses.rst:1139
msgid "Turn on attribute *A_STANDOUT*."
msgstr ""

#: ../Doc/library/curses.rst:1145 ../Doc/library/curses.rst:1152
msgid ""
"Return a sub-window, whose upper-left corner is at ``(begin_y, begin_x)``, "
"and whose width/height is *ncols*/*nlines*."
msgstr ""

#: ../Doc/library/curses.rst:1155
msgid ""
"By default, the sub-window will extend from the specified position to the "
"lower right corner of the window."
msgstr ""

# d172a2d49fd440da95137cde3f89eeb7
#: ../Doc/library/curses.rst:1161
msgid ""
"Touch each location in the window that has been touched in any of its "
"ancestor windows.  This routine is called by :meth:`refresh`, so it should "
"almost never be necessary to call it manually."
msgstr ""

# 8eb953b101e54016acb0f295033e5ee9
#: ../Doc/library/curses.rst:1168
msgid ""
"If called with *flag* set to ``True``, then :meth:`syncup` is called "
"automatically whenever there is a change in the window."
msgstr ""

# fe2f5ee873914f89a2c327a26a67a563
#: ../Doc/library/curses.rst:1174
msgid ""
"Touch all locations in ancestors of the window that have been changed in  "
"the window."
msgstr ""

# 9b775508ad304afbbef9880f1cf28bad
#: ../Doc/library/curses.rst:1180
msgid ""
"Set blocking or non-blocking read behavior for the window.  If *delay* is "
"negative, blocking read is used (which will wait indefinitely for input).  "
"If *delay* is zero, then non-blocking read is used, and -1 will be returned "
"by :meth:`getch` if no input is waiting.  If *delay* is positive, then :meth:"
"`getch` will block for *delay* milliseconds, and return -1 if there is still "
"no input at the end of that time."
msgstr ""

#: ../Doc/library/curses.rst:1190
msgid ""
"Pretend *count* lines have been changed, starting with line *start*.  If "
"*changed* is supplied, it specifies whether the affected lines are marked as "
"having been changed (*changed*\\ =1) or unchanged (*changed*\\ =0)."
msgstr ""

#: ../Doc/library/curses.rst:1197
msgid ""
"Pretend the whole window has been changed, for purposes of drawing "
"optimizations."
msgstr ""

# fca2db6366d14c16a3ef9f044e954d0a
#: ../Doc/library/curses.rst:1203
msgid ""
"Mark all lines in  the  window  as unchanged since the last call to :meth:"
"`refresh`."
msgstr ""

#: ../Doc/library/curses.rst:1210
msgid ""
"Display a vertical line starting at ``(y, x)`` with length *n* consisting of "
"the character *ch*."
msgstr ""

#: ../Doc/library/curses.rst:1217
msgid "The :mod:`curses` module defines the following data members:"
msgstr ""

#: ../Doc/library/curses.rst:1222
msgid ""
"Some curses routines  that  return  an integer, such as  :func:`getch`, "
"return :const:`ERR` upon failure."
msgstr ""

#: ../Doc/library/curses.rst:1228
msgid ""
"Some curses routines  that  return  an integer, such as  :func:`napms`, "
"return :const:`OK` upon success."
msgstr ""

#: ../Doc/library/curses.rst:1234
msgid ""
"A string representing the current version of the module.  Also available as :"
"const:`__version__`."
msgstr ""

#: ../Doc/library/curses.rst:1237
msgid "Several constants are available to specify character cell attributes:"
msgstr ""

#: ../Doc/library/curses.rst:1242
msgid "``A_ALTCHARSET``"
msgstr ""

#: ../Doc/library/curses.rst:1242
msgid "Alternate character set mode."
msgstr ""

#: ../Doc/library/curses.rst:1244
msgid "``A_BLINK``"
msgstr ""

#: ../Doc/library/curses.rst:1244
msgid "Blink mode."
msgstr ""

#: ../Doc/library/curses.rst:1246
msgid "``A_BOLD``"
msgstr ""

#: ../Doc/library/curses.rst:1246
msgid "Bold mode."
msgstr ""

#: ../Doc/library/curses.rst:1248
msgid "``A_DIM``"
msgstr ""

#: ../Doc/library/curses.rst:1248
msgid "Dim mode."
msgstr ""

#: ../Doc/library/curses.rst:1250
msgid "``A_NORMAL``"
msgstr ""

#: ../Doc/library/curses.rst:1250
msgid "Normal attribute."
msgstr ""

# 88ed495fb39b4e2ead86b4e614868427
#: ../Doc/library/curses.rst:1252
msgid "``A_REVERSE``"
msgstr ""

# 76bc92cb0a2648219064141875b8cf37
#: ../Doc/library/curses.rst:1252
msgid "Reverse background and foreground colors."
msgstr ""

#: ../Doc/library/curses.rst:1255
msgid "``A_STANDOUT``"
msgstr ""

#: ../Doc/library/curses.rst:1255
msgid "Standout mode."
msgstr ""

#: ../Doc/library/curses.rst:1257
msgid "``A_UNDERLINE``"
msgstr ""

#: ../Doc/library/curses.rst:1257
msgid "Underline mode."
msgstr ""

#: ../Doc/library/curses.rst:1260
msgid ""
"Keys are referred to by integer constants with names starting with  "
"``KEY_``. The exact keycaps available are system dependent."
msgstr ""

#: ../Doc/library/curses.rst:1266
msgid "Key constant"
msgstr ""

#: ../Doc/library/curses.rst:1266 ../Doc/library/locale.rst:63
msgid "Key"
msgstr ""

#: ../Doc/library/curses.rst:1268
msgid "``KEY_MIN``"
msgstr ""

#: ../Doc/library/curses.rst:1268
msgid "Minimum key value"
msgstr ""

#: ../Doc/library/curses.rst:1270
msgid "``KEY_BREAK``"
msgstr ""

#: ../Doc/library/curses.rst:1270
msgid "Break key (unreliable)"
msgstr ""

#: ../Doc/library/curses.rst:1272
msgid "``KEY_DOWN``"
msgstr ""

#: ../Doc/library/curses.rst:1272
msgid "Down-arrow"
msgstr ""

#: ../Doc/library/curses.rst:1274
msgid "``KEY_UP``"
msgstr ""

#: ../Doc/library/curses.rst:1274
msgid "Up-arrow"
msgstr ""

#: ../Doc/library/curses.rst:1276
msgid "``KEY_LEFT``"
msgstr ""

#: ../Doc/library/curses.rst:1276
msgid "Left-arrow"
msgstr ""

#: ../Doc/library/curses.rst:1278
msgid "``KEY_RIGHT``"
msgstr ""

#: ../Doc/library/curses.rst:1278
msgid "Right-arrow"
msgstr ""

#: ../Doc/library/curses.rst:1280
msgid "``KEY_HOME``"
msgstr ""

#: ../Doc/library/curses.rst:1280
msgid "Home key (upward+left arrow)"
msgstr ""

#: ../Doc/library/curses.rst:1282
msgid "``KEY_BACKSPACE``"
msgstr ""

#: ../Doc/library/curses.rst:1282
msgid "Backspace (unreliable)"
msgstr ""

#: ../Doc/library/curses.rst:1284
msgid "``KEY_F0``"
msgstr ""

#: ../Doc/library/curses.rst:1284
msgid "Function keys.  Up to 64 function keys are supported."
msgstr ""

#: ../Doc/library/curses.rst:1287
msgid "``KEY_Fn``"
msgstr ""

#: ../Doc/library/curses.rst:1287
msgid "Value of function key *n*"
msgstr ""

#: ../Doc/library/curses.rst:1289
msgid "``KEY_DL``"
msgstr ""

#: ../Doc/library/curses.rst:1289
msgid "Delete line"
msgstr ""

#: ../Doc/library/curses.rst:1291
msgid "``KEY_IL``"
msgstr ""

#: ../Doc/library/curses.rst:1291
msgid "Insert line"
msgstr ""

#: ../Doc/library/curses.rst:1293
msgid "``KEY_DC``"
msgstr ""

#: ../Doc/library/curses.rst:1293
msgid "Delete character"
msgstr ""

#: ../Doc/library/curses.rst:1295
msgid "``KEY_IC``"
msgstr ""

#: ../Doc/library/curses.rst:1295
msgid "Insert char or enter insert mode"
msgstr ""

#: ../Doc/library/curses.rst:1297
msgid "``KEY_EIC``"
msgstr ""

#: ../Doc/library/curses.rst:1297
msgid "Exit insert char mode"
msgstr ""

#: ../Doc/library/curses.rst:1299
msgid "``KEY_CLEAR``"
msgstr ""

#: ../Doc/library/curses.rst:1299
msgid "Clear screen"
msgstr ""

#: ../Doc/library/curses.rst:1301
msgid "``KEY_EOS``"
msgstr ""

#: ../Doc/library/curses.rst:1301
msgid "Clear to end of screen"
msgstr ""

#: ../Doc/library/curses.rst:1303
msgid "``KEY_EOL``"
msgstr ""

#: ../Doc/library/curses.rst:1303
msgid "Clear to end of line"
msgstr ""

#: ../Doc/library/curses.rst:1305
msgid "``KEY_SF``"
msgstr ""

#: ../Doc/library/curses.rst:1305
msgid "Scroll 1 line forward"
msgstr ""

#: ../Doc/library/curses.rst:1307
msgid "``KEY_SR``"
msgstr ""

#: ../Doc/library/curses.rst:1307
msgid "Scroll 1 line backward (reverse)"
msgstr ""

#: ../Doc/library/curses.rst:1309
msgid "``KEY_NPAGE``"
msgstr ""

#: ../Doc/library/curses.rst:1309
msgid "Next page"
msgstr ""

#: ../Doc/library/curses.rst:1311
msgid "``KEY_PPAGE``"
msgstr ""

#: ../Doc/library/curses.rst:1311
msgid "Previous page"
msgstr ""

#: ../Doc/library/curses.rst:1313
msgid "``KEY_STAB``"
msgstr ""

#: ../Doc/library/curses.rst:1313
msgid "Set tab"
msgstr ""

#: ../Doc/library/curses.rst:1315
msgid "``KEY_CTAB``"
msgstr ""

#: ../Doc/library/curses.rst:1315
msgid "Clear tab"
msgstr ""

#: ../Doc/library/curses.rst:1317
msgid "``KEY_CATAB``"
msgstr ""

#: ../Doc/library/curses.rst:1317
msgid "Clear all tabs"
msgstr ""

#: ../Doc/library/curses.rst:1319
msgid "``KEY_ENTER``"
msgstr ""

#: ../Doc/library/curses.rst:1319
msgid "Enter or send (unreliable)"
msgstr ""

#: ../Doc/library/curses.rst:1321
msgid "``KEY_SRESET``"
msgstr ""

#: ../Doc/library/curses.rst:1321
msgid "Soft (partial) reset (unreliable)"
msgstr ""

#: ../Doc/library/curses.rst:1323
msgid "``KEY_RESET``"
msgstr ""

#: ../Doc/library/curses.rst:1323
msgid "Reset or hard reset (unreliable)"
msgstr ""

#: ../Doc/library/curses.rst:1325
msgid "``KEY_PRINT``"
msgstr ""

#: ../Doc/library/curses.rst:1325
msgid "Print"
msgstr ""

#: ../Doc/library/curses.rst:1327
msgid "``KEY_LL``"
msgstr ""

#: ../Doc/library/curses.rst:1327
msgid "Home down or bottom (lower left)"
msgstr ""

#: ../Doc/library/curses.rst:1329
msgid "``KEY_A1``"
msgstr ""

#: ../Doc/library/curses.rst:1329
msgid "Upper left of keypad"
msgstr ""

#: ../Doc/library/curses.rst:1331
msgid "``KEY_A3``"
msgstr ""

#: ../Doc/library/curses.rst:1331
msgid "Upper right of keypad"
msgstr ""

#: ../Doc/library/curses.rst:1333
msgid "``KEY_B2``"
msgstr ""

#: ../Doc/library/curses.rst:1333
msgid "Center of keypad"
msgstr ""

#: ../Doc/library/curses.rst:1335
msgid "``KEY_C1``"
msgstr ""

#: ../Doc/library/curses.rst:1335
msgid "Lower left of keypad"
msgstr ""

#: ../Doc/library/curses.rst:1337
msgid "``KEY_C3``"
msgstr ""

#: ../Doc/library/curses.rst:1337
msgid "Lower right of keypad"
msgstr ""

#: ../Doc/library/curses.rst:1339
msgid "``KEY_BTAB``"
msgstr ""

#: ../Doc/library/curses.rst:1339
msgid "Back tab"
msgstr ""

#: ../Doc/library/curses.rst:1341
msgid "``KEY_BEG``"
msgstr ""

#: ../Doc/library/curses.rst:1341
msgid "Beg (beginning)"
msgstr ""

#: ../Doc/library/curses.rst:1343
msgid "``KEY_CANCEL``"
msgstr ""

#: ../Doc/library/curses.rst:1343 ../Doc/library/curses.ascii.rst:72
msgid "Cancel"
msgstr ""

#: ../Doc/library/curses.rst:1345
msgid "``KEY_CLOSE``"
msgstr ""

#: ../Doc/library/curses.rst:1345
msgid "Close"
msgstr ""

#: ../Doc/library/curses.rst:1347
msgid "``KEY_COMMAND``"
msgstr ""

#: ../Doc/library/curses.rst:1347
msgid "Cmd (command)"
msgstr ""

#: ../Doc/library/curses.rst:1349
msgid "``KEY_COPY``"
msgstr ""

#: ../Doc/library/curses.rst:1349
msgid "Copy"
msgstr ""

#: ../Doc/library/curses.rst:1351
msgid "``KEY_CREATE``"
msgstr ""

#: ../Doc/library/curses.rst:1351
msgid "Create"
msgstr ""

#: ../Doc/library/curses.rst:1353
msgid "``KEY_END``"
msgstr ""

#: ../Doc/library/curses.rst:1353
msgid "End"
msgstr ""

#: ../Doc/library/curses.rst:1355
msgid "``KEY_EXIT``"
msgstr ""

#: ../Doc/library/curses.rst:1355
msgid "Exit"
msgstr ""

#: ../Doc/library/curses.rst:1357
msgid "``KEY_FIND``"
msgstr ""

#: ../Doc/library/curses.rst:1357
msgid "Find"
msgstr ""

#: ../Doc/library/curses.rst:1359
msgid "``KEY_HELP``"
msgstr ""

#: ../Doc/library/curses.rst:1359
msgid "Help"
msgstr ""

#: ../Doc/library/curses.rst:1361
msgid "``KEY_MARK``"
msgstr ""

#: ../Doc/library/curses.rst:1361
msgid "Mark"
msgstr ""

#: ../Doc/library/curses.rst:1363
msgid "``KEY_MESSAGE``"
msgstr ""

#: ../Doc/library/curses.rst:1363
msgid "Message"
msgstr ""

#: ../Doc/library/curses.rst:1365
msgid "``KEY_MOVE``"
msgstr ""

#: ../Doc/library/curses.rst:1365
msgid "Move"
msgstr ""

#: ../Doc/library/curses.rst:1367
msgid "``KEY_NEXT``"
msgstr ""

#: ../Doc/library/curses.rst:1367
msgid "Next"
msgstr ""

#: ../Doc/library/curses.rst:1369
msgid "``KEY_OPEN``"
msgstr ""

#: ../Doc/library/curses.rst:1369
msgid "Open"
msgstr ""

#: ../Doc/library/curses.rst:1371
msgid "``KEY_OPTIONS``"
msgstr ""

#: ../Doc/library/curses.rst:1371 ../Doc/library/ttk.rst:302
#: ../Doc/library/ttk.rst:382 ../Doc/library/ttk.rst:568
#: ../Doc/library/ttk.rst:637 ../Doc/library/ttk.rst:703
msgid "Options"
msgstr ""

#: ../Doc/library/curses.rst:1373
msgid "``KEY_PREVIOUS``"
msgstr ""

#: ../Doc/library/curses.rst:1373
msgid "Prev (previous)"
msgstr ""

#: ../Doc/library/curses.rst:1375
msgid "``KEY_REDO``"
msgstr ""

#: ../Doc/library/curses.rst:1375
msgid "Redo"
msgstr ""

#: ../Doc/library/curses.rst:1377
msgid "``KEY_REFERENCE``"
msgstr ""

#: ../Doc/library/curses.rst:1377
msgid "Ref (reference)"
msgstr ""

#: ../Doc/library/curses.rst:1379
msgid "``KEY_REFRESH``"
msgstr ""

#: ../Doc/library/curses.rst:1379
msgid "Refresh"
msgstr ""

#: ../Doc/library/curses.rst:1381
msgid "``KEY_REPLACE``"
msgstr ""

#: ../Doc/library/curses.rst:1381
msgid "Replace"
msgstr ""

#: ../Doc/library/curses.rst:1383
msgid "``KEY_RESTART``"
msgstr ""

#: ../Doc/library/curses.rst:1383
msgid "Restart"
msgstr ""

#: ../Doc/library/curses.rst:1385
msgid "``KEY_RESUME``"
msgstr ""

#: ../Doc/library/curses.rst:1385
msgid "Resume"
msgstr ""

#: ../Doc/library/curses.rst:1387
msgid "``KEY_SAVE``"
msgstr ""

#: ../Doc/library/curses.rst:1387
msgid "Save"
msgstr ""

#: ../Doc/library/curses.rst:1389
msgid "``KEY_SBEG``"
msgstr ""

#: ../Doc/library/curses.rst:1389
msgid "Shifted Beg (beginning)"
msgstr ""

#: ../Doc/library/curses.rst:1391
msgid "``KEY_SCANCEL``"
msgstr ""

#: ../Doc/library/curses.rst:1391
msgid "Shifted Cancel"
msgstr ""

#: ../Doc/library/curses.rst:1393
msgid "``KEY_SCOMMAND``"
msgstr ""

#: ../Doc/library/curses.rst:1393
msgid "Shifted Command"
msgstr ""

#: ../Doc/library/curses.rst:1395
msgid "``KEY_SCOPY``"
msgstr ""

#: ../Doc/library/curses.rst:1395
msgid "Shifted Copy"
msgstr ""

#: ../Doc/library/curses.rst:1397
msgid "``KEY_SCREATE``"
msgstr ""

#: ../Doc/library/curses.rst:1397
msgid "Shifted Create"
msgstr ""

#: ../Doc/library/curses.rst:1399
msgid "``KEY_SDC``"
msgstr ""

#: ../Doc/library/curses.rst:1399
msgid "Shifted Delete char"
msgstr ""

#: ../Doc/library/curses.rst:1401
msgid "``KEY_SDL``"
msgstr ""

#: ../Doc/library/curses.rst:1401
msgid "Shifted Delete line"
msgstr ""

#: ../Doc/library/curses.rst:1403
msgid "``KEY_SELECT``"
msgstr ""

#: ../Doc/library/curses.rst:1403
msgid "Select"
msgstr ""

#: ../Doc/library/curses.rst:1405
msgid "``KEY_SEND``"
msgstr ""

#: ../Doc/library/curses.rst:1405
msgid "Shifted End"
msgstr ""

#: ../Doc/library/curses.rst:1407
msgid "``KEY_SEOL``"
msgstr ""

#: ../Doc/library/curses.rst:1407
msgid "Shifted Clear line"
msgstr ""

#: ../Doc/library/curses.rst:1409
msgid "``KEY_SEXIT``"
msgstr ""

#: ../Doc/library/curses.rst:1409
msgid "Shifted Dxit"
msgstr ""

#: ../Doc/library/curses.rst:1411
msgid "``KEY_SFIND``"
msgstr ""

#: ../Doc/library/curses.rst:1411
msgid "Shifted Find"
msgstr ""

#: ../Doc/library/curses.rst:1413
msgid "``KEY_SHELP``"
msgstr ""

#: ../Doc/library/curses.rst:1413
msgid "Shifted Help"
msgstr ""

#: ../Doc/library/curses.rst:1415
msgid "``KEY_SHOME``"
msgstr ""

#: ../Doc/library/curses.rst:1415
msgid "Shifted Home"
msgstr ""

#: ../Doc/library/curses.rst:1417
msgid "``KEY_SIC``"
msgstr ""

#: ../Doc/library/curses.rst:1417
msgid "Shifted Input"
msgstr ""

#: ../Doc/library/curses.rst:1419
msgid "``KEY_SLEFT``"
msgstr ""

#: ../Doc/library/curses.rst:1419
msgid "Shifted Left arrow"
msgstr ""

#: ../Doc/library/curses.rst:1421
msgid "``KEY_SMESSAGE``"
msgstr ""

#: ../Doc/library/curses.rst:1421
msgid "Shifted Message"
msgstr ""

#: ../Doc/library/curses.rst:1423
msgid "``KEY_SMOVE``"
msgstr ""

#: ../Doc/library/curses.rst:1423
msgid "Shifted Move"
msgstr ""

#: ../Doc/library/curses.rst:1425
msgid "``KEY_SNEXT``"
msgstr ""

#: ../Doc/library/curses.rst:1425
msgid "Shifted Next"
msgstr ""

#: ../Doc/library/curses.rst:1427
msgid "``KEY_SOPTIONS``"
msgstr ""

#: ../Doc/library/curses.rst:1427
msgid "Shifted Options"
msgstr ""

#: ../Doc/library/curses.rst:1429
msgid "``KEY_SPREVIOUS``"
msgstr ""

#: ../Doc/library/curses.rst:1429
msgid "Shifted Prev"
msgstr ""

#: ../Doc/library/curses.rst:1431
msgid "``KEY_SPRINT``"
msgstr ""

#: ../Doc/library/curses.rst:1431
msgid "Shifted Print"
msgstr ""

#: ../Doc/library/curses.rst:1433
msgid "``KEY_SREDO``"
msgstr ""

#: ../Doc/library/curses.rst:1433
msgid "Shifted Redo"
msgstr ""

#: ../Doc/library/curses.rst:1435
msgid "``KEY_SREPLACE``"
msgstr ""

#: ../Doc/library/curses.rst:1435
msgid "Shifted Replace"
msgstr ""

#: ../Doc/library/curses.rst:1437
msgid "``KEY_SRIGHT``"
msgstr ""

#: ../Doc/library/curses.rst:1437
msgid "Shifted Right arrow"
msgstr ""

#: ../Doc/library/curses.rst:1439
msgid "``KEY_SRSUME``"
msgstr ""

#: ../Doc/library/curses.rst:1439
msgid "Shifted Resume"
msgstr ""

#: ../Doc/library/curses.rst:1441
msgid "``KEY_SSAVE``"
msgstr ""

#: ../Doc/library/curses.rst:1441
msgid "Shifted Save"
msgstr ""

#: ../Doc/library/curses.rst:1443
msgid "``KEY_SSUSPEND``"
msgstr ""

#: ../Doc/library/curses.rst:1443
msgid "Shifted Suspend"
msgstr ""

#: ../Doc/library/curses.rst:1445
msgid "``KEY_SUNDO``"
msgstr ""

#: ../Doc/library/curses.rst:1445
msgid "Shifted Undo"
msgstr ""

#: ../Doc/library/curses.rst:1447
msgid "``KEY_SUSPEND``"
msgstr ""

#: ../Doc/library/curses.rst:1447
msgid "Suspend"
msgstr ""

#: ../Doc/library/curses.rst:1449
msgid "``KEY_UNDO``"
msgstr ""

#: ../Doc/library/curses.rst:1449
msgid "Undo"
msgstr ""

#: ../Doc/library/curses.rst:1451
msgid "``KEY_MOUSE``"
msgstr ""

#: ../Doc/library/curses.rst:1451
msgid "Mouse event has occurred"
msgstr ""

#: ../Doc/library/curses.rst:1453
msgid "``KEY_RESIZE``"
msgstr ""

#: ../Doc/library/curses.rst:1453
msgid "Terminal resize event"
msgstr ""

#: ../Doc/library/curses.rst:1455
msgid "``KEY_MAX``"
msgstr ""

#: ../Doc/library/curses.rst:1455
msgid "Maximum key value"
msgstr ""

#: ../Doc/library/curses.rst:1458
msgid ""
"On VT100s and their software emulations, such as X terminal emulators, there "
"are normally at least four function keys (:const:`KEY_F1`, :const:`KEY_F2`, :"
"const:`KEY_F3`, :const:`KEY_F4`) available, and the arrow keys mapped to :"
"const:`KEY_UP`, :const:`KEY_DOWN`, :const:`KEY_LEFT` and :const:`KEY_RIGHT` "
"in the obvious way.  If your machine has a PC keyboard, it is safe to expect "
"arrow keys and twelve function keys (older PC keyboards may have only ten "
"function keys); also, the following keypad mappings are standard:"
msgstr ""

#: ../Doc/library/curses.rst:1467
msgid "Keycap"
msgstr ""

#: ../Doc/library/curses.rst:1467 ../Doc/library/curses.rst:1584
#: ../Doc/library/curses.rst:1710 ../Doc/library/httplib.rst:211
#: ../Doc/library/select.rst:123 ../Doc/library/select.rst:221
#: ../Doc/library/select.rst:322 ../Doc/library/select.rst:351
#: ../Doc/library/select.rst:382 ../Doc/library/select.rst:390
#: ../Doc/library/select.rst:410 ../Doc/library/select.rst:433
#: ../Doc/library/sys.rst:514 ../Doc/library/sys.rst:528
#: ../Doc/library/xml.dom.rst:944
msgid "Constant"
msgstr ""

#: ../Doc/library/curses.rst:1469
msgid ":kbd:`Insert`"
msgstr ""

#: ../Doc/library/curses.rst:1469
msgid "KEY_IC"
msgstr ""

#: ../Doc/library/curses.rst:1471
msgid ":kbd:`Delete`"
msgstr ""

#: ../Doc/library/curses.rst:1471
msgid "KEY_DC"
msgstr ""

#: ../Doc/library/curses.rst:1473
msgid ":kbd:`Home`"
msgstr ""

#: ../Doc/library/curses.rst:1473
msgid "KEY_HOME"
msgstr ""

#: ../Doc/library/curses.rst:1475
msgid ":kbd:`End`"
msgstr ""

#: ../Doc/library/curses.rst:1475
msgid "KEY_END"
msgstr ""

#: ../Doc/library/curses.rst:1477
msgid ":kbd:`Page Up`"
msgstr ""

#: ../Doc/library/curses.rst:1477
msgid "KEY_NPAGE"
msgstr ""

#: ../Doc/library/curses.rst:1479
msgid ":kbd:`Page Down`"
msgstr ""

#: ../Doc/library/curses.rst:1479
msgid "KEY_PPAGE"
msgstr ""

#: ../Doc/library/curses.rst:1482
msgid ""
"The following table lists characters from the alternate character set. These "
"are inherited from the VT100 terminal, and will generally be  available on "
"software emulations such as X terminals.  When there is no graphic "
"available, curses falls back on a crude printable ASCII approximation."
msgstr ""

#: ../Doc/library/curses.rst:1489
msgid "These are available only after :func:`initscr` has  been called."
msgstr ""

#: ../Doc/library/curses.rst:1492
msgid "ACS code"
msgstr ""

#: ../Doc/library/curses.rst:1494
msgid "``ACS_BBSS``"
msgstr ""

#: ../Doc/library/curses.rst:1494
msgid "alternate name for upper right corner"
msgstr ""

#: ../Doc/library/curses.rst:1496
msgid "``ACS_BLOCK``"
msgstr ""

#: ../Doc/library/curses.rst:1496
msgid "solid square block"
msgstr ""

#: ../Doc/library/curses.rst:1498
msgid "``ACS_BOARD``"
msgstr ""

#: ../Doc/library/curses.rst:1498
msgid "board of squares"
msgstr ""

#: ../Doc/library/curses.rst:1500
msgid "``ACS_BSBS``"
msgstr ""

#: ../Doc/library/curses.rst:1500
msgid "alternate name for horizontal line"
msgstr ""

#: ../Doc/library/curses.rst:1502
msgid "``ACS_BSSB``"
msgstr ""

#: ../Doc/library/curses.rst:1502
msgid "alternate name for upper left corner"
msgstr ""

#: ../Doc/library/curses.rst:1504
msgid "``ACS_BSSS``"
msgstr ""

#: ../Doc/library/curses.rst:1504
msgid "alternate name for top tee"
msgstr ""

#: ../Doc/library/curses.rst:1506
msgid "``ACS_BTEE``"
msgstr ""

#: ../Doc/library/curses.rst:1506
msgid "bottom tee"
msgstr ""

#: ../Doc/library/curses.rst:1508
msgid "``ACS_BULLET``"
msgstr ""

#: ../Doc/library/curses.rst:1508
msgid "bullet"
msgstr ""

#: ../Doc/library/curses.rst:1510
msgid "``ACS_CKBOARD``"
msgstr ""

#: ../Doc/library/curses.rst:1510
msgid "checker board (stipple)"
msgstr ""

#: ../Doc/library/curses.rst:1512
msgid "``ACS_DARROW``"
msgstr ""

#: ../Doc/library/curses.rst:1512
msgid "arrow pointing down"
msgstr ""

#: ../Doc/library/curses.rst:1514
msgid "``ACS_DEGREE``"
msgstr ""

#: ../Doc/library/curses.rst:1514
msgid "degree symbol"
msgstr ""

#: ../Doc/library/curses.rst:1516
msgid "``ACS_DIAMOND``"
msgstr ""

#: ../Doc/library/curses.rst:1516
msgid "diamond"
msgstr ""

#: ../Doc/library/curses.rst:1518
msgid "``ACS_GEQUAL``"
msgstr ""

#: ../Doc/library/curses.rst:1518
msgid "greater-than-or-equal-to"
msgstr ""

#: ../Doc/library/curses.rst:1520
msgid "``ACS_HLINE``"
msgstr ""

#: ../Doc/library/curses.rst:1520
msgid "horizontal line"
msgstr ""

#: ../Doc/library/curses.rst:1522
msgid "``ACS_LANTERN``"
msgstr ""

#: ../Doc/library/curses.rst:1522
msgid "lantern symbol"
msgstr ""

#: ../Doc/library/curses.rst:1524
msgid "``ACS_LARROW``"
msgstr ""

#: ../Doc/library/curses.rst:1524
msgid "left arrow"
msgstr ""

#: ../Doc/library/curses.rst:1526
msgid "``ACS_LEQUAL``"
msgstr ""

#: ../Doc/library/curses.rst:1526
msgid "less-than-or-equal-to"
msgstr ""

#: ../Doc/library/curses.rst:1528
msgid "``ACS_LLCORNER``"
msgstr ""

#: ../Doc/library/curses.rst:1528
msgid "lower left-hand corner"
msgstr ""

#: ../Doc/library/curses.rst:1530
msgid "``ACS_LRCORNER``"
msgstr ""

#: ../Doc/library/curses.rst:1530
msgid "lower right-hand corner"
msgstr ""

#: ../Doc/library/curses.rst:1532
msgid "``ACS_LTEE``"
msgstr ""

#: ../Doc/library/curses.rst:1532
msgid "left tee"
msgstr ""

#: ../Doc/library/curses.rst:1534
msgid "``ACS_NEQUAL``"
msgstr ""

#: ../Doc/library/curses.rst:1534
msgid "not-equal sign"
msgstr ""

#: ../Doc/library/curses.rst:1536
msgid "``ACS_PI``"
msgstr ""

#: ../Doc/library/curses.rst:1536
msgid "letter pi"
msgstr ""

#: ../Doc/library/curses.rst:1538
msgid "``ACS_PLMINUS``"
msgstr ""

#: ../Doc/library/curses.rst:1538
msgid "plus-or-minus sign"
msgstr ""

#: ../Doc/library/curses.rst:1540
msgid "``ACS_PLUS``"
msgstr ""

#: ../Doc/library/curses.rst:1540
msgid "big plus sign"
msgstr ""

#: ../Doc/library/curses.rst:1542
msgid "``ACS_RARROW``"
msgstr ""

#: ../Doc/library/curses.rst:1542
msgid "right arrow"
msgstr ""

#: ../Doc/library/curses.rst:1544
msgid "``ACS_RTEE``"
msgstr ""

#: ../Doc/library/curses.rst:1544
msgid "right tee"
msgstr ""

#: ../Doc/library/curses.rst:1546
msgid "``ACS_S1``"
msgstr ""

#: ../Doc/library/curses.rst:1546
msgid "scan line 1"
msgstr ""

#: ../Doc/library/curses.rst:1548
msgid "``ACS_S3``"
msgstr ""

#: ../Doc/library/curses.rst:1548
msgid "scan line 3"
msgstr ""

#: ../Doc/library/curses.rst:1550
msgid "``ACS_S7``"
msgstr ""

#: ../Doc/library/curses.rst:1550
msgid "scan line 7"
msgstr ""

#: ../Doc/library/curses.rst:1552
msgid "``ACS_S9``"
msgstr ""

#: ../Doc/library/curses.rst:1552
msgid "scan line 9"
msgstr ""

#: ../Doc/library/curses.rst:1554
msgid "``ACS_SBBS``"
msgstr ""

#: ../Doc/library/curses.rst:1554
msgid "alternate name for lower right corner"
msgstr ""

#: ../Doc/library/curses.rst:1556
msgid "``ACS_SBSB``"
msgstr ""

#: ../Doc/library/curses.rst:1556
msgid "alternate name for vertical line"
msgstr ""

#: ../Doc/library/curses.rst:1558
msgid "``ACS_SBSS``"
msgstr ""

#: ../Doc/library/curses.rst:1558
msgid "alternate name for right tee"
msgstr ""

#: ../Doc/library/curses.rst:1560
msgid "``ACS_SSBB``"
msgstr ""

#: ../Doc/library/curses.rst:1560
msgid "alternate name for lower left corner"
msgstr ""

#: ../Doc/library/curses.rst:1562
msgid "``ACS_SSBS``"
msgstr ""

#: ../Doc/library/curses.rst:1562
msgid "alternate name for bottom tee"
msgstr ""

#: ../Doc/library/curses.rst:1564
msgid "``ACS_SSSB``"
msgstr ""

#: ../Doc/library/curses.rst:1564
msgid "alternate name for left tee"
msgstr ""

#: ../Doc/library/curses.rst:1566
msgid "``ACS_SSSS``"
msgstr ""

#: ../Doc/library/curses.rst:1566
msgid "alternate name for crossover or big plus"
msgstr ""

#: ../Doc/library/curses.rst:1568
msgid "``ACS_STERLING``"
msgstr ""

#: ../Doc/library/curses.rst:1568
msgid "pound sterling"
msgstr ""

#: ../Doc/library/curses.rst:1570
msgid "``ACS_TTEE``"
msgstr ""

#: ../Doc/library/curses.rst:1570
msgid "top tee"
msgstr ""

#: ../Doc/library/curses.rst:1572
msgid "``ACS_UARROW``"
msgstr ""

#: ../Doc/library/curses.rst:1572
msgid "up arrow"
msgstr ""

#: ../Doc/library/curses.rst:1574
msgid "``ACS_ULCORNER``"
msgstr ""

#: ../Doc/library/curses.rst:1574
msgid "upper left corner"
msgstr ""

#: ../Doc/library/curses.rst:1576
msgid "``ACS_URCORNER``"
msgstr ""

#: ../Doc/library/curses.rst:1576
msgid "upper right corner"
msgstr ""

#: ../Doc/library/curses.rst:1578
msgid "``ACS_VLINE``"
msgstr ""

#: ../Doc/library/curses.rst:1578
msgid "vertical line"
msgstr ""

#: ../Doc/library/curses.rst:1581
msgid "The following table lists the predefined colors:"
msgstr ""

#: ../Doc/library/curses.rst:1584
msgid "Color"
msgstr ""

#: ../Doc/library/curses.rst:1586
msgid "``COLOR_BLACK``"
msgstr ""

#: ../Doc/library/curses.rst:1586
msgid "Black"
msgstr ""

#: ../Doc/library/curses.rst:1588
msgid "``COLOR_BLUE``"
msgstr ""

#: ../Doc/library/curses.rst:1588
msgid "Blue"
msgstr ""

#: ../Doc/library/curses.rst:1590
msgid "``COLOR_CYAN``"
msgstr ""

#: ../Doc/library/curses.rst:1590
msgid "Cyan (light greenish blue)"
msgstr ""

#: ../Doc/library/curses.rst:1592
msgid "``COLOR_GREEN``"
msgstr ""

#: ../Doc/library/curses.rst:1592
msgid "Green"
msgstr ""

#: ../Doc/library/curses.rst:1594
msgid "``COLOR_MAGENTA``"
msgstr ""

#: ../Doc/library/curses.rst:1594
msgid "Magenta (purplish red)"
msgstr ""

#: ../Doc/library/curses.rst:1596
msgid "``COLOR_RED``"
msgstr ""

#: ../Doc/library/curses.rst:1596
msgid "Red"
msgstr ""

#: ../Doc/library/curses.rst:1598
msgid "``COLOR_WHITE``"
msgstr ""

#: ../Doc/library/curses.rst:1598
msgid "White"
msgstr ""

#: ../Doc/library/curses.rst:1600
msgid "``COLOR_YELLOW``"
msgstr ""

#: ../Doc/library/curses.rst:1600
msgid "Yellow"
msgstr ""

#: ../Doc/library/curses.rst:1605
msgid ":mod:`curses.textpad` --- Text input widget for curses programs"
msgstr ""

#: ../Doc/library/curses.rst:1615
msgid ""
"The :mod:`curses.textpad` module provides a :class:`Textbox` class that "
"handles elementary text editing in a curses window, supporting a set of "
"keybindings resembling those of Emacs (thus, also of Netscape Navigator, "
"BBedit 6.x, FrameMaker, and many other programs).  The module also provides "
"a rectangle-drawing function useful for framing text boxes or for other "
"purposes."
msgstr ""

#: ../Doc/library/curses.rst:1621
msgid "The module :mod:`curses.textpad` defines the following function:"
msgstr ""

#: ../Doc/library/curses.rst:1626
msgid ""
"Draw a rectangle.  The first argument must be a window object; the remaining "
"arguments are coordinates relative to that window.  The second and third "
"arguments are the y and x coordinates of the upper left hand corner of the "
"rectangle to be drawn; the fourth and fifth arguments are the y and x "
"coordinates of the lower right hand corner. The rectangle will be drawn "
"using VT100/IBM PC forms characters on terminals that make this possible "
"(including xterm and most other software terminal emulators).  Otherwise it "
"will be drawn with ASCII  dashes, vertical bars, and plus signs."
msgstr ""

#: ../Doc/library/curses.rst:1639
msgid "Textbox objects"
msgstr ""

#: ../Doc/library/curses.rst:1641
msgid "You can instantiate a :class:`Textbox` object as follows:"
msgstr ""

#: ../Doc/library/curses.rst:1646
msgid ""
"Return a textbox widget object.  The *win* argument should be a curses :"
"class:`WindowObject` in which the textbox is to be contained. The edit "
"cursor of the textbox is initially located at the upper left hand corner of "
"the containing window, with coordinates ``(0, 0)``. The instance's :attr:"
"`stripspaces` flag is initially on."
msgstr ""

#: ../Doc/library/curses.rst:1652
msgid ":class:`Textbox` objects have the following methods:"
msgstr ""

# 58545fd1c1944c6e8bf6e437143faadc
#: ../Doc/library/curses.rst:1657
msgid ""
"This is the entry point you will normally use.  It accepts editing "
"keystrokes until one of the termination keystrokes is entered.  If "
"*validator* is supplied, it must be a function.  It will be called for each "
"keystroke entered with the keystroke as a parameter; command dispatch is "
"done on the result. This method returns the window contents as a string; "
"whether blanks in the window are included is affected by the :attr:"
"`stripspaces` attribute."
msgstr ""

#: ../Doc/library/curses.rst:1668
msgid ""
"Process a single command keystroke.  Here are the supported special "
"keystrokes:"
msgstr ""

#: ../Doc/library/curses.rst:1672 ../Doc/library/curses.rst:1710
msgid "Keystroke"
msgstr ""

#: ../Doc/library/curses.rst:1672 ../Doc/library/tarfile.rst:92
msgid "Action"
msgstr ""

#: ../Doc/library/curses.rst:1674
msgid ":kbd:`Control-A`"
msgstr ""

#: ../Doc/library/curses.rst:1674
msgid "Go to left edge of window."
msgstr ""

#: ../Doc/library/curses.rst:1676 ../Doc/library/curses.rst:1712
msgid ":kbd:`Control-B`"
msgstr ""

#: ../Doc/library/curses.rst:1676
msgid "Cursor left, wrapping to previous line if appropriate."
msgstr ""

#: ../Doc/library/curses.rst:1679
msgid ":kbd:`Control-D`"
msgstr ""

#: ../Doc/library/curses.rst:1679
msgid "Delete character under cursor."
msgstr ""

#: ../Doc/library/curses.rst:1681
msgid ":kbd:`Control-E`"
msgstr ""

#: ../Doc/library/curses.rst:1681
msgid "Go to right edge (stripspaces off) or end of line (stripspaces on)."
msgstr ""

#: ../Doc/library/curses.rst:1684 ../Doc/library/curses.rst:1714
msgid ":kbd:`Control-F`"
msgstr ""

#: ../Doc/library/curses.rst:1684
msgid "Cursor right, wrapping to next line when appropriate."
msgstr ""

#: ../Doc/library/curses.rst:1687
msgid ":kbd:`Control-G`"
msgstr ""

#: ../Doc/library/curses.rst:1687
msgid "Terminate, returning the window contents."
msgstr ""

#: ../Doc/library/curses.rst:1689
msgid ":kbd:`Control-H`"
msgstr ""

#: ../Doc/library/curses.rst:1689
msgid "Delete character backward."
msgstr ""

#: ../Doc/library/curses.rst:1691
msgid ":kbd:`Control-J`"
msgstr ""

#: ../Doc/library/curses.rst:1691
msgid "Terminate if the window is 1 line, otherwise insert newline."
msgstr ""

#: ../Doc/library/curses.rst:1694
msgid ":kbd:`Control-K`"
msgstr ""

#: ../Doc/library/curses.rst:1694
msgid "If line is blank, delete it, otherwise clear to end of line."
msgstr ""

#: ../Doc/library/curses.rst:1697
msgid ":kbd:`Control-L`"
msgstr ""

#: ../Doc/library/curses.rst:1697
msgid "Refresh screen."
msgstr ""

#: ../Doc/library/curses.rst:1699 ../Doc/library/curses.rst:1718
msgid ":kbd:`Control-N`"
msgstr ""

#: ../Doc/library/curses.rst:1699
msgid "Cursor down; move down one line."
msgstr ""

#: ../Doc/library/curses.rst:1701
msgid ":kbd:`Control-O`"
msgstr ""

#: ../Doc/library/curses.rst:1701
msgid "Insert a blank line at cursor location."
msgstr ""

#: ../Doc/library/curses.rst:1703 ../Doc/library/curses.rst:1716
msgid ":kbd:`Control-P`"
msgstr ""

#: ../Doc/library/curses.rst:1703
msgid "Cursor up; move up one line."
msgstr ""

#: ../Doc/library/curses.rst:1706
msgid ""
"Move operations do nothing if the cursor is at an edge where the movement is "
"not possible.  The following synonyms are supported where possible:"
msgstr ""

#: ../Doc/library/curses.rst:1712
msgid ":const:`KEY_LEFT`"
msgstr ""

#: ../Doc/library/curses.rst:1714
msgid ":const:`KEY_RIGHT`"
msgstr ""

#: ../Doc/library/curses.rst:1716
msgid ":const:`KEY_UP`"
msgstr ""

#: ../Doc/library/curses.rst:1718
msgid ":const:`KEY_DOWN`"
msgstr ""

#: ../Doc/library/curses.rst:1720
msgid ":const:`KEY_BACKSPACE`"
msgstr ""

#: ../Doc/library/curses.rst:1720
msgid ":kbd:`Control-h`"
msgstr ""

#: ../Doc/library/curses.rst:1723
msgid ""
"All other keystrokes are treated as a command to insert the given character "
"and move right (with line wrapping)."
msgstr ""

# fefa75efaeaa4ada95867f211fde86a4
#: ../Doc/library/curses.rst:1729
msgid ""
"Return the window contents as a string; whether blanks in the window are "
"included is affected by the :attr:`stripspaces` member."
msgstr ""

# b4e72c57eac249ee87373f14b98e9116
#: ../Doc/library/curses.rst:1735
msgid ""
"This attribute is a flag which controls the interpretation of blanks in the "
"window.  When it is on, trailing blanks on each line are ignored; any cursor "
"motion that would land the cursor on a trailing blank goes to the end of "
"that line instead, and trailing blanks are stripped when the window contents "
"are gathered."
msgstr ""

#: ../Doc/library/curses.ascii.rst:3
msgid ":mod:`curses.ascii` --- Utilities for ASCII characters"
msgstr ""

#: ../Doc/library/curses.ascii.rst:13
msgid ""
"The :mod:`curses.ascii` module supplies name constants for ASCII characters "
"and functions to test membership in various ASCII character classes.  The "
"constants supplied are names for control characters as follows:"
msgstr ""

#: ../Doc/library/curses.ascii.rst:18 ../Doc/library/fl.rst:352
#: ../Doc/library/fl.rst:430 ../Doc/library/turtle.rst:2177
#: ../Doc/library/xmlrpclib.rst:67
msgid "Name"
msgstr ""

#: ../Doc/library/curses.ascii.rst:20
msgid ":const:`NUL`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:22
msgid ":const:`SOH`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:22
msgid "Start of heading, console interrupt"
msgstr ""

#: ../Doc/library/curses.ascii.rst:24
msgid ":const:`STX`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:24
msgid "Start of text"
msgstr ""

#: ../Doc/library/curses.ascii.rst:26
msgid ":const:`ETX`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:26
msgid "End of text"
msgstr ""

#: ../Doc/library/curses.ascii.rst:28
msgid ":const:`EOT`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:28
msgid "End of transmission"
msgstr ""

#: ../Doc/library/curses.ascii.rst:30
msgid ":const:`ENQ`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:30
msgid "Enquiry, goes with :const:`ACK` flow control"
msgstr ""

#: ../Doc/library/curses.ascii.rst:32
msgid ":const:`ACK`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:32
msgid "Acknowledgement"
msgstr ""

#: ../Doc/library/curses.ascii.rst:34
msgid ":const:`BEL`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:34
msgid "Bell"
msgstr ""

#: ../Doc/library/curses.ascii.rst:36
msgid ":const:`BS`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:36
msgid "Backspace"
msgstr ""

#: ../Doc/library/curses.ascii.rst:38
msgid ":const:`TAB`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:38
msgid "Tab"
msgstr ""

#: ../Doc/library/curses.ascii.rst:40
msgid ":const:`HT`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:40
msgid "Alias for :const:`TAB`: \"Horizontal tab\""
msgstr ""

#: ../Doc/library/curses.ascii.rst:42
msgid ":const:`LF`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:42
msgid "Line feed"
msgstr ""

#: ../Doc/library/curses.ascii.rst:44
msgid ":const:`NL`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:44
msgid "Alias for :const:`LF`: \"New line\""
msgstr ""

#: ../Doc/library/curses.ascii.rst:46
msgid ":const:`VT`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:46
msgid "Vertical tab"
msgstr ""

#: ../Doc/library/curses.ascii.rst:48
msgid ":const:`FF`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:48
msgid "Form feed"
msgstr ""

#: ../Doc/library/curses.ascii.rst:50
msgid ":const:`CR`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:50
msgid "Carriage return"
msgstr ""

#: ../Doc/library/curses.ascii.rst:52
msgid ":const:`SO`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:52
msgid "Shift-out, begin alternate character set"
msgstr ""

#: ../Doc/library/curses.ascii.rst:54
msgid ":const:`SI`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:54
msgid "Shift-in, resume default character set"
msgstr ""

#: ../Doc/library/curses.ascii.rst:56
msgid ":const:`DLE`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:56
msgid "Data-link escape"
msgstr ""

#: ../Doc/library/curses.ascii.rst:58
msgid ":const:`DC1`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:58
msgid "XON, for flow control"
msgstr ""

#: ../Doc/library/curses.ascii.rst:60
msgid ":const:`DC2`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:60
msgid "Device control 2, block-mode flow control"
msgstr ""

#: ../Doc/library/curses.ascii.rst:62
msgid ":const:`DC3`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:62
msgid "XOFF, for flow control"
msgstr ""

#: ../Doc/library/curses.ascii.rst:64
msgid ":const:`DC4`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:64
msgid "Device control 4"
msgstr ""

#: ../Doc/library/curses.ascii.rst:66
msgid ":const:`NAK`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:66
msgid "Negative acknowledgement"
msgstr ""

#: ../Doc/library/curses.ascii.rst:68
msgid ":const:`SYN`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:68
msgid "Synchronous idle"
msgstr ""

#: ../Doc/library/curses.ascii.rst:70
msgid ":const:`ETB`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:70
msgid "End transmission block"
msgstr ""

#: ../Doc/library/curses.ascii.rst:72
msgid ":const:`CAN`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:74
msgid ":const:`EM`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:74
msgid "End of medium"
msgstr ""

#: ../Doc/library/curses.ascii.rst:76
msgid ":const:`SUB`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:76
msgid "Substitute"
msgstr ""

#: ../Doc/library/curses.ascii.rst:78
msgid ":const:`ESC`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:78
msgid "Escape"
msgstr ""

#: ../Doc/library/curses.ascii.rst:80
msgid ":const:`FS`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:80
msgid "File separator"
msgstr ""

#: ../Doc/library/curses.ascii.rst:82
msgid ":const:`GS`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:82
msgid "Group separator"
msgstr ""

#: ../Doc/library/curses.ascii.rst:84
msgid ":const:`RS`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:84
msgid "Record separator, block-mode terminator"
msgstr ""

#: ../Doc/library/curses.ascii.rst:86
msgid ":const:`US`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:86
msgid "Unit separator"
msgstr ""

#: ../Doc/library/curses.ascii.rst:88
msgid ":const:`SP`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:88
msgid "Space"
msgstr ""

#: ../Doc/library/curses.ascii.rst:90
msgid ":const:`DEL`"
msgstr ""

#: ../Doc/library/curses.ascii.rst:90
msgid "Delete"
msgstr ""

#: ../Doc/library/curses.ascii.rst:93
msgid ""
"Note that many of these have little practical significance in modern usage.  "
"The mnemonics derive from teleprinter conventions that predate digital "
"computers."
msgstr ""

#: ../Doc/library/curses.ascii.rst:96
msgid ""
"The module supplies the following functions, patterned on those in the "
"standard C library:"
msgstr ""

#: ../Doc/library/curses.ascii.rst:102
msgid ""
"Checks for an ASCII alphanumeric character; it is equivalent to ``isalpha(c) "
"or isdigit(c)``."
msgstr ""

#: ../Doc/library/curses.ascii.rst:108
msgid ""
"Checks for an ASCII alphabetic character; it is equivalent to ``isupper(c) "
"or islower(c)``."
msgstr ""

#: ../Doc/library/curses.ascii.rst:114
msgid "Checks for a character value that fits in the 7-bit ASCII set."
msgstr ""

#: ../Doc/library/curses.ascii.rst:119
msgid "Checks for an ASCII whitespace character."
msgstr ""

#: ../Doc/library/curses.ascii.rst:124
msgid "Checks for an ASCII control character (in the range 0x00 to 0x1f)."
msgstr ""

#: ../Doc/library/curses.ascii.rst:129
msgid ""
"Checks for an ASCII decimal digit, ``'0'`` through ``'9'``.  This is "
"equivalent to ``c in string.digits``."
msgstr ""

#: ../Doc/library/curses.ascii.rst:135
msgid "Checks for ASCII any printable character except space."
msgstr ""

#: ../Doc/library/curses.ascii.rst:140
msgid "Checks for an ASCII lower-case character."
msgstr ""

#: ../Doc/library/curses.ascii.rst:145
msgid "Checks for any ASCII printable character including space."
msgstr ""

#: ../Doc/library/curses.ascii.rst:150
msgid ""
"Checks for any printable ASCII character which is not a space or an "
"alphanumeric character."
msgstr ""

#: ../Doc/library/curses.ascii.rst:156
msgid ""
"Checks for ASCII white-space characters; space, line feed, carriage return, "
"form feed, horizontal tab, vertical tab."
msgstr ""

#: ../Doc/library/curses.ascii.rst:162
msgid "Checks for an ASCII uppercase letter."
msgstr ""

#: ../Doc/library/curses.ascii.rst:167
msgid ""
"Checks for an ASCII hexadecimal digit.  This is equivalent to ``c in string."
"hexdigits``."
msgstr ""

#: ../Doc/library/curses.ascii.rst:173
msgid "Checks for an ASCII control character (ordinal values 0 to 31)."
msgstr ""

#: ../Doc/library/curses.ascii.rst:178
msgid "Checks for a non-ASCII character (ordinal values 0x80 and above)."
msgstr ""

#: ../Doc/library/curses.ascii.rst:180
msgid ""
"These functions accept either integers or strings; when the argument is a "
"string, it is first converted using the built-in function :func:`ord`."
msgstr ""

#: ../Doc/library/curses.ascii.rst:183
msgid ""
"Note that all these functions check ordinal bit values derived from the  "
"first character of the string you pass in; they do not actually know "
"anything about the host machine's character encoding.  For functions  that "
"know about the character encoding (and handle internationalization properly) "
"see the :mod:`string` module."
msgstr ""

#: ../Doc/library/curses.ascii.rst:189
msgid ""
"The following two functions take either a single-character string or integer "
"byte value; they return a value of the same type."
msgstr ""

#: ../Doc/library/curses.ascii.rst:195
msgid "Return the ASCII value corresponding to the low 7 bits of *c*."
msgstr ""

#: ../Doc/library/curses.ascii.rst:200
msgid ""
"Return the control character corresponding to the given character (the "
"character bit value is bitwise-anded with 0x1f)."
msgstr ""

#: ../Doc/library/curses.ascii.rst:206
msgid ""
"Return the 8-bit character corresponding to the given ASCII character (the "
"character bit value is bitwise-ored with 0x80)."
msgstr ""

#: ../Doc/library/curses.ascii.rst:209
msgid ""
"The following function takes either a single-character string or integer "
"value; it returns a string."
msgstr ""

#: ../Doc/library/curses.ascii.rst:215
msgid ""
"Return a string representation of the ASCII character *c*.  If *c* is "
"printable, this string is the character itself.  If the character is a "
"control character (0x00-0x1f) the string consists of a caret (``'^'``) "
"followed by the corresponding uppercase letter. If the character is an ASCII "
"delete (0x7f) the string is ``'^?'``.  If the character has its meta bit "
"(0x80) set, the meta bit is stripped, the preceding rules applied, and "
"``'!'`` prepended to the result."
msgstr ""

#: ../Doc/library/curses.ascii.rst:225
msgid ""
"A 33-element string array that contains the ASCII mnemonics for the thirty-"
"two ASCII control characters from 0 (NUL) to 0x1f (US), in order, plus the "
"mnemonic ``SP`` for the space character."
msgstr ""

#: ../Doc/library/curses.panel.rst:2
msgid ":mod:`curses.panel` --- A panel stack extension for curses"
msgstr ""

#: ../Doc/library/curses.panel.rst:9
msgid ""
"Panels are windows with the added feature of depth, so they can be stacked "
"on top of each other, and only the visible portions of each window will be "
"displayed.  Panels can be added, moved up or down in the stack, and removed."
msgstr ""

#: ../Doc/library/curses.panel.rst:19
msgid "The module :mod:`curses.panel` defines the following functions:"
msgstr ""

#: ../Doc/library/curses.panel.rst:24
msgid "Returns the bottom panel in the panel stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:29
msgid ""
"Returns a panel object, associating it with the given window *win*. Be aware "
"that you need to keep the returned panel object referenced explicitly.  If "
"you don't, the panel object is garbage collected and removed from the panel "
"stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:36
msgid "Returns the top panel in the panel stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:41
msgid ""
"Updates the virtual screen after changes in the panel stack. This does not "
"call :func:`curses.doupdate`, so you'll have to do this yourself."
msgstr ""

#: ../Doc/library/curses.panel.rst:48
msgid "Panel Objects"
msgstr ""

#: ../Doc/library/curses.panel.rst:50
msgid ""
"Panel objects, as returned by :func:`new_panel` above, are windows with a "
"stacking order. There's always a window associated with a panel which "
"determines the content, while the panel methods are responsible for the "
"window's depth in the panel stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:55
msgid "Panel objects have the following methods:"
msgstr ""

#: ../Doc/library/curses.panel.rst:60
msgid "Returns the panel above the current panel."
msgstr ""

#: ../Doc/library/curses.panel.rst:65
msgid "Returns the panel below the current panel."
msgstr ""

#: ../Doc/library/curses.panel.rst:70
msgid "Push the panel to the bottom of the stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:75
msgid "Returns true if the panel is hidden (not visible), false otherwise."
msgstr ""

#: ../Doc/library/curses.panel.rst:80
msgid ""
"Hide the panel. This does not delete the object, it just makes the window on "
"screen invisible."
msgstr ""

#: ../Doc/library/curses.panel.rst:86
msgid "Move the panel to the screen coordinates ``(y, x)``."
msgstr ""

#: ../Doc/library/curses.panel.rst:91
msgid "Change the window associated with the panel to the window *win*."
msgstr ""

#: ../Doc/library/curses.panel.rst:96
msgid ""
"Set the panel's user pointer to *obj*. This is used to associate an "
"arbitrary piece of data with the panel, and can be any Python object."
msgstr ""

#: ../Doc/library/curses.panel.rst:102
msgid "Display the panel (which might have been hidden)."
msgstr ""

#: ../Doc/library/curses.panel.rst:107
msgid "Push panel to the top of the stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:112
msgid ""
"Returns the user pointer for the panel.  This might be any Python object."
msgstr ""

#: ../Doc/library/curses.panel.rst:117
msgid "Returns the window object associated with the panel."
msgstr ""

#: ../Doc/library/custominterp.rst:6
msgid "Custom Python Interpreters"
msgstr ""

#: ../Doc/library/custominterp.rst:8
msgid ""
"The modules described in this chapter allow writing interfaces similar to "
"Python's interactive interpreter.  If you want a Python interpreter that "
"supports some special feature in addition to the Python language, you should "
"look at the :mod:`code` module.  (The :mod:`codeop` module is lower-level, "
"used to support compiling a possibly-incomplete chunk of Python code.)"
msgstr ""

#: ../Doc/library/custominterp.rst:14 ../Doc/library/frameworks.rst:12
#: ../Doc/library/modules.rst:11
msgid "The full list of modules described in this chapter is:"
msgstr ""

#: ../Doc/library/datatypes.rst:6
msgid "Data Types"
msgstr ""

#: ../Doc/library/datatypes.rst:8
msgid ""
"The modules described in this chapter provide a variety of specialized data "
"types such as dates and times, fixed-type arrays, heap queues, synchronized "
"queues, and sets."
msgstr ""

# d1257c5989e446b082247ce2070b1576
#: ../Doc/library/datatypes.rst:12
msgid ""
"Python also provides some built-in data types, in particular, :class:"
"`dict`, :class:`list`, :class:`set` (which along with :class:`frozenset`, "
"replaces the deprecated :mod:`sets` module), and :class:`tuple`. The :class:"
"`str` class can be used to handle binary data and 8-bit text, and the :class:"
"`unicode` class to handle Unicode text."
msgstr ""

#: ../Doc/library/datatypes.rst:18 ../Doc/library/numeric.rst:15
msgid "The following modules are documented in this chapter:"
msgstr ""

#: ../Doc/library/datetime.rst:2
msgid ":mod:`datetime` --- Basic date and time types"
msgstr ""

# dbe4669c96e44069be1a5374de1a246d
#: ../Doc/library/datetime.rst:14
msgid ""
"The :mod:`datetime` module supplies classes for manipulating dates and times "
"in both simple and complex ways.  While date and time arithmetic is "
"supported, the focus of the implementation is on efficient attribute "
"extraction for output formatting and manipulation. For related "
"functionality, see also the :mod:`time` and :mod:`calendar` modules."
msgstr ""

# 54f5e9900ef7469dbc8c71be58d290ab
#: ../Doc/library/datetime.rst:20
msgid "There are two kinds of date and time objects: \"naive\" and \"aware\"."
msgstr ""

# f213f8ecbabd46669764c969fb842ce3
#: ../Doc/library/datetime.rst:22
msgid ""
"An aware object has sufficient knowledge of applicable algorithmic and "
"political time adjustments, such as time zone and daylight saving time "
"information, to locate itself relative to other aware objects.  An aware "
"object is used to represent a specific moment in time that is not open to "
"interpretation [#]_."
msgstr ""

# 187a76f282164db2bae4dccf07c29802
#: ../Doc/library/datetime.rst:28
msgid ""
"A naive object does not contain enough information to unambiguously locate "
"itself relative to other date/time objects.  Whether a naive object "
"represents Coordinated Universal Time (UTC), local time, or time in some "
"other timezone is purely up to the program, just like it's up to the program "
"whether a particular number represents metres, miles, or mass.  Naive "
"objects are easy to understand and to work with, at the cost of ignoring "
"some aspects of reality."
msgstr ""

# d8a802d7a83e4bb7b37c510d0de7bdc6
#: ../Doc/library/datetime.rst:35
msgid ""
"For applications requiring aware objects, :class:`.datetime` and :class:`."
"time` objects have an optional time zone information attribute, :attr:"
"`tzinfo`, that can be set to an instance of a subclass of the abstract :"
"class:`tzinfo` class. These :class:`tzinfo` objects capture information "
"about the offset from UTC time, the time zone name, and whether Daylight "
"Saving Time is in effect.  Note that no concrete :class:`tzinfo` classes are "
"supplied by the :mod:`datetime` module.  Supporting timezones at whatever "
"level of detail is required is up to the application.  The rules for time "
"adjustment across the world are more political than rational, and there is "
"no standard suitable for every application."
msgstr ""

#: ../Doc/library/datetime.rst:46
msgid "The :mod:`datetime` module exports the following constants:"
msgstr ""

# e17db1e5aba84ccd8a501fad8bfdbc9b
#: ../Doc/library/datetime.rst:50
msgid ""
"The smallest year number allowed in a :class:`date` or :class:`.datetime` "
"object. :const:`MINYEAR` is ``1``."
msgstr ""

# e0d2d6a6c74944abb7cdc0ba3128986d
#: ../Doc/library/datetime.rst:56
msgid ""
"The largest year number allowed in a :class:`date` or :class:`.datetime` "
"object. :const:`MAXYEAR` is ``9999``."
msgstr ""

#: ../Doc/library/datetime.rst:63
msgid "General calendar related functions."
msgstr ""

#: ../Doc/library/datetime.rst:66
msgid "Time access and conversions."
msgstr ""

#: ../Doc/library/datetime.rst:70
msgid "Available Types"
msgstr ""

#: ../Doc/library/datetime.rst:75
msgid ""
"An idealized naive date, assuming the current Gregorian calendar always was, "
"and always will be, in effect. Attributes: :attr:`year`, :attr:`month`, and :"
"attr:`day`."
msgstr ""

#: ../Doc/library/datetime.rst:83
msgid ""
"An idealized time, independent of any particular day, assuming that every "
"day has exactly 24\\*60\\*60 seconds (there is no notion of \"leap seconds\" "
"here). Attributes: :attr:`hour`, :attr:`minute`, :attr:`second`, :attr:"
"`microsecond`, and :attr:`tzinfo`."
msgstr ""

#: ../Doc/library/datetime.rst:92
msgid ""
"A combination of a date and a time. Attributes: :attr:`year`, :attr:"
"`month`, :attr:`day`, :attr:`hour`, :attr:`minute`, :attr:`second`, :attr:"
"`microsecond`, and :attr:`tzinfo`."
msgstr ""

# e6414a012a6940749121b302780ffabe
#: ../Doc/library/datetime.rst:100
msgid ""
"A duration expressing the difference between two :class:`date`, :class:`."
"time`, or :class:`.datetime` instances to microsecond resolution."
msgstr ""

# cb47e374206f4a41a3bcf4fd989e1b52
#: ../Doc/library/datetime.rst:106
msgid ""
"An abstract base class for time zone information objects.  These are used by "
"the :class:`.datetime` and :class:`.time` classes to provide a customizable "
"notion of time adjustment (for example, to account for time zone and/or "
"daylight saving time)."
msgstr ""

#: ../Doc/library/datetime.rst:111
msgid "Objects of these types are immutable."
msgstr ""

#: ../Doc/library/datetime.rst:113
msgid "Objects of the :class:`date` type are always naive."
msgstr ""

# c3c7d243750742efbf8a6a8faf59109e
#: ../Doc/library/datetime.rst:115
msgid ""
"An object of type :class:`.time` or :class:`.datetime` may be naive or "
"aware. A :class:`.datetime` object *d* is aware if ``d.tzinfo`` is not "
"``None`` and ``d.tzinfo.utcoffset(d)`` does not return ``None``.  If ``d."
"tzinfo`` is ``None``, or if ``d.tzinfo`` is not ``None`` but ``d.tzinfo."
"utcoffset(d)`` returns ``None``, *d* is naive.  A :class:`.time` object *t* "
"is aware if ``t.tzinfo`` is not ``None`` and ``t.tzinfo.utcoffset(None)`` "
"does not return ``None``.  Otherwise, *t* is naive."
msgstr ""

#: ../Doc/library/datetime.rst:123
msgid ""
"The distinction between naive and aware doesn't apply to :class:`timedelta` "
"objects."
msgstr ""

#: ../Doc/library/datetime.rst:126
msgid "Subclass relationships::"
msgstr ""

#: ../Doc/library/datetime.rst:139
msgid ":class:`timedelta` Objects"
msgstr ""

#: ../Doc/library/datetime.rst:141
msgid ""
"A :class:`timedelta` object represents a duration, the difference between "
"two dates or times."
msgstr ""

# c655b25731f04a2882a5f4cd6860af8c
#: ../Doc/library/datetime.rst:146
msgid ""
"All arguments are optional and default to ``0``.  Arguments may be ints, "
"longs, or floats, and may be positive or negative."
msgstr ""

#: ../Doc/library/datetime.rst:149
msgid ""
"Only *days*, *seconds* and *microseconds* are stored internally.  Arguments "
"are converted to those units:"
msgstr ""

#: ../Doc/library/datetime.rst:152
msgid "A millisecond is converted to 1000 microseconds."
msgstr ""

#: ../Doc/library/datetime.rst:153
msgid "A minute is converted to 60 seconds."
msgstr ""

#: ../Doc/library/datetime.rst:154
msgid "An hour is converted to 3600 seconds."
msgstr ""

#: ../Doc/library/datetime.rst:155
msgid "A week is converted to 7 days."
msgstr ""

#: ../Doc/library/datetime.rst:157
msgid ""
"and days, seconds and microseconds are then normalized so that the "
"representation is unique, with"
msgstr ""

#: ../Doc/library/datetime.rst:160
msgid "``0 <= microseconds < 1000000``"
msgstr ""

#: ../Doc/library/datetime.rst:161
msgid "``0 <= seconds < 3600*24`` (the number of seconds in one day)"
msgstr ""

#: ../Doc/library/datetime.rst:162
msgid "``-999999999 <= days <= 999999999``"
msgstr ""

#: ../Doc/library/datetime.rst:164
msgid ""
"If any argument is a float and there are fractional microseconds, the "
"fractional microseconds left over from all arguments are combined and their "
"sum is rounded to the nearest microsecond.  If no argument is a float, the "
"conversion and normalization processes are exact (no information is lost)."
msgstr ""

#: ../Doc/library/datetime.rst:169
msgid ""
"If the normalized value of days lies outside the indicated range, :exc:"
"`OverflowError` is raised."
msgstr ""

#: ../Doc/library/datetime.rst:172
msgid ""
"Note that normalization of negative values may be surprising at first. For "
"example,"
msgstr ""

#: ../Doc/library/datetime.rst:181
msgid "Class attributes are:"
msgstr ""

#: ../Doc/library/datetime.rst:185
msgid "The most negative :class:`timedelta` object, ``timedelta(-999999999)``."
msgstr ""

#: ../Doc/library/datetime.rst:190
msgid ""
"The most positive :class:`timedelta` object, ``timedelta(days=999999999, "
"hours=23, minutes=59, seconds=59, microseconds=999999)``."
msgstr ""

#: ../Doc/library/datetime.rst:196
msgid ""
"The smallest possible difference between non-equal :class:`timedelta` "
"objects, ``timedelta(microseconds=1)``."
msgstr ""

#: ../Doc/library/datetime.rst:199
msgid ""
"Note that, because of normalization, ``timedelta.max`` > ``-timedelta.min``. "
"``-timedelta.max`` is not representable as a :class:`timedelta` object."
msgstr ""

#: ../Doc/library/datetime.rst:202 ../Doc/library/datetime.rst:405
#: ../Doc/library/datetime.rst:749 ../Doc/library/datetime.rst:1191
msgid "Instance attributes (read-only):"
msgstr ""

#: ../Doc/library/datetime.rst:207
msgid "``days``"
msgstr ""

#: ../Doc/library/datetime.rst:207
msgid "Between -999999999 and 999999999 inclusive"
msgstr ""

#: ../Doc/library/datetime.rst:209
msgid "``seconds``"
msgstr ""

#: ../Doc/library/datetime.rst:209
msgid "Between 0 and 86399 inclusive"
msgstr ""

#: ../Doc/library/datetime.rst:211
msgid "``microseconds``"
msgstr ""

#: ../Doc/library/datetime.rst:211
msgid "Between 0 and 999999 inclusive"
msgstr ""

#: ../Doc/library/datetime.rst:214 ../Doc/library/datetime.rst:422
#: ../Doc/library/datetime.rst:792 ../Doc/library/datetime.rst:1219
msgid "Supported operations:"
msgstr ""

#: ../Doc/library/datetime.rst:219 ../Doc/library/datetime.rst:425
#: ../Doc/library/datetime.rst:795 ../Doc/library/operator.rst:597
#: ../Doc/library/sets.rst:77 ../Doc/library/sets.rst:138
#: ../Doc/library/sets.rst:147 ../Doc/library/stdtypes.rst:95
#: ../Doc/library/stdtypes.rst:153 ../Doc/library/stdtypes.rst:288
#: ../Doc/library/stdtypes.rst:386 ../Doc/library/stdtypes.rst:429
#: ../Doc/library/stdtypes.rst:719 ../Doc/library/stdtypes.rst:1572
msgid "Operation"
msgstr ""

#: ../Doc/library/datetime.rst:219 ../Doc/library/datetime.rst:425
#: ../Doc/library/datetime.rst:795 ../Doc/library/sets.rst:77
#: ../Doc/library/sets.rst:138 ../Doc/library/sets.rst:147
#: ../Doc/library/stdtypes.rst:95 ../Doc/library/stdtypes.rst:288
#: ../Doc/library/stdtypes.rst:386 ../Doc/library/stdtypes.rst:429
#: ../Doc/library/stdtypes.rst:719 ../Doc/library/stdtypes.rst:1572
msgid "Result"
msgstr ""

#: ../Doc/library/datetime.rst:221
msgid "``t1 = t2 + t3``"
msgstr ""

#: ../Doc/library/datetime.rst:221
msgid ""
"Sum of *t2* and *t3*. Afterwards *t1*-*t2* == *t3* and *t1*-*t3* == *t2* are "
"true. (1)"
msgstr ""

#: ../Doc/library/datetime.rst:224
msgid "``t1 = t2 - t3``"
msgstr ""

#: ../Doc/library/datetime.rst:224
msgid ""
"Difference of *t2* and *t3*. Afterwards *t1* == *t2* - *t3* and *t2* == *t1* "
"+ *t3* are true. (1)"
msgstr ""

#: ../Doc/library/datetime.rst:228
msgid "``t1 = t2 * i or t1 = i * t2``"
msgstr ""

# 1cf2ce4b66604b8ea9a56a6eb042fd89
#: ../Doc/library/datetime.rst:228
msgid ""
"Delta multiplied by an integer or long. Afterwards *t1* // i == *t2* is "
"true, provided ``i != 0``."
msgstr ""

#: ../Doc/library/datetime.rst:232
msgid "In general, *t1* \\* i == *t1* \\* (i-1) + *t1* is true. (1)"
msgstr ""

# 4195c4f50af945819d4358ee4059f062
#: ../Doc/library/datetime.rst:235
msgid "``t1 = t2 // i``"
msgstr ""

# 76d199e28d3a4c97947aef9dd4bf2779
#: ../Doc/library/datetime.rst:235
msgid "The floor is computed and the remainder (if any) is thrown away. (3)"
msgstr ""

#: ../Doc/library/datetime.rst:238
msgid "``+t1``"
msgstr ""

#: ../Doc/library/datetime.rst:238
msgid "Returns a :class:`timedelta` object with the same value. (2)"
msgstr ""

#: ../Doc/library/datetime.rst:241
msgid "``-t1``"
msgstr ""

#: ../Doc/library/datetime.rst:241
msgid ""
"equivalent to :class:`timedelta`\\ (-*t1.days*, -*t1.seconds*, -*t1."
"microseconds*), and to *t1*\\* -1. (1)(4)"
msgstr ""

#: ../Doc/library/datetime.rst:245
msgid "``abs(t)``"
msgstr ""

#: ../Doc/library/datetime.rst:245
msgid ""
"equivalent to +\\ *t* when ``t.days >= 0``, and to -*t* when ``t.days < 0``. "
"(2)"
msgstr ""

# 82f2007729354161b7b1398b567e58a2
#: ../Doc/library/datetime.rst:248
msgid "``str(t)``"
msgstr ""

# a8a4b6abcdda48b9975c573a958127ca
#: ../Doc/library/datetime.rst:248
msgid ""
"Returns a string in the form ``[D day[s], ][H]H:MM:SS[.UUUUUU]``, where D is "
"negative for negative ``t``. (5)"
msgstr ""

# 8ffb7e53407243f7aac2a8107448f482
#: ../Doc/library/datetime.rst:252
msgid "``repr(t)``"
msgstr ""

# 5e2657982ba64c909e6612df30b7da46
#: ../Doc/library/datetime.rst:252
msgid ""
"Returns a string in the form ``datetime.timedelta(D[, S[, U]])``, where D is "
"negative for negative ``t``. (5)"
msgstr ""

#: ../Doc/library/datetime.rst:257 ../Doc/library/datetime.rst:439
#: ../Doc/library/datetime.rst:1691 ../Doc/library/posixfile.rst:171
#: ../Doc/library/stdtypes.rst:112 ../Doc/library/stdtypes.rst:172
#: ../Doc/library/stdtypes.rst:334 ../Doc/library/stdtypes.rst:447
#: ../Doc/library/stdtypes.rst:773 ../Doc/library/stdtypes.rst:1464
#: ../Doc/library/stdtypes.rst:1616 ../Doc/library/struct.rst:140
#: ../Doc/library/struct.rst:206 ../Doc/library/subprocess.rst:727
#: ../Doc/library/time.rst:332 ../Doc/library/tkinter.rst:243
#: ../Doc/library/ttk.rst:809 ../Doc/library/webbrowser.rst:148
msgid "Notes:"
msgstr ""

#: ../Doc/library/datetime.rst:260
msgid "This is exact, but may overflow."
msgstr ""

#: ../Doc/library/datetime.rst:263
msgid "This is exact, and cannot overflow."
msgstr ""

#: ../Doc/library/datetime.rst:266
msgid "Division by 0 raises :exc:`ZeroDivisionError`."
msgstr ""

#: ../Doc/library/datetime.rst:269
msgid "-*timedelta.max* is not representable as a :class:`timedelta` object."
msgstr ""

# a1336f4e853b4a60a4ed14c706147399
#: ../Doc/library/datetime.rst:272
msgid ""
"String representations of :class:`timedelta` objects are normalized "
"similarly to their internal representation.  This leads to somewhat unusual "
"results for negative timedeltas.  For example:"
msgstr ""

# 8b73b8dd1c2147eb82fa7e5154268910
#: ../Doc/library/datetime.rst:281
msgid ""
"In addition to the operations listed above :class:`timedelta` objects "
"support certain additions and subtractions with :class:`date` and :class:`."
"datetime` objects (see below)."
msgstr ""

#: ../Doc/library/datetime.rst:285
msgid ""
"Comparisons of :class:`timedelta` objects are supported with the :class:"
"`timedelta` object representing the smaller duration considered to be the "
"smaller timedelta. In order to stop mixed-type comparisons from falling back "
"to the default comparison by object address, when a :class:`timedelta` "
"object is compared to an object of a different type, :exc:`TypeError` is "
"raised unless the comparison is ``==`` or ``!=``.  The latter cases return :"
"const:`False` or :const:`True`, respectively."
msgstr ""

#: ../Doc/library/datetime.rst:293
msgid ""
":class:`timedelta` objects are :term:`hashable` (usable as dictionary keys), "
"support efficient pickling, and in Boolean contexts, a :class:`timedelta` "
"object is considered to be true if and only if it isn't equal to ``timedelta"
"(0)``."
msgstr ""

#: ../Doc/library/datetime.rst:297 ../Doc/library/datetime.rst:472
#: ../Doc/library/datetime.rst:864 ../Doc/library/datetime.rst:1242
msgid "Instance methods:"
msgstr ""

# 9e4ea08d52934aa8b1efb6d4cb35af22
#: ../Doc/library/datetime.rst:301
msgid ""
"Return the total number of seconds contained in the duration. Equivalent to "
"``(td.microseconds + (td.seconds + td.days * 24 * 3600) * 10**6) / 10**6`` "
"computed with true division enabled."
msgstr ""

#: ../Doc/library/datetime.rst:305
msgid ""
"Note that for very large time intervals (greater than 270 years on most "
"platforms) this method will lose microsecond accuracy."
msgstr ""

#: ../Doc/library/datetime.rst:311
msgid "Example usage:"
msgstr ""

#: ../Doc/library/datetime.rst:337
msgid ":class:`date` Objects"
msgstr ""

#: ../Doc/library/datetime.rst:339
msgid ""
"A :class:`date` object represents a date (year, month and day) in an "
"idealized calendar, the current Gregorian calendar indefinitely extended in "
"both directions.  January 1 of year 1 is called day number 1, January 2 of "
"year 1 is called day number 2, and so on.  This matches the definition of "
"the \"proleptic Gregorian\" calendar in Dershowitz and Reingold's book "
"Calendrical Calculations, where it's the base calendar for all "
"computations.  See the book for algorithms for converting between proleptic "
"Gregorian ordinals and many other calendar systems."
msgstr ""

# f7d753500e3f44b29038e0433291b309
#: ../Doc/library/datetime.rst:351
msgid ""
"All arguments are required.  Arguments may be ints or longs, in the "
"following ranges:"
msgstr ""

#: ../Doc/library/datetime.rst:354 ../Doc/library/datetime.rst:629
msgid "``MINYEAR <= year <= MAXYEAR``"
msgstr ""

#: ../Doc/library/datetime.rst:355 ../Doc/library/datetime.rst:630
msgid "``1 <= month <= 12``"
msgstr ""

#: ../Doc/library/datetime.rst:356 ../Doc/library/datetime.rst:631
msgid "``1 <= day <= number of days in the given month and year``"
msgstr ""

#: ../Doc/library/datetime.rst:358 ../Doc/library/datetime.rst:637
msgid ""
"If an argument outside those ranges is given, :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/datetime.rst:361 ../Doc/library/datetime.rst:639
msgid "Other constructors, all class methods:"
msgstr ""

#: ../Doc/library/datetime.rst:365
msgid ""
"Return the current local date.  This is equivalent to ``date.fromtimestamp"
"(time.time())``."
msgstr ""

# a49f2f1b7b0b49d98f9480382248fbe3
#: ../Doc/library/datetime.rst:371
msgid ""
"Return the local date corresponding to the POSIX timestamp, such as is "
"returned by :func:`time.time`.  This may raise :exc:`ValueError`, if the "
"timestamp is out of the range of values supported by the platform C :c:func:"
"`localtime` function. It's common for this to be restricted to years from "
"1970 through 2038.  Note that on non-POSIX systems that include leap seconds "
"in their notion of a timestamp, leap seconds are ignored by :meth:"
"`fromtimestamp`."
msgstr ""

#: ../Doc/library/datetime.rst:381
msgid ""
"Return the date corresponding to the proleptic Gregorian ordinal, where "
"January 1 of year 1 has ordinal 1.  :exc:`ValueError` is raised unless ``1 "
"<= ordinal <= date.max.toordinal()``. For any date *d*, ``date.fromordinal(d."
"toordinal()) == d``."
msgstr ""

#: ../Doc/library/datetime.rst:387 ../Doc/library/datetime.rst:729
#: ../Doc/library/datetime.rst:1171
msgid "Class attributes:"
msgstr ""

#: ../Doc/library/datetime.rst:391
msgid "The earliest representable date, ``date(MINYEAR, 1, 1)``."
msgstr ""

#: ../Doc/library/datetime.rst:396
msgid "The latest representable date, ``date(MAXYEAR, 12, 31)``."
msgstr ""

#: ../Doc/library/datetime.rst:401
msgid ""
"The smallest possible difference between non-equal date objects, ``timedelta"
"(days=1)``."
msgstr ""

#: ../Doc/library/datetime.rst:409 ../Doc/library/datetime.rst:753
msgid "Between :const:`MINYEAR` and :const:`MAXYEAR` inclusive."
msgstr ""

#: ../Doc/library/datetime.rst:414 ../Doc/library/datetime.rst:758
msgid "Between 1 and 12 inclusive."
msgstr ""

#: ../Doc/library/datetime.rst:419 ../Doc/library/datetime.rst:763
msgid "Between 1 and the number of days in the given month of the given year."
msgstr ""

#: ../Doc/library/datetime.rst:427
msgid "``date2 = date1 + timedelta``"
msgstr ""

#: ../Doc/library/datetime.rst:427
msgid "*date2* is ``timedelta.days`` days removed from *date1*.  (1)"
msgstr ""

#: ../Doc/library/datetime.rst:430
msgid "``date2 = date1 - timedelta``"
msgstr ""

#: ../Doc/library/datetime.rst:430
msgid "Computes *date2* such that ``date2 + timedelta == date1``. (2)"
msgstr ""

#: ../Doc/library/datetime.rst:433
msgid "``timedelta = date1 - date2``"
msgstr ""

#: ../Doc/library/datetime.rst:433 ../Doc/library/datetime.rst:801
#: ../Doc/library/datetime.rst:1647 ../Doc/library/stdtypes.rst:103
#: ../Doc/library/stdtypes.rst:307 ../Doc/library/stdtypes.rst:733
#: ../Doc/library/stdtypes.rst:1435 ../Doc/library/stdtypes.rst:1437
#: ../Doc/library/stdtypes.rst:1439 ../Doc/library/stdtypes.rst:1441
#: ../Doc/library/stdtypes.rst:1592 ../Doc/library/struct.rst:172
#: ../Doc/library/struct.rst:174 ../Doc/library/struct.rst:178
#: ../Doc/library/struct.rst:180 ../Doc/library/struct.rst:182
#: ../Doc/library/struct.rst:184 ../Doc/library/struct.rst:186
#: ../Doc/library/struct.rst:188 ../Doc/library/time.rst:295
#: ../Doc/library/time.rst:306 ../Doc/library/webbrowser.rst:143
#: ../Doc/library/webbrowser.rst:145
msgid "\\(3)"
msgstr ""

#: ../Doc/library/datetime.rst:435
msgid "``date1 < date2``"
msgstr ""

#: ../Doc/library/datetime.rst:435
msgid ""
"*date1* is considered less than *date2* when *date1* precedes *date2* in "
"time. (4)"
msgstr ""

#: ../Doc/library/datetime.rst:442
msgid ""
"*date2* is moved forward in time if ``timedelta.days > 0``, or backward if "
"``timedelta.days < 0``.  Afterward ``date2 - date1 == timedelta.days``. "
"``timedelta.seconds`` and ``timedelta.microseconds`` are ignored. :exc:"
"`OverflowError` is raised if ``date2.year`` would be smaller than :const:"
"`MINYEAR` or larger than :const:`MAXYEAR`."
msgstr ""

#: ../Doc/library/datetime.rst:449
msgid ""
"This isn't quite equivalent to date1 + (-timedelta), because -timedelta in "
"isolation can overflow in cases where date1 - timedelta does not. "
"``timedelta.seconds`` and ``timedelta.microseconds`` are ignored."
msgstr ""

#: ../Doc/library/datetime.rst:454
msgid ""
"This is exact, and cannot overflow.  timedelta.seconds and timedelta."
"microseconds are 0, and date2 + timedelta == date1 after."
msgstr ""

#: ../Doc/library/datetime.rst:458
msgid ""
"In other words, ``date1 < date2`` if and only if ``date1.toordinal() < date2."
"toordinal()``. In order to stop comparison from falling back to the default "
"scheme of comparing object addresses, date comparison normally raises :exc:"
"`TypeError` if the other comparand isn't also a :class:`date` object. "
"However, ``NotImplemented`` is returned instead if the other comparand has "
"a :meth:`timetuple` attribute.  This hook gives other kinds of date objects "
"a chance at implementing mixed-type comparison. If not, when a :class:`date` "
"object is compared to an object of a different type, :exc:`TypeError` is "
"raised unless the comparison is ``==`` or ``!=``.  The latter cases return :"
"const:`False` or :const:`True`, respectively."
msgstr ""

#: ../Doc/library/datetime.rst:469
msgid ""
"Dates can be used as dictionary keys. In Boolean contexts, all :class:`date` "
"objects are considered to be true."
msgstr ""

# baffba1acaed4600bfcaa8bb529ba9e2
#: ../Doc/library/datetime.rst:476
msgid ""
"Return a date with the same value, except for those parameters given new "
"values by whichever keyword arguments are specified.  For example, if ``d == "
"date(2002, 12, 31)``, then ``d.replace(day=26) == date(2002, 12, 26)``."
msgstr ""

#: ../Doc/library/datetime.rst:483
msgid ""
"Return a :class:`time.struct_time` such as returned by :func:`time."
"localtime`. The hours, minutes and seconds are 0, and the DST flag is -1. "
"``d.timetuple()`` is equivalent to ``time.struct_time((d.year, d.month, d."
"day, 0, 0, 0, d.weekday(), yday, -1))``, where ``yday = d.toordinal() - date"
"(d.year, 1, 1).toordinal() + 1`` is the day number within the current year "
"starting with ``1`` for January 1st."
msgstr ""

#: ../Doc/library/datetime.rst:493
msgid ""
"Return the proleptic Gregorian ordinal of the date, where January 1 of year "
"1 has ordinal 1.  For any :class:`date` object *d*, ``date.fromordinal(d."
"toordinal()) == d``."
msgstr ""

#: ../Doc/library/datetime.rst:500
msgid ""
"Return the day of the week as an integer, where Monday is 0 and Sunday is 6. "
"For example, ``date(2002, 12, 4).weekday() == 2``, a Wednesday. See also :"
"meth:`isoweekday`."
msgstr ""

#: ../Doc/library/datetime.rst:507
msgid ""
"Return the day of the week as an integer, where Monday is 1 and Sunday is 7. "
"For example, ``date(2002, 12, 4).isoweekday() == 3``, a Wednesday. See also :"
"meth:`weekday`, :meth:`isocalendar`."
msgstr ""

#: ../Doc/library/datetime.rst:514
msgid "Return a 3-tuple, (ISO year, ISO week number, ISO weekday)."
msgstr ""

#: ../Doc/library/datetime.rst:516
msgid ""
"The ISO calendar is a widely used variant of the Gregorian calendar. See "
"http://www.phys.uu.nl/~vgent/calendar/isocalendar.htm for a good explanation."
msgstr ""

#: ../Doc/library/datetime.rst:520
msgid ""
"The ISO year consists of 52 or 53 full weeks, and where a week starts on a "
"Monday and ends on a Sunday.  The first week of an ISO year is the first "
"(Gregorian) calendar week of a year containing a Thursday. This is called "
"week number 1, and the ISO year of that Thursday is the same as its "
"Gregorian year."
msgstr ""

#: ../Doc/library/datetime.rst:525
msgid ""
"For example, 2004 begins on a Thursday, so the first week of ISO year 2004 "
"begins on Monday, 29 Dec 2003 and ends on Sunday, 4 Jan 2004, so that ``date"
"(2003, 12, 29).isocalendar() == (2004, 1, 1)`` and ``date(2004, 1, 4)."
"isocalendar() == (2004, 1, 7)``."
msgstr ""

#: ../Doc/library/datetime.rst:533
msgid ""
"Return a string representing the date in ISO 8601 format, 'YYYY-MM-DD'.  For "
"example, ``date(2002, 12, 4).isoformat() == '2002-12-04'``."
msgstr ""

#: ../Doc/library/datetime.rst:539
msgid "For a date *d*, ``str(d)`` is equivalent to ``d.isoformat()``."
msgstr ""

# 248b4dac222f4fd2b30b5f4209723664
#: ../Doc/library/datetime.rst:544
msgid ""
"Return a string representing the date, for example ``date(2002, 12, 4).ctime"
"() == 'Wed Dec 4 00:00:00 2002'``. ``d.ctime()`` is equivalent to ``time."
"ctime(time.mktime(d.timetuple()))`` on platforms where the native C :c:func:"
"`ctime` function (which :func:`time.ctime` invokes, but which :meth:`date."
"ctime` does not invoke) conforms to the C standard."
msgstr ""

#: ../Doc/library/datetime.rst:553
msgid ""
"Return a string representing the date, controlled by an explicit format "
"string. Format codes referring to hours, minutes or seconds will see 0 "
"values. See section :ref:`strftime-strptime-behavior`."
msgstr ""

#: ../Doc/library/datetime.rst:558
msgid "Example of counting days to an event::"
msgstr ""

#: ../Doc/library/datetime.rst:576
msgid "Example of working with :class:`date`:"
msgstr ""

#: ../Doc/library/datetime.rst:613
msgid ":class:`datetime` Objects"
msgstr ""

# 5a954c712f9c41f8ac80a304eb2efdc8
#: ../Doc/library/datetime.rst:615
msgid ""
"A :class:`.datetime` object is a single object containing all the "
"information from a :class:`date` object and a :class:`.time` object.  Like "
"a :class:`date` object, :class:`.datetime` assumes the current Gregorian "
"calendar extended in both directions; like a time object, :class:`.datetime` "
"assumes there are exactly 3600\\*24 seconds in every day."
msgstr ""

#: ../Doc/library/datetime.rst:621
msgid "Constructor:"
msgstr ""

# 6251e902b4784e60ad9c13157c2038de
#: ../Doc/library/datetime.rst:625
msgid ""
"The year, month and day arguments are required.  *tzinfo* may be ``None``, "
"or an instance of a :class:`tzinfo` subclass.  The remaining arguments may "
"be ints or longs, in the following ranges:"
msgstr ""

#: ../Doc/library/datetime.rst:632 ../Doc/library/datetime.rst:1163
msgid "``0 <= hour < 24``"
msgstr ""

#: ../Doc/library/datetime.rst:633 ../Doc/library/datetime.rst:1164
msgid "``0 <= minute < 60``"
msgstr ""

#: ../Doc/library/datetime.rst:634 ../Doc/library/datetime.rst:1165
msgid "``0 <= second < 60``"
msgstr ""

#: ../Doc/library/datetime.rst:635
msgid "``0 <= microsecond < 1000000``"
msgstr ""

#: ../Doc/library/datetime.rst:643
msgid ""
"Return the current local datetime, with :attr:`tzinfo` ``None``. This is "
"equivalent to ``datetime.fromtimestamp(time.time())``. See also :meth:"
"`now`, :meth:`fromtimestamp`."
msgstr ""

# 2eca656f757147a4b9e0627ff6854dd1
#: ../Doc/library/datetime.rst:650
msgid ""
"Return the current local date and time.  If optional argument *tz* is "
"``None`` or not specified, this is like :meth:`today`, but, if possible, "
"supplies more precision than can be gotten from going through a :func:`time."
"time` timestamp (for example, this may be possible on platforms supplying "
"the C :c:func:`gettimeofday` function)."
msgstr ""

#: ../Doc/library/datetime.rst:656
msgid ""
"Else *tz* must be an instance of a class :class:`tzinfo` subclass, and the "
"current date and time are converted to *tz*'s time zone.  In this case the "
"result is equivalent to ``tz.fromutc(datetime.utcnow().replace(tzinfo=tz))"
"``. See also :meth:`today`, :meth:`utcnow`."
msgstr ""

# 7d5eb4009f924e2a8e699b68fd660c2d
#: ../Doc/library/datetime.rst:664
msgid ""
"Return the current UTC date and time, with :attr:`tzinfo` ``None``. This is "
"like :meth:`now`, but returns the current UTC date and time, as a naive :"
"class:`.datetime` object. See also :meth:`now`."
msgstr ""

# 5dfaa66cdf2e496280a6592304b8dc14
#: ../Doc/library/datetime.rst:671
msgid ""
"Return the local date and time corresponding to the POSIX timestamp, such as "
"is returned by :func:`time.time`. If optional argument *tz* is ``None`` or "
"not specified, the timestamp is converted to the platform's local date and "
"time, and the returned :class:`.datetime` object is naive."
msgstr ""

#: ../Doc/library/datetime.rst:676
msgid ""
"Else *tz* must be an instance of a class :class:`tzinfo` subclass, and the "
"timestamp is converted to *tz*'s time zone.  In this case the result is "
"equivalent to ``tz.fromutc(datetime.utcfromtimestamp(timestamp).replace"
"(tzinfo=tz))``."
msgstr ""

# e759ea12b02541248a91712925e088f3
#: ../Doc/library/datetime.rst:681
msgid ""
":meth:`fromtimestamp` may raise :exc:`ValueError`, if the timestamp is out "
"of the range of values supported by the platform C :c:func:`localtime` or :c:"
"func:`gmtime` functions.  It's common for this to be restricted to years in "
"1970 through 2038. Note that on non-POSIX systems that include leap seconds "
"in their notion of a timestamp, leap seconds are ignored by :meth:"
"`fromtimestamp`, and then it's possible to have two timestamps differing by "
"a second that yield identical :class:`.datetime` objects. See also :meth:"
"`utcfromtimestamp`."
msgstr ""

# 16e9bc1ec1844f79b0076868bd480308
#: ../Doc/library/datetime.rst:692
msgid ""
"Return the UTC :class:`.datetime` corresponding to the POSIX timestamp, "
"with :attr:`tzinfo` ``None``. This may raise :exc:`ValueError`, if the "
"timestamp is out of the range of values supported by the platform C :c:func:"
"`gmtime` function. It's common for this to be restricted to years in 1970 "
"through 2038. See also :meth:`fromtimestamp`."
msgstr ""

# e97d20aaa67f44ba99343365eeda1fee
#: ../Doc/library/datetime.rst:701
msgid ""
"Return the :class:`.datetime` corresponding to the proleptic Gregorian "
"ordinal, where January 1 of year 1 has ordinal 1. :exc:`ValueError` is "
"raised unless ``1 <= ordinal <= datetime.max.toordinal()``.  The hour, "
"minute, second and microsecond of the result are all 0, and :attr:`tzinfo` "
"is ``None``."
msgstr ""

# a774105ab2604d85852456c91a34ebc1
#: ../Doc/library/datetime.rst:709
msgid ""
"Return a new :class:`.datetime` object whose date components are equal to "
"the given :class:`date` object's, and whose time components and :attr:"
"`tzinfo` attributes are equal to the given :class:`.time` object's. For any :"
"class:`.datetime` object *d*, ``d == datetime.combine(d.date(), d.timetz())"
"``.  If date is a :class:`.datetime` object, its time components and :attr:"
"`tzinfo` attributes are ignored."
msgstr ""

# cfbb33862a224fc4bc0b25b8d2ad02d6
#: ../Doc/library/datetime.rst:720
msgid ""
"Return a :class:`.datetime` corresponding to *date_string*, parsed according "
"to *format*.  This is equivalent to ``datetime(*(time.strptime(date_string, "
"format)[0:6]))``. :exc:`ValueError` is raised if the date_string and format "
"can't be parsed by :func:`time.strptime` or if it returns a value which "
"isn't a time tuple. See section :ref:`strftime-strptime-behavior`."
msgstr ""

# 779b82ef0fec4678acf82a0275b74c9c
#: ../Doc/library/datetime.rst:733
msgid ""
"The earliest representable :class:`.datetime`, ``datetime(MINYEAR, 1, 1, "
"tzinfo=None)``."
msgstr ""

# cdd3ba6245ca4fb082aa15e722e1dfc9
#: ../Doc/library/datetime.rst:739
msgid ""
"The latest representable :class:`.datetime`, ``datetime(MAXYEAR, 12, 31, 23, "
"59, 59, 999999, tzinfo=None)``."
msgstr ""

# 5a6638bf98e54a40902781a918ee91e0
#: ../Doc/library/datetime.rst:745
msgid ""
"The smallest possible difference between non-equal :class:`.datetime` "
"objects, ``timedelta(microseconds=1)``."
msgstr ""

#: ../Doc/library/datetime.rst:768 ../Doc/library/datetime.rst:1195
msgid "In ``range(24)``."
msgstr ""

#: ../Doc/library/datetime.rst:773 ../Doc/library/datetime.rst:778
#: ../Doc/library/datetime.rst:1200 ../Doc/library/datetime.rst:1205
msgid "In ``range(60)``."
msgstr ""

#: ../Doc/library/datetime.rst:783 ../Doc/library/datetime.rst:1210
msgid "In ``range(1000000)``."
msgstr ""

# 14c1e676b98b491c8bac26b42f02f13e
#: ../Doc/library/datetime.rst:788
msgid ""
"The object passed as the *tzinfo* argument to the :class:`.datetime` "
"constructor, or ``None`` if none was passed."
msgstr ""

#: ../Doc/library/datetime.rst:797
msgid "``datetime2 = datetime1 + timedelta``"
msgstr ""

#: ../Doc/library/datetime.rst:797 ../Doc/library/datetime.rst:1625
#: ../Doc/library/inspect.rst:57 ../Doc/library/posixfile.rst:128
#: ../Doc/library/posixfile.rst:160 ../Doc/library/posixfile.rst:163
#: ../Doc/library/stdtypes.rst:97 ../Doc/library/stdtypes.rst:165
#: ../Doc/library/stdtypes.rst:296 ../Doc/library/stdtypes.rst:721
#: ../Doc/library/stdtypes.rst:724 ../Doc/library/stdtypes.rst:1427
#: ../Doc/library/stdtypes.rst:1583 ../Doc/library/struct.rst:176
#: ../Doc/library/time.rst:289 ../Doc/library/webbrowser.rst:121
#: ../Doc/library/webbrowser.rst:123 ../Doc/library/webbrowser.rst:125
msgid "\\(1)"
msgstr ""

#: ../Doc/library/datetime.rst:799
msgid "``datetime2 = datetime1 - timedelta``"
msgstr ""

#: ../Doc/library/datetime.rst:799 ../Doc/library/datetime.rst:1644
#: ../Doc/library/posixfile.rst:166 ../Doc/library/stdtypes.rst:100
#: ../Doc/library/stdtypes.rst:310 ../Doc/library/stdtypes.rst:312
#: ../Doc/library/stdtypes.rst:730 ../Doc/library/stdtypes.rst:1431
#: ../Doc/library/stdtypes.rst:1433 ../Doc/library/stdtypes.rst:1589
#: ../Doc/library/time.rst:292 ../Doc/library/webbrowser.rst:141
msgid "\\(2)"
msgstr ""

#: ../Doc/library/datetime.rst:801
msgid "``timedelta = datetime1 - datetime2``"
msgstr ""

#: ../Doc/library/datetime.rst:803
msgid "``datetime1 < datetime2``"
msgstr ""

# cce6d50b2aac44c7ab9f3e9fe7da7ba6
#: ../Doc/library/datetime.rst:803
msgid "Compares :class:`.datetime` to :class:`.datetime`. (4)"
msgstr ""

# c2deccac987640d39a1997b027432339
#: ../Doc/library/datetime.rst:808
msgid ""
"datetime2 is a duration of timedelta removed from datetime1, moving forward "
"in time if ``timedelta.days`` > 0, or backward if ``timedelta.days`` < 0.  "
"The result has the same :attr:`tzinfo` attribute as the input datetime, and "
"datetime2 - datetime1 == timedelta after. :exc:`OverflowError` is raised if "
"datetime2.year would be smaller than :const:`MINYEAR` or larger than :const:"
"`MAXYEAR`. Note that no time zone adjustments are done even if the input is "
"an aware object."
msgstr ""

# cdbb5bac00334d35a12649522e08b307
#: ../Doc/library/datetime.rst:817
msgid ""
"Computes the datetime2 such that datetime2 + timedelta == datetime1. As for "
"addition, the result has the same :attr:`tzinfo` attribute as the input "
"datetime, and no time zone adjustments are done even if the input is aware. "
"This isn't quite equivalent to datetime1 + (-timedelta), because -timedelta "
"in isolation can overflow in cases where datetime1 - timedelta does not."
msgstr ""

# bdcb4aaab833446e88b9fb2dbe051534
#: ../Doc/library/datetime.rst:824
msgid ""
"Subtraction of a :class:`.datetime` from a :class:`.datetime` is defined "
"only if both operands are naive, or if both are aware.  If one is aware and "
"the other is naive, :exc:`TypeError` is raised."
msgstr ""

# d635f3fcdf0848afb25a4aa6f8f9c8f9
#: ../Doc/library/datetime.rst:828
msgid ""
"If both are naive, or both are aware and have the same :attr:`tzinfo` "
"attribute, the :attr:`tzinfo` attributes are ignored, and the result is a :"
"class:`timedelta` object *t* such that ``datetime2 + t == datetime1``.  No "
"time zone adjustments are done in this case."
msgstr ""

# a1d51b200c29424eb1a3d8a7dc45785c
#: ../Doc/library/datetime.rst:833
msgid ""
"If both are aware and have different :attr:`tzinfo` attributes, ``a-b`` acts "
"as if *a* and *b* were first converted to naive UTC datetimes first.  The "
"result is ``(a.replace(tzinfo=None) - a.utcoffset()) - (b.replace"
"(tzinfo=None) - b.utcoffset())`` except that the implementation never "
"overflows."
msgstr ""

#: ../Doc/library/datetime.rst:839
msgid ""
"*datetime1* is considered less than *datetime2* when *datetime1* precedes "
"*datetime2* in time."
msgstr ""

# 4d66962f5e1d44deba4c399c1c0484a6
#: ../Doc/library/datetime.rst:842
msgid ""
"If one comparand is naive and the other is aware, :exc:`TypeError` is "
"raised. If both comparands are aware, and have the same :attr:`tzinfo` "
"attribute, the common :attr:`tzinfo` attribute is ignored and the base "
"datetimes are compared.  If both comparands are aware and have different :"
"attr:`tzinfo` attributes, the comparands are first adjusted by subtracting "
"their UTC offsets (obtained from ``self.utcoffset()``)."
msgstr ""

# 91f3dc08328c452598544f7e0359f890
#: ../Doc/library/datetime.rst:851
msgid ""
"In order to stop comparison from falling back to the default scheme of "
"comparing object addresses, datetime comparison normally raises :exc:"
"`TypeError` if the other comparand isn't also a :class:`.datetime` object.  "
"However, ``NotImplemented`` is returned instead if the other comparand has "
"a :meth:`timetuple` attribute.  This hook gives other kinds of date objects "
"a chance at implementing mixed-type comparison.  If not, when a :class:`."
"datetime` object is compared to an object of a different type, :exc:"
"`TypeError` is raised unless the comparison is ``==`` or ``!=``.  The latter "
"cases return :const:`False` or :const:`True`, respectively."
msgstr ""

# 974fda744e5648d4b263dc452217f259
#: ../Doc/library/datetime.rst:861
msgid ""
":class:`.datetime` objects can be used as dictionary keys. In Boolean "
"contexts, all :class:`.datetime` objects are considered to be true."
msgstr ""

#: ../Doc/library/datetime.rst:868
msgid "Return :class:`date` object with same year, month and day."
msgstr ""

# 94f6439bedf842de873ff44662e7a1bc
#: ../Doc/library/datetime.rst:873
msgid ""
"Return :class:`.time` object with same hour, minute, second and "
"microsecond. :attr:`tzinfo` is ``None``.  See also method :meth:`timetz`."
msgstr ""

# 886b88ac262e4014b7908137c61b9f0e
#: ../Doc/library/datetime.rst:879
msgid ""
"Return :class:`.time` object with same hour, minute, second, microsecond, "
"and tzinfo attributes.  See also method :meth:`time`."
msgstr ""

# fcf474cc90df43f3a31a825d0732f97b
#: ../Doc/library/datetime.rst:885
msgid ""
"Return a datetime with the same attributes, except for those attributes "
"given new values by whichever keyword arguments are specified.  Note that "
"``tzinfo=None`` can be specified to create a naive datetime from an aware "
"datetime with no conversion of date and time data."
msgstr ""

# 6a0c46d2ead84c11a1faa1e5643227c8
#: ../Doc/library/datetime.rst:893
msgid ""
"Return a :class:`.datetime` object with new :attr:`tzinfo` attribute *tz*, "
"adjusting the date and time data so the result is the same UTC time as "
"*self*, but in *tz*'s local time."
msgstr ""

#: ../Doc/library/datetime.rst:897
msgid ""
"*tz* must be an instance of a :class:`tzinfo` subclass, and its :meth:"
"`utcoffset` and :meth:`dst` methods must not return ``None``.  *self* must "
"be aware (``self.tzinfo`` must not be ``None``, and ``self.utcoffset()`` "
"must not return ``None``)."
msgstr ""

# 1efe47cdab524ba7b4396b9afd45510b
#: ../Doc/library/datetime.rst:902
msgid ""
"If ``self.tzinfo`` is *tz*, ``self.astimezone(tz)`` is equal to *self*:  no "
"adjustment of date or time data is performed. Else the result is local time "
"in time zone *tz*, representing the same UTC time as *self*:  after ``astz = "
"dt.astimezone(tz)``, ``astz - astz.utcoffset()`` will usually have the same "
"date and time data as ``dt - dt.utcoffset()``. The discussion of class :"
"class:`tzinfo` explains the cases at Daylight Saving Time transition "
"boundaries where this cannot be achieved (an issue only if *tz* models both "
"standard and daylight time)."
msgstr ""

# c517501a07c54a8d9cb481bc37478232
#: ../Doc/library/datetime.rst:911
msgid ""
"If you merely want to attach a time zone object *tz* to a datetime *dt* "
"without adjustment of date and time data, use ``dt.replace(tzinfo=tz)``.  If "
"you merely want to remove the time zone object from an aware datetime *dt* "
"without conversion of date and time data, use ``dt.replace(tzinfo=None)``."
msgstr ""

#: ../Doc/library/datetime.rst:916
msgid ""
"Note that the default :meth:`tzinfo.fromutc` method can be overridden in a :"
"class:`tzinfo` subclass to affect the result returned by :meth:`astimezone`. "
"Ignoring error cases, :meth:`astimezone` acts like::"
msgstr ""

#: ../Doc/library/datetime.rst:931
msgid ""
"If :attr:`tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"utcoffset(self)``, and raises an exception if the latter doesn't return "
"``None``, or a :class:`timedelta` object representing a whole number of "
"minutes with magnitude less than one day."
msgstr ""

#: ../Doc/library/datetime.rst:939
msgid ""
"If :attr:`tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"dst(self)``, and raises an exception if the latter doesn't return ``None``, "
"or a :class:`timedelta` object representing a whole number of minutes with "
"magnitude less than one day."
msgstr ""

#: ../Doc/library/datetime.rst:947
msgid ""
"If :attr:`tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"tzname(self)``, raises an exception if the latter doesn't return ``None`` or "
"a string object,"
msgstr ""

# 67ac96445a584c0daeaa5387ccf74032
#: ../Doc/library/datetime.rst:954
msgid ""
"Return a :class:`time.struct_time` such as returned by :func:`time."
"localtime`. ``d.timetuple()`` is equivalent to ``time.struct_time((d.year, d."
"month, d.day, d.hour, d.minute, d.second, d.weekday(), yday, dst))``, where "
"``yday = d.toordinal() - date(d.year, 1, 1).toordinal() + 1`` is the day "
"number within the current year starting with ``1`` for January 1st. The :"
"attr:`tm_isdst` flag of the result is set according to the :meth:`dst` "
"method: :attr:`tzinfo` is ``None`` or :meth:`dst` returns ``None``, :attr:"
"`tm_isdst` is set to ``-1``; else if :meth:`dst` returns a non-zero value, :"
"attr:`tm_isdst` is set to ``1``; else :attr:`tm_isdst` is set to ``0``."
msgstr ""

# cf4f24fa12ba429fadf8001bf42a9ba0
#: ../Doc/library/datetime.rst:967
msgid ""
"If :class:`.datetime` instance *d* is naive, this is the same as ``d."
"timetuple()`` except that :attr:`tm_isdst` is forced to 0 regardless of what "
"``d.dst()`` returns.  DST is never in effect for a UTC time."
msgstr ""

# 16d9e7e85a4e412484e0cc5275e32700
#: ../Doc/library/datetime.rst:971
msgid ""
"If *d* is aware, *d* is normalized to UTC time, by subtracting ``d.utcoffset"
"()``, and a :class:`time.struct_time` for the normalized time is returned.  :"
"attr:`tm_isdst` is forced to 0. Note that the result's :attr:`tm_year` "
"member may be :const:`MINYEAR`\\ -1 or :const:`MAXYEAR`\\ +1, if *d*.year "
"was ``MINYEAR`` or ``MAXYEAR`` and UTC adjustment spills over a year "
"boundary."
msgstr ""

#: ../Doc/library/datetime.rst:981
msgid ""
"Return the proleptic Gregorian ordinal of the date.  The same as ``self.date"
"().toordinal()``."
msgstr ""

#: ../Doc/library/datetime.rst:987
msgid ""
"Return the day of the week as an integer, where Monday is 0 and Sunday is 6. "
"The same as ``self.date().weekday()``. See also :meth:`isoweekday`."
msgstr ""

#: ../Doc/library/datetime.rst:993
msgid ""
"Return the day of the week as an integer, where Monday is 1 and Sunday is 7. "
"The same as ``self.date().isoweekday()``. See also :meth:`weekday`, :meth:"
"`isocalendar`."
msgstr ""

#: ../Doc/library/datetime.rst:1000
msgid ""
"Return a 3-tuple, (ISO year, ISO week number, ISO weekday).  The same as "
"``self.date().isocalendar()``."
msgstr ""

#: ../Doc/library/datetime.rst:1006
msgid ""
"Return a string representing the date and time in ISO 8601 format, YYYY-MM-"
"DDTHH:MM:SS.mmmmmm or, if :attr:`microsecond` is 0, YYYY-MM-DDTHH:MM:SS"
msgstr ""

#: ../Doc/library/datetime.rst:1010
msgid ""
"If :meth:`utcoffset` does not return ``None``, a 6-character string is "
"appended, giving the UTC offset in (signed) hours and minutes: YYYY-MM-DDTHH:"
"MM:SS.mmmmmm+HH:MM or, if :attr:`microsecond` is 0 YYYY-MM-DDTHH:MM:SS+HH:MM"
msgstr ""

#: ../Doc/library/datetime.rst:1015
msgid ""
"The optional argument *sep* (default ``'T'``) is a one-character separator, "
"placed between the date and time portions of the result.  For example,"
msgstr ""

# 585911b752074dcfb647b523f762b5bc
#: ../Doc/library/datetime.rst:1028
msgid ""
"For a :class:`.datetime` instance *d*, ``str(d)`` is equivalent to ``d."
"isoformat(' ')``."
msgstr ""

# 2ff608e400d745e4adea4446fcbd7c12
#: ../Doc/library/datetime.rst:1034
msgid ""
"Return a string representing the date and time, for example ``datetime(2002, "
"12, 4, 20, 30, 40).ctime() == 'Wed Dec  4 20:30:40 2002'``. ``d.ctime()`` is "
"equivalent to ``time.ctime(time.mktime(d.timetuple()))`` on platforms where "
"the native C :c:func:`ctime` function (which :func:`time.ctime` invokes, but "
"which :meth:`datetime.ctime` does not invoke) conforms to the C standard."
msgstr ""

#: ../Doc/library/datetime.rst:1043
msgid ""
"Return a string representing the date and time, controlled by an explicit "
"format string.  See section :ref:`strftime-strptime-behavior`."
msgstr ""

#: ../Doc/library/datetime.rst:1047
msgid "Examples of working with datetime objects:"
msgstr ""

#: ../Doc/library/datetime.rst:1092
msgid "Using datetime with tzinfo:"
msgstr ""

#: ../Doc/library/datetime.rst:1152
msgid ":class:`time` Objects"
msgstr ""

#: ../Doc/library/datetime.rst:1154
msgid ""
"A time object represents a (local) time of day, independent of any "
"particular day, and subject to adjustment via a :class:`tzinfo` object."
msgstr ""

# 4ad662fdde0e40e09221844f50df2c07
#: ../Doc/library/datetime.rst:1159
msgid ""
"All arguments are optional.  *tzinfo* may be ``None``, or an instance of a :"
"class:`tzinfo` subclass.  The remaining arguments may be ints or longs, in "
"the following ranges:"
msgstr ""

#: ../Doc/library/datetime.rst:1166
msgid "``0 <= microsecond < 1000000``."
msgstr ""

#: ../Doc/library/datetime.rst:1168
msgid ""
"If an argument outside those ranges is given, :exc:`ValueError` is raised.  "
"All default to ``0`` except *tzinfo*, which defaults to :const:`None`."
msgstr ""

# 5c444d0542384ca39055a6f5a9c4cd37
#: ../Doc/library/datetime.rst:1176
msgid "The earliest representable :class:`.time`, ``time(0, 0, 0, 0)``."
msgstr ""

# 877bb74d225442769c1cbd2a9ed766c6
#: ../Doc/library/datetime.rst:1181
msgid "The latest representable :class:`.time`, ``time(23, 59, 59, 999999)``."
msgstr ""

# 0ae8460a4224440fa0b4df017b1162c4
#: ../Doc/library/datetime.rst:1186
msgid ""
"The smallest possible difference between non-equal :class:`.time` objects, "
"``timedelta(microseconds=1)``, although note that arithmetic on :class:`."
"time` objects is not supported."
msgstr ""

# bdc61a2086cb43a3b8b35159b648b8e0
#: ../Doc/library/datetime.rst:1215
msgid ""
"The object passed as the tzinfo argument to the :class:`.time` constructor, "
"or ``None`` if none was passed."
msgstr ""

# f581812e5597483a9044b8746ab3ab35
#: ../Doc/library/datetime.rst:1221
msgid ""
"comparison of :class:`.time` to :class:`.time`, where *a* is considered less "
"than *b* when *a* precedes *b* in time.  If one comparand is naive and the "
"other is aware, :exc:`TypeError` is raised.  If both comparands are aware, "
"and have the same :attr:`tzinfo` attribute, the common :attr:`tzinfo` "
"attribute is ignored and the base times are compared.  If both comparands "
"are aware and have different :attr:`tzinfo` attributes, the comparands are "
"first adjusted by subtracting their UTC offsets (obtained from ``self."
"utcoffset()``). In order to stop mixed-type comparisons from falling back to "
"the default comparison by object address, when a :class:`.time` object is "
"compared to an object of a different type, :exc:`TypeError` is raised unless "
"the comparison is ``==`` or ``!=``.  The latter cases return :const:`False` "
"or :const:`True`, respectively."
msgstr ""

#: ../Doc/library/datetime.rst:1233
msgid "hash, use as dict key"
msgstr ""

#: ../Doc/library/datetime.rst:1235
msgid "efficient pickling"
msgstr ""

# 7071e4480a8d484da1c77a3ef25245f5
#: ../Doc/library/datetime.rst:1237
msgid ""
"in Boolean contexts, a :class:`.time` object is considered to be true if and "
"only if, after converting it to minutes and subtracting :meth:`utcoffset` "
"(or ``0`` if that's ``None``), the result is non-zero."
msgstr ""

# 5ab0b5f75f654e2496fc07972d95224c
#: ../Doc/library/datetime.rst:1246
msgid ""
"Return a :class:`.time` with the same value, except for those attributes "
"given new values by whichever keyword arguments are specified.  Note that "
"``tzinfo=None`` can be specified to create a naive :class:`.time` from an "
"aware :class:`.time`, without conversion of the time data."
msgstr ""

#: ../Doc/library/datetime.rst:1254
msgid ""
"Return a string representing the time in ISO 8601 format, HH:MM:SS.mmmmmm "
"or, if self.microsecond is 0, HH:MM:SS If :meth:`utcoffset` does not return "
"``None``, a 6-character string is appended, giving the UTC offset in "
"(signed) hours and minutes: HH:MM:SS.mmmmmm+HH:MM or, if self.microsecond is "
"0, HH:MM:SS+HH:MM"
msgstr ""

#: ../Doc/library/datetime.rst:1262
msgid "For a time *t*, ``str(t)`` is equivalent to ``t.isoformat()``."
msgstr ""

#: ../Doc/library/datetime.rst:1267
msgid ""
"Return a string representing the time, controlled by an explicit format "
"string. See section :ref:`strftime-strptime-behavior`."
msgstr ""

#: ../Doc/library/datetime.rst:1273
msgid ""
"If :attr:`tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"utcoffset(None)``, and raises an exception if the latter doesn't return "
"``None`` or a :class:`timedelta` object representing a whole number of "
"minutes with magnitude less than one day."
msgstr ""

#: ../Doc/library/datetime.rst:1281
msgid ""
"If :attr:`tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"dst(None)``, and raises an exception if the latter doesn't return ``None``, "
"or a :class:`timedelta` object representing a whole number of minutes with "
"magnitude less than one day."
msgstr ""

#: ../Doc/library/datetime.rst:1289
msgid ""
"If :attr:`tzinfo` is ``None``, returns ``None``, else returns ``self.tzinfo."
"tzname(None)``, or raises an exception if the latter doesn't return ``None`` "
"or a string object."
msgstr ""

#: ../Doc/library/datetime.rst:1322
msgid ":class:`tzinfo` Objects"
msgstr ""

# f746bebbc7cc4ea3a679caca2a4bcece
#: ../Doc/library/datetime.rst:1324
msgid ""
":class:`tzinfo` is an abstract base class, meaning that this class should "
"not be instantiated directly.  You need to derive a concrete subclass, and "
"(at least) supply implementations of the standard :class:`tzinfo` methods "
"needed by the :class:`.datetime` methods you use.  The :mod:`datetime` "
"module does not supply any concrete subclasses of :class:`tzinfo`."
msgstr ""

# 9a9979df750c4f57b863decb69d46b53
#: ../Doc/library/datetime.rst:1330
msgid ""
"An instance of (a concrete subclass of) :class:`tzinfo` can be passed to the "
"constructors for :class:`.datetime` and :class:`.time` objects. The latter "
"objects view their attributes as being in local time, and the :class:"
"`tzinfo` object supports methods revealing offset of local time from UTC, "
"the name of the time zone, and DST offset, all relative to a date or time "
"object passed to them."
msgstr ""

#: ../Doc/library/datetime.rst:1336
msgid ""
"Special requirement for pickling:  A :class:`tzinfo` subclass must have an :"
"meth:`__init__` method that can be called with no arguments, else it can be "
"pickled but possibly not unpickled again.  This is a technical requirement "
"that may be relaxed in the future."
msgstr ""

#: ../Doc/library/datetime.rst:1341
msgid ""
"A concrete subclass of :class:`tzinfo` may need to implement the following "
"methods.  Exactly which methods are needed depends on the uses made of "
"aware :mod:`datetime` objects.  If in doubt, simply implement all of them."
msgstr ""

#: ../Doc/library/datetime.rst:1348
msgid ""
"Return offset of local time from UTC, in minutes east of UTC.  If local time "
"is west of UTC, this should be negative.  Note that this is intended to be "
"the total offset from UTC; for example, if a :class:`tzinfo` object "
"represents both time zone and DST adjustments, :meth:`utcoffset` should "
"return their sum.  If the UTC offset isn't known, return ``None``.  Else the "
"value returned must be a :class:`timedelta` object specifying a whole number "
"of minutes in the range -1439 to 1439 inclusive (1440 = 24\\*60; the "
"magnitude of the offset must be less than one day).  Most implementations "
"of :meth:`utcoffset` will probably look like one of these two::"
msgstr ""

#: ../Doc/library/datetime.rst:1361
msgid ""
"If :meth:`utcoffset` does not return ``None``, :meth:`dst` should not return "
"``None`` either."
msgstr ""

#: ../Doc/library/datetime.rst:1364
msgid ""
"The default implementation of :meth:`utcoffset` raises :exc:"
"`NotImplementedError`."
msgstr ""

# ab33bb6a35d940b991593f6acca44300
#: ../Doc/library/datetime.rst:1370
msgid ""
"Return the daylight saving time (DST) adjustment, in minutes east of UTC, or "
"``None`` if DST information isn't known.  Return ``timedelta(0)`` if DST is "
"not in effect. If DST is in effect, return the offset as a :class:"
"`timedelta` object (see :meth:`utcoffset` for details). Note that DST "
"offset, if applicable, has already been added to the UTC offset returned by :"
"meth:`utcoffset`, so there's no need to consult :meth:`dst` unless you're "
"interested in obtaining DST info separately.  For example, :meth:`datetime."
"timetuple` calls its :attr:`tzinfo` attribute's :meth:`dst` method to "
"determine how the :attr:`tm_isdst` flag should be set, and :meth:`tzinfo."
"fromutc` calls :meth:`dst` to account for DST changes when crossing time "
"zones."
msgstr ""

#: ../Doc/library/datetime.rst:1381
msgid ""
"An instance *tz* of a :class:`tzinfo` subclass that models both standard and "
"daylight times must be consistent in this sense:"
msgstr ""

#: ../Doc/library/datetime.rst:1384
msgid "``tz.utcoffset(dt) - tz.dst(dt)``"
msgstr ""

# a028943978a849ed9f252780c819d8aa
#: ../Doc/library/datetime.rst:1386
msgid ""
"must return the same result for every :class:`.datetime` *dt* with ``dt."
"tzinfo == tz``  For sane :class:`tzinfo` subclasses, this expression yields "
"the time zone's \"standard offset\", which should not depend on the date or "
"the time, but only on geographic location.  The implementation of :meth:"
"`datetime.astimezone` relies on this, but cannot detect violations; it's the "
"programmer's responsibility to ensure it.  If a :class:`tzinfo` subclass "
"cannot guarantee this, it may be able to override the default implementation "
"of :meth:`tzinfo.fromutc` to work correctly with :meth:`astimezone` "
"regardless."
msgstr ""

#: ../Doc/library/datetime.rst:1395
msgid ""
"Most implementations of :meth:`dst` will probably look like one of these "
"two::"
msgstr ""

#: ../Doc/library/datetime.rst:1401
msgid "or ::"
msgstr ""

#: ../Doc/library/datetime.rst:1413
msgid ""
"The default implementation of :meth:`dst` raises :exc:`NotImplementedError`."
msgstr ""

# badb909c5df74412942d11d4c1bd9cda
#: ../Doc/library/datetime.rst:1418
msgid ""
"Return the time zone name corresponding to the :class:`.datetime` object "
"*dt*, as a string. Nothing about string names is defined by the :mod:"
"`datetime` module, and there's no requirement that it mean anything in "
"particular.  For example, \"GMT\", \"UTC\", \"-500\", \"-5:00\", \"EDT\", "
"\"US/Eastern\", \"America/New York\" are all valid replies.  Return ``None`` "
"if a string name isn't known.  Note that this is a method rather than a "
"fixed string primarily because some :class:`tzinfo` subclasses will wish to "
"return different names depending on the specific value of *dt* passed, "
"especially if the :class:`tzinfo` class is accounting for daylight time."
msgstr ""

#: ../Doc/library/datetime.rst:1428
msgid ""
"The default implementation of :meth:`tzname` raises :exc:"
"`NotImplementedError`."
msgstr ""

# 562de33ba309452eb1640d032c43df14
#: ../Doc/library/datetime.rst:1431
msgid ""
"These methods are called by a :class:`.datetime` or :class:`.time` object, "
"in response to their methods of the same names.  A :class:`.datetime` object "
"passes itself as the argument, and a :class:`.time` object passes ``None`` "
"as the argument.  A :class:`tzinfo` subclass's methods should therefore be "
"prepared to accept a *dt* argument of ``None``, or of class :class:`."
"datetime`."
msgstr ""

#: ../Doc/library/datetime.rst:1437
msgid ""
"When ``None`` is passed, it's up to the class designer to decide the best "
"response.  For example, returning ``None`` is appropriate if the class "
"wishes to say that time objects don't participate in the :class:`tzinfo` "
"protocols.  It may be more useful for ``utcoffset(None)`` to return the "
"standard UTC offset, as there is no other convention for discovering the "
"standard offset."
msgstr ""

# 4325cbc8372e43b4ab1fb55e1062ad18
#: ../Doc/library/datetime.rst:1443
msgid ""
"When a :class:`.datetime` object is passed in response to a :class:`."
"datetime` method, ``dt.tzinfo`` is the same object as *self*.  :class:"
"`tzinfo` methods can rely on this, unless user code calls :class:`tzinfo` "
"methods directly.  The intent is that the :class:`tzinfo` methods interpret "
"*dt* as being in local time, and not need worry about objects in other "
"timezones."
msgstr ""

#: ../Doc/library/datetime.rst:1449
msgid ""
"There is one more :class:`tzinfo` method that a subclass may wish to "
"override:"
msgstr ""

# 74e1763c089c4268aebc1f2d1425573d
#: ../Doc/library/datetime.rst:1454
msgid ""
"This is called from the default :class:`datetime.astimezone()` "
"implementation.  When called from that, ``dt.tzinfo`` is *self*, and *dt*'s "
"date and time data are to be viewed as expressing a UTC time.  The purpose "
"of :meth:`fromutc` is to adjust the date and time data, returning an "
"equivalent datetime in *self*'s local time."
msgstr ""

#: ../Doc/library/datetime.rst:1460
msgid ""
"Most :class:`tzinfo` subclasses should be able to inherit the default :meth:"
"`fromutc` implementation without problems.  It's strong enough to handle "
"fixed-offset time zones, and time zones accounting for both standard and "
"daylight time, and the latter even if the DST transition times differ in "
"different years.  An example of a time zone the default :meth:`fromutc` "
"implementation may not handle correctly in all cases is one where the "
"standard offset (from UTC) depends on the specific date and time passed, "
"which can happen for political reasons. The default implementations of :meth:"
"`astimezone` and :meth:`fromutc` may not produce the result you want if the "
"result is one of the hours straddling the moment the standard offset changes."
msgstr ""

#: ../Doc/library/datetime.rst:1471
msgid ""
"Skipping code for error cases, the default :meth:`fromutc` implementation "
"acts like::"
msgstr ""

#: ../Doc/library/datetime.rst:1489
msgid "Example :class:`tzinfo` classes:"
msgstr ""

#: ../Doc/library/datetime.rst:1494
msgid ""
"Note that there are unavoidable subtleties twice per year in a :class:"
"`tzinfo` subclass accounting for both standard and daylight time, at the DST "
"transition points.  For concreteness, consider US Eastern (UTC -0500), where "
"EDT begins the minute after 1:59 (EST) on the second Sunday in March, and "
"ends the minute after 1:59 (EDT) on the first Sunday in November::"
msgstr ""

#: ../Doc/library/datetime.rst:1508
msgid ""
"When DST starts (the \"start\" line), the local wall clock leaps from 1:59 "
"to 3:00.  A wall time of the form 2:MM doesn't really make sense on that "
"day, so ``astimezone(Eastern)`` won't deliver a result with ``hour == 2`` on "
"the day DST begins.  In order for :meth:`astimezone` to make this guarantee, "
"the :meth:`rzinfo.dst` method must consider times in the \"missing hour\" (2:"
"MM for Eastern) to be in daylight time."
msgstr ""

#: ../Doc/library/datetime.rst:1515
msgid ""
"When DST ends (the \"end\" line), there's a potentially worse problem: "
"there's an hour that can't be spelled unambiguously in local wall time: the "
"last hour of daylight time.  In Eastern, that's times of the form 5:MM UTC "
"on the day daylight time ends.  The local wall clock leaps from 1:59 "
"(daylight time) back to 1:00 (standard time) again. Local times of the form "
"1:MM are ambiguous. :meth:`astimezone` mimics the local clock's behavior by "
"mapping two adjacent UTC hours into the same local hour then.  In the "
"Eastern example, UTC times of the form 5:MM and 6:MM both map to 1:MM when "
"converted to Eastern.  In order for :meth:`astimezone` to make this "
"guarantee, the :meth:`tzinfo.dst` method must consider times in the "
"\"repeated hour\" to be in standard time.  This is easily arranged, as in "
"the example, by expressing DST switch times in the time zone's standard "
"local time."
msgstr ""

# fb491e930d264b28b9781222659de924
#: ../Doc/library/datetime.rst:1528
msgid ""
"Applications that can't bear such ambiguities should avoid using hybrid :"
"class:`tzinfo` subclasses; there are no ambiguities when using UTC, or any "
"other fixed-offset :class:`tzinfo` subclass (such as a class representing "
"only EST (fixed offset -5 hours), or only EDT (fixed offset -4 hours))."
msgstr ""

# ad16e7086bd947ca8e578badea3c54db
#: ../Doc/library/datetime.rst:1536
msgid ""
"The standard library has no :class:`tzinfo` instances except for UTC, but "
"there exists a third-party library which brings the *IANA timezone database* "
"(also known as the Olson database) to Python: *pytz*."
msgstr ""

# 56ace68820b24c378d3d769faf3660d4
#: ../Doc/library/datetime.rst:1540
msgid "*pytz* contains up-to-date information and its usage is recommended."
msgstr ""

# 28fbaa6f8caa4bcfaf8ce52b08c6db5a
#: ../Doc/library/datetime.rst:1543
msgid ""
"The Time Zone Database (often called tz or zoneinfo) contains code and data "
"that represent the history of local time for many representative locations "
"around the globe. It is updated periodically to reflect changes made by "
"political bodies to time zone boundaries, UTC offsets, and daylight-saving "
"rules."
msgstr ""

#: ../Doc/library/datetime.rst:1552
msgid ":meth:`strftime` and :meth:`strptime` Behavior"
msgstr ""

# 16ec87d9d912493eb22be52bcc257a29
#: ../Doc/library/datetime.rst:1554
msgid ""
":class:`date`, :class:`.datetime`, and :class:`.time` objects all support a "
"``strftime(format)`` method, to create a string representing the time under "
"the control of an explicit format string.  Broadly speaking, ``d.strftime"
"(fmt)`` acts like the :mod:`time` module's ``time.strftime(fmt, d.timetuple"
"())`` although not all objects support a :meth:`timetuple` method."
msgstr ""

# ba0d69ce159049e480ce27493c9f6c0a
#: ../Doc/library/datetime.rst:1560
msgid ""
"Conversely, the :meth:`datetime.strptime` class method creates a :class:`."
"datetime` object from a string representing a date and time and a "
"corresponding format string. ``datetime.strptime(date_string, format)`` is "
"equivalent to ``datetime(*(time.strptime(date_string, format)[0:6]))``."
msgstr ""

# 01885da6a83b4742a950f84f423a1e57
#: ../Doc/library/datetime.rst:1565
msgid ""
"For :class:`.time` objects, the format codes for year, month, and day should "
"not be used, as time objects have no such values.  If they're used anyway, "
"``1900`` is substituted for the year, and ``1`` for the month and day."
msgstr ""

#: ../Doc/library/datetime.rst:1569
msgid ""
"For :class:`date` objects, the format codes for hours, minutes, seconds, and "
"microseconds should not be used, as :class:`date` objects have no such "
"values.  If they're used anyway, ``0`` is substituted for them."
msgstr ""

#: ../Doc/library/datetime.rst:1578
msgid ""
"For a naive object, the ``%z`` and ``%Z`` format codes are replaced by empty "
"strings."
msgstr ""

#: ../Doc/library/datetime.rst:1581
msgid "For an aware object:"
msgstr ""

#: ../Doc/library/datetime.rst:1584
msgid ""
":meth:`utcoffset` is transformed into a 5-character string of the form +HHMM "
"or -HHMM, where HH is a 2-digit string giving the number of UTC offset "
"hours, and MM is a 2-digit string giving the number of UTC offset minutes.  "
"For example, if :meth:`utcoffset` returns ``timedelta(hours=-3, minutes=-30)"
"``, ``%z`` is replaced with the string ``'-0330'``."
msgstr ""

#: ../Doc/library/datetime.rst:1591
msgid ""
"If :meth:`tzname` returns ``None``, ``%Z`` is replaced by an empty string. "
"Otherwise ``%Z`` is replaced by the returned value, which must be a string."
msgstr ""

#: ../Doc/library/datetime.rst:1594
msgid ""
"The full set of format codes supported varies across platforms, because "
"Python calls the platform C library's :func:`strftime` function, and "
"platform variations are common."
msgstr ""

#: ../Doc/library/datetime.rst:1598
msgid ""
"The following is a list of all the format codes that the C standard (1989 "
"version) requires, and these work on all platforms with a standard C "
"implementation.  Note that the 1999 version of the C standard added "
"additional format codes."
msgstr ""

#: ../Doc/library/datetime.rst:1603
msgid ""
"The exact range of years for which :meth:`strftime` works also varies across "
"platforms.  Regardless of platform, years before 1900 cannot be used."
msgstr ""

#: ../Doc/library/datetime.rst:1607 ../Doc/library/time.rst:256
msgid "Directive"
msgstr ""

#: ../Doc/library/datetime.rst:1609 ../Doc/library/time.rst:258
msgid "``%a``"
msgstr ""

#: ../Doc/library/datetime.rst:1609 ../Doc/library/time.rst:258
msgid "Locale's abbreviated weekday name."
msgstr ""

#: ../Doc/library/datetime.rst:1612 ../Doc/library/time.rst:261
msgid "``%A``"
msgstr ""

#: ../Doc/library/datetime.rst:1612 ../Doc/library/time.rst:261
msgid "Locale's full weekday name."
msgstr ""

#: ../Doc/library/datetime.rst:1614 ../Doc/library/time.rst:263
msgid "``%b``"
msgstr ""

#: ../Doc/library/datetime.rst:1614 ../Doc/library/time.rst:263
msgid "Locale's abbreviated month name."
msgstr ""

#: ../Doc/library/datetime.rst:1617 ../Doc/library/time.rst:266
msgid "``%B``"
msgstr ""

#: ../Doc/library/datetime.rst:1617 ../Doc/library/time.rst:266
msgid "Locale's full month name."
msgstr ""

#: ../Doc/library/datetime.rst:1619 ../Doc/library/re.rst:1051
#: ../Doc/library/time.rst:268
msgid "``%c``"
msgstr ""

#: ../Doc/library/datetime.rst:1619 ../Doc/library/time.rst:268
msgid "Locale's appropriate date and time representation."
msgstr ""

#: ../Doc/library/datetime.rst:1622 ../Doc/library/re.rst:1055
#: ../Doc/library/time.rst:271
msgid "``%d``"
msgstr ""

#: ../Doc/library/datetime.rst:1622 ../Doc/library/time.rst:271
msgid "Day of the month as a decimal number [01,31]."
msgstr ""

#: ../Doc/library/datetime.rst:1625
msgid "``%f``"
msgstr ""

#: ../Doc/library/datetime.rst:1625
msgid "Microsecond as a decimal number [0,999999], zero-padded on the left"
msgstr ""

#: ../Doc/library/datetime.rst:1629 ../Doc/library/time.rst:274
msgid "``%H``"
msgstr ""

#: ../Doc/library/datetime.rst:1629 ../Doc/library/time.rst:274
msgid "Hour (24-hour clock) as a decimal number [00,23]."
msgstr ""

#: ../Doc/library/datetime.rst:1632 ../Doc/library/time.rst:277
msgid "``%I``"
msgstr ""

#: ../Doc/library/datetime.rst:1632 ../Doc/library/time.rst:277
msgid "Hour (12-hour clock) as a decimal number [01,12]."
msgstr ""

#: ../Doc/library/datetime.rst:1635 ../Doc/library/time.rst:280
msgid "``%j``"
msgstr ""

#: ../Doc/library/datetime.rst:1635 ../Doc/library/time.rst:280
msgid "Day of the year as a decimal number [001,366]."
msgstr ""

#: ../Doc/library/datetime.rst:1638 ../Doc/library/time.rst:283
msgid "``%m``"
msgstr ""

#: ../Doc/library/datetime.rst:1638 ../Doc/library/time.rst:283
msgid "Month as a decimal number [01,12]."
msgstr ""

#: ../Doc/library/datetime.rst:1641 ../Doc/library/time.rst:286
msgid "``%M``"
msgstr ""

#: ../Doc/library/datetime.rst:1641 ../Doc/library/time.rst:286
msgid "Minute as a decimal number [00,59]."
msgstr ""

#: ../Doc/library/datetime.rst:1644 ../Doc/library/time.rst:289
msgid "``%p``"
msgstr ""

#: ../Doc/library/datetime.rst:1644 ../Doc/library/time.rst:289
msgid "Locale's equivalent of either AM or PM."
msgstr ""

#: ../Doc/library/datetime.rst:1647 ../Doc/library/time.rst:292
msgid "``%S``"
msgstr ""

#: ../Doc/library/datetime.rst:1647 ../Doc/library/time.rst:292
msgid "Second as a decimal number [00,61]."
msgstr ""

#: ../Doc/library/datetime.rst:1650 ../Doc/library/time.rst:295
msgid "``%U``"
msgstr ""

#: ../Doc/library/datetime.rst:1650 ../Doc/library/time.rst:295
msgid ""
"Week number of the year (Sunday as the first day of the week) as a decimal "
"number [00,53].  All days in a new year preceding the first Sunday are "
"considered to be in week 0."
msgstr ""

#: ../Doc/library/datetime.rst:1650 ../Doc/library/datetime.rst:1661
#: ../Doc/library/stdtypes.rst:301 ../Doc/library/stdtypes.rst:1443
#: ../Doc/library/stdtypes.rst:1447 ../Doc/library/stdtypes.rst:1598
#: ../Doc/library/stdtypes.rst:1607 ../Doc/library/struct.rst:195
#: ../Doc/library/struct.rst:197
msgid "\\(4)"
msgstr ""

#: ../Doc/library/datetime.rst:1658 ../Doc/library/time.rst:303
msgid "``%w``"
msgstr ""

#: ../Doc/library/datetime.rst:1658 ../Doc/library/time.rst:303
msgid "Weekday as a decimal number [0(Sunday),6]."
msgstr ""

#: ../Doc/library/datetime.rst:1661 ../Doc/library/time.rst:306
msgid "``%W``"
msgstr ""

#: ../Doc/library/datetime.rst:1661 ../Doc/library/time.rst:306
msgid ""
"Week number of the year (Monday as the first day of the week) as a decimal "
"number [00,53].  All days in a new year preceding the first Monday are "
"considered to be in week 0."
msgstr ""

#: ../Doc/library/datetime.rst:1669 ../Doc/library/time.rst:314
msgid "``%x``"
msgstr ""

#: ../Doc/library/datetime.rst:1669 ../Doc/library/time.rst:314
msgid "Locale's appropriate date representation."
msgstr ""

#: ../Doc/library/datetime.rst:1672 ../Doc/library/time.rst:317
msgid "``%X``"
msgstr ""

#: ../Doc/library/datetime.rst:1672 ../Doc/library/time.rst:317
msgid "Locale's appropriate time representation."
msgstr ""

#: ../Doc/library/datetime.rst:1675 ../Doc/library/time.rst:320
msgid "``%y``"
msgstr ""

#: ../Doc/library/datetime.rst:1675 ../Doc/library/time.rst:320
msgid "Year without century as a decimal number [00,99]."
msgstr ""

#: ../Doc/library/datetime.rst:1678 ../Doc/library/time.rst:323
msgid "``%Y``"
msgstr ""

#: ../Doc/library/datetime.rst:1678 ../Doc/library/time.rst:323
msgid "Year with century as a decimal number."
msgstr ""

#: ../Doc/library/datetime.rst:1681
msgid "``%z``"
msgstr ""

#: ../Doc/library/datetime.rst:1681
msgid ""
"UTC offset in the form +HHMM or -HHMM (empty string if the the object is "
"naive)."
msgstr ""

#: ../Doc/library/datetime.rst:1681 ../Doc/library/stdtypes.rst:1454
#: ../Doc/library/stdtypes.rst:1602
msgid "\\(5)"
msgstr ""

#: ../Doc/library/datetime.rst:1685 ../Doc/library/time.rst:326
msgid "``%Z``"
msgstr ""

#: ../Doc/library/datetime.rst:1685
msgid "Time zone name (empty string if the object is naive)."
msgstr ""

#: ../Doc/library/datetime.rst:1688 ../Doc/library/time.rst:329
msgid "``%%``"
msgstr ""

#: ../Doc/library/datetime.rst:1688 ../Doc/library/time.rst:329
msgid "A literal ``'%'`` character."
msgstr ""

#: ../Doc/library/datetime.rst:1694
msgid ""
"When used with the :meth:`strptime` method, the ``%f`` directive accepts "
"from one to six digits and zero pads on the right.  ``%f`` is an extension "
"to the set of format characters in the C standard (but implemented "
"separately in datetime objects, and therefore always available)."
msgstr ""

#: ../Doc/library/datetime.rst:1701
msgid ""
"When used with the :meth:`strptime` method, the ``%p`` directive only "
"affects the output hour field if the ``%I`` directive is used to parse the "
"hour."
msgstr ""

#: ../Doc/library/datetime.rst:1705
msgid ""
"The range really is ``0`` to ``61``; according to the Posix standard this "
"accounts for leap seconds and the (very rare) double leap seconds. The :mod:"
"`time` module may produce and does accept leap seconds since it is based on "
"the Posix standard, but the :mod:`datetime` module does not accept leap "
"seconds in :meth:`strptime` input nor will it produce them in :func:"
"`strftime` output."
msgstr ""

#: ../Doc/library/datetime.rst:1713
msgid ""
"When used with the :meth:`strptime` method, ``%U`` and ``%W`` are only used "
"in calculations when the day of the week and the year are specified."
msgstr ""

#: ../Doc/library/datetime.rst:1717
msgid ""
"For example, if :meth:`utcoffset` returns ``timedelta(hours=-3, minutes=-30)"
"``, ``%z`` is replaced with the string ``'-0330'``."
msgstr ""

# 674b61c05224406e8e71dc0114ee048e
#: ../Doc/library/datetime.rst:1723
msgid "If, that is, we ignore the effects of Relativity"
msgstr ""

# a7043ab941d8498cbb8a54b53863c38b
#: ../Doc/library/dbhash.rst:2
msgid ":mod:`dbhash` --- DBM-style interface to the BSD database library"
msgstr ""

# b0e0a6e15c854864a76efb29b56f0e68
#: ../Doc/library/dbhash.rst:13
msgid ""
"The :mod:`dbhash` module provides a function to open databases using the BSD "
"``db`` library.  This module mirrors the interface of the other Python "
"database modules that provide access to DBM-style databases.  The :mod:"
"`bsddb` module is required  to use :mod:`dbhash`."
msgstr ""

# 6f31f20199dc4d628cba3bd69a854c48
#: ../Doc/library/dbhash.rst:18
msgid "This module provides an exception and a function:"
msgstr ""

# 742583719d594f1f98c00281a89bf483
#: ../Doc/library/dbhash.rst:23
msgid ""
"Exception raised on database errors other than :exc:`KeyError`.  It is a "
"synonym for :exc:`bsddb.error`."
msgstr ""

# e29e4c695ecc4502a74a39c9501f779b
#: ../Doc/library/dbhash.rst:29
msgid ""
"Open a ``db`` database and return the database object.  The *path* argument "
"is the name of the database file."
msgstr ""

# 0ed0b171e39d43e58373342db1db2a7a
#: ../Doc/library/dbhash.rst:32
msgid "The *flag* argument can be:"
msgstr ""

# 4a5e671ecccb49b58956deb20223d88d
#: ../Doc/library/dbhash.rst:50
msgid ""
"For platforms on which the BSD ``db`` library supports locking, an ``'l'`` "
"can be appended to indicate that locking should be used."
msgstr ""

# 7b7e1604e28b48bf870174b3d8e06e82
#: ../Doc/library/dbhash.rst:53
msgid ""
"The optional *mode* parameter is used to indicate the Unix permission bits "
"that should be set if a new database must be created; this will be masked by "
"the current umask value for the process."
msgstr ""

# fa051f3f10b44b2b8c416e746732a233
# 4151a98c61024a6cb1ca79892e5c4d28
# 117ba312791349c78e12ccb95fe13d32
# 4f9dadc77a934c6ba4af4e84655e6209
# c92cb60c73c04e118012a9a41589e461
#: ../Doc/library/dbhash.rst:61 ../Doc/library/dbm.rst:71
#: ../Doc/library/dumbdbm.rst:56 ../Doc/library/gdbm.rst:122
#: ../Doc/library/shelve.rst:183
msgid "Generic interface to ``dbm``\\ -style databases."
msgstr ""

# 28497fecf2514907aa524a1e4d0e2f13
#: ../Doc/library/dbhash.rst:64
msgid "Lower-level interface to the BSD ``db`` library."
msgstr ""

#: ../Doc/library/dbhash.rst:73 ../Doc/library/msilib.rst:133
msgid "Database Objects"
msgstr ""

# 9304353a09804eecb798e0c201dc4ffa
#: ../Doc/library/dbhash.rst:75
msgid ""
"The database objects returned by :func:`.open` provide the methods  common "
"to all the DBM-style databases and mapping objects.  The following methods "
"are available in addition to the standard methods."
msgstr ""

# 019b0334433a472f9c47782c1067cf7d
#: ../Doc/library/dbhash.rst:82
msgid ""
"It's possible to loop over every key/value pair in the database using this "
"method and the :meth:`!next` method.  The traversal is ordered by the "
"databases internal hash values, and won't be sorted by the key values.  This "
"method returns the starting key."
msgstr ""

# 0c81244d1c654b0a9e48da756e76b7a5
#: ../Doc/library/dbhash.rst:90
msgid ""
"Return the last key/value pair in a database traversal.  This may be used to "
"begin a reverse-order traversal; see :meth:`previous`."
msgstr ""

# 34b38fbdd2174ece8322106c3213c694
#: ../Doc/library/dbhash.rst:96
msgid ""
"Returns the key next key/value pair in a database traversal.  The following "
"code prints every key in the database ``db``, without having to create a "
"list in memory that contains them all::"
msgstr ""

# 7d40289825e5463998ee948b27983c95
#: ../Doc/library/dbhash.rst:107
msgid ""
"Returns the previous key/value pair in a forward-traversal of the database. "
"In conjunction with :meth:`last`, this may be used to implement a reverse-"
"order traversal."
msgstr ""

# 28b218bbac8e403e9498d7c523a15a75
#: ../Doc/library/dbhash.rst:114
msgid "This method forces any unwritten data to be written to the disk."
msgstr ""

# 97bf6e430fce4b02af2329345287db3e
#: ../Doc/library/dbm.rst:2
msgid ":mod:`dbm` --- Simple \"database\" interface"
msgstr ""

# bb992f13f75e4baebdbcb2677deeb907
#: ../Doc/library/dbm.rst:9
msgid ""
"The :mod:`dbm` module has been renamed to :mod:`dbm.ndbm` in Python 3.  The :"
"term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

# b61911a2c3af4224b2d98807426142e6
#: ../Doc/library/dbm.rst:14
msgid ""
"The :mod:`dbm` module provides an interface to the Unix \"(n)dbm\" library.  "
"Dbm objects behave like mappings (dictionaries), except that keys and values "
"are always strings. Printing a dbm object doesn't print the keys and values, "
"and the :meth:`items` and :meth:`values` methods are not supported."
msgstr ""

#: ../Doc/library/dbm.rst:19
msgid ""
"This module can be used with the \"classic\" ndbm interface, the BSD DB "
"compatibility interface, or the GNU GDBM compatibility interface. On Unix, "
"the :program:`configure` script will attempt to locate the appropriate "
"header file to simplify building this module."
msgstr ""

#: ../Doc/library/dbm.rst:24 ../Doc/library/dumbdbm.rst:26
#: ../Doc/library/select.rst:17
msgid "The module defines the following:"
msgstr ""

# 95bf3e505d5245a5a2d23c9a24f94231
#: ../Doc/library/dbm.rst:29
msgid ""
"Raised on dbm-specific errors, such as I/O errors. :exc:`KeyError` is raised "
"for general mapping errors like specifying an incorrect key."
msgstr ""

#: ../Doc/library/dbm.rst:35
msgid "Name of the ``ndbm`` implementation library used."
msgstr ""

# 552182226a394ba8a12e6b44efe95345
#: ../Doc/library/dbm.rst:40
msgid ""
"Open a dbm database and return a dbm object.  The *filename* argument is the "
"name of the database file (without the :file:`.dir` or :file:`.pag` "
"extensions; note that the BSD DB implementation of the interface will append "
"the extension :file:`.db` and only create one file)."
msgstr ""

# d690a5030b6e46d3b6b1fc8d65488ef6
# 338cb134afc64335ab5171bdd5d98f32
#: ../Doc/library/dbm.rst:74 ../Doc/library/dumbdbm.rst:62
msgid "Similar interface to the GNU GDBM library."
msgstr ""

#: ../Doc/library/debug.rst:3
msgid "Debugging and Profiling"
msgstr ""

#: ../Doc/library/debug.rst:5
msgid ""
"These libraries help you with Python development: the debugger enables you "
"to step through code, analyze stack frames and set breakpoints etc., and the "
"profilers run code and give you a detailed breakdown of execution times, "
"allowing you to identify bottlenecks in your programs."
msgstr ""

#: ../Doc/library/decimal.rst:3
msgid ":mod:`decimal` --- Decimal fixed point and floating point arithmetic"
msgstr ""

#: ../Doc/library/decimal.rst:29
msgid ""
"The :mod:`decimal` module provides support for decimal floating point "
"arithmetic.  It offers several advantages over the :class:`float` datatype:"
msgstr ""

#: ../Doc/library/decimal.rst:32
msgid ""
"Decimal \"is based on a floating-point model which was designed with people "
"in mind, and necessarily has a paramount guiding principle -- computers must "
"provide an arithmetic that works in the same way as the arithmetic that "
"people learn at school.\" -- excerpt from the decimal arithmetic "
"specification."
msgstr ""

# 4a9eda98c7c64682869af2ab94c9343e
#: ../Doc/library/decimal.rst:37
msgid ""
"Decimal numbers can be represented exactly.  In contrast, numbers like :"
"const:`1.1` and :const:`2.2` do not have exact representations in binary "
"floating point.  End users typically would not expect ``1.1 + 2.2`` to "
"display as :const:`3.3000000000000003` as it does with binary floating point."
msgstr ""

#: ../Doc/library/decimal.rst:42
msgid ""
"The exactness carries over into arithmetic.  In decimal floating point, "
"``0.1 + 0.1 + 0.1 - 0.3`` is exactly equal to zero.  In binary floating "
"point, the result is :const:`5.5511151231257827e-017`.  While near to zero, "
"the differences prevent reliable equality testing and differences can "
"accumulate. For this reason, decimal is preferred in accounting applications "
"which have strict equality invariants."
msgstr ""

#: ../Doc/library/decimal.rst:49
msgid ""
"The decimal module incorporates a notion of significant places so that "
"``1.30 + 1.20`` is :const:`2.50`.  The trailing zero is kept to indicate "
"significance. This is the customary presentation for monetary applications. "
"For multiplication, the \"schoolbook\" approach uses all the figures in the "
"multiplicands.  For instance, ``1.3 * 1.2`` gives :const:`1.56` while ``1.30 "
"* 1.20`` gives :const:`1.5600`."
msgstr ""

#: ../Doc/library/decimal.rst:56
msgid ""
"Unlike hardware based binary floating point, the decimal module has a user "
"alterable precision (defaulting to 28 places) which can be as large as "
"needed for a given problem:"
msgstr ""

#: ../Doc/library/decimal.rst:68
msgid ""
"Both binary and decimal floating point are implemented in terms of published "
"standards.  While the built-in float type exposes only a modest portion of "
"its capabilities, the decimal module exposes all required parts of the "
"standard. When needed, the programmer has full control over rounding and "
"signal handling. This includes an option to enforce exact arithmetic by "
"using exceptions to block any inexact operations."
msgstr ""

#: ../Doc/library/decimal.rst:75
msgid ""
"The decimal module was designed to support \"without prejudice, both exact "
"unrounded decimal arithmetic (sometimes called fixed-point arithmetic) and "
"rounded floating-point arithmetic.\"  -- excerpt from the decimal arithmetic "
"specification."
msgstr ""

#: ../Doc/library/decimal.rst:80
msgid ""
"The module design is centered around three concepts:  the decimal number, "
"the context for arithmetic, and signals."
msgstr ""

#: ../Doc/library/decimal.rst:83
msgid ""
"A decimal number is immutable.  It has a sign, coefficient digits, and an "
"exponent.  To preserve significance, the coefficient digits do not truncate "
"trailing zeros.  Decimals also include special values such as :const:"
"`Infinity`, :const:`-Infinity`, and :const:`NaN`.  The standard also "
"differentiates :const:`-0` from :const:`+0`."
msgstr ""

#: ../Doc/library/decimal.rst:89
msgid ""
"The context for arithmetic is an environment specifying precision, rounding "
"rules, limits on exponents, flags indicating the results of operations, and "
"trap enablers which determine whether signals are treated as exceptions.  "
"Rounding options include :const:`ROUND_CEILING`, :const:`ROUND_DOWN`, :const:"
"`ROUND_FLOOR`, :const:`ROUND_HALF_DOWN`, :const:`ROUND_HALF_EVEN`, :const:"
"`ROUND_HALF_UP`, :const:`ROUND_UP`, and :const:`ROUND_05UP`."
msgstr ""

#: ../Doc/library/decimal.rst:96
msgid ""
"Signals are groups of exceptional conditions arising during the course of "
"computation.  Depending on the needs of the application, signals may be "
"ignored, considered as informational, or treated as exceptions. The signals "
"in the decimal module are: :const:`Clamped`, :const:`InvalidOperation`, :"
"const:`DivisionByZero`, :const:`Inexact`, :const:`Rounded`, :const:"
"`Subnormal`, :const:`Overflow`, and :const:`Underflow`."
msgstr ""

#: ../Doc/library/decimal.rst:103
msgid ""
"For each signal there is a flag and a trap enabler.  When a signal is "
"encountered, its flag is set to one, then, if the trap enabler is set to "
"one, an exception is raised.  Flags are sticky, so the user needs to reset "
"them before monitoring a calculation."
msgstr ""

# cc3291bf73ff4438a844bfce0dce814a
#: ../Doc/library/decimal.rst:111
msgid ""
"IBM's General Decimal Arithmetic Specification, `The General Decimal "
"Arithmetic Specification <http://speleotrove.com/decimal/>`_."
msgstr ""

#: ../Doc/library/decimal.rst:114
msgid ""
"IEEE standard 854-1987, `Unofficial IEEE 854 Text <http://754r.ucbtest.org/"
"standards/854.pdf>`_."
msgstr ""

#: ../Doc/library/decimal.rst:123
msgid "Quick-start Tutorial"
msgstr ""

#: ../Doc/library/decimal.rst:125
msgid ""
"The usual start to using decimals is importing the module, viewing the "
"current context with :func:`getcontext` and, if necessary, setting new "
"values for precision, rounding, or enabled traps::"
msgstr ""

#: ../Doc/library/decimal.rst:137
msgid ""
"Decimal instances can be constructed from integers, strings, floats, or "
"tuples. Construction from an integer or a float performs an exact conversion "
"of the value of that integer or float.  Decimal numbers include special "
"values such as :const:`NaN` which stands for \"Not a number\", positive and "
"negative :const:`Infinity`, and :const:`-0`."
msgstr ""

#: ../Doc/library/decimal.rst:161
msgid ""
"The significance of a new Decimal is determined solely by the number of "
"digits input.  Context precision and rounding only come into play during "
"arithmetic operations."
msgstr ""

#: ../Doc/library/decimal.rst:178
msgid ""
"Decimals interact well with much of the rest of Python.  Here is a small "
"decimal floating point flying circus:"
msgstr ""

#: ../Doc/library/decimal.rst:210
msgid "And some mathematical functions are also available to Decimal:"
msgstr ""

#: ../Doc/library/decimal.rst:222
msgid ""
"The :meth:`quantize` method rounds a number to a fixed exponent.  This "
"method is useful for monetary applications that often round results to a "
"fixed number of places:"
msgstr ""

#: ../Doc/library/decimal.rst:231
msgid ""
"As shown above, the :func:`getcontext` function accesses the current context "
"and allows the settings to be changed.  This approach meets the needs of "
"most applications."
msgstr ""

#: ../Doc/library/decimal.rst:235
msgid ""
"For more advanced work, it may be useful to create alternate contexts using "
"the Context() constructor.  To make an alternate active, use the :func:"
"`setcontext` function."
msgstr ""

#: ../Doc/library/decimal.rst:239
msgid ""
"In accordance with the standard, the :mod:`Decimal` module provides two "
"ready to use standard contexts, :const:`BasicContext` and :const:"
"`ExtendedContext`. The former is especially useful for debugging because "
"many of the traps are enabled:"
msgstr ""

#: ../Doc/library/decimal.rst:268
msgid ""
"Contexts also have signal flags for monitoring exceptional conditions "
"encountered during computations.  The flags remain set until explicitly "
"cleared, so it is best to clear the flags before each set of monitored "
"computations by using the :meth:`clear_flags` method. ::"
msgstr ""

#: ../Doc/library/decimal.rst:281
msgid ""
"The *flags* entry shows that the rational approximation to :const:`Pi` was "
"rounded (digits beyond the context precision were thrown away) and that the "
"result is inexact (some of the discarded digits were non-zero)."
msgstr ""

#: ../Doc/library/decimal.rst:285
msgid ""
"Individual traps are set using the dictionary in the :attr:`traps` field of "
"a context:"
msgstr ""

#: ../Doc/library/decimal.rst:300
msgid ""
"Most programs adjust the current context only once, at the beginning of the "
"program.  And, in many applications, data is converted to :class:`Decimal` "
"with a single cast inside a loop.  With context set and decimals created, "
"the bulk of the program manipulates the data no differently than with other "
"Python numeric types."
msgstr ""

#: ../Doc/library/decimal.rst:312
msgid "Decimal objects"
msgstr ""

#: ../Doc/library/decimal.rst:317
msgid "Construct a new :class:`Decimal` object based from *value*."
msgstr ""

#: ../Doc/library/decimal.rst:319
msgid ""
"*value* can be an integer, string, tuple, :class:`float`, or another :class:"
"`Decimal` object. If no *value* is given, returns ``Decimal('0')``.  If "
"*value* is a string, it should conform to the decimal numeric string syntax "
"after leading and trailing whitespace characters are removed::"
msgstr ""

# 37594a793e294850ba1f9565d32a0023
#: ../Doc/library/decimal.rst:335
msgid ""
"If *value* is a unicode string then other Unicode decimal digits are also "
"permitted where ``digit`` appears above.  These include decimal digits from "
"various other alphabets (for example, Arabic-Indic and Devanāgarī digits) "
"along with the fullwidth digits ``u'\\uff10'`` through ``u'\\uff19'``."
msgstr ""

#: ../Doc/library/decimal.rst:341
msgid ""
"If *value* is a :class:`tuple`, it should have three components, a sign (:"
"const:`0` for positive or :const:`1` for negative), a :class:`tuple` of "
"digits, and an integer exponent. For example, ``Decimal((0, (1, 4, 1, 4), "
"-3))`` returns ``Decimal('1.414')``."
msgstr ""

#: ../Doc/library/decimal.rst:346
msgid ""
"If *value* is a :class:`float`, the binary floating point value is "
"losslessly converted to its exact decimal equivalent.  This conversion can "
"often require 53 or more digits of precision.  For example, ``Decimal(float"
"('1.1'))`` converts to ``Decimal"
"('1.100000000000000088817841970012523233890533447265625')``."
msgstr ""

#: ../Doc/library/decimal.rst:352
msgid ""
"The *context* precision does not affect how many digits are stored. That is "
"determined exclusively by the number of digits in *value*. For example, "
"``Decimal('3.00000')`` records all five zeros even if the context precision "
"is only three."
msgstr ""

#: ../Doc/library/decimal.rst:357
msgid ""
"The purpose of the *context* argument is determining what to do if *value* "
"is a malformed string.  If the context traps :const:`InvalidOperation`, an "
"exception is raised; otherwise, the constructor returns a new Decimal with "
"the value of :const:`NaN`."
msgstr ""

#: ../Doc/library/decimal.rst:362
msgid "Once constructed, :class:`Decimal` objects are immutable."
msgstr ""

# 02af132a49854a4493d32123094f7f30
#: ../Doc/library/decimal.rst:371
msgid ""
"Decimal floating point objects share many properties with the other built-in "
"numeric types such as :class:`float` and :class:`int`.  All of the usual "
"math operations and special methods apply.  Likewise, decimal objects can be "
"copied, pickled, printed, used as dictionary keys, used as set elements, "
"compared, sorted, and coerced to another type (such as :class:`float` or :"
"class:`long`)."
msgstr ""

# 491421c116be438485f4252da58ca948
#: ../Doc/library/decimal.rst:378
msgid ""
"Decimal objects cannot generally be combined with floats in arithmetic "
"operations: an attempt to add a :class:`Decimal` to a :class:`float`, for "
"example, will raise a :exc:`TypeError`. There's one exception to this rule: "
"it's possible to use Python's comparison operators to compare a :class:"
"`float` instance ``x`` with a :class:`Decimal` instance ``y``.  Without this "
"exception, comparisons between :class:`Decimal` and :class:`float` instances "
"would follow the general rules for comparing objects of different types "
"described in the :ref:`expressions` section of the reference manual, leading "
"to confusing results."
msgstr ""

#: ../Doc/library/decimal.rst:396
msgid ""
"In addition to the standard numeric properties, decimal floating point "
"objects also have a number of specialized methods:"
msgstr ""

#: ../Doc/library/decimal.rst:402
msgid ""
"Return the adjusted exponent after shifting out the coefficient's rightmost "
"digits until only the lead digit remains: ``Decimal('321e+5').adjusted()`` "
"returns seven.  Used for determining the position of the most significant "
"digit with respect to the decimal point."
msgstr ""

#: ../Doc/library/decimal.rst:410
msgid ""
"Return a :term:`named tuple` representation of the number: ``DecimalTuple"
"(sign, digits, exponent)``."
msgstr ""

#: ../Doc/library/decimal.rst:419
msgid ""
"Return the canonical encoding of the argument.  Currently, the encoding of "
"a :class:`Decimal` instance is always canonical, so this operation returns "
"its argument unchanged."
msgstr ""

# 9817ea8d4b6644bf99b7050fdc9985b5
#: ../Doc/library/decimal.rst:427
msgid ""
"Compare the values of two Decimal instances.  This operation behaves in the "
"same way as the usual comparison method :meth:`__cmp__`, except that :meth:"
"`compare` returns a Decimal instance rather than an integer, and if either "
"operand is a NaN then the result is a NaN::"
msgstr ""

#: ../Doc/library/decimal.rst:439
msgid ""
"This operation is identical to the :meth:`compare` method, except that all "
"NaNs signal.  That is, if neither operand is a signaling NaN then any quiet "
"NaN operand is treated as though it were a signaling NaN."
msgstr ""

#: ../Doc/library/decimal.rst:447
msgid ""
"Compare two operands using their abstract representation rather than their "
"numerical value.  Similar to the :meth:`compare` method, but the result "
"gives a total ordering on :class:`Decimal` instances.  Two :class:`Decimal` "
"instances with the same numeric value but different representations compare "
"unequal in this ordering:"
msgstr ""

#: ../Doc/library/decimal.rst:456
msgid ""
"Quiet and signaling NaNs are also included in the total ordering.  The "
"result of this function is ``Decimal('0')`` if both operands have the same "
"representation, ``Decimal('-1')`` if the first operand is lower in the total "
"order than the second, and ``Decimal('1')`` if the first operand is higher "
"in the total order than the second operand.  See the specification for "
"details of the total order."
msgstr ""

#: ../Doc/library/decimal.rst:467
msgid ""
"Compare two operands using their abstract representation rather than their "
"value as in :meth:`compare_total`, but ignoring the sign of each operand. "
"``x.compare_total_mag(y)`` is equivalent to ``x.copy_abs().compare_total(y."
"copy_abs())``."
msgstr ""

#: ../Doc/library/decimal.rst:476
msgid ""
"Just returns self, this method is only to comply with the Decimal "
"Specification."
msgstr ""

#: ../Doc/library/decimal.rst:483
msgid ""
"Return the absolute value of the argument.  This operation is unaffected by "
"the context and is quiet: no flags are changed and no rounding is performed."
msgstr ""

#: ../Doc/library/decimal.rst:491
msgid ""
"Return the negation of the argument.  This operation is unaffected by the "
"context and is quiet: no flags are changed and no rounding is performed."
msgstr ""

#: ../Doc/library/decimal.rst:498
msgid ""
"Return a copy of the first operand with the sign set to be the same as the "
"sign of the second operand.  For example:"
msgstr ""

#: ../Doc/library/decimal.rst:504
msgid ""
"This operation is unaffected by the context and is quiet: no flags are "
"changed and no rounding is performed."
msgstr ""

#: ../Doc/library/decimal.rst:511
msgid ""
"Return the value of the (natural) exponential function ``e**x`` at the given "
"number.  The result is correctly rounded using the :const:`ROUND_HALF_EVEN` "
"rounding mode."
msgstr ""

#: ../Doc/library/decimal.rst:524
msgid "Classmethod that converts a float to a decimal number, exactly."
msgstr ""

#: ../Doc/library/decimal.rst:526
msgid ""
"Note `Decimal.from_float(0.1)` is not the same as `Decimal('0.1')`. Since "
"0.1 is not exactly representable in binary floating point, the value is "
"stored as the nearest representable value which is `0x1.999999999999ap-4`.  "
"That equivalent value in decimal is "
"`0.1000000000000000055511151231257827021181583404541015625`."
msgstr ""

# 94da68628f35484b9d8ed1668a61e89a
#: ../Doc/library/decimal.rst:532
msgid ""
"From Python 2.7 onwards, a :class:`Decimal` instance can also be constructed "
"directly from a :class:`float`."
msgstr ""

#: ../Doc/library/decimal.rst:550
msgid ""
"Fused multiply-add.  Return self*other+third with no rounding of the "
"intermediate product self*other."
msgstr ""

#: ../Doc/library/decimal.rst:560
msgid ""
"Return :const:`True` if the argument is canonical and :const:`False` "
"otherwise.  Currently, a :class:`Decimal` instance is always canonical, so "
"this operation always returns :const:`True`."
msgstr ""

#: ../Doc/library/decimal.rst:568
msgid ""
"Return :const:`True` if the argument is a finite number, and :const:`False` "
"if the argument is an infinity or a NaN."
msgstr ""

#: ../Doc/library/decimal.rst:575
msgid ""
"Return :const:`True` if the argument is either positive or negative infinity "
"and :const:`False` otherwise."
msgstr ""

#: ../Doc/library/decimal.rst:582
msgid ""
"Return :const:`True` if the argument is a (quiet or signaling) NaN and :"
"const:`False` otherwise."
msgstr ""

# 292e1525077840efaf3be12b9b2ae0d0
#: ../Doc/library/decimal.rst:589
msgid ""
"Return :const:`True` if the argument is a *normal* finite non-zero number "
"with an adjusted exponent greater than or equal to *Emin*. Return :const:"
"`False` if the argument is zero, subnormal, infinite or a NaN.  Note, the "
"term *normal* is used here in a different sense with the :meth:`normalize` "
"method which is used to create canonical values."
msgstr ""

#: ../Doc/library/decimal.rst:599
msgid ""
"Return :const:`True` if the argument is a quiet NaN, and :const:`False` "
"otherwise."
msgstr ""

#: ../Doc/library/decimal.rst:606
msgid ""
"Return :const:`True` if the argument has a negative sign and :const:`False` "
"otherwise.  Note that zeros and NaNs can both carry signs."
msgstr ""

#: ../Doc/library/decimal.rst:613
msgid ""
"Return :const:`True` if the argument is a signaling NaN and :const:`False` "
"otherwise."
msgstr ""

# f4d859a921fd480cbc4e4e5bb7862d07
#: ../Doc/library/decimal.rst:620
msgid ""
"Return :const:`True` if the argument is subnormal, and :const:`False` "
"otherwise. A number is subnormal is if it is nonzero, finite, and has an "
"adjusted exponent less than *Emin*."
msgstr ""

#: ../Doc/library/decimal.rst:628
msgid ""
"Return :const:`True` if the argument is a (positive or negative) zero and :"
"const:`False` otherwise."
msgstr ""

#: ../Doc/library/decimal.rst:635
msgid ""
"Return the natural (base e) logarithm of the operand.  The result is "
"correctly rounded using the :const:`ROUND_HALF_EVEN` rounding mode."
msgstr ""

#: ../Doc/library/decimal.rst:642
msgid ""
"Return the base ten logarithm of the operand.  The result is correctly "
"rounded using the :const:`ROUND_HALF_EVEN` rounding mode."
msgstr ""

#: ../Doc/library/decimal.rst:649
msgid ""
"For a nonzero number, return the adjusted exponent of its operand as a :"
"class:`Decimal` instance.  If the operand is a zero then ``Decimal('-"
"Infinity')`` is returned and the :const:`DivisionByZero` flag is raised.  If "
"the operand is an infinity then ``Decimal('Infinity')`` is returned."
msgstr ""

#: ../Doc/library/decimal.rst:659
msgid ""
":meth:`logical_and` is a logical operation which takes two *logical "
"operands* (see :ref:`logical_operands_label`).  The result is the digit-wise "
"``and`` of the two operands."
msgstr ""

#: ../Doc/library/decimal.rst:667
msgid ""
":meth:`logical_invert` is a logical operation.  The result is the digit-wise "
"inversion of the operand."
msgstr ""

#: ../Doc/library/decimal.rst:674
msgid ""
":meth:`logical_or` is a logical operation which takes two *logical operands* "
"(see :ref:`logical_operands_label`).  The result is the digit-wise ``or`` of "
"the two operands."
msgstr ""

#: ../Doc/library/decimal.rst:682
msgid ""
":meth:`logical_xor` is a logical operation which takes two *logical "
"operands* (see :ref:`logical_operands_label`).  The result is the digit-wise "
"exclusive or of the two operands."
msgstr ""

#: ../Doc/library/decimal.rst:690
msgid ""
"Like ``max(self, other)`` except that the context rounding rule is applied "
"before returning and that :const:`NaN` values are either signaled or ignored "
"(depending on the context and whether they are signaling or quiet)."
msgstr ""

#: ../Doc/library/decimal.rst:697
msgid ""
"Similar to the :meth:`.max` method, but the comparison is done using the "
"absolute values of the operands."
msgstr ""

#: ../Doc/library/decimal.rst:704
msgid ""
"Like ``min(self, other)`` except that the context rounding rule is applied "
"before returning and that :const:`NaN` values are either signaled or ignored "
"(depending on the context and whether they are signaling or quiet)."
msgstr ""

#: ../Doc/library/decimal.rst:711
msgid ""
"Similar to the :meth:`.min` method, but the comparison is done using the "
"absolute values of the operands."
msgstr ""

#: ../Doc/library/decimal.rst:718
msgid ""
"Return the largest number representable in the given context (or in the "
"current thread's context if no context is given) that is smaller than the "
"given operand."
msgstr ""

#: ../Doc/library/decimal.rst:726
msgid ""
"Return the smallest number representable in the given context (or in the "
"current thread's context if no context is given) that is larger than the "
"given operand."
msgstr ""

#: ../Doc/library/decimal.rst:734
msgid ""
"If the two operands are unequal, return the number closest to the first "
"operand in the direction of the second operand.  If both operands are "
"numerically equal, return a copy of the first operand with the sign set to "
"be the same as the sign of the second operand."
msgstr ""

# a94ae424e207457b99f2645ae9a5fb16
#: ../Doc/library/decimal.rst:743
msgid ""
"Normalize the number by stripping the rightmost trailing zeros and "
"converting any result equal to :const:`Decimal('0')` to :const:`Decimal"
"('0e0')`. Used for producing canonical values for attributes of an "
"equivalence class. For example, ``Decimal('32.100')`` and ``Decimal"
"('0.321000e+2')`` both normalize to the equivalent value ``Decimal('32.1')``."
msgstr ""

#: ../Doc/library/decimal.rst:752
msgid ""
"Return a string describing the *class* of the operand.  The returned value "
"is one of the following ten strings."
msgstr ""

#: ../Doc/library/decimal.rst:755
msgid "``\"-Infinity\"``, indicating that the operand is negative infinity."
msgstr ""

#: ../Doc/library/decimal.rst:756
msgid ""
"``\"-Normal\"``, indicating that the operand is a negative normal number."
msgstr ""

#: ../Doc/library/decimal.rst:757
msgid ""
"``\"-Subnormal\"``, indicating that the operand is negative and subnormal."
msgstr ""

#: ../Doc/library/decimal.rst:758
msgid "``\"-Zero\"``, indicating that the operand is a negative zero."
msgstr ""

#: ../Doc/library/decimal.rst:759
msgid "``\"+Zero\"``, indicating that the operand is a positive zero."
msgstr ""

#: ../Doc/library/decimal.rst:760
msgid ""
"``\"+Subnormal\"``, indicating that the operand is positive and subnormal."
msgstr ""

#: ../Doc/library/decimal.rst:761
msgid ""
"``\"+Normal\"``, indicating that the operand is a positive normal number."
msgstr ""

#: ../Doc/library/decimal.rst:762
msgid "``\"+Infinity\"``, indicating that the operand is positive infinity."
msgstr ""

#: ../Doc/library/decimal.rst:763
msgid "``\"NaN\"``, indicating that the operand is a quiet NaN (Not a Number)."
msgstr ""

#: ../Doc/library/decimal.rst:764
msgid "``\"sNaN\"``, indicating that the operand is a signaling NaN."
msgstr ""

#: ../Doc/library/decimal.rst:770
msgid ""
"Return a value equal to the first operand after rounding and having the "
"exponent of the second operand."
msgstr ""

#: ../Doc/library/decimal.rst:776
msgid ""
"Unlike other operations, if the length of the coefficient after the quantize "
"operation would be greater than precision, then an :const:`InvalidOperation` "
"is signaled. This guarantees that, unless there is an error condition, the "
"quantized exponent is always equal to that of the right-hand operand."
msgstr ""

#: ../Doc/library/decimal.rst:782
msgid ""
"Also unlike other operations, quantize never signals Underflow, even if the "
"result is subnormal and inexact."
msgstr ""

#: ../Doc/library/decimal.rst:785
msgid ""
"If the exponent of the second operand is larger than that of the first then "
"rounding may be necessary.  In this case, the rounding mode is determined by "
"the ``rounding`` argument if given, else by the given ``context`` argument; "
"if neither argument is given the rounding mode of the current thread's "
"context is used."
msgstr ""

#: ../Doc/library/decimal.rst:791
msgid ""
"If *watchexp* is set (default), then an error is returned whenever the "
"resulting exponent is greater than :attr:`Emax` or less than :attr:`Etiny`."
msgstr ""

#: ../Doc/library/decimal.rst:797
msgid ""
"Return ``Decimal(10)``, the radix (base) in which the :class:`Decimal` class "
"does all its arithmetic.  Included for compatibility with the specification."
msgstr ""

#: ../Doc/library/decimal.rst:805
msgid ""
"Compute the modulo as either a positive or negative value depending on which "
"is closest to zero.  For instance, ``Decimal(10).remainder_near(6)`` returns "
"``Decimal('-2')`` which is closer to zero than ``Decimal('4')``."
msgstr ""

#: ../Doc/library/decimal.rst:809
msgid ""
"If both are equally close, the one chosen will have the same sign as *self*."
msgstr ""

#: ../Doc/library/decimal.rst:814
msgid ""
"Return the result of rotating the digits of the first operand by an amount "
"specified by the second operand.  The second operand must be an integer in "
"the range -precision through precision.  The absolute value of the second "
"operand gives the number of places to rotate.  If the second operand is "
"positive then rotation is to the left; otherwise rotation is to the right. "
"The coefficient of the first operand is padded on the left with zeros to "
"length precision if necessary.  The sign and exponent of the first operand "
"are unchanged."
msgstr ""

#: ../Doc/library/decimal.rst:827
msgid ""
"Test whether self and other have the same exponent or whether both are :"
"const:`NaN`."
msgstr ""

#: ../Doc/library/decimal.rst:832
msgid ""
"Return the first operand with exponent adjusted by the second. Equivalently, "
"return the first operand multiplied by ``10**other``.  The second operand "
"must be an integer."
msgstr ""

#: ../Doc/library/decimal.rst:840
msgid ""
"Return the result of shifting the digits of the first operand by an amount "
"specified by the second operand.  The second operand must be an integer in "
"the range -precision through precision.  The absolute value of the second "
"operand gives the number of places to shift.  If the second operand is "
"positive then the shift is to the left; otherwise the shift is to the "
"right.  Digits shifted into the coefficient are zeros.  The sign and "
"exponent of the first operand are unchanged."
msgstr ""

#: ../Doc/library/decimal.rst:852
msgid "Return the square root of the argument to full precision."
msgstr ""

#: ../Doc/library/decimal.rst:857
msgid "Convert to an engineering-type string."
msgstr ""

#: ../Doc/library/decimal.rst:859
msgid ""
"Engineering notation has an exponent which is a multiple of 3, so there are "
"up to 3 digits left of the decimal place.  For example, converts ``Decimal"
"('123E+1')`` to ``Decimal('1.23E+3')``"
msgstr ""

#: ../Doc/library/decimal.rst:865
msgid ""
"Identical to the :meth:`to_integral_value` method.  The ``to_integral`` name "
"has been kept for compatibility with older versions."
msgstr ""

#: ../Doc/library/decimal.rst:870
msgid ""
"Round to the nearest integer, signaling :const:`Inexact` or :const:`Rounded` "
"as appropriate if rounding occurs.  The rounding mode is determined by the "
"``rounding`` parameter if given, else by the given ``context``.  If neither "
"parameter is given then the rounding mode of the current context is used."
msgstr ""

#: ../Doc/library/decimal.rst:880
msgid ""
"Round to the nearest integer without signaling :const:`Inexact` or :const:"
"`Rounded`.  If given, applies *rounding*; otherwise, uses the rounding "
"method in either the supplied *context* or the current context."
msgstr ""

#: ../Doc/library/decimal.rst:891
msgid "Logical operands"
msgstr ""

#: ../Doc/library/decimal.rst:893
msgid ""
"The :meth:`logical_and`, :meth:`logical_invert`, :meth:`logical_or`, and :"
"meth:`logical_xor` methods expect their arguments to be *logical operands*.  "
"A *logical operand* is a :class:`Decimal` instance whose exponent and sign "
"are both zero, and whose digits are all either :const:`0` or :const:`1`."
msgstr ""

#: ../Doc/library/decimal.rst:905
msgid "Context objects"
msgstr ""

#: ../Doc/library/decimal.rst:907
msgid ""
"Contexts are environments for arithmetic operations.  They govern precision, "
"set rules for rounding, determine which signals are treated as exceptions, "
"and limit the range for exponents."
msgstr ""

#: ../Doc/library/decimal.rst:911
msgid ""
"Each thread has its own current context which is accessed or changed using "
"the :func:`getcontext` and :func:`setcontext` functions:"
msgstr ""

#: ../Doc/library/decimal.rst:917
msgid "Return the current context for the active thread."
msgstr ""

#: ../Doc/library/decimal.rst:922
msgid "Set the current context for the active thread to *c*."
msgstr ""

# bed204df93374155895ca7c6c8701694
#: ../Doc/library/decimal.rst:924
msgid ""
"Beginning with Python 2.5, you can also use the :keyword:`with` statement "
"and the :func:`localcontext` function to temporarily change the active "
"context."
msgstr ""

#: ../Doc/library/decimal.rst:930
msgid ""
"Return a context manager that will set the current context for the active "
"thread to a copy of *c* on entry to the with-statement and restore the "
"previous context when exiting the with-statement. If no context is "
"specified, a copy of the current context is used."
msgstr ""

#: ../Doc/library/decimal.rst:937
msgid ""
"For example, the following code sets the current decimal precision to 42 "
"places, performs a calculation, and then automatically restores the previous "
"context::"
msgstr ""

#: ../Doc/library/decimal.rst:951
msgid ""
"New contexts can also be created using the :class:`Context` constructor "
"described below. In addition, the module provides three pre-made contexts:"
msgstr ""

#: ../Doc/library/decimal.rst:957
msgid ""
"This is a standard context defined by the General Decimal Arithmetic "
"Specification.  Precision is set to nine.  Rounding is set to :const:"
"`ROUND_HALF_UP`.  All flags are cleared.  All traps are enabled (treated as "
"exceptions) except :const:`Inexact`, :const:`Rounded`, and :const:"
"`Subnormal`."
msgstr ""

#: ../Doc/library/decimal.rst:963
msgid ""
"Because many of the traps are enabled, this context is useful for debugging."
msgstr ""

#: ../Doc/library/decimal.rst:968
msgid ""
"This is a standard context defined by the General Decimal Arithmetic "
"Specification.  Precision is set to nine.  Rounding is set to :const:"
"`ROUND_HALF_EVEN`.  All flags are cleared.  No traps are enabled (so that "
"exceptions are not raised during computations)."
msgstr ""

#: ../Doc/library/decimal.rst:973
msgid ""
"Because the traps are disabled, this context is useful for applications that "
"prefer to have result value of :const:`NaN` or :const:`Infinity` instead of "
"raising exceptions.  This allows an application to complete a run in the "
"presence of conditions that would otherwise halt the program."
msgstr ""

#: ../Doc/library/decimal.rst:981
msgid ""
"This context is used by the :class:`Context` constructor as a prototype for "
"new contexts.  Changing a field (such a precision) has the effect of "
"changing the default for new contexts created by the :class:`Context` "
"constructor."
msgstr ""

#: ../Doc/library/decimal.rst:985
msgid ""
"This context is most useful in multi-threaded environments.  Changing one of "
"the fields before threads are started has the effect of setting system-wide "
"defaults.  Changing the fields after threads have started is not recommended "
"as it would require thread synchronization to prevent race conditions."
msgstr ""

#: ../Doc/library/decimal.rst:990
msgid ""
"In single threaded environments, it is preferable to not use this context at "
"all.  Instead, simply create contexts explicitly as described below."
msgstr ""

#: ../Doc/library/decimal.rst:993
msgid ""
"The default values are precision=28, rounding=ROUND_HALF_EVEN, and enabled "
"traps for Overflow, InvalidOperation, and DivisionByZero."
msgstr ""

#: ../Doc/library/decimal.rst:996
msgid ""
"In addition to the three supplied contexts, new contexts can be created with "
"the :class:`Context` constructor."
msgstr ""

#: ../Doc/library/decimal.rst:1002
msgid ""
"Creates a new context.  If a field is not specified or is :const:`None`, the "
"default values are copied from the :const:`DefaultContext`.  If the *flags* "
"field is not specified or is :const:`None`, all flags are cleared."
msgstr ""

#: ../Doc/library/decimal.rst:1006
msgid ""
"The *prec* field is a positive integer that sets the precision for "
"arithmetic operations in the context."
msgstr ""

#: ../Doc/library/decimal.rst:1009
msgid "The *rounding* option is one of:"
msgstr ""

#: ../Doc/library/decimal.rst:1011
msgid ":const:`ROUND_CEILING` (towards :const:`Infinity`),"
msgstr ""

#: ../Doc/library/decimal.rst:1012
msgid ":const:`ROUND_DOWN` (towards zero),"
msgstr ""

#: ../Doc/library/decimal.rst:1013
msgid ":const:`ROUND_FLOOR` (towards :const:`-Infinity`),"
msgstr ""

#: ../Doc/library/decimal.rst:1014
msgid ":const:`ROUND_HALF_DOWN` (to nearest with ties going towards zero),"
msgstr ""

#: ../Doc/library/decimal.rst:1015
msgid ""
":const:`ROUND_HALF_EVEN` (to nearest with ties going to nearest even "
"integer),"
msgstr ""

#: ../Doc/library/decimal.rst:1016
msgid ":const:`ROUND_HALF_UP` (to nearest with ties going away from zero), or"
msgstr ""

#: ../Doc/library/decimal.rst:1017
msgid ":const:`ROUND_UP` (away from zero)."
msgstr ""

#: ../Doc/library/decimal.rst:1018
msgid ""
":const:`ROUND_05UP` (away from zero if last digit after rounding towards "
"zero would have been 0 or 5; otherwise towards zero)"
msgstr ""

#: ../Doc/library/decimal.rst:1021
msgid ""
"The *traps* and *flags* fields list any signals to be set. Generally, new "
"contexts should only set traps and leave the flags clear."
msgstr ""

#: ../Doc/library/decimal.rst:1024
msgid ""
"The *Emin* and *Emax* fields are integers specifying the outer limits "
"allowable for exponents."
msgstr ""

#: ../Doc/library/decimal.rst:1027
msgid ""
"The *capitals* field is either :const:`0` or :const:`1` (the default). If "
"set to :const:`1`, exponents are printed with a capital :const:`E`; "
"otherwise, a lowercase :const:`e` is used: :const:`Decimal('6.02e+23')`."
msgstr ""

# 35f5dcefdb6044a086c7d98d25f9c6e8
#: ../Doc/library/decimal.rst:1034
msgid ""
"The :class:`Context` class defines several general purpose methods as well "
"as a large number of methods for doing arithmetic directly in a given "
"context. In addition, for each of the :class:`Decimal` methods described "
"above (with the exception of the :meth:`adjusted` and :meth:`as_tuple` "
"methods) there is a corresponding :class:`Context` method.  For example, for "
"a :class:`Context` instance ``C`` and :class:`Decimal` instance ``x``, ``C."
"exp(x)`` is equivalent to ``x.exp(context=C)``.  Each :class:`Context` "
"method accepts a Python integer (an instance of :class:`int` or :class:"
"`long`) anywhere that a Decimal instance is accepted."
msgstr ""

#: ../Doc/library/decimal.rst:1047
msgid "Resets all of the flags to :const:`0`."
msgstr ""

#: ../Doc/library/decimal.rst:1051
msgid "Return a duplicate of the context."
msgstr ""

#: ../Doc/library/decimal.rst:1055
msgid "Return a copy of the Decimal instance num."
msgstr ""

#: ../Doc/library/decimal.rst:1059
msgid ""
"Creates a new Decimal instance from *num* but using *self* as context. "
"Unlike the :class:`Decimal` constructor, the context precision, rounding "
"method, flags, and traps are applied to the conversion."
msgstr ""

#: ../Doc/library/decimal.rst:1063
msgid ""
"This is useful because constants are often given to a greater precision than "
"is needed by the application.  Another benefit is that rounding immediately "
"eliminates unintended effects from digits beyond the current precision. In "
"the following example, using unrounded inputs means that adding zero to a "
"sum can change the result:"
msgstr ""

#: ../Doc/library/decimal.rst:1077
msgid ""
"This method implements the to-number operation of the IBM specification. If "
"the argument is a string, no leading or trailing whitespace is permitted."
msgstr ""

#: ../Doc/library/decimal.rst:1083
msgid ""
"Creates a new Decimal instance from a float *f* but rounding using *self* as "
"the context.  Unlike the :meth:`Decimal.from_float` class method, the "
"context precision, rounding method, flags, and traps are applied to the "
"conversion."
msgstr ""

#: ../Doc/library/decimal.rst:1103
msgid ""
"Returns a value equal to ``Emin - prec + 1`` which is the minimum exponent "
"value for subnormal results.  When underflow occurs, the exponent is set to :"
"const:`Etiny`."
msgstr ""

#: ../Doc/library/decimal.rst:1110
msgid "Returns a value equal to ``Emax - prec + 1``."
msgstr ""

#: ../Doc/library/decimal.rst:1112
msgid ""
"The usual approach to working with decimals is to create :class:`Decimal` "
"instances and then apply arithmetic operations which take place within the "
"current context for the active thread.  An alternative approach is to use "
"context methods for calculating within a specific context.  The methods are "
"similar to those for the :class:`Decimal` class and are only briefly "
"recounted here."
msgstr ""

#: ../Doc/library/decimal.rst:1122
msgid "Returns the absolute value of *x*."
msgstr ""

#: ../Doc/library/decimal.rst:1127
msgid "Return the sum of *x* and *y*."
msgstr ""

#: ../Doc/library/decimal.rst:1132
msgid "Returns the same Decimal object *x*."
msgstr ""

#: ../Doc/library/decimal.rst:1137
msgid "Compares *x* and *y* numerically."
msgstr ""

#: ../Doc/library/decimal.rst:1142
msgid "Compares the values of the two operands numerically."
msgstr ""

#: ../Doc/library/decimal.rst:1147
msgid "Compares two operands using their abstract representation."
msgstr ""

#: ../Doc/library/decimal.rst:1152
msgid ""
"Compares two operands using their abstract representation, ignoring sign."
msgstr ""

#: ../Doc/library/decimal.rst:1157
msgid "Returns a copy of *x* with the sign set to 0."
msgstr ""

#: ../Doc/library/decimal.rst:1162
msgid "Returns a copy of *x* with the sign inverted."
msgstr ""

#: ../Doc/library/decimal.rst:1167
msgid "Copies the sign from *y* to *x*."
msgstr ""

#: ../Doc/library/decimal.rst:1172
msgid "Return *x* divided by *y*."
msgstr ""

#: ../Doc/library/decimal.rst:1177
msgid "Return *x* divided by *y*, truncated to an integer."
msgstr ""

#: ../Doc/library/decimal.rst:1182
msgid "Divides two numbers and returns the integer part of the result."
msgstr ""

#: ../Doc/library/decimal.rst:1187
msgid "Returns `e ** x`."
msgstr ""

#: ../Doc/library/decimal.rst:1192
msgid "Returns *x* multiplied by *y*, plus *z*."
msgstr ""

#: ../Doc/library/decimal.rst:1197
msgid "Returns True if *x* is canonical; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1202
msgid "Returns True if *x* is finite; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1207
msgid "Returns True if *x* is infinite; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1212
msgid "Returns True if *x* is a qNaN or sNaN; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1217
msgid "Returns True if *x* is a normal number; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1222
msgid "Returns True if *x* is a quiet NaN; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1227
msgid "Returns True if *x* is negative; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1232
msgid "Returns True if *x* is a signaling NaN; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1237
msgid "Returns True if *x* is subnormal; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1242
msgid "Returns True if *x* is a zero; otherwise returns False."
msgstr ""

#: ../Doc/library/decimal.rst:1247
msgid "Returns the natural (base e) logarithm of *x*."
msgstr ""

#: ../Doc/library/decimal.rst:1252
msgid "Returns the base 10 logarithm of *x*."
msgstr ""

#: ../Doc/library/decimal.rst:1257
msgid "Returns the exponent of the magnitude of the operand's MSD."
msgstr ""

#: ../Doc/library/decimal.rst:1262
msgid "Applies the logical operation *and* between each operand's digits."
msgstr ""

#: ../Doc/library/decimal.rst:1267
msgid "Invert all the digits in *x*."
msgstr ""

#: ../Doc/library/decimal.rst:1272
msgid "Applies the logical operation *or* between each operand's digits."
msgstr ""

#: ../Doc/library/decimal.rst:1277
msgid "Applies the logical operation *xor* between each operand's digits."
msgstr ""

#: ../Doc/library/decimal.rst:1282
msgid "Compares two values numerically and returns the maximum."
msgstr ""

#: ../Doc/library/decimal.rst:1287 ../Doc/library/decimal.rst:1297
msgid "Compares the values numerically with their sign ignored."
msgstr ""

#: ../Doc/library/decimal.rst:1292
msgid "Compares two values numerically and returns the minimum."
msgstr ""

#: ../Doc/library/decimal.rst:1302
msgid "Minus corresponds to the unary prefix minus operator in Python."
msgstr ""

#: ../Doc/library/decimal.rst:1307
msgid "Return the product of *x* and *y*."
msgstr ""

#: ../Doc/library/decimal.rst:1312
msgid "Returns the largest representable number smaller than *x*."
msgstr ""

#: ../Doc/library/decimal.rst:1317
msgid "Returns the smallest representable number larger than *x*."
msgstr ""

#: ../Doc/library/decimal.rst:1322
msgid "Returns the number closest to *x*, in direction towards *y*."
msgstr ""

#: ../Doc/library/decimal.rst:1327
msgid "Reduces *x* to its simplest form."
msgstr ""

#: ../Doc/library/decimal.rst:1332
msgid "Returns an indication of the class of *x*."
msgstr ""

#: ../Doc/library/decimal.rst:1337
msgid ""
"Plus corresponds to the unary prefix plus operator in Python.  This "
"operation applies the context precision and rounding, so it is *not* an "
"identity operation."
msgstr ""

#: ../Doc/library/decimal.rst:1344
msgid "Return ``x`` to the power of ``y``, reduced modulo ``modulo`` if given."
msgstr ""

#: ../Doc/library/decimal.rst:1346
msgid ""
"With two arguments, compute ``x**y``.  If ``x`` is negative then ``y`` must "
"be integral.  The result will be inexact unless ``y`` is integral and the "
"result is finite and can be expressed exactly in 'precision' digits. The "
"result should always be correctly rounded, using the rounding mode of the "
"current thread's context."
msgstr ""

#: ../Doc/library/decimal.rst:1352
msgid ""
"With three arguments, compute ``(x**y) % modulo``.  For the three argument "
"form, the following restrictions on the arguments hold:"
msgstr ""

#: ../Doc/library/decimal.rst:1355
msgid "all three arguments must be integral"
msgstr ""

#: ../Doc/library/decimal.rst:1356
msgid "``y`` must be nonnegative"
msgstr ""

#: ../Doc/library/decimal.rst:1357
msgid "at least one of ``x`` or ``y`` must be nonzero"
msgstr ""

#: ../Doc/library/decimal.rst:1358
msgid "``modulo`` must be nonzero and have at most 'precision' digits"
msgstr ""

#: ../Doc/library/decimal.rst:1360
msgid ""
"The value resulting from ``Context.power(x, y, modulo)`` is equal to the "
"value that would be obtained by computing ``(x**y) % modulo`` with unbounded "
"precision, but is computed more efficiently.  The exponent of the result is "
"zero, regardless of the exponents of ``x``, ``y`` and ``modulo``.  The "
"result is always exact."
msgstr ""

#: ../Doc/library/decimal.rst:1374
msgid "Returns a value equal to *x* (rounded), having the exponent of *y*."
msgstr ""

#: ../Doc/library/decimal.rst:1379
msgid "Just returns 10, as this is Decimal, :)"
msgstr ""

#: ../Doc/library/decimal.rst:1384
msgid "Returns the remainder from integer division."
msgstr ""

#: ../Doc/library/decimal.rst:1386
msgid ""
"The sign of the result, if non-zero, is the same as that of the original "
"dividend."
msgstr ""

#: ../Doc/library/decimal.rst:1391
msgid ""
"Returns ``x - y * n``, where *n* is the integer nearest the exact value of "
"``x / y`` (if the result is 0 then its sign will be the sign of *x*)."
msgstr ""

#: ../Doc/library/decimal.rst:1397
msgid "Returns a rotated copy of *x*, *y* times."
msgstr ""

#: ../Doc/library/decimal.rst:1402
msgid "Returns True if the two operands have the same exponent."
msgstr ""

#: ../Doc/library/decimal.rst:1407
msgid "Returns the first operand after adding the second value its exp."
msgstr ""

#: ../Doc/library/decimal.rst:1412
msgid "Returns a shifted copy of *x*, *y* times."
msgstr ""

#: ../Doc/library/decimal.rst:1417
msgid "Square root of a non-negative number to context precision."
msgstr ""

#: ../Doc/library/decimal.rst:1422
msgid "Return the difference between *x* and *y*."
msgstr ""

#: ../Doc/library/decimal.rst:1427
msgid "Converts a number to a string, using scientific notation."
msgstr ""

#: ../Doc/library/decimal.rst:1432
msgid "Rounds to an integer."
msgstr ""

#: ../Doc/library/decimal.rst:1437
msgid "Converts a number to a string using scientific notation."
msgstr ""

#: ../Doc/library/decimal.rst:1445
msgid "Signals"
msgstr ""

#: ../Doc/library/decimal.rst:1447
msgid ""
"Signals represent conditions that arise during computation. Each corresponds "
"to one context flag and one context trap enabler."
msgstr ""

#: ../Doc/library/decimal.rst:1450
msgid ""
"The context flag is set whenever the condition is encountered. After the "
"computation, flags may be checked for informational purposes (for instance, "
"to determine whether a computation was exact). After checking the flags, be "
"sure to clear all flags before starting the next computation."
msgstr ""

#: ../Doc/library/decimal.rst:1455
msgid ""
"If the context's trap enabler is set for the signal, then the condition "
"causes a Python exception to be raised.  For example, if the :class:"
"`DivisionByZero` trap is set, then a :exc:`DivisionByZero` exception is "
"raised upon encountering the condition."
msgstr ""

#: ../Doc/library/decimal.rst:1463
msgid "Altered an exponent to fit representation constraints."
msgstr ""

#: ../Doc/library/decimal.rst:1465
msgid ""
"Typically, clamping occurs when an exponent falls outside the context's :"
"attr:`Emin` and :attr:`Emax` limits.  If possible, the exponent is reduced "
"to fit by adding zeros to the coefficient."
msgstr ""

#: ../Doc/library/decimal.rst:1472
msgid "Base class for other signals and a subclass of :exc:`ArithmeticError`."
msgstr ""

#: ../Doc/library/decimal.rst:1477
msgid "Signals the division of a non-infinite number by zero."
msgstr ""

#: ../Doc/library/decimal.rst:1479
msgid ""
"Can occur with division, modulo division, or when raising a number to a "
"negative power.  If this signal is not trapped, returns :const:`Infinity` "
"or :const:`-Infinity` with the sign determined by the inputs to the "
"calculation."
msgstr ""

#: ../Doc/library/decimal.rst:1486
msgid "Indicates that rounding occurred and the result is not exact."
msgstr ""

#: ../Doc/library/decimal.rst:1488
msgid ""
"Signals when non-zero digits were discarded during rounding. The rounded "
"result is returned.  The signal flag or trap is used to detect when results "
"are inexact."
msgstr ""

#: ../Doc/library/decimal.rst:1495
msgid "An invalid operation was performed."
msgstr ""

#: ../Doc/library/decimal.rst:1497
msgid ""
"Indicates that an operation was requested that does not make sense. If not "
"trapped, returns :const:`NaN`.  Possible causes include::"
msgstr ""

#: ../Doc/library/decimal.rst:1514
msgid "Numerical overflow."
msgstr ""

#: ../Doc/library/decimal.rst:1516
msgid ""
"Indicates the exponent is larger than :attr:`Emax` after rounding has "
"occurred.  If not trapped, the result depends on the rounding mode, either "
"pulling inward to the largest representable finite number or rounding "
"outward to :const:`Infinity`.  In either case, :class:`Inexact` and :class:"
"`Rounded` are also signaled."
msgstr ""

#: ../Doc/library/decimal.rst:1525
msgid "Rounding occurred though possibly no information was lost."
msgstr ""

#: ../Doc/library/decimal.rst:1527
msgid ""
"Signaled whenever rounding discards digits; even if those digits are zero "
"(such as rounding :const:`5.00` to :const:`5.0`).  If not trapped, returns "
"the result unchanged.  This signal is used to detect loss of significant "
"digits."
msgstr ""

#: ../Doc/library/decimal.rst:1535
msgid "Exponent was lower than :attr:`Emin` prior to rounding."
msgstr ""

#: ../Doc/library/decimal.rst:1537
msgid ""
"Occurs when an operation result is subnormal (the exponent is too small). If "
"not trapped, returns the result unchanged."
msgstr ""

#: ../Doc/library/decimal.rst:1543
msgid "Numerical underflow with result rounded to zero."
msgstr ""

#: ../Doc/library/decimal.rst:1545
msgid ""
"Occurs when a subnormal result is pushed to zero by rounding. :class:"
"`Inexact` and :class:`Subnormal` are also signaled."
msgstr ""

#: ../Doc/library/decimal.rst:1548
msgid "The following table summarizes the hierarchy of signals::"
msgstr ""

#: ../Doc/library/decimal.rst:1567
msgid "Floating Point Notes"
msgstr ""

#: ../Doc/library/decimal.rst:1571
msgid "Mitigating round-off error with increased precision"
msgstr ""

#: ../Doc/library/decimal.rst:1573
msgid ""
"The use of decimal floating point eliminates decimal representation error "
"(making it possible to represent :const:`0.1` exactly); however, some "
"operations can still incur round-off error when non-zero digits exceed the "
"fixed precision."
msgstr ""

#: ../Doc/library/decimal.rst:1577
msgid ""
"The effects of round-off error can be amplified by the addition or "
"subtraction of nearly offsetting quantities resulting in loss of "
"significance.  Knuth provides two instructive examples where rounded "
"floating point arithmetic with insufficient precision causes the breakdown "
"of the associative and distributive properties of addition:"
msgstr ""

#: ../Doc/library/decimal.rst:1601
msgid ""
"The :mod:`decimal` module makes it possible to restore the identities by "
"expanding the precision sufficiently to avoid loss of significance:"
msgstr ""

#: ../Doc/library/decimal.rst:1621
msgid "Special values"
msgstr ""

#: ../Doc/library/decimal.rst:1623
msgid ""
"The number system for the :mod:`decimal` module provides special values "
"including :const:`NaN`, :const:`sNaN`, :const:`-Infinity`, :const:"
"`Infinity`, and two zeros, :const:`+0` and :const:`-0`."
msgstr ""

#: ../Doc/library/decimal.rst:1627
msgid ""
"Infinities can be constructed directly with:  ``Decimal('Infinity')``. Also, "
"they can arise from dividing by zero when the :exc:`DivisionByZero` signal "
"is not trapped.  Likewise, when the :exc:`Overflow` signal is not trapped, "
"infinity can result from rounding beyond the limits of the largest "
"representable number."
msgstr ""

#: ../Doc/library/decimal.rst:1632
msgid ""
"The infinities are signed (affine) and can be used in arithmetic operations "
"where they get treated as very large, indeterminate numbers.  For instance, "
"adding a constant to infinity gives another infinite result."
msgstr ""

#: ../Doc/library/decimal.rst:1636
msgid ""
"Some operations are indeterminate and return :const:`NaN`, or if the :exc:"
"`InvalidOperation` signal is trapped, raise an exception.  For example, "
"``0/0`` returns :const:`NaN` which means \"not a number\".  This variety of :"
"const:`NaN` is quiet and, once created, will flow through other computations "
"always resulting in another :const:`NaN`.  This behavior can be useful for a "
"series of computations that occasionally have missing inputs --- it allows "
"the calculation to proceed while flagging specific results as invalid."
msgstr ""

#: ../Doc/library/decimal.rst:1644
msgid ""
"A variant is :const:`sNaN` which signals rather than remaining quiet after "
"every operation.  This is a useful return value when an invalid result needs "
"to interrupt a calculation for special handling."
msgstr ""

#: ../Doc/library/decimal.rst:1648
msgid ""
"The behavior of Python's comparison operators can be a little surprising "
"where a :const:`NaN` is involved.  A test for equality where one of the "
"operands is a quiet or signaling :const:`NaN` always returns :const:`False` "
"(even when doing ``Decimal('NaN')==Decimal('NaN')``), while a test for "
"inequality always returns :const:`True`.  An attempt to compare two Decimals "
"using any of the ``<``, ``<=``, ``>`` or ``>=`` operators will raise the :"
"exc:`InvalidOperation` signal if either operand is a :const:`NaN`, and "
"return :const:`False` if this signal is not trapped.  Note that the General "
"Decimal Arithmetic specification does not specify the behavior of direct "
"comparisons; these rules for comparisons involving a :const:`NaN` were taken "
"from the IEEE 854 standard (see Table 3 in section 5.7).  To ensure strict "
"standards-compliance, use the :meth:`compare` and :meth:`compare-signal` "
"methods instead."
msgstr ""

#: ../Doc/library/decimal.rst:1661
msgid ""
"The signed zeros can result from calculations that underflow. They keep the "
"sign that would have resulted if the calculation had been carried out to "
"greater precision.  Since their magnitude is zero, both positive and "
"negative zeros are treated as equal and their sign is informational."
msgstr ""

#: ../Doc/library/decimal.rst:1666
msgid ""
"In addition to the two signed zeros which are distinct yet equal, there are "
"various representations of zero with differing precisions yet equivalent in "
"value.  This takes a bit of getting used to.  For an eye accustomed to "
"normalized floating point representations, it is not immediately obvious "
"that the following calculation returns a value equal to zero:"
msgstr ""

#: ../Doc/library/decimal.rst:1681
msgid "Working with threads"
msgstr ""

#: ../Doc/library/decimal.rst:1683
msgid ""
"The :func:`getcontext` function accesses a different :class:`Context` object "
"for each thread.  Having separate thread contexts means that threads may "
"make changes (such as ``getcontext.prec=10``) without interfering with other "
"threads."
msgstr ""

#: ../Doc/library/decimal.rst:1687
msgid ""
"Likewise, the :func:`setcontext` function automatically assigns its target "
"to the current thread."
msgstr ""

#: ../Doc/library/decimal.rst:1690
msgid ""
"If :func:`setcontext` has not been called before :func:`getcontext`, then :"
"func:`getcontext` will automatically create a new context for use in the "
"current thread."
msgstr ""

#: ../Doc/library/decimal.rst:1694
msgid ""
"The new context is copied from a prototype context called *DefaultContext*. "
"To control the defaults so that each thread will use the same values "
"throughout the application, directly modify the *DefaultContext* object. "
"This should be done *before* any threads are started so that there won't be "
"a race condition between threads calling :func:`getcontext`. For example::"
msgstr ""

#: ../Doc/library/decimal.rst:1719 ../Doc/library/itertools.rst:662
msgid "Recipes"
msgstr ""

#: ../Doc/library/decimal.rst:1721
msgid ""
"Here are a few recipes that serve as utility functions and that demonstrate "
"ways to work with the :class:`Decimal` class::"
msgstr ""

#: ../Doc/library/decimal.rst:1869
msgid "Decimal FAQ"
msgstr ""

#: ../Doc/library/decimal.rst:1871
msgid ""
"Q. It is cumbersome to type ``decimal.Decimal('1234.5')``.  Is there a way "
"to minimize typing when using the interactive interpreter?"
msgstr ""

#: ../Doc/library/decimal.rst:1874
msgid "A. Some users abbreviate the constructor to just a single letter:"
msgstr ""

#: ../Doc/library/decimal.rst:1880
msgid ""
"Q. In a fixed-point application with two decimal places, some inputs have "
"many places and need to be rounded.  Others are not supposed to have excess "
"digits and need to be validated.  What methods should be used?"
msgstr ""

#: ../Doc/library/decimal.rst:1884
msgid ""
"A. The :meth:`quantize` method rounds to a fixed number of decimal places. "
"If the :const:`Inexact` trap is set, it is also useful for validation:"
msgstr ""

#: ../Doc/library/decimal.rst:1902
msgid ""
"Q. Once I have valid two place inputs, how do I maintain that invariant "
"throughout an application?"
msgstr ""

#: ../Doc/library/decimal.rst:1905
msgid ""
"A. Some operations like addition, subtraction, and multiplication by an "
"integer will automatically preserve fixed point.  Others operations, like "
"division and non-integer multiplication, will change the number of decimal "
"places and need to be followed-up with a :meth:`quantize` step:"
msgstr ""

#: ../Doc/library/decimal.rst:1923
msgid ""
"In developing fixed-point applications, it is convenient to define functions "
"to handle the :meth:`quantize` step:"
msgstr ""

#: ../Doc/library/decimal.rst:1936
msgid ""
"Q. There are many ways to express the same value.  The numbers :const:"
"`200`, :const:`200.000`, :const:`2E2`, and :const:`.02E+4` all have the same "
"value at various precisions. Is there a way to transform them to a single "
"recognizable canonical value?"
msgstr ""

#: ../Doc/library/decimal.rst:1941
msgid ""
"A. The :meth:`normalize` method maps all equivalent values to a single "
"representative:"
msgstr ""

#: ../Doc/library/decimal.rst:1948
msgid ""
"Q. Some decimal values always print with exponential notation.  Is there a "
"way to get a non-exponential representation?"
msgstr ""

#: ../Doc/library/decimal.rst:1951
msgid ""
"A. For some values, exponential notation is the only way to express the "
"number of significant places in the coefficient.  For example, expressing :"
"const:`5.0E+3` as :const:`5000` keeps the value constant but cannot show the "
"original's two-place significance."
msgstr ""

# 6fa0d264b92144d4a17996134471b764
#: ../Doc/library/decimal.rst:1956
msgid ""
"If an application does not care about tracking significance, it is easy to "
"remove the exponent and trailing zeros, losing significance, but keeping the "
"value unchanged::"
msgstr ""

#: ../Doc/library/decimal.rst:1969
msgid "Q. Is there a way to convert a regular float to a :class:`Decimal`?"
msgstr ""

#: ../Doc/library/decimal.rst:1971
msgid ""
"A. Yes, any binary floating point number can be exactly expressed as a "
"Decimal though an exact conversion may take more precision than intuition "
"would suggest:"
msgstr ""

#: ../Doc/library/decimal.rst:1980
msgid ""
"Q. Within a complex calculation, how can I make sure that I haven't gotten a "
"spurious result because of insufficient precision or rounding anomalies."
msgstr ""

#: ../Doc/library/decimal.rst:1983
msgid ""
"A. The decimal module makes it easy to test results.  A best practice is to "
"re-run calculations using greater precision and with various rounding modes. "
"Widely differing results indicate insufficient precision, rounding mode "
"issues, ill-conditioned inputs, or a numerically unstable algorithm."
msgstr ""

#: ../Doc/library/decimal.rst:1988
msgid ""
"Q. I noticed that context precision is applied to the results of operations "
"but not to the inputs.  Is there anything to watch out for when mixing "
"values of different precisions?"
msgstr ""

#: ../Doc/library/decimal.rst:1992
msgid ""
"A. Yes.  The principle is that all values are considered to be exact and so "
"is the arithmetic on those values.  Only the results are rounded.  The "
"advantage for inputs is that \"what you type is what you get\".  A "
"disadvantage is that the results can look odd if you forget that the inputs "
"haven't been rounded:"
msgstr ""

#: ../Doc/library/decimal.rst:2005
msgid ""
"The solution is either to increase precision or to force rounding of inputs "
"using the unary plus operation:"
msgstr ""

#: ../Doc/library/decimal.rst:2014
msgid ""
"Alternatively, inputs can be rounded upon creation using the :meth:`Context."
"create_decimal` method:"
msgstr ""

#: ../Doc/library/development.rst:6
msgid "Development Tools"
msgstr ""

#: ../Doc/library/development.rst:8
msgid ""
"The modules described in this chapter help you write software.  For example, "
"the :mod:`pydoc` module takes a module and generates documentation based on "
"the module's contents.  The :mod:`doctest` and :mod:`unittest` modules "
"contains frameworks for writing unit tests that automatically exercise code "
"and verify that the expected output is produced.  :program:`2to3` can "
"translate Python 2.x source code into valid Python 3.x code."
msgstr ""

#: ../Doc/library/development.rst:15 ../Doc/library/i18n.rst:13
#: ../Doc/library/ipc.rst:15 ../Doc/library/persistence.rst:16
msgid "The list of modules described in this chapter is:"
msgstr ""

#: ../Doc/library/difflib.rst:2
msgid ":mod:`difflib` --- Helpers for computing deltas"
msgstr ""

#: ../Doc/library/difflib.rst:17
msgid ""
"This module provides classes and functions for comparing sequences. It can "
"be used for example, for comparing files, and can produce difference "
"information in various formats, including HTML and context and unified "
"diffs. For comparing directories and files, see also, the :mod:`filecmp` "
"module."
msgstr ""

#: ../Doc/library/difflib.rst:24
msgid ""
"This is a flexible class for comparing pairs of sequences of any type, so "
"long as the sequence elements are :term:`hashable`.  The basic algorithm "
"predates, and is a little fancier than, an algorithm published in the late "
"1980's by Ratcliff and Obershelp under the hyperbolic name \"gestalt pattern "
"matching.\"  The idea is to find the longest contiguous matching subsequence "
"that contains no \"junk\" elements (the Ratcliff and Obershelp algorithm "
"doesn't address junk).  The same idea is then applied recursively to the "
"pieces of the sequences to the left and to the right of the matching "
"subsequence.  This does not yield minimal edit sequences, but does tend to "
"yield matches that \"look right\" to people."
msgstr ""

#: ../Doc/library/difflib.rst:34
msgid ""
"**Timing:** The basic Ratcliff-Obershelp algorithm is cubic time in the "
"worst case and quadratic time in the expected case. :class:`SequenceMatcher` "
"is quadratic time for the worst case and has expected-case behavior "
"dependent in a complicated way on how many elements the sequences have in "
"common; best case time is linear."
msgstr ""

# 7b182aa023bb44299f95b2c46c47b811
#: ../Doc/library/difflib.rst:40
msgid ""
"**Automatic junk heuristic:** :class:`SequenceMatcher` supports a heuristic "
"that automatically treats certain sequence items as junk. The heuristic "
"counts how many times each individual item appears in the sequence. If an "
"item's duplicates (after the first one) account for more than 1% of the "
"sequence and the sequence is at least 200 items long, this item is marked as "
"\"popular\" and is treated as junk for the purpose of sequence matching. "
"This heuristic can be turned off by setting the ``autojunk`` argument to "
"``False`` when creating the :class:`SequenceMatcher`."
msgstr ""

#: ../Doc/library/difflib.rst:53
msgid ""
"This is a class for comparing sequences of lines of text, and producing "
"human-readable differences or deltas.  Differ uses :class:`SequenceMatcher` "
"both to compare sequences of lines, and to compare sequences of characters "
"within similar (near-matching) lines."
msgstr ""

#: ../Doc/library/difflib.rst:58
msgid "Each line of a :class:`Differ` delta begins with a two-letter code:"
msgstr ""

#: ../Doc/library/difflib.rst:61
msgid "Code"
msgstr ""

#: ../Doc/library/difflib.rst:63
msgid "``'- '``"
msgstr ""

#: ../Doc/library/difflib.rst:63
msgid "line unique to sequence 1"
msgstr ""

#: ../Doc/library/difflib.rst:65
msgid "``'+ '``"
msgstr ""

#: ../Doc/library/difflib.rst:65
msgid "line unique to sequence 2"
msgstr ""

#: ../Doc/library/difflib.rst:67
msgid "``'  '``"
msgstr ""

#: ../Doc/library/difflib.rst:67
msgid "line common to both sequences"
msgstr ""

#: ../Doc/library/difflib.rst:69
msgid "``'? '``"
msgstr ""

#: ../Doc/library/difflib.rst:69
msgid "line not present in either input sequence"
msgstr ""

#: ../Doc/library/difflib.rst:72
msgid ""
"Lines beginning with '``?``' attempt to guide the eye to intraline "
"differences, and were not present in either input sequence. These lines can "
"be confusing if the sequences contain tab characters."
msgstr ""

#: ../Doc/library/difflib.rst:79
msgid ""
"This class can be used to create an HTML table (or a complete HTML file "
"containing the table) showing a side by side, line by line comparison of "
"text with inter-line and intra-line change highlights.  The table can be "
"generated in either full or contextual difference mode."
msgstr ""

#: ../Doc/library/difflib.rst:84
msgid "The constructor for this class is:"
msgstr ""

#: ../Doc/library/difflib.rst:89
msgid "Initializes instance of :class:`HtmlDiff`."
msgstr ""

#: ../Doc/library/difflib.rst:91
msgid ""
"*tabsize* is an optional keyword argument to specify tab stop spacing and "
"defaults to ``8``."
msgstr ""

#: ../Doc/library/difflib.rst:94
msgid ""
"*wrapcolumn* is an optional keyword to specify column number where lines are "
"broken and wrapped, defaults to ``None`` where lines are not wrapped."
msgstr ""

#: ../Doc/library/difflib.rst:97
msgid ""
"*linejunk* and *charjunk* are optional keyword arguments passed into ``ndiff"
"()`` (used by :class:`HtmlDiff` to generate the side by side HTML "
"differences).  See ``ndiff()`` documentation for argument default values and "
"descriptions."
msgstr ""

#: ../Doc/library/difflib.rst:101
msgid "The following methods are public:"
msgstr ""

#: ../Doc/library/difflib.rst:106
msgid ""
"Compares *fromlines* and *tolines* (lists of strings) and returns a string "
"which is a complete HTML file containing a table showing line by line "
"differences with inter-line and intra-line changes highlighted."
msgstr ""

#: ../Doc/library/difflib.rst:110
msgid ""
"*fromdesc* and *todesc* are optional keyword arguments to specify from/to "
"file column header strings (both default to an empty string)."
msgstr ""

#: ../Doc/library/difflib.rst:113
msgid ""
"*context* and *numlines* are both optional keyword arguments. Set *context* "
"to ``True`` when contextual differences are to be shown, else the default is "
"``False`` to show the full files. *numlines* defaults to ``5``.  When "
"*context* is ``True`` *numlines* controls the number of context lines which "
"surround the difference highlights.  When *context* is ``False`` *numlines* "
"controls the number of lines which are shown before a difference highlight "
"when using the \"next\" hyperlinks (setting to zero would cause the \"next\" "
"hyperlinks to place the next difference highlight at the top of the browser "
"without any leading context)."
msgstr ""

#: ../Doc/library/difflib.rst:126
msgid ""
"Compares *fromlines* and *tolines* (lists of strings) and returns a string "
"which is a complete HTML table showing line by line differences with inter-"
"line and intra-line changes highlighted."
msgstr ""

#: ../Doc/library/difflib.rst:130
msgid ""
"The arguments for this method are the same as those for the :meth:"
"`make_file` method."
msgstr ""

#: ../Doc/library/difflib.rst:133
msgid ""
":file:`Tools/scripts/diff.py` is a command-line front-end to this class and "
"contains a good example of its use."
msgstr ""

#: ../Doc/library/difflib.rst:141
msgid ""
"Compare *a* and *b* (lists of strings); return a delta (a :term:`generator` "
"generating the delta lines) in context diff format."
msgstr ""

#: ../Doc/library/difflib.rst:144
msgid ""
"Context diffs are a compact way of showing just the lines that have changed "
"plus a few lines of context.  The changes are shown in a before/after "
"style.  The number of context lines is set by *n* which defaults to three."
msgstr ""

#: ../Doc/library/difflib.rst:148
msgid ""
"By default, the diff control lines (those with ``***`` or ``---``) are "
"created with a trailing newline.  This is helpful so that inputs created "
"from :func:`file.readlines` result in diffs that are suitable for use with :"
"func:`file.writelines` since both the inputs and outputs have trailing "
"newlines."
msgstr ""

#: ../Doc/library/difflib.rst:154 ../Doc/library/difflib.rst:289
msgid ""
"For inputs that do not have trailing newlines, set the *lineterm* argument "
"to ``\"\"`` so that the output will be uniformly newline free."
msgstr ""

#: ../Doc/library/difflib.rst:157 ../Doc/library/difflib.rst:292
msgid ""
"The context diff format normally has a header for filenames and modification "
"times.  Any or all of these may be specified using strings for *fromfile*, "
"*tofile*, *fromfiledate*, and *tofiledate*.  The modification times are "
"normally expressed in the ISO 8601 format. If not specified, the strings "
"default to blanks."
msgstr ""

#: ../Doc/library/difflib.rst:181 ../Doc/library/difflib.rst:313
msgid "See :ref:`difflib-interface` for a more detailed example."
msgstr ""

#: ../Doc/library/difflib.rst:188
msgid ""
"Return a list of the best \"good enough\" matches.  *word* is a sequence for "
"which close matches are desired (typically a string), and *possibilities* is "
"a list of sequences against which to match *word* (typically a list of "
"strings)."
msgstr ""

#: ../Doc/library/difflib.rst:192
msgid ""
"Optional argument *n* (default ``3``) is the maximum number of close matches "
"to return; *n* must be greater than ``0``."
msgstr ""

#: ../Doc/library/difflib.rst:195
msgid ""
"Optional argument *cutoff* (default ``0.6``) is a float in the range [0, 1]. "
"Possibilities that don't score at least that similar to *word* are ignored."
msgstr ""

#: ../Doc/library/difflib.rst:198
msgid ""
"The best (no more than *n*) matches among the possibilities are returned in "
"a list, sorted by similarity score, most similar first."
msgstr ""

#: ../Doc/library/difflib.rst:214
msgid ""
"Compare *a* and *b* (lists of strings); return a :class:`Differ`\\ -style "
"delta (a :term:`generator` generating the delta lines)."
msgstr ""

#: ../Doc/library/difflib.rst:217 ../Doc/library/difflib.rst:617
msgid ""
"Optional keyword parameters *linejunk* and *charjunk* are for filter "
"functions (or ``None``):"
msgstr ""

# e63525d99c154ecc915a7381679f9341
#: ../Doc/library/difflib.rst:220
msgid ""
"*linejunk*: A function that accepts a single string argument, and returns "
"true if the string is junk, or false if not. The default is (``None``), "
"starting with Python 2.3.  Before then, the default was the module-level "
"function :func:`IS_LINE_JUNK`, which filters out lines without visible "
"characters, except for at most one pound character (``'#'``). As of Python "
"2.3, the underlying :class:`SequenceMatcher` class does a dynamic analysis "
"of which lines are so frequent as to constitute noise, and this usually "
"works better than the pre-2.3 default."
msgstr ""

#: ../Doc/library/difflib.rst:229
msgid ""
"*charjunk*: A function that accepts a character (a string of length 1), and "
"returns if the character is junk, or false if not. The default is module-"
"level function :func:`IS_CHARACTER_JUNK`, which filters out whitespace "
"characters (a blank or tab; note: bad idea to include newline in this!)."
msgstr ""

#: ../Doc/library/difflib.rst:234
msgid ""
":file:`Tools/scripts/ndiff.py` is a command-line front-end to this function."
msgstr ""

#: ../Doc/library/difflib.rst:252
msgid "Return one of the two sequences that generated a delta."
msgstr ""

#: ../Doc/library/difflib.rst:254
msgid ""
"Given a *sequence* produced by :meth:`Differ.compare` or :func:`ndiff`, "
"extract lines originating from file 1 or 2 (parameter *which*), stripping "
"off line prefixes."
msgstr ""

#: ../Doc/library/difflib.rst:275
msgid ""
"Compare *a* and *b* (lists of strings); return a delta (a :term:`generator` "
"generating the delta lines) in unified diff format."
msgstr ""

#: ../Doc/library/difflib.rst:278
msgid ""
"Unified diffs are a compact way of showing just the lines that have changed "
"plus a few lines of context.  The changes are shown in a inline style "
"(instead of separate before/after blocks).  The number of context lines is "
"set by *n* which defaults to three."
msgstr ""

#: ../Doc/library/difflib.rst:283
msgid ""
"By default, the diff control lines (those with ``---``, ``+++``, or ``@@``) "
"are created with a trailing newline.  This is helpful so that inputs created "
"from :func:`file.readlines` result in diffs that are suitable for use with :"
"func:`file.writelines` since both the inputs and outputs have trailing "
"newlines."
msgstr ""

# f7601612a2c247b38cd011c1d5008089
#: ../Doc/library/difflib.rst:320
msgid ""
"Return true for ignorable lines.  The line *line* is ignorable if *line* is "
"blank or contains a single ``'#'``, otherwise it is not ignorable.  Used as "
"a default for parameter *linejunk* in :func:`ndiff` before Python 2.3."
msgstr ""

#: ../Doc/library/difflib.rst:327
msgid ""
"Return true for ignorable characters.  The character *ch* is ignorable if "
"*ch* is a space or tab, otherwise it is not ignorable.  Used as a default "
"for parameter *charjunk* in :func:`ndiff`."
msgstr ""

#: ../Doc/library/difflib.rst:335
msgid ""
"Discussion of a similar algorithm by John W. Ratcliff and D. E. Metzener. "
"This was published in `Dr. Dobb's Journal <http://www.ddj.com/>`_ in July, "
"1988."
msgstr ""

#: ../Doc/library/difflib.rst:342
msgid "SequenceMatcher Objects"
msgstr ""

#: ../Doc/library/difflib.rst:344
msgid "The :class:`SequenceMatcher` class has this constructor:"
msgstr ""

#: ../Doc/library/difflib.rst:349
msgid ""
"Optional argument *isjunk* must be ``None`` (the default) or a one-argument "
"function that takes a sequence element and returns true if and only if the "
"element is \"junk\" and should be ignored. Passing ``None`` for *isjunk* is "
"equivalent to passing ``lambda x: 0``; in other words, no elements are "
"ignored. For example, pass::"
msgstr ""

#: ../Doc/library/difflib.rst:357
msgid ""
"if you're comparing lines as sequences of characters, and don't want to "
"synch up on blanks or hard tabs."
msgstr ""

#: ../Doc/library/difflib.rst:360
msgid ""
"The optional arguments *a* and *b* are sequences to be compared; both "
"default to empty strings.  The elements of both sequences must be :term:"
"`hashable`."
msgstr ""

# a01789c0113b45ba812c7509502adf2e
#: ../Doc/library/difflib.rst:363
msgid ""
"The optional argument *autojunk* can be used to disable the automatic junk "
"heuristic."
msgstr ""

#: ../Doc/library/difflib.rst:369
msgid ":class:`SequenceMatcher` objects have the following methods:"
msgstr ""

#: ../Doc/library/difflib.rst:373
msgid "Set the two sequences to be compared."
msgstr ""

#: ../Doc/library/difflib.rst:375
msgid ""
":class:`SequenceMatcher` computes and caches detailed information about the "
"second sequence, so if you want to compare one sequence against many "
"sequences, use :meth:`set_seq2` to set the commonly used sequence once and "
"call :meth:`set_seq1` repeatedly, once for each of the other sequences."
msgstr ""

#: ../Doc/library/difflib.rst:383
msgid ""
"Set the first sequence to be compared.  The second sequence to be compared "
"is not changed."
msgstr ""

#: ../Doc/library/difflib.rst:389
msgid ""
"Set the second sequence to be compared.  The first sequence to be compared "
"is not changed."
msgstr ""

#: ../Doc/library/difflib.rst:395
msgid "Find longest matching block in ``a[alo:ahi]`` and ``b[blo:bhi]``."
msgstr ""

#: ../Doc/library/difflib.rst:397
msgid ""
"If *isjunk* was omitted or ``None``, :meth:`find_longest_match` returns ``"
"(i, j, k)`` such that ``a[i:i+k]`` is equal to ``b[j:j+k]``, where ``alo <= "
"i <= i+k <= ahi`` and ``blo <= j <= j+k <= bhi``. For all ``(i', j', k')`` "
"meeting those conditions, the additional conditions ``k >= k'``, ``i <= "
"i'``, and if ``i == i'``, ``j <= j'`` are also met. In other words, of all "
"maximal matching blocks, return one that starts earliest in *a*, and of all "
"those maximal matching blocks that start earliest in *a*, return the one "
"that starts earliest in *b*."
msgstr ""

#: ../Doc/library/difflib.rst:410
msgid ""
"If *isjunk* was provided, first the longest matching block is determined as "
"above, but with the additional restriction that no junk element appears in "
"the block.  Then that block is extended as far as possible by matching "
"(only) junk elements on both sides. So the resulting block never matches on "
"junk except as identical junk happens to be adjacent to an interesting match."
msgstr ""

#: ../Doc/library/difflib.rst:417
msgid ""
"Here's the same example as before, but considering blanks to be junk. That "
"prevents ``' abcd'`` from matching the ``' abcd'`` at the tail end of the "
"second sequence directly.  Instead only the ``'abcd'`` can match, and "
"matches the leftmost ``'abcd'`` in the second sequence:"
msgstr ""

#: ../Doc/library/difflib.rst:426
msgid "If no blocks match, this returns ``(alo, blo, 0)``."
msgstr ""

#: ../Doc/library/difflib.rst:434
msgid ""
"Return list of triples describing matching subsequences. Each triple is of "
"the form ``(i, j, n)``, and means that ``a[i:i+n] == b[j:j+n]``.  The "
"triples are monotonically increasing in *i* and *j*."
msgstr ""

#: ../Doc/library/difflib.rst:438
msgid ""
"The last triple is a dummy, and has the value ``(len(a), len(b), 0)``.  It "
"is the only triple with ``n == 0``.  If ``(i, j, n)`` and ``(i', j', n')`` "
"are adjacent triples in the list, and the second is not the last triple in "
"the list, then ``i+n != i'`` or ``j+n != j'``; in other words, adjacent "
"triples always describe non-adjacent equal blocks."
msgstr ""

#: ../Doc/library/difflib.rst:459
msgid ""
"Return list of 5-tuples describing how to turn *a* into *b*. Each tuple is "
"of the form ``(tag, i1, i2, j1, j2)``.  The first tuple has ``i1 == j1 == "
"0``, and remaining tuples have *i1* equal to the *i2* from the preceding "
"tuple, and, likewise, *j1* equal to the previous *j2*."
msgstr ""

#: ../Doc/library/difflib.rst:464
msgid "The *tag* values are strings, with these meanings:"
msgstr ""

#: ../Doc/library/difflib.rst:469
msgid "``a[i1:i2]`` should be replaced by ``b[j1:j2]``."
msgstr ""

#: ../Doc/library/difflib.rst:472
msgid "``'delete'``"
msgstr ""

#: ../Doc/library/difflib.rst:472
msgid "``a[i1:i2]`` should be deleted.  Note that ``j1 == j2`` in this case."
msgstr ""

#: ../Doc/library/difflib.rst:475
msgid "``'insert'``"
msgstr ""

#: ../Doc/library/difflib.rst:475
msgid ""
"``b[j1:j2]`` should be inserted at ``a[i1:i1]``. Note that ``i1 == i2`` in "
"this case."
msgstr ""

#: ../Doc/library/difflib.rst:479
msgid "``'equal'``"
msgstr ""

#: ../Doc/library/difflib.rst:479
msgid "``a[i1:i2] == b[j1:j2]`` (the sub-sequences are equal)."
msgstr ""

#: ../Doc/library/difflib.rst:483 ../Doc/library/multiprocessing.rst:809
#: ../Doc/library/re.rst:874 ../Doc/library/time.rst:374
#: ../Doc/library/turtle.rst:1427
msgid "For example:"
msgstr ""

#: ../Doc/library/difflib.rst:500
msgid "Return a :term:`generator` of groups with up to *n* lines of context."
msgstr ""

#: ../Doc/library/difflib.rst:502
msgid ""
"Starting with the groups returned by :meth:`get_opcodes`, this method splits "
"out smaller change clusters and eliminates intervening ranges which have no "
"changes."
msgstr ""

#: ../Doc/library/difflib.rst:506
msgid "The groups are returned in the same format as :meth:`get_opcodes`."
msgstr ""

#: ../Doc/library/difflib.rst:513
msgid ""
"Return a measure of the sequences' similarity as a float in the range [0, 1]."
msgstr ""

#: ../Doc/library/difflib.rst:516
msgid ""
"Where T is the total number of elements in both sequences, and M is the "
"number of matches, this is 2.0\\*M / T. Note that this is ``1.0`` if the "
"sequences are identical, and ``0.0`` if they have nothing in common."
msgstr ""

#: ../Doc/library/difflib.rst:520
msgid ""
"This is expensive to compute if :meth:`get_matching_blocks` or :meth:"
"`get_opcodes` hasn't already been called, in which case you may want to try :"
"meth:`quick_ratio` or :meth:`real_quick_ratio` first to get an upper bound."
msgstr ""

#: ../Doc/library/difflib.rst:528
msgid "Return an upper bound on :meth:`ratio` relatively quickly."
msgstr ""

#: ../Doc/library/difflib.rst:533
msgid "Return an upper bound on :meth:`ratio` very quickly."
msgstr ""

#: ../Doc/library/difflib.rst:536
msgid ""
"The three methods that return the ratio of matching to total characters can "
"give different results due to differing levels of approximation, although :"
"meth:`quick_ratio` and :meth:`real_quick_ratio` are always at least as large "
"as :meth:`ratio`:"
msgstr ""

#: ../Doc/library/difflib.rst:553
msgid "SequenceMatcher Examples"
msgstr ""

#: ../Doc/library/difflib.rst:555
msgid "This example compares two strings, considering blanks to be \"junk:\""
msgstr ""

#: ../Doc/library/difflib.rst:561
msgid ""
":meth:`ratio` returns a float in [0, 1], measuring the similarity of the "
"sequences.  As a rule of thumb, a :meth:`ratio` value over 0.6 means the "
"sequences are close matches:"
msgstr ""

#: ../Doc/library/difflib.rst:568
msgid ""
"If you're only interested in where the sequences match, :meth:"
"`get_matching_blocks` is handy:"
msgstr ""

#: ../Doc/library/difflib.rst:577
msgid ""
"Note that the last tuple returned by :meth:`get_matching_blocks` is always a "
"dummy, ``(len(a), len(b), 0)``, and this is the only case in which the last "
"tuple element (number of elements matched) is ``0``."
msgstr ""

#: ../Doc/library/difflib.rst:581
msgid ""
"If you want to know how to change the first sequence into the second, use :"
"meth:`get_opcodes`:"
msgstr ""

#: ../Doc/library/difflib.rst:592
msgid ""
"The :func:`get_close_matches` function in this module which shows how simple "
"code building on :class:`SequenceMatcher` can be used to do useful work."
msgstr ""

#: ../Doc/library/difflib.rst:596
msgid ""
"`Simple version control recipe <http://code.activestate.com/recipes/576729/"
">`_ for a small application built with :class:`SequenceMatcher`."
msgstr ""

#: ../Doc/library/difflib.rst:604
msgid "Differ Objects"
msgstr ""

#: ../Doc/library/difflib.rst:606
msgid ""
"Note that :class:`Differ`\\ -generated deltas make no claim to be "
"**minimal** diffs. To the contrary, minimal diffs are often counter-"
"intuitive, because they synch up anywhere possible, sometimes accidental "
"matches 100 pages apart. Restricting synch points to contiguous matches "
"preserves some notion of locality, at the occasional cost of producing a "
"longer diff."
msgstr ""

#: ../Doc/library/difflib.rst:612
msgid "The :class:`Differ` class has this constructor:"
msgstr ""

#: ../Doc/library/difflib.rst:620
msgid ""
"*linejunk*: A function that accepts a single string argument, and returns "
"true if the string is junk.  The default is ``None``, meaning that no line "
"is considered junk."
msgstr ""

#: ../Doc/library/difflib.rst:624
msgid ""
"*charjunk*: A function that accepts a single character argument (a string of "
"length 1), and returns true if the character is junk. The default is "
"``None``, meaning that no character is considered junk."
msgstr ""

#: ../Doc/library/difflib.rst:628
msgid ""
":class:`Differ` objects are used (deltas generated) via a single method:"
msgstr ""

#: ../Doc/library/difflib.rst:633
msgid ""
"Compare two sequences of lines, and generate the delta (a sequence of lines)."
msgstr ""

#: ../Doc/library/difflib.rst:635
msgid ""
"Each sequence must contain individual single-line strings ending with "
"newlines. Such sequences can be obtained from the :meth:`readlines` method "
"of file-like objects.  The delta generated also consists of newline-"
"terminated strings, ready to be printed as-is via the :meth:`writelines` "
"method of a file-like object."
msgstr ""

#: ../Doc/library/difflib.rst:644
msgid "Differ Example"
msgstr ""

#: ../Doc/library/difflib.rst:646
msgid ""
"This example compares two texts. First we set up the texts, sequences of "
"individual single-line strings ending with newlines (such sequences can also "
"be obtained from the :meth:`readlines` method of file-like objects):"
msgstr ""

#: ../Doc/library/difflib.rst:665
msgid "Next we instantiate a Differ object:"
msgstr ""

#: ../Doc/library/difflib.rst:669
msgid ""
"Note that when instantiating a :class:`Differ` object we may pass functions "
"to filter out line and character \"junk.\"  See the :meth:`Differ` "
"constructor for details."
msgstr ""

#: ../Doc/library/difflib.rst:673
msgid "Finally, we compare the two:"
msgstr ""

#: ../Doc/library/difflib.rst:677
msgid "``result`` is a list of strings, so let's pretty-print it:"
msgstr ""

#: ../Doc/library/difflib.rst:692
msgid "As a single multi-line string it looks like this:"
msgstr ""

#: ../Doc/library/difflib.rst:711
msgid "A command-line interface to difflib"
msgstr ""

#: ../Doc/library/difflib.rst:713
msgid ""
"This example shows how to use difflib to create a ``diff``-like utility. It "
"is also contained in the Python source distribution, as :file:`Tools/scripts/"
"diff.py`."
msgstr ""

# 7eb31213085c4fc6847135db71f55400
#: ../Doc/library/dircache.rst:3
msgid ":mod:`dircache` --- Cached directory listings"
msgstr ""

# e842768d6fca4455af5abc336206a5ed
#: ../Doc/library/dircache.rst:16
msgid ""
"The :mod:`dircache` module defines a function for reading directory listing "
"using a cache, and cache invalidation using the *mtime* of the directory. "
"Additionally, it defines a function to annotate directories by appending a "
"slash."
msgstr ""

# d8d0ae62d6a34ea08a2ed6ab5159d8db
#: ../Doc/library/dircache.rst:21
msgid "The :mod:`dircache` module defines the following functions:"
msgstr ""

# 47c85bc45cbc4231a86200e634265229
#: ../Doc/library/dircache.rst:26
msgid "Resets the directory cache."
msgstr ""

# c380be5993c8414586dba6484cf906cc
#: ../Doc/library/dircache.rst:31
msgid ""
"Return a directory listing of *path*, as gotten from :func:`os.listdir`. "
"Note that unless *path* changes, further call to :func:`listdir` will not re-"
"read the directory structure."
msgstr ""

# 3d9c36dd236b4aafa373580db035d91d
#: ../Doc/library/dircache.rst:35
msgid ""
"Note that the list returned should be regarded as read-only. (Perhaps a "
"future version should change it to return a tuple?)"
msgstr ""

# a0fe33c6407e4259a02e828d0c47aeea
#: ../Doc/library/dircache.rst:41
msgid "Same as :func:`listdir`. Defined for backwards compatibility."
msgstr ""

# 2d393ac21b69424ba7c38dc318955e4a
#: ../Doc/library/dircache.rst:46
msgid ""
"Assume *list* is a list of paths relative to *head*, and append, in place, a "
"``'/'`` to each path which points to a directory."
msgstr ""

#: ../Doc/library/dis.rst:2
msgid ":mod:`dis` --- Disassembler for Python bytecode"
msgstr ""

# 4530dfe816fb4169a059aeeebdb9b6e6
#: ../Doc/library/dis.rst:7
msgid "**Source code:** :source:`Lib/dis.py`"
msgstr ""

# 68fa17afc11544c59026f82244d0f21e
#: ../Doc/library/dis.rst:11
msgid ""
"The :mod:`dis` module supports the analysis of CPython :term:`bytecode` by "
"disassembling it. The CPython bytecode which this module takes as an input "
"is defined in the file :file:`Include/opcode.h` and used by the compiler and "
"the interpreter."
msgstr ""

# f88baabd1aa247ee87a128e7922abef8
#: ../Doc/library/dis.rst:18
msgid ""
"Bytecode is an implementation detail of the CPython interpreter!  No "
"guarantees are made that bytecode will not be added, removed, or changed "
"between versions of Python.  Use of this module should not be considered to "
"work across Python VMs or Python releases."
msgstr ""

#: ../Doc/library/dis.rst:23
msgid "Example: Given the function :func:`myfunc`::"
msgstr ""

#: ../Doc/library/dis.rst:28
msgid ""
"the following command can be used to get the disassembly of :func:`myfunc`::"
msgstr ""

#: ../Doc/library/dis.rst:36
msgid "(The \"2\" is a line number)."
msgstr ""

#: ../Doc/library/dis.rst:38
msgid "The :mod:`dis` module defines the following functions and constants:"
msgstr ""

# e339b8cdbe234646ae83d4eb5110cd27
#: ../Doc/library/dis.rst:43
msgid ""
"Disassemble the *bytesource* object. *bytesource* can denote either a "
"module, a class, a method, a function, or a code object.   For a module, it "
"disassembles all functions.  For a class, it disassembles all methods.  For "
"a single code sequence, it prints one line per bytecode instruction.  If no "
"object is provided, it disassembles the last traceback."
msgstr ""

#: ../Doc/library/dis.rst:52
msgid ""
"Disassembles the top-of-stack function of a traceback, using the last "
"traceback if none was passed.  The instruction causing the exception is "
"indicated."
msgstr ""

#: ../Doc/library/dis.rst:58
msgid ""
"Disassembles a code object, indicating the last instruction if *lasti* was "
"provided.  The output is divided in the following columns:"
msgstr ""

#: ../Doc/library/dis.rst:61
msgid "the line number, for the first instruction of each line"
msgstr ""

#: ../Doc/library/dis.rst:62
msgid "the current instruction, indicated as ``-->``,"
msgstr ""

#: ../Doc/library/dis.rst:63
msgid "a labelled instruction, indicated with ``>>``,"
msgstr ""

#: ../Doc/library/dis.rst:64
msgid "the address of the instruction,"
msgstr ""

#: ../Doc/library/dis.rst:65
msgid "the operation code name,"
msgstr ""

#: ../Doc/library/dis.rst:66
msgid "operation parameters, and"
msgstr ""

#: ../Doc/library/dis.rst:67
msgid "interpretation of the parameters in parentheses."
msgstr ""

#: ../Doc/library/dis.rst:69
msgid ""
"The parameter interpretation recognizes local and global variable names, "
"constant values, branch targets, and compare operators."
msgstr ""

# 4b2902aec436490986f3ed192b8f6277
#: ../Doc/library/dis.rst:75
msgid ""
"A synonym for :func:`disassemble`.  It is more convenient to type, and kept "
"for compatibility with earlier Python releases."
msgstr ""

#: ../Doc/library/dis.rst:81
msgid ""
"This generator function uses the ``co_firstlineno`` and ``co_lnotab`` "
"attributes of the code object *code* to find the offsets which are starts of "
"lines in the source code.  They are generated as ``(offset, lineno)`` pairs."
msgstr ""

#: ../Doc/library/dis.rst:88
msgid ""
"Detect all offsets in the code object *code* which are jump targets, and "
"return a list of these offsets."
msgstr ""

#: ../Doc/library/dis.rst:94
msgid "Sequence of operation names, indexable using the bytecode."
msgstr ""

# 26503e2a7e624f8f8bd2e5924b29b11f
#: ../Doc/library/dis.rst:99
msgid "Dictionary mapping operation names to bytecodes."
msgstr ""

#: ../Doc/library/dis.rst:104
msgid "Sequence of all compare operation names."
msgstr ""

#: ../Doc/library/dis.rst:109
msgid "Sequence of bytecodes that have a constant parameter."
msgstr ""

#: ../Doc/library/dis.rst:114
msgid "Sequence of bytecodes that access a free variable."
msgstr ""

#: ../Doc/library/dis.rst:119
msgid "Sequence of bytecodes that access an attribute by name."
msgstr ""

#: ../Doc/library/dis.rst:124
msgid "Sequence of bytecodes that have a relative jump target."
msgstr ""

#: ../Doc/library/dis.rst:129
msgid "Sequence of bytecodes that have an absolute jump target."
msgstr ""

#: ../Doc/library/dis.rst:134
msgid "Sequence of bytecodes that access a local variable."
msgstr ""

#: ../Doc/library/dis.rst:139
msgid "Sequence of bytecodes of Boolean operations."
msgstr ""

#: ../Doc/library/dis.rst:145
msgid "Python Bytecode Instructions"
msgstr ""

#: ../Doc/library/dis.rst:147
msgid ""
"The Python compiler currently generates the following bytecode instructions."
msgstr ""

#: ../Doc/library/dis.rst:152
msgid "Indicates end-of-code to the compiler, not used by the interpreter."
msgstr ""

#: ../Doc/library/dis.rst:157
msgid "Do nothing code.  Used as a placeholder by the bytecode optimizer."
msgstr ""

#: ../Doc/library/dis.rst:162
msgid "Removes the top-of-stack (TOS) item."
msgstr ""

#: ../Doc/library/dis.rst:167
msgid "Swaps the two top-most stack items."
msgstr ""

#: ../Doc/library/dis.rst:172
msgid ""
"Lifts second and third stack item one position up, moves top down to "
"position three."
msgstr ""

#: ../Doc/library/dis.rst:178
msgid ""
"Lifts second, third and forth stack item one position up, moves top down to "
"position four."
msgstr ""

#: ../Doc/library/dis.rst:184
msgid "Duplicates the reference on top of the stack."
msgstr ""

#: ../Doc/library/dis.rst:186
msgid ""
"Unary Operations take the top of the stack, apply the operation, and push "
"the result back on the stack."
msgstr ""

#: ../Doc/library/dis.rst:192
msgid "Implements ``TOS = +TOS``."
msgstr ""

#: ../Doc/library/dis.rst:197
msgid "Implements ``TOS = -TOS``."
msgstr ""

#: ../Doc/library/dis.rst:202
msgid "Implements ``TOS = not TOS``."
msgstr ""

# 7ca128966302472abae65d11d867bd0b
#: ../Doc/library/dis.rst:207
msgid "Implements ``TOS = `TOS```."
msgstr ""

#: ../Doc/library/dis.rst:212
msgid "Implements ``TOS = ~TOS``."
msgstr ""

#: ../Doc/library/dis.rst:217
msgid "Implements ``TOS = iter(TOS)``."
msgstr ""

#: ../Doc/library/dis.rst:219
msgid ""
"Binary operations remove the top of the stack (TOS) and the second top-most "
"stack item (TOS1) from the stack.  They perform the operation, and put the "
"result back on the stack."
msgstr ""

#: ../Doc/library/dis.rst:226
msgid "Implements ``TOS = TOS1 ** TOS``."
msgstr ""

#: ../Doc/library/dis.rst:231
msgid "Implements ``TOS = TOS1 * TOS``."
msgstr ""

# 187c918fb32b4ca59a7e6bb18eb90885
#: ../Doc/library/dis.rst:236
msgid ""
"Implements ``TOS = TOS1 / TOS`` when ``from __future__ import division`` is "
"not in effect."
msgstr ""

#: ../Doc/library/dis.rst:242
msgid "Implements ``TOS = TOS1 // TOS``."
msgstr ""

# 95cfb00ab6944da285fec30850a55cea
#: ../Doc/library/dis.rst:247
msgid ""
"Implements ``TOS = TOS1 / TOS`` when ``from __future__ import division`` is "
"in effect."
msgstr ""

#: ../Doc/library/dis.rst:253
msgid "Implements ``TOS = TOS1 % TOS``."
msgstr ""

#: ../Doc/library/dis.rst:258
msgid "Implements ``TOS = TOS1 + TOS``."
msgstr ""

#: ../Doc/library/dis.rst:263
msgid "Implements ``TOS = TOS1 - TOS``."
msgstr ""

#: ../Doc/library/dis.rst:268
msgid "Implements ``TOS = TOS1[TOS]``."
msgstr ""

#: ../Doc/library/dis.rst:273
msgid "Implements ``TOS = TOS1 << TOS``."
msgstr ""

#: ../Doc/library/dis.rst:278
msgid "Implements ``TOS = TOS1 >> TOS``."
msgstr ""

#: ../Doc/library/dis.rst:283
msgid "Implements ``TOS = TOS1 & TOS``."
msgstr ""

#: ../Doc/library/dis.rst:288
msgid "Implements ``TOS = TOS1 ^ TOS``."
msgstr ""

#: ../Doc/library/dis.rst:293
msgid "Implements ``TOS = TOS1 | TOS``."
msgstr ""

#: ../Doc/library/dis.rst:295
msgid ""
"In-place operations are like binary operations, in that they remove TOS and "
"TOS1, and push the result back on the stack, but the operation is done in-"
"place when TOS1 supports it, and the resulting TOS may be (but does not have "
"to be) the original TOS1."
msgstr ""

#: ../Doc/library/dis.rst:303
msgid "Implements in-place ``TOS = TOS1 ** TOS``."
msgstr ""

#: ../Doc/library/dis.rst:308
msgid "Implements in-place ``TOS = TOS1 * TOS``."
msgstr ""

# 193ede26b44648b699994e27570000e5
#: ../Doc/library/dis.rst:313
msgid ""
"Implements in-place ``TOS = TOS1 / TOS`` when ``from __future__ import "
"division`` is not in effect."
msgstr ""

#: ../Doc/library/dis.rst:319
msgid "Implements in-place ``TOS = TOS1 // TOS``."
msgstr ""

# f2d6ed4448e548ec92e39e26d9a39e91
#: ../Doc/library/dis.rst:324
msgid ""
"Implements in-place ``TOS = TOS1 / TOS`` when ``from __future__ import "
"division`` is in effect."
msgstr ""

#: ../Doc/library/dis.rst:330
msgid "Implements in-place ``TOS = TOS1 % TOS``."
msgstr ""

#: ../Doc/library/dis.rst:335
msgid "Implements in-place ``TOS = TOS1 + TOS``."
msgstr ""

#: ../Doc/library/dis.rst:340
msgid "Implements in-place ``TOS = TOS1 - TOS``."
msgstr ""

#: ../Doc/library/dis.rst:345
msgid "Implements in-place ``TOS = TOS1 << TOS``."
msgstr ""

#: ../Doc/library/dis.rst:350
msgid "Implements in-place ``TOS = TOS1 >> TOS``."
msgstr ""

#: ../Doc/library/dis.rst:355
msgid "Implements in-place ``TOS = TOS1 & TOS``."
msgstr ""

#: ../Doc/library/dis.rst:360
msgid "Implements in-place ``TOS = TOS1 ^ TOS``."
msgstr ""

#: ../Doc/library/dis.rst:365
msgid "Implements in-place ``TOS = TOS1 | TOS``."
msgstr ""

# e2122cb7ddf54c1b8c4e32f3a39eb93a
#: ../Doc/library/dis.rst:367
msgid "The slice opcodes take up to three parameters."
msgstr ""

# 94f0f5cef54549478d24e55544142f26
#: ../Doc/library/dis.rst:372
msgid "Implements ``TOS = TOS[:]``."
msgstr ""

# 4b772e8d190741d19a1c98916faa1282
#: ../Doc/library/dis.rst:377
msgid "Implements ``TOS = TOS1[TOS:]``."
msgstr ""

# b07729b688104e8184c2d0986de1dfe7
#: ../Doc/library/dis.rst:382
msgid "Implements ``TOS = TOS1[:TOS]``."
msgstr ""

# 3f65f1012f38495c86bcd7bfcc2b0e0a
#: ../Doc/library/dis.rst:387
msgid "Implements ``TOS = TOS2[TOS1:TOS]``."
msgstr ""

# 1383cf0444174d06924220d360f0c105
#: ../Doc/library/dis.rst:389
msgid ""
"Slice assignment needs even an additional parameter.  As any statement, they "
"put nothing on the stack."
msgstr ""

# b8ba68f05a2848bea954ad81a6cfc09a
#: ../Doc/library/dis.rst:395
msgid "Implements ``TOS[:] = TOS1``."
msgstr ""

# 3fb2edc2d75b4051af32eb4f743dea14
#: ../Doc/library/dis.rst:400
msgid "Implements ``TOS1[TOS:] = TOS2``."
msgstr ""

# 6f54e006a9f24ad28a76e7353b66a19c
#: ../Doc/library/dis.rst:405
msgid "Implements ``TOS1[:TOS] = TOS2``."
msgstr ""

# a3bba32b173e42498dfd6b64e5558540
#: ../Doc/library/dis.rst:410
msgid "Implements ``TOS2[TOS1:TOS] = TOS3``."
msgstr ""

# 5d2132c6532f438dbbd2a57a782dc896
#: ../Doc/library/dis.rst:415
msgid "Implements ``del TOS[:]``."
msgstr ""

# 56d48209f90e4ace859bbaa689eaf849
#: ../Doc/library/dis.rst:420
msgid "Implements ``del TOS1[TOS:]``."
msgstr ""

# ebd78625278547dfa3bb19fcbde5616c
#: ../Doc/library/dis.rst:425
msgid "Implements ``del TOS1[:TOS]``."
msgstr ""

# 670191720e6e40f390752db81490b57b
#: ../Doc/library/dis.rst:430
msgid "Implements ``del TOS2[TOS1:TOS]``."
msgstr ""

#: ../Doc/library/dis.rst:435
msgid "Implements ``TOS1[TOS] = TOS2``."
msgstr ""

#: ../Doc/library/dis.rst:440
msgid "Implements ``del TOS1[TOS]``."
msgstr ""

#: ../Doc/library/dis.rst:442
msgid "Miscellaneous opcodes."
msgstr ""

#: ../Doc/library/dis.rst:447
msgid ""
"Implements the expression statement for the interactive mode.  TOS is "
"removed from the stack and printed.  In non-interactive mode, an expression "
"statement is terminated with ``POP_STACK``."
msgstr ""

# b3a7ffc52a77439fb396f3d26855c969
#: ../Doc/library/dis.rst:454
msgid ""
"Prints TOS to the file-like object bound to ``sys.stdout``.  There is one "
"such instruction for each item in the :keyword:`print` statement."
msgstr ""

# 9828b76e252b4c0898dacc3d9b9e7c5d
#: ../Doc/library/dis.rst:460
msgid ""
"Like ``PRINT_ITEM``, but prints the item second from TOS to the file-like "
"object at TOS.  This is used by the extended print statement."
msgstr ""

# f49ba0d87fb3443182342368f7e40819
#: ../Doc/library/dis.rst:466
msgid ""
"Prints a new line on ``sys.stdout``.  This is generated as the last "
"operation of a :keyword:`print` statement, unless the statement ends with a "
"comma."
msgstr ""

# 0da5d3ddc44342beb9bbbd9a8214fe53
#: ../Doc/library/dis.rst:472
msgid ""
"Like ``PRINT_NEWLINE``, but prints the new line on the file-like object on "
"the TOS.  This is used by the extended print statement."
msgstr ""

#: ../Doc/library/dis.rst:478
msgid "Terminates a loop due to a :keyword:`break` statement."
msgstr ""

#: ../Doc/library/dis.rst:483
msgid ""
"Continues a loop due to a :keyword:`continue` statement.  *target* is the "
"address to jump to (which should be a ``FOR_ITER`` instruction)."
msgstr ""

# d6d51d27440e4f5984589acf273c42b7
#: ../Doc/library/dis.rst:489
msgid ""
"Calls ``list.append(TOS[-i], TOS)``.  Used to implement list comprehensions. "
"While the appended value is popped off, the list object remains on the stack "
"so that it is available for further iterations of the loop."
msgstr ""

# f79dd3f4391b490bae8eb3a93fcc45e9
#: ../Doc/library/dis.rst:496
msgid ""
"Pushes a reference to the locals of the current scope on the stack. This is "
"used in the code for a class definition: After the class body is evaluated, "
"the locals are passed to the class definition."
msgstr ""

#: ../Doc/library/dis.rst:503
msgid "Returns with TOS to the caller of the function."
msgstr ""

#: ../Doc/library/dis.rst:508
msgid "Pops ``TOS`` and yields it from a :term:`generator`."
msgstr ""

#: ../Doc/library/dis.rst:513
msgid ""
"Loads all symbols not starting with ``'_'`` directly from the module TOS to "
"the local namespace. The module is popped after loading all names. This "
"opcode implements ``from module import *``."
msgstr ""

# f45f8df8c8aa4bfe9476cba7eea622d7
#: ../Doc/library/dis.rst:520
msgid ""
"Implements ``exec TOS2,TOS1,TOS``.  The compiler fills missing optional "
"parameters with ``None``."
msgstr ""

#: ../Doc/library/dis.rst:526
msgid ""
"Removes one block from the block stack.  Per frame, there is a  stack of "
"blocks, denoting nested loops, try statements, and such."
msgstr ""

#: ../Doc/library/dis.rst:532
msgid ""
"Terminates a :keyword:`finally` clause.  The interpreter recalls whether the "
"exception has to be re-raised, or whether the function returns, and "
"continues with the outer-next block."
msgstr ""

# a5a2ad70496c4aa58f36d4d70ae046ee
#: ../Doc/library/dis.rst:539
msgid ""
"Creates a new class object.  TOS is the methods dictionary, TOS1 the tuple "
"of the names of the base classes, and TOS2 the class name."
msgstr ""

#: ../Doc/library/dis.rst:545
msgid ""
"This opcode performs several operations before a with block starts.  First, "
"it loads :meth:`~object.__exit__` from the context manager and pushes it "
"onto the stack for later use by :opcode:`WITH_CLEANUP`.  Then, :meth:"
"`~object.__enter__` is called, and a finally block pointing to *delta* is "
"pushed.  Finally, the result of calling the enter method is pushed onto the "
"stack.  The next opcode will either ignore it (:opcode:`POP_TOP`), or store "
"it in (a) variable(s) (:opcode:`STORE_FAST`, :opcode:`STORE_NAME`, or :"
"opcode:`UNPACK_SEQUENCE`)."
msgstr ""

# 27b6d86d77594417a36f9c10ed42f722
#: ../Doc/library/dis.rst:557
msgid ""
"Cleans up the stack when a :keyword:`with` statement block exits.  On top of "
"the stack are 1--3 values indicating how/why the finally clause was entered:"
msgstr ""

# cd2e06b609094a14b4c219377a78dc3c
#: ../Doc/library/dis.rst:560
msgid "TOP = ``None``"
msgstr ""

# d9a19d77c8dd481b82abb5bf1871e454
#: ../Doc/library/dis.rst:561
msgid "(TOP, SECOND) = (``WHY_{RETURN,CONTINUE}``), retval"
msgstr ""

# f8e581543d98440793eb2f4d7185b674
#: ../Doc/library/dis.rst:562
msgid "TOP = ``WHY_*``; no retval below it"
msgstr ""

# 69e5d45b1ba645e3b2137a609c845dfb
#: ../Doc/library/dis.rst:563
msgid "(TOP, SECOND, THIRD) = exc_info()"
msgstr ""

# 53a5d111e4c34f8387a5bce1d81a1416
#: ../Doc/library/dis.rst:565
msgid ""
"Under them is EXIT, the context manager's :meth:`__exit__` bound method."
msgstr ""

# 675c749767ad4ce69f8b29435af8b9ac
#: ../Doc/library/dis.rst:567
msgid ""
"In the last case, ``EXIT(TOP, SECOND, THIRD)`` is called, otherwise ``EXIT"
"(None, None, None)``."
msgstr ""

# f1d6a96cad3342c096992771605c7cfc
#: ../Doc/library/dis.rst:570
msgid ""
"EXIT is removed from the stack, leaving the values above it in the same "
"order. In addition, if the stack represents an exception, *and* the function "
"call returns a 'true' value, this information is \"zapped\", to prevent "
"``END_FINALLY`` from re-raising the exception.  (But non-local gotos should "
"still be resumed.)"
msgstr ""

#: ../Doc/library/dis.rst:579
msgid ""
"All of the following opcodes expect arguments.  An argument is two bytes, "
"with the more significant byte last."
msgstr ""

#: ../Doc/library/dis.rst:584
msgid ""
"Implements ``name = TOS``. *namei* is the index of *name* in the attribute :"
"attr:`co_names` of the code object. The compiler tries to use ``STORE_FAST`` "
"or ``STORE_GLOBAL`` if possible."
msgstr ""

#: ../Doc/library/dis.rst:591
msgid ""
"Implements ``del name``, where *namei* is the index into :attr:`co_names` "
"attribute of the code object."
msgstr ""

#: ../Doc/library/dis.rst:597
msgid ""
"Unpacks TOS into *count* individual values, which are put onto the stack "
"right-to-left."
msgstr ""

#: ../Doc/library/dis.rst:603
msgid ""
"Duplicate *count* items, keeping them in the same order. Due to "
"implementation limits, *count* should be between 1 and 5 inclusive."
msgstr ""

#: ../Doc/library/dis.rst:609
msgid ""
"Implements ``TOS.name = TOS1``, where *namei* is the index of name in :attr:"
"`co_names`."
msgstr ""

#: ../Doc/library/dis.rst:615
msgid ""
"Implements ``del TOS.name``, using *namei* as index into :attr:`co_names`."
msgstr ""

#: ../Doc/library/dis.rst:620
msgid "Works as ``STORE_NAME``, but stores the name as a global."
msgstr ""

#: ../Doc/library/dis.rst:625
msgid "Works as ``DELETE_NAME``, but deletes a global name."
msgstr ""

#: ../Doc/library/dis.rst:630
msgid "Pushes ``co_consts[consti]`` onto the stack."
msgstr ""

#: ../Doc/library/dis.rst:635
msgid "Pushes the value associated with ``co_names[namei]`` onto the stack."
msgstr ""

#: ../Doc/library/dis.rst:640
msgid ""
"Creates a tuple consuming *count* items from the stack, and pushes the "
"resulting tuple onto the stack."
msgstr ""

#: ../Doc/library/dis.rst:646
msgid "Works as ``BUILD_TUPLE``, but creates a list."
msgstr ""

#: ../Doc/library/dis.rst:651
msgid ""
"Pushes a new dictionary object onto the stack.  The dictionary is pre-sized "
"to hold *count* entries."
msgstr ""

#: ../Doc/library/dis.rst:657
msgid "Replaces TOS with ``getattr(TOS, co_names[namei])``."
msgstr ""

#: ../Doc/library/dis.rst:662
msgid ""
"Performs a Boolean operation.  The operation name can be found in ``cmp_op"
"[opname]``."
msgstr ""

#: ../Doc/library/dis.rst:668
msgid ""
"Imports the module ``co_names[namei]``.  TOS and TOS1 are popped and provide "
"the *fromlist* and *level* arguments of :func:`__import__`.  The module "
"object is pushed onto the stack.  The current namespace is not affected: for "
"a proper import statement, a subsequent ``STORE_FAST`` instruction modifies "
"the namespace."
msgstr ""

#: ../Doc/library/dis.rst:677
msgid ""
"Loads the attribute ``co_names[namei]`` from the module found in TOS. The "
"resulting object is pushed onto the stack, to be subsequently stored by a "
"``STORE_FAST`` instruction."
msgstr ""

#: ../Doc/library/dis.rst:684
msgid "Increments bytecode counter by *delta*."
msgstr ""

#: ../Doc/library/dis.rst:689
msgid "If TOS is true, sets the bytecode counter to *target*.  TOS is popped."
msgstr ""

#: ../Doc/library/dis.rst:694
msgid "If TOS is false, sets the bytecode counter to *target*.  TOS is popped."
msgstr ""

#: ../Doc/library/dis.rst:699
msgid ""
"If TOS is true, sets the bytecode counter to *target* and leaves TOS on the "
"stack.  Otherwise (TOS is false), TOS is popped."
msgstr ""

#: ../Doc/library/dis.rst:705
msgid ""
"If TOS is false, sets the bytecode counter to *target* and leaves TOS on the "
"stack.  Otherwise (TOS is true), TOS is popped."
msgstr ""

#: ../Doc/library/dis.rst:711
msgid "Set bytecode counter to *target*."
msgstr ""

# bde7f4ce32e44fc1bac26557009534f4
#: ../Doc/library/dis.rst:716
msgid ""
"``TOS`` is an :term:`iterator`.  Call its :meth:`!next` method.  If this "
"yields a new value, push it on the stack (leaving the iterator below it).  "
"If the iterator indicates it is exhausted ``TOS`` is popped, and the "
"bytecode counter is incremented by *delta*."
msgstr ""

#: ../Doc/library/dis.rst:724
msgid "Loads the global named ``co_names[namei]`` onto the stack."
msgstr ""

#: ../Doc/library/dis.rst:729
msgid ""
"Pushes a block for a loop onto the block stack.  The block spans from the "
"current instruction with a size of *delta* bytes."
msgstr ""

#: ../Doc/library/dis.rst:735
msgid ""
"Pushes a try block from a try-except clause onto the block stack. *delta* "
"points to the first except block."
msgstr ""

#: ../Doc/library/dis.rst:741
msgid ""
"Pushes a try block from a try-except clause onto the block stack. *delta* "
"points to the finally block."
msgstr ""

#: ../Doc/library/dis.rst:746
msgid ""
"Store a key and value pair in a dictionary.  Pops the key and value while "
"leaving the dictionary on the stack."
msgstr ""

#: ../Doc/library/dis.rst:751
msgid ""
"Pushes a reference to the local ``co_varnames[var_num]`` onto the stack."
msgstr ""

#: ../Doc/library/dis.rst:756
msgid "Stores TOS into the local ``co_varnames[var_num]``."
msgstr ""

#: ../Doc/library/dis.rst:761
msgid "Deletes local ``co_varnames[var_num]``."
msgstr ""

#: ../Doc/library/dis.rst:766
msgid ""
"Pushes a reference to the cell contained in slot *i* of the cell and free "
"variable storage.  The name of the variable is  ``co_cellvars[i]`` if *i* is "
"less than the length of *co_cellvars*.  Otherwise it is  ``co_freevars[i - "
"len(co_cellvars)]``."
msgstr ""

#: ../Doc/library/dis.rst:774
msgid ""
"Loads the cell contained in slot *i* of the cell and free variable storage. "
"Pushes a reference to the object the cell contains on the stack."
msgstr ""

#: ../Doc/library/dis.rst:780
msgid ""
"Stores TOS into the cell contained in slot *i* of the cell and free variable "
"storage."
msgstr ""

#: ../Doc/library/dis.rst:786
msgid "This opcode is obsolete."
msgstr ""

#: ../Doc/library/dis.rst:791
msgid ""
"Raises an exception. *argc* indicates the number of parameters to the raise "
"statement, ranging from 0 to 3.  The handler will find the traceback as "
"TOS2, the parameter as TOS1, and the exception as TOS."
msgstr ""

#: ../Doc/library/dis.rst:798
msgid ""
"Calls a function.  The low byte of *argc* indicates the number of positional "
"parameters, the high byte the number of keyword parameters. On the stack, "
"the opcode finds the keyword parameters first.  For each keyword argument, "
"the value is on top of the key.  Below the keyword parameters, the "
"positional parameters are on the stack, with the right-most parameter on "
"top.  Below the parameters, the function object to call is on the stack.  "
"Pops all function arguments, and the function itself off the stack, and "
"pushes the return value."
msgstr ""

#: ../Doc/library/dis.rst:809
msgid ""
"Pushes a new function object on the stack.  TOS is the code associated with "
"the function.  The function object is defined to have *argc* default "
"parameters, which are found below TOS."
msgstr ""

# 9b5dcab204104e78a8c50d298016de4c
#: ../Doc/library/dis.rst:816
msgid ""
"Creates a new function object, sets its *func_closure* slot, and pushes it "
"on the stack.  TOS is the code associated with the function, TOS1 the tuple "
"containing cells for the closure's free variables.  The function also has "
"*argc* default parameters, which are found below the cells."
msgstr ""

#: ../Doc/library/dis.rst:826
msgid ""
"Pushes a slice object on the stack.  *argc* must be 2 or 3.  If it is 2, "
"``slice(TOS1, TOS)`` is pushed; if it is 3, ``slice(TOS2, TOS1, TOS)`` is "
"pushed. See the :func:`slice` built-in function for more information."
msgstr ""

#: ../Doc/library/dis.rst:833
msgid ""
"Prefixes any opcode which has an argument too big to fit into the default "
"two bytes.  *ext* holds two additional bytes which, taken together with the "
"subsequent opcode's argument, comprise a four-byte argument, *ext* being the "
"two most-significant bytes."
msgstr ""

#: ../Doc/library/dis.rst:841
msgid ""
"Calls a function. *argc* is interpreted as in ``CALL_FUNCTION``. The top "
"element on the stack contains the variable argument list, followed by "
"keyword and positional arguments."
msgstr ""

#: ../Doc/library/dis.rst:848
msgid ""
"Calls a function. *argc* is interpreted as in ``CALL_FUNCTION``. The top "
"element on the stack contains the keyword arguments dictionary,  followed by "
"explicit keyword and positional arguments."
msgstr ""

#: ../Doc/library/dis.rst:855
msgid ""
"Calls a function. *argc* is interpreted as in ``CALL_FUNCTION``.  The top "
"element on the stack contains the keyword arguments dictionary, followed by "
"the variable-arguments tuple, followed by explicit keyword and positional "
"arguments."
msgstr ""

#: ../Doc/library/dis.rst:862
msgid ""
"This is not really an opcode.  It identifies the dividing line between "
"opcodes which don't take arguments ``< HAVE_ARGUMENT`` and those which do "
"``>= HAVE_ARGUMENT``."
msgstr ""

#: ../Doc/library/distutils.rst:3
msgid ":mod:`distutils` --- Building and installing Python modules"
msgstr ""

#: ../Doc/library/distutils.rst:11
msgid ""
"The :mod:`distutils` package provides support for building and installing "
"additional modules into a Python installation.  The new modules may be "
"either 100%-pure Python, or may be extension modules written in C, or may be "
"collections of Python packages which include modules coded in both Python "
"and C."
msgstr ""

#: ../Doc/library/distutils.rst:16
msgid "This package is discussed in two separate chapters:"
msgstr ""

#: ../Doc/library/distutils.rst:22
msgid ""
"The manual for developers and packagers of Python modules.  This describes "
"how to prepare :mod:`distutils`\\ -based packages so that they may be easily "
"installed into an existing Python installation."
msgstr ""

# 9e87da078d2447c28e3c6fda8169419d
#: ../Doc/library/distutils.rst:27
msgid ""
"An \"administrators\" manual which includes information on installing "
"modules into an existing Python installation. You do not need to be a Python "
"programmer to read this manual."
msgstr ""

# b8764438d7cc4e2c9fd74ce6ae9b9656
#: ../Doc/library/dl.rst:3
msgid ":mod:`dl` --- Call C functions in shared objects"
msgstr ""

# 2b12a889f1ee479b91f7ac216041527c
#: ../Doc/library/dl.rst:16
msgid ""
"The :mod:`dl` module defines an interface to the :c:func:`dlopen` function, "
"which is the most common interface on Unix platforms for handling "
"dynamically linked libraries. It allows the program to call arbitrary "
"functions in such a library."
msgstr ""

# 9561e1fc3358448a9c0377eb99e18482
#: ../Doc/library/dl.rst:22
msgid ""
"The :mod:`dl` module bypasses the Python type system and  error handling. If "
"used incorrectly it may cause segmentation faults, crashes or other "
"incorrect behaviour."
msgstr ""

# ad9c9f1754464c2d8981da03c59f1db4
#: ../Doc/library/dl.rst:28
msgid ""
"This module will not work unless ``sizeof(int) == sizeof(long) == sizeof"
"(char *)`` If this is not the case, :exc:`SystemError` will be raised on "
"import."
msgstr ""

# 5d5d44a12bf8493d8c6a8ac6f7e5e89c
#: ../Doc/library/dl.rst:31
msgid "The :mod:`dl` module defines the following function:"
msgstr ""

# 7a0d0e68925046159410ec4842fda853
#: ../Doc/library/dl.rst:36
msgid ""
"Open a shared object file, and return a handle. Mode signifies late binding "
"(:const:`RTLD_LAZY`) or immediate binding (:const:`RTLD_NOW`). Default is :"
"const:`RTLD_LAZY`. Note that some systems do not support :const:`RTLD_NOW`."
msgstr ""

# 3c06b8e989f34e9ca77fa1353bb4ee28
#: ../Doc/library/dl.rst:40
msgid "Return value is a :class:`dlobject`."
msgstr ""

# bd5c6d8a9ee345f09315e364f21e9e7d
#: ../Doc/library/dl.rst:42
msgid "The :mod:`dl` module defines the following constants:"
msgstr ""

# 292a2d06d9b14211865f5e9be7bee605
#: ../Doc/library/dl.rst:47
msgid "Useful as an argument to :func:`.open`."
msgstr ""

# 750ec365566e4f01867765ce85892391
#: ../Doc/library/dl.rst:52
msgid ""
"Useful as an argument to :func:`.open`.  Note that on systems which do not "
"support immediate binding, this constant will not appear in the module. For "
"maximum portability, use :func:`hasattr` to determine if the system supports "
"immediate binding."
msgstr ""

# ef74bf6967fa430fa77ce426364f2b10
#: ../Doc/library/dl.rst:57
msgid "The :mod:`dl` module defines the following exception:"
msgstr ""

# 45375a76ef2c43cab41a4483ba55ec7c
#: ../Doc/library/dl.rst:62
msgid ""
"Exception raised when an error has occurred inside the dynamic loading and "
"linking routines."
msgstr ""

# 1348b5b53a3d460e9228a32cc5ba6953
#: ../Doc/library/dl.rst:72
msgid ""
"This example was tried on a Debian GNU/Linux system, and is a good example "
"of the fact that using this module is usually a bad alternative."
msgstr ""

# a7efa92e79b54de49732a758fc101649
#: ../Doc/library/dl.rst:79
msgid "Dl Objects"
msgstr ""

# 538c678a74bf45b0a092476967f65afa
#: ../Doc/library/dl.rst:81
msgid ""
"Dl objects, as returned by :func:`.open` above, have the following methods:"
msgstr ""

# 70c39935a47c4af7a5e6e62c63e76a12
#: ../Doc/library/dl.rst:86
msgid "Free all resources, except the memory."
msgstr ""

# 2351443a32e44a239fbb390b6f152b74
#: ../Doc/library/dl.rst:91
msgid ""
"Return the pointer for the function named *name*, as a number, if it exists "
"in the referenced shared object, otherwise ``None``. This is useful in code "
"like::"
msgstr ""

# 5158c3a804b04dd590c0e0190aefe2ca
#: ../Doc/library/dl.rst:99
msgid ""
"(Note that this function will return a non-zero number, as zero is the "
"*NULL* pointer)"
msgstr ""

# c2003158467f4c0ba4a9d9ef5495a455
#: ../Doc/library/dl.rst:105
msgid ""
"Call the function named *name* in the referenced shared object. The "
"arguments must be either Python integers, which will be  passed as is, "
"Python strings, to which a pointer will be passed,  or ``None``, which will "
"be passed as *NULL*. Note that  strings should only be passed to functions "
"as :c:type:`const char\\*`, as Python will not like its string mutated."
msgstr ""

# 4be738baaaaa406eb83c677f1e70786d
#: ../Doc/library/dl.rst:111
msgid ""
"There must be at most 10 arguments, and arguments not given will be treated "
"as ``None``. The function's return value must be a C :c:type:`long`, which "
"is a Python integer."
msgstr ""

#: ../Doc/library/doctest.rst:2
msgid ":mod:`doctest` --- Test interactive Python examples"
msgstr ""

#: ../Doc/library/doctest.rst:12
msgid ""
"The :mod:`doctest` module searches for pieces of text that look like "
"interactive Python sessions, and then executes those sessions to verify that "
"they work exactly as shown.  There are several common ways to use doctest:"
msgstr ""

#: ../Doc/library/doctest.rst:16
msgid ""
"To check that a module's docstrings are up-to-date by verifying that all "
"interactive examples still work as documented."
msgstr ""

#: ../Doc/library/doctest.rst:19
msgid ""
"To perform regression testing by verifying that interactive examples from a "
"test file or a test object work as expected."
msgstr ""

#: ../Doc/library/doctest.rst:22
msgid ""
"To write tutorial documentation for a package, liberally illustrated with "
"input-output examples.  Depending on whether the examples or the expository "
"text are emphasized, this has the flavor of \"literate testing\" or "
"\"executable documentation\"."
msgstr ""

#: ../Doc/library/doctest.rst:27
msgid "Here's a complete but small example module::"
msgstr ""

#: ../Doc/library/doctest.rst:91
msgid ""
"If you run :file:`example.py` directly from the command line, :mod:`doctest` "
"works its magic::"
msgstr ""

# 8e3067c612a744c1ad099f357743e56a
#: ../Doc/library/doctest.rst:97
msgid ""
"There's no output!  That's normal, and it means all the examples worked.  "
"Pass ``-v`` to the script, and :mod:`doctest` prints a detailed log of what "
"it's trying, and prints a summary at the end::"
msgstr ""

#: ../Doc/library/doctest.rst:118
msgid "And so on, eventually ending with::"
msgstr ""

#: ../Doc/library/doctest.rst:135
msgid ""
"That's all you need to know to start making productive use of :mod:"
"`doctest`! Jump in.  The following sections provide full details.  Note that "
"there are many examples of doctests in the standard Python test suite and "
"libraries. Especially useful examples can be found in the standard test "
"file :file:`Lib/test/test_doctest.py`."
msgstr ""

#: ../Doc/library/doctest.rst:145
msgid "Simple Usage: Checking Examples in Docstrings"
msgstr ""

#: ../Doc/library/doctest.rst:147
msgid ""
"The simplest way to start using doctest (but not necessarily the way you'll "
"continue to do it) is to end each module :mod:`M` with::"
msgstr ""

#: ../Doc/library/doctest.rst:154
msgid ":mod:`doctest` then examines docstrings in module :mod:`M`."
msgstr ""

#: ../Doc/library/doctest.rst:156
msgid ""
"Running the module as a script causes the examples in the docstrings to get "
"executed and verified::"
msgstr ""

#: ../Doc/library/doctest.rst:161
msgid ""
"This won't display anything unless an example fails, in which case the "
"failing example(s) and the cause(s) of the failure(s) are printed to stdout, "
"and the final line of output is ``***Test Failed*** N failures.``, where *N* "
"is the number of examples that failed."
msgstr ""

# 60293fd67082413c936c5dbe37b95e85
#: ../Doc/library/doctest.rst:166
msgid "Run it with the ``-v`` switch instead::"
msgstr ""

#: ../Doc/library/doctest.rst:170
msgid ""
"and a detailed report of all examples tried is printed to standard output, "
"along with assorted summaries at the end."
msgstr ""

# 3de43624b190412fabd19965b153bfd6
#: ../Doc/library/doctest.rst:173
msgid ""
"You can force verbose mode by passing ``verbose=True`` to :func:`testmod`, "
"or prohibit it by passing ``verbose=False``.  In either of those cases, "
"``sys.argv`` is not examined by :func:`testmod` (so passing ``-v`` or not "
"has no effect)."
msgstr ""

# 9baee7313a99453e98dfb49397317e23
#: ../Doc/library/doctest.rst:178
msgid ""
"Since Python 2.6, there is also a command line shortcut for running :func:"
"`testmod`.  You can instruct the Python interpreter to run the doctest "
"module directly from the standard library and pass the module name(s) on the "
"command line::"
msgstr ""

#: ../Doc/library/doctest.rst:185
msgid ""
"This will import :file:`example.py` as a standalone module and run :func:"
"`testmod` on it.  Note that this may not work correctly if the file is part "
"of a package and imports other submodules from that package."
msgstr ""

#: ../Doc/library/doctest.rst:189
msgid ""
"For more information on :func:`testmod`, see section :ref:`doctest-basic-"
"api`."
msgstr ""

#: ../Doc/library/doctest.rst:195
msgid "Simple Usage: Checking Examples in a Text File"
msgstr ""

#: ../Doc/library/doctest.rst:197
msgid ""
"Another simple application of doctest is testing interactive examples in a "
"text file.  This can be done with the :func:`testfile` function::"
msgstr ""

#: ../Doc/library/doctest.rst:203
msgid ""
"That short script executes and verifies any interactive Python examples "
"contained in the file :file:`example.txt`.  The file content is treated as "
"if it were a single giant docstring; the file doesn't need to contain a "
"Python program!   For example, perhaps :file:`example.txt` contains this::"
msgstr ""

#: ../Doc/library/doctest.rst:224
msgid ""
"Running ``doctest.testfile(\"example.txt\")`` then finds the error in this "
"documentation::"
msgstr ""

#: ../Doc/library/doctest.rst:235
msgid ""
"As with :func:`testmod`, :func:`testfile` won't display anything unless an "
"example fails.  If an example does fail, then the failing example(s) and the "
"cause(s) of the failure(s) are printed to stdout, using the same format as :"
"func:`testmod`."
msgstr ""

#: ../Doc/library/doctest.rst:240
msgid ""
"By default, :func:`testfile` looks for files in the calling module's "
"directory. See section :ref:`doctest-basic-api` for a description of the "
"optional arguments that can be used to tell it to look for files in other "
"locations."
msgstr ""

# e23b56d6357d45f1bde98034533f1746
#: ../Doc/library/doctest.rst:244
msgid ""
"Like :func:`testmod`, :func:`testfile`'s verbosity can be set with the ``-"
"v`` command-line switch or with the optional keyword argument *verbose*."
msgstr ""

# 68db29f42cdd408dae3e811f5e794bad
#: ../Doc/library/doctest.rst:248
msgid ""
"Since Python 2.6, there is also a command line shortcut for running :func:"
"`testfile`.  You can instruct the Python interpreter to run the doctest "
"module directly from the standard library and pass the file name(s) on the "
"command line::"
msgstr ""

#: ../Doc/library/doctest.rst:255
msgid ""
"Because the file name does not end with :file:`.py`, :mod:`doctest` infers "
"that it must be run with :func:`testfile`, not :func:`testmod`."
msgstr ""

#: ../Doc/library/doctest.rst:258
msgid ""
"For more information on :func:`testfile`, see section :ref:`doctest-basic-"
"api`."
msgstr ""

#: ../Doc/library/doctest.rst:264
msgid "How It Works"
msgstr ""

#: ../Doc/library/doctest.rst:266
msgid ""
"This section examines in detail how doctest works: which docstrings it looks "
"at, how it finds interactive examples, what execution context it uses, how "
"it handles exceptions, and how option flags can be used to control its "
"behavior. This is the information that you need to know to write doctest "
"examples; for information about actually running doctest on these examples, "
"see the following sections."
msgstr ""

#: ../Doc/library/doctest.rst:277
msgid "Which Docstrings Are Examined?"
msgstr ""

#: ../Doc/library/doctest.rst:279
msgid ""
"The module docstring, and all function, class and method docstrings are "
"searched.  Objects imported into the module are not searched."
msgstr ""

#: ../Doc/library/doctest.rst:282
msgid ""
"In addition, if ``M.__test__`` exists and \"is true\", it must be a dict, "
"and each entry maps a (string) name to a function object, class object, or "
"string. Function and class object docstrings found from ``M.__test__`` are "
"searched, and strings are treated as if they were docstrings.  In output, a "
"key ``K`` in ``M.__test__`` appears with name ::"
msgstr ""

#: ../Doc/library/doctest.rst:290
msgid ""
"Any classes found are recursively searched similarly, to test docstrings in "
"their contained methods and nested classes."
msgstr ""

#: ../Doc/library/doctest.rst:300
msgid "How are Docstring Examples Recognized?"
msgstr ""

#: ../Doc/library/doctest.rst:302
msgid ""
"In most cases a copy-and-paste of an interactive console session works fine, "
"but doctest isn't trying to do an exact emulation of any specific Python "
"shell."
msgstr ""

#: ../Doc/library/doctest.rst:323
msgid ""
"Any expected output must immediately follow the final ``'>>> '`` or ``'... "
"'`` line containing the code, and the expected output (if any) extends to "
"the next ``'>>> '`` or all-whitespace line."
msgstr ""

#: ../Doc/library/doctest.rst:327
msgid "The fine print:"
msgstr ""

#: ../Doc/library/doctest.rst:329
msgid ""
"Expected output cannot contain an all-whitespace line, since such a line is "
"taken to signal the end of expected output.  If expected output does contain "
"a blank line, put ``<BLANKLINE>`` in your doctest example each place a blank "
"line is expected."
msgstr ""

#: ../Doc/library/doctest.rst:338
msgid ""
"All hard tab characters are expanded to spaces, using 8-column tab stops. "
"Tabs in output generated by the tested code are not modified.  Because any "
"hard tabs in the sample output *are* expanded, this means that if the code "
"output includes hard tabs, the only way the doctest can pass is if the :"
"const:`NORMALIZE_WHITESPACE` option or directive is in effect. "
"Alternatively, the test can be rewritten to capture the output and compare "
"it to an expected value as part of the test.  This handling of tabs in the "
"source was arrived at through trial and error, and has proven to be the "
"least error prone way of handling them.  It is possible to use a different "
"algorithm for handling tabs by writing a custom :class:`DocTestParser` class."
msgstr ""

#: ../Doc/library/doctest.rst:353
msgid ""
"Output to stdout is captured, but not output to stderr (exception tracebacks "
"are captured via a different means)."
msgstr ""

#: ../Doc/library/doctest.rst:356
msgid ""
"If you continue a line via backslashing in an interactive session, or for "
"any other reason use a backslash, you should use a raw docstring, which will "
"preserve your backslashes exactly as you type them::"
msgstr ""

#: ../Doc/library/doctest.rst:365
msgid ""
"Otherwise, the backslash will be interpreted as part of the string. For "
"example, the \"\\\\\" above would be interpreted as a newline character.  "
"Alternatively, you can double each backslash in the doctest version (and not "
"use a raw string)::"
msgstr ""

#: ../Doc/library/doctest.rst:374
msgid "The starting column doesn't matter::"
msgstr ""

#: ../Doc/library/doctest.rst:381
msgid ""
"and as many leading whitespace characters are stripped from the expected "
"output as appeared in the initial ``'>>> '`` line that started the example."
msgstr ""

#: ../Doc/library/doctest.rst:388
msgid "What's the Execution Context?"
msgstr ""

#: ../Doc/library/doctest.rst:390
msgid ""
"By default, each time :mod:`doctest` finds a docstring to test, it uses a "
"*shallow copy* of :mod:`M`'s globals, so that running tests doesn't change "
"the module's real globals, and so that one test in :mod:`M` can't leave "
"behind crumbs that accidentally allow another test to work.  This means "
"examples can freely use any names defined at top-level in :mod:`M`, and "
"names defined earlier in the docstring being run. Examples cannot see names "
"defined in other docstrings."
msgstr ""

#: ../Doc/library/doctest.rst:398
msgid ""
"You can force use of your own dict as the execution context by passing "
"``globs=your_dict`` to :func:`testmod` or :func:`testfile` instead."
msgstr ""

#: ../Doc/library/doctest.rst:405
msgid "What About Exceptions?"
msgstr ""

#: ../Doc/library/doctest.rst:407
msgid ""
"No problem, provided that the traceback is the only output produced by the "
"example:  just paste in the traceback. [#]_ Since tracebacks contain details "
"that are likely to change rapidly (for example, exact file paths and line "
"numbers), this is one case where doctest works hard to be flexible in what "
"it accepts."
msgstr ""

#: ../Doc/library/doctest.rst:413
msgid "Simple example::"
msgstr ""

#: ../Doc/library/doctest.rst:420
msgid ""
"That doctest succeeds if :exc:`ValueError` is raised, with the ``list.remove"
"(x): x not in list`` detail as shown."
msgstr ""

#: ../Doc/library/doctest.rst:423
msgid ""
"The expected output for an exception must start with a traceback header, "
"which may be either of the following two lines, indented the same as the "
"first line of the example::"
msgstr ""

#: ../Doc/library/doctest.rst:430
msgid ""
"The traceback header is followed by an optional traceback stack, whose "
"contents are ignored by doctest.  The traceback stack is typically omitted, "
"or copied verbatim from an interactive session."
msgstr ""

#: ../Doc/library/doctest.rst:434
msgid ""
"The traceback stack is followed by the most interesting part: the line(s) "
"containing the exception type and detail.  This is usually the last line of "
"a traceback, but can extend across multiple lines if the exception has a "
"multi-line detail::"
msgstr ""

#: ../Doc/library/doctest.rst:446
msgid ""
"The last three lines (starting with :exc:`ValueError`) are compared against "
"the exception's type and detail, and the rest are ignored."
msgstr ""

#: ../Doc/library/doctest.rst:452
msgid ""
"Best practice is to omit the traceback stack, unless it adds significant "
"documentation value to the example.  So the last example is probably better "
"as::"
msgstr ""

#: ../Doc/library/doctest.rst:462
msgid ""
"Note that tracebacks are treated very specially.  In particular, in the "
"rewritten example, the use of ``...`` is independent of doctest's :const:"
"`ELLIPSIS` option.  The ellipsis in that example could be left out, or could "
"just as well be three (or three hundred) commas or digits, or an indented "
"transcript of a Monty Python skit."
msgstr ""

#: ../Doc/library/doctest.rst:468
msgid "Some details you should read once, but won't need to remember:"
msgstr ""

#: ../Doc/library/doctest.rst:470
msgid ""
"Doctest can't guess whether your expected output came from an exception "
"traceback or from ordinary printing.  So, e.g., an example that expects "
"``ValueError: 42 is prime`` will pass whether :exc:`ValueError` is actually "
"raised or if the example merely prints that traceback text.  In practice, "
"ordinary output rarely begins with a traceback header line, so this doesn't "
"create real problems."
msgstr ""

#: ../Doc/library/doctest.rst:477
msgid ""
"Each line of the traceback stack (if present) must be indented further than "
"the first line of the example, *or* start with a non-alphanumeric character. "
"The first line following the traceback header indented the same and starting "
"with an alphanumeric is taken to be the start of the exception detail.  Of "
"course this does the right thing for genuine tracebacks."
msgstr ""

#: ../Doc/library/doctest.rst:483
msgid ""
"When the :const:`IGNORE_EXCEPTION_DETAIL` doctest option is specified, "
"everything following the leftmost colon and any module information in the "
"exception name is ignored."
msgstr ""

#: ../Doc/library/doctest.rst:487
msgid ""
"The interactive shell omits the traceback header line for some :exc:"
"`SyntaxError`\\ s.  But doctest uses the traceback header line to "
"distinguish exceptions from non-exceptions.  So in the rare case where you "
"need to test a :exc:`SyntaxError` that omits the traceback header, you will "
"need to manually add the traceback header line to your test example."
msgstr ""

#: ../Doc/library/doctest.rst:493
msgid ""
"For some :exc:`SyntaxError`\\ s, Python displays the character position of "
"the syntax error, using a ``^`` marker::"
msgstr ""

#: ../Doc/library/doctest.rst:502
msgid ""
"Since the lines showing the position of the error come before the exception "
"type and detail, they are not checked by doctest.  For example, the "
"following test would pass, even though it puts the ``^`` marker in the wrong "
"location::"
msgstr ""

#: ../Doc/library/doctest.rst:517
msgid "Option Flags and Directives"
msgstr ""

#: ../Doc/library/doctest.rst:519
msgid ""
"A number of option flags control various aspects of doctest's behavior. "
"Symbolic names for the flags are supplied as module constants, which can be "
"or'ed together and passed to various functions.  The names can also be used "
"in doctest directives (see below)."
msgstr ""

#: ../Doc/library/doctest.rst:524
msgid ""
"The first group of options define test semantics, controlling aspects of how "
"doctest decides whether actual output matches an example's expected output:"
msgstr ""

#: ../Doc/library/doctest.rst:530
msgid ""
"By default, if an expected output block contains just ``1``, an actual "
"output block containing just ``1`` or just ``True`` is considered to be a "
"match, and similarly for ``0`` versus ``False``.  When :const:"
"`DONT_ACCEPT_TRUE_FOR_1` is specified, neither substitution is allowed.  The "
"default behavior caters to that Python changed the return type of many "
"functions from integer to boolean; doctests expecting \"little integer\" "
"output still work in these cases.  This option will probably go away, but "
"not for several years."
msgstr ""

#: ../Doc/library/doctest.rst:541
msgid ""
"By default, if an expected output block contains a line containing only the "
"string ``<BLANKLINE>``, then that line will match a blank line in the actual "
"output.  Because a genuinely blank line delimits the expected output, this "
"is the only way to communicate that a blank line is expected.  When :const:"
"`DONT_ACCEPT_BLANKLINE` is specified, this substitution is not allowed."
msgstr ""

#: ../Doc/library/doctest.rst:550
msgid ""
"When specified, all sequences of whitespace (blanks and newlines) are "
"treated as equal.  Any sequence of whitespace within the expected output "
"will match any sequence of whitespace within the actual output. By default, "
"whitespace must match exactly. :const:`NORMALIZE_WHITESPACE` is especially "
"useful when a line of expected output is very long, and you want to wrap it "
"across multiple lines in your source."
msgstr ""

#: ../Doc/library/doctest.rst:560
msgid ""
"When specified, an ellipsis marker (``...``) in the expected output can "
"match any substring in the actual output.  This includes substrings that "
"span line boundaries, and empty substrings, so it's best to keep usage of "
"this simple. Complicated uses can lead to the same kinds of \"oops, it "
"matched too much!\" surprises that ``.*`` is prone to in regular expressions."
msgstr ""

#: ../Doc/library/doctest.rst:569
msgid ""
"When specified, an example that expects an exception passes if an exception "
"of the expected type is raised, even if the exception detail does not "
"match.  For example, an example expecting ``ValueError: 42`` will pass if "
"the actual exception raised is ``ValueError: 3*14``, but will fail, e.g., "
"if :exc:`TypeError` is raised."
msgstr ""

#: ../Doc/library/doctest.rst:575
msgid ""
"It will also ignore the module name used in Python 3 doctest reports. Hence "
"both these variations will work regardless of whether the test is run under "
"Python 2.7 or Python 3.2 (or later versions):"
msgstr ""

#: ../Doc/library/doctest.rst:587
msgid ""
"Note that :const:`ELLIPSIS` can also be used to ignore the details of the "
"exception message, but such a test may still fail based on whether or not "
"the module details are printed as part of the exception name. Using :const:"
"`IGNORE_EXCEPTION_DETAIL` and the details from Python 2.3 is also the only "
"clear way to write a doctest that doesn't care about the exception detail "
"yet continues to pass under Python 2.3 or earlier (those releases do not "
"support doctest directives and ignore them as irrelevant comments). For "
"example, ::"
msgstr ""

#: ../Doc/library/doctest.rst:601
msgid ""
"passes under Python 2.3 and later Python versions, even though the detail "
"changed in Python 2.4 to say \"does not\" instead of \"doesn't\"."
msgstr ""

#: ../Doc/library/doctest.rst:611
msgid ""
"When specified, do not run the example at all.  This can be useful in "
"contexts where doctest examples serve as both documentation and test cases, "
"and an example should be included for documentation purposes, but should not "
"be checked.  E.g., the example's output might be random; or the example "
"might depend on resources which would be unavailable to the test driver."
msgstr ""

#: ../Doc/library/doctest.rst:617
msgid ""
"The SKIP flag can also be used for temporarily \"commenting out\" examples."
msgstr ""

#: ../Doc/library/doctest.rst:624
msgid "A bitmask or'ing together all the comparison flags above."
msgstr ""

#: ../Doc/library/doctest.rst:626
msgid "The second group of options controls how test failures are reported:"
msgstr ""

#: ../Doc/library/doctest.rst:631
msgid ""
"When specified, failures that involve multi-line expected and actual outputs "
"are displayed using a unified diff."
msgstr ""

#: ../Doc/library/doctest.rst:637
msgid ""
"When specified, failures that involve multi-line expected and actual outputs "
"will be displayed using a context diff."
msgstr ""

#: ../Doc/library/doctest.rst:643
msgid ""
"When specified, differences are computed by ``difflib.Differ``, using the "
"same algorithm as the popular :file:`ndiff.py` utility. This is the only "
"method that marks differences within lines as well as across lines.  For "
"example, if a line of expected output contains digit ``1`` where actual "
"output contains letter ``l``, a line is inserted with a caret marking the "
"mismatching column positions."
msgstr ""

#: ../Doc/library/doctest.rst:652
msgid ""
"When specified, display the first failing example in each doctest, but "
"suppress output for all remaining examples.  This will prevent doctest from "
"reporting correct examples that break because of earlier failures; but it "
"might also hide incorrect examples that fail independently of the first "
"failure.  When :const:`REPORT_ONLY_FIRST_FAILURE` is specified, the "
"remaining examples are still run, and still count towards the total number "
"of failures reported; only the output is suppressed."
msgstr ""

#: ../Doc/library/doctest.rst:663
msgid "A bitmask or'ing together all the reporting flags above."
msgstr ""

#: ../Doc/library/doctest.rst:665
msgid ""
"\"Doctest directives\" may be used to modify the option flags for individual "
"examples.  Doctest directives are expressed as a special Python comment "
"following an example's source code:"
msgstr ""

#: ../Doc/library/doctest.rst:676
msgid ""
"Whitespace is not allowed between the ``+`` or ``-`` and the directive "
"option name.  The directive option name can be any of the option flag names "
"explained above."
msgstr ""

#: ../Doc/library/doctest.rst:680
msgid ""
"An example's doctest directives modify doctest's behavior for that single "
"example.  Use ``+`` to enable the named behavior, or ``-`` to disable it."
msgstr ""

#: ../Doc/library/doctest.rst:683
msgid "For example, this test passes::"
msgstr ""

#: ../Doc/library/doctest.rst:689
msgid ""
"Without the directive it would fail, both because the actual output doesn't "
"have two blanks before the single-digit list elements, and because the "
"actual output is on a single line.  This test also passes, and also requires "
"a directive to do so::"
msgstr ""

#: ../Doc/library/doctest.rst:697
msgid ""
"Multiple directives can be used on a single physical line, separated by "
"commas::"
msgstr ""

#: ../Doc/library/doctest.rst:702
msgid ""
"If multiple directive comments are used for a single example, then they are "
"combined::"
msgstr ""

#: ../Doc/library/doctest.rst:709
msgid ""
"As the previous example shows, you can add ``...`` lines to your example "
"containing only directives.  This can be useful when an example is too long "
"for a directive to comfortably fit on the same line::"
msgstr ""

#: ../Doc/library/doctest.rst:717
msgid ""
"Note that since all options are disabled by default, and directives apply "
"only to the example they appear in, enabling options (via ``+`` in a "
"directive) is usually the only meaningful choice.  However, option flags can "
"also be passed to functions that run doctests, establishing different "
"defaults.  In such cases, disabling an option via ``-`` in a directive can "
"be useful."
msgstr ""

#: ../Doc/library/doctest.rst:731
msgid ""
"There's also a way to register new option flag names, although this isn't "
"useful unless you intend to extend :mod:`doctest` internals via subclassing:"
msgstr ""

#: ../Doc/library/doctest.rst:737
msgid ""
"Create a new option flag with a given name, and return the new flag's "
"integer value.  :func:`register_optionflag` can be used when subclassing :"
"class:`OutputChecker` or :class:`DocTestRunner` to create new options that "
"are supported by your subclasses.  :func:`register_optionflag` should always "
"be called using the following idiom::"
msgstr ""

#: ../Doc/library/doctest.rst:751
msgid "Warnings"
msgstr ""

#: ../Doc/library/doctest.rst:753
msgid ""
":mod:`doctest` is serious about requiring exact matches in expected output.  "
"If even a single character doesn't match, the test fails.  This will "
"probably surprise you a few times, as you learn exactly what Python does and "
"doesn't guarantee about output.  For example, when printing a dict, Python "
"doesn't guarantee that the key-value pairs will be printed in any particular "
"order, so a test like ::"
msgstr ""

#: ../Doc/library/doctest.rst:763
msgid "is vulnerable!  One workaround is to do ::"
msgstr ""

#: ../Doc/library/doctest.rst:768
msgid "instead.  Another is to do ::"
msgstr ""

#: ../Doc/library/doctest.rst:775
msgid "There are others, but you get the idea."
msgstr ""

#: ../Doc/library/doctest.rst:777
msgid ""
"Another bad idea is to print things that embed an object address, like ::"
msgstr ""

#: ../Doc/library/doctest.rst:785
msgid ""
"The :const:`ELLIPSIS` directive gives a nice approach for the last example::"
msgstr ""

#: ../Doc/library/doctest.rst:790
msgid ""
"Floating-point numbers are also subject to small output variations across "
"platforms, because Python defers to the platform C library for float "
"formatting, and C libraries vary widely in quality here. ::"
msgstr ""

#: ../Doc/library/doctest.rst:801
msgid ""
"Numbers of the form ``I/2.**J`` are safe across all platforms, and I often "
"contrive doctest examples to produce numbers of that form::"
msgstr ""

#: ../Doc/library/doctest.rst:807
msgid ""
"Simple fractions are also easier for people to understand, and that makes "
"for better documentation."
msgstr ""

#: ../Doc/library/doctest.rst:814
msgid "Basic API"
msgstr ""

#: ../Doc/library/doctest.rst:816
msgid ""
"The functions :func:`testmod` and :func:`testfile` provide a simple "
"interface to doctest that should be sufficient for most basic uses.  For a "
"less formal introduction to these two functions, see sections :ref:`doctest-"
"simple-testmod` and :ref:`doctest-simple-testfile`."
msgstr ""

#: ../Doc/library/doctest.rst:824
msgid ""
"All arguments except *filename* are optional, and should be specified in "
"keyword form."
msgstr ""

#: ../Doc/library/doctest.rst:827
msgid ""
"Test examples in the file named *filename*.  Return ``(failure_count, "
"test_count)``."
msgstr ""

#: ../Doc/library/doctest.rst:830
msgid ""
"Optional argument *module_relative* specifies how the filename should be "
"interpreted:"
msgstr ""

#: ../Doc/library/doctest.rst:833
msgid ""
"If *module_relative* is ``True`` (the default), then *filename* specifies an "
"OS-independent module-relative path.  By default, this path is relative to "
"the calling module's directory; but if the *package* argument is specified, "
"then it is relative to that package.  To ensure OS-independence, *filename* "
"should use ``/`` characters to separate path segments, and may not be an "
"absolute path (i.e., it may not begin with ``/``)."
msgstr ""

#: ../Doc/library/doctest.rst:840
msgid ""
"If *module_relative* is ``False``, then *filename* specifies an OS-specific "
"path.  The path may be absolute or relative; relative paths are resolved "
"with respect to the current working directory."
msgstr ""

#: ../Doc/library/doctest.rst:844
msgid ""
"Optional argument *name* gives the name of the test; by default, or if "
"``None``, ``os.path.basename(filename)`` is used."
msgstr ""

#: ../Doc/library/doctest.rst:847
msgid ""
"Optional argument *package* is a Python package or the name of a Python "
"package whose directory should be used as the base directory for a module-"
"relative filename.  If no package is specified, then the calling module's "
"directory is used as the base directory for module-relative filenames.  It "
"is an error to specify *package* if *module_relative* is ``False``."
msgstr ""

#: ../Doc/library/doctest.rst:853
msgid ""
"Optional argument *globs* gives a dict to be used as the globals when "
"executing examples.  A new shallow copy of this dict is created for the "
"doctest, so its examples start with a clean slate. By default, or if "
"``None``, a new empty dict is used."
msgstr ""

#: ../Doc/library/doctest.rst:858
msgid ""
"Optional argument *extraglobs* gives a dict merged into the globals used to "
"execute examples.  This works like :meth:`dict.update`:  if *globs* and "
"*extraglobs* have a common key, the associated value in *extraglobs* appears "
"in the combined dict.  By default, or if ``None``, no extra globals are "
"used.  This is an advanced feature that allows parameterization of "
"doctests.  For example, a doctest can be written for a base class, using a "
"generic name for the class, then reused to test any number of subclasses by "
"passing an *extraglobs* dict mapping the generic name to the subclass to be "
"tested."
msgstr ""

#: ../Doc/library/doctest.rst:867
msgid ""
"Optional argument *verbose* prints lots of stuff if true, and prints only "
"failures if false; by default, or if ``None``, it's true if and only if ``'-"
"v'`` is in ``sys.argv``."
msgstr ""

#: ../Doc/library/doctest.rst:871
msgid ""
"Optional argument *report* prints a summary at the end when true, else "
"prints nothing at the end.  In verbose mode, the summary is detailed, else "
"the summary is very brief (in fact, empty if all tests passed)."
msgstr ""

#: ../Doc/library/doctest.rst:875
msgid ""
"Optional argument *optionflags* or's together option flags.  See section :"
"ref:`doctest-options`."
msgstr ""

#: ../Doc/library/doctest.rst:878
msgid ""
"Optional argument *raise_on_error* defaults to false.  If true, an exception "
"is raised upon the first failure or unexpected exception in an example.  "
"This allows failures to be post-mortem debugged. Default behavior is to "
"continue running examples."
msgstr ""

#: ../Doc/library/doctest.rst:883 ../Doc/library/doctest.rst:1047
msgid ""
"Optional argument *parser* specifies a :class:`DocTestParser` (or subclass) "
"that should be used to extract tests from the files.  It defaults to a "
"normal parser (i.e., ``DocTestParser()``)."
msgstr ""

#: ../Doc/library/doctest.rst:887 ../Doc/library/doctest.rst:1051
msgid ""
"Optional argument *encoding* specifies an encoding that should be used to "
"convert the file to unicode."
msgstr ""

#: ../Doc/library/doctest.rst:898
msgid ""
"All arguments are optional, and all except for *m* should be specified in "
"keyword form."
msgstr ""

#: ../Doc/library/doctest.rst:901
msgid ""
"Test examples in docstrings in functions and classes reachable from module "
"*m* (or module :mod:`__main__` if *m* is not supplied or is ``None``), "
"starting with ``m.__doc__``."
msgstr ""

#: ../Doc/library/doctest.rst:905
msgid ""
"Also test examples reachable from dict ``m.__test__``, if it exists and is "
"not ``None``.  ``m.__test__`` maps names (strings) to functions, classes and "
"strings; function and class docstrings are searched for examples; strings "
"are searched directly, as if they were docstrings."
msgstr ""

#: ../Doc/library/doctest.rst:910
msgid ""
"Only docstrings attached to objects belonging to module *m* are searched."
msgstr ""

#: ../Doc/library/doctest.rst:912
msgid "Return ``(failure_count, test_count)``."
msgstr ""

#: ../Doc/library/doctest.rst:914
msgid ""
"Optional argument *name* gives the name of the module; by default, or if "
"``None``, ``m.__name__`` is used."
msgstr ""

#: ../Doc/library/doctest.rst:917
msgid ""
"Optional argument *exclude_empty* defaults to false.  If true, objects for "
"which no doctests are found are excluded from consideration. The default is "
"a backward compatibility hack, so that code still using :meth:`doctest."
"master.summarize` in conjunction with :func:`testmod` continues to get "
"output for objects with no tests. The *exclude_empty* argument to the newer :"
"class:`DocTestFinder` constructor defaults to true."
msgstr ""

#: ../Doc/library/doctest.rst:924
msgid ""
"Optional arguments *extraglobs*, *verbose*, *report*, *optionflags*, "
"*raise_on_error*, and *globs* are the same as for function :func:`testfile` "
"above, except that *globs* defaults to ``m.__dict__``."
msgstr ""

#: ../Doc/library/doctest.rst:937
msgid ""
"There's also a function to run the doctests associated with a single object. "
"This function is provided for backward compatibility.  There are no plans to "
"deprecate it, but it's rarely useful:"
msgstr ""

#: ../Doc/library/doctest.rst:944
msgid ""
"Test examples associated with object *f*; for example, *f* may be a module, "
"function, or class object."
msgstr ""

#: ../Doc/library/doctest.rst:947
msgid ""
"A shallow copy of dictionary argument *globs* is used for the execution "
"context."
msgstr ""

#: ../Doc/library/doctest.rst:949
msgid ""
"Optional argument *name* is used in failure messages, and defaults to ``"
"\"NoName\"``."
msgstr ""

#: ../Doc/library/doctest.rst:952
msgid ""
"If optional argument *verbose* is true, output is generated even if there "
"are no failures.  By default, output is generated only in case of an example "
"failure."
msgstr ""

#: ../Doc/library/doctest.rst:955
msgid ""
"Optional argument *compileflags* gives the set of flags that should be used "
"by the Python compiler when running the examples.  By default, or if "
"``None``, flags are deduced corresponding to the set of future features "
"found in *globs*."
msgstr ""

#: ../Doc/library/doctest.rst:959
msgid ""
"Optional argument *optionflags* works as for function :func:`testfile` above."
msgstr ""

#: ../Doc/library/doctest.rst:965
msgid "Unittest API"
msgstr ""

# 7f5c6de696f541399dbc23d2f63abc70
#: ../Doc/library/doctest.rst:967
msgid ""
"As your collection of doctest'ed modules grows, you'll want a way to run all "
"their doctests systematically.  Prior to Python 2.4, :mod:`doctest` had a "
"barely documented :class:`Tester` class that supplied a rudimentary way to "
"combine doctests from multiple modules. :class:`Tester` was feeble, and in "
"practice most serious Python testing frameworks build on the :mod:`unittest` "
"module, which supplies many flexible ways to combine tests from multiple "
"sources.  So, in Python 2.4, :mod:`doctest`'s :class:`Tester` class is "
"deprecated, and :mod:`doctest` provides two functions that can be used to "
"create :mod:`unittest` test suites from modules and text files containing "
"doctests.  To integrate with :mod:`unittest` test discovery, include a :func:"
"`load_tests` function in your test module::"
msgstr ""

#: ../Doc/library/doctest.rst:987
msgid ""
"There are two main functions for creating :class:`unittest.TestSuite` "
"instances from text files and modules with doctests:"
msgstr ""

#: ../Doc/library/doctest.rst:993
msgid ""
"Convert doctest tests from one or more text files to a :class:`unittest."
"TestSuite`."
msgstr ""

#: ../Doc/library/doctest.rst:996
msgid ""
"The returned :class:`unittest.TestSuite` is to be run by the unittest "
"framework and runs the interactive examples in each file.  If an example in "
"any file fails, then the synthesized unit test fails, and a :exc:"
"`failureException` exception is raised showing the name of the file "
"containing the test and a (sometimes approximate) line number."
msgstr ""

#: ../Doc/library/doctest.rst:1002
msgid "Pass one or more paths (as strings) to text files to be examined."
msgstr ""

#: ../Doc/library/doctest.rst:1004
msgid "Options may be provided as keyword arguments:"
msgstr ""

#: ../Doc/library/doctest.rst:1006
msgid ""
"Optional argument *module_relative* specifies how the filenames in *paths* "
"should be interpreted:"
msgstr ""

#: ../Doc/library/doctest.rst:1009
msgid ""
"If *module_relative* is ``True`` (the default), then each filename in "
"*paths* specifies an OS-independent module-relative path.  By default, this "
"path is relative to the calling module's directory; but if the *package* "
"argument is specified, then it is relative to that package.  To ensure OS-"
"independence, each filename should use ``/`` characters to separate path "
"segments, and may not be an absolute path (i.e., it may not begin with ``/"
"``)."
msgstr ""

#: ../Doc/library/doctest.rst:1017
msgid ""
"If *module_relative* is ``False``, then each filename in *paths* specifies "
"an OS-specific path.  The path may be absolute or relative; relative paths "
"are resolved with respect to the current working directory."
msgstr ""

#: ../Doc/library/doctest.rst:1021
msgid ""
"Optional argument *package* is a Python package or the name of a Python "
"package whose directory should be used as the base directory for module-"
"relative filenames in *paths*.  If no package is specified, then the calling "
"module's directory is used as the base directory for module-relative "
"filenames.  It is an error to specify *package* if *module_relative* is "
"``False``."
msgstr ""

#: ../Doc/library/doctest.rst:1028
msgid ""
"Optional argument *setUp* specifies a set-up function for the test suite. "
"This is called before running the tests in each file.  The *setUp* function "
"will be passed a :class:`DocTest` object.  The setUp function can access the "
"test globals as the *globs* attribute of the test passed."
msgstr ""

#: ../Doc/library/doctest.rst:1033
msgid ""
"Optional argument *tearDown* specifies a tear-down function for the test "
"suite.  This is called after running the tests in each file.  The *tearDown* "
"function will be passed a :class:`DocTest` object.  The setUp function can "
"access the test globals as the *globs* attribute of the test passed."
msgstr ""

#: ../Doc/library/doctest.rst:1038 ../Doc/library/doctest.rst:1088
msgid ""
"Optional argument *globs* is a dictionary containing the initial global "
"variables for the tests.  A new copy of this dictionary is created for each "
"test.  By default, *globs* is a new empty dictionary."
msgstr ""

#: ../Doc/library/doctest.rst:1042
msgid ""
"Optional argument *optionflags* specifies the default doctest options for "
"the tests, created by or-ing together individual option flags.  See section :"
"ref:`doctest-options`. See function :func:`set_unittest_reportflags` below "
"for a better way to set reporting options."
msgstr ""

# 9119de41c64946acbab51824134791d8
#: ../Doc/library/doctest.rst:1064
msgid ""
"Unlike :func:`testmod` and :class:`DocTestFinder`, this function raises a :"
"exc:`ValueError` if *module* contains no docstrings.  You can prevent this "
"error by passing a :class:`DocTestFinder` instance as the *test_finder* "
"argument with its *exclude_empty* keyword argument set to ``False``::"
msgstr ""

#: ../Doc/library/doctest.rst:1076
msgid "Convert doctest tests for a module to a :class:`unittest.TestSuite`."
msgstr ""

#: ../Doc/library/doctest.rst:1078
msgid ""
"The returned :class:`unittest.TestSuite` is to be run by the unittest "
"framework and runs each doctest in the module.  If any of the doctests fail, "
"then the synthesized unit test fails, and a :exc:`failureException` "
"exception is raised showing the name of the file containing the test and a "
"(sometimes approximate) line number."
msgstr ""

#: ../Doc/library/doctest.rst:1084
msgid ""
"Optional argument *module* provides the module to be tested.  It can be a "
"module object or a (possibly dotted) module name.  If not specified, the "
"module calling this function is used."
msgstr ""

#: ../Doc/library/doctest.rst:1092
msgid ""
"Optional argument *extraglobs* specifies an extra set of global variables, "
"which is merged into *globs*.  By default, no extra globals are used."
msgstr ""

#: ../Doc/library/doctest.rst:1095
msgid ""
"Optional argument *test_finder* is the :class:`DocTestFinder` object (or a "
"drop-in replacement) that is used to extract doctests from the module."
msgstr ""

#: ../Doc/library/doctest.rst:1098
msgid ""
"Optional arguments *setUp*, *tearDown*, and *optionflags* are the same as "
"for function :func:`DocFileSuite` above."
msgstr ""

#: ../Doc/library/doctest.rst:1108
msgid ""
"Under the covers, :func:`DocTestSuite` creates a :class:`unittest.TestSuite` "
"out of :class:`doctest.DocTestCase` instances, and :class:`DocTestCase` is a "
"subclass of :class:`unittest.TestCase`. :class:`DocTestCase` isn't "
"documented here (it's an internal detail), but studying its code can answer "
"questions about the exact details of :mod:`unittest` integration."
msgstr ""

#: ../Doc/library/doctest.rst:1114
msgid ""
"Similarly, :func:`DocFileSuite` creates a :class:`unittest.TestSuite` out "
"of :class:`doctest.DocFileCase` instances, and :class:`DocFileCase` is a "
"subclass of :class:`DocTestCase`."
msgstr ""

#: ../Doc/library/doctest.rst:1118
msgid ""
"So both ways of creating a :class:`unittest.TestSuite` run instances of :"
"class:`DocTestCase`.  This is important for a subtle reason: when you run :"
"mod:`doctest` functions yourself, you can control the :mod:`doctest` options "
"in use directly, by passing option flags to :mod:`doctest` functions.  "
"However, if you're writing a :mod:`unittest` framework, :mod:`unittest` "
"ultimately controls when and how tests get run.  The framework author "
"typically wants to control :mod:`doctest` reporting options (perhaps, e.g., "
"specified by command line options), but there's no way to pass options "
"through :mod:`unittest` to :mod:`doctest` test runners."
msgstr ""

#: ../Doc/library/doctest.rst:1128
msgid ""
"For this reason, :mod:`doctest` also supports a notion of :mod:`doctest` "
"reporting flags specific to :mod:`unittest` support, via this function:"
msgstr ""

#: ../Doc/library/doctest.rst:1134
msgid "Set the :mod:`doctest` reporting flags to use."
msgstr ""

#: ../Doc/library/doctest.rst:1136
msgid ""
"Argument *flags* or's together option flags.  See section :ref:`doctest-"
"options`.  Only \"reporting flags\" can be used."
msgstr ""

#: ../Doc/library/doctest.rst:1139
msgid ""
"This is a module-global setting, and affects all future doctests run by "
"module :mod:`unittest`:  the :meth:`runTest` method of :class:`DocTestCase` "
"looks at the option flags specified for the test case when the :class:"
"`DocTestCase` instance was constructed.  If no reporting flags were "
"specified (which is the typical and expected case), :mod:`doctest`'s :mod:"
"`unittest` reporting flags are or'ed into the option flags, and the option "
"flags so augmented are passed to the :class:`DocTestRunner` instance created "
"to run the doctest.  If any reporting flags were specified when the :class:"
"`DocTestCase` instance was constructed, :mod:`doctest`'s :mod:`unittest` "
"reporting flags are ignored."
msgstr ""

#: ../Doc/library/doctest.rst:1149
msgid ""
"The value of the :mod:`unittest` reporting flags in effect before the "
"function was called is returned by the function."
msgstr ""

#: ../Doc/library/doctest.rst:1158
msgid "Advanced API"
msgstr ""

#: ../Doc/library/doctest.rst:1160
msgid ""
"The basic API is a simple wrapper that's intended to make doctest easy to "
"use. It is fairly flexible, and should meet most users' needs; however, if "
"you require more fine-grained control over testing, or wish to extend "
"doctest's capabilities, then you should use the advanced API."
msgstr ""

#: ../Doc/library/doctest.rst:1165
msgid ""
"The advanced API revolves around two container classes, which are used to "
"store the interactive examples extracted from doctest cases:"
msgstr ""

#: ../Doc/library/doctest.rst:1168
msgid ""
":class:`Example`: A single Python :term:`statement`, paired with its "
"expected output."
msgstr ""

#: ../Doc/library/doctest.rst:1171
msgid ""
":class:`DocTest`: A collection of :class:`Example`\\ s, typically extracted "
"from a single docstring or text file."
msgstr ""

#: ../Doc/library/doctest.rst:1174
msgid ""
"Additional processing classes are defined to find, parse, and run, and check "
"doctest examples:"
msgstr ""

#: ../Doc/library/doctest.rst:1177
msgid ""
":class:`DocTestFinder`: Finds all docstrings in a given module, and uses a :"
"class:`DocTestParser` to create a :class:`DocTest` from every docstring that "
"contains interactive examples."
msgstr ""

#: ../Doc/library/doctest.rst:1181
msgid ""
":class:`DocTestParser`: Creates a :class:`DocTest` object from a string "
"(such as an object's docstring)."
msgstr ""

#: ../Doc/library/doctest.rst:1184
msgid ""
":class:`DocTestRunner`: Executes the examples in a :class:`DocTest`, and "
"uses an :class:`OutputChecker` to verify their output."
msgstr ""

#: ../Doc/library/doctest.rst:1187
msgid ""
":class:`OutputChecker`: Compares the actual output from a doctest example "
"with the expected output, and decides whether they match."
msgstr ""

#: ../Doc/library/doctest.rst:1190
msgid ""
"The relationships among these processing classes are summarized in the "
"following diagram::"
msgstr ""

#: ../Doc/library/doctest.rst:1206
msgid "DocTest Objects"
msgstr ""

# 8eaf96d7d9d0477f877139e22c19c39c
#: ../Doc/library/doctest.rst:1211
msgid ""
"A collection of doctest examples that should be run in a single namespace.  "
"The constructor arguments are used to initialize the attributes of the same "
"names."
msgstr ""

# d3e05c4e60ab46c3820eabdb2a5d9356
#: ../Doc/library/doctest.rst:1216
msgid ""
":class:`DocTest` defines the following attributes.  They are initialized by "
"the constructor, and should not be modified directly."
msgstr ""

#: ../Doc/library/doctest.rst:1222
msgid ""
"A list of :class:`Example` objects encoding the individual interactive "
"Python examples that should be run by this test."
msgstr ""

#: ../Doc/library/doctest.rst:1228
msgid ""
"The namespace (aka globals) that the examples should be run in. This is a "
"dictionary mapping names to values.  Any changes to the namespace made by "
"the examples (such as binding new variables) will be reflected in :attr:"
"`globs` after the test is run."
msgstr ""

#: ../Doc/library/doctest.rst:1236
msgid ""
"A string name identifying the :class:`DocTest`.  Typically, this is the name "
"of the object or file that the test was extracted from."
msgstr ""

#: ../Doc/library/doctest.rst:1242
msgid ""
"The name of the file that this :class:`DocTest` was extracted from; or "
"``None`` if the filename is unknown, or if the :class:`DocTest` was not "
"extracted from a file."
msgstr ""

#: ../Doc/library/doctest.rst:1249
msgid ""
"The line number within :attr:`filename` where this :class:`DocTest` begins, "
"or ``None`` if the line number is unavailable.  This line number is zero-"
"based with respect to the beginning of the file."
msgstr ""

#: ../Doc/library/doctest.rst:1256
msgid ""
"The string that the test was extracted from, or 'None' if the string is "
"unavailable, or if the test was not extracted from a string."
msgstr ""

#: ../Doc/library/doctest.rst:1263
msgid "Example Objects"
msgstr ""

# 723bbd326ab346ed90223355a1358b67
#: ../Doc/library/doctest.rst:1268
msgid ""
"A single interactive example, consisting of a Python statement and its "
"expected output.  The constructor arguments are used to initialize the "
"attributes of the same names."
msgstr ""

# ac6220ecbf5847bda017f612d90df133
#: ../Doc/library/doctest.rst:1274
msgid ""
":class:`Example` defines the following attributes.  They are initialized by "
"the constructor, and should not be modified directly."
msgstr ""

#: ../Doc/library/doctest.rst:1280
msgid ""
"A string containing the example's source code.  This source code consists of "
"a single Python statement, and always ends with a newline; the constructor "
"adds a newline when necessary."
msgstr ""

#: ../Doc/library/doctest.rst:1287
msgid ""
"The expected output from running the example's source code (either from "
"stdout, or a traceback in case of exception).  :attr:`want` ends with a "
"newline unless no output is expected, in which case it's an empty string.  "
"The constructor adds a newline when necessary."
msgstr ""

#: ../Doc/library/doctest.rst:1295
msgid ""
"The exception message generated by the example, if the example is expected "
"to generate an exception; or ``None`` if it is not expected to generate an "
"exception.  This exception message is compared against the return value of :"
"func:`traceback.format_exception_only`.  :attr:`exc_msg` ends with a newline "
"unless it's ``None``.  The constructor adds a newline if needed."
msgstr ""

#: ../Doc/library/doctest.rst:1304
msgid ""
"The line number within the string containing this example where the example "
"begins.  This line number is zero-based with respect to the beginning of the "
"containing string."
msgstr ""

#: ../Doc/library/doctest.rst:1311
msgid ""
"The example's indentation in the containing string, i.e., the number of "
"space characters that precede the example's first prompt."
msgstr ""

#: ../Doc/library/doctest.rst:1317
msgid ""
"A dictionary mapping from option flags to ``True`` or ``False``, which is "
"used to override default options for this example.  Any option flags not "
"contained in this dictionary are left at their default value (as specified "
"by the :class:`DocTestRunner`'s :attr:`optionflags`). By default, no options "
"are set."
msgstr ""

#: ../Doc/library/doctest.rst:1326
msgid "DocTestFinder objects"
msgstr ""

#: ../Doc/library/doctest.rst:1331
msgid ""
"A processing class used to extract the :class:`DocTest`\\ s that are "
"relevant to a given object, from its docstring and the docstrings of its "
"contained objects. :class:`DocTest`\\ s can currently be extracted from the "
"following object types: modules, functions, classes, methods, staticmethods, "
"classmethods, and properties."
msgstr ""

#: ../Doc/library/doctest.rst:1337
msgid ""
"The optional argument *verbose* can be used to display the objects searched "
"by the finder.  It defaults to ``False`` (no output)."
msgstr ""

#: ../Doc/library/doctest.rst:1340
msgid ""
"The optional argument *parser* specifies the :class:`DocTestParser` object "
"(or a drop-in replacement) that is used to extract doctests from docstrings."
msgstr ""

#: ../Doc/library/doctest.rst:1343
msgid ""
"If the optional argument *recurse* is false, then :meth:`DocTestFinder.find` "
"will only examine the given object, and not any contained objects."
msgstr ""

#: ../Doc/library/doctest.rst:1346
msgid ""
"If the optional argument *exclude_empty* is false, then :meth:`DocTestFinder."
"find` will include tests for objects with empty docstrings."
msgstr ""

#: ../Doc/library/doctest.rst:1351
msgid ":class:`DocTestFinder` defines the following method:"
msgstr ""

#: ../Doc/library/doctest.rst:1356
msgid ""
"Return a list of the :class:`DocTest`\\ s that are defined by *obj*'s "
"docstring, or by any of its contained objects' docstrings."
msgstr ""

#: ../Doc/library/doctest.rst:1359
msgid ""
"The optional argument *name* specifies the object's name; this name will be "
"used to construct names for the returned :class:`DocTest`\\ s.  If *name* is "
"not specified, then ``obj.__name__`` is used."
msgstr ""

#: ../Doc/library/doctest.rst:1363
msgid ""
"The optional parameter *module* is the module that contains the given "
"object. If the module is not specified or is None, then the test finder will "
"attempt to automatically determine the correct module.  The object's module "
"is used:"
msgstr ""

#: ../Doc/library/doctest.rst:1367
msgid "As a default namespace, if *globs* is not specified."
msgstr ""

#: ../Doc/library/doctest.rst:1369
msgid ""
"To prevent the DocTestFinder from extracting DocTests from objects that are "
"imported from other modules.  (Contained objects with modules other than "
"*module* are ignored.)"
msgstr ""

#: ../Doc/library/doctest.rst:1373
msgid "To find the name of the file containing the object."
msgstr ""

#: ../Doc/library/doctest.rst:1375
msgid "To help find the line number of the object within its file."
msgstr ""

#: ../Doc/library/doctest.rst:1377
msgid ""
"If *module* is ``False``, no attempt to find the module will be made.  This "
"is obscure, of use mostly in testing doctest itself: if *module* is "
"``False``, or is ``None`` but cannot be found automatically, then all "
"objects are considered to belong to the (non-existent) module, so all "
"contained objects will (recursively) be searched for doctests."
msgstr ""

#: ../Doc/library/doctest.rst:1383
msgid ""
"The globals for each :class:`DocTest` is formed by combining *globs* and "
"*extraglobs* (bindings in *extraglobs* override bindings in *globs*).  A new "
"shallow copy of the globals dictionary is created for each :class:`DocTest`. "
"If *globs* is not specified, then it defaults to the module's *__dict__*, if "
"specified, or ``{}`` otherwise.  If *extraglobs* is not specified, then it "
"defaults to ``{}``."
msgstr ""

#: ../Doc/library/doctest.rst:1394
msgid "DocTestParser objects"
msgstr ""

#: ../Doc/library/doctest.rst:1399
msgid ""
"A processing class used to extract interactive examples from a string, and "
"use them to create a :class:`DocTest` object."
msgstr ""

#: ../Doc/library/doctest.rst:1404 ../Doc/library/doctest.rst:1473
msgid ":class:`DocTestParser` defines the following methods:"
msgstr ""

#: ../Doc/library/doctest.rst:1409
msgid ""
"Extract all doctest examples from the given string, and collect them into a :"
"class:`DocTest` object."
msgstr ""

#: ../Doc/library/doctest.rst:1412
msgid ""
"*globs*, *name*, *filename*, and *lineno* are attributes for the new :class:"
"`DocTest` object.  See the documentation for :class:`DocTest` for more "
"information."
msgstr ""

#: ../Doc/library/doctest.rst:1419
msgid ""
"Extract all doctest examples from the given string, and return them as a "
"list of :class:`Example` objects.  Line numbers are 0-based.  The optional "
"argument *name* is a name identifying this string, and is only used for "
"error messages."
msgstr ""

#: ../Doc/library/doctest.rst:1426
msgid ""
"Divide the given string into examples and intervening text, and return them "
"as a list of alternating :class:`Example`\\ s and strings. Line numbers for "
"the :class:`Example`\\ s are 0-based.  The optional argument *name* is a "
"name identifying this string, and is only used for error messages."
msgstr ""

#: ../Doc/library/doctest.rst:1435
msgid "DocTestRunner objects"
msgstr ""

#: ../Doc/library/doctest.rst:1440
msgid ""
"A processing class used to execute and verify the interactive examples in a :"
"class:`DocTest`."
msgstr ""

#: ../Doc/library/doctest.rst:1443
msgid ""
"The comparison between expected outputs and actual outputs is done by an :"
"class:`OutputChecker`.  This comparison may be customized with a number of "
"option flags; see section :ref:`doctest-options` for more information.  If "
"the option flags are insufficient, then the comparison may also be "
"customized by passing a subclass of :class:`OutputChecker` to the "
"constructor."
msgstr ""

#: ../Doc/library/doctest.rst:1449
msgid ""
"The test runner's display output can be controlled in two ways. First, an "
"output function can be passed to :meth:`TestRunner.run`; this function will "
"be called with strings that should be displayed.  It defaults to ``sys."
"stdout.write``.  If capturing the output is not sufficient, then the display "
"output can be also customized by subclassing DocTestRunner, and overriding "
"the methods :meth:`report_start`, :meth:`report_success`, :meth:"
"`report_unexpected_exception`, and :meth:`report_failure`."
msgstr ""

#: ../Doc/library/doctest.rst:1457
msgid ""
"The optional keyword argument *checker* specifies the :class:`OutputChecker` "
"object (or drop-in replacement) that should be used to compare the expected "
"outputs to the actual outputs of doctest examples."
msgstr ""

# 6a5e97122ae54af4aa47c735723959be
#: ../Doc/library/doctest.rst:1461
msgid ""
"The optional keyword argument *verbose* controls the :class:"
"`DocTestRunner`'s verbosity.  If *verbose* is ``True``, then information is "
"printed about each example, as it is run.  If *verbose* is ``False``, then "
"only failures are printed.  If *verbose* is unspecified, or ``None``, then "
"verbose output is used iff the command-line switch ``-v`` is used."
msgstr ""

#: ../Doc/library/doctest.rst:1467
msgid ""
"The optional keyword argument *optionflags* can be used to control how the "
"test runner compares expected output to actual output, and how it displays "
"failures. For more information, see section :ref:`doctest-options`."
msgstr ""

#: ../Doc/library/doctest.rst:1478
msgid ""
"Report that the test runner is about to process the given example. This "
"method is provided to allow subclasses of :class:`DocTestRunner` to "
"customize their output; it should not be called directly."
msgstr ""

#: ../Doc/library/doctest.rst:1482
msgid ""
"*example* is the example about to be processed.  *test* is the test "
"*containing example*.  *out* is the output function that was passed to :meth:"
"`DocTestRunner.run`."
msgstr ""

#: ../Doc/library/doctest.rst:1489
msgid ""
"Report that the given example ran successfully.  This method is provided to "
"allow subclasses of :class:`DocTestRunner` to customize their output; it "
"should not be called directly."
msgstr ""

#: ../Doc/library/doctest.rst:1493 ../Doc/library/doctest.rst:1504
msgid ""
"*example* is the example about to be processed.  *got* is the actual output "
"from the example.  *test* is the test containing *example*.  *out* is the "
"output function that was passed to :meth:`DocTestRunner.run`."
msgstr ""

#: ../Doc/library/doctest.rst:1500
msgid ""
"Report that the given example failed.  This method is provided to allow "
"subclasses of :class:`DocTestRunner` to customize their output; it should "
"not be called directly."
msgstr ""

#: ../Doc/library/doctest.rst:1511
msgid ""
"Report that the given example raised an unexpected exception. This method is "
"provided to allow subclasses of :class:`DocTestRunner` to customize their "
"output; it should not be called directly."
msgstr ""

#: ../Doc/library/doctest.rst:1515
msgid ""
"*example* is the example about to be processed. *exc_info* is a tuple "
"containing information about the unexpected exception (as returned by :func:"
"`sys.exc_info`). *test* is the test containing *example*.  *out* is the "
"output function that was passed to :meth:`DocTestRunner.run`."
msgstr ""

#: ../Doc/library/doctest.rst:1523
msgid ""
"Run the examples in *test* (a :class:`DocTest` object), and display the "
"results using the writer function *out*."
msgstr ""

#: ../Doc/library/doctest.rst:1526
msgid ""
"The examples are run in the namespace ``test.globs``.  If *clear_globs* is "
"true (the default), then this namespace will be cleared after the test runs, "
"to help with garbage collection. If you would like to examine the namespace "
"after the test completes, then use *clear_globs=False*."
msgstr ""

#: ../Doc/library/doctest.rst:1531
msgid ""
"*compileflags* gives the set of flags that should be used by the Python "
"compiler when running the examples.  If not specified, then it will default "
"to the set of future-import flags that apply to *globs*."
msgstr ""

#: ../Doc/library/doctest.rst:1535
msgid ""
"The output of each example is checked using the :class:`DocTestRunner`'s "
"output checker, and the results are formatted by the :meth:`DocTestRunner."
"report_\\*` methods."
msgstr ""

#: ../Doc/library/doctest.rst:1542
msgid ""
"Print a summary of all the test cases that have been run by this "
"DocTestRunner, and return a :term:`named tuple` ``TestResults(failed, "
"attempted)``."
msgstr ""

#: ../Doc/library/doctest.rst:1545
msgid ""
"The optional *verbose* argument controls how detailed the summary is.  If "
"the verbosity is not specified, then the :class:`DocTestRunner`'s verbosity "
"is used."
msgstr ""

#: ../Doc/library/doctest.rst:1556
msgid "OutputChecker objects"
msgstr ""

#: ../Doc/library/doctest.rst:1561
msgid ""
"A class used to check the whether the actual output from a doctest example "
"matches the expected output.  :class:`OutputChecker` defines two methods: :"
"meth:`check_output`, which compares a given pair of outputs, and returns "
"true if they match; and :meth:`output_difference`, which returns a string "
"describing the differences between two outputs."
msgstr ""

#: ../Doc/library/doctest.rst:1569
msgid ":class:`OutputChecker` defines the following methods:"
msgstr ""

#: ../Doc/library/doctest.rst:1574
msgid ""
"Return ``True`` iff the actual output from an example (*got*) matches the "
"expected output (*want*).  These strings are always considered to match if "
"they are identical; but depending on what option flags the test runner is "
"using, several non-exact match types are also possible.  See section :ref:"
"`doctest-options` for more information about option flags."
msgstr ""

#: ../Doc/library/doctest.rst:1583
msgid ""
"Return a string describing the differences between the expected output for a "
"given example (*example*) and the actual output (*got*).  *optionflags* is "
"the set of option flags used to compare *want* and *got*."
msgstr ""

#: ../Doc/library/doctest.rst:1591
msgid "Debugging"
msgstr ""

#: ../Doc/library/doctest.rst:1593
msgid "Doctest provides several mechanisms for debugging doctest examples:"
msgstr ""

#: ../Doc/library/doctest.rst:1595
msgid ""
"Several functions convert doctests to executable Python programs, which can "
"be run under the Python debugger, :mod:`pdb`."
msgstr ""

#: ../Doc/library/doctest.rst:1598
msgid ""
"The :class:`DebugRunner` class is a subclass of :class:`DocTestRunner` that "
"raises an exception for the first failing example, containing information "
"about that example. This information can be used to perform post-mortem "
"debugging on the example."
msgstr ""

#: ../Doc/library/doctest.rst:1603
msgid ""
"The :mod:`unittest` cases generated by :func:`DocTestSuite` support the :"
"meth:`debug` method defined by :class:`unittest.TestCase`."
msgstr ""

#: ../Doc/library/doctest.rst:1606
msgid ""
"You can add a call to :func:`pdb.set_trace` in a doctest example, and you'll "
"drop into the Python debugger when that line is executed.  Then you can "
"inspect current values of variables, and so on.  For example, suppose :file:"
"`a.py` contains just this module docstring::"
msgstr ""

#: ../Doc/library/doctest.rst:1621
msgid "Then an interactive Python session may look like this::"
msgstr ""

#: ../Doc/library/doctest.rst:1656
msgid ""
"Functions that convert doctests to Python code, and possibly run the "
"synthesized code under the debugger:"
msgstr ""

#: ../Doc/library/doctest.rst:1662
msgid "Convert text with examples to a script."
msgstr ""

#: ../Doc/library/doctest.rst:1664
msgid ""
"Argument *s* is a string containing doctest examples.  The string is "
"converted to a Python script, where doctest examples in *s* are converted to "
"regular code, and everything else is converted to Python comments.  The "
"generated script is returned as a string. For example, ::"
msgstr ""

#: ../Doc/library/doctest.rst:1679
msgid "displays::"
msgstr ""

#: ../Doc/library/doctest.rst:1689
msgid ""
"This function is used internally by other functions (see below), but can "
"also be useful when you want to transform an interactive Python session into "
"a Python script."
msgstr ""

#: ../Doc/library/doctest.rst:1698
msgid "Convert the doctest for an object to a script."
msgstr ""

#: ../Doc/library/doctest.rst:1700
msgid ""
"Argument *module* is a module object, or dotted name of a module, containing "
"the object whose doctests are of interest.  Argument *name* is the name "
"(within the module) of the object with the doctests of interest.  The result "
"is a string, containing the object's docstring converted to a Python script, "
"as described for :func:`script_from_examples` above.  For example, if "
"module :file:`a.py` contains a top-level function :func:`f`, then ::"
msgstr ""

#: ../Doc/library/doctest.rst:1710
msgid ""
"prints a script version of function :func:`f`'s docstring, with doctests "
"converted to code, and the rest placed in comments."
msgstr ""

#: ../Doc/library/doctest.rst:1718
msgid "Debug the doctests for an object."
msgstr ""

#: ../Doc/library/doctest.rst:1720
msgid ""
"The *module* and *name* arguments are the same as for function :func:"
"`testsource` above.  The synthesized Python script for the named object's "
"docstring is written to a temporary file, and then that file is run under "
"the control of the Python debugger, :mod:`pdb`."
msgstr ""

#: ../Doc/library/doctest.rst:1725
msgid ""
"A shallow copy of ``module.__dict__`` is used for both local and global "
"execution context."
msgstr ""

# 9c3164b1ecd64639918bb125a62141ba
#: ../Doc/library/doctest.rst:1728
msgid ""
"Optional argument *pm* controls whether post-mortem debugging is used.  If "
"*pm* has a true value, the script file is run directly, and the debugger "
"gets involved only if the script terminates via raising an unhandled "
"exception.  If it does, then post-mortem debugging is invoked, via :func:"
"`pdb.post_mortem`, passing the traceback object from the unhandled "
"exception.  If *pm* is not specified, or is false, the script is run under "
"the debugger from the start, via passing an appropriate :func:`execfile` "
"call to :func:`pdb.run`."
msgstr ""

#: ../Doc/library/doctest.rst:1744
msgid "Debug the doctests in a string."
msgstr ""

#: ../Doc/library/doctest.rst:1746
msgid ""
"This is like function :func:`debug` above, except that a string containing "
"doctest examples is specified directly, via the *src* argument."
msgstr ""

#: ../Doc/library/doctest.rst:1749
msgid ""
"Optional argument *pm* has the same meaning as in function :func:`debug` "
"above."
msgstr ""

#: ../Doc/library/doctest.rst:1751
msgid ""
"Optional argument *globs* gives a dictionary to use as both local and global "
"execution context.  If not specified, or ``None``, an empty dictionary is "
"used. If specified, a shallow copy of the dictionary is used."
msgstr ""

#: ../Doc/library/doctest.rst:1757
msgid ""
"The :class:`DebugRunner` class, and the special exceptions it may raise, are "
"of most interest to testing framework authors, and will only be sketched "
"here.  See the source code, and especially :class:`DebugRunner`'s docstring "
"(which is a doctest!) for more details:"
msgstr ""

#: ../Doc/library/doctest.rst:1765
msgid ""
"A subclass of :class:`DocTestRunner` that raises an exception as soon as a "
"failure is encountered.  If an unexpected exception occurs, an :exc:"
"`UnexpectedException` exception is raised, containing the test, the example, "
"and the original exception.  If the output doesn't match, then a :exc:"
"`DocTestFailure` exception is raised, containing the test, the example, and "
"the actual output."
msgstr ""

#: ../Doc/library/doctest.rst:1772
msgid ""
"For information about the constructor parameters and methods, see the "
"documentation for :class:`DocTestRunner` in section :ref:`doctest-advanced-"
"api`."
msgstr ""

#: ../Doc/library/doctest.rst:1775
msgid ""
"There are two exceptions that may be raised by :class:`DebugRunner` "
"instances:"
msgstr ""

# 983a3f8b459e4684979481825f44f022
#: ../Doc/library/doctest.rst:1780
msgid ""
"An exception raised by :class:`DocTestRunner` to signal that a doctest "
"example's actual output did not match its expected output. The constructor "
"arguments are used to initialize the attributes of the same names."
msgstr ""

# 28c77db0e76a4acaac8834a8d82bda2e
#: ../Doc/library/doctest.rst:1784
msgid ":exc:`DocTestFailure` defines the following attributes:"
msgstr ""

#: ../Doc/library/doctest.rst:1789 ../Doc/library/doctest.rst:1813
msgid "The :class:`DocTest` object that was being run when the example failed."
msgstr ""

#: ../Doc/library/doctest.rst:1794 ../Doc/library/doctest.rst:1818
msgid "The :class:`Example` that failed."
msgstr ""

#: ../Doc/library/doctest.rst:1799
msgid "The example's actual output."
msgstr ""

# 585d433bb9fc4a50b3fe1bec47488207
#: ../Doc/library/doctest.rst:1804
msgid ""
"An exception raised by :class:`DocTestRunner` to signal that a doctest "
"example raised an unexpected exception.  The constructor arguments are used "
"to initialize the attributes of the same names."
msgstr ""

# b49b5a73d6ff4378bfa2b59231d272ec
#: ../Doc/library/doctest.rst:1808
msgid ":exc:`UnexpectedException` defines the following attributes:"
msgstr ""

#: ../Doc/library/doctest.rst:1823
msgid ""
"A tuple containing information about the unexpected exception, as returned "
"by :func:`sys.exc_info`."
msgstr ""

#: ../Doc/library/doctest.rst:1830
msgid "Soapbox"
msgstr ""

#: ../Doc/library/doctest.rst:1832
msgid ""
"As mentioned in the introduction, :mod:`doctest` has grown to have three "
"primary uses:"
msgstr ""

#: ../Doc/library/doctest.rst:1835
msgid "Checking examples in docstrings."
msgstr ""

#: ../Doc/library/doctest.rst:1837
msgid "Regression testing."
msgstr ""

#: ../Doc/library/doctest.rst:1839
msgid "Executable documentation / literate testing."
msgstr ""

#: ../Doc/library/doctest.rst:1841
msgid ""
"These uses have different requirements, and it is important to distinguish "
"them. In particular, filling your docstrings with obscure test cases makes "
"for bad documentation."
msgstr ""

#: ../Doc/library/doctest.rst:1845
msgid ""
"When writing a docstring, choose docstring examples with care. There's an "
"art to this that needs to be learned---it may not be natural at first.  "
"Examples should add genuine value to the documentation.  A good example can "
"often be worth many words. If done with care, the examples will be "
"invaluable for your users, and will pay back the time it takes to collect "
"them many times over as the years go by and things change.  I'm still amazed "
"at how often one of my :mod:`doctest` examples stops working after a "
"\"harmless\" change."
msgstr ""

#: ../Doc/library/doctest.rst:1853
msgid ""
"Doctest also makes an excellent tool for regression testing, especially if "
"you don't skimp on explanatory text.  By interleaving prose and examples, it "
"becomes much easier to keep track of what's actually being tested, and why.  "
"When a test fails, good prose can make it much easier to figure out what the "
"problem is, and how it should be fixed.  It's true that you could write "
"extensive comments in code-based testing, but few programmers do. Many have "
"found that using doctest approaches instead leads to much clearer tests.  "
"Perhaps this is simply because doctest makes writing prose a little easier "
"than writing code, while writing comments in code is a little harder.  I "
"think it goes deeper than just that: the natural attitude when writing a "
"doctest-based test is that you want to explain the fine points of your "
"software, and illustrate them with examples. This in turn naturally leads to "
"test files that start with the simplest features, and logically progress to "
"complications and edge cases.  A coherent narrative is the result, instead "
"of a collection of isolated functions that test isolated bits of "
"functionality seemingly at random.  It's a different attitude, and produces "
"different results, blurring the distinction between testing and explaining."
msgstr ""

#: ../Doc/library/doctest.rst:1871
msgid ""
"Regression testing is best confined to dedicated objects or files.  There "
"are several options for organizing tests:"
msgstr ""

#: ../Doc/library/doctest.rst:1874
msgid ""
"Write text files containing test cases as interactive examples, and test the "
"files using :func:`testfile` or :func:`DocFileSuite`.  This is recommended, "
"although is easiest to do for new projects, designed from the start to use "
"doctest."
msgstr ""

#: ../Doc/library/doctest.rst:1879
msgid ""
"Define functions named ``_regrtest_topic`` that consist of single "
"docstrings, containing test cases for the named topics.  These functions can "
"be included in the same file as the module, or separated out into a separate "
"test file."
msgstr ""

#: ../Doc/library/doctest.rst:1883
msgid ""
"Define a ``__test__`` dictionary mapping from regression test topics to "
"docstrings containing test cases."
msgstr ""

#: ../Doc/library/doctest.rst:1888
msgid ""
"Examples containing both expected output and an exception are not supported. "
"Trying to guess where one ends and the other begins is too error-prone, and "
"that also makes for a confusing test."
msgstr ""

# 7e0e386c4b2b4f9391c78d76c46ee13c
#: ../Doc/library/docxmlrpcserver.rst:2
msgid ":mod:`DocXMLRPCServer` --- Self-documenting XML-RPC server"
msgstr ""

# 26335a0563604802ab58073a729f4bd3
#: ../Doc/library/docxmlrpcserver.rst:10
msgid ""
"The :mod:`DocXMLRPCServer` module has been merged into :mod:`xmlrpc.server` "
"in Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# f07ef861fe2145c9b33c7a68af965f33
#: ../Doc/library/docxmlrpcserver.rst:17
msgid ""
"The :mod:`DocXMLRPCServer` module extends the classes found in :mod:"
"`SimpleXMLRPCServer` to serve HTML documentation in response to HTTP GET "
"requests. Servers can either be free standing, using :class:"
"`DocXMLRPCServer`, or embedded in a CGI environment, using :class:"
"`DocCGIXMLRPCRequestHandler`."
msgstr ""

# f47eaf6e23b843f5805e6dd65ffbc439
#: ../Doc/library/docxmlrpcserver.rst:25
msgid ""
"Create a new server instance. All parameters have the same meaning as for :"
"class:`SimpleXMLRPCServer.SimpleXMLRPCServer`; *requestHandler* defaults to :"
"class:`DocXMLRPCRequestHandler`."
msgstr ""

#: ../Doc/library/docxmlrpcserver.rst:32
msgid "Create a new instance to handle XML-RPC requests in a CGI environment."
msgstr ""

#: ../Doc/library/docxmlrpcserver.rst:37
msgid ""
"Create a new request handler instance. This request handler supports XML-RPC "
"POST requests, documentation GET requests, and modifies logging so that the "
"*logRequests* parameter to the :class:`DocXMLRPCServer` constructor "
"parameter is honored."
msgstr ""

#: ../Doc/library/docxmlrpcserver.rst:46
msgid "DocXMLRPCServer Objects"
msgstr ""

# 4b26f3f88264439588ee8bdd536bb99b
#: ../Doc/library/docxmlrpcserver.rst:48
msgid ""
"The :class:`DocXMLRPCServer` class is derived from :class:"
"`SimpleXMLRPCServer.SimpleXMLRPCServer` and provides a means of creating "
"self-documenting, stand alone XML-RPC servers. HTTP POST requests are "
"handled as XML-RPC method calls. HTTP GET requests are handled by generating "
"pydoc-style HTML documentation. This allows a server to provide its own web-"
"based documentation."
msgstr ""

#: ../Doc/library/docxmlrpcserver.rst:58 ../Doc/library/docxmlrpcserver.rst:87
msgid ""
"Set the title used in the generated HTML documentation. This title will be "
"used inside the HTML \"title\" element."
msgstr ""

#: ../Doc/library/docxmlrpcserver.rst:64 ../Doc/library/docxmlrpcserver.rst:93
msgid ""
"Set the name used in the generated HTML documentation. This name will appear "
"at the top of the generated documentation inside a \"h1\" element."
msgstr ""

#: ../Doc/library/docxmlrpcserver.rst:70 ../Doc/library/docxmlrpcserver.rst:99
msgid ""
"Set the description used in the generated HTML documentation. This "
"description will appear as a paragraph, below the server name, in the "
"documentation."
msgstr ""

#: ../Doc/library/docxmlrpcserver.rst:75
msgid "DocCGIXMLRPCRequestHandler"
msgstr ""

# b71fe66331e64ff2bb597df81a55454b
#: ../Doc/library/docxmlrpcserver.rst:77
msgid ""
"The :class:`DocCGIXMLRPCRequestHandler` class is derived from :class:"
"`SimpleXMLRPCServer.CGIXMLRPCRequestHandler` and provides a means of "
"creating self-documenting, XML-RPC CGI scripts. HTTP POST requests are "
"handled as XML-RPC method calls. HTTP GET requests are handled by generating "
"pydoc-style HTML documentation. This allows a server to provide its own web-"
"based documentation."
msgstr ""

# c4f47e692c5a46b78d6c1e3b7fa32b91
#: ../Doc/library/dumbdbm.rst:2
msgid ":mod:`dumbdbm` --- Portable DBM implementation"
msgstr ""

# b2a356171a5e4888ae48a6a86eaadee0
#: ../Doc/library/dumbdbm.rst:8
msgid ""
"The :mod:`dumbdbm` module has been renamed to :mod:`dbm.dumb` in Python 3. "
"The :term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

# 8bf56240d1804975aac149c03008cd1b
#: ../Doc/library/dumbdbm.rst:16
msgid ""
"The :mod:`dumbdbm` module is intended as a last resort fallback for the :mod:"
"`anydbm` module when no more robust module is available. The :mod:`dumbdbm` "
"module is not written for speed and is not nearly as heavily used as the "
"other database modules."
msgstr ""

# 0b8d917015c644a580505b781c6423ef
#: ../Doc/library/dumbdbm.rst:21
msgid ""
"The :mod:`dumbdbm` module provides a persistent dictionary-like interface "
"which is written entirely in Python.  Unlike other modules such as :mod:"
"`gdbm` and :mod:`bsddb`, no external library is required.  As with other "
"persistent mappings, the keys and values must always be strings."
msgstr ""

# bd21d3155d644d2c9731a67c3c387f49
#: ../Doc/library/dumbdbm.rst:31
msgid ""
"Raised on dumbdbm-specific errors, such as I/O errors.  :exc:`KeyError` is "
"raised for general mapping errors like specifying an incorrect key."
msgstr ""

# 6f134eb77ec64803a9d4e27b6f5e28f8
#: ../Doc/library/dumbdbm.rst:37
msgid ""
"Open a dumbdbm database and return a dumbdbm object.  The *filename* "
"argument is the basename of the database file (without any specific "
"extensions).  When a dumbdbm database is created, files with :file:`.dat` "
"and :file:`.dir` extensions are created."
msgstr ""

#: ../Doc/library/dumbdbm.rst:42
msgid ""
"The optional *flag* argument is currently ignored; the database is always "
"opened for update, and will be created if it does not exist."
msgstr ""

# 034b5670fb7c4da88b36a31f7c2c2bcd
#: ../Doc/library/dumbdbm.rst:59
msgid "Similar interface to the DBM/NDBM library."
msgstr ""

#: ../Doc/library/dumbdbm.rst:65
msgid "Persistence module which stores non-string data."
msgstr ""

# 485637f559d64d6cb7fc6e68cfc86129
#: ../Doc/library/dumbdbm.rst:74
msgid "Dumbdbm Objects"
msgstr ""

# c99b5e41bf6e4cfa95ebd4566d6fb4c3
#: ../Doc/library/dumbdbm.rst:76
msgid ""
"In addition to the methods provided by the :class:`UserDict.DictMixin` "
"class, :class:`dumbdbm` objects provide the following methods."
msgstr ""

# 5b76ee35f59b447b8b457ce15ed4e708
#: ../Doc/library/dumbdbm.rst:82
msgid ""
"Synchronize the on-disk directory and data files.  This method is called by "
"the :meth:`sync` method of :class:`Shelve` objects."
msgstr ""

# e57e4fb5ce384339b3066ff13a916747
#: ../Doc/library/dummy_thread.rst:2
msgid ""
":mod:`dummy_thread` --- Drop-in replacement for the :mod:`thread` module"
msgstr ""

# f590365eeadb4756817804c178e22a90
#: ../Doc/library/dummy_thread.rst:8
msgid ""
"The :mod:`dummy_thread` module has been renamed to :mod:`_dummy_thread` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3; however, you should consider using the "
"high-lever :mod:`dummy_threading` module instead."
msgstr ""

# 038e193eda614e1689a653c5bd8ce48d
#: ../Doc/library/dummy_thread.rst:13
msgid "**Source code:** :source:`Lib/dummy_thread.py`"
msgstr ""

# 7320922f2aab419f8be2ac1936270b0e
#: ../Doc/library/dummy_thread.rst:17
msgid ""
"This module provides a duplicate interface to the :mod:`thread` module.  It "
"is meant to be imported when the :mod:`thread` module is not provided on a "
"platform."
msgstr ""

#: ../Doc/library/dummy_thread.rst:21 ../Doc/library/dummy_threading.rst:15
msgid "Suggested usage is::"
msgstr ""

# 5ab35a17ae0d4033b200a8801720372c
# 1edcef41f7b247b1bf539eac5802f816
#: ../Doc/library/dummy_thread.rst:28 ../Doc/library/dummy_threading.rst:22
msgid ""
"Be careful to not use this module where deadlock might occur from a thread "
"being created that blocks waiting for another thread to be created.  This  "
"often occurs with blocking I/O."
msgstr ""

#: ../Doc/library/dummy_threading.rst:2
msgid ""
":mod:`dummy_threading` --- Drop-in replacement for the :mod:`threading` "
"module"
msgstr ""

# 22ea112b4b344aab9a3e3f6c86ca19a6
#: ../Doc/library/dummy_threading.rst:7
msgid "**Source code:** :source:`Lib/dummy_threading.py`"
msgstr ""

# 423fce72632f45eb9cf11a1fc1ec2d48
#: ../Doc/library/dummy_threading.rst:11
msgid ""
"This module provides a duplicate interface to the :mod:`threading` module.  "
"It is meant to be imported when the :mod:`thread` module is not provided on "
"a platform."
msgstr ""

# 4708d91eb6b1497da15c6126612376dd
#: ../Doc/library/easydialogs.rst:3
msgid ":mod:`EasyDialogs` --- Basic Macintosh dialogs"
msgstr ""

# ec93dfd984b44653bf2121ff669bf298
#: ../Doc/library/easydialogs.rst:11
msgid ""
"The :mod:`EasyDialogs` module contains some simple dialogs for the "
"Macintosh. The dialogs get launched in a separate application which appears "
"in the dock and must be clicked on for the dialogs be displayed.  All "
"routines take an optional resource ID parameter *id* with which one can "
"override the :const:`DLOG` resource used for the dialog, provided that the "
"dialog items correspond (both type and item number) to those in the default :"
"const:`DLOG` resource. See source code for details."
msgstr ""

# a00e441682574e6384a148f2183164e3
#: ../Doc/library/easydialogs.rst:24
msgid "The :mod:`EasyDialogs` module defines the following functions:"
msgstr ""

# f03e88d5c4ae4eb393c65c72e3036a8a
#: ../Doc/library/easydialogs.rst:29
msgid ""
"Displays a modal dialog with the message text *str*, which should be at most "
"255 characters long. The button text defaults to \"OK\", but is set to the "
"string argument *ok* if the latter is supplied. Control is returned when the "
"user clicks the \"OK\" button."
msgstr ""

# aaf5c00d55bd4f0ab8b001a9d9abf567
#: ../Doc/library/easydialogs.rst:37
msgid ""
"Asks the user to input a string value via a modal dialog. *prompt* is the "
"prompt message, and the optional *default* supplies the initial value for "
"the string (otherwise ``\"\"`` is used). The text of the \"OK\" and \"Cancel"
"\" buttons can be changed with the *ok* and *cancel* arguments. All strings "
"can be at most 255 bytes long. :func:`AskString` returns the string entered "
"or :const:`None` in case the user cancelled."
msgstr ""

# 8f68dbe79c5245938cf467d8b1e96d0e
#: ../Doc/library/easydialogs.rst:47
msgid ""
"Asks the user to input a string value via a modal dialog. Like :func:"
"`AskString`, but with the text shown as bullets. The arguments have the same "
"meaning as for :func:`AskString`."
msgstr ""

# 7f87f52afbb745ef96d4119e70d53f18
#: ../Doc/library/easydialogs.rst:54
msgid ""
"Presents a dialog with prompt *question* and three buttons labelled \"Yes\", "
"\"No\", and \"Cancel\". Returns ``1`` for \"Yes\", ``0`` for \"No\" and "
"``-1`` for \"Cancel\". The value of *default* (or ``0`` if *default* is not "
"supplied) is returned when the :kbd:`RETURN` key is pressed. The text of the "
"buttons can be changed with the *yes*, *no*, and *cancel* arguments; to "
"prevent a button from appearing, supply ``\"\"`` for the corresponding "
"argument."
msgstr ""

# fde795857c5a4c75b8b993606b3edda6
#: ../Doc/library/easydialogs.rst:64
msgid ""
"Displays a modeless progress-bar dialog. This is the constructor for the :"
"class:`ProgressBar` class described below. *title* is the text string "
"displayed (default \"Working...\"), *maxval* is the value at which progress "
"is complete (default ``0``, indicating that an indeterminate amount of work "
"remains to be done), and *label* is the text that is displayed above the "
"progress bar itself."
msgstr ""

# 389b68b5d91a44908de6f8252c7ef2f9
#: ../Doc/library/easydialogs.rst:73
msgid ""
"Displays a dialog which aids the user in constructing a command-line "
"argument list.  Returns the list in ``sys.argv`` format, suitable for "
"passing as an argument to :func:`getopt.getopt`.  *addoldfile*, "
"*addnewfile*, and *addfolder* are boolean arguments.  When nonzero, they "
"enable the user to insert into the command line paths to an existing file, a "
"(possibly) not-yet-existent file, and a folder, respectively.  (Note: Option "
"arguments must appear in the command line before file and folder arguments "
"in order to be recognized by :func:`getopt.getopt`.)  Arguments containing "
"spaces can be specified by enclosing them within single or double quotes.  "
"A :exc:`SystemExit` exception is raised if the user presses the \"Cancel\" "
"button."
msgstr ""

# 7be85960bf004574873b09622ec6f779
#: ../Doc/library/easydialogs.rst:84
msgid ""
"*optionlist* is a list that determines a popup menu from which the allowed "
"options are selected.  Its items can take one of two forms: *optstr* or ``"
"(optstr, descr)``.  When present, *descr* is a short descriptive string that "
"is displayed in the dialog while this option is selected in the popup menu.  "
"The correspondence between *optstr*\\s and command-line arguments is:"
msgstr ""

# 709d61288a8f4808966011d8da1cdad9
#: ../Doc/library/easydialogs.rst:91
msgid "*optstr* format"
msgstr ""

# 72abf352a4454a709177ff6df5d0d19a
#: ../Doc/library/easydialogs.rst:91
msgid "Command-line format"
msgstr ""

#: ../Doc/library/easydialogs.rst:93 ../Doc/library/struct.rst:168
msgid "``x``"
msgstr ""

# 11f9bfa4962f467fad0998f850174b20
#: ../Doc/library/easydialogs.rst:93
msgid ":option:`-x` (short option)"
msgstr ""

# 2b9c6c33bbb4402b8717945ee514d0de
#: ../Doc/library/easydialogs.rst:95
msgid "``x:`` or ``x=``"
msgstr ""

# f9e99a8a92544ecf968594c53685c32c
#: ../Doc/library/easydialogs.rst:95
msgid ":option:`-x` (short option with value)"
msgstr ""

# c207a6f20a1d40c6b1042bf6db1c8fac
#: ../Doc/library/easydialogs.rst:97
msgid "``xyz``"
msgstr ""

# a5366ed86f2a4f65bb09d2494b233f01
#: ../Doc/library/easydialogs.rst:97
msgid ":option:`--xyz` (long option)"
msgstr ""

# 609ab94728034c45a37ea28f9ea159a1
#: ../Doc/library/easydialogs.rst:99
msgid "``xyz:`` or ``xyz=``"
msgstr ""

# 5f1aaeff09324adf86f1e21e2a7e2926
#: ../Doc/library/easydialogs.rst:99
msgid ":option:`--xyz` (long option with value)"
msgstr ""

# 309314e40e20490fa1ed7541c025d81a
#: ../Doc/library/easydialogs.rst:102
msgid ""
"*commandlist* is a list of items of the form *cmdstr* or ``(cmdstr, descr)"
"``, where *descr* is as above.  The *cmdstr*\\ s will appear in a popup "
"menu.  When chosen, the text of *cmdstr* will be appended to the command "
"line as is, except that a trailing ``':'`` or ``'='`` (if present) will be "
"trimmed off."
msgstr ""

# c64e4cb0be594ac0a271e49746b9541c
#: ../Doc/library/easydialogs.rst:112
msgid ""
"Post a dialog asking the user for a file to open, and return the file "
"selected or :const:`None` if the user cancelled. *message* is a text message "
"to display, *typeList* is a list of 4-char filetypes allowable, "
"*defaultLocation* is the pathname, :class:`FSSpec` or :class:`FSRef` of the "
"folder to show initially, *location* is the ``(x, y)`` position on the "
"screen where the dialog is shown, *actionButtonLabel* is a string to show "
"instead of \"Open\" in the OK button, *cancelButtonLabel* is a string to "
"show instead of \"Cancel\" in the cancel button, *wanted* is the type of "
"value wanted as a return: :class:`str`, :class:`unicode`, :class:`FSSpec`, :"
"class:`FSRef` and subtypes thereof are acceptable."
msgstr ""

# b3c176459bbc4d5693caf9bd3314aefa
#: ../Doc/library/easydialogs.rst:125
msgid ""
"For a description of the other arguments please see the Apple Navigation "
"Services documentation and the :mod:`EasyDialogs` source code."
msgstr ""

# baeea4b322a841eb98bd17d24bfec889
#: ../Doc/library/easydialogs.rst:131
msgid ""
"Post a dialog asking the user for a file to save to, and return the file "
"selected or :const:`None` if the user cancelled. *savedFileName* is the "
"default for the file name to save to (the return value). See :func:"
"`AskFileForOpen` for a description of the other arguments."
msgstr ""

# 902ee1797b2b4f36bb1b8c9198c34f06
#: ../Doc/library/easydialogs.rst:139
msgid ""
"Post a dialog asking the user to select a folder, and return the folder "
"selected or :const:`None` if the user cancelled. See :func:`AskFileForOpen` "
"for a description of the arguments."
msgstr ""

# da53b72ece0e449aa6fa1e8bd024cda9
#: ../Doc/library/easydialogs.rst:147
msgid ""
"Programmer's reference documentation for the Navigation Services, a part of "
"the Carbon framework."
msgstr ""

# c57fdf867b61457589b62cdc5b058fc5
#: ../Doc/library/easydialogs.rst:154
msgid "ProgressBar Objects"
msgstr ""

# 4628cfd40d8b42ad9515aaa942ed9e6b
#: ../Doc/library/easydialogs.rst:156
msgid ""
":class:`ProgressBar` objects provide support for modeless progress-bar "
"dialogs. Both determinate (thermometer style) and indeterminate (barber-pole "
"style) progress bars are supported.  The bar will be determinate if its "
"maximum value is greater than zero; otherwise it will be indeterminate."
msgstr ""

# 2a68728d41894893bd6ab41cbe9b735c
#: ../Doc/library/easydialogs.rst:164
msgid ""
"The dialog is displayed immediately after creation. If the dialog's \"Cancel"
"\" button is pressed, or if :kbd:`Cmd-.` or :kbd:`ESC` is typed, the dialog "
"window is hidden and :exc:`KeyboardInterrupt` is raised (but note that this "
"response does not occur until the progress bar is next updated, typically "
"via a call to :meth:`inc` or :meth:`set`).  Otherwise, the bar remains "
"visible until the :class:`ProgressBar` object is discarded."
msgstr ""

# e59a2da72c834ee6b7ade87cfaac4c1b
#: ../Doc/library/easydialogs.rst:171
msgid ""
":class:`ProgressBar` objects possess the following attributes and methods:"
msgstr ""

# 89f9c60a305d448aa02d497a924ca41b
#: ../Doc/library/easydialogs.rst:176
msgid ""
"The current value (of type integer or long integer) of the progress bar.  "
"The normal access methods coerce :attr:`curval` between ``0`` and :attr:"
"`maxval`. This attribute should not be altered directly."
msgstr ""

# cff63c9d97f84b00abf7e294264707ab
#: ../Doc/library/easydialogs.rst:183
msgid ""
"The maximum value (of type integer or long integer) of the progress bar; the "
"progress bar (thermometer style) is full when :attr:`curval` equals :attr:"
"`maxval`.  If :attr:`maxval` is ``0``, the bar will be indeterminate (barber-"
"pole).  This attribute should not be altered directly."
msgstr ""

# fa26194180cb4dfbad1bd4aa1841f520
#: ../Doc/library/easydialogs.rst:191
msgid "Sets the text in the title bar of the progress dialog to *newstr*."
msgstr ""

# 6f4c793b84d04dc1b0a2e066d7344145
#: ../Doc/library/easydialogs.rst:196
msgid "Sets the text in the progress box of the progress dialog to *newstr*."
msgstr ""

# cbc267b06b3c4ffa9a0c05f7321e710b
#: ../Doc/library/easydialogs.rst:201
msgid ""
"Sets the progress bar's :attr:`curval` to *value*, and also :attr:`maxval` "
"to *max* if the latter is provided.  *value* is first coerced between 0 and :"
"attr:`maxval`.  The thermometer bar is updated to reflect the changes, "
"including a change from indeterminate to determinate or vice versa."
msgstr ""

# ee32dec48c584c6d93bf23ec0b302510
#: ../Doc/library/easydialogs.rst:209
msgid ""
"Increments the progress bar's :attr:`curval` by *n*, or by ``1`` if *n* is "
"not provided.  (Note that *n* may be negative, in which case the effect is a "
"decrement.)  The progress bar is updated to reflect the change.  If the bar "
"is indeterminate, this causes one \"spin\" of the barber pole.  The "
"resulting :attr:`curval` is coerced between 0 and :attr:`maxval` if "
"incrementing causes it to fall outside this range."
msgstr ""

#: ../Doc/library/email.rst:2
msgid ":mod:`email` --- An email and MIME handling package"
msgstr ""

# 25723f8876fb4379ade4d0ceba238b71
#: ../Doc/library/email.rst:14
msgid ""
"The :mod:`email` package is a library for managing email messages, including "
"MIME and other :rfc:`2822`\\ -based message documents.  It subsumes most of "
"the functionality in several older standard modules such as :mod:`rfc822`, :"
"mod:`mimetools`, :mod:`multifile`, and other non-standard packages such as :"
"mod:`mimecntl`.  It is specifically *not* designed to do any sending of "
"email messages to SMTP (:rfc:`2821`), NNTP, or other servers; those are "
"functions of modules such as :mod:`smtplib` and :mod:`nntplib`. The :mod:"
"`email` package attempts to be as RFC-compliant as possible, supporting in "
"addition to :rfc:`2822`, such MIME-related RFCs as :rfc:`2045`, :rfc:"
"`2046`, :rfc:`2047`, and :rfc:`2231`."
msgstr ""

#: ../Doc/library/email.rst:25
msgid ""
"The primary distinguishing feature of the :mod:`email` package is that it "
"splits the parsing and generating of email messages from the internal "
"*object model* representation of email.  Applications using the :mod:`email` "
"package deal primarily with objects; you can add sub-objects to messages, "
"remove sub-objects from messages, completely re-arrange the contents, etc.  "
"There is a separate parser and a separate generator which handles the "
"transformation from flat text to the object model, and then back to flat "
"text again.  There are also handy subclasses for some common MIME object "
"types, and a few miscellaneous utilities that help with such common tasks as "
"extracting and parsing message field values, creating RFC-compliant dates, "
"etc."
msgstr ""

#: ../Doc/library/email.rst:36
msgid ""
"The following sections describe the functionality of the :mod:`email` "
"package. The ordering follows a progression that should be common in "
"applications: an email message is read as flat text from a file or other "
"source, the text is parsed to produce the object structure of the email "
"message, this structure is manipulated, and finally, the object tree is "
"rendered back into flat text."
msgstr ""

#: ../Doc/library/email.rst:42
msgid ""
"It is perfectly feasible to create the object structure out of whole cloth "
"--- i.e. completely from scratch.  From there, a similar progression can be "
"taken as above."
msgstr ""

#: ../Doc/library/email.rst:46
msgid ""
"Also included are detailed specifications of all the classes and modules "
"that the :mod:`email` package provides, the exception classes you might "
"encounter while using the :mod:`email` package, some auxiliary utilities, "
"and a few examples.  For users of the older :mod:`mimelib` package, or "
"previous versions of the :mod:`email` package, a section on differences and "
"porting is provided."
msgstr ""

#: ../Doc/library/email.rst:52
msgid "Contents of the :mod:`email` package documentation:"
msgstr ""

#: ../Doc/library/email.rst:72
msgid "SMTP protocol client"
msgstr ""

#: ../Doc/library/email.rst:75
msgid "NNTP protocol client"
msgstr ""

#: ../Doc/library/email.rst:81
msgid "Package History"
msgstr ""

#: ../Doc/library/email.rst:83
msgid ""
"This table describes the release history of the email package, corresponding "
"to the version of Python that the package was released with.  For purposes "
"of this document, when you see a note about change or added versions, these "
"refer to the Python version the change was made in, *not* the email package "
"version.  This table also describes the Python compatibility of each version "
"of the package."
msgstr ""

#: ../Doc/library/email.rst:90
msgid "email version"
msgstr ""

#: ../Doc/library/email.rst:90
msgid "distributed with"
msgstr ""

#: ../Doc/library/email.rst:90
msgid "compatible with"
msgstr ""

#: ../Doc/library/email.rst:92
msgid ":const:`1.x`"
msgstr ""

#: ../Doc/library/email.rst:92
msgid "Python 2.2.0 to Python 2.2.1"
msgstr ""

#: ../Doc/library/email.rst:92
msgid "*no longer supported*"
msgstr ""

#: ../Doc/library/email.rst:94
msgid ":const:`2.5`"
msgstr ""

#: ../Doc/library/email.rst:94
msgid "Python 2.2.2+ and Python 2.3"
msgstr ""

#: ../Doc/library/email.rst:94
msgid "Python 2.1 to 2.5"
msgstr ""

#: ../Doc/library/email.rst:96
msgid ":const:`3.0`"
msgstr ""

#: ../Doc/library/email.rst:96
msgid "Python 2.4"
msgstr ""

#: ../Doc/library/email.rst:96 ../Doc/library/email.rst:98
msgid "Python 2.3 to 2.5"
msgstr ""

#: ../Doc/library/email.rst:98
msgid ":const:`4.0`"
msgstr ""

#: ../Doc/library/email.rst:98
msgid "Python 2.5"
msgstr ""

#: ../Doc/library/email.rst:101
msgid ""
"Here are the major differences between :mod:`email` version 4 and version 3:"
msgstr ""

#: ../Doc/library/email.rst:103
msgid ""
"All modules have been renamed according to :pep:`8` standards.  For example, "
"the version 3 module :mod:`email.Message` was renamed to :mod:`email."
"message` in version 4."
msgstr ""

#: ../Doc/library/email.rst:107
msgid ""
"A new subpackage :mod:`email.mime` was added and all the version 3 :mod:"
"`email.MIME\\*` modules were renamed and situated into the :mod:`email.mime` "
"subpackage.  For example, the version 3 module :mod:`email.MIMEText` was "
"renamed to :mod:`email.mime.text`."
msgstr ""

#: ../Doc/library/email.rst:112
msgid "*Note that the version 3 names will continue to work until Python 2.6*."
msgstr ""

#: ../Doc/library/email.rst:114
msgid ""
"The :mod:`email.mime.application` module was added, which contains the :"
"class:`MIMEApplication` class."
msgstr ""

#: ../Doc/library/email.rst:117
msgid ""
"Methods that were deprecated in version 3 have been removed.  These include :"
"meth:`Generator.__call__`, :meth:`Message.get_type`, :meth:`Message."
"get_main_type`, :meth:`Message.get_subtype`."
msgstr ""

#: ../Doc/library/email.rst:121
msgid ""
"Fixes have been added for :rfc:`2231` support which can change some of the "
"return types for :func:`Message.get_param` and friends.  Under some "
"circumstances, values which used to return a 3-tuple now return simple "
"strings (specifically, if all extended parameter segments were unencoded, "
"there is no language and charset designation expected, so the return type is "
"now a simple string).  Also, %-decoding used to be done for both encoded and "
"unencoded segments; this decoding is now done only for encoded segments."
msgstr ""

#: ../Doc/library/email.rst:129
msgid ""
"Here are the major differences between :mod:`email` version 3 and version 2:"
msgstr ""

#: ../Doc/library/email.rst:131
msgid ""
"The :class:`FeedParser` class was introduced, and the :class:`Parser` class "
"was implemented in terms of the :class:`FeedParser`.  All parsing therefore "
"is non-strict, and parsing will make a best effort never to raise an "
"exception. Problems found while parsing messages are stored in the message's "
"*defect* attribute."
msgstr ""

#: ../Doc/library/email.rst:137
msgid ""
"All aspects of the API which raised :exc:`DeprecationWarning`\\ s in version "
"2 have been removed.  These include the *_encoder* argument to the :class:"
"`MIMEText` constructor, the :meth:`Message.add_payload` method, the :func:"
"`Utils.dump_address_pair` function, and the functions :func:`Utils.decode` "
"and :func:`Utils.encode`."
msgstr ""

#: ../Doc/library/email.rst:143
msgid ""
"New :exc:`DeprecationWarning`\\ s have been added to: :meth:`Generator."
"__call__`, :meth:`Message.get_type`, :meth:`Message.get_main_type`, :meth:"
"`Message.get_subtype`, and the *strict* argument to the :class:`Parser` "
"class.  These are expected to be removed in future versions."
msgstr ""

#: ../Doc/library/email.rst:149
msgid "Support for Pythons earlier than 2.3 has been removed."
msgstr ""

#: ../Doc/library/email.rst:151
msgid "Here are the differences between :mod:`email` version 2 and version 1:"
msgstr ""

#: ../Doc/library/email.rst:153
msgid ""
"The :mod:`email.Header` and :mod:`email.Charset` modules have been added."
msgstr ""

#: ../Doc/library/email.rst:155
msgid ""
"The pickle format for :class:`Message` instances has changed. Since this was "
"never (and still isn't) formally defined, this isn't considered a backward "
"incompatibility.  However if your application pickles and unpickles :class:"
"`Message` instances, be aware that in :mod:`email` version 2, :class:"
"`Message` instances now have private variables *_charset* and "
"*_default_type*."
msgstr ""

#: ../Doc/library/email.rst:162
msgid ""
"Several methods in the :class:`Message` class have been deprecated, or their "
"signatures changed.  Also, many new methods have been added.  See the "
"documentation for the :class:`Message` class for details.  The changes "
"should be completely backward compatible."
msgstr ""

#: ../Doc/library/email.rst:167
msgid ""
"The object structure has changed in the face of :mimetype:`message/rfc822` "
"content types.  In :mod:`email` version 1, such a type would be represented "
"by a scalar payload, i.e. the container message's :meth:`is_multipart` "
"returned false, :meth:`get_payload` was not a list object, but a single :"
"class:`Message` instance."
msgstr ""

#: ../Doc/library/email.rst:173
msgid ""
"This structure was inconsistent with the rest of the package, so the object "
"representation for :mimetype:`message/rfc822` content types was changed.  "
"In :mod:`email` version 2, the container *does* return ``True`` from :meth:"
"`is_multipart`, and :meth:`get_payload` returns a list containing a single :"
"class:`Message` item."
msgstr ""

#: ../Doc/library/email.rst:179
msgid ""
"Note that this is one place that backward compatibility could not be "
"completely maintained.  However, if you're already testing the return type "
"of :meth:`get_payload`, you should be fine.  You just need to make sure your "
"code doesn't do a :meth:`set_payload` with a :class:`Message` instance on a "
"container with a content type of :mimetype:`message/rfc822`."
msgstr ""

#: ../Doc/library/email.rst:185
msgid ""
"The :class:`Parser` constructor's *strict* argument was added, and its :meth:"
"`parse` and :meth:`parsestr` methods grew a *headersonly* argument.  The "
"*strict* flag was also added to functions :func:`email.message_from_file` "
"and :func:`email.message_from_string`."
msgstr ""

#: ../Doc/library/email.rst:190
msgid ""
":meth:`Generator.__call__` is deprecated; use :meth:`Generator.flatten` "
"instead.  The :class:`Generator` class has also grown the :meth:`clone` "
"method."
msgstr ""

#: ../Doc/library/email.rst:193
msgid ""
"The :class:`DecodedGenerator` class in the :mod:`email.Generator` module was "
"added."
msgstr ""

#: ../Doc/library/email.rst:196
msgid ""
"The intermediate base classes :class:`MIMENonMultipart` and :class:"
"`MIMEMultipart` have been added, and interposed in the class hierarchy for "
"most of the other MIME-related derived classes."
msgstr ""

#: ../Doc/library/email.rst:200
msgid ""
"The *_encoder* argument to the :class:`MIMEText` constructor has been "
"deprecated.  Encoding  now happens implicitly based on the *_charset* "
"argument."
msgstr ""

#: ../Doc/library/email.rst:203
msgid ""
"The following functions in the :mod:`email.Utils` module have been "
"deprecated: :func:`dump_address_pairs`, :func:`decode`, and :func:`encode`.  "
"The following functions have been added to the module: :func:`make_msgid`, :"
"func:`decode_rfc2231`, :func:`encode_rfc2231`, and :func:`decode_params`."
msgstr ""

#: ../Doc/library/email.rst:208
msgid "The non-public function :func:`email.Iterators._structure` was added."
msgstr ""

#: ../Doc/library/email.rst:212
msgid "Differences from :mod:`mimelib`"
msgstr ""

#: ../Doc/library/email.rst:214
msgid ""
"The :mod:`email` package was originally prototyped as a separate library "
"called `mimelib <http://mimelib.sf.net/>`_. Changes have been made so that "
"method names are more consistent, and some methods or modules have either "
"been added or removed.  The semantics of some of the methods have also "
"changed.  For the most part, any functionality available in :mod:`mimelib` "
"is still available in the :mod:`email` package, albeit often in a different "
"way.  Backward compatibility between the :mod:`mimelib` package and the :mod:"
"`email` package was not a priority."
msgstr ""

#: ../Doc/library/email.rst:223
msgid ""
"Here is a brief description of the differences between the :mod:`mimelib` "
"and the :mod:`email` packages, along with hints on how to port your "
"applications."
msgstr ""

#: ../Doc/library/email.rst:226
msgid ""
"Of course, the most visible difference between the two packages is that the "
"package name has been changed to :mod:`email`.  In addition, the top-level "
"package has the following differences:"
msgstr ""

#: ../Doc/library/email.rst:230
msgid ""
":func:`messageFromString` has been renamed to :func:`message_from_string`."
msgstr ""

#: ../Doc/library/email.rst:232
msgid ":func:`messageFromFile` has been renamed to :func:`message_from_file`."
msgstr ""

#: ../Doc/library/email.rst:234
msgid "The :class:`Message` class has the following differences:"
msgstr ""

#: ../Doc/library/email.rst:236
msgid "The method :meth:`asString` was renamed to :meth:`as_string`."
msgstr ""

#: ../Doc/library/email.rst:238
msgid "The method :meth:`ismultipart` was renamed to :meth:`is_multipart`."
msgstr ""

#: ../Doc/library/email.rst:240
msgid "The :meth:`get_payload` method has grown a *decode* optional argument."
msgstr ""

#: ../Doc/library/email.rst:242
msgid "The method :meth:`getall` was renamed to :meth:`get_all`."
msgstr ""

#: ../Doc/library/email.rst:244
msgid "The method :meth:`addheader` was renamed to :meth:`add_header`."
msgstr ""

#: ../Doc/library/email.rst:246
msgid "The method :meth:`gettype` was renamed to :meth:`get_type`."
msgstr ""

#: ../Doc/library/email.rst:248
msgid "The method :meth:`getmaintype` was renamed to :meth:`get_main_type`."
msgstr ""

#: ../Doc/library/email.rst:250
msgid "The method :meth:`getsubtype` was renamed to :meth:`get_subtype`."
msgstr ""

#: ../Doc/library/email.rst:252
msgid ""
"The method :meth:`getparams` was renamed to :meth:`get_params`. Also, "
"whereas :meth:`getparams` returned a list of strings, :meth:`get_params` "
"returns a list of 2-tuples, effectively the key/value pairs of the "
"parameters, split on the ``'='`` sign."
msgstr ""

#: ../Doc/library/email.rst:257
msgid "The method :meth:`getparam` was renamed to :meth:`get_param`."
msgstr ""

#: ../Doc/library/email.rst:259
msgid "The method :meth:`getcharsets` was renamed to :meth:`get_charsets`."
msgstr ""

#: ../Doc/library/email.rst:261
msgid "The method :meth:`getfilename` was renamed to :meth:`get_filename`."
msgstr ""

#: ../Doc/library/email.rst:263
msgid "The method :meth:`getboundary` was renamed to :meth:`get_boundary`."
msgstr ""

#: ../Doc/library/email.rst:265
msgid "The method :meth:`setboundary` was renamed to :meth:`set_boundary`."
msgstr ""

#: ../Doc/library/email.rst:267
msgid ""
"The method :meth:`getdecodedpayload` was removed.  To get similar "
"functionality, pass the value 1 to the *decode* flag of the get_payload() "
"method."
msgstr ""

#: ../Doc/library/email.rst:271
msgid ""
"The method :meth:`getpayloadastext` was removed.  Similar functionality is "
"supported by the :class:`DecodedGenerator` class in the :mod:`email."
"generator` module."
msgstr ""

#: ../Doc/library/email.rst:275
msgid ""
"The method :meth:`getbodyastext` was removed.  You can get similar "
"functionality by creating an iterator with :func:`typed_subpart_iterator` in "
"the :mod:`email.iterators` module."
msgstr ""

#: ../Doc/library/email.rst:279
msgid ""
"The :class:`Parser` class has no differences in its public interface. It "
"does have some additional smarts to recognize :mimetype:`message/delivery-"
"status` type messages, which it represents as a :class:`Message` instance "
"containing separate :class:`Message` subparts for each header block in the "
"delivery status notification [#]_."
msgstr ""

#: ../Doc/library/email.rst:285
msgid ""
"The :class:`Generator` class has no differences in its public interface.  "
"There is a new class in the :mod:`email.generator` module though, called :"
"class:`DecodedGenerator` which provides most of the functionality previously "
"available in the :meth:`Message.getpayloadastext` method."
msgstr ""

#: ../Doc/library/email.rst:290
msgid "The following modules and classes have been changed:"
msgstr ""

#: ../Doc/library/email.rst:292
msgid ""
"The :class:`MIMEBase` class constructor arguments *_major* and *_minor* have "
"changed to *_maintype* and *_subtype* respectively."
msgstr ""

#: ../Doc/library/email.rst:295
msgid ""
"The ``Image`` class/module has been renamed to ``MIMEImage``.  The *_minor* "
"argument has been renamed to *_subtype*."
msgstr ""

#: ../Doc/library/email.rst:298
msgid ""
"The ``Text`` class/module has been renamed to ``MIMEText``.  The *_minor* "
"argument has been renamed to *_subtype*."
msgstr ""

#: ../Doc/library/email.rst:301
msgid ""
"The ``MessageRFC822`` class/module has been renamed to ``MIMEMessage``.  "
"Note that an earlier version of :mod:`mimelib` called this class/module "
"``RFC822``, but that clashed with the Python standard library module :mod:"
"`rfc822` on some case-insensitive file systems."
msgstr ""

#: ../Doc/library/email.rst:306
msgid ""
"Also, the :class:`MIMEMessage` class now represents any kind of MIME message "
"with main type :mimetype:`message`.  It takes an optional argument "
"*_subtype* which is used to set the MIME subtype.  *_subtype* defaults to :"
"mimetype:`rfc822`."
msgstr ""

#: ../Doc/library/email.rst:311
msgid ""
":mod:`mimelib` provided some utility functions in its :mod:`address` and :"
"mod:`date` modules.  All of these functions have been moved to the :mod:"
"`email.utils` module."
msgstr ""

#: ../Doc/library/email.rst:315
msgid ""
"The ``MsgReader`` class/module has been removed.  Its functionality is most "
"closely supported in the :func:`body_line_iterator` function in the :mod:"
"`email.iterators` module."
msgstr ""

#: ../Doc/library/email.rst:321
msgid "Delivery Status Notifications (DSN) are defined in :rfc:`1894`."
msgstr ""

#: ../Doc/library/email-examples.rst:4
msgid ":mod:`email`: Examples"
msgstr ""

#: ../Doc/library/email-examples.rst:6
msgid ""
"Here are a few examples of how to use the :mod:`email` package to read, "
"write, and send simple email messages, as well as more complex MIME messages."
msgstr ""

#: ../Doc/library/email-examples.rst:9
msgid "First, let's see how to create and send a simple text message:"
msgstr ""

#: ../Doc/library/email-examples.rst:14
msgid ""
"And parsing RFC822 headers can easily be done by the parse(filename) or "
"parsestr(message_as_string) methods of the Parser() class:"
msgstr ""

#: ../Doc/library/email-examples.rst:20
msgid ""
"Here's an example of how to send a MIME message containing a bunch of family "
"pictures that may be residing in a directory:"
msgstr ""

#: ../Doc/library/email-examples.rst:26
msgid ""
"Here's an example of how to send the entire contents of a directory as an "
"email message: [1]_"
msgstr ""

#: ../Doc/library/email-examples.rst:32
msgid ""
"Here's an example of how to unpack a MIME message like the one above, into a "
"directory of files:"
msgstr ""

#: ../Doc/library/email-examples.rst:37
msgid ""
"Here's an example of how to create an HTML message with an alternative plain "
"text version: [2]_"
msgstr ""

#: ../Doc/library/email-examples.rst:45
msgid ""
"Thanks to Matthew Dixon Cowles for the original inspiration and examples."
msgstr ""

#: ../Doc/library/email-examples.rst:46
msgid "Contributed by Martin Matejek."
msgstr ""

# 8c876904a19e41a4bd90255776a08cd2
#: ../Doc/library/email.charset.rst:2
msgid ":mod:`email.charset`: Representing character sets"
msgstr ""

#: ../Doc/library/email.charset.rst:8
msgid ""
"This module provides a class :class:`Charset` for representing character "
"sets and character set conversions in email messages, as well as a character "
"set registry and several convenience methods for manipulating this registry. "
"Instances of :class:`Charset` are used in several other modules within the :"
"mod:`email` package."
msgstr ""

#: ../Doc/library/email.charset.rst:14
msgid "Import this class from the :mod:`email.charset` module."
msgstr ""

#: ../Doc/library/email.charset.rst:21
msgid "Map character sets to their email properties."
msgstr ""

#: ../Doc/library/email.charset.rst:23
msgid ""
"This class provides information about the requirements imposed on email for "
"a specific character set.  It also provides convenience routines for "
"converting between character sets, given the availability of the applicable "
"codecs.  Given a character set, it will do its best to provide information "
"on how to use that character set in an email message in an RFC-compliant way."
msgstr ""

#: ../Doc/library/email.charset.rst:29
msgid ""
"Certain character sets must be encoded with quoted-printable or base64 when "
"used in email headers or bodies.  Certain character sets must be converted "
"outright, and are not allowed in email."
msgstr ""

#: ../Doc/library/email.charset.rst:33
msgid ""
"Optional *input_charset* is as described below; it is always coerced to "
"lower case.  After being alias normalized it is also used as a lookup into "
"the registry of character sets to find out the header encoding, body "
"encoding, and output conversion codec to be used for the character set.  For "
"example, if *input_charset* is ``iso-8859-1``, then headers and bodies will "
"be encoded using quoted-printable and no output conversion codec is "
"necessary.  If *input_charset* is ``euc-jp``, then headers will be encoded "
"with base64, bodies will not be encoded, but output text will be converted "
"from the ``euc-jp`` character set to the ``iso-2022-jp`` character set."
msgstr ""

#: ../Doc/library/email.charset.rst:43
msgid ":class:`Charset` instances have the following data attributes:"
msgstr ""

#: ../Doc/library/email.charset.rst:48
msgid ""
"The initial character set specified.  Common aliases are converted to their "
"*official* email names (e.g. ``latin_1`` is converted to ``iso-8859-1``).  "
"Defaults to 7-bit ``us-ascii``."
msgstr ""

#: ../Doc/library/email.charset.rst:55
msgid ""
"If the character set must be encoded before it can be used in an email "
"header, this attribute will be set to ``Charset.QP`` (for quoted-printable), "
"``Charset.BASE64`` (for base64 encoding), or ``Charset.SHORTEST`` for the "
"shortest of QP or BASE64 encoding. Otherwise, it will be ``None``."
msgstr ""

#: ../Doc/library/email.charset.rst:64
msgid ""
"Same as *header_encoding*, but describes the encoding for the mail message's "
"body, which indeed may be different than the header encoding. ``Charset."
"SHORTEST`` is not allowed for *body_encoding*."
msgstr ""

# d3e7252bc8b14b3f870d2f54e236737c
#: ../Doc/library/email.charset.rst:71
msgid ""
"Some character sets must be converted before they can be used in email "
"headers or bodies.  If the *input_charset* is one of them, this attribute "
"will contain the name of the character set output will be converted to.  "
"Otherwise, it will be ``None``."
msgstr ""

#: ../Doc/library/email.charset.rst:79
msgid ""
"The name of the Python codec used to convert the *input_charset* to "
"Unicode.  If no conversion codec is necessary, this attribute will be "
"``None``."
msgstr ""

#: ../Doc/library/email.charset.rst:86
msgid ""
"The name of the Python codec used to convert Unicode to the "
"*output_charset*.  If no conversion codec is necessary, this attribute will "
"have the same value as the *input_codec*."
msgstr ""

#: ../Doc/library/email.charset.rst:90
msgid ":class:`Charset` instances also have the following methods:"
msgstr ""

#: ../Doc/library/email.charset.rst:95
msgid "Return the content transfer encoding used for body encoding."
msgstr ""

#: ../Doc/library/email.charset.rst:97
msgid ""
"This is either the string ``quoted-printable`` or ``base64`` depending on "
"the encoding used, or it is a function, in which case you should call the "
"function with a single argument, the Message object being encoded.  The "
"function should then set the :mailheader:`Content-Transfer-Encoding` header "
"itself to whatever is appropriate."
msgstr ""

#: ../Doc/library/email.charset.rst:103
msgid ""
"Returns the string ``quoted-printable`` if *body_encoding* is ``QP``, "
"returns the string ``base64`` if *body_encoding* is ``BASE64``, and returns "
"the string ``7bit`` otherwise."
msgstr ""

# c511b1d0bd60403dae451a516b5d9a09
#: ../Doc/library/email.charset.rst:110
msgid "Convert the string *s* from the *input_codec* to the *output_codec*."
msgstr ""

# 03d474e5405e4c009970ccc5321da01b
#: ../Doc/library/email.charset.rst:115
msgid ""
"Convert a possibly multibyte string to a safely splittable format. *s* is "
"the string to split."
msgstr ""

# f88da4c2072f4f78ba708785571e20d1
#: ../Doc/library/email.charset.rst:118
msgid ""
"Uses the *input_codec* to try and convert the string to Unicode, so it can "
"be safely split on character boundaries (even for multibyte characters)."
msgstr ""

# fe1a200f8b784a04828a6743890835ad
#: ../Doc/library/email.charset.rst:121
msgid ""
"Returns the string as-is if it isn't known how to convert *s* to Unicode "
"with the *input_charset*."
msgstr ""

# 03f5d40abae74c1faf4ec5c321ff9ffb
#: ../Doc/library/email.charset.rst:124
msgid ""
"Characters that could not be converted to Unicode will be replaced with the "
"Unicode replacement character ``'U+FFFD'``."
msgstr ""

# 164db85cdc9043af9acd6abf18d886b0
#: ../Doc/library/email.charset.rst:130
msgid ""
"Convert a splittable string back into an encoded string.  *ustr* is a "
"Unicode string to \"unsplit\"."
msgstr ""

# d4ae533d1c314c6ba893e62b9638ee7f
#: ../Doc/library/email.charset.rst:133
msgid ""
"This method uses the proper codec to try and convert the string from Unicode "
"back into an encoded format.  Return the string as-is if it is not Unicode, "
"or if it could not be converted from Unicode."
msgstr ""

# 23ea363e191d4bafa177539c72658df7
#: ../Doc/library/email.charset.rst:137
msgid ""
"Characters that could not be converted from Unicode will be replaced with an "
"appropriate character (usually ``'?'``)."
msgstr ""

# 8ab814bc944c44d5a4a480b21e7206d5
#: ../Doc/library/email.charset.rst:140
msgid ""
"If *to_output* is ``True`` (the default), uses *output_codec* to convert to "
"an encoded format.  If *to_output* is ``False``, it uses *input_codec*."
msgstr ""

#: ../Doc/library/email.charset.rst:146
msgid "Return the output character set."
msgstr ""

#: ../Doc/library/email.charset.rst:148
msgid ""
"This is the *output_charset* attribute if that is not ``None``, otherwise it "
"is *input_charset*."
msgstr ""

#: ../Doc/library/email.charset.rst:154
msgid ""
"Return the length of the encoded header string, properly calculating for "
"quoted-printable or base64 encoding."
msgstr ""

# 451c4e5795814302afa50dd804a80cdc
#: ../Doc/library/email.charset.rst:160
msgid "Header-encode the string *s*."
msgstr ""

# ebade086263949119521d74fb391bd48
#: ../Doc/library/email.charset.rst:162
msgid ""
"If *convert* is ``True``, the string will be converted from the input "
"charset to the output charset automatically.  This is not useful for "
"multibyte character sets, which have line length issues (multibyte "
"characters must be split on a character, not a byte boundary); use the "
"higher-level :class:`~email.header.Header` class to deal with these issues "
"(see :mod:`email.header`).  *convert* defaults to ``False``."
msgstr ""

#: ../Doc/library/email.charset.rst:169
msgid ""
"The type of encoding (base64 or quoted-printable) will be based on the "
"*header_encoding* attribute."
msgstr ""

# 5d1feb6e3def40959253fecc58c75e02
#: ../Doc/library/email.charset.rst:175
msgid "Body-encode the string *s*."
msgstr ""

# ff4958f2bd40472cb5b8011c305dfb89
#: ../Doc/library/email.charset.rst:177
msgid ""
"If *convert* is ``True`` (the default), the string will be converted from "
"the input charset to output charset automatically. Unlike :meth:"
"`header_encode`, there are no issues with byte boundaries and multibyte "
"charsets in email bodies, so this is usually pretty safe."
msgstr ""

#: ../Doc/library/email.charset.rst:182
msgid ""
"The type of encoding (base64 or quoted-printable) will be based on the "
"*body_encoding* attribute."
msgstr ""

#: ../Doc/library/email.charset.rst:185
msgid ""
"The :class:`Charset` class also provides a number of methods to support "
"standard operations and built-in functions."
msgstr ""

#: ../Doc/library/email.charset.rst:191
msgid ""
"Returns *input_charset* as a string coerced to lower case. :meth:`__repr__` "
"is an alias for :meth:`__str__`."
msgstr ""

#: ../Doc/library/email.charset.rst:197
msgid ""
"This method allows you to compare two :class:`Charset` instances for "
"equality."
msgstr ""

#: ../Doc/library/email.charset.rst:203
msgid ""
"This method allows you to compare two :class:`Charset` instances for "
"inequality."
msgstr ""

#: ../Doc/library/email.charset.rst:206
msgid ""
"The :mod:`email.charset` module also provides the following functions for "
"adding new entries to the global character set, alias, and codec registries:"
msgstr ""

#: ../Doc/library/email.charset.rst:212
msgid "Add character properties to the global registry."
msgstr ""

#: ../Doc/library/email.charset.rst:214
msgid ""
"*charset* is the input character set, and must be the canonical name of a "
"character set."
msgstr ""

#: ../Doc/library/email.charset.rst:217
msgid ""
"Optional *header_enc* and *body_enc* is either ``Charset.QP`` for quoted-"
"printable, ``Charset.BASE64`` for base64 encoding, ``Charset.SHORTEST`` for "
"the shortest of quoted-printable or base64 encoding, or ``None`` for no "
"encoding.  ``SHORTEST`` is only valid for *header_enc*. The default is "
"``None`` for no encoding."
msgstr ""

#: ../Doc/library/email.charset.rst:223
msgid ""
"Optional *output_charset* is the character set that the output should be in. "
"Conversions will proceed from input charset, to Unicode, to the output "
"charset when the method :meth:`Charset.convert` is called.  The default is "
"to output in the same character set as the input."
msgstr ""

#: ../Doc/library/email.charset.rst:228
msgid ""
"Both *input_charset* and *output_charset* must have Unicode codec entries in "
"the module's character set-to-codec mapping; use :func:`add_codec` to add "
"codecs the module does not know about.  See the :mod:`codecs` module's "
"documentation for more information."
msgstr ""

#: ../Doc/library/email.charset.rst:233
msgid ""
"The global character set registry is kept in the module global dictionary "
"``CHARSETS``."
msgstr ""

#: ../Doc/library/email.charset.rst:239
msgid ""
"Add a character set alias.  *alias* is the alias name, e.g. ``latin-1``. "
"*canonical* is the character set's canonical name, e.g. ``iso-8859-1``."
msgstr ""

#: ../Doc/library/email.charset.rst:242
msgid ""
"The global charset alias registry is kept in the module global dictionary "
"``ALIASES``."
msgstr ""

#: ../Doc/library/email.charset.rst:248
msgid ""
"Add a codec that map characters in the given character set to and from "
"Unicode."
msgstr ""

# 476fc0c593154929ba144148a631cc34
#: ../Doc/library/email.charset.rst:250
msgid ""
"*charset* is the canonical name of a character set. *codecname* is the name "
"of a Python codec, as appropriate for the second argument to the :func:"
"`unicode` built-in, or to the :meth:`encode` method of a Unicode string."
msgstr ""

# 20d57b6ec7e640ecb4b8424a7dc3b238
#: ../Doc/library/email.encoders.rst:2
msgid ":mod:`email.encoders`: Encoders"
msgstr ""

#: ../Doc/library/email.encoders.rst:8
msgid ""
"When creating :class:`~email.message.Message` objects from scratch, you "
"often need to encode the payloads for transport through compliant mail "
"servers. This is especially true for :mimetype:`image/\\*` and :mimetype:"
"`text/\\*` type messages containing binary data."
msgstr ""

#: ../Doc/library/email.encoders.rst:13
msgid ""
"The :mod:`email` package provides some convenient encodings in its :mod:"
"`encoders` module.  These encoders are actually used by the :class:`~email."
"mime.audio.MIMEAudio` and :class:`~email.mime.image.MIMEImage` class "
"constructors to provide default encodings.  All encoder functions take "
"exactly one argument, the message object to encode.  They usually extract "
"the payload, encode it, and reset the payload to this newly encoded value.  "
"They should also set the :mailheader:`Content-Transfer-Encoding` header as "
"appropriate."
msgstr ""

# 88847a666cc6436a9a1a8cc4911b6903
#: ../Doc/library/email.encoders.rst:21
msgid ""
"Note that these functions are not meaningful for a multipart message.  They "
"must be applied to individual subparts instead, and will raise a :exc:"
"`TypeError` if passed a message whose type is multipart."
msgstr ""

#: ../Doc/library/email.encoders.rst:25
msgid "Here are the encoding functions provided:"
msgstr ""

#: ../Doc/library/email.encoders.rst:30
msgid ""
"Encodes the payload into quoted-printable form and sets the :mailheader:"
"`Content-Transfer-Encoding` header to ``quoted-printable`` [#]_. This is a "
"good encoding to use when most of your payload is normal printable data, but "
"contains a few unprintable characters."
msgstr ""

#: ../Doc/library/email.encoders.rst:38
msgid ""
"Encodes the payload into base64 form and sets the :mailheader:`Content-"
"Transfer-Encoding` header to ``base64``.  This is a good encoding to use "
"when most of your payload is unprintable data since it is a more compact "
"form than quoted-printable.  The drawback of base64 encoding is that it "
"renders the text non-human readable."
msgstr ""

#: ../Doc/library/email.encoders.rst:47
msgid ""
"This doesn't actually modify the message's payload, but it does set the :"
"mailheader:`Content-Transfer-Encoding` header to either ``7bit`` or ``8bit`` "
"as appropriate, based on the payload data."
msgstr ""

#: ../Doc/library/email.encoders.rst:54
msgid ""
"This does nothing; it doesn't even set the :mailheader:`Content-Transfer-"
"Encoding` header."
msgstr ""

#: ../Doc/library/email.encoders.rst:59
msgid ""
"Note that encoding with :meth:`encode_quopri` also encodes all tabs and "
"space characters in the data."
msgstr ""

# a53b961689874703a9b3eb4b25e70d6f
#: ../Doc/library/email.errors.rst:2
msgid ":mod:`email.errors`: Exception and Defect classes"
msgstr ""

#: ../Doc/library/email.errors.rst:8
msgid ""
"The following exception classes are defined in the :mod:`email.errors` "
"module:"
msgstr ""

#: ../Doc/library/email.errors.rst:13
msgid ""
"This is the base class for all exceptions that the :mod:`email` package can "
"raise.  It is derived from the standard :exc:`Exception` class and defines "
"no additional methods."
msgstr ""

# c49ba042022545a4a4f33a1b3f4c9e4f
#: ../Doc/library/email.errors.rst:20
msgid ""
"This is the base class for exceptions raised by the :class:`~email.parser."
"Parser` class.  It is derived from :exc:`MessageError`."
msgstr ""

#: ../Doc/library/email.errors.rst:26 ../Doc/library/email.errors.rst:38
msgid ""
"Raised under some error conditions when parsing the :rfc:`2822` headers of a "
"message, this class is derived from :exc:`MessageParseError`. It can be "
"raised from the :meth:`Parser.parse` or :meth:`Parser.parsestr` methods."
msgstr ""

#: ../Doc/library/email.errors.rst:30
msgid ""
"Situations where it can be raised include finding an envelope header after "
"the first :rfc:`2822` header of the message, finding a continuation line "
"before the first :rfc:`2822` header is found, or finding a line in the "
"headers which is neither a header or a continuation line."
msgstr ""

#: ../Doc/library/email.errors.rst:42
msgid ""
"Situations where it can be raised include not being able to find the "
"starting or terminating boundary in a :mimetype:`multipart/\\*` message when "
"strict parsing is used."
msgstr ""

#: ../Doc/library/email.errors.rst:49
msgid ""
"Raised when a payload is added to a :class:`Message` object using :meth:"
"`add_payload`, but the payload is already a scalar and the message's :"
"mailheader:`Content-Type` main type is not either :mimetype:`multipart` or "
"missing.  :exc:`MultipartConversionError` multiply inherits from :exc:"
"`MessageError` and the built-in :exc:`TypeError`."
msgstr ""

#: ../Doc/library/email.errors.rst:55
msgid ""
"Since :meth:`Message.add_payload` is deprecated, this exception is rarely "
"raised in practice.  However the exception may also be raised if the :meth:"
"`attach` method is called on an instance of a class derived from :class:"
"`~email.mime.nonmultipart.MIMENonMultipart` (e.g. :class:`~email.mime.image."
"MIMEImage`)."
msgstr ""

#: ../Doc/library/email.errors.rst:61
msgid ""
"Here's the list of the defects that the :class:`~email.mime.parser."
"FeedParser` can find while parsing messages.  Note that the defects are "
"added to the message where the problem was found, so for example, if a "
"message nested inside a :mimetype:`multipart/alternative` had a malformed "
"header, that nested message object would have a defect, but the containing "
"messages would not."
msgstr ""

#: ../Doc/library/email.errors.rst:67
msgid ""
"All defect classes are subclassed from :class:`email.errors.MessageDefect`, "
"but this class is *not* an exception!"
msgstr ""

#: ../Doc/library/email.errors.rst:73
msgid ""
":class:`NoBoundaryInMultipartDefect` -- A message claimed to be a multipart, "
"but had no :mimetype:`boundary` parameter."
msgstr ""

#: ../Doc/library/email.errors.rst:76
msgid ""
":class:`StartBoundaryNotFoundDefect` -- The start boundary claimed in the :"
"mailheader:`Content-Type` header was never found."
msgstr ""

#: ../Doc/library/email.errors.rst:79
msgid ""
":class:`FirstHeaderLineIsContinuationDefect` -- The message had a "
"continuation line as its first header line."
msgstr ""

#: ../Doc/library/email.errors.rst:82
msgid ""
":class:`MisplacedEnvelopeHeaderDefect` - A \"Unix From\" header was found in "
"the middle of a header block."
msgstr ""

#: ../Doc/library/email.errors.rst:85
msgid ""
":class:`MalformedHeaderDefect` -- A header was found that was missing a "
"colon, or was otherwise malformed."
msgstr ""

#: ../Doc/library/email.errors.rst:88
msgid ""
":class:`MultipartInvariantViolationDefect` -- A message claimed to be a :"
"mimetype:`multipart`, but no subparts were found.  Note that when a message "
"has this defect, its :meth:`is_multipart` method may return false even "
"though its content type claims to be :mimetype:`multipart`."
msgstr ""

# 55837eb19068402c810371a4989ae528
#: ../Doc/library/email.generator.rst:2
msgid ":mod:`email.generator`: Generating MIME documents"
msgstr ""

#: ../Doc/library/email.generator.rst:8
msgid ""
"One of the most common tasks is to generate the flat text of the email "
"message represented by a message object structure.  You will need to do this "
"if you want to send your message via the :mod:`smtplib` module or the :mod:"
"`nntplib` module, or print the message on the console.  Taking a message "
"object structure and producing a flat text document is the job of the :class:"
"`Generator` class."
msgstr ""

# 23cc346f94534649a739ad7b40ad2657
#: ../Doc/library/email.generator.rst:14
msgid ""
"Again, as with the :mod:`email.parser` module, you aren't limited to the "
"functionality of the bundled generator; you could write one from scratch "
"yourself.  However the bundled generator knows how to generate most email in "
"a standards-compliant way, should handle MIME and non-MIME email messages "
"just fine, and is designed so that the transformation from flat text, to a "
"message structure via the :class:`~email.parser.Parser` class, and back to "
"flat text, is idempotent (the input is identical to the output) [#]_.  On "
"the other hand, using the Generator on a :class:`~email.message.Message` "
"constructed by program may result in changes to the :class:`~email.message."
"Message` object as defaults are filled in."
msgstr ""

#: ../Doc/library/email.generator.rst:25
msgid ""
"Here are the public methods of the :class:`Generator` class, imported from "
"the :mod:`email.generator` module:"
msgstr ""

# 9f1219657b464eae92cf794506148abd
#: ../Doc/library/email.generator.rst:31
msgid ""
"The constructor for the :class:`Generator` class takes a file-like object "
"called *outfp* for an argument.  *outfp* must support the :meth:`write` "
"method and be usable as the output file in a Python extended print statement."
msgstr ""

#: ../Doc/library/email.generator.rst:35
msgid ""
"Optional *mangle_from_* is a flag that, when ``True``, puts a ``>`` "
"character in front of any line in the body that starts exactly as ``From``, "
"i.e. ``From`` followed by a space at the beginning of the line.  This is the "
"only guaranteed portable way to avoid having such lines be mistaken for a "
"Unix mailbox format envelope header separator (see `WHY THE CONTENT-LENGTH "
"FORMAT IS BAD <http://www.jwz.org/doc/content-length.html>`_ for details).  "
"*mangle_from_* defaults to ``True``, but you might want to set this to "
"``False`` if you are not writing Unix mailbox format files."
msgstr ""

#: ../Doc/library/email.generator.rst:44
msgid ""
"Optional *maxheaderlen* specifies the longest length for a non-continued "
"header. When a header line is longer than *maxheaderlen* (in characters, "
"with tabs expanded to 8 spaces), the header will be split as defined in the :"
"class:`~email.header.Header` class.  Set to zero to disable header wrapping. "
"The default is 78, as recommended (but not required) by :rfc:`2822`."
msgstr ""

#: ../Doc/library/email.generator.rst:50
msgid "The other public :class:`Generator` methods are:"
msgstr ""

#: ../Doc/library/email.generator.rst:55
msgid ""
"Print the textual representation of the message object structure rooted at "
"*msg* to the output file specified when the :class:`Generator` instance was "
"created.  Subparts are visited depth-first and the resulting text will be "
"properly MIME encoded."
msgstr ""

#: ../Doc/library/email.generator.rst:60
msgid ""
"Optional *unixfrom* is a flag that forces the printing of the envelope "
"header delimiter before the first :rfc:`2822` header of the root message "
"object.  If the root object has no envelope header, a standard one is "
"crafted.  By default, this is set to ``False`` to inhibit the printing of "
"the envelope delimiter."
msgstr ""

#: ../Doc/library/email.generator.rst:66
msgid "Note that for subparts, no envelope header is ever printed."
msgstr ""

#: ../Doc/library/email.generator.rst:73
msgid ""
"Return an independent clone of this :class:`Generator` instance with the "
"exact same options."
msgstr ""

# 96b1c975bb42407eb29c3c0e64a8fb38
#: ../Doc/library/email.generator.rst:81
msgid ""
"Write the string *s* to the underlying file object, i.e. *outfp* passed to :"
"class:`Generator`'s constructor.  This provides just enough file-like API "
"for :class:`Generator` instances to be used in extended print statements."
msgstr ""

#: ../Doc/library/email.generator.rst:85
msgid ""
"As a convenience, see the methods :meth:`Message.as_string` and ``str"
"(aMessage)``, a.k.a. :meth:`Message.__str__`, which simplify the generation "
"of a formatted string representation of a message object.  For more detail, "
"see :mod:`email.message`."
msgstr ""

#: ../Doc/library/email.generator.rst:90
msgid ""
"The :mod:`email.generator` module also provides a derived class, called :"
"class:`DecodedGenerator` which is like the :class:`Generator` base class, "
"except that non-\\ :mimetype:`text` parts are substituted with a format "
"string representing the part."
msgstr ""

#: ../Doc/library/email.generator.rst:98
msgid ""
"This class, derived from :class:`Generator` walks through all the subparts "
"of a message.  If the subpart is of main type :mimetype:`text`, then it "
"prints the decoded payload of the subpart. Optional *_mangle_from_* and "
"*maxheaderlen* are as with the :class:`Generator` base class."
msgstr ""

#: ../Doc/library/email.generator.rst:103
msgid ""
"If the subpart is not of main type :mimetype:`text`, optional *fmt* is a "
"format string that is used instead of the message payload. *fmt* is expanded "
"with the following keywords, ``%(keyword)s`` format:"
msgstr ""

#: ../Doc/library/email.generator.rst:107
msgid "``type`` -- Full MIME type of the non-\\ :mimetype:`text` part"
msgstr ""

#: ../Doc/library/email.generator.rst:109
msgid "``maintype`` -- Main MIME type of the non-\\ :mimetype:`text` part"
msgstr ""

#: ../Doc/library/email.generator.rst:111
msgid "``subtype`` -- Sub-MIME type of the non-\\ :mimetype:`text` part"
msgstr ""

#: ../Doc/library/email.generator.rst:113
msgid "``filename`` -- Filename of the non-\\ :mimetype:`text` part"
msgstr ""

#: ../Doc/library/email.generator.rst:115
msgid ""
"``description`` -- Description associated with the non-\\ :mimetype:`text` "
"part"
msgstr ""

#: ../Doc/library/email.generator.rst:117
msgid ""
"``encoding`` -- Content transfer encoding of the non-\\ :mimetype:`text` part"
msgstr ""

#: ../Doc/library/email.generator.rst:119
msgid "The default value for *fmt* is ``None``, meaning ::"
msgstr ""

# f19cf560334842ba984d9bee5f5892ef
#: ../Doc/library/email.generator.rst:131
msgid ""
"This statement assumes that you use the appropriate setting for the "
"``unixfrom`` argument, and that you set maxheaderlen=0 (which will preserve "
"whatever the input line lengths were).  It is also not strictly true, since "
"in many cases runs of whitespace in headers are collapsed into single "
"blanks.  The latter is a bug that will eventually be fixed."
msgstr ""

# 60b69b4b852141b0b38c431bd13af81d
#: ../Doc/library/email.header.rst:2
msgid ":mod:`email.header`: Internationalized headers"
msgstr ""

#: ../Doc/library/email.header.rst:8
msgid ""
":rfc:`2822` is the base standard that describes the format of email "
"messages. It derives from the older :rfc:`822` standard which came into "
"widespread use at a time when most email was composed of ASCII characters "
"only.  :rfc:`2822` is a specification written assuming email contains only 7-"
"bit ASCII characters."
msgstr ""

#: ../Doc/library/email.header.rst:13
msgid ""
"Of course, as email has been deployed worldwide, it has become "
"internationalized, such that language specific character sets can now be "
"used in email messages.  The base standard still requires email messages to "
"be transferred using only 7-bit ASCII characters, so a slew of RFCs have "
"been written describing how to encode email containing non-ASCII characters "
"into :rfc:`2822`\\ -compliant format. These RFCs include :rfc:`2045`, :rfc:"
"`2046`, :rfc:`2047`, and :rfc:`2231`. The :mod:`email` package supports "
"these standards in its :mod:`email.header` and :mod:`email.charset` modules."
msgstr ""

#: ../Doc/library/email.header.rst:22
msgid ""
"If you want to include non-ASCII characters in your email headers, say in "
"the :mailheader:`Subject` or :mailheader:`To` fields, you should use the :"
"class:`Header` class and assign the field in the :class:`~email.message."
"Message` object to an instance of :class:`Header` instead of using a string "
"for the header value.  Import the :class:`Header` class from the :mod:`email."
"header` module. For example::"
msgstr ""

#: ../Doc/library/email.header.rst:39
msgid ""
"Notice here how we wanted the :mailheader:`Subject` field to contain a non-"
"ASCII character?  We did this by creating a :class:`Header` instance and "
"passing in the character set that the byte string was encoded in.  When the "
"subsequent :class:`~email.message.Message` instance was flattened, the :"
"mailheader:`Subject` field was properly :rfc:`2047` encoded.  MIME-aware "
"mail readers would show this header using the embedded ISO-8859-1 character."
msgstr ""

#: ../Doc/library/email.header.rst:48
msgid "Here is the :class:`Header` class description:"
msgstr ""

#: ../Doc/library/email.header.rst:53
msgid ""
"Create a MIME-compliant header that can contain strings in different "
"character sets."
msgstr ""

# 58712191e0d5464e884655cfeb7f91e1
#: ../Doc/library/email.header.rst:56
msgid ""
"Optional *s* is the initial header value.  If ``None`` (the default), the "
"initial header value is not set.  You can later append to the header with :"
"meth:`append` method calls.  *s* may be a byte string or a Unicode string, "
"but see the :meth:`append` documentation for semantics."
msgstr ""

#: ../Doc/library/email.header.rst:61
msgid ""
"Optional *charset* serves two purposes: it has the same meaning as the "
"*charset* argument to the :meth:`append` method.  It also sets the default "
"character set for all subsequent :meth:`append` calls that omit the "
"*charset* argument.  If *charset* is not provided in the constructor (the "
"default), the ``us-ascii`` character set is used both as *s*'s initial "
"charset and as the default for subsequent :meth:`append` calls."
msgstr ""

# 126599e245264785b2ac54956ff98cfa
#: ../Doc/library/email.header.rst:68
msgid ""
"The maximum line length can be specified explicitly via *maxlinelen*.  For "
"splitting the first line to a shorter value (to account for the field header "
"which isn't included in *s*, e.g. :mailheader:`Subject`) pass in the name of "
"the field in *header_name*.  The default *maxlinelen* is 76, and the default "
"value for *header_name* is ``None``, meaning it is not taken into account "
"for the first line of a long, split header."
msgstr ""

# f304974d3f604fefb9fd86a17febac9f
#: ../Doc/library/email.header.rst:75
msgid ""
"Optional *continuation_ws* must be :rfc:`2822`\\ -compliant folding "
"whitespace, and is usually either a space or a hard tab character. This "
"character will be prepended to continuation lines.  *continuation_ws* "
"defaults to a single space character (\" \")."
msgstr ""

#: ../Doc/library/email.header.rst:80
msgid ""
"Optional *errors* is passed straight through to the :meth:`append` method."
msgstr ""

#: ../Doc/library/email.header.rst:85
msgid "Append the string *s* to the MIME header."
msgstr ""

#: ../Doc/library/email.header.rst:87
msgid ""
"Optional *charset*, if given, should be a :class:`~email.charset.Charset` "
"instance (see :mod:`email.charset`) or the name of a character set, which "
"will be converted to a :class:`~email.charset.Charset` instance.  A value of "
"``None`` (the default) means that the *charset* given in the constructor is "
"used."
msgstr ""

# b935a0a3ad1a4b8b80c3ad85fea09d0e
#: ../Doc/library/email.header.rst:93
msgid ""
"*s* may be a byte string or a Unicode string.  If it is a byte string (i.e.  "
"``isinstance(s, str)`` is true), then *charset* is the encoding of that byte "
"string, and a :exc:`UnicodeError` will be raised if the string cannot be "
"decoded with that character set."
msgstr ""

# 058ed54b0ec5496da9aa6888df40f3d8
#: ../Doc/library/email.header.rst:98
msgid ""
"If *s* is a Unicode string, then *charset* is a hint specifying the "
"character set of the characters in the string.  In this case, when producing "
"an :rfc:`2822`\\ -compliant header using :rfc:`2047` rules, the Unicode "
"string will be encoded using the following charsets in order: ``us-ascii``, "
"the *charset* hint, ``utf-8``.  The first character set to not provoke a :"
"exc:`UnicodeError` is used."
msgstr ""

# ac957dd4e4184d20845e7be6d834595e
#: ../Doc/library/email.header.rst:105
msgid ""
"Optional *errors* is passed through to any :func:`unicode` or :func:`ustr."
"encode` call, and defaults to \"strict\"."
msgstr ""

#: ../Doc/library/email.header.rst:111
msgid ""
"Encode a message header into an RFC-compliant format, possibly wrapping long "
"lines and encapsulating non-ASCII parts in base64 or quoted-printable "
"encodings.  Optional *splitchars* is a string containing characters to split "
"long ASCII lines on, in rough support of :rfc:`2822`'s *highest level "
"syntactic breaks*.  This doesn't affect :rfc:`2047` encoded lines."
msgstr ""

#: ../Doc/library/email.header.rst:117
msgid ""
"The :class:`Header` class also provides a number of methods to support "
"standard operators and built-in functions."
msgstr ""

#: ../Doc/library/email.header.rst:123
msgid "A synonym for :meth:`Header.encode`.  Useful for ``str(aHeader)``."
msgstr ""

# a7cb2fec76854a229efdf3e6396b8486
#: ../Doc/library/email.header.rst:128
msgid ""
"A helper for the built-in :func:`unicode` function.  Returns the header as a "
"Unicode string."
msgstr ""

#: ../Doc/library/email.header.rst:134
msgid ""
"This method allows you to compare two :class:`Header` instances for equality."
msgstr ""

#: ../Doc/library/email.header.rst:140
msgid ""
"This method allows you to compare two :class:`Header` instances for "
"inequality."
msgstr ""

#: ../Doc/library/email.header.rst:143
msgid ""
"The :mod:`email.header` module also provides the following convenient "
"functions."
msgstr ""

#: ../Doc/library/email.header.rst:148
msgid ""
"Decode a message header value without converting the character set. The "
"header value is in *header*."
msgstr ""

#: ../Doc/library/email.header.rst:151
msgid ""
"This function returns a list of ``(decoded_string, charset)`` pairs "
"containing each of the decoded parts of the header.  *charset* is ``None`` "
"for non-encoded parts of the header, otherwise a lower case string "
"containing the name of the character set specified in the encoded string."
msgstr ""

#: ../Doc/library/email.header.rst:156 ../Doc/library/email.message.rst:290
#: ../Doc/library/ssl.rst:186
msgid "Here's an example::"
msgstr ""

#: ../Doc/library/email.header.rst:165
msgid ""
"Create a :class:`Header` instance from a sequence of pairs as returned by :"
"func:`decode_header`."
msgstr ""

#: ../Doc/library/email.header.rst:168
msgid ""
":func:`decode_header` takes a header value string and returns a sequence of "
"pairs of the format ``(decoded_string, charset)`` where *charset* is the "
"name of the character set."
msgstr ""

#: ../Doc/library/email.header.rst:172
msgid ""
"This function takes one of those sequence of pairs and returns a :class:"
"`Header` instance.  Optional *maxlinelen*, *header_name*, and "
"*continuation_ws* are as in the :class:`Header` constructor."
msgstr ""

# 2f570c79ff694182aac6e058b02999dc
#: ../Doc/library/email.iterators.rst:2
msgid ":mod:`email.iterators`: Iterators"
msgstr ""

#: ../Doc/library/email.iterators.rst:8
msgid ""
"Iterating over a message object tree is fairly easy with the :meth:`Message."
"walk` method.  The :mod:`email.iterators` module provides some useful higher "
"level iterations over message object trees."
msgstr ""

#: ../Doc/library/email.iterators.rst:15
msgid ""
"This iterates over all the payloads in all the subparts of *msg*, returning "
"the string payloads line-by-line.  It skips over all the subpart headers, "
"and it skips over any subpart with a payload that isn't a Python string.  "
"This is somewhat equivalent to reading the flat text representation of the "
"message from a file using :meth:`readline`, skipping over all the "
"intervening headers."
msgstr ""

#: ../Doc/library/email.iterators.rst:21
msgid "Optional *decode* is passed through to :meth:`Message.get_payload`."
msgstr ""

#: ../Doc/library/email.iterators.rst:26
msgid ""
"This iterates over all the subparts of *msg*, returning only those subparts "
"that match the MIME type specified by *maintype* and *subtype*."
msgstr ""

#: ../Doc/library/email.iterators.rst:29
msgid ""
"Note that *subtype* is optional; if omitted, then subpart MIME type matching "
"is done only with the main type.  *maintype* is optional too; it defaults "
"to :mimetype:`text`."
msgstr ""

#: ../Doc/library/email.iterators.rst:33
msgid ""
"Thus, by default :func:`typed_subpart_iterator` returns each subpart that "
"has a MIME type of :mimetype:`text/\\*`."
msgstr ""

#: ../Doc/library/email.iterators.rst:36
msgid ""
"The following function has been added as a useful debugging tool.  It should "
"*not* be considered part of the supported public interface for the package."
msgstr ""

#: ../Doc/library/email.iterators.rst:42
msgid ""
"Prints an indented representation of the content types of the message object "
"structure.  For example::"
msgstr ""

# c2d8074f7c5a4eeaadda8789809b444a
#: ../Doc/library/email.iterators.rst:63
msgid ""
"Optional *fp* is a file-like object to print the output to.  It must be "
"suitable for Python's extended print statement.  *level* is used internally."
msgstr ""

# a7dad1b41409418ca2316b1f9065e805
#: ../Doc/library/email.message.rst:2
msgid ":mod:`email.message`: Representing an email message"
msgstr ""

#: ../Doc/library/email.message.rst:8
msgid ""
"The central class in the :mod:`email` package is the :class:`Message` class, "
"imported from the :mod:`email.message` module.  It is the base class for "
"the :mod:`email` object model.  :class:`Message` provides the core "
"functionality for setting and querying header fields, and for accessing "
"message bodies."
msgstr ""

#: ../Doc/library/email.message.rst:13
msgid ""
"Conceptually, a :class:`Message` object consists of *headers* and "
"*payloads*. Headers are :rfc:`2822` style field names and values where the "
"field name and value are separated by a colon.  The colon is not part of "
"either the field name or the field value."
msgstr ""

#: ../Doc/library/email.message.rst:18
msgid ""
"Headers are stored and returned in case-preserving form but are matched case-"
"insensitively.  There may also be a single envelope header, also known as "
"the *Unix-From* header or the ``From_`` header.  The payload is either a "
"string in the case of simple message objects or a list of :class:`Message` "
"objects for MIME container documents (e.g. :mimetype:`multipart/\\*` and :"
"mimetype:`message/rfc822`)."
msgstr ""

#: ../Doc/library/email.message.rst:25
msgid ""
":class:`Message` objects provide a mapping style interface for accessing the "
"message headers, and an explicit interface for accessing both the headers "
"and the payload.  It provides convenience methods for generating a flat text "
"representation of the message object tree, for accessing commonly used "
"header parameters, and for recursively walking over the object tree."
msgstr ""

#: ../Doc/library/email.message.rst:31
msgid "Here are the methods of the :class:`Message` class:"
msgstr ""

#: ../Doc/library/email.message.rst:36
msgid "The constructor takes no arguments."
msgstr ""

#: ../Doc/library/email.message.rst:41
msgid ""
"Return the entire message flattened as a string.  When optional *unixfrom* "
"is ``True``, the envelope header is included in the returned string. "
"*unixfrom* defaults to ``False``.  Flattening the message may trigger "
"changes to the :class:`Message` if defaults need to be filled in to complete "
"the transformation to a string (for example, MIME boundaries may be "
"generated or modified)."
msgstr ""

#: ../Doc/library/email.message.rst:48
msgid ""
"Note that this method is provided as a convenience and may not always format "
"the message the way you want.  For example, by default it mangles lines that "
"begin with ``From``.  For more flexibility, instantiate a :class:`~email."
"generator.Generator` instance and use its :meth:`flatten` method directly.  "
"For example::"
msgstr ""

#: ../Doc/library/email.message.rst:64
msgid "Equivalent to ``as_string(unixfrom=True)``."
msgstr ""

#: ../Doc/library/email.message.rst:69
msgid ""
"Return ``True`` if the message's payload is a list of sub-\\ :class:"
"`Message` objects, otherwise return ``False``.  When :meth:`is_multipart` "
"returns False, the payload should be a string object."
msgstr ""

#: ../Doc/library/email.message.rst:76
msgid ""
"Set the message's envelope header to *unixfrom*, which should be a string."
msgstr ""

#: ../Doc/library/email.message.rst:81
msgid ""
"Return the message's envelope header.  Defaults to ``None`` if the envelope "
"header was never set."
msgstr ""

#: ../Doc/library/email.message.rst:87
msgid ""
"Add the given *payload* to the current payload, which must be ``None`` or a "
"list of :class:`Message` objects before the call. After the call, the "
"payload will always be a list of :class:`Message` objects.  If you want to "
"set the payload to a scalar object (e.g. a string), use :meth:`set_payload` "
"instead."
msgstr ""

#: ../Doc/library/email.message.rst:96
msgid ""
"Return the current payload, which will be a list of :class:`Message` objects "
"when :meth:`is_multipart` is ``True``, or a string when :meth:`is_multipart` "
"is ``False``.  If the payload is a list and you mutate the list object, you "
"modify the message's payload in place."
msgstr ""

#: ../Doc/library/email.message.rst:101
msgid ""
"With optional argument *i*, :meth:`get_payload` will return the *i*-th "
"element of the payload, counting from zero, if :meth:`is_multipart` is "
"``True``.  An :exc:`IndexError` will be raised if *i* is less than 0 or "
"greater than or equal to the number of items in the payload.  If the payload "
"is a string (i.e.  :meth:`is_multipart` is ``False``) and *i* is given, a :"
"exc:`TypeError` is raised."
msgstr ""

#: ../Doc/library/email.message.rst:108
msgid ""
"Optional *decode* is a flag indicating whether the payload should be decoded "
"or not, according to the :mailheader:`Content-Transfer-Encoding` header. "
"When ``True`` and the message is not a multipart, the payload will be "
"decoded if this header's value is ``quoted-printable`` or ``base64``. If "
"some other encoding is used, or :mailheader:`Content-Transfer-Encoding` "
"header is missing, or if the payload has bogus base64 data, the payload is "
"returned as-is (undecoded).  If the message is a multipart and the *decode* "
"flag is ``True``, then ``None`` is returned.  The default for *decode* is "
"``False``."
msgstr ""

#: ../Doc/library/email.message.rst:121
msgid ""
"Set the entire message object's payload to *payload*.  It is the client's "
"responsibility to ensure the payload invariants.  Optional *charset* sets "
"the message's default character set; see :meth:`set_charset` for details."
msgstr ""

# a4f61318ea11485dbded30f124bc9186
#: ../Doc/library/email.message.rst:131
msgid ""
"Set the character set of the payload to *charset*, which can either be a :"
"class:`~email.charset.Charset` instance (see :mod:`email.charset`), a string "
"naming a character set, or ``None``.  If it is a string, it will be "
"converted to a :class:`~email.charset.Charset` instance.  If *charset* is "
"``None``, the ``charset`` parameter will be removed from the :mailheader:"
"`Content-Type` header (the message will not be otherwise modified).  "
"Anything else will generate a :exc:`TypeError`."
msgstr ""

# 4592d2a46d70458d83e0275c512b0cdc
#: ../Doc/library/email.message.rst:139
msgid ""
"If there is no existing :mailheader:`MIME-Version` header one will be "
"added.  If there is no existing :mailheader:`Content-Type` header, one will "
"be added with a value of :mimetype:`text/plain`.  Whether the :mailheader:"
"`Content-Type` header already exists or not, its ``charset`` parameter will "
"be set to *charset.output_charset*.   If *charset.input_charset* and "
"*charset.output_charset* differ, the payload will be re-encoded to the "
"*output_charset*.  If there is no existing :mailheader:`Content-Transfer-"
"Encoding` header, then the payload will be transfer-encoded, if needed, "
"using the specified :class:`~email.charset.Charset`, and a header with the "
"appropriate value will be added.  If a :mailheader:`Content-Transfer-"
"Encoding` header already exists, the payload is assumed to already be "
"correctly encoded using that :mailheader:`Content-Transfer-Encoding` and is "
"not modified."
msgstr ""

# 8fc45c5ca0944566ba14a648cc33973b
#: ../Doc/library/email.message.rst:153
msgid ""
"The message will be assumed to be of type :mimetype:`text/\\*`, with the "
"payload either in unicode or encoded with *charset.input_charset*. It will "
"be encoded or converted to *charset.output_charset* and transfer encoded "
"properly, if needed, when generating the plain text representation of the "
"message.  MIME headers (:mailheader:`MIME-Version`, :mailheader:`Content-"
"Type`, :mailheader:`Content-Transfer-Encoding`) will be added as needed."
msgstr ""

#: ../Doc/library/email.message.rst:166
msgid ""
"Return the :class:`~email.charset.Charset` instance associated with the "
"message's payload."
msgstr ""

#: ../Doc/library/email.message.rst:171
msgid ""
"The following methods implement a mapping-like interface for accessing the "
"message's :rfc:`2822` headers.  Note that there are some semantic "
"differences between these methods and a normal mapping (i.e. dictionary) "
"interface.  For example, in a dictionary there are no duplicate keys, but "
"here there may be duplicate message headers.  Also, in dictionaries there is "
"no guaranteed order to the keys returned by :meth:`keys`, but in a :class:"
"`Message` object, headers are always returned in the order they appeared in "
"the original message, or were added to the message later.  Any header "
"deleted and then re-added are always appended to the end of the header list."
msgstr ""

#: ../Doc/library/email.message.rst:181
msgid ""
"These semantic differences are intentional and are biased toward maximal "
"convenience."
msgstr ""

#: ../Doc/library/email.message.rst:184
msgid ""
"Note that in all cases, any envelope header present in the message is not "
"included in the mapping interface."
msgstr ""

#: ../Doc/library/email.message.rst:190
msgid "Return the total number of headers, including duplicates."
msgstr ""

#: ../Doc/library/email.message.rst:195
msgid ""
"Return true if the message object has a field named *name*. Matching is done "
"case-insensitively and *name* should not include the trailing colon. Used "
"for the ``in`` operator, e.g.::"
msgstr ""

#: ../Doc/library/email.message.rst:205
msgid ""
"Return the value of the named header field.  *name* should not include the "
"colon field separator.  If the header is missing, ``None`` is returned; a :"
"exc:`KeyError` is never raised."
msgstr ""

#: ../Doc/library/email.message.rst:209
msgid ""
"Note that if the named field appears more than once in the message's "
"headers, exactly which of those field values will be returned is undefined.  "
"Use the :meth:`get_all` method to get the values of all the extant named "
"headers."
msgstr ""

#: ../Doc/library/email.message.rst:217
msgid ""
"Add a header to the message with field name *name* and value *val*.  The "
"field is appended to the end of the message's existing fields."
msgstr ""

#: ../Doc/library/email.message.rst:220
msgid ""
"Note that this does *not* overwrite or delete any existing header with the "
"same name.  If you want to ensure that the new header is the only one "
"present in the message with field name *name*, delete the field first, e.g.::"
msgstr ""

#: ../Doc/library/email.message.rst:230
msgid ""
"Delete all occurrences of the field with name *name* from the message's "
"headers.  No exception is raised if the named field isn't present in the "
"headers."
msgstr ""

#: ../Doc/library/email.message.rst:236
msgid ""
"Return true if the message contains a header field named *name*, otherwise "
"return false."
msgstr ""

#: ../Doc/library/email.message.rst:242
msgid "Return a list of all the message's header field names."
msgstr ""

#: ../Doc/library/email.message.rst:247
msgid "Return a list of all the message's field values."
msgstr ""

#: ../Doc/library/email.message.rst:252
msgid ""
"Return a list of 2-tuples containing all the message's field headers and "
"values."
msgstr ""

#: ../Doc/library/email.message.rst:258
msgid ""
"Return the value of the named header field.  This is identical to :meth:"
"`__getitem__` except that optional *failobj* is returned if the named header "
"is missing (defaults to ``None``)."
msgstr ""

#: ../Doc/library/email.message.rst:262
msgid "Here are some additional useful methods:"
msgstr ""

#: ../Doc/library/email.message.rst:267
msgid ""
"Return a list of all the values for the field named *name*. If there are no "
"such named headers in the message, *failobj* is returned (defaults to "
"``None``)."
msgstr ""

#: ../Doc/library/email.message.rst:274
msgid ""
"Extended header setting.  This method is similar to :meth:`__setitem__` "
"except that additional header parameters can be provided as keyword "
"arguments.  *_name* is the header field to add and *_value* is the *primary* "
"value for the header."
msgstr ""

# 913abf0c02584a99b3ce1c0f5aacc2d7
#: ../Doc/library/email.message.rst:279
msgid ""
"For each item in the keyword argument dictionary *_params*, the key is taken "
"as the parameter name, with underscores converted to dashes (since dashes "
"are illegal in Python identifiers).  Normally, the parameter will be added "
"as ``key=\"value\"`` unless the value is ``None``, in which case only the "
"key will be added.  If the value contains non-ASCII characters, it must be "
"specified as a three tuple in the format ``(CHARSET, LANGUAGE, VALUE)``, "
"where ``CHARSET`` is a string naming the charset to be used to encode the "
"value, ``LANGUAGE`` can usually be set to ``None`` or the empty string (see :"
"RFC:`2231` for other possibilities), and ``VALUE`` is the string value "
"containing non-ASCII code points."
msgstr ""

#: ../Doc/library/email.message.rst:294
msgid "This will add a header that looks like ::"
msgstr ""

# 1d91126250a64f2a9f4e76f73d595695
#: ../Doc/library/email.message.rst:298
msgid "An example with non-ASCII characters::"
msgstr ""

# 5ba9a5a3ae83403bbccb81556b42e985
#: ../Doc/library/email.message.rst:303
msgid "Which produces ::"
msgstr ""

#: ../Doc/library/email.message.rst:310
msgid ""
"Replace a header.  Replace the first header found in the message that "
"matches *_name*, retaining header order and field name case.  If no matching "
"header was found, a :exc:`KeyError` is raised."
msgstr ""

#: ../Doc/library/email.message.rst:319
msgid ""
"Return the message's content type.  The returned string is coerced to lower "
"case of the form :mimetype:`maintype/subtype`.  If there was no :mailheader:"
"`Content-Type` header in the message the default type as given by :meth:"
"`get_default_type` will be returned.  Since according to :rfc:`2045`, "
"messages always have a default type, :meth:`get_content_type` will always "
"return a value."
msgstr ""

#: ../Doc/library/email.message.rst:326
msgid ""
":rfc:`2045` defines a message's default type to be :mimetype:`text/plain` "
"unless it appears inside a :mimetype:`multipart/digest` container, in which "
"case it would be :mimetype:`message/rfc822`.  If the :mailheader:`Content-"
"Type` header has an invalid type specification, :rfc:`2045` mandates that "
"the default type be :mimetype:`text/plain`."
msgstr ""

#: ../Doc/library/email.message.rst:337
msgid ""
"Return the message's main content type.  This is the :mimetype:`maintype` "
"part of the string returned by :meth:`get_content_type`."
msgstr ""

#: ../Doc/library/email.message.rst:345
msgid ""
"Return the message's sub-content type.  This is the :mimetype:`subtype` part "
"of the string returned by :meth:`get_content_type`."
msgstr ""

#: ../Doc/library/email.message.rst:353
msgid ""
"Return the default content type.  Most messages have a default content type "
"of :mimetype:`text/plain`, except for messages that are subparts of :"
"mimetype:`multipart/digest` containers.  Such subparts have a default "
"content type of :mimetype:`message/rfc822`."
msgstr ""

#: ../Doc/library/email.message.rst:363
msgid ""
"Set the default content type.  *ctype* should either be :mimetype:`text/"
"plain` or :mimetype:`message/rfc822`, although this is not enforced.  The "
"default content type is not stored in the :mailheader:`Content-Type` header."
msgstr ""

#: ../Doc/library/email.message.rst:373
msgid ""
"Return the message's :mailheader:`Content-Type` parameters, as a list. The "
"elements of the returned list are 2-tuples of key/value pairs, as split on "
"the ``'='`` sign.  The left hand side of the ``'='`` is the key, while the "
"right hand side is the value.  If there is no ``'='`` sign in the parameter "
"the value is the empty string, otherwise the value is as described in :meth:"
"`get_param` and is unquoted if optional *unquote* is ``True`` (the default)."
msgstr ""

#: ../Doc/library/email.message.rst:381
msgid ""
"Optional *failobj* is the object to return if there is no :mailheader:"
"`Content-Type` header.  Optional *header* is the header to search instead "
"of :mailheader:`Content-Type`."
msgstr ""

#: ../Doc/library/email.message.rst:391
msgid ""
"Return the value of the :mailheader:`Content-Type` header's parameter "
"*param* as a string.  If the message has no :mailheader:`Content-Type` "
"header or if there is no such parameter, then *failobj* is returned "
"(defaults to ``None``)."
msgstr ""

#: ../Doc/library/email.message.rst:396
msgid ""
"Optional *header* if given, specifies the message header to use instead of :"
"mailheader:`Content-Type`."
msgstr ""

#: ../Doc/library/email.message.rst:399
msgid ""
"Parameter keys are always compared case insensitively.  The return value can "
"either be a string, or a 3-tuple if the parameter was :rfc:`2231` encoded.  "
"When it's a 3-tuple, the elements of the value are of the form ``(CHARSET, "
"LANGUAGE, VALUE)``.  Note that both ``CHARSET`` and ``LANGUAGE`` can be "
"``None``, in which case you should consider ``VALUE`` to be encoded in the "
"``us-ascii`` charset.  You can usually ignore ``LANGUAGE``."
msgstr ""

# 93d07707306046eb915b807f40a4f2eb
#: ../Doc/library/email.message.rst:407
msgid ""
"If your application doesn't care whether the parameter was encoded as in :"
"rfc:`2231`, you can collapse the parameter value by calling :func:`email."
"utils.collapse_rfc2231_value`, passing in the return value from :meth:"
"`get_param`.  This will return a suitably decoded Unicode string when the "
"value is a tuple, or the original string unquoted if it isn't.  For example::"
msgstr ""

#: ../Doc/library/email.message.rst:417
msgid ""
"In any case, the parameter value (either the returned string, or the "
"``VALUE`` item in the 3-tuple) is always unquoted, unless *unquote* is set "
"to ``False``."
msgstr ""

#: ../Doc/library/email.message.rst:427
msgid ""
"Set a parameter in the :mailheader:`Content-Type` header.  If the parameter "
"already exists in the header, its value will be replaced with *value*.  If "
"the :mailheader:`Content-Type` header as not yet been defined for this "
"message, it will be set to :mimetype:`text/plain` and the new parameter "
"value will be appended as per :rfc:`2045`."
msgstr ""

#: ../Doc/library/email.message.rst:433
msgid ""
"Optional *header* specifies an alternative header to :mailheader:`Content-"
"Type`, and all parameters will be quoted as necessary unless optional "
"*requote* is ``False`` (the default is ``True``)."
msgstr ""

#: ../Doc/library/email.message.rst:437
msgid ""
"If optional *charset* is specified, the parameter will be encoded according "
"to :rfc:`2231`. Optional *language* specifies the RFC 2231 language, "
"defaulting to the empty string.  Both *charset* and *language* should be "
"strings."
msgstr ""

#: ../Doc/library/email.message.rst:447
msgid ""
"Remove the given parameter completely from the :mailheader:`Content-Type` "
"header.  The header will be re-written in place without the parameter or its "
"value.  All values will be quoted as necessary unless *requote* is ``False`` "
"(the default is ``True``).  Optional *header* specifies an alternative to :"
"mailheader:`Content-Type`."
msgstr ""

#: ../Doc/library/email.message.rst:458
msgid ""
"Set the main type and subtype for the :mailheader:`Content-Type` header. "
"*type* must be a string in the form :mimetype:`maintype/subtype`, otherwise "
"a :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/email.message.rst:462
msgid ""
"This method replaces the :mailheader:`Content-Type` header, keeping all the "
"parameters in place.  If *requote* is ``False``, this leaves the existing "
"header's quoting as is, otherwise the parameters will be quoted (the "
"default)."
msgstr ""

#: ../Doc/library/email.message.rst:467
msgid ""
"An alternative header can be specified in the *header* argument. When the :"
"mailheader:`Content-Type` header is set a :mailheader:`MIME-Version` header "
"is also added."
msgstr ""

#: ../Doc/library/email.message.rst:476
msgid ""
"Return the value of the ``filename`` parameter of the :mailheader:`Content-"
"Disposition` header of the message.  If the header does not have a "
"``filename`` parameter, this method falls back to looking for the ``name`` "
"parameter on the :mailheader:`Content-Type` header.  If neither is found, or "
"the header is missing, then *failobj* is returned. The returned string will "
"always be unquoted as per :func:`email.utils.unquote`."
msgstr ""

#: ../Doc/library/email.message.rst:487
msgid ""
"Return the value of the ``boundary`` parameter of the :mailheader:`Content-"
"Type` header of the message, or *failobj* if either the header is missing, "
"or has no ``boundary`` parameter.  The returned string will always be "
"unquoted as per :func:`email.utils.unquote`."
msgstr ""

#: ../Doc/library/email.message.rst:495
msgid ""
"Set the ``boundary`` parameter of the :mailheader:`Content-Type` header to "
"*boundary*.  :meth:`set_boundary` will always quote *boundary* if "
"necessary.  A :exc:`HeaderParseError` is raised if the message object has "
"no :mailheader:`Content-Type` header."
msgstr ""

#: ../Doc/library/email.message.rst:500
msgid ""
"Note that using this method is subtly different than deleting the old :"
"mailheader:`Content-Type` header and adding a new one with the new boundary "
"via :meth:`add_header`, because :meth:`set_boundary` preserves the order of "
"the :mailheader:`Content-Type` header in the list of headers. However, it "
"does *not* preserve any continuation lines which may have been present in "
"the original :mailheader:`Content-Type` header."
msgstr ""

#: ../Doc/library/email.message.rst:510
msgid ""
"Return the ``charset`` parameter of the :mailheader:`Content-Type` header, "
"coerced to lower case.  If there is no :mailheader:`Content-Type` header, or "
"if that header has no ``charset`` parameter, *failobj* is returned."
msgstr ""

#: ../Doc/library/email.message.rst:514
msgid ""
"Note that this method differs from :meth:`get_charset` which returns the :"
"class:`~email.charset.Charset` instance for the default encoding of the "
"message body."
msgstr ""

#: ../Doc/library/email.message.rst:522
msgid ""
"Return a list containing the character set names in the message.  If the "
"message is a :mimetype:`multipart`, then the list will contain one element "
"for each subpart in the payload, otherwise, it will be a list of length 1."
msgstr ""

#: ../Doc/library/email.message.rst:526
msgid ""
"Each item in the list will be a string which is the value of the ``charset`` "
"parameter in the :mailheader:`Content-Type` header for the represented "
"subpart.  However, if the subpart has no :mailheader:`Content-Type` header, "
"no ``charset`` parameter, or is not of the :mimetype:`text` main MIME type, "
"then that item in the returned list will be *failobj*."
msgstr ""

#: ../Doc/library/email.message.rst:536
msgid ""
"The :meth:`walk` method is an all-purpose generator which can be used to "
"iterate over all the parts and subparts of a message object tree, in depth-"
"first traversal order.  You will typically use :meth:`walk` as the iterator "
"in a ``for`` loop; each iteration returns the next subpart."
msgstr ""

#: ../Doc/library/email.message.rst:541
msgid ""
"Here's an example that prints the MIME type of every part of a multipart "
"message structure::"
msgstr ""

#: ../Doc/library/email.message.rst:557
msgid ""
":class:`Message` objects can also optionally contain two instance "
"attributes, which can be used when generating the plain text of a MIME "
"message."
msgstr ""

#: ../Doc/library/email.message.rst:563
msgid ""
"The format of a MIME document allows for some text between the blank line "
"following the headers, and the first multipart boundary string. Normally, "
"this text is never visible in a MIME-aware mail reader because it falls "
"outside the standard MIME armor.  However, when viewing the raw text of the "
"message, or when viewing the message in a non-MIME aware reader, this text "
"can become visible."
msgstr ""

#: ../Doc/library/email.message.rst:570
msgid ""
"The *preamble* attribute contains this leading extra-armor text for MIME "
"documents.  When the :class:`~email.parser.Parser` discovers some text after "
"the headers but before the first boundary string, it assigns this text to "
"the message's *preamble* attribute.  When the :class:`~email.generator."
"Generator` is writing out the plain text representation of a MIME message, "
"and it finds the message has a *preamble* attribute, it will write this text "
"in the area between the headers and the first boundary.  See :mod:`email."
"parser` and :mod:`email.generator` for details."
msgstr ""

#: ../Doc/library/email.message.rst:580
msgid ""
"Note that if the message object has no preamble, the *preamble* attribute "
"will be ``None``."
msgstr ""

#: ../Doc/library/email.message.rst:586
msgid ""
"The *epilogue* attribute acts the same way as the *preamble* attribute, "
"except that it contains text that appears between the last boundary and the "
"end of the message."
msgstr ""

#: ../Doc/library/email.message.rst:597
msgid ""
"The *defects* attribute contains a list of all the problems found when "
"parsing this message.  See :mod:`email.errors` for a detailed description of "
"the possible parsing defects."
msgstr ""

# 88d2334731924651a7d50aa05363b955
#: ../Doc/library/email.mime.rst:2
msgid ":mod:`email.mime`: Creating email and MIME objects from scratch"
msgstr ""

#: ../Doc/library/email.mime.rst:8
msgid ""
"Ordinarily, you get a message object structure by passing a file or some "
"text to a parser, which parses the text and returns the root message "
"object.  However you can also build a complete message structure from "
"scratch, or even individual :class:`~email.message.Message` objects by "
"hand.  In fact, you can also take an existing structure and add new :class:"
"`~email.message.Message` objects, move them around, etc.  This makes a very "
"convenient interface for slicing-and-dicing MIME messages."
msgstr ""

#: ../Doc/library/email.mime.rst:16
msgid ""
"You can create a new object structure by creating :class:`~email.message."
"Message` instances, adding attachments and all the appropriate headers "
"manually.  For MIME messages though, the :mod:`email` package provides some "
"convenient subclasses to make things easier."
msgstr ""

#: ../Doc/library/email.mime.rst:21
msgid "Here are the classes:"
msgstr ""

#: ../Doc/library/email.mime.rst:27
msgid "Module: :mod:`email.mime.base`"
msgstr ""

#: ../Doc/library/email.mime.rst:29
msgid ""
"This is the base class for all the MIME-specific subclasses of :class:"
"`~email.message.Message`.  Ordinarily you won't create instances "
"specifically of :class:`MIMEBase`, although you could.  :class:`MIMEBase` is "
"provided primarily as a convenient base class for more specific MIME-aware "
"subclasses."
msgstr ""

#: ../Doc/library/email.mime.rst:35
msgid ""
"*_maintype* is the :mailheader:`Content-Type` major type (e.g. :mimetype:"
"`text` or :mimetype:`image`), and *_subtype* is the :mailheader:`Content-"
"Type` minor type  (e.g. :mimetype:`plain` or :mimetype:`gif`).  *_params* is "
"a parameter key/value dictionary and is passed directly to :meth:`Message."
"add_header`."
msgstr ""

#: ../Doc/library/email.mime.rst:40
msgid ""
"The :class:`MIMEBase` class always adds a :mailheader:`Content-Type` header "
"(based on *_maintype*, *_subtype*, and *_params*), and a :mailheader:`MIME-"
"Version` header (always set to ``1.0``)."
msgstr ""

#: ../Doc/library/email.mime.rst:49
msgid "Module: :mod:`email.mime.nonmultipart`"
msgstr ""

#: ../Doc/library/email.mime.rst:51
msgid ""
"A subclass of :class:`~email.mime.base.MIMEBase`, this is an intermediate "
"base class for MIME messages that are not :mimetype:`multipart`.  The "
"primary purpose of this class is to prevent the use of the :meth:`attach` "
"method, which only makes sense for :mimetype:`multipart` messages.  If :meth:"
"`attach` is called, a :exc:`~email.errors.MultipartConversionError` "
"exception is raised."
msgstr ""

#: ../Doc/library/email.mime.rst:64
msgid "Module: :mod:`email.mime.multipart`"
msgstr ""

#: ../Doc/library/email.mime.rst:66
msgid ""
"A subclass of :class:`~email.mime.base.MIMEBase`, this is an intermediate "
"base class for MIME messages that are :mimetype:`multipart`.  Optional "
"*_subtype* defaults to :mimetype:`mixed`, but can be used to specify the "
"subtype of the message.  A :mailheader:`Content-Type` header of :mimetype:"
"`multipart/_subtype` will be added to the message object.  A :mailheader:"
"`MIME-Version` header will also be added."
msgstr ""

#: ../Doc/library/email.mime.rst:73
msgid ""
"Optional *boundary* is the multipart boundary string.  When ``None`` (the "
"default), the boundary is calculated when needed (for example, when the "
"message is serialized)."
msgstr ""

#: ../Doc/library/email.mime.rst:77
msgid ""
"*_subparts* is a sequence of initial subparts for the payload.  It must be "
"possible to convert this sequence to a list.  You can always attach new "
"subparts to the message by using the :meth:`Message.attach` method."
msgstr ""

#: ../Doc/library/email.mime.rst:81
msgid ""
"Additional parameters for the :mailheader:`Content-Type` header are taken "
"from the keyword arguments, or passed into the *_params* argument, which is "
"a keyword dictionary."
msgstr ""

#: ../Doc/library/email.mime.rst:92
msgid "Module: :mod:`email.mime.application`"
msgstr ""

#: ../Doc/library/email.mime.rst:94
msgid ""
"A subclass of :class:`~email.mime.nonmultipart.MIMENonMultipart`, the :class:"
"`MIMEApplication` class is used to represent MIME message objects of major "
"type :mimetype:`application`.  *_data* is a string containing the raw byte "
"data.  Optional *_subtype* specifies the MIME subtype and defaults to :"
"mimetype:`octet-stream`."
msgstr ""

#: ../Doc/library/email.mime.rst:100
msgid ""
"Optional *_encoder* is a callable (i.e. function) which will perform the "
"actual encoding of the data for transport.  This callable takes one "
"argument, which is the :class:`MIMEApplication` instance. It should use :"
"meth:`get_payload` and :meth:`set_payload` to change the payload to encoded "
"form.  It should also add any :mailheader:`Content-Transfer-Encoding` or "
"other headers to the message object as necessary.  The default encoding is "
"base64.  See the :mod:`email.encoders` module for a list of the built-in "
"encoders."
msgstr ""

#: ../Doc/library/email.mime.rst:108 ../Doc/library/email.mime.rst:136
msgid "*_params* are passed straight through to the base class constructor."
msgstr ""

#: ../Doc/library/email.mime.rst:117
msgid "Module: :mod:`email.mime.audio`"
msgstr ""

#: ../Doc/library/email.mime.rst:119
msgid ""
"A subclass of :class:`~email.mime.nonmultipart.MIMENonMultipart`, the :class:"
"`MIMEAudio` class is used to create MIME message objects of major type :"
"mimetype:`audio`. *_audiodata* is a string containing the raw audio data.  "
"If this data can be decoded by the standard Python module :mod:`sndhdr`, "
"then the subtype will be automatically included in the :mailheader:`Content-"
"Type` header. Otherwise you can explicitly specify the audio subtype via the "
"*_subtype* parameter.  If the minor type could not be guessed and *_subtype* "
"was not given, then :exc:`TypeError` is raised."
msgstr ""

#: ../Doc/library/email.mime.rst:128
msgid ""
"Optional *_encoder* is a callable (i.e. function) which will perform the "
"actual encoding of the audio data for transport.  This callable takes one "
"argument, which is the :class:`MIMEAudio` instance. It should use :meth:"
"`get_payload` and :meth:`set_payload` to change the payload to encoded "
"form.  It should also add any :mailheader:`Content-Transfer-Encoding` or "
"other headers to the message object as necessary.  The default encoding is "
"base64.  See the :mod:`email.encoders` module for a list of the built-in "
"encoders."
msgstr ""

#: ../Doc/library/email.mime.rst:143
msgid "Module: :mod:`email.mime.image`"
msgstr ""

#: ../Doc/library/email.mime.rst:145
msgid ""
"A subclass of :class:`~email.mime.nonmultipart.MIMENonMultipart`, the :class:"
"`MIMEImage` class is used to create MIME message objects of major type :"
"mimetype:`image`. *_imagedata* is a string containing the raw image data.  "
"If this data can be decoded by the standard Python module :mod:`imghdr`, "
"then the subtype will be automatically included in the :mailheader:`Content-"
"Type` header. Otherwise you can explicitly specify the image subtype via the "
"*_subtype* parameter.  If the minor type could not be guessed and *_subtype* "
"was not given, then :exc:`TypeError` is raised."
msgstr ""

#: ../Doc/library/email.mime.rst:154
msgid ""
"Optional *_encoder* is a callable (i.e. function) which will perform the "
"actual encoding of the image data for transport.  This callable takes one "
"argument, which is the :class:`MIMEImage` instance. It should use :meth:"
"`get_payload` and :meth:`set_payload` to change the payload to encoded "
"form.  It should also add any :mailheader:`Content-Transfer-Encoding` or "
"other headers to the message object as necessary.  The default encoding is "
"base64.  See the :mod:`email.encoders` module for a list of the built-in "
"encoders."
msgstr ""

#: ../Doc/library/email.mime.rst:162
msgid ""
"*_params* are passed straight through to the :class:`~email.mime.base."
"MIMEBase` constructor."
msgstr ""

#: ../Doc/library/email.mime.rst:170
msgid "Module: :mod:`email.mime.message`"
msgstr ""

#: ../Doc/library/email.mime.rst:172
msgid ""
"A subclass of :class:`~email.mime.nonmultipart.MIMENonMultipart`, the :class:"
"`MIMEMessage` class is used to create MIME objects of main type :mimetype:"
"`message`. *_msg* is used as the payload, and must be an instance of class :"
"class:`~email.message.Message` (or a subclass thereof), otherwise a :exc:"
"`TypeError` is raised."
msgstr ""

#: ../Doc/library/email.mime.rst:178
msgid ""
"Optional *_subtype* sets the subtype of the message; it defaults to :"
"mimetype:`rfc822`."
msgstr ""

#: ../Doc/library/email.mime.rst:186
msgid "Module: :mod:`email.mime.text`"
msgstr ""

# 5da01e68d11940b29e5b63d83fcf8555
#: ../Doc/library/email.mime.rst:188
msgid ""
"A subclass of :class:`~email.mime.nonmultipart.MIMENonMultipart`, the :class:"
"`MIMEText` class is used to create MIME objects of major type :mimetype:"
"`text`. *_text* is the string for the payload.  *_subtype* is the minor type "
"and defaults to :mimetype:`plain`.  *_charset* is the character set of the "
"text and is passed as a parameter to the :class:`~email.mime.nonmultipart."
"MIMENonMultipart` constructor; it defaults to ``us-ascii``.  If *_text* is "
"unicode, it is encoded using the *output_charset* of *_charset*, otherwise "
"it is used as-is."
msgstr ""

# e339358d93c94cc9bef24a9688bebf6a
#: ../Doc/library/email.parser.rst:2
msgid ":mod:`email.parser`: Parsing email messages"
msgstr ""

#: ../Doc/library/email.parser.rst:8
msgid ""
"Message object structures can be created in one of two ways: they can be "
"created from whole cloth by instantiating :class:`~email.message.Message` "
"objects and stringing them together via :meth:`attach` and :meth:"
"`set_payload` calls, or they can be created by parsing a flat text "
"representation of the email message."
msgstr ""

#: ../Doc/library/email.parser.rst:13
msgid ""
"The :mod:`email` package provides a standard parser that understands most "
"email document structures, including MIME documents.  You can pass the "
"parser a string or a file object, and the parser will return to you the "
"root :class:`~email.message.Message` instance of the object structure.  For "
"simple, non-MIME messages the payload of this root object will likely be a "
"string containing the text of the message.  For MIME messages, the root "
"object will return ``True`` from its :meth:`is_multipart` method, and the "
"subparts can be accessed via the :meth:`get_payload` and :meth:`walk` "
"methods."
msgstr ""

#: ../Doc/library/email.parser.rst:22
msgid ""
"There are actually two parser interfaces available for use, the classic :"
"class:`Parser` API and the incremental :class:`FeedParser` API.  The "
"classic :class:`Parser` API is fine if you have the entire text of the "
"message in memory as a string, or if the entire message lives in a file on "
"the file system. :class:`FeedParser` is more appropriate for when you're "
"reading the message from a stream which might block waiting for more input "
"(e.g. reading an email message from a socket).  The :class:`FeedParser` can "
"consume and parse the message incrementally, and only returns the root "
"object when you close the parser [#]_."
msgstr ""

#: ../Doc/library/email.parser.rst:31
msgid ""
"Note that the parser can be extended in limited ways, and of course you can "
"implement your own parser completely from scratch.  There is no magical "
"connection between the :mod:`email` package's bundled parser and the :class:"
"`~email.message.Message` class, so your custom parser can create message "
"object trees any way it finds necessary."
msgstr ""

#: ../Doc/library/email.parser.rst:39
msgid "FeedParser API"
msgstr ""

#: ../Doc/library/email.parser.rst:43
msgid ""
"The :class:`FeedParser`, imported from the :mod:`email.feedparser` module, "
"provides an API that is conducive to incremental parsing of email messages, "
"such as would be necessary when reading the text of an email message from a "
"source that can block (e.g. a socket).  The :class:`FeedParser` can of "
"course be used to parse an email message fully contained in a string or a "
"file, but the classic :class:`Parser` API may be more convenient for such "
"use cases.  The semantics and results of the two parser APIs are identical."
msgstr ""

#: ../Doc/library/email.parser.rst:51
msgid ""
"The :class:`FeedParser`'s API is simple; you create an instance, feed it a "
"bunch of text until there's no more to feed it, then close the parser to "
"retrieve the root message object.  The :class:`FeedParser` is extremely "
"accurate when parsing standards-compliant messages, and it does a very good "
"job of parsing non-compliant messages, providing information about how a "
"message was deemed broken.  It will populate a message object's *defects* "
"attribute with a list of any problems it found in a message.  See the :mod:"
"`email.errors` module for the list of defects that it can find."
msgstr ""

#: ../Doc/library/email.parser.rst:60
msgid "Here is the API for the :class:`FeedParser`:"
msgstr ""

#: ../Doc/library/email.parser.rst:65
msgid ""
"Create a :class:`FeedParser` instance.  Optional *_factory* is a no-argument "
"callable that will be called whenever a new message object is needed.  It "
"defaults to the :class:`email.message.Message` class."
msgstr ""

#: ../Doc/library/email.parser.rst:72
msgid ""
"Feed the :class:`FeedParser` some more data.  *data* should be a string "
"containing one or more lines.  The lines can be partial and the :class:"
"`FeedParser` will stitch such partial lines together properly.  The lines in "
"the string can have any of the common three line endings, carriage return, "
"newline, or carriage return and newline (they can even be mixed)."
msgstr ""

#: ../Doc/library/email.parser.rst:82
msgid ""
"Closing a :class:`FeedParser` completes the parsing of all previously fed "
"data, and returns the root message object.  It is undefined what happens if "
"you feed more data to a closed :class:`FeedParser`."
msgstr ""

#: ../Doc/library/email.parser.rst:88
msgid "Parser class API"
msgstr ""

#: ../Doc/library/email.parser.rst:90
msgid ""
"The :class:`Parser` class, imported from the :mod:`email.parser` module, "
"provides an API that can be used to parse a message when the complete "
"contents of the message are available in a string or file.  The :mod:`email."
"parser` module also provides a second class, called :class:`HeaderParser` "
"which can be used if you're only interested in the headers of the message. :"
"class:`HeaderParser` can be much faster in these situations, since it does "
"not attempt to parse the message body, instead setting the payload to the "
"raw body as a string. :class:`HeaderParser` has the same API as the :class:"
"`Parser` class."
msgstr ""

#: ../Doc/library/email.parser.rst:103
msgid ""
"The constructor for the :class:`Parser` class takes an optional argument "
"*_class*.  This must be a callable factory (such as a function or a class), "
"and it is used whenever a sub-message object needs to be created.  It "
"defaults to :class:`~email.message.Message` (see :mod:`email.message`).  The "
"factory will be called without arguments."
msgstr ""

#: ../Doc/library/email.parser.rst:109
msgid "The optional *strict* flag is ignored."
msgstr ""

#: ../Doc/library/email.parser.rst:123
msgid "The other public :class:`Parser` methods are:"
msgstr ""

#: ../Doc/library/email.parser.rst:128
msgid ""
"Read all the data from the file-like object *fp*, parse the resulting text, "
"and return the root message object.  *fp* must support both the :meth:"
"`readline` and the :meth:`read` methods on file-like objects."
msgstr ""

#: ../Doc/library/email.parser.rst:132
msgid ""
"The text contained in *fp* must be formatted as a block of :rfc:`2822` style "
"headers and header continuation lines, optionally preceded by a envelope "
"header.  The header block is terminated either by the end of the data or by "
"a blank line.  Following the header block is the body of the message (which "
"may contain MIME-encoded subparts)."
msgstr ""

#: ../Doc/library/email.parser.rst:138
msgid ""
"Optional *headersonly* is a flag specifying whether to stop parsing after "
"reading the headers or not.  The default is ``False``, meaning it parses the "
"entire contents of the file."
msgstr ""

#: ../Doc/library/email.parser.rst:148
msgid ""
"Similar to the :meth:`parse` method, except it takes a string object instead "
"of a file-like object.  Calling this method on a string is exactly "
"equivalent to wrapping *text* in a :class:`StringIO` instance first and "
"calling :meth:`parse`."
msgstr ""

#: ../Doc/library/email.parser.rst:153
msgid "Optional *headersonly* is as with the :meth:`parse` method."
msgstr ""

#: ../Doc/library/email.parser.rst:158
msgid ""
"Since creating a message object structure from a string or a file object is "
"such a common task, two functions are provided as a convenience.  They are "
"available in the top-level :mod:`email` package namespace."
msgstr ""

#: ../Doc/library/email.parser.rst:166
msgid ""
"Return a message object structure from a string.  This is exactly equivalent "
"to ``Parser().parsestr(s)``.  Optional *_class* and *strict* are interpreted "
"as with the :class:`Parser` class constructor."
msgstr ""

#: ../Doc/library/email.parser.rst:176
msgid ""
"Return a message object structure tree from an open file object.  This is "
"exactly equivalent to ``Parser().parse(fp)``.  Optional *_class* and "
"*strict* are interpreted as with the :class:`Parser` class constructor."
msgstr ""

#: ../Doc/library/email.parser.rst:183
msgid ""
"Here's an example of how you might use this at an interactive Python prompt::"
msgstr ""

#: ../Doc/library/email.parser.rst:190
msgid "Additional notes"
msgstr ""

#: ../Doc/library/email.parser.rst:192
msgid "Here are some notes on the parsing semantics:"
msgstr ""

#: ../Doc/library/email.parser.rst:194
msgid ""
"Most non-\\ :mimetype:`multipart` type messages are parsed as a single "
"message object with a string payload.  These objects will return ``False`` "
"for :meth:`is_multipart`.  Their :meth:`get_payload` method will return a "
"string object."
msgstr ""

#: ../Doc/library/email.parser.rst:199
msgid ""
"All :mimetype:`multipart` type messages will be parsed as a container "
"message object with a list of sub-message objects for their payload.  The "
"outer container message will return ``True`` for :meth:`is_multipart` and "
"their :meth:`get_payload` method will return the list of :class:`~email."
"message.Message` subparts."
msgstr ""

#: ../Doc/library/email.parser.rst:205
msgid ""
"Most messages with a content type of :mimetype:`message/\\*` (e.g. :mimetype:"
"`message/delivery-status` and :mimetype:`message/rfc822`) will also be "
"parsed as container object containing a list payload of length 1.  Their :"
"meth:`is_multipart` method will return ``True``.  The single element in the "
"list payload will be a sub-message object."
msgstr ""

#: ../Doc/library/email.parser.rst:211
msgid ""
"Some non-standards compliant messages may not be internally consistent about "
"their :mimetype:`multipart`\\ -edness.  Such messages may have a :mailheader:"
"`Content-Type` header of type :mimetype:`multipart`, but their :meth:"
"`is_multipart` method may return ``False``.  If such messages were parsed "
"with the :class:`FeedParser`, they will have an instance of the :class:"
"`MultipartInvariantViolationDefect` class in their *defects* attribute "
"list.  See :mod:`email.errors` for details."
msgstr ""

#: ../Doc/library/email.parser.rst:221
msgid ""
"As of email package version 3.0, introduced in Python 2.4, the classic :"
"class:`Parser` was re-implemented in terms of the :class:`FeedParser`, so "
"the semantics and results are identical between the two parsers."
msgstr ""

# c2f9223a64e643de8e45fc07563b9170
#: ../Doc/library/email.util.rst:2
msgid ":mod:`email.utils`: Miscellaneous utilities"
msgstr ""

#: ../Doc/library/email.util.rst:8
msgid ""
"There are several useful utilities provided in the :mod:`email.utils` module:"
msgstr ""

#: ../Doc/library/email.util.rst:13
msgid ""
"Return a new string with backslashes in *str* replaced by two backslashes, "
"and double quotes replaced by backslash-double quote."
msgstr ""

#: ../Doc/library/email.util.rst:19 ../Doc/library/rfc822.rst:74
msgid ""
"Return a new string which is an *unquoted* version of *str*. If *str* ends "
"and begins with double quotes, they are stripped off.  Likewise if *str* "
"ends and begins with angle brackets, they are stripped off."
msgstr ""

#: ../Doc/library/email.util.rst:26
msgid ""
"Parse address -- which should be the value of some address-containing field "
"such as :mailheader:`To` or :mailheader:`Cc` -- into its constituent "
"*realname* and *email address* parts.  Returns a tuple of that information, "
"unless the parse fails, in which case a 2-tuple of ``('', '')`` is returned."
msgstr ""

#: ../Doc/library/email.util.rst:34 ../Doc/library/rfc822.rst:89
msgid ""
"The inverse of :meth:`parseaddr`, this takes a 2-tuple of the form ``"
"(realname, email_address)`` and returns the string value suitable for a :"
"mailheader:`To` or :mailheader:`Cc` header.  If the first element of *pair* "
"is false, then the second element is returned unmodified."
msgstr ""

#: ../Doc/library/email.util.rst:42
msgid ""
"This method returns a list of 2-tuples of the form returned by ``parseaddr()"
"``. *fieldvalues* is a sequence of header field values as might be returned "
"by :meth:`Message.get_all`.  Here's a simple example that gets all the "
"recipients of a message::"
msgstr ""

#: ../Doc/library/email.util.rst:58
msgid ""
"Attempts to parse a date according to the rules in :rfc:`2822`. however, "
"some mailers don't follow that format as specified, so :func:`parsedate` "
"tries to guess correctly in such cases.  *date* is a string containing an :"
"rfc:`2822` date, such as  ``\"Mon, 20 Nov 1995 19:12:08 -0500\"``.  If it "
"succeeds in parsing the date, :func:`parsedate` returns a 9-tuple that can "
"be passed directly to :func:`time.mktime`; otherwise ``None`` will be "
"returned.  Note that indexes 6, 7, and 8 of the result tuple are not usable."
msgstr ""

#: ../Doc/library/email.util.rst:69
msgid ""
"Performs the same function as :func:`parsedate`, but returns either ``None`` "
"or a 10-tuple; the first 9 elements make up a tuple that can be passed "
"directly to :func:`time.mktime`, and the tenth is the offset of the date's "
"timezone from UTC (which is the official term for Greenwich Mean Time) [#]"
"_.  If the input string has no timezone, the last element of the tuple "
"returned is ``None``.  Note that indexes 6, 7, and 8 of the result tuple are "
"not usable."
msgstr ""

#: ../Doc/library/email.util.rst:79
msgid ""
"Turn a 10-tuple as returned by :func:`parsedate_tz` into a UTC timestamp.  "
"It the timezone item in the tuple is ``None``, assume local time.  Minor "
"deficiency: :func:`mktime_tz` interprets the first 8 elements of *tuple* as "
"a local time and then compensates for the timezone difference.  This may "
"yield a slight error around changes in daylight savings time, though not "
"worth worrying about for common use."
msgstr ""

#: ../Doc/library/email.util.rst:89
msgid "Returns a date string as per :rfc:`2822`, e.g.::"
msgstr ""

#: ../Doc/library/email.util.rst:93
msgid ""
"Optional *timeval* if given is a floating point time value as accepted by :"
"func:`time.gmtime` and :func:`time.localtime`, otherwise the current time is "
"used."
msgstr ""

#: ../Doc/library/email.util.rst:97
msgid ""
"Optional *localtime* is a flag that when ``True``, interprets *timeval*, and "
"returns a date relative to the local timezone instead of UTC, properly "
"taking daylight savings time into account. The default is ``False`` meaning "
"UTC is used."
msgstr ""

#: ../Doc/library/email.util.rst:102
msgid ""
"Optional *usegmt* is a flag that when ``True``, outputs a  date string with "
"the timezone as an ascii string ``GMT``, rather than a numeric ``-0000``. "
"This is needed for some protocols (such as HTTP). This only applies when "
"*localtime* is ``False``.  The default is ``False``."
msgstr ""

#: ../Doc/library/email.util.rst:112
msgid ""
"Returns a string suitable for an :rfc:`2822`\\ -compliant :mailheader:"
"`Message-ID` header.  Optional *idstring* if given, is a string used to "
"strengthen the uniqueness of the message id."
msgstr ""

#: ../Doc/library/email.util.rst:119
msgid "Decode the string *s* according to :rfc:`2231`."
msgstr ""

#: ../Doc/library/email.util.rst:124
msgid ""
"Encode the string *s* according to :rfc:`2231`.  Optional *charset* and "
"*language*, if given is the character set name and language name to use.  If "
"neither is given, *s* is returned as-is.  If *charset* is given but "
"*language* is not, the string is encoded using the empty string for "
"*language*."
msgstr ""

# a06d87b2a1474de4a30e7e606f0f4b9f
#: ../Doc/library/email.util.rst:132
msgid ""
"When a header parameter is encoded in :rfc:`2231` format, :meth:`Message."
"get_param` may return a 3-tuple containing the character set, language, and "
"value.  :func:`collapse_rfc2231_value` turns this into a unicode string.  "
"Optional *errors* is passed to the *errors* argument of the built-in :func:"
"`unicode` function; it defaults to ``replace``.  Optional *fallback_charset* "
"specifies the character set to use if the one in the :rfc:`2231` header is "
"not known by Python; it defaults to ``us-ascii``."
msgstr ""

#: ../Doc/library/email.util.rst:140
msgid ""
"For convenience, if the *value* passed to :func:`collapse_rfc2231_value` is "
"not a tuple, it should be a string and it is returned unquoted."
msgstr ""

#: ../Doc/library/email.util.rst:146
msgid ""
"Decode parameters list according to :rfc:`2231`.  *params* is a sequence of "
"2-tuples containing elements of the form ``(content-type, string-value)``."
msgstr ""

#: ../Doc/library/email.util.rst:163
msgid ""
"Note that the sign of the timezone offset is the opposite of the sign of the "
"``time.timezone`` variable for the same timezone; the latter variable "
"follows the POSIX standard while this module follows :rfc:`2822`."
msgstr ""

#: ../Doc/library/errno.rst:3
msgid ":mod:`errno` --- Standard errno system symbols"
msgstr ""

#: ../Doc/library/errno.rst:9
msgid ""
"This module makes available standard ``errno`` system symbols. The value of "
"each symbol is the corresponding integer value. The names and descriptions "
"are borrowed from :file:`linux/include/errno.h`, which should be pretty all-"
"inclusive."
msgstr ""

#: ../Doc/library/errno.rst:17
msgid ""
"Dictionary providing a mapping from the errno value to the string name in "
"the underlying system.  For instance, ``errno.errorcode[errno.EPERM]`` maps "
"to ``'EPERM'``."
msgstr ""

#: ../Doc/library/errno.rst:21
msgid ""
"To translate a numeric error code to an error message, use :func:`os."
"strerror`."
msgstr ""

#: ../Doc/library/errno.rst:23
msgid ""
"Of the following list, symbols that are not used on the current platform are "
"not defined by the module.  The specific list of defined symbols is "
"available as ``errno.errorcode.keys()``.  Symbols available can include:"
msgstr ""

#: ../Doc/library/errno.rst:30
msgid "Operation not permitted"
msgstr ""

#: ../Doc/library/errno.rst:35
msgid "No such file or directory"
msgstr ""

#: ../Doc/library/errno.rst:40
msgid "No such process"
msgstr ""

#: ../Doc/library/errno.rst:45
msgid "Interrupted system call"
msgstr ""

#: ../Doc/library/errno.rst:50
msgid "I/O error"
msgstr ""

#: ../Doc/library/errno.rst:55
msgid "No such device or address"
msgstr ""

#: ../Doc/library/errno.rst:60
msgid "Arg list too long"
msgstr ""

#: ../Doc/library/errno.rst:65
msgid "Exec format error"
msgstr ""

#: ../Doc/library/errno.rst:70
msgid "Bad file number"
msgstr ""

#: ../Doc/library/errno.rst:75
msgid "No child processes"
msgstr ""

#: ../Doc/library/errno.rst:80
msgid "Try again"
msgstr ""

#: ../Doc/library/errno.rst:85
msgid "Out of memory"
msgstr ""

#: ../Doc/library/errno.rst:90
msgid "Permission denied"
msgstr ""

#: ../Doc/library/errno.rst:95
msgid "Bad address"
msgstr ""

#: ../Doc/library/errno.rst:100
msgid "Block device required"
msgstr ""

#: ../Doc/library/errno.rst:105
msgid "Device or resource busy"
msgstr ""

#: ../Doc/library/errno.rst:110
msgid "File exists"
msgstr ""

#: ../Doc/library/errno.rst:115
msgid "Cross-device link"
msgstr ""

#: ../Doc/library/errno.rst:120
msgid "No such device"
msgstr ""

#: ../Doc/library/errno.rst:125
msgid "Not a directory"
msgstr ""

#: ../Doc/library/errno.rst:130
msgid "Is a directory"
msgstr ""

#: ../Doc/library/errno.rst:135
msgid "Invalid argument"
msgstr ""

#: ../Doc/library/errno.rst:140
msgid "File table overflow"
msgstr ""

#: ../Doc/library/errno.rst:145
msgid "Too many open files"
msgstr ""

#: ../Doc/library/errno.rst:150
msgid "Not a typewriter"
msgstr ""

#: ../Doc/library/errno.rst:155
msgid "Text file busy"
msgstr ""

#: ../Doc/library/errno.rst:160
msgid "File too large"
msgstr ""

#: ../Doc/library/errno.rst:165
msgid "No space left on device"
msgstr ""

#: ../Doc/library/errno.rst:170
msgid "Illegal seek"
msgstr ""

#: ../Doc/library/errno.rst:175
msgid "Read-only file system"
msgstr ""

#: ../Doc/library/errno.rst:180
msgid "Too many links"
msgstr ""

#: ../Doc/library/errno.rst:185
msgid "Broken pipe"
msgstr ""

#: ../Doc/library/errno.rst:190
msgid "Math argument out of domain of func"
msgstr ""

#: ../Doc/library/errno.rst:195
msgid "Math result not representable"
msgstr ""

#: ../Doc/library/errno.rst:200
msgid "Resource deadlock would occur"
msgstr ""

#: ../Doc/library/errno.rst:205
msgid "File name too long"
msgstr ""

#: ../Doc/library/errno.rst:210
msgid "No record locks available"
msgstr ""

#: ../Doc/library/errno.rst:215
msgid "Function not implemented"
msgstr ""

#: ../Doc/library/errno.rst:220
msgid "Directory not empty"
msgstr ""

#: ../Doc/library/errno.rst:225
msgid "Too many symbolic links encountered"
msgstr ""

#: ../Doc/library/errno.rst:230
msgid "Operation would block"
msgstr ""

#: ../Doc/library/errno.rst:235
msgid "No message of desired type"
msgstr ""

#: ../Doc/library/errno.rst:240
msgid "Identifier removed"
msgstr ""

#: ../Doc/library/errno.rst:245
msgid "Channel number out of range"
msgstr ""

#: ../Doc/library/errno.rst:250
msgid "Level 2 not synchronized"
msgstr ""

#: ../Doc/library/errno.rst:255
msgid "Level 3 halted"
msgstr ""

#: ../Doc/library/errno.rst:260
msgid "Level 3 reset"
msgstr ""

#: ../Doc/library/errno.rst:265
msgid "Link number out of range"
msgstr ""

#: ../Doc/library/errno.rst:270
msgid "Protocol driver not attached"
msgstr ""

#: ../Doc/library/errno.rst:275
msgid "No CSI structure available"
msgstr ""

#: ../Doc/library/errno.rst:280
msgid "Level 2 halted"
msgstr ""

#: ../Doc/library/errno.rst:285
msgid "Invalid exchange"
msgstr ""

#: ../Doc/library/errno.rst:290
msgid "Invalid request descriptor"
msgstr ""

#: ../Doc/library/errno.rst:295
msgid "Exchange full"
msgstr ""

#: ../Doc/library/errno.rst:300
msgid "No anode"
msgstr ""

#: ../Doc/library/errno.rst:305
msgid "Invalid request code"
msgstr ""

#: ../Doc/library/errno.rst:310
msgid "Invalid slot"
msgstr ""

#: ../Doc/library/errno.rst:315
msgid "File locking deadlock error"
msgstr ""

#: ../Doc/library/errno.rst:320
msgid "Bad font file format"
msgstr ""

#: ../Doc/library/errno.rst:325
msgid "Device not a stream"
msgstr ""

#: ../Doc/library/errno.rst:330
msgid "No data available"
msgstr ""

#: ../Doc/library/errno.rst:335
msgid "Timer expired"
msgstr ""

#: ../Doc/library/errno.rst:340
msgid "Out of streams resources"
msgstr ""

#: ../Doc/library/errno.rst:345
msgid "Machine is not on the network"
msgstr ""

#: ../Doc/library/errno.rst:350
msgid "Package not installed"
msgstr ""

#: ../Doc/library/errno.rst:355
msgid "Object is remote"
msgstr ""

#: ../Doc/library/errno.rst:360
msgid "Link has been severed"
msgstr ""

#: ../Doc/library/errno.rst:365
msgid "Advertise error"
msgstr ""

#: ../Doc/library/errno.rst:370
msgid "Srmount error"
msgstr ""

#: ../Doc/library/errno.rst:375
msgid "Communication error on send"
msgstr ""

#: ../Doc/library/errno.rst:380
msgid "Protocol error"
msgstr ""

#: ../Doc/library/errno.rst:385
msgid "Multihop attempted"
msgstr ""

#: ../Doc/library/errno.rst:390
msgid "RFS specific error"
msgstr ""

#: ../Doc/library/errno.rst:395
msgid "Not a data message"
msgstr ""

#: ../Doc/library/errno.rst:400
msgid "Value too large for defined data type"
msgstr ""

#: ../Doc/library/errno.rst:405
msgid "Name not unique on network"
msgstr ""

#: ../Doc/library/errno.rst:410
msgid "File descriptor in bad state"
msgstr ""

#: ../Doc/library/errno.rst:415
msgid "Remote address changed"
msgstr ""

#: ../Doc/library/errno.rst:420
msgid "Can not access a needed shared library"
msgstr ""

#: ../Doc/library/errno.rst:425
msgid "Accessing a corrupted shared library"
msgstr ""

#: ../Doc/library/errno.rst:430
msgid ".lib section in a.out corrupted"
msgstr ""

#: ../Doc/library/errno.rst:435
msgid "Attempting to link in too many shared libraries"
msgstr ""

#: ../Doc/library/errno.rst:440
msgid "Cannot exec a shared library directly"
msgstr ""

#: ../Doc/library/errno.rst:445
msgid "Illegal byte sequence"
msgstr ""

#: ../Doc/library/errno.rst:450
msgid "Interrupted system call should be restarted"
msgstr ""

#: ../Doc/library/errno.rst:455
msgid "Streams pipe error"
msgstr ""

#: ../Doc/library/errno.rst:460
msgid "Too many users"
msgstr ""

#: ../Doc/library/errno.rst:465
msgid "Socket operation on non-socket"
msgstr ""

#: ../Doc/library/errno.rst:470
msgid "Destination address required"
msgstr ""

#: ../Doc/library/errno.rst:475
msgid "Message too long"
msgstr ""

#: ../Doc/library/errno.rst:480
msgid "Protocol wrong type for socket"
msgstr ""

#: ../Doc/library/errno.rst:485
msgid "Protocol not available"
msgstr ""

#: ../Doc/library/errno.rst:490
msgid "Protocol not supported"
msgstr ""

#: ../Doc/library/errno.rst:495
msgid "Socket type not supported"
msgstr ""

#: ../Doc/library/errno.rst:500
msgid "Operation not supported on transport endpoint"
msgstr ""

#: ../Doc/library/errno.rst:505
msgid "Protocol family not supported"
msgstr ""

#: ../Doc/library/errno.rst:510
msgid "Address family not supported by protocol"
msgstr ""

#: ../Doc/library/errno.rst:515
msgid "Address already in use"
msgstr ""

#: ../Doc/library/errno.rst:520
msgid "Cannot assign requested address"
msgstr ""

#: ../Doc/library/errno.rst:525
msgid "Network is down"
msgstr ""

#: ../Doc/library/errno.rst:530
msgid "Network is unreachable"
msgstr ""

#: ../Doc/library/errno.rst:535
msgid "Network dropped connection because of reset"
msgstr ""

#: ../Doc/library/errno.rst:540
msgid "Software caused connection abort"
msgstr ""

#: ../Doc/library/errno.rst:545
msgid "Connection reset by peer"
msgstr ""

#: ../Doc/library/errno.rst:550
msgid "No buffer space available"
msgstr ""

#: ../Doc/library/errno.rst:555
msgid "Transport endpoint is already connected"
msgstr ""

#: ../Doc/library/errno.rst:560
msgid "Transport endpoint is not connected"
msgstr ""

#: ../Doc/library/errno.rst:565
msgid "Cannot send after transport endpoint shutdown"
msgstr ""

#: ../Doc/library/errno.rst:570
msgid "Too many references: cannot splice"
msgstr ""

#: ../Doc/library/errno.rst:575
msgid "Connection timed out"
msgstr ""

#: ../Doc/library/errno.rst:580
msgid "Connection refused"
msgstr ""

#: ../Doc/library/errno.rst:585
msgid "Host is down"
msgstr ""

#: ../Doc/library/errno.rst:590
msgid "No route to host"
msgstr ""

#: ../Doc/library/errno.rst:595
msgid "Operation already in progress"
msgstr ""

#: ../Doc/library/errno.rst:600
msgid "Operation now in progress"
msgstr ""

#: ../Doc/library/errno.rst:605
msgid "Stale NFS file handle"
msgstr ""

#: ../Doc/library/errno.rst:610
msgid "Structure needs cleaning"
msgstr ""

#: ../Doc/library/errno.rst:615
msgid "Not a XENIX named type file"
msgstr ""

#: ../Doc/library/errno.rst:620
msgid "No XENIX semaphores available"
msgstr ""

#: ../Doc/library/errno.rst:625
msgid "Is a named type file"
msgstr ""

#: ../Doc/library/errno.rst:630
msgid "Remote I/O error"
msgstr ""

#: ../Doc/library/errno.rst:635
msgid "Quota exceeded"
msgstr ""

#: ../Doc/library/exceptions.rst:4
msgid "Built-in Exceptions"
msgstr ""

# 4ebef7863c674a86acca410fc5d11b6f
#: ../Doc/library/exceptions.rst:10
msgid ""
"Exceptions should be class objects.   The exceptions are defined in the "
"module :mod:`exceptions`.  This module never needs to be imported "
"explicitly: the exceptions are provided in the built-in namespace as well as "
"the :mod:`exceptions` module."
msgstr ""

# 6f0306c103b74b0081096400159f1a3d
#: ../Doc/library/exceptions.rst:19
msgid ""
"For class exceptions, in a :keyword:`try` statement with an :keyword:"
"`except` clause that mentions a particular class, that clause also handles "
"any exception classes derived from that class (but not exception classes "
"from which *it* is derived).  Two exception classes that are not related via "
"subclassing are never equivalent, even if they have the same name."
msgstr ""

# b6967d112ee246b4aa02632190fbf24e
#: ../Doc/library/exceptions.rst:27
msgid ""
"The built-in exceptions listed below can be generated by the interpreter or "
"built-in functions.  Except where mentioned, they have an \"associated value"
"\" indicating the detailed cause of the error.  This may be a string or a "
"tuple containing several items of information (e.g., an error code and a "
"string explaining the code). The associated value is the second argument to "
"the :keyword:`raise` statement.  If the exception class is derived from the "
"standard root class :exc:`BaseException`, the associated value is present as "
"the exception instance's :attr:`args` attribute."
msgstr ""

#: ../Doc/library/exceptions.rst:36
msgid ""
"User code can raise built-in exceptions.  This can be used to test an "
"exception handler or to report an error condition \"just like\" the "
"situation in which the interpreter raises the same exception; but beware "
"that there is nothing to prevent user code from raising an inappropriate "
"error."
msgstr ""

#: ../Doc/library/exceptions.rst:41
msgid ""
"The built-in exception classes can be sub-classed to define new exceptions; "
"programmers are encouraged to at least derive new exceptions from the :exc:"
"`Exception` class and not :exc:`BaseException`.  More information on "
"defining exceptions is available in the Python Tutorial under :ref:`tut-"
"userexceptions`."
msgstr ""

# f29827e5040f469d83eda8f2d919b167
#: ../Doc/library/exceptions.rst:47
msgid ""
"The following exceptions are only used as base classes for other exceptions."
msgstr ""

# 9c698b0870684aaf9fa2a670ec3a4e7a
#: ../Doc/library/exceptions.rst:51
msgid ""
"The base class for all built-in exceptions.  It is not meant to be directly "
"inherited by user-defined classes (for that, use :exc:`Exception`).  If :"
"func:`str` or :func:`unicode` is called on an instance of this class, the "
"representation of the argument(s) to the instance are returned, or the empty "
"string when there were no arguments."
msgstr ""

# cd999590c9694eabb0f37672617811dc
#: ../Doc/library/exceptions.rst:61
msgid ""
"The tuple of arguments given to the exception constructor.  Some built-in "
"exceptions (like :exc:`IOError`) expect a certain number of arguments and "
"assign a special meaning to the elements of this tuple, while others are "
"usually called only with a single string giving an error message."
msgstr ""

#: ../Doc/library/exceptions.rst:69
msgid ""
"All built-in, non-system-exiting exceptions are derived from this class.  "
"All user-defined exceptions should also be derived from this class."
msgstr ""

# f285a1ed16ed465c9b655f547854ac46
#: ../Doc/library/exceptions.rst:78
msgid ""
"The base class for all built-in exceptions except :exc:`StopIteration`, :exc:"
"`GeneratorExit`, :exc:`KeyboardInterrupt` and :exc:`SystemExit`. :exc:"
"`StandardError` itself is derived from :exc:`Exception`."
msgstr ""

#: ../Doc/library/exceptions.rst:85
msgid ""
"The base class for those built-in exceptions that are raised for various "
"arithmetic errors: :exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:"
"`FloatingPointError`."
msgstr ""

# dd03da8008334f9b8b2b82100228807f
#: ../Doc/library/exceptions.rst:92
msgid ""
"Raised when a :ref:`buffer <bufferobjects>` related operation cannot be "
"performed."
msgstr ""

#: ../Doc/library/exceptions.rst:98
msgid ""
"The base class for the exceptions that are raised when a key or index used "
"on a mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  "
"This can be raised directly by :func:`codecs.lookup`."
msgstr ""

#: ../Doc/library/exceptions.rst:105
msgid ""
"The base class for exceptions that can occur outside the Python system: :exc:"
"`IOError`, :exc:`OSError`.  When exceptions of this type are created with a "
"2-tuple, the first item is available on the instance's :attr:`errno` "
"attribute (it is assumed to be an error number), and the second item is "
"available on the :attr:`strerror` attribute (it is usually the associated "
"error message).  The tuple itself is also available on the :attr:`args` "
"attribute."
msgstr ""

#: ../Doc/library/exceptions.rst:114
msgid ""
"When an :exc:`EnvironmentError` exception is instantiated with a 3-tuple, "
"the first two items are available as above, while the third item is "
"available on the :attr:`filename` attribute.  However, for backwards "
"compatibility, the :attr:`args` attribute contains only a 2-tuple of the "
"first two constructor arguments."
msgstr ""

#: ../Doc/library/exceptions.rst:120
msgid ""
"The :attr:`filename` attribute is ``None`` when this exception is created "
"with other than 3 arguments.  The :attr:`errno` and :attr:`strerror` "
"attributes are also ``None`` when the instance was created with other than 2 "
"or 3 arguments. In this last case, :attr:`args` contains the verbatim "
"constructor arguments as a tuple."
msgstr ""

# 2e83268a6edb4a7b9e9fa21bff350c68
#: ../Doc/library/exceptions.rst:126
msgid "The following exceptions are the exceptions that are actually raised."
msgstr ""

#: ../Doc/library/exceptions.rst:133
msgid "Raised when an :keyword:`assert` statement fails."
msgstr ""

#: ../Doc/library/exceptions.rst:138
msgid ""
"Raised when an attribute reference (see :ref:`attribute-references`) or "
"assignment fails.  (When an object does not support attribute references or "
"attribute assignments at all, :exc:`TypeError` is raised.)"
msgstr ""

#: ../Doc/library/exceptions.rst:145
msgid ""
"Raised when one of the built-in functions (:func:`input` or :func:"
"`raw_input`) hits an end-of-file condition (EOF) without reading any data. "
"(N.B.: the :meth:`file.read` and :meth:`file.readline` methods return an "
"empty string when they hit EOF.)"
msgstr ""

# 37d00d2bc90c43eb8c97d02603c7943d
#: ../Doc/library/exceptions.rst:153
msgid ""
"Raised when a floating point operation fails.  This exception is always "
"defined, but can only be raised when Python is configured with the ``--with-"
"fpectl`` option, or the :const:`WANT_SIGFPE_HANDLER` symbol is defined in "
"the :file:`pyconfig.h` file."
msgstr ""

# d6e7c5ea05d445c58f23eeb9e0a93241
#: ../Doc/library/exceptions.rst:161
msgid ""
"Raise when a :term:`generator`\\'s :meth:`close` method is called.  It "
"directly inherits from :exc:`BaseException` instead of :exc:`StandardError` "
"since it is technically not an error."
msgstr ""

# cd1a6632e9b6475ba664b959256c8de5
#: ../Doc/library/exceptions.rst:172
msgid ""
"Raised when an I/O operation (such as a :keyword:`print` statement, the "
"built-in :func:`open` function or a method of a file object) fails for an I/"
"O-related reason, e.g., \"file not found\" or \"disk full\"."
msgstr ""

#: ../Doc/library/exceptions.rst:176
msgid ""
"This class is derived from :exc:`EnvironmentError`.  See the discussion "
"above for more information on exception instance attributes."
msgstr ""

#: ../Doc/library/exceptions.rst:185
msgid ""
"Raised when an :keyword:`import` statement fails to find the module "
"definition or when a ``from ... import`` fails to find a name that is to be "
"imported."
msgstr ""

# 1f98ba4f431943c5aadd323572bb13dc
#: ../Doc/library/exceptions.rst:191
msgid ""
"Raised when a sequence subscript is out of range.  (Slice indices are "
"silently truncated to fall in the allowed range; if an index is not a plain "
"integer, :exc:`TypeError` is raised.)"
msgstr ""

#: ../Doc/library/exceptions.rst:200
msgid ""
"Raised when a mapping (dictionary) key is not found in the set of existing "
"keys."
msgstr ""

# 7b3d28714b134928a994b80d14b47bb9
#: ../Doc/library/exceptions.rst:207
msgid ""
"Raised when the user hits the interrupt key (normally :kbd:`Control-C` or :"
"kbd:`Delete`).  During execution, a check for interrupts is made regularly. "
"Interrupts typed when a built-in function :func:`input` or :func:`raw_input` "
"is waiting for input also raise this exception. The exception inherits from :"
"exc:`BaseException` so as to not be accidentally caught by code that "
"catches :exc:`Exception` and thus prevent the interpreter from exiting."
msgstr ""

# f6ec1912f95d48a48489d20d74d54048
#: ../Doc/library/exceptions.rst:220
msgid ""
"Raised when an operation runs out of memory but the situation may still be "
"rescued (by deleting some objects).  The associated value is a string "
"indicating what kind of (internal) operation ran out of memory. Note that "
"because of the underlying memory management architecture (C's :c:func:"
"`malloc` function), the interpreter may not always be able to completely "
"recover from this situation; it nevertheless raises an exception so that a "
"stack traceback can be printed, in case a run-away program was the cause."
msgstr ""

#: ../Doc/library/exceptions.rst:231
msgid ""
"Raised when a local or global name is not found.  This applies only to "
"unqualified names.  The associated value is an error message that includes "
"the name that could not be found."
msgstr ""

#: ../Doc/library/exceptions.rst:238
msgid ""
"This exception is derived from :exc:`RuntimeError`.  In user defined base "
"classes, abstract methods should raise this exception when they require "
"derived classes to override the method."
msgstr ""

# 33fa8e85b6904e3da27cd8be5458e17a
#: ../Doc/library/exceptions.rst:249
msgid ""
"This exception is derived from :exc:`EnvironmentError`.  It is raised when a "
"function returns a system-related error (not for illegal argument types or "
"other incidental errors).  The :attr:`errno` attribute is a numeric error "
"code from :c:data:`errno`, and the :attr:`strerror` attribute is the "
"corresponding string, as would be printed by the C function :c:func:"
"`perror`. See the module :mod:`errno`, which contains names for the error "
"codes defined by the underlying operating system."
msgstr ""

#: ../Doc/library/exceptions.rst:257
msgid ""
"For exceptions that involve a file system path (such as :func:`chdir` or :"
"func:`unlink`), the exception instance will contain a third attribute, :attr:"
"`filename`, which is the file name passed to the function."
msgstr ""

# beb513c70cd843a3a7c234c8b93cd342
#: ../Doc/library/exceptions.rst:266
msgid ""
"Raised when the result of an arithmetic operation is too large to be "
"represented.  This cannot occur for long integers (which would rather raise :"
"exc:`MemoryError` than give up) and for most operations with plain integers, "
"which return a long integer instead.  Because of the lack of standardization "
"of floating point exception handling in C, most floating point operations "
"also aren't checked."
msgstr ""

#: ../Doc/library/exceptions.rst:276
msgid ""
"This exception is raised when a weak reference proxy, created by the :func:"
"`weakref.proxy` function, is used to access an attribute of the referent "
"after it has been garbage collected. For more information on weak "
"references, see the :mod:`weakref` module."
msgstr ""

#: ../Doc/library/exceptions.rst:287
msgid ""
"Raised when an error is detected that doesn't fall in any of the other "
"categories.  The associated value is a string indicating what precisely went "
"wrong.  (This exception is mostly a relic from a previous version of the "
"interpreter; it is not used very much any more.)"
msgstr ""

# a14f3a2de3904b7eafb6613d5da03de7
#: ../Doc/library/exceptions.rst:295
msgid ""
"Raised by an :term:`iterator`\\'s :meth:`~iterator.next` method to signal "
"that there are no further values.  This is derived from :exc:`Exception` "
"rather than :exc:`StandardError`, since this is not considered an error in "
"its normal application."
msgstr ""

# 3edc9f1582004e049e30c41d960a5d7a
#: ../Doc/library/exceptions.rst:305
msgid ""
"Raised when the parser encounters a syntax error.  This may occur in an :"
"keyword:`import` statement, in an :keyword:`exec` statement, in a call to "
"the built-in function :func:`eval` or :func:`input`, or when reading the "
"initial script or standard input (also interactively)."
msgstr ""

#: ../Doc/library/exceptions.rst:310
msgid ""
"Instances of this class have attributes :attr:`filename`, :attr:`lineno`, :"
"attr:`offset` and :attr:`text` for easier access to the details.  :func:"
"`str` of the exception instance returns only the message."
msgstr ""

# c73d7a4d77c64e54a22153c14d90385f
#: ../Doc/library/exceptions.rst:317
msgid ""
"Base class for syntax errors related to incorrect indentation.  This is a "
"subclass of :exc:`SyntaxError`."
msgstr ""

# 855a0e0d7f31422ab0299bcef22b3269
#: ../Doc/library/exceptions.rst:323
msgid ""
"Raised when indentation contains an inconsistent use of tabs and spaces. "
"This is a subclass of :exc:`IndentationError`."
msgstr ""

#: ../Doc/library/exceptions.rst:329
msgid ""
"Raised when the interpreter finds an internal error, but the situation does "
"not look so serious to cause it to abandon all hope. The associated value is "
"a string indicating what went wrong (in low-level terms)."
msgstr ""

#: ../Doc/library/exceptions.rst:333
msgid ""
"You should report this to the author or maintainer of your Python "
"interpreter. Be sure to report the version of the Python interpreter (``sys."
"version``; it is also printed at the start of an interactive Python "
"session), the exact error message (the exception's associated value) and if "
"possible the source of the program that triggered the error."
msgstr ""

# 0039554aff9e4d02a504a4edd9547470
#: ../Doc/library/exceptions.rst:342
msgid ""
"This exception is raised by the :func:`sys.exit` function.  When it is not "
"handled, the Python interpreter exits; no stack traceback is printed.  If "
"the associated value is a plain integer, it specifies the system exit status "
"(passed to C's :c:func:`exit` function); if it is ``None``, the exit status "
"is zero; if it has another type (such as a string), the object's value is "
"printed and the exit status is one."
msgstr ""

# 9f7221229b2a411695d36fc0554c967c
#: ../Doc/library/exceptions.rst:349
msgid ""
"Instances have an attribute :attr:`code` which is set to the proposed exit "
"status or error message (defaulting to ``None``). Also, this exception "
"derives directly from :exc:`BaseException` and not :exc:`StandardError`, "
"since it is not technically an error."
msgstr ""

#: ../Doc/library/exceptions.rst:354
msgid ""
"A call to :func:`sys.exit` is translated into an exception so that clean-up "
"handlers (:keyword:`finally` clauses of :keyword:`try` statements) can be "
"executed, and so that a debugger can execute a script without running the "
"risk of losing control.  The :func:`os._exit` function can be used if it is "
"absolutely positively necessary to exit immediately (for example, in the "
"child process after a call to :func:`fork`)."
msgstr ""

# 9e0621787214495f8c524b5ff35cc5b9
#: ../Doc/library/exceptions.rst:361
msgid ""
"The exception inherits from :exc:`BaseException` instead of :exc:"
"`StandardError` or :exc:`Exception` so that it is not accidentally caught by "
"code that catches :exc:`Exception`.  This allows the exception to properly "
"propagate up and cause the interpreter to exit."
msgstr ""

#: ../Doc/library/exceptions.rst:372
msgid ""
"Raised when an operation or function is applied to an object of "
"inappropriate type.  The associated value is a string giving details about "
"the type mismatch."
msgstr ""

#: ../Doc/library/exceptions.rst:378
msgid ""
"Raised when a reference is made to a local variable in a function or method, "
"but no value has been bound to that variable.  This is a subclass of :exc:"
"`NameError`."
msgstr ""

#: ../Doc/library/exceptions.rst:387
msgid ""
"Raised when a Unicode-related encoding or decoding error occurs.  It is a "
"subclass of :exc:`ValueError`."
msgstr ""

#: ../Doc/library/exceptions.rst:395
msgid ""
"Raised when a Unicode-related error occurs during encoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""

#: ../Doc/library/exceptions.rst:403
msgid ""
"Raised when a Unicode-related error occurs during decoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""

#: ../Doc/library/exceptions.rst:411
msgid ""
"Raised when a Unicode-related error occurs during translating.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""

#: ../Doc/library/exceptions.rst:419
msgid ""
"Raised when a built-in operation or function receives an argument that has "
"the right type but an inappropriate value, and the situation is not "
"described by a more precise exception such as :exc:`IndexError`."
msgstr ""

#: ../Doc/library/exceptions.rst:426
msgid "Only available on VMS.  Raised when a VMS-specific error occurs."
msgstr ""

# e1a409fca19147b9ac68896f3ecbed13
#: ../Doc/library/exceptions.rst:431
msgid ""
"Raised when a Windows-specific error occurs or when the error number does "
"not correspond to an :c:data:`errno` value.  The :attr:`winerror` and :attr:"
"`strerror` values are created from the return values of the :c:func:"
"`GetLastError` and :c:func:`FormatMessage` functions from the Windows "
"Platform API. The :attr:`errno` value maps the :attr:`winerror` value to "
"corresponding ``errno.h`` values. This is a subclass of :exc:`OSError`."
msgstr ""

#: ../Doc/library/exceptions.rst:446
msgid ""
"Raised when the second argument of a division or modulo operation is zero.  "
"The associated value is a string indicating the type of the operands and the "
"operation."
msgstr ""

#: ../Doc/library/exceptions.rst:450
msgid ""
"The following exceptions are used as warning categories; see the :mod:"
"`warnings` module for more information."
msgstr ""

#: ../Doc/library/exceptions.rst:456
msgid "Base class for warning categories."
msgstr ""

#: ../Doc/library/exceptions.rst:461
msgid "Base class for warnings generated by user code."
msgstr ""

#: ../Doc/library/exceptions.rst:466
msgid "Base class for warnings about deprecated features."
msgstr ""

#: ../Doc/library/exceptions.rst:471
msgid ""
"Base class for warnings about features which will be deprecated in the "
"future."
msgstr ""

#: ../Doc/library/exceptions.rst:476
msgid "Base class for warnings about dubious syntax"
msgstr ""

#: ../Doc/library/exceptions.rst:481
msgid "Base class for warnings about dubious runtime behavior."
msgstr ""

#: ../Doc/library/exceptions.rst:486
msgid ""
"Base class for warnings about constructs that will change semantically in "
"the future."
msgstr ""

#: ../Doc/library/exceptions.rst:492
msgid "Base class for warnings about probable mistakes in module imports."
msgstr ""

#: ../Doc/library/exceptions.rst:499
msgid "Base class for warnings related to Unicode."
msgstr ""

#: ../Doc/library/exceptions.rst:505
msgid "Exception hierarchy"
msgstr ""

#: ../Doc/library/exceptions.rst:507
msgid "The class hierarchy for built-in exceptions is:"
msgstr ""

#: ../Doc/library/fcntl.rst:3
msgid ":mod:`fcntl` --- The :func:`fcntl` and :func:`ioctl` system calls"
msgstr ""

# af0a08313e7a40df84b2d4a3eff01f14
#: ../Doc/library/fcntl.rst:15
msgid ""
"This module performs file control and I/O control on file descriptors. It is "
"an interface to the :c:func:`fcntl` and :c:func:`ioctl` Unix routines."
msgstr ""

#: ../Doc/library/fcntl.rst:18
msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by ``sys."
"stdin.fileno()``, or a file object, such as ``sys.stdin`` itself, which "
"provides a :meth:`fileno` which returns a genuine file descriptor."
msgstr ""

# 783cf63d5b734dc0a59e6a67f7425de3
#: ../Doc/library/fcntl.rst:28
msgid ""
"Perform the requested operation on file descriptor *fd* (file objects "
"providing a :meth:`fileno` method are accepted as well). The operation is "
"defined by *op* and is operating system dependent.  These codes are also "
"found in the :mod:`fcntl` module. The argument *arg* is optional, and "
"defaults to the integer value ``0``.  When present, it can either be an "
"integer value, or a string. With the argument missing or an integer value, "
"the return value of this function is the integer return value of the C :c:"
"func:`fcntl` call.  When the argument is a string it represents a binary "
"structure, e.g. created by :func:`struct.pack`. The binary data is copied to "
"a buffer whose address is passed to the C :c:func:`fcntl` call.  The return "
"value after a successful call is the contents of the buffer, converted to a "
"string object.  The length of the returned string will be the same as the "
"length of the *arg* argument.  This is limited to 1024 bytes.  If the "
"information returned in the buffer by the operating system is larger than "
"1024 bytes, this is most likely to result in a segmentation violation or a "
"more subtle data corruption."
msgstr ""

# c27a3ab97ab34a5db3c501fe2b49b3e4
#: ../Doc/library/fcntl.rst:44
msgid "If the :c:func:`fcntl` fails, an :exc:`IOError` is raised."
msgstr ""

# ca463581e74b4fe9ac9b25b53e1da415
#: ../Doc/library/fcntl.rst:49
msgid ""
"This function is identical to the :func:`fcntl` function, except that the "
"operations are typically defined in the library module :mod:`termios` and "
"the argument handling is even more complicated."
msgstr ""

#: ../Doc/library/fcntl.rst:53
msgid "The op parameter is limited to values that can fit in 32-bits."
msgstr ""

#: ../Doc/library/fcntl.rst:55
msgid ""
"The parameter *arg* can be one of an integer, absent (treated identically to "
"the integer ``0``), an object supporting the read-only buffer interface "
"(most likely a plain Python string) or an object supporting the read-write "
"buffer interface."
msgstr ""

#: ../Doc/library/fcntl.rst:59
msgid ""
"In all but the last case, behaviour is as for the :func:`fcntl` function."
msgstr ""

#: ../Doc/library/fcntl.rst:61
msgid ""
"If a mutable buffer is passed, then the behaviour is determined by the value "
"of the *mutate_flag* parameter."
msgstr ""

#: ../Doc/library/fcntl.rst:64
msgid ""
"If it is false, the buffer's mutability is ignored and behaviour is as for a "
"read-only buffer, except that the 1024 byte limit mentioned above is avoided "
"-- so long as the buffer you pass is as least as long as what the operating "
"system wants to put there, things should work."
msgstr ""

# 7219cc73eece413a9eb5b15f366c5563
#: ../Doc/library/fcntl.rst:69
msgid ""
"If *mutate_flag* is true, then the buffer is (in effect) passed to the "
"underlying :func:`ioctl` system call, the latter's return code is passed "
"back to the calling Python, and the buffer's new contents reflect the action "
"of the :func:`ioctl`.  This is a slight simplification, because if the "
"supplied buffer is less than 1024 bytes long it is first copied into a "
"static buffer 1024 bytes long which is then passed to :func:`ioctl` and "
"copied back into the supplied buffer."
msgstr ""

# 00216d6e5682474d9dd4956014b24990
#: ../Doc/library/fcntl.rst:77
msgid ""
"If *mutate_flag* is not supplied, then from Python 2.5 it defaults to true, "
"which is a change from versions 2.3 and 2.4. Supply the argument explicitly "
"if version portability is a priority."
msgstr ""

#: ../Doc/library/fcntl.rst:81 ../Doc/library/ttk.rst:1199
msgid "An example::"
msgstr ""

# 3bb769b9736d45318c5ff3f98f5728e2
#: ../Doc/library/fcntl.rst:97
msgid ""
"Perform the lock operation *op* on file descriptor *fd* (file objects "
"providing a :meth:`fileno` method are accepted as well). See the Unix "
"manual :manpage:`flock(2)` for details.  (On some systems, this function is "
"emulated using :c:func:`fcntl`.)"
msgstr ""

#: ../Doc/library/fcntl.rst:105
msgid ""
"This is essentially a wrapper around the :func:`fcntl` locking calls.  *fd* "
"is the file descriptor of the file to lock or unlock, and *operation* is one "
"of the following values:"
msgstr ""

#: ../Doc/library/fcntl.rst:109
msgid ":const:`LOCK_UN` -- unlock"
msgstr ""

#: ../Doc/library/fcntl.rst:110
msgid ":const:`LOCK_SH` -- acquire a shared lock"
msgstr ""

#: ../Doc/library/fcntl.rst:111
msgid ":const:`LOCK_EX` -- acquire an exclusive lock"
msgstr ""

#: ../Doc/library/fcntl.rst:113
msgid ""
"When *operation* is :const:`LOCK_SH` or :const:`LOCK_EX`, it can also be "
"bitwise ORed with :const:`LOCK_NB` to avoid blocking on lock acquisition. "
"If :const:`LOCK_NB` is used and the lock cannot be acquired, an :exc:"
"`IOError` will be raised and the exception will have an *errno* attribute "
"set to :const:`EACCES` or :const:`EAGAIN` (depending on the operating "
"system; for portability, check for both values).  On at least some systems, :"
"const:`LOCK_EX` can only be used if the file descriptor refers to a file "
"opened for writing."
msgstr ""

#: ../Doc/library/fcntl.rst:122
msgid ""
"*length* is the number of bytes to lock, *start* is the byte offset at which "
"the lock starts, relative to *whence*, and *whence* is as with :func:"
"`fileobj.seek`, specifically:"
msgstr ""

#: ../Doc/library/fcntl.rst:126
msgid ":const:`0` -- relative to the start of the file (:const:`SEEK_SET`)"
msgstr ""

#: ../Doc/library/fcntl.rst:127
msgid ""
":const:`1` -- relative to the current buffer position (:const:`SEEK_CUR`)"
msgstr ""

#: ../Doc/library/fcntl.rst:128
msgid ":const:`2` -- relative to the end of the file (:const:`SEEK_END`)"
msgstr ""

#: ../Doc/library/fcntl.rst:130
msgid ""
"The default for *start* is 0, which means to start at the beginning of the "
"file. The default for *length* is 0 which means to lock to the end of the "
"file.  The default for *whence* is also 0."
msgstr ""

#: ../Doc/library/fcntl.rst:134
msgid "Examples (all on a SVR4 compliant system)::"
msgstr ""

#: ../Doc/library/fcntl.rst:144
msgid ""
"Note that in the first example the return value variable *rv* will hold an "
"integer value; in the second example it will hold a string value.  The "
"structure lay-out for the *lockdata* variable is system dependent --- "
"therefore using the :func:`flock` call may be better."
msgstr ""

#: ../Doc/library/fcntl.rst:153
msgid ""
"If the locking flags :const:`O_SHLOCK` and :const:`O_EXLOCK` are present in "
"the :mod:`os` module (on BSD only), the :func:`os.open` function provides an "
"alternative to the :func:`lockf` and :func:`flock` functions."
msgstr ""

#: ../Doc/library/filecmp.rst:2
msgid ":mod:`filecmp` --- File and Directory Comparisons"
msgstr ""

# 4a934dd6c939412bbf5b4c197eab4987
#: ../Doc/library/filecmp.rst:8
msgid "**Source code:** :source:`Lib/filecmp.py`"
msgstr ""

#: ../Doc/library/filecmp.rst:12
msgid ""
"The :mod:`filecmp` module defines functions to compare files and "
"directories, with various optional time/correctness trade-offs. For "
"comparing files, see also the :mod:`difflib` module."
msgstr ""

#: ../Doc/library/filecmp.rst:16
msgid "The :mod:`filecmp` module defines the following functions:"
msgstr ""

#: ../Doc/library/filecmp.rst:21
msgid ""
"Compare the files named *f1* and *f2*, returning ``True`` if they seem "
"equal, ``False`` otherwise."
msgstr ""

#: ../Doc/library/filecmp.rst:24
msgid ""
"Unless *shallow* is given and is false, files with identical :func:`os.stat` "
"signatures are taken to be equal."
msgstr ""

#: ../Doc/library/filecmp.rst:27
msgid ""
"Files that were compared using this function will not be compared again "
"unless their :func:`os.stat` signature changes."
msgstr ""

#: ../Doc/library/filecmp.rst:30
msgid ""
"Note that no external programs are called from this function, giving it "
"portability and efficiency."
msgstr ""

#: ../Doc/library/filecmp.rst:36
msgid ""
"Compare the files in the two directories *dir1* and *dir2* whose names are "
"given by *common*."
msgstr ""

#: ../Doc/library/filecmp.rst:39
msgid ""
"Returns three lists of file names: *match*, *mismatch*, *errors*.  *match* "
"contains the list of files that match, *mismatch* contains the names of "
"those that don't, and *errors* lists the names of files which could not be "
"compared.  Files are listed in *errors* if they don't exist in one of the "
"directories, the user lacks permission to read them or if the comparison "
"could not be done for some other reason."
msgstr ""

#: ../Doc/library/filecmp.rst:46
msgid ""
"The *shallow* parameter has the same meaning and default value as for :func:"
"`filecmp.cmp`."
msgstr ""

#: ../Doc/library/filecmp.rst:49
msgid ""
"For example, ``cmpfiles('a', 'b', ['c', 'd/e'])`` will compare ``a/c`` with "
"``b/c`` and ``a/d/e`` with ``b/d/e``.  ``'c'`` and ``'d/e'`` will each be in "
"one of the three returned lists."
msgstr ""

#: ../Doc/library/filecmp.rst:66
msgid "The :class:`dircmp` class"
msgstr ""

#: ../Doc/library/filecmp.rst:68
msgid ":class:`dircmp` instances are built using this constructor:"
msgstr ""

#: ../Doc/library/filecmp.rst:73
msgid ""
"Construct a new directory comparison object, to compare the directories *a* "
"and *b*. *ignore* is a list of names to ignore, and defaults to ``['RCS', "
"'CVS', 'tags']``. *hide* is a list of names to hide, and defaults to ``[os."
"curdir, os.pardir]``."
msgstr ""

# 50e6d3d0383b42e795760b452a1dafa4
#: ../Doc/library/filecmp.rst:78
msgid ""
"The :class:`dircmp` class compares files by doing *shallow* comparisons as "
"described for :func:`filecmp.cmp`."
msgstr ""

#: ../Doc/library/filecmp.rst:81
msgid "The :class:`dircmp` class provides the following methods:"
msgstr ""

#: ../Doc/library/filecmp.rst:86
msgid "Print (to ``sys.stdout``) a comparison between *a* and *b*."
msgstr ""

#: ../Doc/library/filecmp.rst:91
msgid ""
"Print a comparison between *a* and *b* and common immediate subdirectories."
msgstr ""

#: ../Doc/library/filecmp.rst:97
msgid ""
"Print a comparison between *a* and *b* and common subdirectories "
"(recursively)."
msgstr ""

# 524e0497cb0a41e693cf8215e9f675e9
#: ../Doc/library/filecmp.rst:100
msgid ""
"The :class:`dircmp` class offers a number of interesting attributes that may "
"be used to get various bits of information about the directory trees being "
"compared."
msgstr ""

#: ../Doc/library/filecmp.rst:104
msgid ""
"Note that via :meth:`__getattr__` hooks, all attributes are computed lazily, "
"so there is no speed penalty if only those attributes which are lightweight "
"to compute are used."
msgstr ""

# 127cb850b8f6403ca917b3bfd8ef8cc5
#: ../Doc/library/filecmp.rst:111
msgid "The directory *a*."
msgstr ""

# 7d8a741db21244d8ae36e9726d8d184c
#: ../Doc/library/filecmp.rst:116
msgid "The directory *b*."
msgstr ""

#: ../Doc/library/filecmp.rst:121
msgid "Files and subdirectories in *a*, filtered by *hide* and *ignore*."
msgstr ""

#: ../Doc/library/filecmp.rst:126
msgid "Files and subdirectories in *b*, filtered by *hide* and *ignore*."
msgstr ""

#: ../Doc/library/filecmp.rst:131
msgid "Files and subdirectories in both *a* and *b*."
msgstr ""

#: ../Doc/library/filecmp.rst:136
msgid "Files and subdirectories only in *a*."
msgstr ""

#: ../Doc/library/filecmp.rst:141
msgid "Files and subdirectories only in *b*."
msgstr ""

#: ../Doc/library/filecmp.rst:146
msgid "Subdirectories in both *a* and *b*."
msgstr ""

#: ../Doc/library/filecmp.rst:151
msgid "Files in both *a* and *b*"
msgstr ""

#: ../Doc/library/filecmp.rst:156
msgid ""
"Names in both *a* and *b*, such that the type differs between the "
"directories, or names for which :func:`os.stat` reports an error."
msgstr ""

# 9df7f8b7ac5d46bfbdc7edd98f37c4d7
#: ../Doc/library/filecmp.rst:162
msgid ""
"Files which are identical in both *a* and *b*, using the class's file "
"comparison operator."
msgstr ""

# 456b0abb11b547bbb5e8a609b5955004
#: ../Doc/library/filecmp.rst:168
msgid ""
"Files which are in both *a* and *b*, whose contents differ according to the "
"class's file comparison operator."
msgstr ""

#: ../Doc/library/filecmp.rst:174
msgid "Files which are in both *a* and *b*, but could not be compared."
msgstr ""

#: ../Doc/library/filecmp.rst:179
msgid ""
"A dictionary mapping names in :attr:`common_dirs` to :class:`dircmp` objects."
msgstr ""

# 5c7c3c541dac432ca69e7935c882a537
#: ../Doc/library/filecmp.rst:182
msgid ""
"Here is a simplified example of using the ``subdirs`` attribute to search "
"recursively through two directories to show common different files::"
msgstr ""

#: ../Doc/library/fileformats.rst:6
msgid "File Formats"
msgstr ""

#: ../Doc/library/fileformats.rst:8
msgid ""
"The modules described in this chapter parse various miscellaneous file "
"formats that aren't markup languages or are related to e-mail."
msgstr ""

#: ../Doc/library/fileinput.rst:2
msgid ":mod:`fileinput` --- Iterate over lines from multiple input streams"
msgstr ""

# 0cc1ab85b8a64c0791a14c6793e01e45
#: ../Doc/library/fileinput.rst:9
msgid "**Source code:** :source:`Lib/fileinput.py`"
msgstr ""

#: ../Doc/library/fileinput.rst:13
msgid ""
"This module implements a helper class and functions to quickly write a loop "
"over standard input or a list of files. If you just want to read or write "
"one file see :func:`open`."
msgstr ""

#: ../Doc/library/fileinput.rst:17
msgid "The typical use is::"
msgstr ""

#: ../Doc/library/fileinput.rst:23
msgid ""
"This iterates over the lines of all files listed in ``sys.argv[1:]``, "
"defaulting to ``sys.stdin`` if the list is empty.  If a filename is ``'-'``, "
"it is also replaced by ``sys.stdin``.  To specify an alternative list of "
"filenames, pass it as the first argument to :func:`.input`.  A single file "
"name is also allowed."
msgstr ""

#: ../Doc/library/fileinput.rst:28
msgid ""
"All files are opened in text mode by default, but you can override this by "
"specifying the *mode* parameter in the call to :func:`.input` or :class:"
"`FileInput()`.  If an I/O error occurs during opening or reading a file, :"
"exc:`IOError` is raised."
msgstr ""

#: ../Doc/library/fileinput.rst:33
msgid ""
"If ``sys.stdin`` is used more than once, the second and further use will "
"return no lines, except perhaps for interactive use, or if it has been "
"explicitly reset (e.g. using ``sys.stdin.seek(0)``)."
msgstr ""

#: ../Doc/library/fileinput.rst:37
msgid ""
"Empty files are opened and immediately closed; the only time their presence "
"in the list of filenames is noticeable at all is when the last file opened "
"is empty."
msgstr ""

#: ../Doc/library/fileinput.rst:41
msgid ""
"Lines are returned with any newlines intact, which means that the last line "
"in a file may not have one."
msgstr ""

#: ../Doc/library/fileinput.rst:44
msgid ""
"You can control how files are opened by providing an opening hook via the "
"*openhook* parameter to :func:`fileinput.input` or :class:`FileInput()`. The "
"hook must be a function that takes two arguments, *filename* and *mode*, and "
"returns an accordingly opened file-like object. Two useful hooks are already "
"provided by this module."
msgstr ""

#: ../Doc/library/fileinput.rst:50
msgid "The following function is the primary interface of this module:"
msgstr ""

#: ../Doc/library/fileinput.rst:55
msgid ""
"Create an instance of the :class:`FileInput` class.  The instance will be "
"used as global state for the functions of this module, and is also returned "
"to use during iteration.  The parameters to this function will be passed "
"along to the constructor of the :class:`FileInput` class."
msgstr ""

#: ../Doc/library/fileinput.rst:63
msgid ""
"The following functions use the global state created by :func:`fileinput."
"input`; if there is no active state, :exc:`RuntimeError` is raised."
msgstr ""

#: ../Doc/library/fileinput.rst:69
msgid ""
"Return the name of the file currently being read.  Before the first line has "
"been read, returns ``None``."
msgstr ""

#: ../Doc/library/fileinput.rst:75
msgid ""
"Return the integer \"file descriptor\" for the current file. When no file is "
"opened (before the first line and between files), returns ``-1``."
msgstr ""

#: ../Doc/library/fileinput.rst:83
msgid ""
"Return the cumulative line number of the line that has just been read.  "
"Before the first line has been read, returns ``0``.  After the last line of "
"the last file has been read, returns the line number of that line."
msgstr ""

#: ../Doc/library/fileinput.rst:90
msgid ""
"Return the line number in the current file.  Before the first line has been "
"read, returns ``0``.  After the last line of the last file has been read, "
"returns the line number of that line within the file."
msgstr ""

#: ../Doc/library/fileinput.rst:97
msgid ""
"Returns true if the line just read is the first line of its file, otherwise "
"returns false."
msgstr ""

#: ../Doc/library/fileinput.rst:103
msgid ""
"Returns true if the last line was read from ``sys.stdin``, otherwise returns "
"false."
msgstr ""

#: ../Doc/library/fileinput.rst:109
msgid ""
"Close the current file so that the next iteration will read the first line "
"from the next file (if any); lines not read from the file will not count "
"towards the cumulative line count.  The filename is not changed until after "
"the first line of the next file has been read.  Before the first line has "
"been read, this function has no effect; it cannot be used to skip the first "
"file.  After the last line of the last file has been read, this function has "
"no effect."
msgstr ""

#: ../Doc/library/fileinput.rst:119
msgid "Close the sequence."
msgstr ""

#: ../Doc/library/fileinput.rst:121
msgid ""
"The class which implements the sequence behavior provided by the module is "
"available for subclassing as well:"
msgstr ""

#: ../Doc/library/fileinput.rst:127
msgid ""
"Class :class:`FileInput` is the implementation; its methods :meth:"
"`filename`, :meth:`fileno`, :meth:`lineno`, :meth:`filelineno`, :meth:"
"`isfirstline`, :meth:`isstdin`, :meth:`nextfile` and :meth:`close` "
"correspond to the functions of the same name in the module. In addition it "
"has a :meth:`readline` method which returns the next input line, and a :meth:"
"`__getitem__` method which implements the sequence behavior.  The sequence "
"must be accessed in strictly sequential order; random access and :meth:"
"`readline` cannot be mixed."
msgstr ""

#: ../Doc/library/fileinput.rst:135
msgid ""
"With *mode* you can specify which file mode will be passed to :func:`open`. "
"It must be one of ``'r'``, ``'rU'``, ``'U'`` and ``'rb'``."
msgstr ""

#: ../Doc/library/fileinput.rst:138
msgid ""
"The *openhook*, when given, must be a function that takes two arguments, "
"*filename* and *mode*, and returns an accordingly opened file-like object. "
"You cannot use *inplace* and *openhook* together."
msgstr ""

#: ../Doc/library/fileinput.rst:145
msgid ""
"**Optional in-place filtering:** if the keyword argument ``inplace=1`` is "
"passed to :func:`fileinput.input` or to the :class:`FileInput` constructor, "
"the file is moved to a backup file and standard output is directed to the "
"input file (if a file of the same name as the backup file already exists, it "
"will be replaced silently).  This makes it possible to write a filter that "
"rewrites its input file in place.  If the *backup* parameter is given "
"(typically as ``backup='.<some extension>'``), it specifies the extension "
"for the backup file, and the backup file remains around; by default, the "
"extension is ``'.bak'`` and it is deleted when the output file is closed.  "
"In-place filtering is disabled when standard input is read."
msgstr ""

#: ../Doc/library/fileinput.rst:158
msgid "The current implementation does not work for MS-DOS 8+3 filesystems."
msgstr ""

#: ../Doc/library/fileinput.rst:161
msgid "The two following opening hooks are provided by this module:"
msgstr ""

#: ../Doc/library/fileinput.rst:165
msgid ""
"Transparently opens files compressed with gzip and bzip2 (recognized by the "
"extensions ``'.gz'`` and ``'.bz2'``) using the :mod:`gzip` and :mod:`bz2` "
"modules.  If the filename extension is not ``'.gz'`` or ``'.bz2'``, the file "
"is opened normally (ie, using :func:`open` without any decompression)."
msgstr ""

#: ../Doc/library/fileinput.rst:170
msgid ""
"Usage example:  ``fi = fileinput.FileInput(openhook=fileinput."
"hook_compressed)``"
msgstr ""

#: ../Doc/library/fileinput.rst:177
msgid ""
"Returns a hook which opens each file with :func:`codecs.open`, using the "
"given *encoding* to read the file."
msgstr ""

#: ../Doc/library/fileinput.rst:180
msgid ""
"Usage example: ``fi = fileinput.FileInput(openhook=fileinput.hook_encoded"
"(\"iso-8859-1\"))``"
msgstr ""

# 95487673cfb64547ac3a64292d8948eb
#: ../Doc/library/fileinput.rst:185
msgid ""
"With this hook, :class:`FileInput` might return Unicode strings depending on "
"the specified *encoding*."
msgstr ""

#: ../Doc/library/filesys.rst:6
msgid "File and Directory Access"
msgstr ""

#: ../Doc/library/filesys.rst:8
msgid ""
"The modules described in this chapter deal with disk files and directories.  "
"For example, there are modules for reading the properties of files, "
"manipulating paths in a portable way, and creating temporary files.  The "
"full list of modules in this chapter is:"
msgstr ""

# 479ced6197214db6a4a14bbfe220ee98
#: ../Doc/library/filesys.rst:33
msgid "A description of Python's built-in file objects."
msgstr ""

#: ../Doc/library/filesys.rst:36
msgid ""
"Operating system interfaces, including functions to work with files at a "
"lower level than the built-in file object."
msgstr ""

# f2a95c0d5e4f4811bb289b2900e9a3a6
#: ../Doc/library/fl.rst:3
msgid ":mod:`fl` --- FORMS library for graphical user interfaces"
msgstr ""

# 220243bfc9f247f1a83010ec670e868b
#: ../Doc/library/fl.rst:19
msgid ""
"This module provides an interface to the FORMS Library by Mark Overmars.  "
"The source for the library can be retrieved by anonymous ftp from host ``ftp."
"cs.ruu.nl``, directory :file:`SGI/FORMS`.  It was last tested with version "
"2.0b."
msgstr ""

# fca72e6572934a5890006e291f61f756
#: ../Doc/library/fl.rst:24
msgid ""
"Most functions are literal translations of their C equivalents, dropping the "
"initial ``fl_`` from their name.  Constants used by the library are defined "
"in module :mod:`FL` described below."
msgstr ""

# 83e7c51636de4ed980d1841de2b568b0
#: ../Doc/library/fl.rst:28
msgid ""
"The creation of objects is a little different in Python than in C: instead "
"of the 'current form' maintained by the library to which new FORMS objects "
"are added, all functions that add a FORMS object to a form are methods of "
"the Python object representing the form. Consequently, there are no Python "
"equivalents for the C functions :c:func:`fl_addto_form` and :c:func:"
"`fl_end_form`, and the equivalent of :c:func:`fl_bgn_form` is called :func:"
"`fl.make_form`."
msgstr ""

# 01cf27c8e0d446e58a3a88a9d0f00897
#: ../Doc/library/fl.rst:35
msgid ""
"Watch out for the somewhat confusing terminology: FORMS uses the word :dfn:"
"`object` for the buttons, sliders etc. that you can place in a form. In "
"Python, 'object' means any value.  The Python interface to FORMS introduces "
"two new Python object types: form objects (representing an entire form) and "
"FORMS objects (representing one button, slider etc.). Hopefully this isn't "
"too confusing."
msgstr ""

# 0815e27bab0d4af8b663eebfae7232db
#: ../Doc/library/fl.rst:42
msgid ""
"There are no 'free objects' in the Python interface to FORMS, nor is there "
"an easy way to add object classes written in Python.  The FORMS interface to "
"GL event handling is available, though, so you can mix FORMS with pure GL "
"windows."
msgstr ""

# e93fafef629f4d5db87e09303f4b7980
#: ../Doc/library/fl.rst:46
msgid ""
"**Please note:** importing :mod:`fl` implies a call to the GL function :c:"
"func:`foreground` and to the FORMS routine :c:func:`fl_init`."
msgstr ""

# 571f3b69db594d2d911cf1e3ee8f6f57
#: ../Doc/library/fl.rst:53
msgid "Functions Defined in Module :mod:`fl`"
msgstr ""

# 077dabda7f8a4e5783bc536cd7283b5f
#: ../Doc/library/fl.rst:55
msgid ""
"Module :mod:`fl` defines the following functions.  For more information "
"about what they do, see the description of the equivalent C function in the "
"FORMS documentation:"
msgstr ""

# 24e9c9c520864352b9c6258535b8bbb9
#: ../Doc/library/fl.rst:62
msgid ""
"Create a form with given type, width and height.  This returns a :dfn:`form` "
"object, whose methods are described below."
msgstr ""

# b21c260c67624fa0bb20265229db0850
#: ../Doc/library/fl.rst:68
msgid ""
"The standard FORMS main loop.  Returns a Python object representing the "
"FORMS object needing interaction, or the special value :const:`FL.EVENT`."
msgstr ""

# 5cc2edb54f4a44069beb0f22cd0d5cc3
#: ../Doc/library/fl.rst:74
msgid ""
"Check for FORMS events.  Returns what :func:`do_forms` above returns, or "
"``None`` if there is no event that immediately needs interaction."
msgstr ""

# 40c27a6da4cc4a22841cef0f692d59c9
#: ../Doc/library/fl.rst:80
msgid "Set the event callback function."
msgstr ""

# 8e736d2812cf4b60b1cf7d25831201b8
#: ../Doc/library/fl.rst:85
msgid "Set the graphics modes."
msgstr ""

# 3a562ba6f7354f9e92c5d6a649858969
#: ../Doc/library/fl.rst:90
msgid ""
"Return the current rgb mode.  This is the value of the C global variable :c:"
"data:`fl_rgbmode`."
msgstr ""

# 956348eb24c741579be0f7d03a736563
#: ../Doc/library/fl.rst:96
msgid "Show a dialog box with a three-line message and an OK button."
msgstr ""

# 9ee0d8d4860540e9b029daa83205dea0
#: ../Doc/library/fl.rst:101
msgid ""
"Show a dialog box with a three-line message and YES and NO buttons. It "
"returns ``1`` if the user pressed YES, ``0`` if NO."
msgstr ""

# a782324c276443da8d0b9520308cd5aa
#: ../Doc/library/fl.rst:107
msgid ""
"Show a dialog box with a three-line message and up to three buttons. It "
"returns the number of the button clicked by the user (``1``, ``2`` or ``3``)."
msgstr ""

# 9cc273be4ca74013adb320ea4b70ee89
#: ../Doc/library/fl.rst:113
msgid ""
"Show a dialog box with a one-line prompt message and text field in which the "
"user can enter a string.  The second argument is the default input string.  "
"It returns the string value as edited by the user."
msgstr ""

# 06b35b4166f14e1da97ead83a5925cc3
#: ../Doc/library/fl.rst:120
msgid ""
"Show a dialog box in which the user can select a file.  It returns the "
"absolute filename selected by the user, or ``None`` if the user presses "
"Cancel."
msgstr ""

# fc7f923ff6504b9988a397d83c40ce57
#: ../Doc/library/fl.rst:128
msgid ""
"These functions return the directory, pattern and filename (the tail part "
"only) selected by the user in the last :func:`show_file_selector` call."
msgstr ""

# 1b2ada6ad1e34b66bf1a3fa4a1dfbc48
#: ../Doc/library/fl.rst:142
msgid ""
"These functions are the FORMS interfaces to the corresponding GL functions.  "
"Use these if you want to handle some GL events yourself when using :func:`fl."
"do_events`.  When a GL event is detected that FORMS cannot handle, :func:`fl."
"do_forms` returns the special value :const:`FL.EVENT` and you should call :"
"func:`fl.qread` to read the event from the queue.  Don't use the equivalent "
"GL functions!"
msgstr ""

# 36308cea89c34399be0c602d45ee179f
#: ../Doc/library/fl.rst:156
msgid ""
"See the description in the FORMS documentation of :c:func:`fl_color`, :c:"
"func:`fl_mapcolor` and :c:func:`fl_getmcolor`."
msgstr ""

# 24beac3d6ebb4f6895b22a1fe062a622
#: ../Doc/library/fl.rst:163
msgid "Form Objects"
msgstr ""

# c22ca54e58324b428bf73336697bebb5
#: ../Doc/library/fl.rst:165
msgid ""
"Form objects (returned by :func:`make_form` above) have the following "
"methods. Each method corresponds to a C function whose name is prefixed with "
"``fl_``; and whose first argument is a form pointer; please refer to the "
"official FORMS documentation for descriptions."
msgstr ""

# 6839c49615ec48afb7e3d5959f3983e6
#: ../Doc/library/fl.rst:170
msgid ""
"All the :meth:`add_\\*` methods return a Python object representing the "
"FORMS object.  Methods of FORMS objects are described below.  Most kinds of "
"FORMS object also have some methods specific to that kind; these methods are "
"listed here."
msgstr ""

# 17238d0973df4134b1c20df715794288
#: ../Doc/library/fl.rst:178
msgid "Show the form."
msgstr ""

# 564ef06a97684389a632a6401b80b352
#: ../Doc/library/fl.rst:183
msgid "Hide the form."
msgstr ""

# 5b1410b34b674652975055b9e88cc3e7
#: ../Doc/library/fl.rst:188
msgid "Redraw the form."
msgstr ""

# 9b6e559d10634037a3d4780a1bbcb4e0
#: ../Doc/library/fl.rst:193
msgid "Set the form's position."
msgstr ""

# 5e966435380b4657a96f5e68bed63581
#: ../Doc/library/fl.rst:198
msgid "Freeze the form."
msgstr ""

# 4300d02c5fe44b5aa2cde3bc67c2c91d
#: ../Doc/library/fl.rst:203
msgid "Unfreeze the form."
msgstr ""

# 95c5bb619a97427d8b77cb9025b8751c
#: ../Doc/library/fl.rst:208
msgid "Activate the form."
msgstr ""

# 1584ef03ef444cf9a5882d9c09bffd9e
#: ../Doc/library/fl.rst:213
msgid "Deactivate the form."
msgstr ""

# 3cb2a143d0114494ace5b9a6e6736fa9
#: ../Doc/library/fl.rst:218
msgid "Begin a new group of objects; return a group object."
msgstr ""

# c0321caeb96f43aca8d48fb57b9523ab
#: ../Doc/library/fl.rst:223
msgid "End the current group of objects."
msgstr ""

# b7ffb248038a4507a2798243a536cf17
#: ../Doc/library/fl.rst:228
msgid "Find the first object in the form."
msgstr ""

# ee768f1de1504e45b8aef3dfdd9dd60e
#: ../Doc/library/fl.rst:233
msgid "Find the last object in the form."
msgstr ""

# 8990b462fc6144cc856706557c73f172
#: ../Doc/library/fl.rst:238
msgid "Add a box object to the form. No extra methods."
msgstr ""

# 3961c05af3f84936ab4a863931952ac5
#: ../Doc/library/fl.rst:243
msgid "Add a text object to the form. No extra methods."
msgstr ""

# 4de58160099c48e6abfa26c599dab489
#: ../Doc/library/fl.rst:252
msgid "Add a clock object to the form.  ---  Method: :meth:`get_clock`."
msgstr ""

# 012789fac53b4d3a843c88cc07f2bf58
#: ../Doc/library/fl.rst:257
msgid ""
"Add a button object to the form.  ---  Methods: :meth:`get_button`, :meth:"
"`set_button`."
msgstr ""

# 7b07b1153b214f3ba2881582eefbd7d6
#: ../Doc/library/fl.rst:263
msgid ""
"Add a lightbutton object to the form.  ---  Methods: :meth:`get_button`, :"
"meth:`set_button`."
msgstr ""

# 13b50bfa2e004f25876329b2dd587d3d
#: ../Doc/library/fl.rst:269
msgid ""
"Add a roundbutton object to the form.  ---  Methods: :meth:`get_button`, :"
"meth:`set_button`."
msgstr ""

# 52ca0324444b45f6affb3971b2606932
#: ../Doc/library/fl.rst:275
msgid ""
"Add a slider object to the form.  ---  Methods: :meth:`set_slider_value`, :"
"meth:`get_slider_value`, :meth:`set_slider_bounds`, :meth:"
"`get_slider_bounds`, :meth:`set_slider_return`, :meth:`set_slider_size`, :"
"meth:`set_slider_precision`, :meth:`set_slider_step`."
msgstr ""

# 3f452c67a1cd412bad1c00c13ffa4214
#: ../Doc/library/fl.rst:283
msgid ""
"Add a valslider object to the form.  ---  Methods: :meth:"
"`set_slider_value`, :meth:`get_slider_value`, :meth:`set_slider_bounds`, :"
"meth:`get_slider_bounds`, :meth:`set_slider_return`, :meth:"
"`set_slider_size`, :meth:`set_slider_precision`, :meth:`set_slider_step`."
msgstr ""

# 0c8472357be547ed924086195ff4f961
#: ../Doc/library/fl.rst:291
msgid ""
"Add a dial object to the form.  ---  Methods: :meth:`set_dial_value`, :meth:"
"`get_dial_value`, :meth:`set_dial_bounds`, :meth:`get_dial_bounds`."
msgstr ""

# 8b069c3d5b8847bb907988543aa6f32e
#: ../Doc/library/fl.rst:297
msgid ""
"Add a positioner object to the form.  ---  Methods: :meth:"
"`set_positioner_xvalue`, :meth:`set_positioner_yvalue`, :meth:"
"`set_positioner_xbounds`, :meth:`set_positioner_ybounds`, :meth:"
"`get_positioner_xvalue`, :meth:`get_positioner_yvalue`, :meth:"
"`get_positioner_xbounds`, :meth:`get_positioner_ybounds`."
msgstr ""

# 7768ae5fd7794981b71b2a89f86b235d
#: ../Doc/library/fl.rst:306
msgid ""
"Add a counter object to the form.  ---  Methods: :meth:`set_counter_value`, :"
"meth:`get_counter_value`, :meth:`set_counter_bounds`, :meth:"
"`set_counter_step`, :meth:`set_counter_precision`, :meth:"
"`set_counter_return`."
msgstr ""

# 643a10891a5e49829eb6cbf415243391
#: ../Doc/library/fl.rst:313
msgid ""
"Add a input object to the form.  ---  Methods: :meth:`set_input`, :meth:"
"`get_input`, :meth:`set_input_color`, :meth:`set_input_return`."
msgstr ""

# 37281066dbf147cc9c49be84655cf12f
#: ../Doc/library/fl.rst:319
msgid ""
"Add a menu object to the form.  ---  Methods: :meth:`set_menu`, :meth:"
"`get_menu`, :meth:`addto_menu`."
msgstr ""

# 456a054f6fcb43f4b0201027ad54c200
#: ../Doc/library/fl.rst:325
msgid ""
"Add a choice object to the form.  ---  Methods: :meth:`set_choice`, :meth:"
"`get_choice`, :meth:`clear_choice`, :meth:`addto_choice`, :meth:"
"`replace_choice`, :meth:`delete_choice`, :meth:`get_choice_text`, :meth:"
"`set_choice_fontsize`, :meth:`set_choice_fontstyle`."
msgstr ""

# 7bc0826dc7114a04a88c988dbf6cae08
#: ../Doc/library/fl.rst:333
msgid ""
"Add a browser object to the form.  ---  Methods: :meth:"
"`set_browser_topline`, :meth:`clear_browser`, :meth:`add_browser_line`, :"
"meth:`addto_browser`, :meth:`insert_browser_line`, :meth:"
"`delete_browser_line`, :meth:`replace_browser_line`, :meth:"
"`get_browser_line`, :meth:`load_browser`, :meth:`get_browser_maxline`, :meth:"
"`select_browser_line`, :meth:`deselect_browser_line`, :meth:"
"`deselect_browser`, :meth:`isselected_browser_line`, :meth:`get_browser`, :"
"meth:`set_browser_fontsize`, :meth:`set_browser_fontstyle`, :meth:"
"`set_browser_specialkey`."
msgstr ""

# 9838d6beb8e34bcf8a664d28427433ed
#: ../Doc/library/fl.rst:346
msgid ""
"Add a timer object to the form.  ---  Methods: :meth:`set_timer`, :meth:"
"`get_timer`."
msgstr ""

# fd0ff22bec4d4d419890997d3cd53d01
#: ../Doc/library/fl.rst:349
msgid ""
"Form objects have the following data attributes; see the FORMS documentation:"
msgstr ""

# ac9b006187e145caa02c187e5d53b8ea
#: ../Doc/library/fl.rst:354
msgid ":attr:`window`"
msgstr ""

# cad0a8a36caa482f8384cc9c911203f4
# cd3c8f7fe1b84527a6c11c898c3cb176
# 5fa8d008e2374f77b3827c577883053f
# 90730f5a60234eeda15238f557ea5861
# cf4217bbf3d84123b40cec8e496fea8d
# b6c1819d7a014cfb80ae5874053bbd3e
# b6bff94bd1bd412f992d24bffdb025b5
# 0b475bfe4c1347768c9db8dd745506ed
# aad1acf7fad248348aadae9ec23ff092
# f5001f38cca742729227a400c3720255
# 46de3ece964e4fdb8b5f2334ccdfa672
# 9cf1bd0fc7d74f4a9fd886af2d764003
#: ../Doc/library/fl.rst:354 ../Doc/library/fl.rst:432
#: ../Doc/library/fl.rst:434 ../Doc/library/fl.rst:460
#: ../Doc/library/fl.rst:462 ../Doc/library/fl.rst:464
#: ../Doc/library/fl.rst:466 ../Doc/library/fl.rst:468
#: ../Doc/library/fl.rst:470 ../Doc/library/fl.rst:472
#: ../Doc/library/fl.rst:474 ../Doc/library/fl.rst:476
msgid "int (read-only)"
msgstr ""

# d6d3946961e54046838e5220e31612da
#: ../Doc/library/fl.rst:354
msgid "GL window id"
msgstr ""

# d8c608806ad247c18b4bbf4f417dfafe
# 878c3d29a83640c9a06a6c159de8d139
#: ../Doc/library/fl.rst:356 ../Doc/library/fl.rst:442
msgid ":attr:`w`"
msgstr ""

# 1f61fc913b9849bd875a510bd78f59cf
#: ../Doc/library/fl.rst:356
msgid "form width"
msgstr ""

# b9053a5342994027b68778ae53f4b587
# 99c2b9adf9ed44aa9ac8ca7a4848486a
#: ../Doc/library/fl.rst:358 ../Doc/library/fl.rst:444
msgid ":attr:`h`"
msgstr ""

# af800c1d38cc4edd9b9e9d362eb9e46b
#: ../Doc/library/fl.rst:358
msgid "form height"
msgstr ""

# 3e03dece272948bfb690cea96e6f8312
# d85bf60fcb154f5493779211e1af81fd
#: ../Doc/library/fl.rst:360 ../Doc/library/fl.rst:438
msgid ":attr:`x`"
msgstr ""

# 27fcff02695546bc8d960cefd2e13478
#: ../Doc/library/fl.rst:360
msgid "form x origin"
msgstr ""

# a251b29f174d4e29b7f70f17c6f70645
# e6c60f6bfc86490e97d6255a86795ea3
#: ../Doc/library/fl.rst:362 ../Doc/library/fl.rst:440
msgid ":attr:`y`"
msgstr ""

# e0188581c2bb42aea1f275504764641e
#: ../Doc/library/fl.rst:362
msgid "form y origin"
msgstr ""

# c94d2b9097b8411fb159e2bf57bc9e1c
#: ../Doc/library/fl.rst:364
msgid ":attr:`deactivated`"
msgstr ""

# 8be3f6181d6e4e67b20a3e166bedd970
#: ../Doc/library/fl.rst:364
msgid "nonzero if form is deactivated"
msgstr ""

# 749934cbeadf4e3b89f8962541f96f72
# 24ed8e327ed94b619a496236f02ab648
#: ../Doc/library/fl.rst:366 ../Doc/library/fl.rst:472
msgid ":attr:`visible`"
msgstr ""

# 8345ce34c1f24b63b2bf46df6dc37140
#: ../Doc/library/fl.rst:366
msgid "nonzero if form is visible"
msgstr ""

# 26c2aebcf29d470caca06867653ee0b0
# 5ec7aa2d13634feba52815ab5070096f
#: ../Doc/library/fl.rst:368 ../Doc/library/fl.rst:466
msgid ":attr:`frozen`"
msgstr ""

# 324809a0890a44308c56db3bb024aa1b
#: ../Doc/library/fl.rst:368
msgid "nonzero if form is frozen"
msgstr ""

# d136224227aa4f1880b103a9e34f0557
#: ../Doc/library/fl.rst:370
msgid ":attr:`doublebuf`"
msgstr ""

# 89447054840c40d9bcfd699fe5b2293e
#: ../Doc/library/fl.rst:370
msgid "nonzero if double buffering on"
msgstr ""

# d245586ce2dd4cf29b522aebdf5cb44c
#: ../Doc/library/fl.rst:377
msgid "FORMS Objects"
msgstr ""

# 56bc63b4b5614eeaa67e9f9426364f0b
#: ../Doc/library/fl.rst:379
msgid ""
"Besides methods specific to particular kinds of FORMS objects, all FORMS "
"objects also have the following methods:"
msgstr ""

# 14b641d629474dd3ae5cc091a6f90dfd
#: ../Doc/library/fl.rst:385
msgid ""
"Set the object's callback function and argument.  When the object needs "
"interaction, the callback function will be called with two arguments: the "
"object, and the callback argument.  (FORMS objects without a callback "
"function are returned by :func:`fl.do_forms` or :func:`fl.check_forms` when "
"they need interaction.)  Call this method without arguments to remove the "
"callback function."
msgstr ""

# 1391a97a515e4730848f9b9bfb1acbbb
#: ../Doc/library/fl.rst:395
msgid "Delete the object."
msgstr ""

# 267cfc63e72a4000af624e901a44ab21
#: ../Doc/library/fl.rst:400
msgid "Show the object."
msgstr ""

# 80e783743e5944e5b24fcef3890548dc
#: ../Doc/library/fl.rst:405
msgid "Hide the object."
msgstr ""

# 74565f8c554944bda43217adf1e9aa44
#: ../Doc/library/fl.rst:410
msgid "Redraw the object."
msgstr ""

# f5833ca56ccc44be9cf737921058067a
#: ../Doc/library/fl.rst:415
msgid "Freeze the object."
msgstr ""

# 804c195ed7074b058b776ee4b2461023
#: ../Doc/library/fl.rst:420
msgid "Unfreeze the object."
msgstr ""

# cd12a02de2e04555aa7611c572d710a4
#: ../Doc/library/fl.rst:422
msgid "FORMS objects have these data attributes; see the FORMS documentation:"
msgstr ""

# f98dc9d445724e6db6c99526cdba413a
#: ../Doc/library/fl.rst:432
msgid ":attr:`objclass`"
msgstr ""

# 76d2c7e2db8f488a8a2a2529a1b14d9e
#: ../Doc/library/fl.rst:432
msgid "object class"
msgstr ""

# 606ff60ce1c044fdb8a8c51e7c5baab5
#: ../Doc/library/fl.rst:434
msgid ":attr:`type`"
msgstr ""

# 204082fa10504ee6bf9f3be63f5784a3
#: ../Doc/library/fl.rst:434
msgid "object type"
msgstr ""

# dded59f8194041f6a9bee67d3df9dff0
#: ../Doc/library/fl.rst:436
msgid ":attr:`boxtype`"
msgstr ""

# ac32f2c2ce004636a98f599f15bab224
#: ../Doc/library/fl.rst:436
msgid "box type"
msgstr ""

# ea29e006c4ca4b958cb6a293e2540e06
#: ../Doc/library/fl.rst:438
msgid "x origin"
msgstr ""

# 728708b635bf4ff0a8dbc6f541fe6d7c
#: ../Doc/library/fl.rst:440
msgid "y origin"
msgstr ""

#: ../Doc/library/fl.rst:442 ../Doc/library/ttk.rst:197
#: ../Doc/library/ttk.rst:338 ../Doc/library/ttk.rst:399
msgid "width"
msgstr ""

#: ../Doc/library/fl.rst:444 ../Doc/library/ttk.rst:316
#: ../Doc/library/ttk.rst:389 ../Doc/library/ttk.rst:721
msgid "height"
msgstr ""

# cfcf62aa89914d058f9835a8df3369c2
#: ../Doc/library/fl.rst:446
msgid ":attr:`col1`"
msgstr ""

# e058019668fd4162a45adb406221eef4
#: ../Doc/library/fl.rst:446
msgid "primary color"
msgstr ""

# 7775a0045b054902aac1009f77c691db
#: ../Doc/library/fl.rst:448
msgid ":attr:`col2`"
msgstr ""

# 3c47a5364e1b48c8a668e1cc6211ccf7
#: ../Doc/library/fl.rst:448
msgid "secondary color"
msgstr ""

# 1acda03c5f5a46699c5f8f295b8c5eb3
#: ../Doc/library/fl.rst:450
msgid ":attr:`align`"
msgstr ""

# c1d3bd447d6c4cb9b15f6f84b83d77c4
#: ../Doc/library/fl.rst:450
msgid "alignment"
msgstr ""

# 983cd8f3953045659ae69c9ca77f53bc
#: ../Doc/library/fl.rst:452
msgid ":attr:`lcol`"
msgstr ""

# c2d0c059f0f3425780ece6ec0ee76e10
#: ../Doc/library/fl.rst:452
msgid "label color"
msgstr ""

# e16c7f089d6c41efbb2fea530e6de61b
#: ../Doc/library/fl.rst:454
msgid ":attr:`lsize`"
msgstr ""

# ab75e46d27af4054ad789f159326ce95
#: ../Doc/library/fl.rst:454
msgid "label font size"
msgstr ""

# e73b487ab96248a0a61e7e62f48b74ce
#: ../Doc/library/fl.rst:456
msgid ":attr:`label`"
msgstr ""

# 5661443a67a64027b2b78de68d0b361c
#: ../Doc/library/fl.rst:456
msgid "label string"
msgstr ""

# e6af304037be4ccfbcfb8ff9b3a2a058
#: ../Doc/library/fl.rst:458
msgid ":attr:`lstyle`"
msgstr ""

# a3f0a747b301497db2553ccb4c086ff4
#: ../Doc/library/fl.rst:458
msgid "label style"
msgstr ""

# 830ccdb6df3146d49c4dde55100eed6a
#: ../Doc/library/fl.rst:460
msgid ":attr:`pushed`"
msgstr ""

# ddc827ee2aef4721bad5f5f7aa4168bb
# 911dba0a9e2b450fad12588261b07cf2
# 976abeffc2784e37b5bec1570c55b3a1
# 155f19edc91e4f41a96bf362b93670b2
# ccb56115b1f049e1a700bd0934e7349b
# 7a8353eab7d24021b2fba3c8868373ad
# e4c6e49ffd6c471aa255242780bc699a
# 36cee3334296421f96a09603ec634eae
# 5ab6a72263194a0c8504fe24542dbd81
#: ../Doc/library/fl.rst:460 ../Doc/library/fl.rst:462
#: ../Doc/library/fl.rst:464 ../Doc/library/fl.rst:466
#: ../Doc/library/fl.rst:468 ../Doc/library/fl.rst:470
#: ../Doc/library/fl.rst:472 ../Doc/library/fl.rst:474
#: ../Doc/library/fl.rst:476
msgid "(see FORMS docs)"
msgstr ""

# c69e5465c343412199c9e1662fa4e837
#: ../Doc/library/fl.rst:462
msgid ":attr:`focus`"
msgstr ""

# 27e20af9a503490ab490008243aeba19
#: ../Doc/library/fl.rst:464
msgid ":attr:`belowmouse`"
msgstr ""

# e2379ba17d0e460c94b53c372d0a0954
#: ../Doc/library/fl.rst:468
msgid ":attr:`active`"
msgstr ""

# fe51893209484742aeb9b09e88a23943
#: ../Doc/library/fl.rst:470
msgid ":attr:`input`"
msgstr ""

# fa5b8b0f1dd845c4b30a946dc569700b
#: ../Doc/library/fl.rst:474
msgid ":attr:`radio`"
msgstr ""

# 48af171572b8452a8d7c2ec633062317
#: ../Doc/library/fl.rst:476
msgid ":attr:`automatic`"
msgstr ""

# ae4f090e92bf4157b3f78876bc71aa42
#: ../Doc/library/fl.rst:481
msgid ":mod:`FL` --- Constants used with the :mod:`fl` module"
msgstr ""

# 39beb2ec4dfa4d6f86bb53e18caab7b0
#: ../Doc/library/fl.rst:493
msgid ""
"This module defines symbolic constants needed to use the built-in module :"
"mod:`fl` (see above); they are equivalent to those defined in the C header "
"file ``<forms.h>`` except that the name prefix ``FL_`` is omitted.  Read the "
"module source for a complete list of the defined names.  Suggested use::"
msgstr ""

# 2bf7bc1eb10b49b8b405a7007f71b104
#: ../Doc/library/fl.rst:503
msgid ":mod:`flp` --- Functions for loading stored FORMS designs"
msgstr ""

# ae1c235dc2ce4d96bc358b4ef3c9f45d
#: ../Doc/library/fl.rst:515
msgid ""
"This module defines functions that can read form definitions created by the "
"'form designer' (:program:`fdesign`) program that comes with the FORMS "
"library (see module :mod:`fl` above)."
msgstr ""

# a03e64f6bd5a439e8b59f76148848603
#: ../Doc/library/fl.rst:519
msgid ""
"For now, see the file :file:`flp.doc` in the Python library source directory "
"for a description."
msgstr ""

# 1bf43cbeac9c42719aa3e6404338d979
#: ../Doc/library/fl.rst:522
msgid "XXX A complete description should be inserted here!"
msgstr ""

# 9ebe61ae251b4929aed0e8ff6029b6db
#: ../Doc/library/fm.rst:3
msgid ":mod:`fm` --- *Font Manager* interface"
msgstr ""

# 2433c2fcfd734e3a8801dbe2f560007b
#: ../Doc/library/fm.rst:19
msgid ""
"This module provides access to the IRIS *Font Manager* library.   It is "
"available only on Silicon Graphics machines. See also: *4Sight User's "
"Guide*, section 1, chapter 5: \"Using the IRIS Font Manager.\""
msgstr ""

# e9199284496949a2aed88eab6c35251a
#: ../Doc/library/fm.rst:23
msgid ""
"This is not yet a full interface to the IRIS Font Manager. Among the "
"unsupported features are: matrix operations; cache operations; character "
"operations (use string operations instead); some details of font info; "
"individual glyph metrics; and printer matching."
msgstr ""

# 80e1a3e439d14a9096354ef4fe525576
#: ../Doc/library/fm.rst:28
msgid "It supports the following operations:"
msgstr ""

# 1e8574a83d244018ad9ede57f5f29f5c
#: ../Doc/library/fm.rst:33
msgid ""
"Initialization function. Calls :c:func:`fminit`. It is normally not "
"necessary to call this function, since it is called automatically the first "
"time the :mod:`fm` module is imported."
msgstr ""

# 925a9f6d719c4086a4098c7454ba21b4
#: ../Doc/library/fm.rst:40
msgid "Return a font handle object. Calls ``fmfindfont(fontname)``."
msgstr ""

# aa4f8aaa4ca547449867471ca38f168c
#: ../Doc/library/fm.rst:45
msgid ""
"Returns a list of available font names. This is an interface to :c:func:"
"`fmenumerate`."
msgstr ""

# 1882821055e64a73b5f7c067fd4ae27f
#: ../Doc/library/fm.rst:51
msgid ""
"Render a string using the current font (see the :func:`setfont` font handle "
"method below). Calls ``fmprstr(string)``."
msgstr ""

# 55e12e8f45a04df2923ce248d90d2758
#: ../Doc/library/fm.rst:57
msgid ""
"Sets the font search path. Calls ``fmsetpath(string)``. (XXX Does not "
"work!?!)"
msgstr ""

# d5a534c12f63406d9c1fcad14cd4a4b3
#: ../Doc/library/fm.rst:62
msgid "Returns the current font search path."
msgstr ""

# 9fa6e1c1d2f94086bdb477c99e908ec6
#: ../Doc/library/fm.rst:64
msgid "Font handle objects support the following operations:"
msgstr ""

# 3192878aa18346fdabbaab7b2e0fe8cd
#: ../Doc/library/fm.rst:69
msgid ""
"Returns a handle for a scaled version of this font. Calls ``fmscalefont(fh, "
"factor)``."
msgstr ""

# f5dadd8b14624d54b64484a9407244f7
#: ../Doc/library/fm.rst:75
msgid ""
"Makes this font the current font. Note: the effect is undone silently when "
"the font handle object is deleted. Calls ``fmsetfont(fh)``."
msgstr ""

# aa629dedf1c7411e99bab25fdedf6c0c
#: ../Doc/library/fm.rst:81
msgid "Returns this font's name. Calls ``fmgetfontname(fh)``."
msgstr ""

# f1ba6752bc5a45b7be5078cfe24d43f0
#: ../Doc/library/fm.rst:86
msgid ""
"Returns the comment string associated with this font. Raises an exception if "
"there is none. Calls ``fmgetcomment(fh)``."
msgstr ""

# b33643e6dfd642c6bcc3e871d7d9ded1
#: ../Doc/library/fm.rst:92
msgid ""
"Returns a tuple giving some pertinent data about this font. This is an "
"interface to ``fmgetfontinfo()``. The returned tuple contains the following "
"numbers: ``(printermatched, fixed_width, xorig, yorig, xsize, ysize, height, "
"nglyphs)``."
msgstr ""

# a0cf760c2c804faeb2f9e8ce45360625
#: ../Doc/library/fm.rst:99
msgid ""
"Returns the width, in pixels, of *string* when drawn in this font. Calls "
"``fmgetstrwidth(fh, string)``."
msgstr ""

#: ../Doc/library/fnmatch.rst:2
msgid ":mod:`fnmatch` --- Unix filename pattern matching"
msgstr ""

# db07ea84955a4edabfd98890ca509883
#: ../Doc/library/fnmatch.rst:12
msgid "**Source code:** :source:`Lib/fnmatch.py`"
msgstr ""

#: ../Doc/library/fnmatch.rst:16
msgid ""
"This module provides support for Unix shell-style wildcards, which are *not* "
"the same as regular expressions (which are documented in the :mod:`re` "
"module).  The special characters used in shell-style wildcards are:"
msgstr ""

#: ../Doc/library/fnmatch.rst:21
msgid "Pattern"
msgstr ""

#: ../Doc/library/fnmatch.rst:23 ../Doc/library/xml.etree.elementtree.rst:316
msgid "``*``"
msgstr ""

#: ../Doc/library/fnmatch.rst:23
msgid "matches everything"
msgstr ""

#: ../Doc/library/fnmatch.rst:25 ../Doc/library/posixfile.rst:128
#: ../Doc/library/posixfile.rst:166 ../Doc/library/struct.rst:176
msgid "``?``"
msgstr ""

#: ../Doc/library/fnmatch.rst:25
msgid "matches any single character"
msgstr ""

#: ../Doc/library/fnmatch.rst:27
msgid "``[seq]``"
msgstr ""

#: ../Doc/library/fnmatch.rst:27
msgid "matches any character in *seq*"
msgstr ""

#: ../Doc/library/fnmatch.rst:29
msgid "``[!seq]``"
msgstr ""

#: ../Doc/library/fnmatch.rst:29
msgid "matches any character not in *seq*"
msgstr ""

#: ../Doc/library/fnmatch.rst:34
msgid ""
"Note that the filename separator (``'/'`` on Unix) is *not* special to this "
"module.  See module :mod:`glob` for pathname expansion (:mod:`glob` uses :"
"func:`fnmatch` to match pathname segments).  Similarly, filenames starting "
"with a period are not special for this module, and are matched by the ``*`` "
"and ``?`` patterns."
msgstr ""

#: ../Doc/library/fnmatch.rst:43
msgid ""
"Test whether the *filename* string matches the *pattern* string, returning :"
"const:`True` or :const:`False`.  If the operating system is case-"
"insensitive, then both parameters will be normalized to all lower- or upper-"
"case before the comparison is performed.  :func:`fnmatchcase` can be used to "
"perform a case-sensitive comparison, regardless of whether that's standard "
"for the operating system."
msgstr ""

#: ../Doc/library/fnmatch.rst:50
msgid ""
"This example will print all file names in the current directory with the "
"extension ``.txt``::"
msgstr ""

#: ../Doc/library/fnmatch.rst:63
msgid ""
"Test whether *filename* matches *pattern*, returning :const:`True` or :const:"
"`False`; the comparison is case-sensitive."
msgstr ""

#: ../Doc/library/fnmatch.rst:69
msgid ""
"Return the subset of the list of *names* that match *pattern*. It is the "
"same as ``[n for n in names if fnmatch(n, pattern)]``, but implemented more "
"efficiently."
msgstr ""

#: ../Doc/library/fnmatch.rst:77
msgid "Return the shell-style *pattern* converted to a regular expression."
msgstr ""

# fb129a92ea164e8c862eafe0d54f0aa5
#: ../Doc/library/fnmatch.rst:79
msgid "Be aware there is no way to quote meta-characters."
msgstr ""

#: ../Doc/library/fnmatch.rst:96
msgid "Unix shell-style path expansion."
msgstr ""

#: ../Doc/library/formatter.rst:3
msgid ":mod:`formatter` --- Generic output formatting"
msgstr ""

# 6eb089350c7c48a7bc524a19c0fbbd7e
#: ../Doc/library/formatter.rst:11
msgid ""
"This module supports two interface definitions, each with multiple "
"implementations.  The *formatter* interface is used by the :class:"
"`HTMLParser` class of the :mod:`htmllib` module, and the *writer* interface "
"is required by the formatter interface."
msgstr ""

#: ../Doc/library/formatter.rst:16
msgid ""
"Formatter objects transform an abstract flow of formatting events into "
"specific output events on writer objects.  Formatters manage several stack "
"structures to allow various properties of a writer object to be changed and "
"restored; writers need not be able to handle relative changes nor any sort "
"of \"change back\" operation.  Specific writer properties which may be "
"controlled via formatter objects are horizontal alignment, font, and left "
"margin indentations.  A mechanism is provided which supports providing "
"arbitrary, non-exclusive style settings to a writer as well.  Additional "
"interfaces facilitate formatting events which are not reversible, such as "
"paragraph separation."
msgstr ""

#: ../Doc/library/formatter.rst:26
msgid ""
"Writer objects encapsulate device interfaces.  Abstract devices, such as "
"file formats, are supported as well as physical devices.  The provided "
"implementations all work with abstract devices.  The interface makes "
"available mechanisms for setting the properties which formatter objects "
"manage and inserting data into the output."
msgstr ""

#: ../Doc/library/formatter.rst:36
msgid "The Formatter Interface"
msgstr ""

#: ../Doc/library/formatter.rst:38
msgid ""
"Interfaces to create formatters are dependent on the specific formatter "
"class being instantiated.  The interfaces described below are the required "
"interfaces which all formatters must support once initialized."
msgstr ""

#: ../Doc/library/formatter.rst:42
msgid "One data element is defined at the module level:"
msgstr ""

#: ../Doc/library/formatter.rst:47
msgid ""
"Value which can be used in the font specification passed to the ``push_font()"
"`` method described below, or as the new value to any other ``push_property()"
"`` method.  Pushing the ``AS_IS`` value allows the corresponding "
"``pop_property()`` method to be called without having to track whether the "
"property was changed."
msgstr ""

#: ../Doc/library/formatter.rst:52
msgid "The following attributes are defined for formatter instance objects:"
msgstr ""

#: ../Doc/library/formatter.rst:57
msgid "The writer instance with which the formatter interacts."
msgstr ""

#: ../Doc/library/formatter.rst:62
msgid ""
"Close any open paragraphs and insert at least *blanklines* before the next "
"paragraph."
msgstr ""

#: ../Doc/library/formatter.rst:68
msgid ""
"Add a hard line break if one does not already exist.  This does not break "
"the logical paragraph."
msgstr ""

#: ../Doc/library/formatter.rst:74
msgid ""
"Insert a horizontal rule in the output.  A hard break is inserted if there "
"is data in the current paragraph, but the logical paragraph is not broken.  "
"The arguments and keywords are passed on to the writer's :meth:"
"`send_line_break` method."
msgstr ""

#: ../Doc/library/formatter.rst:82
msgid ""
"Provide data which should be formatted with collapsed whitespace. Whitespace "
"from preceding and successive calls to :meth:`add_flowing_data` is "
"considered as well when the whitespace collapse is performed.  The data "
"which is passed to this method is expected to be word-wrapped by the output "
"device.  Note that any word-wrapping still must be performed by the writer "
"object due to the need to rely on device and font information."
msgstr ""

#: ../Doc/library/formatter.rst:92
msgid ""
"Provide data which should be passed to the writer unchanged. Whitespace, "
"including newline and tab characters, are considered legal in the value of "
"*data*."
msgstr ""

#: ../Doc/library/formatter.rst:99
msgid ""
"Insert a label which should be placed to the left of the current left "
"margin. This should be used for constructing bulleted or numbered lists.  If "
"the *format* value is a string, it is interpreted as a format specification "
"for *counter*, which should be an integer. The result of this formatting "
"becomes the value of the label; if *format* is not a string it is used as "
"the label value directly. The label value is passed as the only argument to "
"the writer's :meth:`send_label_data` method.  Interpretation of non-string "
"label values is dependent on the associated writer."
msgstr ""

#: ../Doc/library/formatter.rst:108
msgid ""
"Format specifications are strings which, in combination with a counter "
"value, are used to compute label values.  Each character in the format "
"string is copied to the label value, with some characters recognized to "
"indicate a transform on the counter value.  Specifically, the character "
"``'1'`` represents the counter value formatter as an Arabic number, the "
"characters ``'A'`` and ``'a'`` represent alphabetic representations of the "
"counter value in upper and lower case, respectively, and ``'I'`` and ``'i'`` "
"represent the counter value in Roman numerals, in upper and lower case.  "
"Note that the alphabetic and roman transforms require that the counter value "
"be greater than zero."
msgstr ""

#: ../Doc/library/formatter.rst:121
msgid ""
"Send any pending whitespace buffered from a previous call to :meth:"
"`add_flowing_data` to the associated writer object.  This should be called "
"before any direct manipulation of the writer object."
msgstr ""

#: ../Doc/library/formatter.rst:128
msgid ""
"Push a new alignment setting onto the alignment stack.  This may be :const:"
"`AS_IS` if no change is desired.  If the alignment value is changed from the "
"previous setting, the writer's :meth:`new_alignment` method is called with "
"the *align* value."
msgstr ""

#: ../Doc/library/formatter.rst:136
msgid "Restore the previous alignment."
msgstr ""

#: ../Doc/library/formatter.rst:141
msgid ""
"Change some or all font properties of the writer object.  Properties which "
"are not set to :const:`AS_IS` are set to the values passed in while others "
"are maintained at their current settings.  The writer's :meth:`new_font` "
"method is called with the fully resolved font specification."
msgstr ""

#: ../Doc/library/formatter.rst:149
msgid "Restore the previous font."
msgstr ""

#: ../Doc/library/formatter.rst:154
msgid ""
"Increase the number of left margin indentations by one, associating the "
"logical tag *margin* with the new indentation.  The initial margin level is "
"``0``. Changed values of the logical tag must be true values; false values "
"other than :const:`AS_IS` are not sufficient to change the margin."
msgstr ""

#: ../Doc/library/formatter.rst:162
msgid "Restore the previous margin."
msgstr ""

#: ../Doc/library/formatter.rst:167
msgid ""
"Push any number of arbitrary style specifications.  All styles are pushed "
"onto the styles stack in order.  A tuple representing the entire stack, "
"including :const:`AS_IS` values, is passed to the writer's :meth:"
"`new_styles` method."
msgstr ""

#: ../Doc/library/formatter.rst:174
msgid ""
"Pop the last *n* style specifications passed to :meth:`push_style`.  A tuple "
"representing the revised stack, including :const:`AS_IS` values, is passed "
"to the writer's :meth:`new_styles` method."
msgstr ""

#: ../Doc/library/formatter.rst:181
msgid "Set the spacing style for the writer."
msgstr ""

#: ../Doc/library/formatter.rst:186
msgid ""
"Inform the formatter that data has been added to the current paragraph out-"
"of-band.  This should be used when the writer has been manipulated "
"directly.  The optional *flag* argument can be set to false if the writer "
"manipulations produced a hard line break at the end of the output."
msgstr ""

#: ../Doc/library/formatter.rst:195
msgid "Formatter Implementations"
msgstr ""

#: ../Doc/library/formatter.rst:197
msgid ""
"Two implementations of formatter objects are provided by this module. Most "
"applications may use one of these classes without modification or "
"subclassing."
msgstr ""

#: ../Doc/library/formatter.rst:203
msgid ""
"A formatter which does nothing.  If *writer* is omitted, a :class:"
"`NullWriter` instance is created.  No methods of the writer are called by :"
"class:`NullFormatter` instances.  Implementations should inherit from this "
"class if implementing a writer interface but don't need to inherit any "
"implementation."
msgstr ""

#: ../Doc/library/formatter.rst:212
msgid ""
"The standard formatter.  This implementation has demonstrated wide "
"applicability to many writers, and may be used directly in most "
"circumstances.  It has been used to implement a full-featured World Wide Web "
"browser."
msgstr ""

#: ../Doc/library/formatter.rst:220
msgid "The Writer Interface"
msgstr ""

#: ../Doc/library/formatter.rst:222
msgid ""
"Interfaces to create writers are dependent on the specific writer class "
"being instantiated.  The interfaces described below are the required "
"interfaces which all writers must support once initialized. Note that while "
"most applications can use the :class:`AbstractFormatter` class as a "
"formatter, the writer must typically be provided by the application."
msgstr ""

#: ../Doc/library/formatter.rst:231
msgid "Flush any buffered output or device control events."
msgstr ""

#: ../Doc/library/formatter.rst:236
msgid ""
"Set the alignment style.  The *align* value can be any object, but by "
"convention is a string or ``None``, where ``None`` indicates that the "
"writer's \"preferred\" alignment should be used. Conventional *align* values "
"are ``'left'``, ``'center'``, ``'right'``, and ``'justify'``."
msgstr ""

#: ../Doc/library/formatter.rst:244
msgid ""
"Set the font style.  The value of *font* will be ``None``, indicating that "
"the device's default font should be used, or a tuple of the form ``(size, "
"italic, bold, teletype)``.  Size will be a string indicating the size of "
"font that should be used; specific strings and their interpretation must be "
"defined by the application.  The *italic*, *bold*, and *teletype* values are "
"Boolean values specifying which of those font attributes should be used."
msgstr ""

#: ../Doc/library/formatter.rst:254
msgid ""
"Set the margin level to the integer *level* and the logical tag to *margin*. "
"Interpretation of the logical tag is at the writer's discretion; the only "
"restriction on the value of the logical tag is that it not be a false value "
"for non-zero values of *level*."
msgstr ""

#: ../Doc/library/formatter.rst:262
msgid "Set the spacing style to *spacing*."
msgstr ""

#: ../Doc/library/formatter.rst:267
msgid ""
"Set additional styles.  The *styles* value is a tuple of arbitrary values; "
"the value :const:`AS_IS` should be ignored.  The *styles* tuple may be "
"interpreted either as a set or as a stack depending on the requirements of "
"the application and writer implementation."
msgstr ""

#: ../Doc/library/formatter.rst:275
msgid "Break the current line."
msgstr ""

#: ../Doc/library/formatter.rst:280
msgid ""
"Produce a paragraph separation of at least *blankline* blank lines, or the "
"equivalent.  The *blankline* value will be an integer.  Note that the "
"implementation will receive a call to :meth:`send_line_break` before this "
"call if a line break is needed;  this method should not include ending the "
"last line of the paragraph. It is only responsible for vertical spacing "
"between paragraphs."
msgstr ""

#: ../Doc/library/formatter.rst:290
msgid ""
"Display a horizontal rule on the output device.  The arguments to this "
"method are entirely application- and writer-specific, and should be "
"interpreted with care.  The method implementation may assume that a line "
"break has already been issued via :meth:`send_line_break`."
msgstr ""

#: ../Doc/library/formatter.rst:298
msgid ""
"Output character data which may be word-wrapped and re-flowed as needed.  "
"Within any sequence of calls to this method, the writer may assume that "
"spans of multiple whitespace characters have been collapsed to single space "
"characters."
msgstr ""

#: ../Doc/library/formatter.rst:305
msgid ""
"Output character data which has already been formatted for display.  "
"Generally, this should be interpreted to mean that line breaks indicated by "
"newline characters should be preserved and no new line breaks should be "
"introduced.  The data may contain embedded newline and tab characters, "
"unlike data provided to the :meth:`send_formatted_data` interface."
msgstr ""

#: ../Doc/library/formatter.rst:314
msgid ""
"Set *data* to the left of the current left margin, if possible. The value of "
"*data* is not restricted; treatment of non-string values is entirely "
"application- and writer-dependent.  This method will only be called at the "
"beginning of a line."
msgstr ""

#: ../Doc/library/formatter.rst:323
msgid "Writer Implementations"
msgstr ""

#: ../Doc/library/formatter.rst:325
msgid ""
"Three implementations of the writer object interface are provided as "
"examples by this module.  Most applications will need to derive new writer "
"classes from the :class:`NullWriter` class."
msgstr ""

#: ../Doc/library/formatter.rst:332
msgid ""
"A writer which only provides the interface definition; no actions are taken "
"on any methods.  This should be the base class for all writers which do not "
"need to inherit any implementation methods."
msgstr ""

#: ../Doc/library/formatter.rst:339
msgid ""
"A writer which can be used in debugging formatters, but not much else.  Each "
"method simply announces itself by printing its name and arguments on "
"standard output."
msgstr ""

# ba755a6c86ab47ef8488b5cabb8eb54d
#: ../Doc/library/formatter.rst:346
msgid ""
"Simple writer class which writes output on the file object passed in as "
"*file* or, if *file* is None, on standard output.  The output is simply word-"
"wrapped to the number of columns specified by *maxcol*.  This class is "
"suitable for reflowing a sequence of paragraphs."
msgstr ""

#: ../Doc/library/fpectl.rst:3
msgid ":mod:`fpectl` --- Floating point exception control"
msgstr ""

#: ../Doc/library/fpectl.rst:14
msgid ""
"The :mod:`fpectl` module is not built by default, and its usage is "
"discouraged and may be dangerous except in the hands of experts.  See also "
"the section :ref:`fpectl-limitations` on limitations for more details."
msgstr ""

#: ../Doc/library/fpectl.rst:20
msgid ""
"Most computers carry out floating point operations in conformance with the "
"so-called IEEE-754 standard. On any real computer, some floating point "
"operations produce results that cannot be expressed as a normal floating "
"point value. For example, try ::"
msgstr ""

#: ../Doc/library/fpectl.rst:31
msgid ""
"(The example above will work on many platforms. DEC Alpha may be one "
"exception.) \"Inf\" is a special, non-numeric value in IEEE-754 that stands "
"for \"infinity\", and \"nan\" means \"not a number.\" Note that, other than "
"the non-numeric results, nothing special happened when you asked Python to "
"carry out those calculations. That is in fact the default behaviour "
"prescribed in the IEEE-754 standard, and if it works for you, stop reading "
"now."
msgstr ""

#: ../Doc/library/fpectl.rst:38
msgid ""
"In some circumstances, it would be better to raise an exception and stop "
"processing at the point where the faulty operation was attempted. The :mod:"
"`fpectl` module is for use in that situation. It provides control over "
"floating point units from several hardware manufacturers, allowing the user "
"to turn on the generation of :const:`SIGFPE` whenever any of the IEEE-754 "
"exceptions Division by Zero, Overflow, or Invalid Operation occurs. In "
"tandem with a pair of wrapper macros that are inserted into the C code "
"comprising your python system, :const:`SIGFPE` is trapped and converted into "
"the Python :exc:`FloatingPointError` exception."
msgstr ""

#: ../Doc/library/fpectl.rst:48
msgid ""
"The :mod:`fpectl` module defines the following functions and may raise the "
"given exception:"
msgstr ""

#: ../Doc/library/fpectl.rst:54
msgid ""
"Turn on the generation of :const:`SIGFPE`, and set up an appropriate signal "
"handler."
msgstr ""

#: ../Doc/library/fpectl.rst:60
msgid "Reset default handling of floating point exceptions."
msgstr ""

#: ../Doc/library/fpectl.rst:65
msgid ""
"After :func:`turnon_sigfpe` has been executed, a floating point operation "
"that raises one of the IEEE-754 exceptions Division by Zero, Overflow, or "
"Invalid operation will in turn raise this standard Python exception."
msgstr ""

#: ../Doc/library/fpectl.rst:75
msgid ""
"The following example demonstrates how to start up and test operation of "
"the :mod:`fpectl` module. ::"
msgstr ""

#: ../Doc/library/fpectl.rst:98
msgid "Limitations and other considerations"
msgstr ""

#: ../Doc/library/fpectl.rst:100
msgid ""
"Setting up a given processor to trap IEEE-754 floating point errors "
"currently requires custom code on a per-architecture basis. You may have to "
"modify :mod:`fpectl` to control your particular hardware."
msgstr ""

#: ../Doc/library/fpectl.rst:104
msgid ""
"Conversion of an IEEE-754 exception to a Python exception requires that the "
"wrapper macros ``PyFPE_START_PROTECT`` and ``PyFPE_END_PROTECT`` be inserted "
"into your code in an appropriate fashion.  Python itself has been modified "
"to support the :mod:`fpectl` module, but many other codes of interest to "
"numerical analysts have not."
msgstr ""

#: ../Doc/library/fpectl.rst:110
msgid "The :mod:`fpectl` module is not thread-safe."
msgstr ""

# ff66bfe88f29438ea750012ed3716072
#: ../Doc/library/fpectl.rst:115
msgid ""
"Some files in the source distribution may be interesting in learning more "
"about how this module operates. The include file :source:`Include/pyfpe.h` "
"discusses the implementation of this module at some length. :source:`Modules/"
"fpetestmodule.c` gives several examples of use. Many additional examples can "
"be found in :source:`Objects/floatobject.c`."
msgstr ""

# 593e1c90e3194f409ab6800fe1eaefaa
#: ../Doc/library/fpformat.rst:3
msgid ":mod:`fpformat` --- Floating point conversions"
msgstr ""

# 24c2cb2fec9e49bc9687aa9bb1b0c1a3
#: ../Doc/library/fpformat.rst:15
msgid ""
"The :mod:`fpformat` module defines functions for dealing with floating point "
"numbers representations in 100% pure Python."
msgstr ""

# d0126fc6d3d24c1ca870aeac31b5363d
#: ../Doc/library/fpformat.rst:20
msgid ""
"This module is unnecessary: everything here can be done using the ``%`` "
"string interpolation operator described in the :ref:`string-formatting` "
"section."
msgstr ""

# 8559737414834f82b5f8b2c5e28d5778
#: ../Doc/library/fpformat.rst:23
msgid ""
"The :mod:`fpformat` module defines the following functions and an exception:"
msgstr ""

# 22c3be20dc754c77b64d0a63992301f3
#: ../Doc/library/fpformat.rst:28
msgid ""
"Format *x* as ``[-]ddd.ddd`` with *digs* digits after the point and at least "
"one digit before. If ``digs <= 0``, the decimal point is suppressed."
msgstr ""

# 83c6435dc0c74b959182d293f418dae8
#: ../Doc/library/fpformat.rst:31
msgid ""
"*x* can be either a number or a string that looks like one. *digs* is an "
"integer."
msgstr ""

# 77e0853275354000954f46f91d2a5ee2
# 69458534f7f443208dee5fc3869aa4f7
#: ../Doc/library/fpformat.rst:34 ../Doc/library/fpformat.rst:46
msgid "Return value is a string."
msgstr ""

# 6103636ce0e0411799ffa3573e79792d
#: ../Doc/library/fpformat.rst:39
msgid ""
"Format *x* as ``[-]d.dddE[+-]ddd`` with *digs* digits after the  point and "
"exactly one digit before. If ``digs <= 0``, one digit is kept and the point "
"is suppressed."
msgstr ""

# 5acd8dbd98424938993ddcb8953a9544
#: ../Doc/library/fpformat.rst:43
msgid ""
"*x* can be either a real number, or a string that looks like one. *digs* is "
"an integer."
msgstr ""

# b28dcdda36c44ab5b20982fb74604695
#: ../Doc/library/fpformat.rst:51
msgid ""
"Exception raised when a string passed to :func:`fix` or :func:`sci` as the "
"*x* parameter does not look like a number. This is a subclass of :exc:"
"`ValueError` when the standard exceptions are strings.  The exception value "
"is the improperly formatted string that caused the exception to be raised."
msgstr ""

#: ../Doc/library/fractions.rst:2
msgid ":mod:`fractions` --- Rational numbers"
msgstr ""

# 239521c49254455083a02b5f76c1a6f5
#: ../Doc/library/fractions.rst:10
msgid "**Source code:** :source:`Lib/fractions.py`"
msgstr ""

#: ../Doc/library/fractions.rst:14
msgid ""
"The :mod:`fractions` module provides support for rational number arithmetic."
msgstr ""

#: ../Doc/library/fractions.rst:17
msgid ""
"A Fraction instance can be constructed from a pair of integers, from another "
"rational number, or from a string."
msgstr ""

#: ../Doc/library/fractions.rst:26
msgid ""
"The first version requires that *numerator* and *denominator* are instances "
"of :class:`numbers.Rational` and returns a new :class:`Fraction` instance "
"with value ``numerator/denominator``. If *denominator* is :const:`0`, it "
"raises a :exc:`ZeroDivisionError`. The second version requires that "
"*other_fraction* is an instance of :class:`numbers.Rational` and returns a :"
"class:`Fraction` instance with the same value.  The next two versions accept "
"either a :class:`float` or a :class:`decimal.Decimal` instance, and return "
"a :class:`Fraction` instance with exactly the same value.  Note that due to "
"the usual issues with binary floating-point (see :ref:`tut-fp-issues`), the "
"argument to ``Fraction(1.1)`` is not exactly equal to 11/10, and so "
"``Fraction(1.1)`` does *not* return ``Fraction(11, 10)`` as one might "
"expect. (But see the documentation for the :meth:`limit_denominator` method "
"below.) The last version of the constructor expects a string or unicode "
"instance. The usual form for this instance is::"
msgstr ""

#: ../Doc/library/fractions.rst:43
msgid ""
"where the optional ``sign`` may be either '+' or '-' and ``numerator`` and "
"``denominator`` (if present) are strings of decimal digits.  In addition, "
"any string that represents a finite value and is accepted by the :class:"
"`float` constructor is also accepted by the :class:`Fraction` constructor.  "
"In either form the input string may also have leading and/or trailing "
"whitespace. Here are some examples::"
msgstr ""

#: ../Doc/library/fractions.rst:78
msgid ""
"The :class:`Fraction` class inherits from the abstract base class :class:"
"`numbers.Rational`, and implements all of the methods and operations from "
"that class.  :class:`Fraction` instances are hashable, and should be treated "
"as immutable.  In addition, :class:`Fraction` has the following methods:"
msgstr ""

#: ../Doc/library/fractions.rst:91
msgid ""
"This class method constructs a :class:`Fraction` representing the exact "
"value of *flt*, which must be a :class:`float`. Beware that ``Fraction."
"from_float(0.3)`` is not the same value as ``Fraction(3, 10)``"
msgstr ""

# f5e52d177bf0447c915546e02e7a7080
#: ../Doc/library/fractions.rst:95
msgid ""
"From Python 2.7 onwards, you can also construct a :class:`Fraction` instance "
"directly from a :class:`float`."
msgstr ""

# 8b96fd43622a4a4f9c0e00d146d29e6e
#: ../Doc/library/fractions.rst:101
msgid ""
"This class method constructs a :class:`Fraction` representing the exact "
"value of *dec*, which must be a :class:`decimal.Decimal`."
msgstr ""

# c81aa7cc73b74b73ba0560aefa83b97e
#: ../Doc/library/fractions.rst:104
msgid ""
"From Python 2.7 onwards, you can also construct a :class:`Fraction` instance "
"directly from a :class:`decimal.Decimal` instance."
msgstr ""

#: ../Doc/library/fractions.rst:111
msgid ""
"Finds and returns the closest :class:`Fraction` to ``self`` that has "
"denominator at most max_denominator.  This method is useful for finding "
"rational approximations to a given floating-point number:"
msgstr ""

#: ../Doc/library/fractions.rst:119
msgid "or for recovering a rational number that's represented as a float:"
msgstr ""

#: ../Doc/library/fractions.rst:132
msgid ""
"Return the greatest common divisor of the integers *a* and *b*.  If either "
"*a* or *b* is nonzero, then the absolute value of ``gcd(a, b)`` is the "
"largest integer that divides both *a* and *b*.  ``gcd(a,b)`` has the same "
"sign as *b* if *b* is nonzero; otherwise it takes the sign of *a*.  ``gcd(0, "
"0)`` returns ``0``."
msgstr ""

#: ../Doc/library/fractions.rst:142
msgid "The abstract base classes making up the numeric tower."
msgstr ""

# ee668df2252448309ac007665bf6be1d
#: ../Doc/library/framework.rst:3
msgid ":mod:`FrameWork` --- Interactive application framework"
msgstr ""

# 8e201b3c83a0426da07437754007912f
#: ../Doc/library/framework.rst:11
msgid ""
"The :mod:`FrameWork` module contains classes that together provide a "
"framework for an interactive Macintosh application. The programmer builds an "
"application by creating subclasses that override various methods of the "
"bases classes, thereby implementing the functionality wanted. Overriding "
"functionality can often be done on various different levels, i.e. to handle "
"clicks in a single dialog window in a non-standard way it is not necessary "
"to override the complete event handling."
msgstr ""

# c01328ae2bf3469dbf960ded6205982e
#: ../Doc/library/framework.rst:23
msgid ""
"Work on the :mod:`FrameWork` has pretty much stopped, now that :mod:`PyObjC` "
"is available for full Cocoa access from Python, and the documentation "
"describes only the most important functionality, and not in the most logical "
"manner at that. Examine the source or the examples for more details.  The "
"following are some comments posted on the MacPython newsgroup about the "
"strengths and limitations of :mod:`FrameWork`:"
msgstr ""

# 235c2005f8b6480eb7ab44638728cd1e
#: ../Doc/library/framework.rst:33
msgid ""
"The strong point of :mod:`FrameWork` is that it allows you to break into the "
"control-flow at many different places. :mod:`W`, for instance, uses a "
"different way to enable/disable menus and that plugs right in leaving the "
"rest intact. The weak points of :mod:`FrameWork` are that it has no abstract "
"command interface (but that shouldn't be difficult), that its dialog support "
"is minimal and that its control/toolbar support is non-existent."
msgstr ""

# 4b8d2d8e96a84619a7693dbdd8850e9c
#: ../Doc/library/framework.rst:40
msgid "The :mod:`FrameWork` module defines the following functions:"
msgstr ""

# 9a425d598b424989992a39208ad5992b
#: ../Doc/library/framework.rst:45
msgid ""
"An object representing the complete application. See below for a description "
"of the methods. The default :meth:`__init__` routine creates an empty window "
"dictionary and a menu bar with an apple menu."
msgstr ""

# 58238b51db6d4df5b0345aeeaf0121c6
#: ../Doc/library/framework.rst:52
msgid ""
"An object representing the menubar. This object is usually not created by "
"the user."
msgstr ""

# d38f6a65e6194dfa963a9166359befe5
#: ../Doc/library/framework.rst:58
msgid ""
"An object representing a menu. Upon creation you pass the ``MenuBar`` the "
"menu appears in, the *title* string and a position (1-based) *after* where "
"the menu should appear (default: at the end)."
msgstr ""

# 7d92d92d6d494ee097fb994d771855c5
#: ../Doc/library/framework.rst:65
msgid ""
"Create a menu item object. The arguments are the menu to create, the item "
"title string and optionally the keyboard shortcut and a callback routine. "
"The callback is called with the arguments menu-id, item number within menu "
"(1-based), current front window and the event record."
msgstr ""

# f3f86682b9ad414cb0febd9e2f6100ed
#: ../Doc/library/framework.rst:70
msgid ""
"Instead of a callable object the callback can also be a string. In this case "
"menu selection causes the lookup of a method in the topmost window and the "
"application. The method name is the callback string with ``'domenu_'`` "
"prepended."
msgstr ""

# 029e171be83a45818bc1d3bdffaea296
#: ../Doc/library/framework.rst:75
msgid ""
"Calling the ``MenuBar`` :meth:`fixmenudimstate` method sets the correct "
"dimming for all menu items based on the current front window."
msgstr ""

# 9d8acb4f3c5f4078b286523705deae2b
#: ../Doc/library/framework.rst:81
msgid "Add a separator to the end of a menu."
msgstr ""

# 9d712f475c9844779571ef0daea28144
#: ../Doc/library/framework.rst:86
msgid ""
"Create a submenu named *label* under menu *menu*. The menu object is "
"returned."
msgstr ""

# 1c95c9367f15484abc7df263eb53b6a6
#: ../Doc/library/framework.rst:91
msgid ""
"Creates a (modeless) window. *Parent* is the application object to which the "
"window belongs. The window is not displayed until later."
msgstr ""

# 55dd7cef25364c29988f800208cb373c
#: ../Doc/library/framework.rst:97
msgid "Creates a modeless dialog window."
msgstr ""

# d328ad2f4067456482fd2c8b8a7fbaf0
#: ../Doc/library/framework.rst:102
msgid ""
"Return a ``(left, top, right, bottom)`` tuple suitable for creation of a "
"window of given width and height. The window will be staggered with respect "
"to previous windows, and an attempt is made to keep the whole window on-"
"screen. However, the window will however always be the exact size given, so "
"parts may be offscreen."
msgstr ""

# af23bd4cba1644f59d491fe48d30eb6d
#: ../Doc/library/framework.rst:110
msgid "Set the mouse cursor to a watch."
msgstr ""

# 530d80b1364146ffa6b863f597f3f095
#: ../Doc/library/framework.rst:115
msgid "Set the mouse cursor to an arrow."
msgstr ""

# 1b3e82987fa44b72a8b189de100e9073
#: ../Doc/library/framework.rst:121
msgid "Application Objects"
msgstr ""

# 5d76e46c393f406ca993e3cb1c28b559
#: ../Doc/library/framework.rst:123
msgid "Application objects have the following methods, among others:"
msgstr ""

# 7f72569e551e41b08859d72b7dcd7c60
#: ../Doc/library/framework.rst:128
msgid ""
"Override this method if you need menus in your application. Append the menus "
"to the attribute :attr:`menubar`."
msgstr ""

# 83eb46c05a78423f8da0531c152432c5
#: ../Doc/library/framework.rst:134
msgid ""
"Override this method to return a text string describing your application. "
"Alternatively, override the :meth:`do_about` method for more elaborate "
"\"about\" messages."
msgstr ""

# 29e03be01efc4dddaf435d4741e4070c
#: ../Doc/library/framework.rst:141
msgid ""
"This routine is the main event loop, call it to set your application "
"rolling. *Mask* is the mask of events you want to handle, *wait* is the "
"number of ticks you want to leave to other concurrent application (default "
"0, which is probably not a good idea). While raising *self* to exit the "
"mainloop is still supported it is not recommended: call ``self._quit()`` "
"instead."
msgstr ""

# f16714551fa843c1ab53ca7db9f7641a
#: ../Doc/library/framework.rst:147
msgid ""
"The event loop is split into many small parts, each of which can be "
"overridden. The default methods take care of dispatching events to windows "
"and dialogs, handling drags and resizes, Apple Events, events for non-"
"FrameWork windows, etc."
msgstr ""

# c44df47cd4a845b1a5117204feaf56b7
#: ../Doc/library/framework.rst:151
msgid ""
"In general, all event handlers should return ``1`` if the event is fully "
"handled and ``0`` otherwise (because the front window was not a FrameWork "
"window, for instance). This is needed so that update events and such can be "
"passed on to other windows like the Sioux console window. Calling :func:"
"`MacOS.HandleEvent` is not allowed within *our_dispatch* or its callees, "
"since this may result in an infinite loop if the code is called through the "
"Python inner-loop event handler."
msgstr ""

# 913b87bfd61a4c90becbd26f559778c0
#: ../Doc/library/framework.rst:161
msgid ""
"Call this method with a nonzero parameter to enable asynchronous event "
"handling. This will tell the inner interpreter loop to call the application "
"event handler *async_dispatch* whenever events are available. This will "
"cause FrameWork window updates and the user interface to remain working "
"during long computations, but will slow the interpreter down and may cause "
"surprising results in non-reentrant code (such as FrameWork itself). By "
"default *async_dispatch* will immediately call *our_dispatch* but you may "
"override this to handle only certain events asynchronously. Events you do "
"not handle will be passed to Sioux and such."
msgstr ""

# 2323826033d24113b389e8b6b5a7fa82
#: ../Doc/library/framework.rst:170
msgid "The old on/off value is returned."
msgstr ""

# cf06d78ea04d42c6ad6881e73c276516
#: ../Doc/library/framework.rst:175
msgid ""
"Terminate the running :meth:`mainloop` call at the next convenient moment."
msgstr ""

# ec2ea1599e7a4e7a86459a8392e22400
#: ../Doc/library/framework.rst:180
msgid ""
"The user typed character *c*. The complete details of the event can be found "
"in the *event* structure. This method can also be provided in a ``Window`` "
"object, which overrides the application-wide handler if the window is "
"frontmost."
msgstr ""

# bd29ab0560034aaba7d85fba64f24f24
#: ../Doc/library/framework.rst:187
msgid ""
"Called early in the event loop to handle modeless dialog events. The default "
"method simply dispatches the event to the relevant dialog (not through the "
"``DialogWindow`` object involved). Override if you need special handling of "
"dialog events (keyboard shortcuts, etc)."
msgstr ""

# 65b7da0bd6ce4aed9d6cd706d3f9835f
#: ../Doc/library/framework.rst:195
msgid ""
"Called by the main event loop when no events are available. The null-event "
"is passed (so you can look at mouse position, etc)."
msgstr ""

# 0d3a27835c6448868aeabf6bc831e04c
#: ../Doc/library/framework.rst:204
msgid "Window objects have the following methods, among others:"
msgstr ""

# b57db5a0b61443128e6712e771c5e29a
#: ../Doc/library/framework.rst:209
msgid ""
"Override this method to open a window. Store the Mac OS window-id in :attr:"
"`self.wid` and call the :meth:`do_postopen` method to register the window "
"with the parent application."
msgstr ""

# 46e7d4f89f944dc8a88fec6abc88e1c2
#: ../Doc/library/framework.rst:216
msgid ""
"Override this method to do any special processing on window close. Call the :"
"meth:`do_postclose` method to cleanup the parent state."
msgstr ""

# d4e1f10ac5df4e00bd046a5a8e6159a6
#: ../Doc/library/framework.rst:222
msgid ""
"Called after the window is resized. Override if more needs to be done than "
"calling ``InvalRect``."
msgstr ""

# 3761d2a046d348efa3d96ab99ac1e151
#: ../Doc/library/framework.rst:228
msgid ""
"The user clicked in the content part of a window. The arguments are the "
"coordinates (window-relative), the key modifiers and the raw event."
msgstr ""

# 8e3bc98574324f33bc310ac76c88c47c
#: ../Doc/library/framework.rst:234
msgid "An update event for the window was received. Redraw the window."
msgstr ""

# b170498d0e684af38edd55cd084acc68
#: ../Doc/library/framework.rst:239
msgid ""
"The window was activated (``activate == 1``) or deactivated (``activate == "
"0``). Handle things like focus highlighting, etc."
msgstr ""

# 4fc751d710a442e9971df53037824b8a
#: ../Doc/library/framework.rst:246
msgid "ControlsWindow Object"
msgstr ""

# d010157582a74b8f89898fe77a225061
#: ../Doc/library/framework.rst:248
msgid ""
"ControlsWindow objects have the following methods besides those of "
"``Window`` objects:"
msgstr ""

# faba8456ca024ca5bf53e3406b8cb8f0
#: ../Doc/library/framework.rst:254
msgid ""
"Part *pcode* of control *control* was hit by the user. Tracking and such has "
"already been taken care of."
msgstr ""

# 6e45feaaf58d4746b525e6a4763a053c
#: ../Doc/library/framework.rst:261
msgid "ScrolledWindow Object"
msgstr ""

# 3e0c6c4519924697bf9f4577ac54d191
#: ../Doc/library/framework.rst:263
msgid ""
"ScrolledWindow objects are ControlsWindow objects with the following extra "
"methods:"
msgstr ""

# 8f72601c7de0425fa9652825371fd62a
#: ../Doc/library/framework.rst:269
msgid ""
"Create (or destroy) horizontal and vertical scrollbars. The arguments "
"specify which you want (default: both). The scrollbars always have minimum "
"``0`` and maximum ``32767``."
msgstr ""

# 0ef31e237c1a47b2a9b0c26ed48d518c
#: ../Doc/library/framework.rst:276
msgid ""
"You must supply this method. It should return a tuple ``(x, y)`` giving the "
"current position of the scrollbars (between ``0`` and ``32767``). You can "
"return ``None`` for either to indicate the whole document is visible in that "
"direction."
msgstr ""

# 6fa043836d3147e3a5dded63730eaf8d
#: ../Doc/library/framework.rst:283
msgid ""
"Call this method when the document has changed. It will call :meth:"
"`getscrollbarvalues` and update the scrollbars."
msgstr ""

# 8ecb23ee7dba4d2ab35ba850ccec61f6
#: ../Doc/library/framework.rst:289
msgid ""
"Supplied by you and called after user interaction. *which* will be ``'x'`` "
"or ``'y'``, *what* will be ``'-'``, ``'--'``, ``'set'``, ``'++'`` or "
"``'+'``. For ``'set'``, *value* will contain the new scrollbar position."
msgstr ""

# a0ab991a216042b6b6ecd9ad1c99ad52
#: ../Doc/library/framework.rst:296
msgid ""
"Auxiliary method to help you calculate values to return from :meth:"
"`getscrollbarvalues`. You pass document minimum and maximum value and "
"topmost (leftmost) and bottommost (rightmost) visible values and it returns "
"the correct number or ``None``."
msgstr ""

# c36dfce0b18045b1b2b6cd9d2aea0784
#: ../Doc/library/framework.rst:304
msgid ""
"Takes care of dimming/highlighting scrollbars when a window becomes "
"frontmost. If you override this method, call this one at the end of your "
"method."
msgstr ""

# ed1c1f0acd1144549b2f8ac07d108a95
#: ../Doc/library/framework.rst:310
msgid ""
"Moves scrollbars to the correct position. Call this method initially if you "
"override it."
msgstr ""

# 092fb55506d041c0b8ad8da2a29d7b26
#: ../Doc/library/framework.rst:316
msgid ""
"Handles scrollbar interaction. If you override it call this method first, a "
"nonzero return value indicates the hit was in the scrollbars and has been "
"handled."
msgstr ""

# 9133845986164423b158dfc2338ff3a1
#: ../Doc/library/framework.rst:324
msgid "DialogWindow Objects"
msgstr ""

# ce08ad3bee2441a19b4648fb996ec625
#: ../Doc/library/framework.rst:326
msgid ""
"DialogWindow objects have the following methods besides those of ``Window`` "
"objects:"
msgstr ""

# 828d4a13b1a74f0a89c5c67669127ddc
#: ../Doc/library/framework.rst:332
msgid ""
"Create the dialog window, from the DLOG resource with id *resid*. The dialog "
"object is stored in :attr:`self.wid`."
msgstr ""

# 12816bf15ab84ed4a59803012499215f
#: ../Doc/library/framework.rst:338
msgid ""
"Item number *item* was hit. You are responsible for redrawing toggle "
"buttons, etc."
msgstr ""

#: ../Doc/library/frameworks.rst:6
msgid "Program Frameworks"
msgstr ""

#: ../Doc/library/frameworks.rst:8
msgid ""
"The modules described in this chapter are frameworks that will largely "
"dictate the structure of your program.  Currently the modules described  "
"here are all oriented toward writing command-line interfaces."
msgstr ""

#: ../Doc/library/ftplib.rst:2
msgid ":mod:`ftplib` --- FTP protocol client"
msgstr ""

# 10eaafa2c11f459c8b6cd9fce0834555
#: ../Doc/library/ftplib.rst:12
msgid "**Source code:** :source:`Lib/ftplib.py`"
msgstr ""

# 6a06c83063994e34bc3beefbbded8b36
#: ../Doc/library/ftplib.rst:16
msgid ""
"This module defines the class :class:`FTP` and a few related items. The :"
"class:`FTP` class implements the client side of the FTP protocol.  You can "
"use this to write Python programs that perform a variety of automated FTP "
"jobs, such as mirroring other ftp servers.  It is also used by the module :"
"mod:`urllib` to handle URLs that use FTP.  For more information on FTP (File "
"Transfer Protocol), see Internet :rfc:`959`."
msgstr ""

#: ../Doc/library/ftplib.rst:23
msgid "Here's a sample session using the :mod:`ftplib` module::"
msgstr ""

#: ../Doc/library/ftplib.rst:41 ../Doc/library/gzip.rst:25
#: ../Doc/library/zipfile.rst:28
msgid "The module defines the following items:"
msgstr ""

#: ../Doc/library/ftplib.rst:45
msgid ""
"Return a new instance of the :class:`FTP` class.  When *host* is given, the "
"method call ``connect(host)`` is made.  When *user* is given, additionally "
"the method call ``login(user, passwd, acct)`` is made (where *passwd* and "
"*acct* default to the empty string when not given).  The optional *timeout* "
"parameter specifies a timeout in seconds for blocking operations like the "
"connection attempt (if is not specified, the global default timeout setting "
"will be used)."
msgstr ""

# 708a9de2b0c3480c9bb4ef9229d3e7c5
#: ../Doc/library/ftplib.rst:59
msgid ""
"A :class:`FTP` subclass which adds TLS support to FTP as described in :rfc:"
"`4217`. Connect as usual to port 21 implicitly securing the FTP control "
"connection before authenticating. Securing the data connection requires the "
"user to explicitly ask for it by calling the :meth:`prot_p` method. "
"*keyfile* and *certfile* are optional -- they can contain a PEM formatted "
"private key and certificate chain file name for the SSL connection."
msgstr ""

#: ../Doc/library/ftplib.rst:69
msgid "Here's a sample session using the :class:`FTP_TLS` class:"
msgstr ""

#: ../Doc/library/ftplib.rst:93
msgid "Exception raised when an unexpected reply is received from the server."
msgstr ""

# 1b2b67b1261f4e73991074f4bf17ab26
#: ../Doc/library/ftplib.rst:98
msgid ""
"Exception raised when an error code signifying a temporary error (response "
"codes in the range 400--499) is received."
msgstr ""

# 88aac886377849aaa6bb47b24a30a630
#: ../Doc/library/ftplib.rst:104
msgid ""
"Exception raised when an error code signifying a permanent error (response "
"codes in the range 500--599) is received."
msgstr ""

# cf38ba38962945428e2d909a6a382eda
#: ../Doc/library/ftplib.rst:110
msgid ""
"Exception raised when a reply is received from the server that does not fit "
"the response specifications of the File Transfer Protocol, i.e. begin with a "
"digit in the range 1--5."
msgstr ""

#: ../Doc/library/ftplib.rst:117
msgid ""
"The set of all exceptions (as a tuple) that methods of :class:`FTP` "
"instances may raise as a result of problems with the FTP connection (as "
"opposed to programming errors made by the caller).  This set includes the "
"four exceptions listed above as well as :exc:`socket.error` and :exc:"
"`IOError`."
msgstr ""

#: ../Doc/library/ftplib.rst:127
msgid ""
"Parser for the :file:`.netrc` file format.  The file :file:`.netrc` is "
"typically used by FTP clients to load user authentication information before "
"prompting the user."
msgstr ""

#: ../Doc/library/ftplib.rst:133
msgid ""
"The file :file:`Tools/scripts/ftpmirror.py` in the Python source "
"distribution is a script that can mirror FTP sites, or portions thereof, "
"using the :mod:`ftplib` module. It can be used as an extended example that "
"applies this module."
msgstr ""

#: ../Doc/library/ftplib.rst:141
msgid "FTP Objects"
msgstr ""

#: ../Doc/library/ftplib.rst:143
msgid ""
"Several methods are available in two flavors: one for handling text files "
"and another for binary files.  These are named for the command which is used "
"followed by ``lines`` for the text version or ``binary`` for the binary "
"version."
msgstr ""

#: ../Doc/library/ftplib.rst:147
msgid ":class:`FTP` instances have the following methods:"
msgstr ""

#: ../Doc/library/ftplib.rst:152 ../Doc/library/poplib.rst:85
msgid ""
"Set the instance's debugging level.  This controls the amount of debugging "
"output printed.  The default, ``0``, produces no debugging output.  A value "
"of ``1`` produces a moderate amount of debugging output, generally a single "
"line per request.  A value of ``2`` or higher produces the maximum amount of "
"debugging output, logging each line sent and received on the control "
"connection."
msgstr ""

#: ../Doc/library/ftplib.rst:161
msgid ""
"Connect to the given host and port.  The default port number is ``21``, as "
"specified by the FTP protocol specification.  It is rarely needed to specify "
"a different port number.  This function should be called only once for each "
"instance; it should not be called at all if a host was given when the "
"instance was created.  All other methods can only be used after a connection "
"has been made."
msgstr ""

#: ../Doc/library/ftplib.rst:168
msgid ""
"The optional *timeout* parameter specifies a timeout in seconds for the "
"connection attempt. If no *timeout* is passed, the global default timeout "
"setting will be used."
msgstr ""

#: ../Doc/library/ftplib.rst:178 ../Doc/library/nntplib.rst:130
msgid ""
"Return the welcome message sent by the server in reply to the initial "
"connection.  (This message sometimes contains disclaimers or help "
"information that may be relevant to the user.)"
msgstr ""

#: ../Doc/library/ftplib.rst:185
msgid ""
"Log in as the given *user*.  The *passwd* and *acct* parameters are optional "
"and default to the empty string.  If no *user* is specified, it defaults to "
"``'anonymous'``.  If *user* is ``'anonymous'``, the default *passwd* is "
"``'anonymous@'``.  This function should be called only once for each "
"instance, after a connection has been established; it should not be called "
"at all if a host and user were given when the instance was created.  Most "
"FTP commands are only allowed after the client has logged in.  The *acct* "
"parameter supplies \"accounting information\"; few systems implement this."
msgstr ""

#: ../Doc/library/ftplib.rst:197
msgid ""
"Abort a file transfer that is in progress.  Using this does not always work, "
"but it's worth a try."
msgstr ""

#: ../Doc/library/ftplib.rst:203
msgid ""
"Send a simple command string to the server and return the response string."
msgstr ""

# 245e498064234bf08b52cfe2dff0b2e5
#: ../Doc/library/ftplib.rst:208
msgid ""
"Send a simple command string to the server and handle the response.  Return "
"nothing if a response code corresponding to success (codes in the range "
"200--299) is received.  Raise :exc:`error_reply` otherwise."
msgstr ""

# f322276b8fb444438328974558367c9f
#: ../Doc/library/ftplib.rst:215
msgid ""
"Retrieve a file in binary transfer mode.  *command* should be an appropriate "
"``RETR`` command: ``'RETR filename'``. The *callback* function is called for "
"each block of data received, with a single string argument giving the data "
"block. The optional *maxblocksize* argument specifies the maximum chunk size "
"to read on the low-level socket object created to do the actual transfer "
"(which will also be the largest size of the data blocks passed to "
"*callback*).  A reasonable default is chosen. *rest* means the same thing as "
"in the :meth:`transfercmd` method."
msgstr ""

# 33c0c8fb84094f02b00902e91a4d370c
#: ../Doc/library/ftplib.rst:227
msgid ""
"Retrieve a file or directory listing in ASCII transfer mode.  *command* "
"should be an appropriate ``RETR`` command (see :meth:`retrbinary`) or a "
"command such as ``LIST``, ``NLST`` or ``MLSD`` (usually just the string "
"``'LIST'``).  ``LIST`` retrieves a list of files and information about those "
"files. ``NLST`` retrieves a list of file names.  On some servers, ``MLSD`` "
"retrieves a machine readable list of files and information about those "
"files.  The *callback* function is called for each line with a string "
"argument containing the line with the trailing CRLF stripped.  The default "
"*callback* prints the line to ``sys.stdout``."
msgstr ""

# 2936ae7b81914bfdaa6daa57d694cbf0
#: ../Doc/library/ftplib.rst:239
msgid ""
"Enable \"passive\" mode if *boolean* is true, other disable passive mode.  "
"(In Python 2.0 and before, passive mode was off by default; in Python 2.1 "
"and later, it is on by default.)"
msgstr ""

# 53769d94005a4e6f997d5b91f21e77c4
#: ../Doc/library/ftplib.rst:246
msgid ""
"Store a file in binary transfer mode.  *command* should be an appropriate "
"``STOR`` command: ``\"STOR filename\"``. *file* is an open file object which "
"is read until EOF using its :meth:`read` method in blocks of size "
"*blocksize* to provide the data to be stored.  The *blocksize* argument "
"defaults to 8192. *callback* is an optional single parameter callable that "
"is called on each block of data after it is sent. *rest* means the same "
"thing as in the :meth:`transfercmd` method."
msgstr ""

# 91667b78a30147bbad0c9bf185aa9f4f
#: ../Doc/library/ftplib.rst:265
msgid ""
"Store a file in ASCII transfer mode.  *command* should be an appropriate "
"``STOR`` command (see :meth:`storbinary`).  Lines are read until EOF from "
"the open file object *file* using its :meth:`readline` method to provide the "
"data to be stored.  *callback* is an optional single parameter callable that "
"is called on each line after it is sent."
msgstr ""

#: ../Doc/library/ftplib.rst:277
msgid ""
"Initiate a transfer over the data connection.  If the transfer is active, "
"send a ``EPRT`` or  ``PORT`` command and the transfer command specified by "
"*cmd*, and accept the connection.  If the server is passive, send a ``EPSV`` "
"or ``PASV`` command, connect to it, and start the transfer command.  Either "
"way, return the socket for the connection."
msgstr ""

#: ../Doc/library/ftplib.rst:283
msgid ""
"If optional *rest* is given, a ``REST`` command is sent to the server, "
"passing *rest* as an argument.  *rest* is usually a byte offset into the "
"requested file, telling the server to restart sending the file's bytes at "
"the requested offset, skipping over the initial bytes.  Note however that "
"RFC 959 requires only that *rest* be a string containing characters in the "
"printable range from ASCII code 33 to ASCII code 126.  The :meth:"
"`transfercmd` method, therefore, converts *rest* to a string, but no check "
"is performed on the string's contents.  If the server does not recognize the "
"``REST`` command, an :exc:`error_reply` exception will be raised.  If this "
"happens, simply call :meth:`transfercmd` without a *rest* argument."
msgstr ""

#: ../Doc/library/ftplib.rst:297
msgid ""
"Like :meth:`transfercmd`, but returns a tuple of the data connection and the "
"expected size of the data.  If the expected size could not be computed, "
"``None`` will be returned as the expected size.  *cmd* and *rest* means the "
"same thing as in :meth:`transfercmd`."
msgstr ""

# 8092a6d301c04b4b90b6da156460886a
#: ../Doc/library/ftplib.rst:305
msgid ""
"Return a list of file names as returned by the ``NLST`` command.  The "
"optional *argument* is a directory to list (default is the current server "
"directory).  Multiple arguments can be used to pass non-standard options to "
"the ``NLST`` command."
msgstr ""

#: ../Doc/library/ftplib.rst:313
msgid ""
"Produce a directory listing as returned by the ``LIST`` command, printing it "
"to standard output.  The optional *argument* is a directory to list (default "
"is the current server directory).  Multiple arguments can be used to pass "
"non-standard options to the ``LIST`` command.  If the last argument is a "
"function, it is used as a *callback* function as for :meth:`retrlines`; the "
"default prints to ``sys.stdout``.  This method returns ``None``."
msgstr ""

#: ../Doc/library/ftplib.rst:323
msgid "Rename file *fromname* on the server to *toname*."
msgstr ""

#: ../Doc/library/ftplib.rst:328
msgid ""
"Remove the file named *filename* from the server.  If successful, returns "
"the text of the response, otherwise raises :exc:`error_perm` on permission "
"errors or :exc:`error_reply` on other errors."
msgstr ""

#: ../Doc/library/ftplib.rst:335
msgid "Set the current directory on the server."
msgstr ""

#: ../Doc/library/ftplib.rst:340
msgid "Create a new directory on the server."
msgstr ""

#: ../Doc/library/ftplib.rst:345
msgid "Return the pathname of the current directory on the server."
msgstr ""

#: ../Doc/library/ftplib.rst:350
msgid "Remove the directory named *dirname* on the server."
msgstr ""

#: ../Doc/library/ftplib.rst:355
msgid ""
"Request the size of the file named *filename* on the server.  On success, "
"the size of the file is returned as an integer, otherwise ``None`` is "
"returned. Note that the ``SIZE`` command is not  standardized, but is "
"supported by many common server implementations."
msgstr ""

#: ../Doc/library/ftplib.rst:363
msgid ""
"Send a ``QUIT`` command to the server and close the connection. This is the "
"\"polite\" way to close a connection, but it may raise an exception if the "
"server responds with an error to the ``QUIT`` command.  This implies a call "
"to the :meth:`close` method which renders the :class:`FTP` instance useless "
"for subsequent calls (see below)."
msgstr ""

#: ../Doc/library/ftplib.rst:372
msgid ""
"Close the connection unilaterally.  This should not be applied to an already "
"closed connection such as after a successful call to :meth:`quit`.  After "
"this call the :class:`FTP` instance should not be used any more (after a "
"call to :meth:`close` or :meth:`quit` you cannot reopen the connection by "
"issuing another :meth:`login` method)."
msgstr ""

#: ../Doc/library/ftplib.rst:380
msgid "FTP_TLS Objects"
msgstr ""

#: ../Doc/library/ftplib.rst:382
msgid ""
":class:`FTP_TLS` class inherits from :class:`FTP`, defining these additional "
"objects:"
msgstr ""

#: ../Doc/library/ftplib.rst:386
msgid "The SSL version to use (defaults to *TLSv1*)."
msgstr ""

#: ../Doc/library/ftplib.rst:390
msgid ""
"Set up secure control connection by using TLS or SSL, depending on what "
"specified in :meth:`ssl_version` attribute."
msgstr ""

#: ../Doc/library/ftplib.rst:394
msgid "Set up secure data connection."
msgstr ""

#: ../Doc/library/ftplib.rst:398
msgid "Set up clear text data connection."
msgstr ""

#: ../Doc/library/functions.rst:5 ../Doc/library/functions.rst:11
msgid "Built-in Functions"
msgstr ""

# b71db04cc9fb4a5cacd66860c893543d
#: ../Doc/library/functions.rst:7
msgid ""
"The Python interpreter has a number of functions built into it that are "
"always available.  They are listed here in alphabetical order."
msgstr ""

#: ../Doc/library/functions.rst:13
msgid ":func:`abs`"
msgstr ""

#: ../Doc/library/functions.rst:13
msgid ":func:`divmod`"
msgstr ""

# 6896ea6d37584118beb1ed0d3478efc8
#: ../Doc/library/functions.rst:13
msgid ":func:`input`"
msgstr ""

# 06687bed6e8e4659b97aa9e3d5d8e019
#: ../Doc/library/functions.rst:13
msgid ":func:`open`"
msgstr ""

# 5d4c72c9aba44337ac2c7144ff3a2c7b
#: ../Doc/library/functions.rst:13
msgid ":func:`staticmethod`"
msgstr ""

# f6dd63b76b95489790097020ba92278f
#: ../Doc/library/functions.rst:14
msgid ":func:`all`"
msgstr ""

# 7064a07acd344ba9a7db78ab0f3d76d9
#: ../Doc/library/functions.rst:14
msgid ":func:`enumerate`"
msgstr ""

#: ../Doc/library/functions.rst:14
msgid ":func:`int`"
msgstr ""

# 4a8f0a8a6ccd43c698a81b79d9ed8f4e
#: ../Doc/library/functions.rst:14
msgid ":func:`ord`"
msgstr ""

# fa0466e0cd1f4b37add6c36bf40fbfaf
#: ../Doc/library/functions.rst:14
msgid ":func:`str`"
msgstr ""

# 80075b9190d947018005e3e43c9f01e3
#: ../Doc/library/functions.rst:15
msgid ":func:`any`"
msgstr ""

# add2eee4f097471f8652993176c0a7c7
#: ../Doc/library/functions.rst:15
msgid ":func:`eval`"
msgstr ""

# 71954e18ec48473a9bb5ffc1553e6f23
#: ../Doc/library/functions.rst:15
msgid ":func:`isinstance`"
msgstr ""

#: ../Doc/library/functions.rst:15
msgid ":func:`pow`"
msgstr ""

# 333e5b3eb13340ee9333e20e97d76345
#: ../Doc/library/functions.rst:15
msgid ":func:`sum`"
msgstr ""

# 795c8ed494684fcea77092e1b7c07ea3
#: ../Doc/library/functions.rst:16
msgid ":func:`basestring`"
msgstr ""

# 7dcd329ed1c94e33836d9ccc39f8d90a
#: ../Doc/library/functions.rst:16
msgid ":func:`execfile`"
msgstr ""

# 30fdd8a36872437d88c9f5148ac39a2a
#: ../Doc/library/functions.rst:16
msgid ":func:`issubclass`"
msgstr ""

# 97c829669ad64dcbbc8732b5658819a5
#: ../Doc/library/functions.rst:16
msgid ":func:`print`"
msgstr ""

# 7b7083d42a9645f5af6fd91e5c5c8012
#: ../Doc/library/functions.rst:16
msgid ":func:`super`"
msgstr ""

# 5f1d163a4d53471cb2735a483baea0f8
#: ../Doc/library/functions.rst:17
msgid ":func:`bin`"
msgstr ""

# df570c20039948bf9fc73109ca8167f2
#: ../Doc/library/functions.rst:17
msgid ":func:`file`"
msgstr ""

# 3cfbcc75422d42fa8189361bf62b2d00
#: ../Doc/library/functions.rst:17
msgid ":func:`iter`"
msgstr ""

# d9071f6b9f594d1db0ec69c29ca2db9e
#: ../Doc/library/functions.rst:17
msgid ":func:`property`"
msgstr ""

# 8321b82f32024e0e8490e75beb0f4206
#: ../Doc/library/functions.rst:17
msgid ":func:`tuple`"
msgstr ""

# a0d2c6aa9e064ac0af799a62bf52015d
#: ../Doc/library/functions.rst:18
msgid ":func:`bool`"
msgstr ""

# 70947908f7ca42ed9aa216218e26d6d1
#: ../Doc/library/functions.rst:18
msgid ":func:`filter`"
msgstr ""

# d00e1665ceac4981ad9d76f5a83dc9af
#: ../Doc/library/functions.rst:18
msgid ":func:`len`"
msgstr ""

# dd68e8ffd8f94fadaf3bf5cd31955098
#: ../Doc/library/functions.rst:18
msgid ":func:`range`"
msgstr ""

# 02cb06e9a3b246c29eacba2981cd096a
#: ../Doc/library/functions.rst:18
msgid ":func:`type`"
msgstr ""

# 61bffbb1d538482f8b8bc324bd2cd1ca
#: ../Doc/library/functions.rst:19
msgid ":func:`bytearray`"
msgstr ""

#: ../Doc/library/functions.rst:19
msgid ":func:`float`"
msgstr ""

# 8549e7edf75041d5bf337ec530b899dc
#: ../Doc/library/functions.rst:19
msgid ":func:`list`"
msgstr ""

# 9aee50970a0a4bb9b42285d365a0cc93
#: ../Doc/library/functions.rst:19
msgid ":func:`raw_input`"
msgstr ""

# 50b8b8075cca4668b0b60c49dd0b2a3b
#: ../Doc/library/functions.rst:19
msgid ":func:`unichr`"
msgstr ""

# 2ae547fd9a3d408cb8cd9dc5b3d23ea3
#: ../Doc/library/functions.rst:20
msgid ":func:`callable`"
msgstr ""

# 1f8027ab84d14f6583f0af14426102e9
#: ../Doc/library/functions.rst:20
msgid ":func:`format`"
msgstr ""

# de1323cfcc924f8c96583d40fbceaf5d
#: ../Doc/library/functions.rst:20
msgid ":func:`locals`"
msgstr ""

# 0009f67942e446f59048bfb6fbd1567e
#: ../Doc/library/functions.rst:20
msgid ":func:`reduce`"
msgstr ""

# 853791a320b64bdc9f050eb1c74ebd52
#: ../Doc/library/functions.rst:20
msgid ":func:`unicode`"
msgstr ""

# 81ffc83c75fb4b3c9e024865544c34c9
#: ../Doc/library/functions.rst:21
msgid ":func:`chr`"
msgstr ""

# 8de456918d1341d0a7d3ade415c70b18
#: ../Doc/library/functions.rst:21
msgid "|func-frozenset|_"
msgstr ""

# 191fa587067442e08c082fc1d5439f86
#: ../Doc/library/functions.rst:21
msgid ":func:`long`"
msgstr ""

# bc0fcfbe92ac47ff8b24f4e4fdb05594
#: ../Doc/library/functions.rst:21
msgid ":func:`reload`"
msgstr ""

# b2b3d9e5e7884b87a8eefe6f8c5452c7
#: ../Doc/library/functions.rst:21
msgid ":func:`vars`"
msgstr ""

# 24483a03882241969e5d27e2ea19092b
#: ../Doc/library/functions.rst:22
msgid ":func:`classmethod`"
msgstr ""

# e9dd6f382a00456caedcc20b164d2142
#: ../Doc/library/functions.rst:22
msgid ":func:`getattr`"
msgstr ""

# d7393a48a4cc4cd4a0dc88cfeb0dafbc
#: ../Doc/library/functions.rst:22
msgid ":func:`map`"
msgstr ""

# 84093972ada245c0b8cab3b0fb53c4a0
#: ../Doc/library/functions.rst:22
msgid ":func:`repr`"
msgstr ""

# 1a04194a643b4c00ac02d5bd49587f16
#: ../Doc/library/functions.rst:22
msgid ":func:`xrange`"
msgstr ""

# 1458fdee5b3048fd844895c6765374dc
#: ../Doc/library/functions.rst:23
msgid ":func:`cmp`"
msgstr ""

# 1e03a3fb22154d3e984d8a06e4c7f6ad
#: ../Doc/library/functions.rst:23
msgid ":func:`globals`"
msgstr ""

# 2102a0bdac1c4d15a3e8b1074c746a2a
#: ../Doc/library/functions.rst:23
msgid ":func:`max`"
msgstr ""

# 2373f11c70bb421687e35b776641ce58
#: ../Doc/library/functions.rst:23
msgid ":func:`reversed`"
msgstr ""

# 188fdd1f8ca148dfae2e83ce1b1d2f8e
#: ../Doc/library/functions.rst:23
msgid ":func:`zip`"
msgstr ""

# b908560b589148e5b87682c415075d3f
#: ../Doc/library/functions.rst:24
msgid ":func:`compile`"
msgstr ""

# 949c2e4d424e44ca9f739d812016433c
#: ../Doc/library/functions.rst:24
msgid ":func:`hasattr`"
msgstr ""

# 6a91e1a492ca43c3a2d4455d358d91f1
#: ../Doc/library/functions.rst:24
msgid "|func-memoryview|_"
msgstr ""

# 4d95a964e15e4a118c08ddc617039f7e
#: ../Doc/library/functions.rst:24
msgid ":func:`round`"
msgstr ""

# 925d246152494920a8f9d6def4f84670
#: ../Doc/library/functions.rst:24
msgid ":func:`__import__`"
msgstr ""

#: ../Doc/library/functions.rst:25
msgid ":func:`complex`"
msgstr ""

# b2e80e10f16a46c0a32c57e154c93536
#: ../Doc/library/functions.rst:25
msgid ":func:`hash`"
msgstr ""

# 38a14e30ebcb462fa1cb9d6255458a92
#: ../Doc/library/functions.rst:25
msgid ":func:`min`"
msgstr ""

# 529d1054fedf4f79af245f0fe78b7ed6
#: ../Doc/library/functions.rst:25
msgid "|func-set|_"
msgstr ""

# 686f330c544247d28f1e871aa68f7482
#: ../Doc/library/functions.rst:25
msgid ":func:`apply`"
msgstr ""

# cea62231092e4205970888716aa5d989
#: ../Doc/library/functions.rst:26
msgid ":func:`delattr`"
msgstr ""

# ce96a6c2b8fe4eaabfb7e6718df08854
#: ../Doc/library/functions.rst:26
msgid ":func:`help`"
msgstr ""

# 602ec592593c444fab21a1af1f3abd27
#: ../Doc/library/functions.rst:26
msgid ":func:`next`"
msgstr ""

# 9b98ab134d3c41e4b0e2ca52f21e8a9a
#: ../Doc/library/functions.rst:26
msgid ":func:`setattr`"
msgstr ""

# 384799e766734d779ef651f2af6b7c89
#: ../Doc/library/functions.rst:26
msgid ":func:`buffer`"
msgstr ""

# 06dc10b579bd43d597df233a639d5e66
#: ../Doc/library/functions.rst:27
msgid "|func-dict|_"
msgstr ""

# 953b4b671abd4688af4fdadf99219d17
#: ../Doc/library/functions.rst:27
msgid ":func:`hex`"
msgstr ""

# 7d9525a88b69485eb48b7a37f8dfae22
#: ../Doc/library/functions.rst:27
msgid ":func:`object`"
msgstr ""

# 06b309c7d5524ccaab882d731fadcaef
#: ../Doc/library/functions.rst:27
msgid ":func:`slice`"
msgstr ""

# a5b9e5ac4deb4170af1f7fa938721d78
#: ../Doc/library/functions.rst:27
msgid ":func:`coerce`"
msgstr ""

# 799e670f0ae045d7a68fa774871b6ce1
#: ../Doc/library/functions.rst:28
msgid ":func:`dir`"
msgstr ""

# 4e1579246573431fb989590bcbd64e73
#: ../Doc/library/functions.rst:28
msgid ":func:`id`"
msgstr ""

# 731ac7bbc8ee4cd68d1b51f170915f8a
#: ../Doc/library/functions.rst:28
msgid ":func:`oct`"
msgstr ""

# 7a2e415fa8544859868152f9de32de7c
#: ../Doc/library/functions.rst:28
msgid ":func:`sorted`"
msgstr ""

# 96c4ad8c435e4d53a43e2c9d8741a30d
#: ../Doc/library/functions.rst:28
msgid ":func:`intern`"
msgstr ""

# 4fd8aa5731f041619f00b068122eaf40
#: ../Doc/library/functions.rst:42
msgid ""
"Return the absolute value of a number.  The argument may be a plain or long "
"integer or a floating point number.  If the argument is a complex number, "
"its magnitude is returned."
msgstr ""

#: ../Doc/library/functions.rst:49
msgid ""
"Return True if all elements of the *iterable* are true (or if the iterable "
"is empty).  Equivalent to::"
msgstr ""

#: ../Doc/library/functions.rst:63
msgid ""
"Return True if any element of the *iterable* is true.  If the iterable is "
"empty, return False.  Equivalent to::"
msgstr ""

# 11c9afe5d7214b1781140ba9ed7229a8
#: ../Doc/library/functions.rst:77
msgid ""
"This abstract type is the superclass for :class:`str` and :class:`unicode`. "
"It cannot be called or instantiated, but it can be used to test whether an "
"object is an instance of :class:`str` or :class:`unicode`. ``isinstance(obj, "
"basestring)`` is equivalent to ``isinstance(obj, (str, unicode))``."
msgstr ""

#: ../Doc/library/functions.rst:87
msgid ""
"Convert an integer number to a binary string. The result is a valid Python "
"expression.  If *x* is not a Python :class:`int` object, it has to define "
"an :meth:`__index__` method that returns an integer."
msgstr ""

#: ../Doc/library/functions.rst:96
msgid ""
"Convert a value to a Boolean, using the standard truth testing procedure.  "
"If *x* is false or omitted, this returns :const:`False`; otherwise it "
"returns :const:`True`. :class:`bool` is also a class, which is a subclass "
"of :class:`int`. Class :class:`bool` cannot be subclassed further.  Its only "
"instances are :const:`False` and :const:`True`."
msgstr ""

# 1a44d98c69dd49acb1c1d1a775da3a27
#: ../Doc/library/functions.rst:112
msgid ""
"Return a new array of bytes.  The :class:`bytearray` type is a mutable "
"sequence of integers in the range 0 <= x < 256.  It has most of the usual "
"methods of mutable sequences, described in :ref:`typesseq-mutable`, as well "
"as most methods that the :class:`str` type has, see :ref:`string-methods`."
msgstr ""

#: ../Doc/library/functions.rst:117
msgid ""
"The optional *source* parameter can be used to initialize the array in a few "
"different ways:"
msgstr ""

#: ../Doc/library/functions.rst:120
msgid ""
"If it is a *string*, you must also give the *encoding* (and optionally, "
"*errors*) parameters; :func:`bytearray` then converts the string to bytes "
"using :meth:`str.encode`."
msgstr ""

#: ../Doc/library/functions.rst:124
msgid ""
"If it is an *integer*, the array will have that size and will be initialized "
"with null bytes."
msgstr ""

#: ../Doc/library/functions.rst:127
msgid ""
"If it is an object conforming to the *buffer* interface, a read-only buffer "
"of the object will be used to initialize the bytes array."
msgstr ""

#: ../Doc/library/functions.rst:130
msgid ""
"If it is an *iterable*, it must be an iterable of integers in the range ``0 "
"<= x < 256``, which are used as the initial contents of the array."
msgstr ""

#: ../Doc/library/functions.rst:133
msgid "Without an argument, an array of size 0 is created."
msgstr ""

# c030781e058140e48c2025fb7af8d201
#: ../Doc/library/functions.rst:140
msgid ""
"Return :const:`True` if the *object* argument appears callable, :const:"
"`False` if not.  If this returns true, it is still possible that a call "
"fails, but if it is false, calling *object* will never succeed.  Note that "
"classes are callable (calling a class returns a new instance); class "
"instances are callable if they have a :meth:`__call__` method."
msgstr ""

# 4bfc28600126485db2468d73f1844869
#: ../Doc/library/functions.rst:150
msgid ""
"Return a string of one character whose ASCII code is the integer *i*.  For "
"example, ``chr(97)`` returns the string ``'a'``. This is the inverse of :"
"func:`ord`.  The argument must be in the range [0..255], inclusive; :exc:"
"`ValueError` will be raised if *i* is outside that range. See also :func:"
"`unichr`."
msgstr ""

#: ../Doc/library/functions.rst:159
msgid "Return a class method for *function*."
msgstr ""

#: ../Doc/library/functions.rst:161
msgid ""
"A class method receives the class as implicit first argument, just like an "
"instance method receives the instance. To declare a class method, use this "
"idiom::"
msgstr ""

#: ../Doc/library/functions.rst:169
msgid ""
"The ``@classmethod`` form is a function :term:`decorator` -- see the "
"description of function definitions in :ref:`function` for details."
msgstr ""

#: ../Doc/library/functions.rst:172
msgid ""
"It can be called either on the class (such as ``C.f()``) or on an instance "
"(such as ``C().f()``).  The instance is ignored except for its class. If a "
"class method is called for a derived class, the derived class object is "
"passed as the implied first argument."
msgstr ""

#: ../Doc/library/functions.rst:177
msgid ""
"Class methods are different than C++ or Java static methods. If you want "
"those, see :func:`staticmethod` in this section."
msgstr ""

#: ../Doc/library/functions.rst:180
msgid ""
"For more information on class methods, consult the documentation on the "
"standard type hierarchy in :ref:`types`."
msgstr ""

# 4c047c654cfe41b5a824553fd1c3cbf0
#: ../Doc/library/functions.rst:191
msgid ""
"Compare the two objects *x* and *y* and return an integer according to the "
"outcome.  The return value is negative if ``x < y``, zero if ``x == y`` and "
"strictly positive if ``x > y``."
msgstr ""

# 504e378fcdd0453f82d798a5452ef9ad
#: ../Doc/library/functions.rst:198
msgid ""
"Compile the *source* into a code or AST object.  Code objects can be "
"executed by an :keyword:`exec` statement or evaluated by a call to :func:"
"`eval`. *source* can either be a string or an AST object.  Refer to the :mod:"
"`ast` module documentation for information on how to work with AST objects."
msgstr ""

#: ../Doc/library/functions.rst:203
msgid ""
"The *filename* argument should give the file from which the code was read; "
"pass some recognizable value if it wasn't read from a file (``'<string>'`` "
"is commonly used)."
msgstr ""

#: ../Doc/library/functions.rst:207
msgid ""
"The *mode* argument specifies what kind of code must be compiled; it can be "
"``'exec'`` if *source* consists of a sequence of statements, ``'eval'`` if "
"it consists of a single expression, or ``'single'`` if it consists of a "
"single interactive statement (in the latter case, expression statements that "
"evaluate to something other than ``None`` will be printed)."
msgstr ""

#: ../Doc/library/functions.rst:213
msgid ""
"The optional arguments *flags* and *dont_inherit* control which future "
"statements (see :pep:`236`) affect the compilation of *source*.  If neither "
"is present (or both are zero) the code is compiled with those future "
"statements that are in effect in the code that is calling compile.  If the "
"*flags* argument is given and *dont_inherit* is not (or is zero) then the "
"future statements specified by the *flags* argument are used in addition to "
"those that would be used anyway. If *dont_inherit* is a non-zero integer "
"then the *flags* argument is it -- the future statements in effect around "
"the call to compile are ignored."
msgstr ""

#: ../Doc/library/functions.rst:223
msgid ""
"Future statements are specified by bits which can be bitwise ORed together "
"to specify multiple statements.  The bitfield required to specify a given "
"feature can be found as the :attr:`compiler_flag` attribute on the :class:"
"`_Feature` instance in the :mod:`__future__` module."
msgstr ""

#: ../Doc/library/functions.rst:228
msgid ""
"This function raises :exc:`SyntaxError` if the compiled source is invalid, "
"and :exc:`TypeError` if the source contains null bytes."
msgstr ""

#: ../Doc/library/functions.rst:233
msgid ""
"When compiling a string with multi-line code in ``'single'`` or ``'eval'`` "
"mode, input must be terminated by at least one newline character.  This is "
"to facilitate detection of incomplete and complete statements in the :mod:"
"`code` module."
msgstr ""

# 46f4e29d650a40878477f147b80bd680
#: ../Doc/library/functions.rst:251
msgid ""
"Create a complex number with the value *real* + *imag*\\*j or convert a "
"string or number to a complex number.  If the first parameter is a string, "
"it will be interpreted as a complex number and the function must be called "
"without a second parameter.  The second parameter can never be a string. "
"Each argument may be any numeric type (including complex). If *imag* is "
"omitted, it defaults to zero and the function serves as a numeric conversion "
"function like :func:`int`, :func:`long` and :func:`float`.  If both "
"arguments are omitted, returns ``0j``."
msgstr ""

# da8bb2b496af474682d1a6fd1d6020b2
#: ../Doc/library/functions.rst:261
msgid ""
"When converting from a string, the string must not contain whitespace around "
"the central ``+`` or ``-`` operator.  For example, ``complex('1+2j')`` is "
"fine, but ``complex('1 + 2j')`` raises :exc:`ValueError`."
msgstr ""

#: ../Doc/library/functions.rst:266
msgid "The complex type is described in :ref:`typesnumeric`."
msgstr ""

#: ../Doc/library/functions.rst:271
msgid ""
"This is a relative of :func:`setattr`.  The arguments are an object and a "
"string.  The string must be the name of one of the object's attributes.  The "
"function deletes the named attribute, provided the object allows it.  For "
"example, ``delattr(x, 'foobar')`` is equivalent to ``del x.foobar``."
msgstr ""

#: ../Doc/library/functions.rst:281
msgid ""
"Create a new data dictionary, optionally with items taken from *arg*. The "
"dictionary type is described in :ref:`typesmapping`."
msgstr ""

#: ../Doc/library/functions.rst:284
msgid ""
"For other containers see the built in :class:`list`, :class:`set`, and :"
"class:`tuple` classes, and the :mod:`collections` module."
msgstr ""

#: ../Doc/library/functions.rst:290
msgid ""
"Without arguments, return the list of names in the current local scope.  "
"With an argument, attempt to return a list of valid attributes for that "
"object."
msgstr ""

#: ../Doc/library/functions.rst:293
msgid ""
"If the object has a method named :meth:`__dir__`, this method will be called "
"and must return the list of attributes. This allows objects that implement a "
"custom :func:`__getattr__` or :func:`__getattribute__` function to customize "
"the way :func:`dir` reports their attributes."
msgstr ""

#: ../Doc/library/functions.rst:298
msgid ""
"If the object does not provide :meth:`__dir__`, the function tries its best "
"to gather information from the object's :attr:`__dict__` attribute, if "
"defined, and from its type object.  The resulting list is not necessarily "
"complete, and may be inaccurate when the object has a custom :func:"
"`__getattr__`."
msgstr ""

#: ../Doc/library/functions.rst:303
msgid ""
"The default :func:`dir` mechanism behaves differently with different types "
"of objects, as it attempts to produce the most relevant, rather than "
"complete, information:"
msgstr ""

#: ../Doc/library/functions.rst:307
msgid ""
"If the object is a module object, the list contains the names of the "
"module's attributes."
msgstr ""

#: ../Doc/library/functions.rst:310
msgid ""
"If the object is a type or class object, the list contains the names of its "
"attributes, and recursively of the attributes of its bases."
msgstr ""

#: ../Doc/library/functions.rst:313
msgid ""
"Otherwise, the list contains the object's attributes' names, the names of "
"its class's attributes, and recursively of the attributes of its class's "
"base classes."
msgstr ""

#: ../Doc/library/functions.rst:317
msgid "The resulting list is sorted alphabetically.  For example:"
msgstr ""

#: ../Doc/library/functions.rst:335
msgid ""
"Because :func:`dir` is supplied primarily as a convenience for use at an "
"interactive prompt, it tries to supply an interesting set of names more than "
"it tries to supply a rigorously or consistently defined set of names, and "
"its detailed behavior may change across releases.  For example, metaclass "
"attributes are not in the result list when the argument is a class."
msgstr ""

# 601d289ccbd64ff78052f8b472a03aa6
#: ../Doc/library/functions.rst:344
msgid ""
"Take two (non complex) numbers as arguments and return a pair of numbers "
"consisting of their quotient and remainder when using long division.  With "
"mixed operand types, the rules for binary arithmetic operators apply.  For "
"plain and long integers, the result is the same as ``(a // b, a % b)``. For "
"floating point numbers the result is ``(q, a % b)``, where *q* is usually "
"``math.floor(a / b)`` but may be 1 less than that.  In any case ``q * b + a "
"% b`` is very close to *a*, if ``a % b`` is non-zero it has the same sign as "
"*b*, and ``0 <= abs(a % b) < abs(b)``."
msgstr ""

# 8b28b3ac49674571a5b2941618abcd34
#: ../Doc/library/functions.rst:359
msgid ""
"Return an enumerate object. *sequence* must be a sequence, an :term:"
"`iterator`, or some other object which supports iteration.  The :meth:`!"
"next` method of the iterator returned by :func:`enumerate` returns a tuple "
"containing a count (from *start* which defaults to 0) and the values "
"obtained from iterating over *sequence*::"
msgstr ""

#: ../Doc/library/functions.rst:371 ../Doc/library/itertools.rst:133
#: ../Doc/library/itertools.rst:184 ../Doc/library/itertools.rst:503
#: ../Doc/library/stdtypes.rst:484
msgid "Equivalent to::"
msgstr ""

#: ../Doc/library/functions.rst:386
msgid ""
"The arguments are a string and optional globals and locals.  If provided, "
"*globals* must be a dictionary.  If provided, *locals* can be any mapping "
"object."
msgstr ""

# 99e3fe07465b4bec8940034c0f8beae8
#: ../Doc/library/functions.rst:393
msgid ""
"The *expression* argument is parsed and evaluated as a Python expression "
"(technically speaking, a condition list) using the *globals* and *locals* "
"dictionaries as global and local namespace.  If the *globals* dictionary is "
"present and lacks '__builtins__', the current globals are copied into "
"*globals* before *expression* is parsed.  This means that *expression* "
"normally has full access to the standard :mod:`__builtin__` module and "
"restricted environments are propagated.  If the *locals* dictionary is "
"omitted it defaults to the *globals* dictionary.  If both dictionaries are "
"omitted, the expression is executed in the environment where :func:`eval` is "
"called.  The return value is the result of the evaluated expression. Syntax "
"errors are reported as exceptions.  Example:"
msgstr ""

#: ../Doc/library/functions.rst:408
msgid ""
"This function can also be used to execute arbitrary code objects (such as "
"those created by :func:`compile`).  In this case pass a code object instead "
"of a string.  If the code object has been compiled with ``'exec'`` as the "
"*mode* argument, :func:`eval`\\'s return value will be ``None``."
msgstr ""

# 8ac87bc57a964c7daa63f344ad8d4fc2
#: ../Doc/library/functions.rst:413
msgid ""
"Hints: dynamic execution of statements is supported by the :keyword:`exec` "
"statement.  Execution of statements from a file is supported by the :func:"
"`execfile` function.  The :func:`globals` and :func:`locals` functions "
"returns the current global and local dictionary, respectively, which may be "
"useful to pass around for use by :func:`eval` or :func:`execfile`."
msgstr ""

# fb888d428862433194ae01fb6e8f06ae
#: ../Doc/library/functions.rst:419
msgid ""
"See :func:`ast.literal_eval` for a function that can safely evaluate strings "
"with expressions containing only literals."
msgstr ""

# 1c6579f4aa1744b9b3a369185932c27a
#: ../Doc/library/functions.rst:425
msgid ""
"This function is similar to the :keyword:`exec` statement, but parses a file "
"instead of a string.  It is different from the :keyword:`import` statement "
"in that it does not use the module administration --- it reads the file "
"unconditionally and does not create a new module. [#]_"
msgstr ""

# 6565ac90dede4c0ab2eb2a81177e6c06
#: ../Doc/library/functions.rst:430
msgid ""
"The arguments are a file name and two optional dictionaries.  The file is "
"parsed and evaluated as a sequence of Python statements (similarly to a "
"module) using the *globals* and *locals* dictionaries as global and local "
"namespace. If provided, *locals* can be any mapping object.  Remember that "
"at module level, globals and locals are the same dictionary. If two separate "
"objects are passed as *globals* and *locals*, the code will be executed as "
"if it were embedded in a class definition."
msgstr ""

# 2e36da1e04854c00801485e4f316e5e2
#: ../Doc/library/functions.rst:441
msgid ""
"If the *locals* dictionary is omitted it defaults to the *globals* "
"dictionary. If both dictionaries are omitted, the expression is executed in "
"the environment where :func:`execfile` is called.  The return value is "
"``None``."
msgstr ""

# b89225813c0544849681997a179dcf09
#: ../Doc/library/functions.rst:447
msgid ""
"The default *locals* act as described for function :func:`locals` below: "
"modifications to the default *locals* dictionary should not be attempted.  "
"Pass an explicit *locals* dictionary if you need to see effects of the code "
"on *locals* after function :func:`execfile` returns.  :func:`execfile` "
"cannot be used reliably to modify a function's locals."
msgstr ""

# d9a2e59b023a4242b23a22dfa656a16e
#: ../Doc/library/functions.rst:456
msgid ""
"Constructor function for the :class:`file` type, described further in "
"section :ref:`bltin-file-objects`.  The constructor's arguments are the same "
"as those of the :func:`open` built-in function described below."
msgstr ""

# 275f0bb6b91e4ec7a6dd2d95435a35d8
#: ../Doc/library/functions.rst:460
msgid ""
"When opening a file, it's preferable to use :func:`open` instead of  "
"invoking this constructor directly.  :class:`file` is more suited to type "
"testing (for example, writing ``isinstance(f, file)``)."
msgstr ""

# fd89e541225e4981b42d967398dbae18
#: ../Doc/library/functions.rst:469
msgid ""
"Construct a list from those elements of *iterable* for which *function* "
"returns true.  *iterable* may be either a sequence, a container which "
"supports iteration, or an iterator.  If *iterable* is a string or a tuple, "
"the result also has that type; otherwise it is always a list.  If *function* "
"is ``None``, the identity function is assumed, that is, all elements of "
"*iterable* that are false are removed."
msgstr ""

# a0ee9dbacbd7459faf05235dfea733d7
#: ../Doc/library/functions.rst:476
msgid ""
"Note that ``filter(function, iterable)`` is equivalent to ``[item for item "
"in iterable if function(item)]`` if function is not ``None`` and ``[item for "
"item in iterable if item]`` if function is ``None``."
msgstr ""

# 20f60443095f490394931b22077c773f
#: ../Doc/library/functions.rst:480
msgid ""
"See :func:`itertools.ifilter` and :func:`itertools.ifilterfalse` for "
"iterator versions of this function, including a variation that filters for "
"elements where the *function* returns false."
msgstr ""

# d331f8de4f2f453dbbd9b300e4de0725
#: ../Doc/library/functions.rst:487
msgid ""
"Convert a string or a number to floating point.  If the argument is a "
"string, it must contain a possibly signed decimal or floating point number, "
"possibly embedded in whitespace. The argument may also be [+|-]nan or [+|-]"
"inf. Otherwise, the argument may be a plain or long integer or a floating "
"point number, and a floating point number with the same value (within "
"Python's floating point precision) is returned.  If no argument is given, "
"returns ``0.0``."
msgstr ""

# d62ef7990680488fa655462f077f5fe6
#: ../Doc/library/functions.rst:501
msgid ""
"When passing in a string, values for NaN and Infinity may be returned, "
"depending on the underlying C library.  Float accepts the strings nan, inf "
"and -inf for NaN and positive or negative infinity. The case and a leading + "
"are ignored as well as a leading - is ignored for NaN. Float always "
"represents NaN and infinity as nan, inf or -inf."
msgstr ""

#: ../Doc/library/functions.rst:507
msgid "The float type is described in :ref:`typesnumeric`."
msgstr ""

#: ../Doc/library/functions.rst:516
msgid ""
"Convert a *value* to a \"formatted\" representation, as controlled by "
"*format_spec*.  The interpretation of *format_spec* will depend on the type "
"of the *value* argument, however there is a standard formatting syntax that "
"is used by most built-in types: :ref:`formatspec`."
msgstr ""

#: ../Doc/library/functions.rst:523
msgid ""
"``format(value, format_spec)`` merely calls ``value.__format__(format_spec)"
"``."
msgstr ""

#: ../Doc/library/functions.rst:533
msgid ""
"Return a frozenset object, optionally with elements taken from *iterable*. "
"The frozenset type is described in :ref:`types-set`."
msgstr ""

#: ../Doc/library/functions.rst:536 ../Doc/library/functions.rst:1220
msgid ""
"For other containers see the built in :class:`dict`, :class:`list`, and :"
"class:`tuple` classes, and the :mod:`collections` module."
msgstr ""

# 36be5f72780f409da4af8dfe9e386706
#: ../Doc/library/functions.rst:544
msgid ""
"Return the value of the named attribute of *object*.  *name* must be a "
"string. If the string is the name of one of the object's attributes, the "
"result is the value of that attribute.  For example, ``getattr(x, 'foobar')"
"`` is equivalent to ``x.foobar``.  If the named attribute does not exist, "
"*default* is returned if provided, otherwise :exc:`AttributeError` is raised."
msgstr ""

#: ../Doc/library/functions.rst:553
msgid ""
"Return a dictionary representing the current global symbol table. This is "
"always the dictionary of the current module (inside a function or method, "
"this is the module where it is defined, not the module from which it is "
"called)."
msgstr ""

#: ../Doc/library/functions.rst:560
msgid ""
"The arguments are an object and a string.  The result is ``True`` if the "
"string is the name of one of the object's attributes, ``False`` if not. "
"(This is implemented by calling ``getattr(object, name)`` and seeing whether "
"it raises an exception or not.)"
msgstr ""

#: ../Doc/library/functions.rst:568
msgid ""
"Return the hash value of the object (if it has one).  Hash values are "
"integers. They are used to quickly compare dictionary keys during a "
"dictionary lookup. Numeric values that compare equal have the same hash "
"value (even if they are of different types, as is the case for 1 and 1.0)."
msgstr ""

#: ../Doc/library/functions.rst:576
msgid ""
"Invoke the built-in help system.  (This function is intended for interactive "
"use.)  If no argument is given, the interactive help system starts on the "
"interpreter console.  If the argument is a string, then the string is looked "
"up as the name of a module, function, class, method, keyword, or "
"documentation topic, and a help page is printed on the console.  If the "
"argument is any other kind of object, a help page on the object is generated."
msgstr ""

#: ../Doc/library/functions.rst:583
msgid ""
"This function is added to the built-in namespace by the :mod:`site` module."
msgstr ""

# 7177c6ead5244eb79f91366c673ef541
#: ../Doc/library/functions.rst:590
msgid ""
"Convert an integer number (of any size) to a hexadecimal string. The result "
"is a valid Python expression."
msgstr ""

#: ../Doc/library/functions.rst:595
msgid ""
"To obtain a hexadecimal string representation for a float, use the :meth:"
"`float.hex` method."
msgstr ""

# 4edc93230b8a4d0f941f483fb4c55c14
#: ../Doc/library/functions.rst:604
msgid ""
"Return the \"identity\" of an object.  This is an integer (or long integer) "
"which is guaranteed to be unique and constant for this object during its "
"lifetime. Two objects with non-overlapping lifetimes may have the same :func:"
"`id` value."
msgstr ""

# 08b28024a7f74680b541e52c407a9792
#: ../Doc/library/functions.rst:614
msgid "Equivalent to ``eval(raw_input(prompt))``."
msgstr ""

# 827ba3d64a6843f1a0270b019cb9852f
#: ../Doc/library/functions.rst:616
msgid ""
"This function does not catch user errors. If the input is not syntactically "
"valid, a :exc:`SyntaxError` will be raised. Other exceptions may be raised "
"if there is an error during evaluation."
msgstr ""

#: ../Doc/library/functions.rst:620
msgid ""
"If the :mod:`readline` module was loaded, then :func:`input` will use it to "
"provide elaborate line editing and history features."
msgstr ""

# 10b507ede8c9404f80575917e11534d3
#: ../Doc/library/functions.rst:623
msgid ""
"Consider using the :func:`raw_input` function for general input from users."
msgstr ""

# a54c71f26fcb4257bc367dc2b0feb944
#: ../Doc/library/functions.rst:628
msgid ""
"Convert a string or number to a plain integer.  If the argument is a string, "
"it must contain a possibly signed decimal number representable as a Python "
"integer, possibly embedded in whitespace.  The *base* parameter gives the "
"base for the conversion (which is 10 by default) and may be any integer in "
"the range [2, 36], or zero.  If *base* is zero, the proper radix is "
"determined based on the contents of string; the interpretation is the same "
"as for integer literals.  (See :ref:`numbers`.)  If *base* is specified and "
"*x* is not a string, :exc:`TypeError` is raised. Otherwise, the argument may "
"be a plain or long integer or a floating point number.  Conversion of "
"floating point numbers to integers truncates (towards zero).  If the "
"argument is outside the integer range a long object will be returned "
"instead.  If no arguments are given, returns ``0``."
msgstr ""

#: ../Doc/library/functions.rst:641
msgid "The integer type is described in :ref:`typesnumeric`."
msgstr ""

# 8c4c4046adf34229b5570e7ae7562456
#: ../Doc/library/functions.rst:646
msgid ""
"Return true if the *object* argument is an instance of the *classinfo* "
"argument, or of a (direct, indirect or :term:`virtual <abstract base "
"class>`) subclass thereof.  Also return true if *classinfo* is a type object "
"(new-style class) and *object* is an object of that type or of a (direct, "
"indirect or :term:`virtual <abstract base class>`) subclass thereof.  If "
"*object* is not a class instance or an object of the given type, the "
"function always returns false.  If *classinfo* is neither a class object nor "
"a type object, it may be a tuple of class or type objects, or may "
"recursively contain other such tuples (other sequence types are not "
"accepted).  If *classinfo* is not a class, type, or tuple of classes, types, "
"and such tuples, a :exc:`TypeError` exception is raised."
msgstr ""

# c1f84c15104b41908d8f349a4a65880b
#: ../Doc/library/functions.rst:664
msgid ""
"Return true if *class* is a subclass (direct, indirect or :term:`virtual "
"<abstract base class>`) of *classinfo*.  A class is considered a subclass of "
"itself. *classinfo* may be a tuple of class objects, in which case every "
"entry in *classinfo* will be checked. In any other case, a :exc:`TypeError` "
"exception is raised."
msgstr ""

# 47daaeeccccb4bb4953eabcea590ce0b
#: ../Doc/library/functions.rst:676
msgid ""
"Return an :term:`iterator` object.  The first argument is interpreted very "
"differently depending on the presence of the second argument. Without a "
"second argument, *o* must be a collection object which supports the "
"iteration protocol (the :meth:`__iter__` method), or it must support the "
"sequence protocol (the :meth:`__getitem__` method with integer arguments "
"starting at ``0``).  If it does not support either of those protocols, :exc:"
"`TypeError` is raised. If the second argument, *sentinel*, is given, then "
"*o* must be a callable object.  The iterator created in this case will call "
"*o* with no arguments for each call to its :meth:`~iterator.next` method; if "
"the value returned is equal to *sentinel*, :exc:`StopIteration` will be "
"raised, otherwise the value will be returned."
msgstr ""

# ade6ba802b5d493bb3dfac899af3b70e
#: ../Doc/library/functions.rst:687
msgid ""
"One useful application of the second form of :func:`iter` is to read lines "
"of a file until a certain line is reached.  The following example reads a "
"file until the :meth:`readline` method returns an empty string::"
msgstr ""

#: ../Doc/library/functions.rst:700
msgid ""
"Return the length (the number of items) of an object.  The argument may be a "
"sequence (string, tuple or list) or a mapping (dictionary)."
msgstr ""

# 57cb09030c3d4b56bf4b6dec8de23f06
#: ../Doc/library/functions.rst:706
msgid ""
"Return a list whose items are the same and in the same order as *iterable*'s "
"items.  *iterable* may be either a sequence, a container that supports "
"iteration, or an iterator object.  If *iterable* is already a list, a copy "
"is made and returned, similar to ``iterable[:]``.  For instance, ``list"
"('abc')`` returns ``['a', 'b', 'c']`` and ``list( (1, 2, 3) )`` returns ``"
"[1, 2, 3]``.  If no argument is given, returns a new empty list, ``[]``."
msgstr ""

# 8cfd8d5b6f6046ed8b2071dc801c53f4
#: ../Doc/library/functions.rst:713
msgid ""
":class:`list` is a mutable sequence type, as documented in :ref:`typesseq`. "
"For other containers see the built in :class:`dict`, :class:`set`, and :"
"class:`tuple` classes, and the :mod:`collections` module."
msgstr ""

#: ../Doc/library/functions.rst:720
msgid ""
"Update and return a dictionary representing the current local symbol table. "
"Free variables are returned by :func:`locals` when it is called in function "
"blocks, but not in class blocks."
msgstr ""

#: ../Doc/library/functions.rst:726
msgid ""
"The contents of this dictionary should not be modified; changes may not "
"affect the values of local and free variables used by the interpreter."
msgstr ""

# f380e42fbf3943d58c9bd537e621092a
#: ../Doc/library/functions.rst:732
msgid ""
"Convert a string or number to a long integer.  If the argument is a string, "
"it must contain a possibly signed number of arbitrary size, possibly "
"embedded in whitespace. The *base* argument is interpreted in the same way "
"as for :func:`int`, and may only be given when *x* is a string. Otherwise, "
"the argument may be a plain or long integer or a floating point number, and "
"a long integer with the same value is returned.    Conversion of floating "
"point numbers to integers truncates (towards zero).  If no arguments are "
"given, returns ``0L``."
msgstr ""

# 68c47e59bb6c4911b765cbc4c5ae48f3
#: ../Doc/library/functions.rst:740
msgid "The long type is described in :ref:`typesnumeric`."
msgstr ""

# a0ffa33cb3d744458b44374743b8ca26
#: ../Doc/library/functions.rst:745
msgid ""
"Apply *function* to every item of *iterable* and return a list of the "
"results. If additional *iterable* arguments are passed, *function* must take "
"that many arguments and is applied to the items from all iterables in "
"parallel.  If one iterable is shorter than another it is assumed to be "
"extended with ``None`` items.  If *function* is ``None``, the identity "
"function is assumed; if there are multiple arguments, :func:`map` returns a "
"list consisting of tuples containing the corresponding items from all "
"iterables (a kind of transpose operation).  The *iterable* arguments may be "
"a sequence  or any iterable object; the result is always a list."
msgstr ""

# 96c96342f8154bebbbd96f24c94e558b
#: ../Doc/library/functions.rst:759
msgid ""
"Return the largest item in an iterable or the largest of two or more "
"arguments."
msgstr ""

# d2af08f282f645e48c85a41054eae758
#: ../Doc/library/functions.rst:762
msgid ""
"If one positional argument is provided, *iterable* must be a non-empty "
"iterable (such as a non-empty string, tuple or list).  The largest item in "
"the iterable is returned.  If two or more positional arguments are provided, "
"the largest of the positional arguments is returned."
msgstr ""

# c45af64271e047a492992030f65d03df
#: ../Doc/library/functions.rst:767
msgid ""
"The optional *key* argument specifies a one-argument ordering function like "
"that used for :meth:`list.sort`.  The *key* argument, if supplied, must be "
"in keyword form (for example, ``max(a,b,c,key=func)``)."
msgstr ""

#: ../Doc/library/functions.rst:778
msgid ""
"Return a \"memory view\" object created from the given argument.  See :ref:"
"`typememoryview` for more information."
msgstr ""

# 8f9bf6e1105f4febaaf222b38dac3432
#: ../Doc/library/functions.rst:785
msgid ""
"Return the smallest item in an iterable or the smallest of two or more "
"arguments."
msgstr ""

# 4f421c390cac476a9703906c2a7ef7f4
#: ../Doc/library/functions.rst:788
msgid ""
"If one positional argument is provided, *iterable* must be a non-empty "
"iterable (such as a non-empty string, tuple or list).  The smallest item in "
"the iterable is returned.  If two or more positional arguments are provided, "
"the smallest of the positional arguments is returned."
msgstr ""

# ee225b842d904fd19a640b8c59fdd0f0
#: ../Doc/library/functions.rst:793
msgid ""
"The optional *key* argument specifies a one-argument ordering function like "
"that used for :meth:`list.sort`.  The *key* argument, if supplied, must be "
"in keyword form (for example, ``min(a,b,c,key=func)``)."
msgstr ""

# ad4e133ee3724fd4af195b2b83d2174a
#: ../Doc/library/functions.rst:803
msgid ""
"Retrieve the next item from the *iterator* by calling its :meth:`~iterator."
"next` method.  If *default* is given, it is returned if the iterator is "
"exhausted, otherwise :exc:`StopIteration` is raised."
msgstr ""

# f10ac7c355e04fd188ab77460146f604
#: ../Doc/library/functions.rst:812
msgid ""
"Return a new featureless object.  :class:`object` is a base for all new "
"style classes.  It has the methods that are common to all instances of new "
"style classes."
msgstr ""

# 6c9808d48795422a85cc3e2ee3c67153
#: ../Doc/library/functions.rst:825
msgid ""
"Convert an integer number (of any size) to an octal string.  The result is a "
"valid Python expression."
msgstr ""

# 7c9e4ab3bf0e41df89cb59365ae35f3a
#: ../Doc/library/functions.rst:834
msgid ""
"Open a file, returning an object of the :class:`file` type described in "
"section :ref:`bltin-file-objects`.  If the file cannot be opened, :exc:"
"`IOError` is raised.  When opening a file, it's preferable to use :func:"
"`open` instead of invoking the :class:`file` constructor directly."
msgstr ""

# 042473c5a2304a7fb82cfb786634aa32
#: ../Doc/library/functions.rst:839
msgid ""
"The first two arguments are the same as for ``stdio``'s :c:func:`fopen`: "
"*name* is the file name to be opened, and *mode* is a string indicating how "
"the file is to be opened."
msgstr ""

# 5795b02c227e43809e2122fce248fe0d
#: ../Doc/library/functions.rst:843
msgid ""
"The most commonly-used values of *mode* are ``'r'`` for reading, ``'w'`` for "
"writing (truncating the file if it already exists), and ``'a'`` for "
"appending (which on *some* Unix systems means that *all* writes append to "
"the end of the file regardless of the current seek position).  If *mode* is "
"omitted, it defaults to ``'r'``.  The default is to use text mode, which may "
"convert ``'\\n'`` characters to a platform-specific representation on "
"writing and back on reading.  Thus, when opening a binary file, you should "
"append ``'b'`` to the *mode* value to open the file in binary mode, which "
"will improve portability.  (Appending ``'b'`` is useful even on systems that "
"don't treat binary and text files differently, where it serves as "
"documentation.)  See below for more possible values of *mode*."
msgstr ""

# cc00dbff68c94b35a458e6ba1696bad4
#: ../Doc/library/functions.rst:861
msgid ""
"The optional *buffering* argument specifies the file's desired buffer size: "
"0 means unbuffered, 1 means line buffered, any other positive value means "
"use a buffer of (approximately) that size.  A negative *buffering* means to "
"use the system default, which is usually line buffered for tty devices and "
"fully buffered for other files.  If omitted, the system default is used. [#]_"
msgstr ""

# b4a1c629dff546ddba1f58d03869e74e
#: ../Doc/library/functions.rst:867
msgid ""
"Modes ``'r+'``, ``'w+'`` and ``'a+'`` open the file for updating (note that "
"``'w+'`` truncates the file).  Append ``'b'`` to the mode to open the file "
"in binary mode, on systems that differentiate between binary and text files; "
"on systems that don't have this distinction, adding the ``'b'`` has no "
"effect."
msgstr ""

# 2f57951718804152a984a9727f547c3d
#: ../Doc/library/functions.rst:875
msgid ""
"In addition to the standard :c:func:`fopen` values *mode* may be ``'U'`` or "
"``'rU'``.  Python is usually built with :term:`universal newlines` support; "
"supplying ``'U'`` opens the file as a text file, but lines may be terminated "
"by any of the following: the Unix end-of-line convention ``'\\n'``,  the "
"Macintosh convention ``'\\r'``, or the Windows convention ``'\\r\\n'``. All "
"of these external representations are seen as ``'\\n'`` by the Python "
"program. If Python is built without universal newlines support a *mode* with "
"``'U'`` is the same as normal text mode.  Note that file objects so opened "
"also have an attribute called :attr:`newlines` which has a value of ``None`` "
"(if no newlines have yet been seen), ``'\\n'``, ``'\\r'``, ``'\\r\\n'``, or "
"a tuple containing all the newline types seen."
msgstr ""

# 1df26e9c72d949ffbef44f381d336339
#: ../Doc/library/functions.rst:887
msgid ""
"Python enforces that the mode, after stripping ``'U'``, begins with ``'r'``, "
"``'w'`` or ``'a'``."
msgstr ""

# 895422cf122344b69eceb29dcd458a37
#: ../Doc/library/functions.rst:890
msgid ""
"Python provides many file handling modules including :mod:`fileinput`, :mod:"
"`os`, :mod:`os.path`, :mod:`tempfile`, and :mod:`shutil`."
msgstr ""

# d1262c52a3d4417fb39b17d5dd88c38d
#: ../Doc/library/functions.rst:900
msgid ""
"Given a string of length one, return an integer representing the Unicode "
"code point of the character when the argument is a unicode object, or the "
"value of the byte when the argument is an 8-bit string. For example, ``ord"
"('a')`` returns the integer ``97``, ``ord(u'\\u2020')`` returns ``8224``.  "
"This is the inverse of :func:`chr` for 8-bit strings and of :func:`unichr` "
"for unicode objects.  If a unicode argument is given and Python was built "
"with UCS2 Unicode, then the character's code point must be in the range "
"[0..65535] inclusive; otherwise the string length is two, and a :exc:"
"`TypeError` will be raised."
msgstr ""

#: ../Doc/library/functions.rst:912
msgid ""
"Return *x* to the power *y*; if *z* is present, return *x* to the power *y*, "
"modulo *z* (computed more efficiently than ``pow(x, y) % z``). The two-"
"argument form ``pow(x, y)`` is equivalent to using the power operator: "
"``x**y``."
msgstr ""

# f6e9c43b22e04b68ad1ca7008bb23835
#: ../Doc/library/functions.rst:916
msgid ""
"The arguments must have numeric types.  With mixed operand types, the "
"coercion rules for binary arithmetic operators apply.  For int and long int "
"operands, the result has the same type as the operands (after coercion) "
"unless the second argument is negative; in that case, all arguments are "
"converted to float and a float result is delivered.  For example, ``10**2`` "
"returns ``100``, but ``10**-2`` returns ``0.01``.  (This last feature was "
"added in Python 2.2.  In Python 2.1 and before, if both arguments were of "
"integer types and the second argument was negative, an exception was "
"raised.) If the second argument is negative, the third argument must be "
"omitted. If *z* is present, *x* and *y* must be of integer types, and *y* "
"must be non-negative.  (This restriction was added in Python 2.2.  In Python "
"2.1 and before, floating 3-argument ``pow()`` returned platform-dependent "
"results depending on floating-point rounding accidents.)"
msgstr ""

# 4e7ee959df8745ff8883129bf92d313b
#: ../Doc/library/functions.rst:933
msgid ""
"Print *objects* to the stream *file*, separated by *sep* and followed by "
"*end*.  *sep*, *end* and *file*, if present, must be given as keyword "
"arguments."
msgstr ""

# b794d9f2bb2b4ca882e86b8f525f838c
#: ../Doc/library/functions.rst:937
msgid ""
"All non-keyword arguments are converted to strings like :func:`str` does and "
"written to the stream, separated by *sep* and followed by *end*.  Both *sep* "
"and *end* must be strings; they can also be ``None``, which means to use the "
"default values.  If no *objects* are given, :func:`print` will just write "
"*end*."
msgstr ""

# 816d6d47cdaf4138bb9a97bef02fa497
#: ../Doc/library/functions.rst:943
msgid ""
"The *file* argument must be an object with a ``write(string)`` method; if it "
"is not present or ``None``, :data:`sys.stdout` will be used.  Output "
"buffering is determined by *file*.  Use ``file.flush()`` to ensure, for "
"instance, immediate appearance on a screen."
msgstr ""

# 053dab7e74594f7fba3aa646caf53120
#: ../Doc/library/functions.rst:950
msgid ""
"This function is not normally available as a built-in since the name "
"``print`` is recognized as the :keyword:`print` statement.  To disable the "
"statement and use the :func:`print` function, use this future statement at "
"the top of your module::"
msgstr ""

# b8d6696a60b947f69d6a14d98b9ac380
#: ../Doc/library/functions.rst:962
msgid ""
"Return a property attribute for :term:`new-style class`\\es (classes that "
"derive from :class:`object`)."
msgstr ""

# 8db915f8112e49e3bb760f8d95275543
#: ../Doc/library/functions.rst:965
msgid ""
"*fget* is a function for getting an attribute value, likewise *fset* is a "
"function for setting, and *fdel* a function for del'ing, an attribute.  "
"Typical use is to define a managed attribute ``x``::"
msgstr ""

# 3000f07d9aed42908ce6ad8a113587f3
#: ../Doc/library/functions.rst:981
msgid ""
"If then *c* is an instance of *C*, ``c.x`` will invoke the getter, ``c.x = "
"value`` will invoke the setter and ``del c.x`` the deleter."
msgstr ""

#: ../Doc/library/functions.rst:984
msgid ""
"If given, *doc* will be the docstring of the property attribute. Otherwise, "
"the property will copy *fget*'s docstring (if it exists).  This makes it "
"possible to create read-only properties easily using :func:`property` as a :"
"term:`decorator`::"
msgstr ""

#: ../Doc/library/functions.rst:997
msgid ""
"turns the :meth:`voltage` method into a \"getter\" for a read-only attribute "
"with the same name."
msgstr ""

#: ../Doc/library/functions.rst:1000
msgid ""
"A property object has :attr:`getter`, :attr:`setter`, and :attr:`deleter` "
"methods usable as decorators that create a copy of the property with the "
"corresponding accessor function set to the decorated function.  This is best "
"explained with an example::"
msgstr ""

#: ../Doc/library/functions.rst:1022
msgid ""
"This code is exactly equivalent to the first example.  Be sure to give the "
"additional functions the same name as the original property (``x`` in this "
"case.)"
msgstr ""

#: ../Doc/library/functions.rst:1026
msgid ""
"The returned property also has the attributes ``fget``, ``fset``, and "
"``fdel`` corresponding to the constructor arguments."
msgstr ""

# e1ae6872415942868e6690cf85d997d3
#: ../Doc/library/functions.rst:1041
msgid ""
"This is a versatile function to create lists containing arithmetic "
"progressions. It is most often used in :keyword:`for` loops.  The arguments "
"must be plain integers.  If the *step* argument is omitted, it defaults to "
"``1``.  If the *start* argument is omitted, it defaults to ``0``.  The full "
"form returns a list of plain integers ``[start, start + step, start + 2 * "
"step, ...]``.  If *step* is positive, the last element is the largest "
"``start + i * step`` less than *stop*; if *step* is negative, the last "
"element is the smallest ``start + i * step`` greater than *stop*.  *step* "
"must not be zero (or else :exc:`ValueError` is raised).  Example:"
msgstr ""

# 222a9ea74331444093ac8245a39c61d4
#: ../Doc/library/functions.rst:1069
msgid ""
"If the *prompt* argument is present, it is written to standard output "
"without a trailing newline.  The function then reads a line from input, "
"converts it to a string (stripping a trailing newline), and returns that. "
"When EOF is read, :exc:`EOFError` is raised. Example::"
msgstr ""

# 837f8590e69a423ebc6fe9f9c73bf655
#: ../Doc/library/functions.rst:1079
msgid ""
"If the :mod:`readline` module was loaded, then :func:`raw_input` will use it "
"to provide elaborate line editing and history features."
msgstr ""

# f78795b828d34be39c0909c759444441
#: ../Doc/library/functions.rst:1085
msgid ""
"Apply *function* of two arguments cumulatively to the items of *iterable*, "
"from left to right, so as to reduce the iterable to a single value.  For "
"example, ``reduce(lambda x, y: x+y, [1, 2, 3, 4, 5])`` calculates ``"
"((((1+2)+3)+4)+5)``. The left argument, *x*, is the accumulated value and "
"the right argument, *y*, is the update value from the *iterable*.  If the "
"optional *initializer* is present, it is placed before the items of the "
"iterable in the calculation, and serves as a default when the iterable is "
"empty.  If *initializer* is not given and *iterable* contains only one item, "
"the first item is returned. Roughly equivalent to::"
msgstr ""

#: ../Doc/library/functions.rst:1109
msgid ""
"Reload a previously imported *module*.  The argument must be a module "
"object, so it must have been successfully imported before.  This is useful "
"if you have edited the module source file using an external editor and want "
"to try out the new version without leaving the Python interpreter.  The "
"return value is the module object (the same as the *module* argument)."
msgstr ""

#: ../Doc/library/functions.rst:1115
msgid "When ``reload(module)`` is executed:"
msgstr ""

#: ../Doc/library/functions.rst:1117
msgid ""
"Python modules' code is recompiled and the module-level code reexecuted, "
"defining a new set of objects which are bound to names in the module's "
"dictionary.  The ``init`` function of extension modules is not called a "
"second time."
msgstr ""

#: ../Doc/library/functions.rst:1122
msgid ""
"As with all other objects in Python the old objects are only reclaimed after "
"their reference counts drop to zero."
msgstr ""

#: ../Doc/library/functions.rst:1125
msgid ""
"The names in the module namespace are updated to point to any new or changed "
"objects."
msgstr ""

#: ../Doc/library/functions.rst:1128
msgid ""
"Other references to the old objects (such as names external to the module) "
"are not rebound to refer to the new objects and must be updated in each "
"namespace where they occur if that is desired."
msgstr ""

#: ../Doc/library/functions.rst:1132
msgid "There are a number of other caveats:"
msgstr ""

#: ../Doc/library/functions.rst:1134
msgid ""
"If a module is syntactically correct but its initialization fails, the "
"first :keyword:`import` statement for it does not bind its name locally, but "
"does store a (partially initialized) module object in ``sys.modules``.  To "
"reload the module you must first :keyword:`import` it again (this will bind "
"the name to the partially initialized module object) before you can :func:"
"`reload` it."
msgstr ""

#: ../Doc/library/functions.rst:1140
msgid ""
"When a module is reloaded, its dictionary (containing the module's global "
"variables) is retained.  Redefinitions of names will override the old "
"definitions, so this is generally not a problem.  If the new version of a "
"module does not define a name that was defined by the old version, the old "
"definition remains.  This feature can be used to the module's advantage if "
"it maintains a global table or cache of objects --- with a :keyword:`try` "
"statement it can test for the table's presence and skip its initialization "
"if desired::"
msgstr ""

#: ../Doc/library/functions.rst:1153
msgid ""
"It is legal though generally not very useful to reload built-in or "
"dynamically loaded modules, except for :mod:`sys`, :mod:`__main__` and :mod:"
"`__builtin__`. In many cases, however, extension modules are not designed to "
"be initialized more than once, and may fail in arbitrary ways when reloaded."
msgstr ""

#: ../Doc/library/functions.rst:1158
msgid ""
"If a module imports objects from another module using :keyword:`from` ... :"
"keyword:`import` ..., calling :func:`reload` for the other module does not "
"redefine the objects imported from it --- one way around this is to re-"
"execute the :keyword:`from` statement, another is to use :keyword:`import` "
"and qualified names (*module*.*name*) instead."
msgstr ""

#: ../Doc/library/functions.rst:1164
msgid ""
"If a module instantiates instances of a class, reloading the module that "
"defines the class does not affect the method definitions of the instances "
"--- they continue to use the old class definition.  The same is true for "
"derived classes."
msgstr ""

# e5270581965442238cf8dc480c9a5626
#: ../Doc/library/functions.rst:1171
msgid ""
"Return a string containing a printable representation of an object.  This is "
"the same value yielded by conversions (reverse quotes).  It is sometimes "
"useful to be able to access this operation as an ordinary function.  For "
"many types, this function makes an attempt to return a string that would "
"yield an object with the same value when passed to :func:`eval`, otherwise "
"the representation is a string enclosed in angle brackets that contains the "
"name of the type of the object together with additional information often "
"including the name and address of the object.  A class can control what this "
"function returns for its instances by defining a :meth:`__repr__` method."
msgstr ""

#: ../Doc/library/functions.rst:1184
msgid ""
"Return a reverse :term:`iterator`.  *seq* must be an object which has a :"
"meth:`__reversed__` method or supports the sequence protocol (the :meth:"
"`__len__` method and the :meth:`__getitem__` method with integer arguments "
"starting at ``0``)."
msgstr ""

# 1a0bfe8190774e60bc46c9e6d8bf2f95
#: ../Doc/library/functions.rst:1197
msgid ""
"Return the floating point value *x* rounded to *n* digits after the decimal "
"point.  If *n* is omitted, it defaults to zero. The result is a floating "
"point number.  Values are rounded to the closest multiple of 10 to the power "
"minus *n*; if two multiples are equally close, rounding is done away from 0 "
"(so. for example, ``round(0.5)`` is ``1.0`` and ``round(-0.5)`` is ``-1.0``)."
msgstr ""

# 0537e9d2480643af9bab8f4b0551064d
#: ../Doc/library/functions.rst:1206
msgid ""
"The behavior of :func:`round` for floats can be surprising: for example, "
"``round(2.675, 2)`` gives ``2.67`` instead of the expected ``2.68``. This is "
"not a bug: it's a result of the fact that most decimal fractions can't be "
"represented exactly as a float.  See :ref:`tut-fp-issues` for more "
"information."
msgstr ""

#: ../Doc/library/functions.rst:1217
msgid ""
"Return a new set, optionally with elements taken from *iterable*. The set "
"type is described in :ref:`types-set`."
msgstr ""

#: ../Doc/library/functions.rst:1228
msgid ""
"This is the counterpart of :func:`getattr`.  The arguments are an object, a "
"string and an arbitrary value.  The string may name an existing attribute or "
"a new attribute.  The function assigns the value to the attribute, provided "
"the object allows it.  For example, ``setattr(x, 'foobar', 123)`` is "
"equivalent to ``x.foobar = 123``."
msgstr ""

#: ../Doc/library/functions.rst:1240
msgid ""
"Return a :term:`slice` object representing the set of indices specified by "
"``range(start, stop, step)``.  The *start* and *step* arguments default to "
"``None``.  Slice objects have read-only data attributes :attr:`start`, :attr:"
"`stop` and :attr:`step` which merely return the argument values (or their "
"default).  They have no other explicit functionality; however they are used "
"by Numerical Python and other third party extensions.  Slice objects are "
"also generated when extended indexing syntax is used.  For example: ``a"
"[start:stop:step]`` or ``a[start:stop, i]``.  See :func:`itertools.islice` "
"for an alternate version that returns an iterator."
msgstr ""

#: ../Doc/library/functions.rst:1253
msgid "Return a new sorted list from the items in *iterable*."
msgstr ""

# 8fc58e2a6b9e4c029e0854f59b996a31
#: ../Doc/library/functions.rst:1255
msgid ""
"The optional arguments *cmp*, *key*, and *reverse* have the same meaning as "
"those for the :meth:`list.sort` method (described in section :ref:`typesseq-"
"mutable`)."
msgstr ""

# dbca6a51844e4226bce33fb7ca90004b
#: ../Doc/library/functions.rst:1259
msgid ""
"*cmp* specifies a custom comparison function of two arguments (iterable "
"elements) which should return a negative, zero or positive number depending "
"on whether the first argument is considered smaller than, equal to, or "
"larger than the second argument: ``cmp=lambda x,y: cmp(x.lower(), y.lower())"
"``.  The default value is ``None``."
msgstr ""

#: ../Doc/library/functions.rst:1265
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each list element: ``key=str.lower``.  The default value "
"is ``None`` (compare the elements directly)."
msgstr ""

#: ../Doc/library/functions.rst:1269 ../Doc/library/stdtypes.rst:1670
msgid ""
"*reverse* is a boolean value.  If set to ``True``, then the list elements "
"are sorted as if each comparison were reversed."
msgstr ""

# c79edd0159634017a44fed0a25a0c2ad
# 9769238e23cc495e88138012538d6e2d
#: ../Doc/library/functions.rst:1272 ../Doc/library/stdtypes.rst:1673
msgid ""
"In general, the *key* and *reverse* conversion processes are much faster "
"than specifying an equivalent *cmp* function.  This is because *cmp* is "
"called multiple times for each list element while *key* and *reverse* touch "
"each element only once.  Use :func:`functools.cmp_to_key` to convert an old-"
"style *cmp* function to a *key* function."
msgstr ""

#: ../Doc/library/functions.rst:1278
msgid ""
"For sorting examples and a brief sorting tutorial, see `Sorting HowTo "
"<http://wiki.python.org/moin/HowTo/Sorting/>`_\\."
msgstr ""

#: ../Doc/library/functions.rst:1286
msgid "Return a static method for *function*."
msgstr ""

#: ../Doc/library/functions.rst:1288
msgid ""
"A static method does not receive an implicit first argument. To declare a "
"static method, use this idiom::"
msgstr ""

#: ../Doc/library/functions.rst:1295
msgid ""
"The ``@staticmethod`` form is a function :term:`decorator` -- see the "
"description of function definitions in :ref:`function` for details."
msgstr ""

#: ../Doc/library/functions.rst:1298
msgid ""
"It can be called either on the class (such as ``C.f()``) or on an instance "
"(such as ``C().f()``).  The instance is ignored except for its class."
msgstr ""

# 4c714a589ae44a72b34e2c1922a9165f
#: ../Doc/library/functions.rst:1301
msgid ""
"Static methods in Python are similar to those found in Java or C++. Also "
"see :func:`classmethod` for a variant that is useful for creating alternate "
"class constructors."
msgstr ""

#: ../Doc/library/functions.rst:1305
msgid ""
"For more information on static methods, consult the documentation on the "
"standard type hierarchy in :ref:`types`."
msgstr ""

# ae3cdf961a7b49259435ddf6ca839b1a
#: ../Doc/library/functions.rst:1316
msgid ""
"Return a string containing a nicely printable representation of an object.  "
"For strings, this returns the string itself.  The difference with ``repr"
"(object)`` is that ``str(object)`` does not always attempt to return a "
"string that is acceptable to :func:`eval`; its goal is to return a printable "
"string.  If no argument is given, returns the empty string, ``''``."
msgstr ""

# a31db130d7b9429ba8ffee5dc572bb40
#: ../Doc/library/functions.rst:1322
msgid ""
"For more information on strings see :ref:`typesseq` which describes sequence "
"functionality (strings are sequences), and also the string-specific methods "
"described in the :ref:`string-methods` section. To output formatted strings "
"use template strings or the ``%`` operator described in the :ref:`string-"
"formatting` section. In addition see the :ref:`stringservices` section. See "
"also :func:`unicode`."
msgstr ""

# 0a420ef5bd7c47be92a432ba5de36cc5
#: ../Doc/library/functions.rst:1332
msgid ""
"Sums *start* and the items of an *iterable* from left to right and returns "
"the total.  *start* defaults to ``0``. The *iterable*'s items are normally "
"numbers, and the start value is not allowed to be a string."
msgstr ""

# 074449d3e0f045719caf84079c5cafda
#: ../Doc/library/functions.rst:1336
msgid ""
"For some use cases, there are good alternatives to :func:`sum`. The "
"preferred, fast way to concatenate a sequence of strings is by calling ``''."
"join(sequence)``.  To add floating point values with extended precision, "
"see :func:`math.fsum`\\.  To concatenate a series of iterables, consider "
"using :func:`itertools.chain`."
msgstr ""

#: ../Doc/library/functions.rst:1347
msgid ""
"Return a proxy object that delegates method calls to a parent or sibling "
"class of *type*.  This is useful for accessing inherited methods that have "
"been overridden in a class. The search order is same as that used by :func:"
"`getattr` except that the *type* itself is skipped."
msgstr ""

#: ../Doc/library/functions.rst:1352
msgid ""
"The :attr:`__mro__` attribute of the *type* lists the method resolution "
"search order used by both :func:`getattr` and :func:`super`.  The attribute "
"is dynamic and can change whenever the inheritance hierarchy is updated."
msgstr ""

#: ../Doc/library/functions.rst:1356
msgid ""
"If the second argument is omitted, the super object returned is unbound.  If "
"the second argument is an object, ``isinstance(obj, type)`` must be true.  "
"If the second argument is a type, ``issubclass(type2, type)`` must be true "
"(this is useful for classmethods)."
msgstr ""

# aabdea37cac142bd989172961a12ad1b
#: ../Doc/library/functions.rst:1362
msgid ":func:`super` only works for :term:`new-style class`\\es."
msgstr ""

#: ../Doc/library/functions.rst:1364
msgid ""
"There are two typical use cases for *super*.  In a class hierarchy with "
"single inheritance, *super* can be used to refer to parent classes without "
"naming them explicitly, thus making the code more maintainable.  This use "
"closely parallels the use of *super* in other programming languages."
msgstr ""

#: ../Doc/library/functions.rst:1369
msgid ""
"The second use case is to support cooperative multiple inheritance in a "
"dynamic execution environment.  This use case is unique to Python and is not "
"found in statically compiled languages or languages that only support single "
"inheritance.  This makes it possible to implement \"diamond diagrams\" where "
"multiple base classes implement the same method.  Good design dictates that "
"this method have the same calling signature in every case (because the order "
"of calls is determined at runtime, because that order adapts to changes in "
"the class hierarchy, and because that order can include sibling classes that "
"are unknown prior to runtime)."
msgstr ""

#: ../Doc/library/functions.rst:1379
msgid "For both use cases, a typical superclass call looks like this::"
msgstr ""

#: ../Doc/library/functions.rst:1385
msgid ""
"Note that :func:`super` is implemented as part of the binding process for "
"explicit dotted attribute lookups such as ``super().__getitem__(name)``. It "
"does so by implementing its own :meth:`__getattribute__` method for "
"searching classes in a predictable order that supports cooperative multiple "
"inheritance. Accordingly, :func:`super` is undefined for implicit lookups "
"using statements or operators such as ``super()[name]``."
msgstr ""

# b2e125f7b67d402f8cc83058f5fbee7e
#: ../Doc/library/functions.rst:1392
msgid ""
"Also note that :func:`super` is not limited to use inside methods.  The two "
"argument form specifies the arguments exactly and makes the appropriate "
"references."
msgstr ""

# 1df995548e2e4fb5bab5ba78adbc6f50
#: ../Doc/library/functions.rst:1396
msgid ""
"For practical suggestions on how to design cooperative classes using :func:"
"`super`, see `guide to using super() <http://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_."
msgstr ""

#: ../Doc/library/functions.rst:1405
msgid ""
"Return a tuple whose items are the same and in the same order as "
"*iterable*'s items.  *iterable* may be a sequence, a container that supports "
"iteration, or an iterator object. If *iterable* is already a tuple, it is "
"returned unchanged. For instance, ``tuple('abc')`` returns ``('a', 'b', 'c')"
"`` and ``tuple([1, 2, 3])`` returns ``(1, 2, 3)``.  If no argument is given, "
"returns a new empty tuple, ``()``."
msgstr ""

# 2c124d002fa44996b7309e7f3c4e2f72
#: ../Doc/library/functions.rst:1412
msgid ""
":class:`tuple` is an immutable sequence type, as documented in :ref:"
"`typesseq`. For other containers see the built in :class:`dict`, :class:"
"`list`, and :class:`set` classes, and the :mod:`collections` module."
msgstr ""

# 5c8317df1f9c4023963bb9fd33be8f99
#: ../Doc/library/functions.rst:1421
msgid ""
"Return the type of an *object*.  The return value is a type object.  The :"
"func:`isinstance` built-in function is recommended for testing the type of "
"an object."
msgstr ""

#: ../Doc/library/functions.rst:1425
msgid ""
"With three arguments, :func:`type` functions as a constructor as detailed "
"below."
msgstr ""

#: ../Doc/library/functions.rst:1431
msgid ""
"Return a new type object.  This is essentially a dynamic form of the :"
"keyword:`class` statement. The *name* string is the class name and becomes "
"the :attr:`__name__` attribute; the *bases* tuple itemizes the base classes "
"and becomes the :attr:`__bases__` attribute; and the *dict* dictionary is "
"the namespace containing definitions for class body and becomes the :attr:"
"`__dict__` attribute.  For example, the following two statements create "
"identical :class:`type` objects:"
msgstr ""

# 133883df52fc4380bc6a9f48276f374b
#: ../Doc/library/functions.rst:1449
msgid ""
"Return the Unicode string of one character whose Unicode code is the integer "
"*i*.  For example, ``unichr(97)`` returns the string ``u'a'``.  This is the "
"inverse of :func:`ord` for Unicode strings.  The valid range for the "
"argument depends how Python was configured -- it may be either UCS2 "
"[0..0xFFFF] or UCS4 [0..0x10FFFF]. :exc:`ValueError` is raised otherwise. "
"For ASCII and 8-bit strings see :func:`chr`."
msgstr ""

# 5f0d9a0a7fee43c4af11a788ae35c56d
#: ../Doc/library/functions.rst:1461
msgid ""
"Return the Unicode string version of *object* using one of the following "
"modes:"
msgstr ""

# 17ac3415e3224780b9b2e634a259d1ed
#: ../Doc/library/functions.rst:1463
msgid ""
"If *encoding* and/or *errors* are given, ``unicode()`` will decode the "
"object which can either be an 8-bit string or a character buffer using the "
"codec for *encoding*. The *encoding* parameter is a string giving the name "
"of an encoding; if the encoding is not known, :exc:`LookupError` is raised. "
"Error handling is done according to *errors*; this specifies the treatment "
"of characters which are invalid in the input encoding.  If *errors* is "
"``'strict'`` (the default), a :exc:`ValueError` is raised on errors, while a "
"value of ``'ignore'`` causes errors to be silently ignored, and a value of "
"``'replace'`` causes the official Unicode replacement character, ``U+FFFD``, "
"to be used to replace input characters which cannot be decoded.  See also "
"the :mod:`codecs` module."
msgstr ""

# 0ee5480aadf74acaa2dd7f40cd0c4955
#: ../Doc/library/functions.rst:1474
msgid ""
"If no optional parameters are given, ``unicode()`` will mimic the behaviour "
"of ``str()`` except that it returns Unicode strings instead of 8-bit "
"strings. More precisely, if *object* is a Unicode string or subclass it will "
"return that Unicode string without any additional decoding applied."
msgstr ""

# 2fc92af8d6b4473da656e0886761f64f
#: ../Doc/library/functions.rst:1479
msgid ""
"For objects which provide a :meth:`__unicode__` method, it will call this "
"method without arguments to create a Unicode string. For all other objects, "
"the 8-bit string version or representation is requested and then converted "
"to a Unicode string using the codec for the default encoding in ``'strict'`` "
"mode."
msgstr ""

# 4f4e7c03b5294eae84b24e1e30d5c488
#: ../Doc/library/functions.rst:1484
msgid ""
"For more information on Unicode strings see :ref:`typesseq` which describes "
"sequence functionality (Unicode strings are sequences), and also the string-"
"specific methods described in the :ref:`string-methods` section. To output "
"formatted strings use template strings or the ``%`` operator described in "
"the :ref:`string-formatting` section. In addition see the :ref:"
"`stringservices` section. See also :func:`str`."
msgstr ""

# 38d964483b134911b009cbb42afb03ce
#: ../Doc/library/functions.rst:1499
msgid ""
"Return the :attr:`__dict__` attribute for a module, class, instance, or any "
"other object with a :attr:`__dict__` attribute."
msgstr ""

# cc8e30d837634e0f88ce3fdd4d63cab5
#: ../Doc/library/functions.rst:1502
msgid ""
"Objects such as modules and instances have an updateable :attr:`__dict__` "
"attribute; however, other objects may have write restrictions on their :attr:"
"`__dict__` attributes (for example, new-style classes use a dictproxy to "
"prevent direct dictionary updates)."
msgstr ""

# 79c72b7151a141d680776066973049ee
#: ../Doc/library/functions.rst:1507
msgid ""
"Without an argument, :func:`vars` acts like :func:`locals`.  Note, the "
"locals dictionary is only useful for reads since updates to the locals "
"dictionary are ignored."
msgstr ""

# 19f73336b3e140f8a39cfceb7ea60ccf
#: ../Doc/library/functions.rst:1515
msgid ""
"This function is very similar to :func:`range`, but returns an \"xrange "
"object\" instead of a list.  This is an opaque sequence type which yields "
"the same values as the corresponding list, without actually storing them all "
"simultaneously. The advantage of :func:`xrange` over :func:`range` is "
"minimal (since :func:`xrange` still has to create the values when asked for "
"them) except when a very large range is used on a memory-starved machine or "
"when all of the range's elements are never used (such as when the loop is "
"usually terminated with :keyword:`break`)."
msgstr ""

# df9c9b4927904f069a2e9ea779b2f382
#: ../Doc/library/functions.rst:1526
msgid ""
":func:`xrange` is intended to be simple and fast.  Implementations may "
"impose restrictions to achieve this.  The C implementation of Python "
"restricts all arguments to native C longs (\"short\" Python integers), and "
"also requires that the number of elements fit in a native C long.  If a "
"larger range is needed, an alternate version can be crafted using the :mod:"
"`itertools` module: ``islice(count(start, step), (stop-start+step-1+2*"
"(step<0))//step)``."
msgstr ""

# a3534a394be94ec3885247d6ea28a446
#: ../Doc/library/functions.rst:1537
msgid ""
"This function returns a list of tuples, where the *i*-th tuple contains the "
"*i*-th element from each of the argument sequences or iterables. The "
"returned list is truncated in length to the length of the shortest argument "
"sequence. When there are multiple arguments which are all of the same "
"length, :func:`zip` is similar to :func:`map` with an initial argument of "
"``None``. With a single sequence argument, it returns a list of 1-tuples. "
"With no arguments, it returns an empty list."
msgstr ""

#: ../Doc/library/functions.rst:1545
msgid ""
"The left-to-right evaluation order of the iterables is guaranteed. This "
"makes possible an idiom for clustering a data series into n-length groups "
"using ``zip(*[iter(s)]*n)``."
msgstr ""

#: ../Doc/library/functions.rst:1549
msgid ""
":func:`zip` in conjunction with the ``*`` operator can be used to unzip a "
"list::"
msgstr ""

# 1d2a89cd092a41d3a0024f3460cb7a17
#: ../Doc/library/functions.rst:1576
msgid ""
"This is an advanced function that is not needed in everyday Python "
"programming, unlike :func:`importlib.import_module`."
msgstr ""

# 7227ee49d05f4ecd85cbf67473c09cd2
#: ../Doc/library/functions.rst:1579
msgid ""
"This function is invoked by the :keyword:`import` statement.  It can be "
"replaced (by importing the :mod:`__builtin__` module and assigning to "
"``__builtin__.__import__``) in order to change semantics of the :keyword:"
"`import` statement, but nowadays it is usually simpler to use import hooks "
"(see :pep:`302`).  Direct use of :func:`__import__` is rare, except in cases "
"where you want to import a module whose name is only known at runtime."
msgstr ""

#: ../Doc/library/functions.rst:1586
msgid ""
"The function imports the module *name*, potentially using the given "
"*globals* and *locals* to determine how to interpret the name in a package "
"context. The *fromlist* gives the names of objects or submodules that should "
"be imported from the module given by *name*.  The standard implementation "
"does not use its *locals* argument at all, and uses its *globals* only to "
"determine the package context of the :keyword:`import` statement."
msgstr ""

# 28787c29f6854a1bb4ddc26549be0e16
#: ../Doc/library/functions.rst:1593
msgid ""
"*level* specifies whether to use absolute or relative imports.  The default "
"is ``-1`` which indicates both absolute and relative imports will be "
"attempted.  ``0`` means only perform absolute imports.  Positive values for "
"*level* indicate the number of parent directories to search relative to the "
"directory of the module calling :func:`__import__`."
msgstr ""

#: ../Doc/library/functions.rst:1599
msgid ""
"When the *name* variable is of the form ``package.module``, normally, the "
"top-level package (the name up till the first dot) is returned, *not* the "
"module named by *name*.  However, when a non-empty *fromlist* argument is "
"given, the module named by *name* is returned."
msgstr ""

#: ../Doc/library/functions.rst:1604
msgid ""
"For example, the statement ``import spam`` results in bytecode resembling "
"the following code::"
msgstr ""

#: ../Doc/library/functions.rst:1609
msgid "The statement ``import spam.ham`` results in this call::"
msgstr ""

#: ../Doc/library/functions.rst:1613
msgid ""
"Note how :func:`__import__` returns the toplevel module here because this is "
"the object that is bound to a name by the :keyword:`import` statement."
msgstr ""

#: ../Doc/library/functions.rst:1616
msgid ""
"On the other hand, the statement ``from spam.ham import eggs, sausage as "
"saus`` results in ::"
msgstr ""

#: ../Doc/library/functions.rst:1623
msgid ""
"Here, the ``spam.ham`` module is returned from :func:`__import__`.  From "
"this object, the names to import are retrieved and assigned to their "
"respective names."
msgstr ""

# ac80d8a5412c4140a59779525808e767
#: ../Doc/library/functions.rst:1627
msgid ""
"If you simply want to import a module (potentially within a package) by "
"name, use :func:`importlib.import_module`."
msgstr ""

# 5b9ea0217df64d7eb5b60f9d313511f9
#: ../Doc/library/functions.rst:1643
msgid "Non-essential Built-in Functions"
msgstr ""

# a16852848b0b4adeb3697d4b9b92be7c
#: ../Doc/library/functions.rst:1645
msgid ""
"There are several built-in functions that are no longer essential to learn, "
"know or use in modern Python programming.  They have been kept here to "
"maintain backwards compatibility with programs written for older versions of "
"Python."
msgstr ""

# 002b6773d83242c48edac7722cd26a43
#: ../Doc/library/functions.rst:1649
msgid ""
"Python programmers, trainers, students and book writers should feel free to "
"bypass these functions without concerns about missing something important."
msgstr ""

# 539d3c06e53343558f8dd75950e0ba84
#: ../Doc/library/functions.rst:1655
msgid ""
"The *function* argument must be a callable object (a user-defined or built-"
"in function or method, or a class object) and the *args* argument must be a "
"sequence.  The *function* is called with *args* as the argument list; the "
"number of arguments is the length of the tuple. If the optional *keywords* "
"argument is present, it must be a dictionary whose keys are strings.  It "
"specifies keyword arguments to be added to the end of the argument list. "
"Calling :func:`apply` is different from just calling ``function(args)``, "
"since in that case there is always exactly one argument.  The use of :func:"
"`apply` is equivalent to ``function(*args, **keywords)``."
msgstr ""

# af1fb68473e748abb4cab13889cb1fd4
#: ../Doc/library/functions.rst:1671
msgid ""
"The *object* argument must be an object that supports the buffer call "
"interface (such as strings, arrays, and buffers).  A new buffer object will "
"be created which references the *object* argument. The buffer object will be "
"a slice from the beginning of *object* (or from the specified *offset*). The "
"slice will extend to the end of *object* (or will have a length given by the "
"*size* argument)."
msgstr ""

# 05d11348011d4f1895cf1bea98bda6b3
#: ../Doc/library/functions.rst:1681
msgid ""
"Return a tuple consisting of the two numeric arguments converted to a common "
"type, using the same rules as used by arithmetic operations. If coercion is "
"not possible, raise :exc:`TypeError`."
msgstr ""

#: ../Doc/library/functions.rst:1688
msgid ""
"Enter *string* in the table of \"interned\" strings and return the interned "
"string -- which is *string* itself or a copy. Interning strings is useful to "
"gain a little performance on dictionary lookup -- if the keys in a "
"dictionary are interned, and the lookup key is interned, the key comparisons "
"(after hashing) can be done by a pointer compare instead of a string "
"compare.  Normally, the names used in Python programs are automatically "
"interned, and the dictionaries used to hold module, class or instance "
"attributes have interned keys."
msgstr ""

# 9ea9ad9745c54948afc230c081cd59cd
#: ../Doc/library/functions.rst:1703
msgid ""
"It is used relatively rarely so does not warrant being made into a statement."
msgstr ""

# 9523ab609d234acbbc677f5a427b3f01
#: ../Doc/library/functions.rst:1705
msgid ""
"Specifying a buffer size currently has no effect on systems that don't have :"
"c:func:`setvbuf`.  The interface to specify the buffer size is not done "
"using a method that calls :c:func:`setvbuf`, because that may dump core when "
"called after any I/O has been performed, and there's no reliable way to "
"determine whether this is the case."
msgstr ""

#: ../Doc/library/functions.rst:1711
msgid ""
"In the current implementation, local variable bindings cannot normally be "
"affected this way, but variables retrieved from other scopes (such as "
"modules) can be.  This may change."
msgstr ""

# 19654a96645f4de8b38e410788cd6f43
#: ../Doc/library/functools.rst:2
msgid ""
":mod:`functools` --- Higher-order functions and operations on callable "
"objects"
msgstr ""

# 3e91b334026a44cd9d2a85c519b47f06
#: ../Doc/library/functools.rst:13
msgid "**Source code:** :source:`Lib/functools.py`"
msgstr ""

#: ../Doc/library/functools.rst:17
msgid ""
"The :mod:`functools` module is for higher-order functions: functions that "
"act on or return other functions. In general, any callable object can be "
"treated as a function for the purposes of this module."
msgstr ""

#: ../Doc/library/functools.rst:21
msgid "The :mod:`functools` module defines the following functions:"
msgstr ""

# 6d74a394f11444a8999f153634307712
#: ../Doc/library/functools.rst:25
msgid ""
"Transform an old-style comparison function to a key function.  Used with "
"tools that accept key functions (such as :func:`sorted`, :func:`min`, :func:"
"`max`, :func:`heapq.nlargest`, :func:`heapq.nsmallest`, :func:`itertools."
"groupby`).  This function is primarily used as a transition tool for "
"programs being converted to Python 3 where comparison functions are no "
"longer supported."
msgstr ""

# bc9bbc21224b47838497dd679075ca88
#: ../Doc/library/functools.rst:32
msgid ""
"A comparison function is any callable that accept two arguments, compares "
"them, and returns a negative number for less-than, zero for equality, or a "
"positive number for greater-than.  A key function is a callable that accepts "
"one argument and returns another value that indicates the position in the "
"desired collation sequence."
msgstr ""

#: ../Doc/library/functools.rst:46
msgid ""
"Given a class defining one or more rich comparison ordering methods, this "
"class decorator supplies the rest.  This simplifies the effort involved in "
"specifying all of the possible rich comparison operations:"
msgstr ""

#: ../Doc/library/functools.rst:50
msgid ""
"The class must define one of :meth:`__lt__`, :meth:`__le__`, :meth:`__gt__`, "
"or :meth:`__ge__`. In addition, the class should supply an :meth:`__eq__` "
"method."
msgstr ""

# 20346d703048454e8541c22d355c4d04
#: ../Doc/library/functools.rst:69
msgid ""
"This is the same function as :func:`reduce`.  It is made available in this "
"module to allow writing code more forward-compatible with Python 3."
msgstr ""

#: ../Doc/library/functools.rst:77
msgid ""
"Return a new :class:`partial` object which when called will behave like "
"*func* called with the positional arguments *args* and keyword arguments "
"*keywords*. If more arguments are supplied to the call, they are appended to "
"*args*. If additional keyword arguments are supplied, they extend and "
"override *keywords*. Roughly equivalent to::"
msgstr ""

#: ../Doc/library/functools.rst:93
msgid ""
"The :func:`partial` is used for partial function application which \"freezes"
"\" some portion of a function's arguments and/or keywords resulting in a new "
"object with a simplified signature.  For example, :func:`partial` can be "
"used to create a callable that behaves like the :func:`int` function where "
"the *base* argument defaults to two:"
msgstr ""

#: ../Doc/library/functools.rst:108
msgid ""
"Update a *wrapper* function to look like the *wrapped* function. The "
"optional arguments are tuples to specify which attributes of the original "
"function are assigned directly to the matching attributes on the wrapper "
"function and which attributes of the wrapper function are updated with the "
"corresponding attributes from the original function. The default values for "
"these arguments are the module level constants *WRAPPER_ASSIGNMENTS* (which "
"assigns to the wrapper function's *__name__*, *__module__* and *__doc__*, "
"the documentation string) and *WRAPPER_UPDATES* (which updates the wrapper "
"function's *__dict__*, i.e. the instance dictionary)."
msgstr ""

#: ../Doc/library/functools.rst:118
msgid ""
"The main intended use for this function is in :term:`decorator` functions "
"which wrap the decorated function and return the wrapper. If the wrapper "
"function is not updated, the metadata of the returned function will reflect "
"the wrapper definition rather than the original function definition, which "
"is typically less than helpful."
msgstr ""

#: ../Doc/library/functools.rst:127
msgid ""
"This is a convenience function for invoking ``partial(update_wrapper, "
"wrapped=wrapped, assigned=assigned, updated=updated)`` as a function "
"decorator when defining a wrapper function. For example:"
msgstr ""

#: ../Doc/library/functools.rst:152
msgid ""
"Without the use of this decorator factory, the name of the example function "
"would have been ``'wrapper'``, and the docstring of the original :func:"
"`example` would have been lost."
msgstr ""

#: ../Doc/library/functools.rst:160
msgid ":class:`partial` Objects"
msgstr ""

#: ../Doc/library/functools.rst:162
msgid ""
":class:`partial` objects are callable objects created by :func:`partial`. "
"They have three read-only attributes:"
msgstr ""

#: ../Doc/library/functools.rst:168
msgid ""
"A callable object or function.  Calls to the :class:`partial` object will be "
"forwarded to :attr:`func` with new arguments and keywords."
msgstr ""

#: ../Doc/library/functools.rst:174
msgid ""
"The leftmost positional arguments that will be prepended to the positional "
"arguments provided to a :class:`partial` object call."
msgstr ""

#: ../Doc/library/functools.rst:180
msgid ""
"The keyword arguments that will be supplied when the :class:`partial` object "
"is called."
msgstr ""

#: ../Doc/library/functools.rst:183
msgid ""
":class:`partial` objects are like :class:`function` objects in that they are "
"callable, weak referencable, and can have attributes.  There are some "
"important differences.  For instance, the :attr:`__name__` and :attr:"
"`__doc__` attributes are not created automatically.  Also, :class:`partial` "
"objects defined in classes behave like static methods and do not transform "
"into bound methods during instance attribute look-up."
msgstr ""

# c6a8b16e35d54626acaa8b0d0e8f2994
#: ../Doc/library/future_builtins.rst:2
msgid ":mod:`future_builtins` --- Python 3 builtins"
msgstr ""

# f700ab9109304c1c8b3140cf69aace9b
#: ../Doc/library/future_builtins.rst:8
msgid ""
"This module provides functions that exist in 2.x, but have different "
"behavior in Python 3, so they cannot be put into the 2.x builtins namespace."
msgstr ""

# a28b48ea3b4f4a1e89436904fdb6aa47
#: ../Doc/library/future_builtins.rst:11
msgid ""
"Instead, if you want to write code compatible with Python 3 builtins, import "
"them from this module, like this::"
msgstr ""

# 07063315afe247babd722c2a7b0ddead
#: ../Doc/library/future_builtins.rst:18
msgid ""
"The :term:`2to3` tool that ports Python 2 code to Python 3 will recognize "
"this usage and leave the new builtins alone."
msgstr ""

# 7676e19cc2f744669f5064a349254f73
#: ../Doc/library/future_builtins.rst:23
msgid ""
"The Python 3 :func:`print` function is already in the builtins, but cannot "
"be accessed from Python 2 code unless you use the appropriate future "
"statement::"
msgstr ""

# 4103886325c84a92b8eee496e290e8e2
#: ../Doc/library/future_builtins.rst:29
msgid "Available builtins are:"
msgstr ""

# bf2c93953a1b44be8d8ec8e4f262c392
#: ../Doc/library/future_builtins.rst:33
msgid ""
"Returns the same as :func:`repr`.  In Python 3, :func:`repr` will return "
"printable Unicode characters unescaped, while :func:`ascii` will always "
"backslash-escape them.  Using :func:`future_builtins.ascii` instead of :func:"
"`repr` in 2.6 code makes it clear that you need a pure ASCII return value."
msgstr ""

# 07ad5d50f2ac45dfad238c5a241ae52a
#: ../Doc/library/future_builtins.rst:41
msgid "Works like :func:`itertools.ifilter`."
msgstr ""

# db332d4279a7476cbfdfc5035a642bc1
#: ../Doc/library/future_builtins.rst:45
msgid ""
"Works like the built-in :func:`hex`, but instead of :meth:`__hex__` it will "
"use the :meth:`__index__` method on its argument to get an integer that is "
"then converted to hexadecimal."
msgstr ""

# cc647df9adcb48e5a7113a2e29c50a15
#: ../Doc/library/future_builtins.rst:51
msgid "Works like :func:`itertools.imap`."
msgstr ""

# a069c51294174900b2568b1164e3c971
#: ../Doc/library/future_builtins.rst:55
msgid ""
"Works like the built-in :func:`oct`, but instead of :meth:`__oct__` it will "
"use the :meth:`__index__` method on its argument to get an integer that is "
"then converted to octal."
msgstr ""

# 9fe88ba7ff424510b9b30f1fc4698df7
#: ../Doc/library/future_builtins.rst:61
msgid "Works like :func:`itertools.izip`."
msgstr ""

#: ../Doc/library/gc.rst:3
msgid ":mod:`gc` --- Garbage Collector interface"
msgstr ""

#: ../Doc/library/gc.rst:11
msgid ""
"This module provides an interface to the optional garbage collector.  It "
"provides the ability to disable the collector, tune the collection "
"frequency, and set debugging options.  It also provides access to "
"unreachable objects that the collector found but cannot free.  Since the "
"collector supplements the reference counting already used in Python, you can "
"disable the collector if you are sure your program does not create reference "
"cycles.  Automatic collection can be disabled by calling ``gc.disable()``.  "
"To debug a leaking program call ``gc.set_debug(gc.DEBUG_LEAK)``. Notice that "
"this includes ``gc.DEBUG_SAVEALL``, causing garbage-collected objects to be "
"saved in gc.garbage for inspection."
msgstr ""

#: ../Doc/library/gc.rst:22
msgid "The :mod:`gc` module provides the following functions:"
msgstr ""

#: ../Doc/library/gc.rst:27
msgid "Enable automatic garbage collection."
msgstr ""

#: ../Doc/library/gc.rst:32
msgid "Disable automatic garbage collection."
msgstr ""

#: ../Doc/library/gc.rst:37
msgid "Returns true if automatic collection is enabled."
msgstr ""

#: ../Doc/library/gc.rst:42
msgid ""
"With no arguments, run a full collection.  The optional argument "
"*generation* may be an integer specifying which generation to collect (from "
"0 to 2).  A :exc:`ValueError` is raised if the generation number  is "
"invalid. The number of unreachable objects found is returned."
msgstr ""

#: ../Doc/library/gc.rst:59
msgid ""
"Set the garbage collection debugging flags. Debugging information will be "
"written to ``sys.stderr``.  See below for a list of debugging flags which "
"can be combined using bit operations to control debugging."
msgstr ""

#: ../Doc/library/gc.rst:66
msgid "Return the debugging flags currently set."
msgstr ""

#: ../Doc/library/gc.rst:71
msgid ""
"Returns a list of all objects tracked by the collector, excluding the list "
"returned."
msgstr ""

#: ../Doc/library/gc.rst:79
msgid ""
"Set the garbage collection thresholds (the collection frequency). Setting "
"*threshold0* to zero disables collection."
msgstr ""

#: ../Doc/library/gc.rst:82
msgid ""
"The GC classifies objects into three generations depending on how many "
"collection sweeps they have survived.  New objects are placed in the "
"youngest generation (generation ``0``).  If an object survives a collection "
"it is moved into the next older generation.  Since generation ``2`` is the "
"oldest generation, objects in that generation remain there after a "
"collection.  In order to decide when to run, the collector keeps track of "
"the number object allocations and deallocations since the last collection.  "
"When the number of allocations minus the number of deallocations exceeds "
"*threshold0*, collection starts.  Initially only generation ``0`` is "
"examined.  If generation ``0`` has been examined more than *threshold1* "
"times since generation ``1`` has been examined, then generation ``1`` is "
"examined as well.  Similarly, *threshold2* controls the number of "
"collections of generation ``1`` before collecting generation ``2``."
msgstr ""

#: ../Doc/library/gc.rst:99
msgid ""
"Return the current collection  counts as a tuple of ``(count0, count1, "
"count2)``."
msgstr ""

#: ../Doc/library/gc.rst:107
msgid ""
"Return the current collection thresholds as a tuple of ``(threshold0, "
"threshold1, threshold2)``."
msgstr ""

#: ../Doc/library/gc.rst:113
msgid ""
"Return the list of objects that directly refer to any of objs. This function "
"will only locate those containers which support garbage collection; "
"extension types which do refer to other objects but do not support garbage "
"collection will not be found."
msgstr ""

#: ../Doc/library/gc.rst:118
msgid ""
"Note that objects which have already been dereferenced, but which live in "
"cycles and have not yet been collected by the garbage collector can be "
"listed among the resulting referrers.  To get only currently live objects, "
"call :func:`collect` before calling :func:`get_referrers`."
msgstr ""

#: ../Doc/library/gc.rst:123
msgid ""
"Care must be taken when using objects returned by :func:`get_referrers` "
"because some of them could still be under construction and hence in a "
"temporarily invalid state. Avoid using :func:`get_referrers` for any purpose "
"other than debugging."
msgstr ""

#: ../Doc/library/gc.rst:133
msgid ""
"Return a list of objects directly referred to by any of the arguments. The "
"referents returned are those objects visited by the arguments' C-level :attr:"
"`tp_traverse` methods (if any), and may not be all objects actually directly "
"reachable.  :attr:`tp_traverse` methods are supported only by objects that "
"support garbage collection, and are only required to visit objects that may "
"be involved in a cycle.  So, for example, if an integer is directly "
"reachable from an argument, that integer object may or may not appear in the "
"result list."
msgstr ""

#: ../Doc/library/gc.rst:145
msgid ""
"Returns True if the object is currently tracked by the garbage collector, "
"False otherwise.  As a general rule, instances of atomic types aren't "
"tracked and instances of non-atomic types (containers, user-defined "
"objects...) are.  However, some type-specific optimizations can be present "
"in order to suppress the garbage collector footprint of simple instances (e."
"g. dicts containing only atomic keys and values)::"
msgstr ""

#: ../Doc/library/gc.rst:168
msgid ""
"The following variable is provided for read-only access (you can mutate its "
"value but should not rebind it):"
msgstr ""

# edaa39c3fdc74d70bc24c83544ad8122
#: ../Doc/library/gc.rst:174
msgid ""
"A list of objects which the collector found to be unreachable but could not "
"be freed (uncollectable objects).  By default, this list contains only "
"objects with :meth:`__del__` methods. [#]_ Objects that have :meth:`__del__` "
"methods and are part of a reference cycle cause the entire reference cycle "
"to be uncollectable, including objects not necessarily in the cycle but "
"reachable only from it. Python doesn't collect such cycles automatically "
"because, in general, it isn't possible for Python to guess a safe order in "
"which to run the :meth:`__del__` methods.  If you know a safe order, you can "
"force the issue by examining the *garbage* list, and explicitly breaking "
"cycles due to your objects within the list.  Note that these objects are "
"kept alive even so by virtue of being in the *garbage* list, so they should "
"be removed from *garbage* too.  For example, after breaking cycles, do ``del "
"gc.garbage[:]`` to empty the list.  It's generally better to avoid the issue "
"by not creating cycles containing objects with :meth:`__del__` methods, and "
"*garbage* can be examined in that case to verify that no such cycles are "
"being created."
msgstr ""

#: ../Doc/library/gc.rst:190
msgid ""
"If :const:`DEBUG_SAVEALL` is set, then all unreachable objects will be added "
"to this list rather than freed."
msgstr ""

#: ../Doc/library/gc.rst:193
msgid "The following constants are provided for use with :func:`set_debug`:"
msgstr ""

#: ../Doc/library/gc.rst:198
msgid ""
"Print statistics during collection.  This information can be useful when "
"tuning the collection frequency."
msgstr ""

#: ../Doc/library/gc.rst:204
msgid "Print information on collectable objects found."
msgstr ""

#: ../Doc/library/gc.rst:209
msgid ""
"Print information of uncollectable objects found (objects which are not "
"reachable but cannot be freed by the collector).  These objects will be "
"added to the ``garbage`` list."
msgstr ""

# 08e279c33f5d48588b48a6f99853810b
#: ../Doc/library/gc.rst:216
msgid ""
"When :const:`DEBUG_COLLECTABLE` or :const:`DEBUG_UNCOLLECTABLE` is set, "
"print information about instance objects found."
msgstr ""

# 7140fa5a026a42e98452ab1154af2c22
#: ../Doc/library/gc.rst:222
msgid ""
"When :const:`DEBUG_COLLECTABLE` or :const:`DEBUG_UNCOLLECTABLE` is set, "
"print information about objects other than instance objects found."
msgstr ""

#: ../Doc/library/gc.rst:228
msgid ""
"When set, all unreachable objects found will be appended to *garbage* rather "
"than being freed.  This can be useful for debugging a leaking program."
msgstr ""

# 208f34f8f65647aea477e67baa9f863e
#: ../Doc/library/gc.rst:234
msgid ""
"The debugging flags necessary for the collector to print information about a "
"leaking program (equal to ``DEBUG_COLLECTABLE | DEBUG_UNCOLLECTABLE | "
"DEBUG_INSTANCES | DEBUG_OBJECTS | DEBUG_SAVEALL``)."
msgstr ""

# 88d76ba5afdb49f3ac02197b749158ef
#: ../Doc/library/gc.rst:240
msgid ""
"Prior to Python 2.2, the list contained all instance objects in unreachable "
"cycles,  not only those with :meth:`__del__` methods."
msgstr ""

# 96a98b294e9d451981031c5ce173dff0
#: ../Doc/library/gdbm.rst:2
msgid ":mod:`gdbm` --- GNU's reinterpretation of dbm"
msgstr ""

# cb74b11915274b179c61f52cb79a4702
#: ../Doc/library/gdbm.rst:9
msgid ""
"The :mod:`gdbm` module has been renamed to :mod:`dbm.gnu` in Python 3.  The :"
"term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

# d3fbe73776894d29b37aa8a601caa0e0
#: ../Doc/library/gdbm.rst:16
msgid ""
"This module is quite similar to the :mod:`dbm` module, but uses ``gdbm`` "
"instead to provide some additional functionality.  Please note that the file "
"formats created by ``gdbm`` and ``dbm`` are incompatible."
msgstr ""

# 3cb582a9b3be45ee9c8bf19ef16b8b63
#: ../Doc/library/gdbm.rst:20
msgid ""
"The :mod:`gdbm` module provides an interface to the GNU DBM library.  "
"``gdbm`` objects behave like mappings (dictionaries), except that keys and "
"values are always strings. Printing a ``gdbm`` object doesn't print the keys "
"and values, and the :meth:`items` and :meth:`values` methods are not "
"supported."
msgstr ""

# d9ea1e6ee7be412eaefd81b0aa588656
#: ../Doc/library/gdbm.rst:25
msgid "The module defines the following constant and functions:"
msgstr ""

# 44baed7ea8df46208f7f6cdd62823462
#: ../Doc/library/gdbm.rst:30
msgid ""
"Raised on ``gdbm``\\ -specific errors, such as I/O errors. :exc:`KeyError` "
"is raised for general mapping errors like specifying an incorrect key."
msgstr ""

# 537aa448c39341b197fa09982792f9b1
#: ../Doc/library/gdbm.rst:36
msgid ""
"Open a ``gdbm`` database and return a ``gdbm`` object.  The *filename* "
"argument is the name of the database file."
msgstr ""

#: ../Doc/library/gdbm.rst:39
msgid "The optional *flag* argument can be:"
msgstr ""

#: ../Doc/library/gdbm.rst:57
msgid ""
"The following additional characters may be appended to the flag to control "
"how the database is opened:"
msgstr ""

#: ../Doc/library/gdbm.rst:63
msgid ""
"Open the database in fast mode.  Writes to the database will not be "
"synchronized."
msgstr ""

#: ../Doc/library/gdbm.rst:66 ../Doc/library/stdtypes.rst:1457
#: ../Doc/library/string.rst:411
msgid "``'s'``"
msgstr ""

#: ../Doc/library/gdbm.rst:66
msgid ""
"Synchronized mode. This will cause changes to the database to be immediately "
"written to the file."
msgstr ""

#: ../Doc/library/gdbm.rst:70
msgid "Do not lock database."
msgstr ""

#: ../Doc/library/gdbm.rst:73
msgid ""
"Not all flags are valid for all versions of ``gdbm``.  The module constant :"
"const:`open_flags` is a string of supported flag characters.  The exception :"
"exc:`error` is raised if an invalid flag is specified."
msgstr ""

# 34d099c5f90c4d8da2b969ba3df066ad
#: ../Doc/library/gdbm.rst:77
msgid ""
"The optional *mode* argument is the Unix mode of the file, used only when "
"the database has to be created.  It defaults to octal ``0666``."
msgstr ""

#: ../Doc/library/gdbm.rst:80
msgid ""
"In addition to the dictionary-like methods, ``gdbm`` objects have the "
"following methods:"
msgstr ""

#: ../Doc/library/gdbm.rst:86
msgid ""
"It's possible to loop over every key in the database using this method  and "
"the :meth:`nextkey` method.  The traversal is ordered by ``gdbm``'s internal "
"hash values, and won't be sorted by the key values.  This method returns the "
"starting key."
msgstr ""

#: ../Doc/library/gdbm.rst:94
msgid ""
"Returns the key that follows *key* in the traversal.  The following code "
"prints every key in the database ``db``, without having to create a list in "
"memory that contains them all::"
msgstr ""

# 0016dec2b1ea474187eaf18d7ea77e95
#: ../Doc/library/gdbm.rst:106
msgid ""
"If you have carried out a lot of deletions and would like to shrink the "
"space used by the ``gdbm`` file, this routine will reorganize the database.  "
"``gdbm`` will not shorten the length of a database file except by using this "
"reorganization; otherwise, deleted file space will be kept and reused as new "
"(key, value) pairs are added."
msgstr ""

#: ../Doc/library/gdbm.rst:115
msgid ""
"When the database has been opened in fast mode, this method forces any "
"unwritten data to be written to the disk."
msgstr ""

# b2cc5d21e1f141478cc64ea7052517bb
#: ../Doc/library/gensuitemodule.rst:3
msgid ":mod:`gensuitemodule` --- Generate OSA stub packages"
msgstr ""

# 59b5f661e68742ff927342e20f4a09b8
#: ../Doc/library/gensuitemodule.rst:11
msgid ""
"The :mod:`gensuitemodule` module creates a Python package implementing stub "
"code for the AppleScript suites that are implemented by a specific "
"application, according to its AppleScript dictionary."
msgstr ""

# c20193dc3a0c4b7f8c52f23406e5fdad
#: ../Doc/library/gensuitemodule.rst:15
msgid ""
"It is usually invoked by the user through the :program:`PythonIDE`, but it "
"can also be run as a script from the command line (pass :option:`--help` for "
"help on the options) or imported from Python code. For an example of its use "
"see :file:`Mac/scripts/genallsuites.py` in a source distribution, which "
"generates the stub packages that are included in the standard library."
msgstr ""

# c710de516216445f89ab37af5b7d8bfa
#: ../Doc/library/gensuitemodule.rst:21
msgid "It defines the following public functions:"
msgstr ""

# c6df425a03c34a5281a63ebd9a5b05b5
#: ../Doc/library/gensuitemodule.rst:26
msgid ""
"Returns true if ``application``, which should be passed as a pathname, "
"appears to be scriptable. Take the return value with a grain of salt: :"
"program:`Internet Explorer` appears not to be scriptable but definitely is."
msgstr ""

# ab6cf1f19d1c4d84be6b315bcc7ce6f4
#: ../Doc/library/gensuitemodule.rst:33
msgid ""
"Create a stub package for ``application``, which should be passed as a full "
"pathname. For a :file:`.app` bundle this is the pathname to the bundle, not "
"to the executable inside the bundle; for an unbundled CFM application you "
"pass the filename of the application binary."
msgstr ""

# 01514ea2ff154f5ea01a56cccb1c106d
#: ../Doc/library/gensuitemodule.rst:38
msgid ""
"This function asks the application for its OSA terminology resources, "
"decodes these resources and uses the resultant data to create the Python "
"code for the package implementing the client stubs."
msgstr ""

# 82eb06f05bbe46f78f1ee05a6d289d97
#: ../Doc/library/gensuitemodule.rst:42
msgid ""
"``output`` is the pathname where the resulting package is stored, if not "
"specified a standard \"save file as\" dialog is presented to the user. "
"``basepkgname`` is the base package on which this package will build, and "
"defaults to :mod:`StdSuites`. Only when generating :mod:`StdSuites` itself "
"do you need to specify this. ``edit_modnames`` is a dictionary that can be "
"used to change modulenames that are too ugly after name mangling. "
"``creator_signature`` can be used to override the 4-char creator code, which "
"is normally obtained from the :file:`PkgInfo` file in the package or from "
"the CFM file creator signature. When ``dump`` is given it should refer to a "
"file object, and ``processfile`` will stop after decoding the resources and "
"dump the Python representation of the terminology resources to this file. "
"``verbose`` should also be a file object, and specifying it will cause "
"``processfile`` to tell you what it is doing."
msgstr ""

# 289e6f1aba0941218d09bfc6d2b25ca5
#: ../Doc/library/gensuitemodule.rst:58
msgid ""
"This function does the same as ``processfile``, except that it uses a "
"different method to get the terminology resources. It opens ``application`` "
"as a resource file and reads all ``\"aete\"`` and ``\"aeut\"`` resources "
"from this file."
msgstr ""

#: ../Doc/library/getopt.rst:2
msgid ":mod:`getopt` --- C-style parser for command line options"
msgstr ""

# 547ea81b2aad4633860d6f60e921320b
#: ../Doc/library/getopt.rst:8
msgid "**Source code:** :source:`Lib/getopt.py`"
msgstr ""

# 12c2529981b54f2c8019ee72b4bd9642
#: ../Doc/library/getopt.rst:13
msgid ""
"The :mod:`getopt` module is a parser for command line options whose API is "
"designed to be familiar to users of the C :c:func:`getopt` function. Users "
"who are unfamiliar with the C :c:func:`getopt` function or who would like to "
"write less code and get better help and error messages should consider using "
"the :mod:`argparse` module instead."
msgstr ""

# 7187368cd8324cb7b58447f3b3e53951
#: ../Doc/library/getopt.rst:19
msgid ""
"This module helps scripts to parse the command line arguments in ``sys."
"argv``. It supports the same conventions as the Unix :c:func:`getopt` "
"function (including the special meanings of arguments of the form '``-``' "
"and '``--``').  Long options similar to those supported by GNU software may "
"be used as well via an optional third argument."
msgstr ""

#: ../Doc/library/getopt.rst:25
msgid "This module provides two functions and an exception:"
msgstr ""

# aaaa4fab999847c581b0b32445f752bc
#: ../Doc/library/getopt.rst:31
msgid ""
"Parses command line options and parameter list.  *args* is the argument list "
"to be parsed, without the leading reference to the running program. "
"Typically, this means ``sys.argv[1:]``. *options* is the string of option "
"letters that the script wants to recognize, with options that require an "
"argument followed by a colon (``':'``; i.e., the same format that Unix :c:"
"func:`getopt` uses)."
msgstr ""

# bbc7d904e18b43869d7cddbb25ce7142
#: ../Doc/library/getopt.rst:39
msgid ""
"Unlike GNU :c:func:`getopt`, after a non-option argument, all further "
"arguments are considered also non-options. This is similar to the way non-"
"GNU Unix systems work."
msgstr ""

# 9d189cf708ed453b80cb761aff5a9ec3
#: ../Doc/library/getopt.rst:43
msgid ""
"*long_options*, if specified, must be a list of strings with the names of "
"the long options which should be supported.  The leading ``'--'`` characters "
"should not be included in the option name.  Long options which require an "
"argument should be followed by an equal sign (``'='``).  Optional arguments "
"are not supported.  To accept only long options, *options* should be an "
"empty string.  Long options on the command line can be recognized so long as "
"they provide a prefix of the option name that matches exactly one of the "
"accepted options.  For example, if *long_options* is ``['foo', 'frob']``, "
"the option ``--fo`` will match as ``--foo``, but ``--f`` will not match "
"uniquely, so :exc:`GetoptError` will be raised."
msgstr ""

#: ../Doc/library/getopt.rst:54
msgid ""
"The return value consists of two elements: the first is a list of ``(option, "
"value)`` pairs; the second is the list of program arguments left after the "
"option list was stripped (this is a trailing slice of *args*).  Each option-"
"and-value pair returned has the option as its first element, prefixed with a "
"hyphen for short options (e.g., ``'-x'``) or two hyphens for long options (e."
"g., ``'--long-option'``), and the option argument as its second element, or "
"an empty string if the option has no argument.  The options occur in the "
"list in the same order in which they were found, thus allowing multiple "
"occurrences.  Long and short options may be mixed."
msgstr ""

#: ../Doc/library/getopt.rst:67
msgid ""
"This function works like :func:`getopt`, except that GNU style scanning mode "
"is used by default. This means that option and non-option arguments may be "
"intermixed. The :func:`getopt` function stops processing options as soon as "
"a non-option argument is encountered."
msgstr ""

# 4c86ade8dd7f47c394ea70e2afe7eb16
#: ../Doc/library/getopt.rst:72
msgid ""
"If the first character of the option string is ``'+'``, or if the "
"environment variable :envvar:`POSIXLY_CORRECT` is set, then option "
"processing stops as soon as a non-option argument is encountered."
msgstr ""

#: ../Doc/library/getopt.rst:81
msgid ""
"This is raised when an unrecognized option is found in the argument list or "
"when an option requiring an argument is given none. The argument to the "
"exception is a string indicating the cause of the error.  For long options, "
"an argument given to an option which does not require one will also cause "
"this exception to be raised.  The attributes :attr:`msg` and :attr:`opt` "
"give the error message and related option; if there is no specific option to "
"which the exception relates, :attr:`opt` is an empty string."
msgstr ""

#: ../Doc/library/getopt.rst:95
msgid "Alias for :exc:`GetoptError`; for backward compatibility."
msgstr ""

#: ../Doc/library/getopt.rst:97
msgid "An example using only Unix style options:"
msgstr ""

#: ../Doc/library/getopt.rst:109
msgid "Using long option names is equally easy:"
msgstr ""

#: ../Doc/library/getopt.rst:122
msgid "In a script, typical usage is something like this::"
msgstr ""

#: ../Doc/library/getopt.rst:151
msgid ""
"Note that an equivalent command line interface could be produced with less "
"code and more informative help and error messages by using the :mod:"
"`argparse` module::"
msgstr ""

#: ../Doc/library/getopt.rst:167
msgid "Alternative command line option and argument parsing library."
msgstr ""

#: ../Doc/library/getpass.rst:2
msgid ":mod:`getpass` --- Portable password input"
msgstr ""

#: ../Doc/library/getpass.rst:10
msgid "The :mod:`getpass` module provides two functions:"
msgstr ""

# a7110a5543c64a4aaac0fe0d2bfd62d0
#: ../Doc/library/getpass.rst:15
msgid ""
"Prompt the user for a password without echoing.  The user is prompted using "
"the string *prompt*, which defaults to ``'Password: '``. On Unix, the prompt "
"is written to the file-like object *stream*.  *stream* defaults to the "
"controlling terminal (/dev/tty) or if that is unavailable to ``sys.stderr`` "
"(this argument is ignored on Windows)."
msgstr ""

#: ../Doc/library/getpass.rst:21
msgid ""
"If echo free input is unavailable getpass() falls back to printing a warning "
"message to *stream* and reading from ``sys.stdin`` and issuing a :exc:"
"`GetPassWarning`."
msgstr ""

#: ../Doc/library/getpass.rst:25
msgid "Availability: Macintosh, Unix, Windows."
msgstr ""

#: ../Doc/library/getpass.rst:33
msgid ""
"If you call getpass from within IDLE, the input may be done in the terminal "
"you launched IDLE from rather than the idle window itself."
msgstr ""

#: ../Doc/library/getpass.rst:39
msgid "A :exc:`UserWarning` subclass issued when password input may be echoed."
msgstr ""

#: ../Doc/library/getpass.rst:44
msgid "Return the \"login name\" of the user. Availability: Unix, Windows."
msgstr ""

#: ../Doc/library/getpass.rst:46
msgid ""
"This function checks the environment variables :envvar:`LOGNAME`, :envvar:"
"`USER`, :envvar:`LNAME` and :envvar:`USERNAME`, in order, and returns the "
"value of the first one which is set to a non-empty string.  If none are set, "
"the login name from the password database is returned on systems which "
"support the :mod:`pwd` module, otherwise, an exception is raised."
msgstr ""

#: ../Doc/library/gettext.rst:2
msgid ":mod:`gettext` --- Multilingual internationalization services"
msgstr ""

# 3fad5dfd60144b7db0262ba80050e9d5
#: ../Doc/library/gettext.rst:9
msgid "**Source code:** :source:`Lib/gettext.py`"
msgstr ""

#: ../Doc/library/gettext.rst:13
msgid ""
"The :mod:`gettext` module provides internationalization (I18N) and "
"localization (L10N) services for your Python modules and applications. It "
"supports both the GNU ``gettext`` message catalog API and a higher level, "
"class-based API that may be more appropriate for Python files.  The "
"interface described below allows you to write your module and application "
"messages in one natural language, and provide a catalog of translated "
"messages for running under different natural languages."
msgstr ""

#: ../Doc/library/gettext.rst:21
msgid ""
"Some hints on localizing your Python modules and applications are also given."
msgstr ""

#: ../Doc/library/gettext.rst:25
msgid "GNU :program:`gettext` API"
msgstr ""

#: ../Doc/library/gettext.rst:27
msgid ""
"The :mod:`gettext` module defines the following API, which is very similar "
"to the GNU :program:`gettext` API.  If you use this API you will affect the "
"translation of your entire application globally.  Often this is what you "
"want if your application is monolingual, with the choice of language "
"dependent on the locale of your user.  If you are localizing a Python "
"module, or if your application needs to switch languages on the fly, you "
"probably want to use the class-based API instead."
msgstr ""

#: ../Doc/library/gettext.rst:38
msgid ""
"Bind the *domain* to the locale directory *localedir*.  More concretely, :"
"mod:`gettext` will look for binary :file:`.mo` files for the given domain "
"using the path (on Unix): :file:`localedir/language/LC_MESSAGES/domain.mo`, "
"where *languages* is searched for in the environment variables :envvar:"
"`LANGUAGE`, :envvar:`LC_ALL`, :envvar:`LC_MESSAGES`, and :envvar:`LANG` "
"respectively."
msgstr ""

#: ../Doc/library/gettext.rst:44
msgid ""
"If *localedir* is omitted or ``None``, then the current binding for *domain* "
"is returned. [#]_"
msgstr ""

#: ../Doc/library/gettext.rst:50
msgid ""
"Bind the *domain* to *codeset*, changing the encoding of strings returned by "
"the :func:`gettext` family of functions. If *codeset* is omitted, then the "
"current binding is returned."
msgstr ""

#: ../Doc/library/gettext.rst:59
msgid ""
"Change or query the current global domain.  If *domain* is ``None``, then "
"the current global domain is returned, otherwise the global domain is set to "
"*domain*, which is returned."
msgstr ""

#: ../Doc/library/gettext.rst:66
msgid ""
"Return the localized translation of *message*, based on the current global "
"domain, language, and locale directory.  This function is usually aliased "
"as :func:`_` in the local namespace (see examples below)."
msgstr ""

#: ../Doc/library/gettext.rst:73
msgid ""
"Equivalent to :func:`gettext`, but the translation is returned in the "
"preferred system encoding, if no other encoding was explicitly set with :"
"func:`bind_textdomain_codeset`."
msgstr ""

#: ../Doc/library/gettext.rst:82
msgid ""
"Like :func:`gettext`, but look the message up in the specified *domain*."
msgstr ""

#: ../Doc/library/gettext.rst:87
msgid ""
"Equivalent to :func:`dgettext`, but the translation is returned in the "
"preferred system encoding, if no other encoding was explicitly set with :"
"func:`bind_textdomain_codeset`."
msgstr ""

#: ../Doc/library/gettext.rst:96
msgid ""
"Like :func:`gettext`, but consider plural forms. If a translation is found, "
"apply the plural formula to *n*, and return the resulting message (some "
"languages have more than two plural forms). If no translation is found, "
"return *singular* if *n* is 1; return *plural* otherwise."
msgstr ""

#: ../Doc/library/gettext.rst:101
msgid ""
"The Plural formula is taken from the catalog header. It is a C or Python "
"expression that has a free variable *n*; the expression evaluates to the "
"index of the plural in the catalog. See the GNU gettext documentation for "
"the precise syntax to be used in :file:`.po` files and the formulas for a "
"variety of languages."
msgstr ""

#: ../Doc/library/gettext.rst:112
msgid ""
"Equivalent to :func:`ngettext`, but the translation is returned in the "
"preferred system encoding, if no other encoding was explicitly set with :"
"func:`bind_textdomain_codeset`."
msgstr ""

#: ../Doc/library/gettext.rst:121
msgid ""
"Like :func:`ngettext`, but look the message up in the specified *domain*."
msgstr ""

#: ../Doc/library/gettext.rst:128
msgid ""
"Equivalent to :func:`dngettext`, but the translation is returned in the "
"preferred system encoding, if no other encoding was explicitly set with :"
"func:`bind_textdomain_codeset`."
msgstr ""

#: ../Doc/library/gettext.rst:134
msgid ""
"Note that GNU :program:`gettext` also defines a :func:`dcgettext` method, "
"but this was deemed not useful and so it is currently unimplemented."
msgstr ""

#: ../Doc/library/gettext.rst:137
msgid "Here's an example of typical usage for this API::"
msgstr ""

#: ../Doc/library/gettext.rst:148
msgid "Class-based API"
msgstr ""

# 2091dbd5c71247449a94afa67af35890
#: ../Doc/library/gettext.rst:150
msgid ""
"The class-based API of the :mod:`gettext` module gives you more flexibility "
"and greater convenience than the GNU :program:`gettext` API.  It is the "
"recommended way of localizing your Python applications and modules.  :mod:"
"`gettext` defines a \"translations\" class which implements the parsing of "
"GNU :file:`.mo` format files, and has methods for returning either standard "
"8-bit strings or Unicode strings. Instances of this \"translations\" class "
"can also install themselves  in the built-in namespace as the function :func:"
"`_`."
msgstr ""

#: ../Doc/library/gettext.rst:161
msgid ""
"This function implements the standard :file:`.mo` file search algorithm.  It "
"takes a *domain*, identical to what :func:`textdomain` takes.  Optional "
"*localedir* is as in :func:`bindtextdomain`  Optional *languages* is a list "
"of strings, where each string is a language code."
msgstr ""

#: ../Doc/library/gettext.rst:166
msgid ""
"If *localedir* is not given, then the default system locale directory is "
"used. [#]_  If *languages* is not given, then the following environment "
"variables are searched: :envvar:`LANGUAGE`, :envvar:`LC_ALL`, :envvar:"
"`LC_MESSAGES`, and :envvar:`LANG`.  The first one returning a non-empty "
"value is used for the *languages* variable. The environment variables should "
"contain a colon separated list of languages, which will be split on the "
"colon to produce the expected list of language code strings."
msgstr ""

#: ../Doc/library/gettext.rst:174
msgid ""
":func:`find` then expands and normalizes the languages, and then iterates "
"through them, searching for an existing file built of these components:"
msgstr ""

# b8f7840413e04b6fa5652ea6f9a5be63
#: ../Doc/library/gettext.rst:177
msgid ":file:`localedir/language/LC_MESSAGES/domain.mo`"
msgstr ""

#: ../Doc/library/gettext.rst:179
msgid ""
"The first such file name that exists is returned by :func:`find`. If no such "
"file is found, then ``None`` is returned. If *all* is given, it returns a "
"list of all file names, in the order in which they appear in the languages "
"list or the environment variables."
msgstr ""

# 4767f95ed4d9437a8e6866b2257d5cf4
#: ../Doc/library/gettext.rst:187
msgid ""
"Return a :class:`Translations` instance based on the *domain*, *localedir*, "
"and *languages*, which are first passed to :func:`find` to get a list of the "
"associated :file:`.mo` file paths.  Instances with identical :file:`.mo` "
"file names are cached.  The actual class instantiated is either *class_* if "
"provided, otherwise :class:`GNUTranslations`.  The class's constructor must "
"take a single file object argument. If provided, *codeset* will change the "
"charset used to encode translated strings."
msgstr ""

#: ../Doc/library/gettext.rst:195
msgid ""
"If multiple files are found, later files are used as fallbacks for earlier "
"ones. To allow setting the fallback, :func:`copy.copy` is used to clone each "
"translation object from the cache; the actual instance data is still shared "
"with the cache."
msgstr ""

#: ../Doc/library/gettext.rst:200
msgid ""
"If no :file:`.mo` file is found, this function raises :exc:`IOError` if "
"*fallback* is false (which is the default), and returns a :class:"
"`NullTranslations` instance if *fallback* is true."
msgstr ""

# 62d879ee0ab74d4397d524c187661d3b
#: ../Doc/library/gettext.rst:210
msgid ""
"This installs the function :func:`_` in Python's builtins namespace, based "
"on *domain*, *localedir*, and *codeset* which are passed to the function :"
"func:`translation`.  The *unicode* flag is passed to the resulting "
"translation object's :meth:`~NullTranslations.install` method."
msgstr ""

#: ../Doc/library/gettext.rst:215
msgid ""
"For the *names* parameter, please see the description of the translation "
"object's :meth:`~NullTranslations.install` method."
msgstr ""

#: ../Doc/library/gettext.rst:218
msgid ""
"As seen below, you usually mark the strings in your application that are "
"candidates for translation, by wrapping them in a call to the :func:`_` "
"function, like this::"
msgstr ""

#: ../Doc/library/gettext.rst:224
msgid ""
"For convenience, you want the :func:`_` function to be installed in Python's "
"builtins namespace, so it is easily accessible in all modules of your "
"application."
msgstr ""

#: ../Doc/library/gettext.rst:236
msgid "The :class:`NullTranslations` class"
msgstr ""

#: ../Doc/library/gettext.rst:238
msgid ""
"Translation classes are what actually implement the translation of original "
"source file message strings to translated message strings. The base class "
"used by all translation classes is :class:`NullTranslations`; this provides "
"the basic interface you can use to write your own specialized translation "
"classes.  Here are the methods of :class:`NullTranslations`:"
msgstr ""

#: ../Doc/library/gettext.rst:247
msgid ""
"Takes an optional file object *fp*, which is ignored by the base class. "
"Initializes \"protected\" instance variables *_info* and *_charset* which "
"are set by derived classes, as well as *_fallback*, which is set through :"
"meth:`add_fallback`.  It then calls ``self._parse(fp)`` if *fp* is not "
"``None``."
msgstr ""

#: ../Doc/library/gettext.rst:256
msgid ""
"No-op'd in the base class, this method takes file object *fp*, and reads the "
"data from the file, initializing its message catalog.  If you have an "
"unsupported message catalog file format, you should override this method to "
"parse your format."
msgstr ""

#: ../Doc/library/gettext.rst:264
msgid ""
"Add *fallback* as the fallback object for the current translation object. A "
"translation object should consult the fallback if it cannot provide a "
"translation for a given message."
msgstr ""

#: ../Doc/library/gettext.rst:271
msgid ""
"If a fallback has been set, forward :meth:`gettext` to the fallback. "
"Otherwise, return the translated message.  Overridden in derived classes."
msgstr ""

#: ../Doc/library/gettext.rst:278
msgid ""
"If a fallback has been set, forward :meth:`lgettext` to the fallback. "
"Otherwise, return the translated message.  Overridden in derived classes."
msgstr ""

# 8111c2871b88474492df3ce7af3aab35
#: ../Doc/library/gettext.rst:287
msgid ""
"If a fallback has been set, forward :meth:`ugettext` to the fallback. "
"Otherwise, return the translated message as a Unicode string. Overridden in "
"derived classes."
msgstr ""

#: ../Doc/library/gettext.rst:294
msgid ""
"If a fallback has been set, forward :meth:`ngettext` to the fallback. "
"Otherwise, return the translated message.  Overridden in derived classes."
msgstr ""

# a6571186caed4743aaa91f8764990402
#: ../Doc/library/gettext.rst:303
msgid ""
"If a fallback has been set, forward :meth:`lngettext` to the fallback. "
"Otherwise, return the translated message.  Overridden in derived classes."
msgstr ""

# 5bed12a2d05f4b55b96543b31d53d267
#: ../Doc/library/gettext.rst:312
msgid ""
"If a fallback has been set, forward :meth:`ungettext` to the fallback. "
"Otherwise, return the translated message as a Unicode string. Overridden in "
"derived classes."
msgstr ""

#: ../Doc/library/gettext.rst:321
msgid "Return the \"protected\" :attr:`_info` variable."
msgstr ""

# 6294b7450c964fd0a97b09a41f64f18f
#: ../Doc/library/gettext.rst:326
msgid "Return the \"protected\" :attr:`_charset` variable."
msgstr ""

# 5059ebfee6794ece95278d8e252cc4f6
#: ../Doc/library/gettext.rst:331
msgid ""
"Return the \"protected\" :attr:`_output_charset` variable, which defines the "
"encoding used to return translated messages."
msgstr ""

#: ../Doc/library/gettext.rst:339
msgid ""
"Change the \"protected\" :attr:`_output_charset` variable, which defines the "
"encoding used to return translated messages."
msgstr ""

# 2c967b8c79674367874c38814d7eeda8
#: ../Doc/library/gettext.rst:347
msgid ""
"If the *unicode* flag is false, this method installs :meth:`self.gettext` "
"into the built-in namespace, binding it to ``_``.  If *unicode* is true, it "
"binds :meth:`self.ugettext` instead.  By default, *unicode* is false."
msgstr ""

# 782fb8ab53eb40eb82398ba6e99e64b6
#: ../Doc/library/gettext.rst:351
msgid ""
"If the *names* parameter is given, it must be a sequence containing the "
"names of functions you want to install in the builtins namespace in addition "
"to :func:`_`.  Supported names are ``'gettext'`` (bound to :meth:`self."
"gettext` or :meth:`self.ugettext` according to the *unicode* flag), "
"``'ngettext'`` (bound to :meth:`self.ngettext` or :meth:`self.ungettext` "
"according to the *unicode* flag), ``'lgettext'`` and ``'lngettext'``."
msgstr ""

#: ../Doc/library/gettext.rst:359
msgid ""
"Note that this is only one way, albeit the most convenient way, to make the :"
"func:`_` function available to your application.  Because it affects the "
"entire application globally, and specifically the built-in namespace, "
"localized modules should never install :func:`_`. Instead, they should use "
"this code to make :func:`_` available to their module::"
msgstr ""

#: ../Doc/library/gettext.rst:369
msgid ""
"This puts :func:`_` only in the module's global namespace and so only "
"affects calls within this module."
msgstr ""

#: ../Doc/library/gettext.rst:377
msgid "The :class:`GNUTranslations` class"
msgstr ""

# fa5dfe22620d452784a35eb839503068
#: ../Doc/library/gettext.rst:379
msgid ""
"The :mod:`gettext` module provides one additional class derived from :class:"
"`NullTranslations`: :class:`GNUTranslations`.  This class overrides :meth:"
"`_parse` to enable reading GNU :program:`gettext` format :file:`.mo` files "
"in both big-endian and little-endian format. It also coerces both message "
"ids and message strings to Unicode."
msgstr ""

# 571dfd5e7bac4d1eb3823c2a00f94fc4
#: ../Doc/library/gettext.rst:385
msgid ""
":class:`GNUTranslations` parses optional meta-data out of the translation "
"catalog.  It is convention with GNU :program:`gettext` to include meta-data "
"as the translation for the empty string.  This meta-data is in :rfc:`822`\\ -"
"style ``key: value`` pairs, and should contain the ``Project-Id-Version`` "
"key.  If the key ``Content-Type`` is found, then the ``charset`` property is "
"used to initialize the \"protected\" :attr:`_charset` instance variable, "
"defaulting to ``None`` if not found.  If the charset encoding is specified, "
"then all message ids and message strings read from the catalog are converted "
"to Unicode using this encoding.  The :meth:`ugettext` method always returns "
"a Unicode, while the :meth:`gettext` returns an encoded 8-bit string.  For "
"the message id arguments of both methods, either Unicode strings or 8-bit "
"strings containing only US-ASCII characters are acceptable.  Note that the "
"Unicode version of the methods (i.e. :meth:`ugettext` and :meth:`ungettext`) "
"are the recommended interface to use for internationalized Python programs."
msgstr ""

#: ../Doc/library/gettext.rst:400
msgid ""
"The entire set of key/value pairs are placed into a dictionary and set as "
"the \"protected\" :attr:`_info` instance variable."
msgstr ""

#: ../Doc/library/gettext.rst:403
msgid ""
"If the :file:`.mo` file's magic number is invalid, or if other problems "
"occur while reading the file, instantiating a :class:`GNUTranslations` class "
"can raise :exc:`IOError`."
msgstr ""

#: ../Doc/library/gettext.rst:407
msgid ""
"The following methods are overridden from the base class implementation:"
msgstr ""

# 3fc006826ca2443c871d263c8db41d01
#: ../Doc/library/gettext.rst:412
msgid ""
"Look up the *message* id in the catalog and return the corresponding message "
"string, as an 8-bit string encoded with the catalog's charset encoding, if "
"known.  If there is no entry in the catalog for the *message* id, and a "
"fallback has been set, the look up is forwarded to the fallback's :meth:"
"`gettext` method. Otherwise, the *message* id is returned."
msgstr ""

# e0cd41ab6a334faa867c9aefe48e4ab1
# 6df436ff06ce4382b5807cd0f2241514
#: ../Doc/library/gettext.rst:421 ../Doc/library/gettext.rst:452
msgid ""
"Equivalent to :meth:`gettext`, but the translation is returned in the "
"preferred system encoding, if no other encoding was explicitly set with :"
"meth:`set_output_charset`."
msgstr ""

# 1a2a5a297aaf44cdb4038b964701de93
#: ../Doc/library/gettext.rst:430
msgid ""
"Look up the *message* id in the catalog and return the corresponding message "
"string, as a Unicode string.  If there is no entry in the catalog for the "
"*message* id, and a fallback has been set, the look up is forwarded to the "
"fallback's :meth:`ugettext` method.  Otherwise, the *message* id is returned."
msgstr ""

# b8ea3929335544388338ce4e4110038d
#: ../Doc/library/gettext.rst:438
msgid ""
"Do a plural-forms lookup of a message id.  *singular* is used as the message "
"id for purposes of lookup in the catalog, while *n* is used to determine "
"which plural form to use.  The returned message string is an 8-bit string "
"encoded with the catalog's charset encoding, if known."
msgstr ""

#: ../Doc/library/gettext.rst:443
msgid ""
"If the message id is not found in the catalog, and a fallback is specified, "
"the request is forwarded to the fallback's :meth:`ngettext` method.  "
"Otherwise, when *n* is 1 *singular* is returned, and *plural* is returned in "
"all other cases."
msgstr ""

#: ../Doc/library/gettext.rst:461
msgid ""
"Do a plural-forms lookup of a message id.  *singular* is used as the message "
"id for purposes of lookup in the catalog, while *n* is used to determine "
"which plural form to use.  The returned message string is a Unicode string."
msgstr ""

# b7074eaae9a0456bac2fcf63a0d71139
#: ../Doc/library/gettext.rst:465
msgid ""
"If the message id is not found in the catalog, and a fallback is specified, "
"the request is forwarded to the fallback's :meth:`ungettext` method.  "
"Otherwise, when *n* is 1 *singular* is returned, and *plural* is returned in "
"all other cases."
msgstr ""

#: ../Doc/library/gettext.rst:470
msgid "Here is an example::"
msgstr ""

#: ../Doc/library/gettext.rst:483
msgid "Solaris message catalog support"
msgstr ""

#: ../Doc/library/gettext.rst:485
msgid ""
"The Solaris operating system defines its own binary :file:`.mo` file format, "
"but since no documentation can be found on this format, it is not supported "
"at this time."
msgstr ""

#: ../Doc/library/gettext.rst:491
msgid "The Catalog constructor"
msgstr ""

#: ../Doc/library/gettext.rst:495
msgid ""
"GNOME uses a version of the :mod:`gettext` module by James Henstridge, but "
"this version has a slightly different API.  Its documented usage was::"
msgstr ""

#: ../Doc/library/gettext.rst:503
msgid ""
"For compatibility with this older module, the function :func:`Catalog` is an "
"alias for the :func:`translation` function described above."
msgstr ""

#: ../Doc/library/gettext.rst:506
msgid ""
"One difference between this module and Henstridge's: his catalog objects "
"supported access through a mapping API, but this appears to be unused and so "
"is not currently supported."
msgstr ""

#: ../Doc/library/gettext.rst:512
msgid "Internationalizing your programs and modules"
msgstr ""

#: ../Doc/library/gettext.rst:514
msgid ""
"Internationalization (I18N) refers to the operation by which a program is "
"made aware of multiple languages.  Localization (L10N) refers to the "
"adaptation of your program, once internationalized, to the local language "
"and cultural habits. In order to provide multilingual messages for your "
"Python programs, you need to take the following steps:"
msgstr ""

#: ../Doc/library/gettext.rst:520
msgid ""
"prepare your program or module by specially marking translatable strings"
msgstr ""

#: ../Doc/library/gettext.rst:522
msgid ""
"run a suite of tools over your marked files to generate raw messages catalogs"
msgstr ""

#: ../Doc/library/gettext.rst:524
msgid "create language specific translations of the message catalogs"
msgstr ""

#: ../Doc/library/gettext.rst:526
msgid ""
"use the :mod:`gettext` module so that message strings are properly translated"
msgstr ""

#: ../Doc/library/gettext.rst:528
msgid ""
"In order to prepare your code for I18N, you need to look at all the strings "
"in your files.  Any string that needs to be translated should be marked by "
"wrapping it in ``_('...')`` --- that is, a call to the function :func:`_`.  "
"For example::"
msgstr ""

#: ../Doc/library/gettext.rst:538
msgid ""
"In this example, the string ``'writing a log message'`` is marked as a "
"candidate for translation, while the strings ``'mylog.txt'`` and ``'w'`` are "
"not."
msgstr ""

#: ../Doc/library/gettext.rst:541
msgid ""
"The Python distribution comes with two tools which help you generate the "
"message catalogs once you've prepared your source code.  These may or may "
"not be available from a binary distribution, but they can be found in a "
"source distribution, in the :file:`Tools/i18n` directory."
msgstr ""

#: ../Doc/library/gettext.rst:546
msgid ""
"The :program:`pygettext` [#]_ program scans all your Python source code "
"looking for the strings you previously marked as translatable.  It is "
"similar to the GNU :program:`gettext` program except that it understands all "
"the intricacies of Python source code, but knows nothing about C or C++ "
"source code.  You don't need GNU ``gettext`` unless you're also going to be "
"translating C code (such as C extension modules)."
msgstr ""

#: ../Doc/library/gettext.rst:553
msgid ""
":program:`pygettext` generates textual Uniforum-style human readable message "
"catalog :file:`.pot` files, essentially structured human readable files "
"which contain every marked string in the source code, along with a "
"placeholder for the translation strings. :program:`pygettext` is a command "
"line script that supports a similar command line interface as :program:"
"`xgettext`; for details on its use, run::"
msgstr ""

#: ../Doc/library/gettext.rst:562
msgid ""
"Copies of these :file:`.pot` files are then handed over to the individual "
"human translators who write language-specific versions for every supported "
"natural language.  They send you back the filled in language-specific "
"versions as a :file:`.po` file.  Using the :program:`msgfmt.py` [#]_ program "
"(in the :file:`Tools/i18n` directory), you take the :file:`.po` files from "
"your translators and generate the machine-readable :file:`.mo` binary "
"catalog files. The :file:`.mo` files are what the :mod:`gettext` module uses "
"for the actual translation processing during run-time."
msgstr ""

#: ../Doc/library/gettext.rst:571
msgid ""
"How you use the :mod:`gettext` module in your code depends on whether you "
"are internationalizing a single module or your entire application. The next "
"two sections will discuss each case."
msgstr ""

#: ../Doc/library/gettext.rst:577
msgid "Localizing your module"
msgstr ""

#: ../Doc/library/gettext.rst:579
msgid ""
"If you are localizing your module, you must take care not to make global "
"changes, e.g. to the built-in namespace.  You should not use the GNU "
"``gettext`` API but instead the class-based API."
msgstr ""

#: ../Doc/library/gettext.rst:583
msgid ""
"Let's say your module is called \"spam\" and the module's various natural "
"language translation :file:`.mo` files reside in :file:`/usr/share/locale` "
"in GNU :program:`gettext` format.  Here's what you would put at the top of "
"your module::"
msgstr ""

# 2b1f921b4639493ca2b19158972a42df
#: ../Doc/library/gettext.rst:592
msgid ""
"If your translators were providing you with Unicode strings in their :file:`."
"po` files, you'd instead do::"
msgstr ""

#: ../Doc/library/gettext.rst:601
msgid "Localizing your application"
msgstr ""

#: ../Doc/library/gettext.rst:603
msgid ""
"If you are localizing your application, you can install the :func:`_` "
"function globally into the built-in namespace, usually in the main driver "
"file of your application.  This will let all your application-specific files "
"just use ``_('...')`` without having to explicitly install it in each file."
msgstr ""

#: ../Doc/library/gettext.rst:608
msgid ""
"In the simple case then, you need only add the following bit of code to the "
"main driver file of your application::"
msgstr ""

# bab7a9fcef8a482395d73c571010fbc3
#: ../Doc/library/gettext.rst:614
msgid ""
"If you need to set the locale directory or the *unicode* flag, you can pass "
"these into the :func:`install` function::"
msgstr ""

#: ../Doc/library/gettext.rst:622
msgid "Changing languages on the fly"
msgstr ""

#: ../Doc/library/gettext.rst:624
msgid ""
"If your program needs to support many languages at the same time, you may "
"want to create multiple translation instances and then switch between them "
"explicitly, like so::"
msgstr ""

#: ../Doc/library/gettext.rst:645
msgid "Deferred translations"
msgstr ""

#: ../Doc/library/gettext.rst:647
msgid ""
"In most coding situations, strings are translated where they are coded. "
"Occasionally however, you need to mark strings for translation, but defer "
"actual translation until later.  A classic example is::"
msgstr ""

#: ../Doc/library/gettext.rst:660
msgid ""
"Here, you want to mark the strings in the ``animals`` list as being "
"translatable, but you don't actually want to translate them until they are "
"printed."
msgstr ""

#: ../Doc/library/gettext.rst:664
msgid "Here is one way you can handle this situation::"
msgstr ""

#: ../Doc/library/gettext.rst:680
msgid ""
"This works because the dummy definition of :func:`_` simply returns the "
"string unchanged.  And this dummy definition will temporarily override any "
"definition of :func:`_` in the built-in namespace (until the :keyword:`del` "
"command). Take care, though if you have a previous definition of :func:`_` "
"in the local namespace."
msgstr ""

#: ../Doc/library/gettext.rst:686
msgid ""
"Note that the second use of :func:`_` will not identify \"a\" as being "
"translatable to the :program:`pygettext` program, since it is not a string."
msgstr ""

#: ../Doc/library/gettext.rst:689
msgid "Another way to handle this is with the following example::"
msgstr ""

#: ../Doc/library/gettext.rst:703
msgid ""
"In this case, you are marking translatable strings with the function :func:"
"`N_`, [#]_ which won't conflict with any definition of :func:`_`.  However, "
"you will need to teach your message extraction program to look for "
"translatable strings marked with :func:`N_`. :program:`pygettext` and :"
"program:`xpot` both support this through the use of command line switches."
msgstr ""

# 69dc304387d74f5288c69dc8cd688be5
#: ../Doc/library/gettext.rst:711
msgid ":func:`gettext` vs. :func:`lgettext`"
msgstr ""

# e9bea85037aa4dc0905cbedb9bda561a
#: ../Doc/library/gettext.rst:713
msgid ""
"In Python 2.4 the :func:`lgettext` family of functions were introduced. The "
"intention of these functions is to provide an alternative which is more "
"compliant with the current implementation of GNU gettext. Unlike :func:"
"`gettext`, which returns strings encoded with the same codeset used in the "
"translation file, :func:`lgettext` will return strings encoded with the "
"preferred system encoding, as returned by :func:`locale."
"getpreferredencoding`. Also notice that Python 2.4 introduces new functions "
"to explicitly choose the codeset used in translated strings. If a codeset is "
"explicitly set, even :func:`lgettext` will return translated strings in the "
"requested codeset, as would be expected in the GNU gettext implementation."
msgstr ""

#: ../Doc/library/gettext.rst:726
msgid "Acknowledgements"
msgstr ""

#: ../Doc/library/gettext.rst:728
msgid ""
"The following people contributed code, feedback, design suggestions, "
"previous implementations, and valuable experience to the creation of this "
"module:"
msgstr ""

#: ../Doc/library/gettext.rst:731
msgid "Peter Funk"
msgstr ""

#: ../Doc/library/gettext.rst:733
msgid "James Henstridge"
msgstr ""

#: ../Doc/library/gettext.rst:735
msgid "Juan David Ibáñez Palomar"
msgstr ""

#: ../Doc/library/gettext.rst:737
msgid "Marc-André Lemburg"
msgstr ""

#: ../Doc/library/gettext.rst:739
msgid "Martin von Löwis"
msgstr ""

#: ../Doc/library/gettext.rst:741
msgid "François Pinard"
msgstr ""

#: ../Doc/library/gettext.rst:743
msgid "Barry Warsaw"
msgstr ""

#: ../Doc/library/gettext.rst:745
msgid "Gustavo Niemeyer"
msgstr ""

#: ../Doc/library/gettext.rst:749
msgid ""
"The default locale directory is system dependent; for example, on RedHat "
"Linux it is :file:`/usr/share/locale`, but on Solaris it is :file:`/usr/lib/"
"locale`. The :mod:`gettext` module does not try to support these system "
"dependent defaults; instead its default is :file:`sys.prefix/share/locale`. "
"For this reason, it is always best to call :func:`bindtextdomain` with an "
"explicit absolute path at the start of your application."
msgstr ""

#: ../Doc/library/gettext.rst:756
msgid "See the footnote for :func:`bindtextdomain` above."
msgstr ""

# fbfd5ac0c0b2469a8b6596e390f616b8
#: ../Doc/library/gettext.rst:758
msgid ""
"François Pinard has written a program called :program:`xpot` which does a "
"similar job.  It is available as part of his `po-utils package <http://po-"
"utils.progiciels-bpi.ca/>`_."
msgstr ""

#: ../Doc/library/gettext.rst:762
msgid ""
":program:`msgfmt.py` is binary compatible with GNU :program:`msgfmt` except "
"that it provides a simpler, all-Python implementation.  With this and :"
"program:`pygettext.py`, you generally won't need to install the GNU :program:"
"`gettext` package to internationalize your Python applications."
msgstr ""

#: ../Doc/library/gettext.rst:767
msgid ""
"The choice of :func:`N_` here is totally arbitrary; it could have just as "
"easily been :func:`MarkThisStringForTranslation`."
msgstr ""

# a3db0b78ae4e44baacb1db5222a4c0b9
#: ../Doc/library/gl.rst:2
msgid ":mod:`gl` --- *Graphics Library* interface"
msgstr ""

# 5c8c8ecafafd4191b78980bbf0e15143
#: ../Doc/library/gl.rst:14
msgid ""
"This module provides access to the Silicon Graphics *Graphics Library*. It "
"is available only on Silicon Graphics machines."
msgstr ""

# 81671c31dfd44447af3449cfc23d21da
#: ../Doc/library/gl.rst:19
msgid ""
"Some illegal calls to the GL library cause the Python interpreter to dump "
"core.  In particular, the use of most GL calls is unsafe before the first "
"window is opened."
msgstr ""

# 8ec847100a634d5faae8380ec4dc0236
#: ../Doc/library/gl.rst:23
msgid ""
"The module is too large to document here in its entirety, but the following "
"should help you to get started. The parameter conventions for the C "
"functions are translated to Python as follows:"
msgstr ""

# de72c2f3feca44adbe9a8f78f6f471e5
#: ../Doc/library/gl.rst:27
msgid ""
"All (short, long, unsigned) int values are represented by Python integers."
msgstr ""

# 0a4d2b07e5454295ab583379feac7e95
#: ../Doc/library/gl.rst:29
msgid ""
"All float and double values are represented by Python floating point "
"numbers. In most cases, Python integers are also allowed."
msgstr ""

# d63b0377723a4a6ab6cbe8cdf691d7fb
#: ../Doc/library/gl.rst:32
msgid ""
"All arrays are represented by one-dimensional Python lists. In most cases, "
"tuples are also allowed."
msgstr ""

# f68af8f64204482f8fe13323bb61a6ee
#: ../Doc/library/gl.rst:35
msgid ""
"All string and character arguments are represented by Python strings, for "
"instance, ``winopen('Hi There!')`` and ``rotate(900, 'z')``."
msgstr ""

# 26e61c908891411bb160432b202a0845
#: ../Doc/library/gl.rst:38
msgid ""
"All (short, long, unsigned) integer arguments or return values that are only "
"used to specify the length of an array argument are omitted. For example, "
"the C call ::"
msgstr ""

# d0b997c217434abf9d92dc8ffcb07621
# 5cd593552607446f94b611ffa6eefe2c
#: ../Doc/library/gl.rst:44 ../Doc/library/gl.rst:56
msgid "is translated to Python as ::"
msgstr ""

# 2b04e55f5007472da226aa99253e7426
#: ../Doc/library/gl.rst:48
msgid ""
"Output arguments are omitted from the argument list; they are transmitted as "
"function return values instead. If more than one value must be returned, the "
"return value is a tuple. If the C function has both a regular return value "
"(that is not omitted because of the previous rule) and an output argument, "
"the return value comes first in the tuple. Examples: the C call ::"
msgstr ""

# a0a6d367e18549df806fac48ae243659
#: ../Doc/library/gl.rst:60
msgid ""
"The following functions are non-standard or have special argument "
"conventions:"
msgstr ""

# 15d6e4bb6b6d46d5a6123e96f158f205
#: ../Doc/library/gl.rst:65
msgid ""
"Equivalent to but faster than a number of ``v3d()`` calls. The *argument* is "
"a list (or tuple) of points. Each point must be a tuple of coordinates ``(x, "
"y, z)`` or ``(x, y)``. The points may be 2- or 3-dimensional but must all "
"have the same dimension. Float and int values may be mixed however. The "
"points are always converted to 3D double precision points by assuming ``z = "
"0.0`` if necessary (as indicated in the man page), and for each point ``v3d()"
"`` is called."
msgstr ""

# 1595b91b22514b219bfc404c3ec5213a
#: ../Doc/library/gl.rst:77
msgid ""
"Equivalent to but faster than a number of ``n3f`` and ``v3f`` calls. The "
"argument is an array (list or tuple) of pairs of normals and points. Each "
"pair is a tuple of a point and a normal for that point. Each point or normal "
"must be a tuple of coordinates ``(x, y, z)``. Three coordinates must be "
"given. Float and int values may be mixed. For each pair, ``n3f()`` is called "
"for the normal, and then ``v3f()`` is called for the point."
msgstr ""

# 033c7f138418464bb78e653f1fac23ed
#: ../Doc/library/gl.rst:87
msgid ""
"Similar to  ``nvarray()`` but the pairs have the point first and the normal "
"second."
msgstr ""

# 88b9831b577b47199a0ca0a3182cc4ac
#: ../Doc/library/gl.rst:93
msgid ""
"Defines a nurbs surface. The dimensions of ``ctl[][]`` are computed as "
"follows: ``[len(s_k) - s_ord]``, ``[len(t_k) - t_ord]``."
msgstr ""

# 573d2c306c1e4c9488029d1730284cce
#: ../Doc/library/gl.rst:101
msgid ""
"Defines a nurbs curve. The length of ctlpoints is ``len(knots) - order``."
msgstr ""

# 2612f3980af74db18ba89bae28d3913f
#: ../Doc/library/gl.rst:106
msgid ""
"Defines a piecewise-linear curve. *points* is a list of points. *type* must "
"be ``N_ST``."
msgstr ""

# 0141b4e796c2453aab2a29698e220e2e
#: ../Doc/library/gl.rst:113
msgid ""
"The only argument to these functions specifies the desired size of the pick "
"or select buffer."
msgstr ""

# 677bf5d655314844838101061320f702
#: ../Doc/library/gl.rst:120
msgid ""
"These functions have no arguments. They return a list of integers "
"representing the used part of the pick/select buffer. No method is provided "
"to detect buffer overrun."
msgstr ""

# 33053de40f8e47a5905f06c2cdfd20ab
#: ../Doc/library/gl.rst:124
msgid "Here is a tiny but complete example GL program in Python::"
msgstr ""

# 2151f2d7a6ca42508e2502ffbd96e7f1
#: ../Doc/library/gl.rst:156
msgid ""
"An interface to OpenGL is also available; see information about the "
"**PyOpenGL** project online at http://pyopengl.sourceforge.net/.  This may "
"be a better option if support for SGI hardware from before about 1996 is not "
"required."
msgstr ""

# b66c0235b57841d087de28cec087b2ca
#: ../Doc/library/gl.rst:162
msgid ":mod:`DEVICE` --- Constants used with the :mod:`gl` module"
msgstr ""

# 685f382a83df4b529181c3741c284ec4
#: ../Doc/library/gl.rst:174
msgid ""
"This modules defines the constants used by the Silicon Graphics *Graphics "
"Library* that C programmers find in the header file ``<gl/device.h>``. Read "
"the module source file for details."
msgstr ""

# ac8d1d391bcc4fa2901a27c87ba4fce9
#: ../Doc/library/gl.rst:180
msgid ":mod:`GL` --- Constants used with the :mod:`gl` module"
msgstr ""

# 9d06e7ce78f74b43b7fe3a4878e308cc
#: ../Doc/library/gl.rst:191
msgid ""
"This module contains constants used by the Silicon Graphics *Graphics "
"Library* from the C header file ``<gl/gl.h>``. Read the module source file "
"for details."
msgstr ""

#: ../Doc/library/glob.rst:2
msgid ":mod:`glob` --- Unix style pathname pattern expansion"
msgstr ""

# 69fc40b7e9c54b5b844bbe123ab6610e
#: ../Doc/library/glob.rst:10
msgid "**Source code:** :source:`Lib/glob.py`"
msgstr ""

#: ../Doc/library/glob.rst:14
msgid ""
"The :mod:`glob` module finds all the pathnames matching a specified pattern "
"according to the rules used by the Unix shell.  No tilde expansion is done, "
"but ``*``, ``?``, and character ranges expressed with ``[]`` will be "
"correctly matched.  This is done by using the :func:`os.listdir` and :func:"
"`fnmatch.fnmatch` functions in concert, and not by actually invoking a "
"subshell.  (For tilde and shell variable expansion, use :func:`os.path."
"expanduser` and :func:`os.path.expandvars`.)"
msgstr ""

#: ../Doc/library/glob.rst:25
msgid ""
"Return a possibly-empty list of path names that match *pathname*, which must "
"be a string containing a path specification. *pathname* can be either "
"absolute (like :file:`/usr/src/Python-1.5/Makefile`) or relative (like :file:"
"`../../Tools/\\*/\\*.gif`), and can contain shell-style wildcards. Broken "
"symlinks are included in the results (as in the shell)."
msgstr ""

#: ../Doc/library/glob.rst:34
msgid ""
"Return an :term:`iterator` which yields the same values as :func:`glob` "
"without actually storing them all simultaneously."
msgstr ""

#: ../Doc/library/glob.rst:39
msgid ""
"For example, consider a directory containing only the following files: :file:"
"`1.gif`, :file:`2.txt`, and :file:`card.gif`.  :func:`glob` will produce the "
"following results.  Notice how any leading components of the path are "
"preserved. ::"
msgstr ""

#: ../Doc/library/glob.rst:56
msgid "Shell-style filename (not path) expansion"
msgstr ""

#: ../Doc/library/grp.rst:3
msgid ":mod:`grp` --- The group database"
msgstr ""

#: ../Doc/library/grp.rst:10
msgid ""
"This module provides access to the Unix group database. It is available on "
"all Unix versions."
msgstr ""

#: ../Doc/library/grp.rst:13
msgid ""
"Group database entries are reported as a tuple-like object, whose attributes "
"correspond to the members of the ``group`` structure (Attribute field below, "
"see ``<pwd.h>``):"
msgstr ""

#: ../Doc/library/grp.rst:20
msgid "gr_name"
msgstr ""

#: ../Doc/library/grp.rst:20
msgid "the name of the group"
msgstr ""

#: ../Doc/library/grp.rst:22
msgid "gr_passwd"
msgstr ""

#: ../Doc/library/grp.rst:22
msgid "the (encrypted) group password; often empty"
msgstr ""

#: ../Doc/library/grp.rst:25
msgid "gr_gid"
msgstr ""

#: ../Doc/library/grp.rst:25
msgid "the numerical group ID"
msgstr ""

#: ../Doc/library/grp.rst:27 ../Doc/library/pwd.rst:26
#: ../Doc/library/spwd.rst:31 ../Doc/library/time.rst:409
#: ../Doc/library/tkinter.rst:450 ../Doc/library/urlparse.rst:101
#: ../Doc/library/urlparse.rst:205
msgid "3"
msgstr ""

#: ../Doc/library/grp.rst:27
msgid "gr_mem"
msgstr ""

#: ../Doc/library/grp.rst:27
msgid "all the group member's  user names"
msgstr ""

# 2fea51c172b946e2b8164275eb55e768
#: ../Doc/library/grp.rst:31
msgid ""
"The gid is an integer, name and password are strings, and the member list is "
"a list of strings. (Note that most users are not explicitly listed as "
"members of the group they are in according to the password database.  Check "
"both databases to get complete membership information.  Also note that a "
"``gr_name`` that starts with a ``+`` or ``-`` is likely to be a YP/NIS "
"reference and may not be accessible via :func:`getgrnam` or :func:"
"`getgrgid`.)"
msgstr ""

#: ../Doc/library/grp.rst:38 ../Doc/library/mimetools.rst:21
#: ../Doc/library/pwd.rst:51 ../Doc/library/spwd.rst:53
msgid "It defines the following items:"
msgstr ""

#: ../Doc/library/grp.rst:43
msgid ""
"Return the group database entry for the given numeric group ID. :exc:"
"`KeyError` is raised if the entry asked for cannot be found."
msgstr ""

#: ../Doc/library/grp.rst:49
msgid ""
"Return the group database entry for the given group name. :exc:`KeyError` is "
"raised if the entry asked for cannot be found."
msgstr ""

#: ../Doc/library/grp.rst:55
msgid "Return a list of all available group entries, in arbitrary order."
msgstr ""

#: ../Doc/library/grp.rst:61
msgid "An interface to the user database, similar to this."
msgstr ""

#: ../Doc/library/grp.rst:64 ../Doc/library/pwd.rst:75
msgid "An interface to the shadow password database, similar to this."
msgstr ""

#: ../Doc/library/gzip.rst:2
msgid ":mod:`gzip` --- Support for :program:`gzip` files"
msgstr ""

# edaa7b3a66ea4986b9ba87e2b8c987ab
#: ../Doc/library/gzip.rst:7
msgid "**Source code:** :source:`Lib/gzip.py`"
msgstr ""

#: ../Doc/library/gzip.rst:11
msgid ""
"This module provides a simple interface to compress and decompress files "
"just like the GNU programs :program:`gzip` and :program:`gunzip` would."
msgstr ""

#: ../Doc/library/gzip.rst:14
msgid "The data compression is provided by the :mod:`zlib` module."
msgstr ""

#: ../Doc/library/gzip.rst:16
msgid ""
"The :mod:`gzip` module provides the :class:`GzipFile` class which is modeled "
"after Python's File Object. The :class:`GzipFile` class reads and writes :"
"program:`gzip`\\ -format files, automatically compressing or decompressing "
"the data so that it looks like an ordinary file object."
msgstr ""

#: ../Doc/library/gzip.rst:21
msgid ""
"Note that additional file formats which can be decompressed by the :program:"
"`gzip` and :program:`gunzip` programs, such  as those produced by :program:"
"`compress` and :program:`pack`, are not supported by this module."
msgstr ""

#: ../Doc/library/gzip.rst:30
msgid ""
"Constructor for the :class:`GzipFile` class, which simulates most of the "
"methods of a file object, with the exception of the :meth:`readinto` and :"
"meth:`truncate` methods.  At least one of *fileobj* and *filename* must be "
"given a non-trivial value."
msgstr ""

#: ../Doc/library/gzip.rst:35
msgid ""
"The new class instance is based on *fileobj*, which can be a regular file, "
"a :class:`StringIO` object, or any other object which simulates a file.  It "
"defaults to ``None``, in which case *filename* is opened to provide a file "
"object."
msgstr ""

#: ../Doc/library/gzip.rst:40
msgid ""
"When *fileobj* is not ``None``, the *filename* argument is only used to be "
"included in the :program:`gzip` file header, which may includes the original "
"filename of the uncompressed file.  It defaults to the filename of "
"*fileobj*, if discernible; otherwise, it defaults to the empty string, and "
"in this case the original filename is not included in the header."
msgstr ""

#: ../Doc/library/gzip.rst:46
msgid ""
"The *mode* argument can be any of ``'r'``, ``'rb'``, ``'a'``, ``'ab'``, "
"``'w'``, or ``'wb'``, depending on whether the file will be read or "
"written.  The default is the mode of *fileobj* if discernible; otherwise, "
"the default is ``'rb'``. If not given, the 'b' flag will be added to the "
"mode to ensure the file is opened in binary mode for cross-platform "
"portability."
msgstr ""

#: ../Doc/library/gzip.rst:52
msgid ""
"The *compresslevel* argument is an integer from ``1`` to ``9`` controlling "
"the level of compression; ``1`` is fastest and produces the least "
"compression, and ``9`` is slowest and produces the most compression.  The "
"default is ``9``."
msgstr ""

# 92175042f75b467097329bfcfc3c0b68
#: ../Doc/library/gzip.rst:56
msgid ""
"The *mtime* argument is an optional numeric timestamp to be written to the "
"stream when compressing.  All :program:`gzip` compressed streams are "
"required to contain a timestamp.  If omitted or ``None``, the current time "
"is used.  This module ignores the timestamp when decompressing; however, "
"some programs, such as :program:`gunzip`\\ , make use of it. The format of "
"the timestamp is the same as that of the return value of ``time.time()`` and "
"of the ``st_mtime`` attribute of the object returned by ``os.stat()``."
msgstr ""

#: ../Doc/library/gzip.rst:65
msgid ""
"Calling a :class:`GzipFile` object's :meth:`close` method does not close "
"*fileobj*, since you might wish to append more material after the compressed "
"data.  This also allows you to pass a :class:`StringIO` object opened for "
"writing as *fileobj*, and retrieve the resulting memory buffer using the :"
"class:`StringIO` object's :meth:`getvalue` method."
msgstr ""

#: ../Doc/library/gzip.rst:71
msgid ":class:`GzipFile` supports iteration and the :keyword:`with` statement."
msgstr ""

#: ../Doc/library/gzip.rst:82
msgid ""
"This is a shorthand for ``GzipFile(filename,`` ``mode,`` ``compresslevel)``. "
"The *filename* argument is required; *mode* defaults to ``'rb'`` and "
"*compresslevel* defaults to ``9``."
msgstr ""

#: ../Doc/library/gzip.rst:90
msgid "Examples of usage"
msgstr ""

#: ../Doc/library/gzip.rst:92
msgid "Example of how to read a compressed file::"
msgstr ""

#: ../Doc/library/gzip.rst:99
msgid "Example of how to create a compressed GZIP file::"
msgstr ""

#: ../Doc/library/gzip.rst:107
msgid "Example of how to GZIP compress an existing file::"
msgstr ""

#: ../Doc/library/gzip.rst:120
msgid ""
"The basic data compression module needed to support the :program:`gzip` file "
"format."
msgstr ""

#: ../Doc/library/hashlib.rst:2
msgid ":mod:`hashlib` --- Secure hashes and message digests"
msgstr ""

# f3cbbb8cdd294ef5bf928bde1215948b
#: ../Doc/library/hashlib.rst:16
msgid "**Source code:** :source:`Lib/hashlib.py`"
msgstr ""

# 513850457ba745c98cd51ef83dbdca7e
#: ../Doc/library/hashlib.rst:20
msgid ""
"This module implements a common interface to many different secure hash and "
"message digest algorithms.  Included are the FIPS secure hash algorithms "
"SHA1, SHA224, SHA256, SHA384, and SHA512 (defined in FIPS 180-2) as well as "
"RSA's MD5 algorithm (defined in Internet :rfc:`1321`). The terms secure hash "
"and message digest are interchangeable.  Older algorithms were called "
"message digests.  The modern term is secure hash."
msgstr ""

#: ../Doc/library/hashlib.rst:28
msgid ""
"If you want the adler32 or crc32 hash functions they are available in the :"
"mod:`zlib` module."
msgstr ""

#: ../Doc/library/hashlib.rst:33
msgid ""
"Some algorithms have known hash collision weaknesses, see the FAQ at the end."
msgstr ""

# 6da9b85a2988447f82cf178ca9a3b9ea
#: ../Doc/library/hashlib.rst:35
msgid ""
"There is one constructor method named for each type of :dfn:`hash`.  All "
"return a hash object with the same simple interface. For example: use :func:"
"`sha1` to create a SHA1 hash object. You can now feed this object with "
"arbitrary strings using the :meth:`update` method.  At any point you can ask "
"it for the :dfn:`digest` of the concatenation of the strings fed to it so "
"far using the :meth:`digest` or :meth:`hexdigest` methods."
msgstr ""

#: ../Doc/library/hashlib.rst:44
msgid ""
"Constructors for hash algorithms that are always present in this module are :"
"func:`md5`, :func:`sha1`, :func:`sha224`, :func:`sha256`, :func:`sha384`, "
"and :func:`sha512`.  Additional algorithms may also be available depending "
"upon the OpenSSL library that Python uses on your platform."
msgstr ""

# 60a95a9640ca4e36aa5b4c65d86b43fe
# f1e8ec5fa9ea40aabaa36d1941c535b8
#: ../Doc/library/hashlib.rst:49 ../Doc/library/md5.rst:24
msgid ""
"For example, to obtain the digest of the string ``'Nobody inspects the "
"spammish repetition'``:"
msgstr ""

#: ../Doc/library/hashlib.rst:63 ../Doc/library/md5.rst:34
msgid "More condensed:"
msgstr ""

#: ../Doc/library/hashlib.rst:68
msgid ""
"A generic :func:`new` constructor that takes the string name of the desired "
"algorithm as its first parameter also exists to allow access to the above "
"listed hashes as well as any other algorithms that your OpenSSL library may "
"offer.  The named constructors are much faster than :func:`new` and should "
"be preferred."
msgstr ""

#: ../Doc/library/hashlib.rst:73
msgid "Using :func:`new` with an algorithm provided by OpenSSL:"
msgstr ""

#: ../Doc/library/hashlib.rst:80
msgid "This module provides the following constant attribute:"
msgstr ""

#: ../Doc/library/hashlib.rst:84
msgid ""
"A tuple providing the names of the hash algorithms guaranteed to be "
"supported by this module."
msgstr ""

#: ../Doc/library/hashlib.rst:89
msgid ""
"The following values are provided as constant attributes of the hash objects "
"returned by the constructors:"
msgstr ""

#: ../Doc/library/hashlib.rst:95
msgid "The size of the resulting hash in bytes."
msgstr ""

#: ../Doc/library/hashlib.rst:99
msgid "The internal block size of the hash algorithm in bytes."
msgstr ""

#: ../Doc/library/hashlib.rst:101
msgid "A hash object has the following methods:"
msgstr ""

# 5232bc391aad4308a93b495bb807b4d6
#: ../Doc/library/hashlib.rst:106
msgid ""
"Update the hash object with the string *arg*.  Repeated calls are equivalent "
"to a single call with the concatenation of all the arguments: ``m.update(a); "
"m.update(b)`` is equivalent to ``m.update(a+b)``."
msgstr ""

# dd8fd25027c44dc6a1903d24c494a900
#: ../Doc/library/hashlib.rst:119
msgid ""
"Return the digest of the strings passed to the :meth:`update` method so far. "
"This is a string of :attr:`digest_size` bytes which may contain non-ASCII "
"characters, including null bytes."
msgstr ""

# 03fe429738a64d8a9e87a21c9d4b9102
#: ../Doc/library/hashlib.rst:126
msgid ""
"Like :meth:`digest` except the digest is returned as a string of double "
"length, containing only hexadecimal digits.  This may  be used to exchange "
"the value safely in email or other non-binary environments."
msgstr ""

# e7ead0b4ab9d4bbf97dd06b9cdd4af15
#: ../Doc/library/hashlib.rst:133
msgid ""
"Return a copy (\"clone\") of the hash object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""

#: ../Doc/library/hashlib.rst:140
msgid "A module to generate message authentication codes using hashes."
msgstr ""

#: ../Doc/library/hashlib.rst:143
msgid "Another way to encode binary hashes for non-binary environments."
msgstr ""

#: ../Doc/library/hashlib.rst:146
msgid "The FIPS 180-2 publication on Secure Hash Algorithms."
msgstr ""

#: ../Doc/library/hashlib.rst:149
msgid ""
"Wikipedia article with information on which algorithms have known issues and "
"what that means regarding their use."
msgstr ""

#: ../Doc/library/heapq.rst:2
msgid ":mod:`heapq` --- Heap queue algorithm"
msgstr ""

# 495a628f92b14325895c14846f5b1bdd
#: ../Doc/library/heapq.rst:13
msgid "**Source code:** :source:`Lib/heapq.py`"
msgstr ""

#: ../Doc/library/heapq.rst:17
msgid ""
"This module provides an implementation of the heap queue algorithm, also "
"known as the priority queue algorithm."
msgstr ""

# 5cb90d4785524679befb0f821ed11256
#: ../Doc/library/heapq.rst:20
msgid ""
"Heaps are binary trees for which every parent node has a value less than or "
"equal to any of its children.  This implementation uses arrays for which "
"``heap[k] <= heap[2*k+1]`` and ``heap[k] <= heap[2*k+2]`` for all *k*, "
"counting elements from zero.  For the sake of comparison, non-existing "
"elements are considered to be infinite.  The interesting property of a heap "
"is that its smallest element is always the root, ``heap[0]``."
msgstr ""

#: ../Doc/library/heapq.rst:27
msgid ""
"The API below differs from textbook heap algorithms in two aspects: (a) We "
"use zero-based indexing.  This makes the relationship between the index for "
"a node and the indexes for its children slightly less obvious, but is more "
"suitable since Python uses zero-based indexing. (b) Our pop method returns "
"the smallest item, not the largest (called a \"min heap\" in textbooks; a "
"\"max heap\" is more common in texts because of its suitability for in-place "
"sorting)."
msgstr ""

#: ../Doc/library/heapq.rst:34
msgid ""
"These two make it possible to view the heap as a regular Python list without "
"surprises: ``heap[0]`` is the smallest item, and ``heap.sort()`` maintains "
"the heap invariant!"
msgstr ""

#: ../Doc/library/heapq.rst:38
msgid ""
"To create a heap, use a list initialized to ``[]``, or you can transform a "
"populated list into a heap via function :func:`heapify`."
msgstr ""

#: ../Doc/library/heapq.rst:46
msgid "Push the value *item* onto the *heap*, maintaining the heap invariant."
msgstr ""

#: ../Doc/library/heapq.rst:51
msgid ""
"Pop and return the smallest item from the *heap*, maintaining the heap "
"invariant.  If the heap is empty, :exc:`IndexError` is raised."
msgstr ""

#: ../Doc/library/heapq.rst:56
msgid ""
"Push *item* on the heap, then pop and return the smallest item from the "
"*heap*.  The combined action runs more efficiently than :func:`heappush` "
"followed by a separate call to :func:`heappop`."
msgstr ""

#: ../Doc/library/heapq.rst:64
msgid "Transform list *x* into a heap, in-place, in linear time."
msgstr ""

# adc752ebbd6a4dd194e7282b64360051
#: ../Doc/library/heapq.rst:69
msgid ""
"Pop and return the smallest item from the *heap*, and also push the new "
"*item*. The heap size doesn't change. If the heap is empty, :exc:"
"`IndexError` is raised."
msgstr ""

# faa1215aaf5e4bf1b8af4537803f1472
#: ../Doc/library/heapq.rst:72
msgid ""
"This one step operation is more efficient than a :func:`heappop` followed "
"by :func:`heappush` and can be more appropriate when using a fixed-size "
"heap. The pop/push combination always returns an element from the heap and "
"replaces it with *item*."
msgstr ""

# 60dca183e60a48febccb59afd7da610e
#: ../Doc/library/heapq.rst:77
msgid ""
"The value returned may be larger than the *item* added.  If that isn't "
"desired, consider using :func:`heappushpop` instead.  Its push/pop "
"combination returns the smaller of the two values, leaving the larger value "
"on the heap."
msgstr ""

#: ../Doc/library/heapq.rst:83
msgid "The module also offers three general purpose functions based on heaps."
msgstr ""

#: ../Doc/library/heapq.rst:88
msgid ""
"Merge multiple sorted inputs into a single sorted output (for example, merge "
"timestamped entries from multiple log files).  Returns an :term:`iterator` "
"over the sorted values."
msgstr ""

#: ../Doc/library/heapq.rst:92
msgid ""
"Similar to ``sorted(itertools.chain(*iterables))`` but returns an iterable, "
"does not pull the data into memory all at once, and assumes that each of the "
"input streams is already sorted (smallest to largest)."
msgstr ""

#: ../Doc/library/heapq.rst:101
msgid ""
"Return a list with the *n* largest elements from the dataset defined by "
"*iterable*.  *key*, if provided, specifies a function of one argument that "
"is used to extract a comparison key from each element in the iterable: "
"``key=str.lower`` Equivalent to:  ``sorted(iterable, key=key, reverse=True)[:"
"n]``"
msgstr ""

#: ../Doc/library/heapq.rst:115
msgid ""
"Return a list with the *n* smallest elements from the dataset defined by "
"*iterable*.  *key*, if provided, specifies a function of one argument that "
"is used to extract a comparison key from each element in the iterable: "
"``key=str.lower`` Equivalent to:  ``sorted(iterable, key=key)[:n]``"
msgstr ""

#: ../Doc/library/heapq.rst:125
msgid ""
"The latter two functions perform best for smaller values of *n*.  For larger "
"values, it is more efficient to use the :func:`sorted` function.  Also, when "
"``n==1``, it is more efficient to use the built-in :func:`min` and :func:"
"`max` functions."
msgstr ""

# 493a8823c1ec4ac99f4a3993678ceaba
#: ../Doc/library/heapq.rst:132
msgid "Basic Examples"
msgstr ""

# e24b08a8cab340cb8c6d9f8d8cb730f9
#: ../Doc/library/heapq.rst:134
msgid ""
"A `heapsort <http://en.wikipedia.org/wiki/Heapsort>`_ can be implemented by "
"pushing all values onto a heap and then popping off the smallest values one "
"at a time::"
msgstr ""

# 2dd54d7a6a64488781f017997cf0a822
#: ../Doc/library/heapq.rst:148
msgid ""
"Heap elements can be tuples.  This is useful for assigning comparison values "
"(such as task priorities) alongside the main record being tracked::"
msgstr ""

# 34db5f26430f42bea85a3d15861ce99e
#: ../Doc/library/heapq.rst:161
msgid "Priority Queue Implementation Notes"
msgstr ""

# 074a9c2b46dd49a3b28bfa8337fe8e8a
#: ../Doc/library/heapq.rst:163
msgid ""
"A `priority queue <http://en.wikipedia.org/wiki/Priority_queue>`_ is common "
"use for a heap, and it presents several implementation challenges:"
msgstr ""

# a03458f3f7ae4122ad16dae386c73d0b
#: ../Doc/library/heapq.rst:166
msgid ""
"Sort stability:  how do you get two tasks with equal priorities to be "
"returned in the order they were originally added?"
msgstr ""

# 2eb2ad662e0449cea1c9582027ed76fd
#: ../Doc/library/heapq.rst:169
msgid ""
"In the future with Python 3, tuple comparison breaks for (priority, task) "
"pairs if the priorities are equal and the tasks do not have a default "
"comparison order."
msgstr ""

# a70309e23e6a4b6fa63e6ae52b1f28da
#: ../Doc/library/heapq.rst:173
msgid ""
"If the priority of a task changes, how do you move it to a new position in "
"the heap?"
msgstr ""

# babb8cc8fb8a4938b972a96032042169
#: ../Doc/library/heapq.rst:176
msgid ""
"Or if a pending task needs to be deleted, how do you find it and remove it "
"from the queue?"
msgstr ""

# 23bff4d1d9d74a47ab30134643b8dd51
#: ../Doc/library/heapq.rst:179
msgid ""
"A solution to the first two challenges is to store entries as 3-element list "
"including the priority, an entry count, and the task.  The entry count "
"serves as a tie-breaker so that two tasks with the same priority are "
"returned in the order they were added. And since no two entry counts are the "
"same, the tuple comparison will never attempt to directly compare two tasks."
msgstr ""

# df71af1888124297822c870990ee7eb9
#: ../Doc/library/heapq.rst:185
msgid ""
"The remaining challenges revolve around finding a pending task and making "
"changes to its priority or removing it entirely.  Finding a task can be done "
"with a dictionary pointing to an entry in the queue."
msgstr ""

# c685967ef15149fb85ac8758ced229b9
#: ../Doc/library/heapq.rst:189
msgid ""
"Removing the entry or changing its priority is more difficult because it "
"would break the heap structure invariants.  So, a possible solution is to "
"mark the existing entry as removed and add a new entry with the revised "
"priority::"
msgstr ""

#: ../Doc/library/heapq.rst:223
msgid "Theory"
msgstr ""

#: ../Doc/library/heapq.rst:225
msgid ""
"Heaps are arrays for which ``a[k] <= a[2*k+1]`` and ``a[k] <= a[2*k+2]`` for "
"all *k*, counting elements from 0.  For the sake of comparison, non-existing "
"elements are considered to be infinite.  The interesting property of a heap "
"is that ``a[0]`` is always its smallest element."
msgstr ""

#: ../Doc/library/heapq.rst:230
msgid ""
"The strange invariant above is meant to be an efficient memory "
"representation for a tournament.  The numbers below are *k*, not ``a[k]``::"
msgstr ""

#: ../Doc/library/heapq.rst:243
msgid ""
"In the tree above, each cell *k* is topping ``2*k+1`` and ``2*k+2``. In an "
"usual binary tournament we see in sports, each cell is the winner over the "
"two cells it tops, and we can trace the winner down the tree to see all "
"opponents s/he had.  However, in many computer applications of such "
"tournaments, we do not need to trace the history of a winner. To be more "
"memory efficient, when a winner is promoted, we try to replace it by "
"something else at a lower level, and the rule becomes that a cell and the "
"two cells it tops contain three different items, but the top cell \"wins\" "
"over the two topped cells."
msgstr ""

#: ../Doc/library/heapq.rst:252
msgid ""
"If this heap invariant is protected at all time, index 0 is clearly the "
"overall winner.  The simplest algorithmic way to remove it and find the "
"\"next\" winner is to move some loser (let's say cell 30 in the diagram "
"above) into the 0 position, and then percolate this new 0 down the tree, "
"exchanging values, until the invariant is re-established. This is clearly "
"logarithmic on the total number of items in the tree. By iterating over all "
"items, you get an O(n log n) sort."
msgstr ""

#: ../Doc/library/heapq.rst:259
msgid ""
"A nice feature of this sort is that you can efficiently insert new items "
"while the sort is going on, provided that the inserted items are not \"better"
"\" than the last 0'th element you extracted.  This is especially useful in "
"simulation contexts, where the tree holds all incoming events, and the \"win"
"\" condition means the smallest scheduled time.  When an event schedule "
"other events for execution, they are scheduled into the future, so they can "
"easily go into the heap.  So, a heap is a good structure for implementing "
"schedulers (this is what I used for my MIDI sequencer :-)."
msgstr ""

#: ../Doc/library/heapq.rst:268
msgid ""
"Various structures for implementing schedulers have been extensively "
"studied, and heaps are good for this, as they are reasonably speedy, the "
"speed is almost constant, and the worst case is not much different than the "
"average case. However, there are other representations which are more "
"efficient overall, yet the worst cases might be terrible."
msgstr ""

#: ../Doc/library/heapq.rst:274
msgid ""
"Heaps are also very useful in big disk sorts.  You most probably all know "
"that a big sort implies producing \"runs\" (which are pre-sorted sequences, "
"which size is usually related to the amount of CPU memory), followed by a "
"merging passes for these runs, which merging is often very cleverly "
"organised [#]_. It is very important that the initial sort produces the "
"longest runs possible.  Tournaments are a good way to that.  If, using all "
"the memory available to hold a tournament, you replace and percolate items "
"that happen to fit the current run, you'll produce runs which are twice the "
"size of the memory for random input, and much better for input fuzzily "
"ordered."
msgstr ""

#: ../Doc/library/heapq.rst:284
msgid ""
"Moreover, if you output the 0'th item on disk and get an input which may not "
"fit in the current tournament (because the value \"wins\" over the last "
"output value), it cannot fit in the heap, so the size of the heap "
"decreases.  The freed memory could be cleverly reused immediately for "
"progressively building a second heap, which grows at exactly the same rate "
"the first heap is melting.  When the first heap completely vanishes, you "
"switch heaps and start a new run.  Clever and quite effective!"
msgstr ""

#: ../Doc/library/heapq.rst:292
msgid ""
"In a word, heaps are useful memory structures to know.  I use them in a few "
"applications, and I think it is good to keep a 'heap' module around. :-)"
msgstr ""

#: ../Doc/library/heapq.rst:297
msgid ""
"The disk balancing algorithms which are current, nowadays, are more annoying "
"than clever, and this is a consequence of the seeking capabilities of the "
"disks. On devices which cannot seek, like big tape drives, the story was "
"quite different, and one had to be very clever to ensure (far in advance) "
"that each tape movement will be the most effective possible (that is, will "
"best participate at \"progressing\" the merge).  Some tapes were even able "
"to read backwards, and this was also used to avoid the rewinding time. "
"Believe me, real good tape sorts were quite spectacular to watch! From all "
"times, sorting has always been a Great Art! :-)"
msgstr ""

#: ../Doc/library/hmac.rst:2
msgid ":mod:`hmac` --- Keyed-Hashing for Message Authentication"
msgstr ""

# fc29ef787f5a439bb85c97e42ef0ea12
#: ../Doc/library/hmac.rst:12
msgid "**Source code:** :source:`Lib/hmac.py`"
msgstr ""

#: ../Doc/library/hmac.rst:16
msgid "This module implements the HMAC algorithm as described by :rfc:`2104`."
msgstr ""

#: ../Doc/library/hmac.rst:21
msgid ""
"Return a new hmac object.  If *msg* is present, the method call ``update(msg)"
"`` is made. *digestmod* is the digest constructor or module for the HMAC "
"object to use. It defaults to  the :func:`hashlib.md5` constructor."
msgstr ""

#: ../Doc/library/hmac.rst:26
msgid "An HMAC object has the following methods:"
msgstr ""

#: ../Doc/library/hmac.rst:30
msgid ""
"Update the hmac object with the string *msg*.  Repeated calls are equivalent "
"to a single call with the concatenation of all the arguments: ``m.update(a); "
"m.update(b)`` is equivalent to ``m.update(a + b)``."
msgstr ""

#: ../Doc/library/hmac.rst:37
msgid ""
"Return the digest of the strings passed to the :meth:`update` method so far. "
"This string will be the same length as the *digest_size* of the digest given "
"to the constructor.  It may contain non-ASCII characters, including NUL "
"bytes."
msgstr ""

#: ../Doc/library/hmac.rst:44
msgid ""
"Like :meth:`digest` except the digest is returned as a string twice the "
"length containing only hexadecimal digits.  This may be used to exchange the "
"value safely in email or other non-binary environments."
msgstr ""

#: ../Doc/library/hmac.rst:51
msgid ""
"Return a copy (\"clone\") of the hmac object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""

#: ../Doc/library/hmac.rst:58
msgid "The Python module providing secure hash functions."
msgstr ""

# 2a88dab844494a12be5ad1f447039059
#: ../Doc/library/hotshot.rst:3
msgid ":mod:`hotshot` --- High performance logging profiler"
msgstr ""

# 147ff3524c904dee801137b1a80b2875
#: ../Doc/library/hotshot.rst:13
msgid ""
"This module provides a nicer interface to the :mod:`_hotshot` C module. "
"Hotshot is a replacement for the existing :mod:`profile` module. As it's "
"written mostly in C, it should result in a much smaller performance impact "
"than the existing :mod:`profile` module."
msgstr ""

# 56ca3122e984456683e9a7bd6697475a
#: ../Doc/library/hotshot.rst:20
msgid ""
"The :mod:`hotshot` module focuses on minimizing the overhead while "
"profiling, at the expense of long data post-processing times. For common "
"usage it is recommended to use :mod:`cProfile` instead. :mod:`hotshot` is "
"not maintained and might be removed from the standard library in the future."
msgstr ""

# c8d84ffb34014ede9e6bf20237a43396
#: ../Doc/library/hotshot.rst:31
msgid ""
"The :mod:`hotshot` profiler does not yet work well with threads. It is "
"useful to use an unthreaded script to run the profiler over the code you're "
"interested in measuring if at all possible."
msgstr ""

# e73cfca7eb754a30986f67fae6cdf59b
#: ../Doc/library/hotshot.rst:38
msgid ""
"The profiler object. The argument *logfile* is the name of a log file to use "
"for logged profile data. The argument *lineevents* specifies whether to "
"generate events for every source line, or just on function call/return. It "
"defaults to ``0`` (only log function call/return). The argument "
"*linetimings* specifies whether to record timing information. It defaults to "
"``1`` (store timing information)."
msgstr ""

# b912e134277a4c68a80f3d870b74a3b6
#: ../Doc/library/hotshot.rst:49
msgid "Profile Objects"
msgstr ""

# 8485caeadabe4fdca2d0ce8cd5dcb849
#: ../Doc/library/hotshot.rst:51
msgid "Profile objects have the following methods:"
msgstr ""

# b9e1658b6e144498a88a6b97d349d195
#: ../Doc/library/hotshot.rst:56
msgid "Add an arbitrary labelled value to the profile output."
msgstr ""

# c9112863d91d45b785e5e696880ca3c4
#: ../Doc/library/hotshot.rst:61
msgid "Close the logfile and terminate the profiler."
msgstr ""

# 14b58defb5b6488c9fda54876826d2cc
#: ../Doc/library/hotshot.rst:66
msgid "Return the file descriptor of the profiler's log file."
msgstr ""

# b223199ab65f4cd484bb5354b4a9dfee
#: ../Doc/library/hotshot.rst:71
msgid ""
"Profile an :keyword:`exec`\\ -compatible string in the script environment. "
"The globals from the :mod:`__main__` module are used as both the globals and "
"locals for the script."
msgstr ""

# 5629a991c2d54d26b4690d96e0f228c1
#: ../Doc/library/hotshot.rst:78
msgid ""
"Profile a single call of a callable. Additional positional and keyword "
"arguments may be passed along; the result of the call is returned, and "
"exceptions are allowed to propagate cleanly, while ensuring that profiling "
"is disabled on the way out."
msgstr ""

# 2793ffb493a2420e867ac65477e5f56e
#: ../Doc/library/hotshot.rst:86
msgid ""
"Evaluate an :keyword:`exec`\\ -compatible string in a specific environment. "
"The string is compiled before profiling begins."
msgstr ""

# c673af1f85c84f238f9c4e2a0fa88efb
#: ../Doc/library/hotshot.rst:92
msgid "Start the profiler."
msgstr ""

# 7ff0490403174ae68e7f1d616bb28b93
#: ../Doc/library/hotshot.rst:97
msgid "Stop the profiler."
msgstr ""

# 5f50be968dec47c280d2d5bf34a48d5e
#: ../Doc/library/hotshot.rst:101
msgid "Using hotshot data"
msgstr ""

# a4712deb9fad4371a2c5e0f4716387b4
#: ../Doc/library/hotshot.rst:109
msgid ""
"This module loads hotshot profiling data into the standard :mod:`pstats` "
"Stats objects."
msgstr ""

# 084b76c517b0457ca4cec449d25336a8
#: ../Doc/library/hotshot.rst:115
msgid ""
"Load hotshot data from *filename*. Returns an instance of the :class:`pstats."
"Stats` class."
msgstr ""

# 5e0d6d0df1904d00877b6b08d2b8f1b3
#: ../Doc/library/hotshot.rst:122
msgid "The :mod:`profile` module's :class:`Stats` class"
msgstr ""

# c9e195995844444aa46bcde02e14434f
#: ../Doc/library/hotshot.rst:128
msgid "Example Usage"
msgstr ""

# 6cbe22ac8c5f4cabbf7831eed2415d70
#: ../Doc/library/hotshot.rst:130
msgid ""
"Note that this example runs the Python \"benchmark\" pystones.  It can take "
"some time to run, and will produce large output files. ::"
msgstr ""

# 8fe12a9379884b029b3bc4cd7b3e289b
#: ../Doc/library/htmllib.rst:2
msgid ":mod:`htmllib` --- A parser for HTML documents"
msgstr ""

# d8678b6385f943ae84719c26fa9d507d
#: ../Doc/library/htmllib.rst:21
msgid ""
"This module defines a class which can serve as a base for parsing text files "
"formatted in the HyperText Mark-up Language (HTML).  The class is not "
"directly concerned with I/O --- it must be provided with input in string "
"form via a method, and makes calls to methods of a \"formatter\" object in "
"order to produce output.  The :class:`HTMLParser` class is designed to be "
"used as a base class for other classes in order to add functionality, and "
"allows most of its methods to be extended or overridden.  In turn, this "
"class is derived from and extends the :class:`SGMLParser` class defined in "
"module :mod:`sgmllib`.  The :class:`HTMLParser` implementation supports the "
"HTML 2.0 language as described in :rfc:`1866`.  Two implementations of "
"formatter objects are provided in the :mod:`formatter` module; refer to the "
"documentation for that module for information on the formatter interface."
msgstr ""

# 36e11c18c03d456c95505372e129531a
#: ../Doc/library/htmllib.rst:34
msgid ""
"The following is a summary of the interface defined by :class:`sgmllib."
"SGMLParser`:"
msgstr ""

# 775505134f8b4cb38a7ff654e2508694
#: ../Doc/library/htmllib.rst:37
msgid ""
"The interface to feed data to an instance is through the :meth:`feed` "
"method, which takes a string argument.  This can be called with as little or "
"as much text at a time as desired; ``p.feed(a); p.feed(b)`` has the same "
"effect as ``p.feed(a+b)``.  When the data contains complete HTML markup "
"constructs, these are processed immediately; incomplete constructs are saved "
"in a buffer.  To force processing of all unprocessed data, call the :meth:"
"`close` method."
msgstr ""

# 7e93491efa1a499abf47be7dd679f717
#: ../Doc/library/htmllib.rst:44
msgid "For example, to parse the entire contents of a file, use::"
msgstr ""

# b379f9d69a2942e4b67af658d5a6a91b
#: ../Doc/library/htmllib.rst:49
msgid ""
"The interface to define semantics for HTML tags is very simple: derive a "
"class and define methods called :meth:`start_tag`, :meth:`end_tag`, or :meth:"
"`do_tag`. The parser will call these at appropriate moments: :meth:"
"`start_tag` or :meth:`do_tag` is called when an opening tag of the form "
"``<tag ...>`` is encountered; :meth:`end_tag` is called when a closing tag "
"of the form ``<tag>`` is encountered.  If an opening tag requires a "
"corresponding closing tag, like ``<H1>`` ... ``</H1>``, the class should "
"define the :meth:`start_tag` method; if a tag requires no closing tag, like "
"``<P>``, the class should define the :meth:`do_tag` method."
msgstr ""

# 45bfa8234f054cddbec52553a0779187
#: ../Doc/library/htmllib.rst:59
msgid "The module defines a parser class and an exception:"
msgstr ""

# 1a74a164ac7246d4a787ed19033d3cdb
#: ../Doc/library/htmllib.rst:64
msgid ""
"This is the basic HTML parser class.  It supports all entity names required "
"by the XHTML 1.0 Recommendation (http://www.w3.org/TR/xhtml1).   It also "
"defines handlers for all HTML 2.0 and many HTML 3.0 and 3.2 elements."
msgstr ""

# 8cc351847d70476d9472253e810b5240
#: ../Doc/library/htmllib.rst:71
msgid ""
"Exception raised by the :class:`HTMLParser` class when it encounters an "
"error while parsing."
msgstr ""

# b619c47cbcb440bc87ac7cb744964d7e
#: ../Doc/library/htmllib.rst:80
msgid ""
"Interface definition for transforming an abstract flow of formatting events "
"into specific output events on writer objects."
msgstr ""

# 4b9bb2d87877486eacd89bdedea22e41
#: ../Doc/library/htmllib.rst:84
msgid ""
"Alternate HTML parser that offers a slightly lower-level view of the input, "
"but is designed to work with XHTML, and does not implement some of the SGML "
"syntax not used in \"HTML as deployed\" and which isn't legal for XHTML."
msgstr ""

# b1cd93fdb0834dd4b6ca04a684ce9302
#: ../Doc/library/htmllib.rst:89
msgid "Definition of replacement text for XHTML 1.0  entities."
msgstr ""

# 0899c047fef8478ba6792ddb2a13d2b9
#: ../Doc/library/htmllib.rst:92
msgid "Base class for :class:`HTMLParser`."
msgstr ""

# 8d3f81ddaafd479fab95d98778350c19
#: ../Doc/library/htmllib.rst:98
msgid "HTMLParser Objects"
msgstr ""

# b0e76f8edc4347648f5f2ed3c5cf103d
#: ../Doc/library/htmllib.rst:100
msgid ""
"In addition to tag methods, the :class:`HTMLParser` class provides some "
"additional methods and instance variables for use within tag methods."
msgstr ""

# 1f16de46d90b49599527adc08ec8c358
#: ../Doc/library/htmllib.rst:106
msgid "This is the formatter instance associated with the parser."
msgstr ""

# e5b8c89e4f93496ba938846c9aa24225
#: ../Doc/library/htmllib.rst:111
msgid ""
"Boolean flag which should be true when whitespace should not be collapsed, "
"or false when it should be.  In general, this should only be true when "
"character data is to be treated as \"preformatted\" text, as within a "
"``<PRE>`` element. The default value is false.  This affects the operation "
"of :meth:`handle_data` and :meth:`save_end`."
msgstr ""

# e4a4a4c19f9245f5811c105e36130d98
#: ../Doc/library/htmllib.rst:120
msgid ""
"This method is called at the start of an anchor region.  The arguments "
"correspond to the attributes of the ``<A>`` tag with the same names.  The "
"default implementation maintains a list of hyperlinks (defined by the "
"``HREF`` attribute for ``<A>`` tags) within the document.  The list of "
"hyperlinks is available as the data attribute :attr:`anchorlist`."
msgstr ""

# dc01f7b341ba4eaebf09bd48c1bf9aad
#: ../Doc/library/htmllib.rst:129
msgid ""
"This method is called at the end of an anchor region.  The default "
"implementation adds a textual footnote marker using an index into the list "
"of hyperlinks created by :meth:`anchor_bgn`."
msgstr ""

# 380098e63d8c42f0a13f0e10368c9955
#: ../Doc/library/htmllib.rst:136
msgid ""
"This method is called to handle images.  The default implementation simply "
"passes the *alt* value to the :meth:`handle_data` method."
msgstr ""

# e07c44bc78524a7eb3f764df31768819
#: ../Doc/library/htmllib.rst:142
msgid ""
"Begins saving character data in a buffer instead of sending it to the "
"formatter object.  Retrieve the stored data via :meth:`save_end`. Use of "
"the :meth:`save_bgn` / :meth:`save_end` pair may not be nested."
msgstr ""

# 4f5bbc2bfeab4dbb91a7b6353c705dd2
#: ../Doc/library/htmllib.rst:149
msgid ""
"Ends buffering character data and returns all data saved since the preceding "
"call to :meth:`save_bgn`.  If the :attr:`nofill` flag is false, whitespace "
"is collapsed to single spaces.  A call to this method without a preceding "
"call to :meth:`save_bgn` will raise a :exc:`TypeError` exception."
msgstr ""

# 659a6c92257d4c34bd54413349e53da1
#: ../Doc/library/htmllib.rst:156
msgid ":mod:`htmlentitydefs` --- Definitions of HTML general entities"
msgstr ""

# d6efaa35f3234292b8de02b77474e921
#: ../Doc/library/htmllib.rst:164
msgid ""
"The :mod:`htmlentitydefs` module has been renamed to :mod:`html.entities` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# c431b987d030440a97dd73a93cbee1e5
#: ../Doc/library/htmllib.rst:168
msgid "**Source code:** :source:`Lib/htmlentitydefs.py`"
msgstr ""

# bedf0cd8931747e7aaa105ff02d0ba36
#: ../Doc/library/htmllib.rst:172
msgid ""
"This module defines three dictionaries, ``name2codepoint``, "
"``codepoint2name``, and ``entitydefs``. ``entitydefs`` is used by the :mod:"
"`htmllib` module to provide the :attr:`entitydefs` attribute of the :class:"
"`HTMLParser` class.  The definition provided here contains all the entities "
"defined by XHTML 1.0  that can be handled using simple textual substitution "
"in the Latin-1 character set (ISO-8859-1)."
msgstr ""

#: ../Doc/library/htmllib.rst:182
msgid ""
"A dictionary mapping XHTML 1.0 entity definitions to their replacement text "
"in ISO Latin-1."
msgstr ""

#: ../Doc/library/htmllib.rst:188
msgid "A dictionary that maps HTML entity names to the Unicode codepoints."
msgstr ""

#: ../Doc/library/htmllib.rst:195
msgid "A dictionary that maps Unicode codepoints to HTML entity names."
msgstr ""

# e73daf9913634c76ab7eb21a016c28a2
#: ../Doc/library/htmlparser.rst:3
msgid ":mod:`HTMLParser` --- Simple HTML and XHTML parser"
msgstr ""

# b84f627bd73846a081535279ff9fd65a
#: ../Doc/library/htmlparser.rst:10
msgid ""
"The :mod:`HTMLParser` module has been renamed to :mod:`html.parser` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# 86e749a8378148e59d4e53f6ddcc1e47
#: ../Doc/library/htmlparser.rst:21
msgid "**Source code:** :source:`Lib/HTMLParser.py`"
msgstr ""

# 22889fe0400a419c896d560c1102d75c
#: ../Doc/library/htmlparser.rst:25
msgid ""
"This module defines a class :class:`.HTMLParser` which serves as the basis "
"for parsing text files formatted in HTML (HyperText Mark-up Language) and "
"XHTML. Unlike the parser in :mod:`htmllib`, this parser is not based on the "
"SGML parser in :mod:`sgmllib`."
msgstr ""

# 58a57b3948ec414ebe4fb7b055f72add
#: ../Doc/library/htmlparser.rst:33
msgid ""
"An :class:`.HTMLParser` instance is fed HTML data and calls handler methods "
"when start tags, end tags, text, comments, and other markup elements are "
"encountered.  The user should subclass :class:`.HTMLParser` and override its "
"methods to implement the desired behavior."
msgstr ""

# e5d26c5a9cc24dae8576345423f4e3df
#: ../Doc/library/htmlparser.rst:38
msgid "The :class:`.HTMLParser` class is instantiated without arguments."
msgstr ""

# 1cd6b2b50db240a2baa19c491c67a0a8
#: ../Doc/library/htmlparser.rst:40
msgid ""
"Unlike the parser in :mod:`htmllib`, this parser does not check that end "
"tags match start tags or call the end-tag handler for elements which are "
"closed implicitly by closing an outer element."
msgstr ""

#: ../Doc/library/htmlparser.rst:44
msgid "An exception is defined as well:"
msgstr ""

# 3194fb3fe2b24f80881f2a015e943ab7
#: ../Doc/library/htmlparser.rst:48
msgid ""
":class:`.HTMLParser` is able to handle broken markup, but in some cases it "
"might raise this exception when it encounters an error while parsing. This "
"exception provides three attributes: :attr:`msg` is a brief message "
"explaining the error, :attr:`lineno` is the number of the line on which the "
"broken construct was detected, and :attr:`offset` is the number of "
"characters into the line at which the construct starts."
msgstr ""

#: ../Doc/library/htmlparser.rst:57
msgid "Example HTML Parser Application"
msgstr ""

# e18d0d52a9024a4cb5ec3de3b40e7e9d
#: ../Doc/library/htmlparser.rst:59
msgid ""
"As a basic example, below is a simple HTML parser that uses the :class:`."
"HTMLParser` class to print out start tags, end tags and data as they are "
"encountered::"
msgstr ""

# 36a7f655efce4099980b561fd6918c13
#: ../Doc/library/htmlparser.rst:79
msgid "The output will then be::"
msgstr ""

# c0f5a8e2a72c454ea8ce01e493d49301
#: ../Doc/library/htmlparser.rst:96
msgid ":class:`.HTMLParser` Methods"
msgstr ""

# 368ec871510040989d238219448a2bf1
#: ../Doc/library/htmlparser.rst:98
msgid ":class:`.HTMLParser` instances have the following methods:"
msgstr ""

# 18f14ac1956e4d859f7f3d01564512ab
#: ../Doc/library/htmlparser.rst:103
msgid ""
"Feed some text to the parser.  It is processed insofar as it consists of "
"complete elements; incomplete data is buffered until more data is fed or :"
"meth:`close` is called.  *data* can be either :class:`unicode` or :class:"
"`str`, but passing :class:`unicode` is advised."
msgstr ""

# 6e02c4b327704042806f72327a5811ce
#: ../Doc/library/htmlparser.rst:111
msgid ""
"Force processing of all buffered data as if it were followed by an end-of-"
"file mark.  This method may be redefined by a derived class to define "
"additional processing at the end of the input, but the redefined version "
"should always call the :class:`.HTMLParser` base class method :meth:`close`."
msgstr ""

#: ../Doc/library/htmlparser.rst:119 ../Doc/library/sgmllib.rst:52
msgid ""
"Reset the instance.  Loses all unprocessed data.  This is called implicitly "
"at instantiation time."
msgstr ""

#: ../Doc/library/htmlparser.rst:125
msgid "Return current line number and offset."
msgstr ""

#: ../Doc/library/htmlparser.rst:130 ../Doc/library/sgmllib.rst:84
msgid ""
"Return the text of the most recently opened start tag.  This should not "
"normally be needed for structured processing, but may be useful in dealing "
"with HTML \"as deployed\" or for re-generating input with minimal changes "
"(whitespace between attributes can be preserved, etc.)."
msgstr ""

# f6eac62ee59e412f952ab755f838ee16
#: ../Doc/library/htmlparser.rst:136
msgid ""
"The following methods are called when data or markup elements are "
"encountered and they are meant to be overridden in a subclass.  The base "
"class implementations do nothing (except for :meth:`~HTMLParser."
"handle_startendtag`):"
msgstr ""

# 7697e9445f2f4407bf8ecea7b7a54116
#: ../Doc/library/htmlparser.rst:143
msgid ""
"This method is called to handle the start of a tag (e.g. ``<div id=\"main"
"\">``)."
msgstr ""

# 912bb822d2f447b188bd6faa74b753aa
#: ../Doc/library/htmlparser.rst:145
msgid ""
"The *tag* argument is the name of the tag converted to lower case. The "
"*attrs* argument is a list of ``(name, value)`` pairs containing the "
"attributes found inside the tag's ``<>`` brackets.  The *name* will be "
"translated to lower case, and quotes in the *value* have been removed, and "
"character and entity references have been replaced."
msgstr ""

# 35282639e0f749c787ce3920ad4a20e2
#: ../Doc/library/htmlparser.rst:151
msgid ""
"For instance, for the tag ``<A HREF=\"http://www.cwi.nl/\">``, this method "
"would be called as ``handle_starttag('a', [('href', 'http://www.cwi.nl/')])"
"``."
msgstr ""

# 4359daeffa5c49949f361cd86131cffb
#: ../Doc/library/htmlparser.rst:161
msgid ""
"This method is called to handle the end tag of an element (e.g. ``</div>``)."
msgstr ""

# 48fd8765333b4ec0bf70fd3a0d242b27
#: ../Doc/library/htmlparser.rst:163
msgid "The *tag* argument is the name of the tag converted to lower case."
msgstr ""

# dd799fb4fa3b424b9261af590d400f9e
#: ../Doc/library/htmlparser.rst:168
msgid ""
"Similar to :meth:`handle_starttag`, but called when the parser encounters an "
"XHTML-style empty tag (``<img ... />``).  This method may be overridden by "
"subclasses which require this particular lexical information; the default "
"implementation simply calls :meth:`handle_starttag` and :meth:"
"`handle_endtag`."
msgstr ""

# c32ffc10efc94cadb8af82769e4ca583
#: ../Doc/library/htmlparser.rst:176
msgid ""
"This method is called to process arbitrary data (e.g. text nodes and the "
"content of ``<script>...</script>`` and ``<style>...</style>``)."
msgstr ""

# d92b84984859434faec0bab3489bd3a3
#: ../Doc/library/htmlparser.rst:182
msgid ""
"This method is called to process a named character reference of the form "
"``&name;`` (e.g. ``&gt;``), where *name* is a general entity reference (e.g. "
"``'gt'``)."
msgstr ""

# 17cdae559042413ba099af923022bfd1
#: ../Doc/library/htmlparser.rst:189
msgid ""
"This method is called to process decimal and hexadecimal numeric character "
"references of the form ``&#NNN;`` and ``&#xNNN;``.  For example, the decimal "
"equivalent for ``&gt;`` is ``&#62;``, whereas the hexadecimal is ``&#x3E;``; "
"in this case the method will receive ``'62'`` or ``'x3E'``."
msgstr ""

# d71c010e43734fb6845a81b4eb9305be
#: ../Doc/library/htmlparser.rst:197
msgid ""
"This method is called when a comment is encountered (e.g. ``<!--comment--"
">``)."
msgstr ""

# bea228cff8804e389ff2a2b99bf74f12
#: ../Doc/library/htmlparser.rst:199
msgid ""
"For example, the comment ``<!-- comment -->`` will cause this method to be "
"called with the argument ``' comment '``."
msgstr ""

# a971c79674724b8bacd2bb1f17d3b474
#: ../Doc/library/htmlparser.rst:202
msgid ""
"The content of Internet Explorer conditional comments (condcoms) will also "
"be sent to this method, so, for ``<!--[if IE 9]>IE9-specific content<!"
"[endif]-->``, this method will receive ``'[if IE 9]>IE-specific content<!"
"[endif]'``."
msgstr ""

# 945deb1652cd412ca28d8f1bf01d2d98
#: ../Doc/library/htmlparser.rst:209
msgid ""
"This method is called to handle an HTML doctype declaration (e.g. ``<!"
"DOCTYPE html>``)."
msgstr ""

# b5483c9fc7be47299cf7affa7c2005de
#: ../Doc/library/htmlparser.rst:212
msgid ""
"The *decl* parameter will be the entire contents of the declaration inside "
"the ``<!...>`` markup (e.g. ``'DOCTYPE html'``)."
msgstr ""

# 26820bcd03a947f7a88123c2ee7b9f4e
#: ../Doc/library/htmlparser.rst:218
msgid ""
"This method is called when a processing instruction is encountered.  The "
"*data* parameter will contain the entire processing instruction.  For "
"example, for the processing instruction ``<?proc color='red'>``, this method "
"would be called as ``handle_pi(\"proc color='red'\")``."
msgstr ""

# a24c490ba44643f2a0a0609ebb85cdbf
#: ../Doc/library/htmlparser.rst:225
msgid ""
"The :class:`.HTMLParser` class uses the SGML syntactic rules for processing "
"instructions.  An XHTML processing instruction using the trailing ``'?'`` "
"will cause the ``'?'`` to be included in *data*."
msgstr ""

# de2268a9e1a5496daa8732069834bd90
#: ../Doc/library/htmlparser.rst:232
msgid ""
"This method is called when an unrecognized declaration is read by the parser."
msgstr ""

# c06510620e624e9f84decb9e2d87b731
#: ../Doc/library/htmlparser.rst:234
msgid ""
"The *data* parameter will be the entire contents of the declaration inside "
"the ``<![...]>`` markup.  It is sometimes useful to be overridden by a "
"derived class."
msgstr ""

# dba2a1e3889f4a6c91ebe6e384daa9ac
#: ../Doc/library/htmlparser.rst:244
msgid ""
"The following class implements a parser that will be used to illustrate more "
"examples::"
msgstr ""

# 4bfe566ad0324e2389938e834154ae1f
#: ../Doc/library/htmlparser.rst:275
msgid "Parsing a doctype::"
msgstr ""

# 03c98a66b28849838d9dc6267b421baf
#: ../Doc/library/htmlparser.rst:281
msgid "Parsing an element with a few attributes and a title::"
msgstr ""

# 10777e131af140fbb84532e572077c9b
#: ../Doc/library/htmlparser.rst:293
msgid ""
"The content of ``script`` and ``style`` elements is returned as is, without "
"further parsing::"
msgstr ""

# ca0b1f317b5e401c8ad385a56c0d46df
#: ../Doc/library/htmlparser.rst:309
msgid "Parsing comments::"
msgstr ""

# 52cff0eae7324b1ab992ecc302c08dc8
#: ../Doc/library/htmlparser.rst:316
msgid ""
"Parsing named and numeric character references and converting them to the "
"correct char (note: these 3 references are all equivalent to ``'>'``)::"
msgstr ""

# 2127e50c684f4ab3a88c39dce51fdc00
#: ../Doc/library/htmlparser.rst:324
msgid ""
"Feeding incomplete chunks to :meth:`~HTMLParser.feed` works, but :meth:"
"`~HTMLParser.handle_data` might be called more than once::"
msgstr ""

# 9739093a5a99433bacab68cd0545dc8d
#: ../Doc/library/htmlparser.rst:336
msgid "Parsing invalid HTML (e.g. unquoted attributes) also works::"
msgstr ""

# 8db36beefa6246c8a8f590cd37977cc3
#: ../Doc/library/httplib.rst:2
msgid ":mod:`httplib` --- HTTP protocol client"
msgstr ""

# e380f969d64e4d2cad8782c0b9bfe3c3
#: ../Doc/library/httplib.rst:8
msgid ""
"The :mod:`httplib` module has been renamed to :mod:`http.client` in Python "
"3.  The :term:`2to3` tool will automatically adapt imports when converting "
"your sources to Python 3."
msgstr ""

# 2607650dcf1b4fb1aaff113316636b0a
#: ../Doc/library/httplib.rst:19
msgid "**Source code:** :source:`Lib/httplib.py`"
msgstr ""

# 896b62c1e5874a2aaa0d93898296a266
#: ../Doc/library/httplib.rst:23
msgid ""
"This module defines classes which implement the client side of the HTTP and "
"HTTPS protocols.  It is normally not used directly --- the module :mod:"
"`urllib` uses it to handle URLs that use HTTP and HTTPS."
msgstr ""

#: ../Doc/library/httplib.rst:29
msgid ""
"HTTPS support is only available if the :mod:`socket` module was compiled "
"with SSL support."
msgstr ""

# 1e742495689c4bf09ecf12734ab674a9
#: ../Doc/library/httplib.rst:34
msgid ""
"The public interface for this module changed substantially in Python 2.0.  "
"The :class:`HTTP` class is retained only for backward compatibility with "
"1.5.2.  It should not be used in new code.  Refer to the online docstrings "
"for usage."
msgstr ""

#: ../Doc/library/httplib.rst:38
msgid "The module provides the following classes:"
msgstr ""

# be77dc4af47449aa8bd11f8e349b9804
#: ../Doc/library/httplib.rst:43
msgid ""
"An :class:`HTTPConnection` instance represents one transaction with an HTTP "
"server.  It should be instantiated passing it a host and optional port "
"number.  If no port number is passed, the port is extracted from the host "
"string if it has the form ``host:port``, else the default HTTP port (80) is "
"used.  When True, the optional parameter *strict* (which defaults to a false "
"value) causes ``BadStatusLine`` to be raised if the status line can't be "
"parsed as a valid HTTP/1.0 or 1.1 status line.  If the optional *timeout* "
"parameter is given, blocking operations (like connection attempts) will "
"timeout after that many seconds (if it is not given, the global default "
"timeout setting is used). The optional *source_address* parameter may be a "
"tuple of a (host, port) to use as the source address the HTTP connection is "
"made from."
msgstr ""

#: ../Doc/library/httplib.rst:56
msgid ""
"For example, the following calls all create instances that connect to the "
"server at the same host and port::"
msgstr ""

#: ../Doc/library/httplib.rst:75
msgid ""
"A subclass of :class:`HTTPConnection` that uses SSL for communication with "
"secure servers.  Default port is ``443``. *key_file* is the name of a PEM "
"formatted file that contains your private key. *cert_file* is a PEM "
"formatted certificate chain file."
msgstr ""

# b9f6b019994b4467a0cf756e3f1ff43c
#: ../Doc/library/httplib.rst:81
msgid "This does not do any verification of the server's certificate."
msgstr ""

#: ../Doc/library/httplib.rst:94
msgid ""
"Class whose instances are returned upon successful connection.  Not "
"instantiated directly by user."
msgstr ""

# fc1d4cd41ee94a48b3995361eda74b1a
#: ../Doc/library/httplib.rst:101
msgid ""
"An :class:`HTTPMessage` instance is used to hold the headers from an HTTP "
"response. It is implemented using the :class:`mimetools.Message` class and "
"provides utility functions to deal with HTTP Headers. It is not directly "
"instantiated by the users."
msgstr ""

#: ../Doc/library/httplib.rst:107 ../Doc/library/urllib2.rst:96
msgid "The following exceptions are raised as appropriate:"
msgstr ""

#: ../Doc/library/httplib.rst:112
msgid ""
"The base class of the other exceptions in this module.  It is a subclass of :"
"exc:`Exception`."
msgstr ""

#: ../Doc/library/httplib.rst:120 ../Doc/library/httplib.rst:135
#: ../Doc/library/httplib.rst:142 ../Doc/library/httplib.rst:149
#: ../Doc/library/httplib.rst:156 ../Doc/library/httplib.rst:163
msgid "A subclass of :exc:`HTTPException`."
msgstr ""

#: ../Doc/library/httplib.rst:127
msgid ""
"A subclass of :exc:`HTTPException`, raised if a port is given and is either "
"non-numeric or empty."
msgstr ""

#: ../Doc/library/httplib.rst:170 ../Doc/library/httplib.rst:177
#: ../Doc/library/httplib.rst:184
msgid "A subclass of :exc:`ImproperConnectionState`."
msgstr ""

#: ../Doc/library/httplib.rst:191
msgid ""
"A subclass of :exc:`HTTPException`.  Raised if a server responds with a HTTP "
"status code that we don't understand."
msgstr ""

#: ../Doc/library/httplib.rst:196 ../Doc/library/string.rst:27
msgid "The constants defined in this module are:"
msgstr ""

#: ../Doc/library/httplib.rst:201
msgid "The default port for the HTTP protocol (always ``80``)."
msgstr ""

#: ../Doc/library/httplib.rst:206
msgid "The default port for the HTTPS protocol (always ``443``)."
msgstr ""

#: ../Doc/library/httplib.rst:208
msgid "and also the following constants for integer status codes:"
msgstr ""

#: ../Doc/library/httplib.rst:211
msgid "Definition"
msgstr ""

#: ../Doc/library/httplib.rst:213
msgid ":const:`CONTINUE`"
msgstr ""

#: ../Doc/library/httplib.rst:213
msgid "``100``"
msgstr ""

#: ../Doc/library/httplib.rst:213
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.1.1 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.1.1>`_"
msgstr ""

#: ../Doc/library/httplib.rst:217
msgid ":const:`SWITCHING_PROTOCOLS`"
msgstr ""

#: ../Doc/library/httplib.rst:217
msgid "``101``"
msgstr ""

#: ../Doc/library/httplib.rst:217
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.1.2 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.1.2>`_"
msgstr ""

#: ../Doc/library/httplib.rst:221
msgid ":const:`PROCESSING`"
msgstr ""

#: ../Doc/library/httplib.rst:221
msgid "``102``"
msgstr ""

#: ../Doc/library/httplib.rst:221
msgid ""
"WEBDAV, `RFC 2518, Section 10.1 <http://www.webdav.org/specs/rfc2518."
"html#STATUS_102>`_"
msgstr ""

#: ../Doc/library/httplib.rst:224
msgid ":const:`OK`"
msgstr ""

#: ../Doc/library/httplib.rst:224
msgid "``200``"
msgstr ""

#: ../Doc/library/httplib.rst:224
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.2.1 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.2.1>`_"
msgstr ""

#: ../Doc/library/httplib.rst:228
msgid ":const:`CREATED`"
msgstr ""

#: ../Doc/library/httplib.rst:228
msgid "``201``"
msgstr ""

#: ../Doc/library/httplib.rst:228
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.2.2 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.2.2>`_"
msgstr ""

#: ../Doc/library/httplib.rst:232
msgid ":const:`ACCEPTED`"
msgstr ""

#: ../Doc/library/httplib.rst:232
msgid "``202``"
msgstr ""

#: ../Doc/library/httplib.rst:232
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.2.3 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.2.3>`_"
msgstr ""

#: ../Doc/library/httplib.rst:236
msgid ":const:`NON_AUTHORITATIVE_INFORMATION`"
msgstr ""

#: ../Doc/library/httplib.rst:236
msgid "``203``"
msgstr ""

#: ../Doc/library/httplib.rst:236
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.2.4 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.2.4>`_"
msgstr ""

#: ../Doc/library/httplib.rst:240
msgid ":const:`NO_CONTENT`"
msgstr ""

#: ../Doc/library/httplib.rst:240
msgid "``204``"
msgstr ""

#: ../Doc/library/httplib.rst:240
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.2.5 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.2.5>`_"
msgstr ""

#: ../Doc/library/httplib.rst:244
msgid ":const:`RESET_CONTENT`"
msgstr ""

#: ../Doc/library/httplib.rst:244
msgid "``205``"
msgstr ""

#: ../Doc/library/httplib.rst:244
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.2.6 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.2.6>`_"
msgstr ""

#: ../Doc/library/httplib.rst:248
msgid ":const:`PARTIAL_CONTENT`"
msgstr ""

#: ../Doc/library/httplib.rst:248
msgid "``206``"
msgstr ""

#: ../Doc/library/httplib.rst:248
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.2.7 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.2.7>`_"
msgstr ""

#: ../Doc/library/httplib.rst:252
msgid ":const:`MULTI_STATUS`"
msgstr ""

#: ../Doc/library/httplib.rst:252
msgid "``207``"
msgstr ""

#: ../Doc/library/httplib.rst:252
msgid ""
"WEBDAV `RFC 2518, Section 10.2 <http://www.webdav.org/specs/rfc2518."
"html#STATUS_207>`_"
msgstr ""

#: ../Doc/library/httplib.rst:255
msgid ":const:`IM_USED`"
msgstr ""

#: ../Doc/library/httplib.rst:255
msgid "``226``"
msgstr ""

#: ../Doc/library/httplib.rst:255
msgid "Delta encoding in HTTP, :rfc:`3229`, Section 10.4.1"
msgstr ""

#: ../Doc/library/httplib.rst:258
msgid ":const:`MULTIPLE_CHOICES`"
msgstr ""

#: ../Doc/library/httplib.rst:258
msgid "``300``"
msgstr ""

#: ../Doc/library/httplib.rst:258
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.3.1 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.3.1>`_"
msgstr ""

#: ../Doc/library/httplib.rst:262
msgid ":const:`MOVED_PERMANENTLY`"
msgstr ""

#: ../Doc/library/httplib.rst:262
msgid "``301``"
msgstr ""

#: ../Doc/library/httplib.rst:262
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.3.2 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.3.2>`_"
msgstr ""

#: ../Doc/library/httplib.rst:266
msgid ":const:`FOUND`"
msgstr ""

#: ../Doc/library/httplib.rst:266
msgid "``302``"
msgstr ""

#: ../Doc/library/httplib.rst:266
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.3.3 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.3.3>`_"
msgstr ""

#: ../Doc/library/httplib.rst:270
msgid ":const:`SEE_OTHER`"
msgstr ""

#: ../Doc/library/httplib.rst:270
msgid "``303``"
msgstr ""

#: ../Doc/library/httplib.rst:270
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.3.4 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.3.4>`_"
msgstr ""

#: ../Doc/library/httplib.rst:274
msgid ":const:`NOT_MODIFIED`"
msgstr ""

#: ../Doc/library/httplib.rst:274
msgid "``304``"
msgstr ""

#: ../Doc/library/httplib.rst:274
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.3.5 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.3.5>`_"
msgstr ""

#: ../Doc/library/httplib.rst:278
msgid ":const:`USE_PROXY`"
msgstr ""

#: ../Doc/library/httplib.rst:278
msgid "``305``"
msgstr ""

#: ../Doc/library/httplib.rst:278
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.3.6 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.3.6>`_"
msgstr ""

#: ../Doc/library/httplib.rst:282
msgid ":const:`TEMPORARY_REDIRECT`"
msgstr ""

#: ../Doc/library/httplib.rst:282
msgid "``307``"
msgstr ""

#: ../Doc/library/httplib.rst:282
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.3.8 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.3.8>`_"
msgstr ""

#: ../Doc/library/httplib.rst:286
msgid ":const:`BAD_REQUEST`"
msgstr ""

#: ../Doc/library/httplib.rst:286
msgid "``400``"
msgstr ""

#: ../Doc/library/httplib.rst:286
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.1 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.1>`_"
msgstr ""

#: ../Doc/library/httplib.rst:290
msgid ":const:`UNAUTHORIZED`"
msgstr ""

#: ../Doc/library/httplib.rst:290
msgid "``401``"
msgstr ""

#: ../Doc/library/httplib.rst:290
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.2 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.2>`_"
msgstr ""

#: ../Doc/library/httplib.rst:294
msgid ":const:`PAYMENT_REQUIRED`"
msgstr ""

#: ../Doc/library/httplib.rst:294
msgid "``402``"
msgstr ""

#: ../Doc/library/httplib.rst:294
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.3 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.3>`_"
msgstr ""

#: ../Doc/library/httplib.rst:298
msgid ":const:`FORBIDDEN`"
msgstr ""

#: ../Doc/library/httplib.rst:298
msgid "``403``"
msgstr ""

#: ../Doc/library/httplib.rst:298
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.4 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.4>`_"
msgstr ""

#: ../Doc/library/httplib.rst:302
msgid ":const:`NOT_FOUND`"
msgstr ""

#: ../Doc/library/httplib.rst:302
msgid "``404``"
msgstr ""

#: ../Doc/library/httplib.rst:302
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.5 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.5>`_"
msgstr ""

#: ../Doc/library/httplib.rst:306
msgid ":const:`METHOD_NOT_ALLOWED`"
msgstr ""

#: ../Doc/library/httplib.rst:306
msgid "``405``"
msgstr ""

#: ../Doc/library/httplib.rst:306
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.6 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.6>`_"
msgstr ""

#: ../Doc/library/httplib.rst:310
msgid ":const:`NOT_ACCEPTABLE`"
msgstr ""

#: ../Doc/library/httplib.rst:310
msgid "``406``"
msgstr ""

#: ../Doc/library/httplib.rst:310
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.7 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.7>`_"
msgstr ""

#: ../Doc/library/httplib.rst:314
msgid ":const:`PROXY_AUTHENTICATION_REQUIRED`"
msgstr ""

#: ../Doc/library/httplib.rst:314
msgid "``407``"
msgstr ""

#: ../Doc/library/httplib.rst:314
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.8 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.8>`_"
msgstr ""

#: ../Doc/library/httplib.rst:318
msgid ":const:`REQUEST_TIMEOUT`"
msgstr ""

#: ../Doc/library/httplib.rst:318
msgid "``408``"
msgstr ""

#: ../Doc/library/httplib.rst:318
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.9 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.9>`_"
msgstr ""

#: ../Doc/library/httplib.rst:322
msgid ":const:`CONFLICT`"
msgstr ""

#: ../Doc/library/httplib.rst:322
msgid "``409``"
msgstr ""

#: ../Doc/library/httplib.rst:322
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.10 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.10>`_"
msgstr ""

#: ../Doc/library/httplib.rst:326
msgid ":const:`GONE`"
msgstr ""

#: ../Doc/library/httplib.rst:326
msgid "``410``"
msgstr ""

#: ../Doc/library/httplib.rst:326
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.11 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.11>`_"
msgstr ""

#: ../Doc/library/httplib.rst:330
msgid ":const:`LENGTH_REQUIRED`"
msgstr ""

#: ../Doc/library/httplib.rst:330
msgid "``411``"
msgstr ""

#: ../Doc/library/httplib.rst:330
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.12 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.12>`_"
msgstr ""

#: ../Doc/library/httplib.rst:334
msgid ":const:`PRECONDITION_FAILED`"
msgstr ""

#: ../Doc/library/httplib.rst:334
msgid "``412``"
msgstr ""

#: ../Doc/library/httplib.rst:334
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.13 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.13>`_"
msgstr ""

#: ../Doc/library/httplib.rst:338
msgid ":const:`REQUEST_ENTITY_TOO_LARGE`"
msgstr ""

#: ../Doc/library/httplib.rst:338
msgid "``413``"
msgstr ""

#: ../Doc/library/httplib.rst:338
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.14 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.14>`_"
msgstr ""

#: ../Doc/library/httplib.rst:342
msgid ":const:`REQUEST_URI_TOO_LONG`"
msgstr ""

#: ../Doc/library/httplib.rst:342
msgid "``414``"
msgstr ""

#: ../Doc/library/httplib.rst:342
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.15 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.15>`_"
msgstr ""

#: ../Doc/library/httplib.rst:346
msgid ":const:`UNSUPPORTED_MEDIA_TYPE`"
msgstr ""

#: ../Doc/library/httplib.rst:346
msgid "``415``"
msgstr ""

#: ../Doc/library/httplib.rst:346
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.16 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.16>`_"
msgstr ""

#: ../Doc/library/httplib.rst:350
msgid ":const:`REQUESTED_RANGE_NOT_SATISFIABLE`"
msgstr ""

#: ../Doc/library/httplib.rst:350
msgid "``416``"
msgstr ""

#: ../Doc/library/httplib.rst:350
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.17 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.17>`_"
msgstr ""

#: ../Doc/library/httplib.rst:354
msgid ":const:`EXPECTATION_FAILED`"
msgstr ""

#: ../Doc/library/httplib.rst:354
msgid "``417``"
msgstr ""

#: ../Doc/library/httplib.rst:354
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.4.18 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.4.18>`_"
msgstr ""

#: ../Doc/library/httplib.rst:358
msgid ":const:`UNPROCESSABLE_ENTITY`"
msgstr ""

#: ../Doc/library/httplib.rst:358
msgid "``422``"
msgstr ""

#: ../Doc/library/httplib.rst:358
msgid ""
"WEBDAV, `RFC 2518, Section 10.3 <http://www.webdav.org/specs/rfc2518."
"html#STATUS_422>`_"
msgstr ""

#: ../Doc/library/httplib.rst:361
msgid ":const:`LOCKED`"
msgstr ""

#: ../Doc/library/httplib.rst:361
msgid "``423``"
msgstr ""

#: ../Doc/library/httplib.rst:361
msgid ""
"WEBDAV `RFC 2518, Section 10.4 <http://www.webdav.org/specs/rfc2518."
"html#STATUS_423>`_"
msgstr ""

#: ../Doc/library/httplib.rst:364
msgid ":const:`FAILED_DEPENDENCY`"
msgstr ""

#: ../Doc/library/httplib.rst:364
msgid "``424``"
msgstr ""

#: ../Doc/library/httplib.rst:364
msgid ""
"WEBDAV, `RFC 2518, Section 10.5 <http://www.webdav.org/specs/rfc2518."
"html#STATUS_424>`_"
msgstr ""

#: ../Doc/library/httplib.rst:367
msgid ":const:`UPGRADE_REQUIRED`"
msgstr ""

#: ../Doc/library/httplib.rst:367
msgid "``426``"
msgstr ""

#: ../Doc/library/httplib.rst:367
msgid "HTTP Upgrade to TLS, :rfc:`2817`, Section 6"
msgstr ""

#: ../Doc/library/httplib.rst:370
msgid ":const:`INTERNAL_SERVER_ERROR`"
msgstr ""

#: ../Doc/library/httplib.rst:370
msgid "``500``"
msgstr ""

#: ../Doc/library/httplib.rst:370
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.5.1 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.5.1>`_"
msgstr ""

#: ../Doc/library/httplib.rst:374
msgid ":const:`NOT_IMPLEMENTED`"
msgstr ""

#: ../Doc/library/httplib.rst:374
msgid "``501``"
msgstr ""

#: ../Doc/library/httplib.rst:374
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.5.2 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.5.2>`_"
msgstr ""

#: ../Doc/library/httplib.rst:378
msgid ":const:`BAD_GATEWAY`"
msgstr ""

#: ../Doc/library/httplib.rst:378
msgid "``502``"
msgstr ""

#: ../Doc/library/httplib.rst:378
msgid ""
"HTTP/1.1 `RFC 2616, Section 10.5.3 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.5.3>`_"
msgstr ""

#: ../Doc/library/httplib.rst:382
msgid ":const:`SERVICE_UNAVAILABLE`"
msgstr ""

#: ../Doc/library/httplib.rst:382
msgid "``503``"
msgstr ""

#: ../Doc/library/httplib.rst:382
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.5.4 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.5.4>`_"
msgstr ""

#: ../Doc/library/httplib.rst:386
msgid ":const:`GATEWAY_TIMEOUT`"
msgstr ""

#: ../Doc/library/httplib.rst:386
msgid "``504``"
msgstr ""

#: ../Doc/library/httplib.rst:386
msgid ""
"HTTP/1.1 `RFC 2616, Section 10.5.5 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.5.5>`_"
msgstr ""

#: ../Doc/library/httplib.rst:390
msgid ":const:`HTTP_VERSION_NOT_SUPPORTED`"
msgstr ""

#: ../Doc/library/httplib.rst:390
msgid "``505``"
msgstr ""

#: ../Doc/library/httplib.rst:390
msgid ""
"HTTP/1.1, `RFC 2616, Section 10.5.6 <http://www.w3.org/Protocols/rfc2616/"
"rfc2616-sec10.html#sec10.5.6>`_"
msgstr ""

#: ../Doc/library/httplib.rst:394
msgid ":const:`INSUFFICIENT_STORAGE`"
msgstr ""

#: ../Doc/library/httplib.rst:394
msgid "``507``"
msgstr ""

#: ../Doc/library/httplib.rst:394
msgid ""
"WEBDAV, `RFC 2518, Section 10.6 <http://www.webdav.org/specs/rfc2518."
"html#STATUS_507>`_"
msgstr ""

#: ../Doc/library/httplib.rst:397
msgid ":const:`NOT_EXTENDED`"
msgstr ""

#: ../Doc/library/httplib.rst:397
msgid "``510``"
msgstr ""

#: ../Doc/library/httplib.rst:397
msgid "An HTTP Extension Framework, :rfc:`2774`, Section 7"
msgstr ""

#: ../Doc/library/httplib.rst:404
msgid "This dictionary maps the HTTP 1.1 status codes to the W3C names."
msgstr ""

# 07645251ae43463192491a03ba23f80e
#: ../Doc/library/httplib.rst:406
msgid "Example: ``httplib.responses[httplib.NOT_FOUND]`` is ``'Not Found'``."
msgstr ""

#: ../Doc/library/httplib.rst:414
msgid "HTTPConnection Objects"
msgstr ""

#: ../Doc/library/httplib.rst:416
msgid ":class:`HTTPConnection` instances have the following methods:"
msgstr ""

# c456cd0e32694cc9957503eb45fd65df
#: ../Doc/library/httplib.rst:421
msgid ""
"This will send a request to the server using the HTTP request method "
"*method* and the selector *url*.  If the *body* argument is present, it "
"should be a string of data to send after the headers are finished. "
"Alternatively, it may be an open file object, in which case the contents of "
"the file is sent; this file object should support ``fileno()`` and ``read()"
"`` methods. The header Content-Length is automatically set to the correct "
"value. The *headers* argument should be a mapping of extra HTTP headers to "
"send with the request."
msgstr ""

#: ../Doc/library/httplib.rst:435
msgid ""
"Should be called after a request is sent to get the response from the "
"server. Returns an :class:`HTTPResponse` instance."
msgstr ""

#: ../Doc/library/httplib.rst:440
msgid ""
"Note that you must have read the whole response before you can send a new "
"request to the server."
msgstr ""

#: ../Doc/library/httplib.rst:446
msgid ""
"Set the debugging level (the amount of debugging output printed). The "
"default debug level is ``0``, meaning no debugging output is printed."
msgstr ""

# 5d1fafc1b0464e87b2e568b0f1d53cae
#: ../Doc/library/httplib.rst:452
msgid ""
"Set the host and the port for HTTP Connect Tunnelling. Normally used when it "
"is required to do HTTPS Conection through a proxy server."
msgstr ""

# deca35f9cd144b9b9cbfc5c2028d7ae5
#: ../Doc/library/httplib.rst:455
msgid ""
"The headers argument should be a mapping of extra HTTP headers to send with "
"the CONNECT request."
msgstr ""

#: ../Doc/library/httplib.rst:463
msgid "Connect to the server specified when the object was created."
msgstr ""

#: ../Doc/library/httplib.rst:468
msgid "Close the connection to the server."
msgstr ""

#: ../Doc/library/httplib.rst:470
msgid ""
"As an alternative to using the :meth:`request` method described above, you "
"can also send your request step by step, by using the four functions below."
msgstr ""

#: ../Doc/library/httplib.rst:476
msgid ""
"This should be the first call after the connection to the server has been "
"made. It sends a line to the server consisting of the *request* string, the "
"*selector* string, and the HTTP version (``HTTP/1.1``).  To disable "
"automatic sending of ``Host:`` or ``Accept-Encoding:`` headers (for example "
"to accept additional content encodings), specify *skip_host* or "
"*skip_accept_encoding* with non-False values."
msgstr ""

#: ../Doc/library/httplib.rst:489
msgid ""
"Send an :rfc:`822`\\ -style header to the server.  It sends a line to the "
"server consisting of the header, a colon and a space, and the first "
"argument.  If more arguments are given, continuation lines are sent, each "
"consisting of a tab and an argument."
msgstr ""

# 9d2b5695e0a74592a1ed4f74c0bc237d
#: ../Doc/library/httplib.rst:497
msgid ""
"Send a blank line to the server, signalling the end of the headers. The "
"optional *message_body* argument can be used to pass a message body "
"associated with the request.  The message body will be sent in the same "
"packet as the message headers if it is string, otherwise it is sent in a "
"separate packet."
msgstr ""

#: ../Doc/library/httplib.rst:509
msgid ""
"Send data to the server.  This should be used directly only after the :meth:"
"`endheaders` method has been called and before :meth:`getresponse` is called."
msgstr ""

#: ../Doc/library/httplib.rst:517
msgid "HTTPResponse Objects"
msgstr ""

# a478416bf50a4101b83377aab707113a
#: ../Doc/library/httplib.rst:519
msgid ""
":class:`HTTPResponse` instances have the following methods and attributes:"
msgstr ""

#: ../Doc/library/httplib.rst:524
msgid "Reads and returns the response body, or up to the next *amt* bytes."
msgstr ""

#: ../Doc/library/httplib.rst:529
msgid ""
"Get the contents of the header *name*, or *default* if there is no matching "
"header."
msgstr ""

#: ../Doc/library/httplib.rst:535
msgid "Return a list of (header, value) tuples."
msgstr ""

# b19e59530d814f3f844549c2ca5e0c35
#: ../Doc/library/httplib.rst:541
msgid "Returns the ``fileno`` of the underlying socket."
msgstr ""

# 1bb4fede0f314bdb9ef65bc47b5fcde4
#: ../Doc/library/httplib.rst:545
msgid "A :class:`mimetools.Message` instance containing the response headers."
msgstr ""

#: ../Doc/library/httplib.rst:550
msgid ""
"HTTP protocol version used by server.  10 for HTTP/1.0, 11 for HTTP/1.1."
msgstr ""

#: ../Doc/library/httplib.rst:555
msgid "Status code returned by server."
msgstr ""

#: ../Doc/library/httplib.rst:560
msgid "Reason phrase returned by server."
msgstr ""

#: ../Doc/library/httplib.rst:568
msgid "Here is an example session that uses the ``GET`` method::"
msgstr ""

#: ../Doc/library/httplib.rst:584
msgid ""
"Here is an example session that uses the ``HEAD`` method.  Note that the "
"``HEAD`` method never returns any data. ::"
msgstr ""

#: ../Doc/library/httplib.rst:599
msgid "Here is an example session that shows how to ``POST`` requests::"
msgstr ""

#: ../Doc/library/i18n.rst:6
msgid "Internationalization"
msgstr ""

#: ../Doc/library/i18n.rst:8
msgid ""
"The modules described in this chapter help you write software that is "
"independent of language and locale by providing mechanisms for selecting a "
"language to be used in  program messages or by tailoring output to match "
"local conventions."
msgstr ""

# b269c5371a7341ab8c0ac01996e055c0
#: ../Doc/library/ic.rst:2
msgid ":mod:`ic` --- Access to the Mac OS X Internet Config"
msgstr ""

# 47c896044cfb4f09a562b5a6c7407a73
#: ../Doc/library/ic.rst:10
msgid ""
"This module provides access to various internet-related preferences set "
"through :program:`System Preferences` or the :program:`Finder`."
msgstr ""

# 1c3851f8c3714bf5adae4eb55d2f1933
#: ../Doc/library/ic.rst:20
msgid ""
"There is a low-level companion module :mod:`icglue` which provides the basic "
"Internet Config access functionality.  This low-level module is not "
"documented, but the docstrings of the routines document the parameters and "
"the routine names are the same as for the Pascal or C API to Internet "
"Config, so the standard IC programmers' documentation can be used if this "
"module is needed."
msgstr ""

# 37482f89135c4fe0bb89554eccffb02e
#: ../Doc/library/ic.rst:26
msgid ""
"The :mod:`ic` module defines the :exc:`error` exception and symbolic names "
"for all error codes Internet Config can produce; see the source for details."
msgstr ""

# 64bd1dad9f884d1586b5085d25cbba8c
#: ../Doc/library/ic.rst:32
msgid "Exception raised on errors in the :mod:`ic` module."
msgstr ""

# e4b6bbddf7dc495a8e08caa3592aa5db
#: ../Doc/library/ic.rst:34
msgid "The :mod:`ic` module defines the following class and function:"
msgstr ""

# 2d6bce3c5e4f4edeb2fdd4f264b3cc2d
#: ../Doc/library/ic.rst:39
msgid ""
"Create an Internet Config object. The signature is a 4-character creator "
"code of the current application (default ``'Pyth'``) which may influence "
"some of ICs settings. The optional *ic* argument is a low-level ``icglue."
"icinstance`` created beforehand, this may be useful if you want to get "
"preferences from a different config file, etc."
msgstr ""

# fef20d4c3cb442f9a68f346cea54613b
#: ../Doc/library/ic.rst:52
msgid ""
"These functions are \"shortcuts\" to the methods of the same name, described "
"below."
msgstr ""

# 244eb5b78ec1424d9de18df2ac4f030f
#: ../Doc/library/ic.rst:57
msgid "IC Objects"
msgstr ""

# c8f817401f7d4cf88568c2b1d001fe78
#: ../Doc/library/ic.rst:59
msgid ""
":class:`IC` objects have a mapping interface, hence to obtain the mail "
"address you simply get ``ic['MailAddress']``. Assignment also works, and "
"changes the option in the configuration file."
msgstr ""

# 9547217c58ee4ae5b4f88eccc4c6d2f2
#: ../Doc/library/ic.rst:63
msgid ""
"The module knows about various datatypes, and converts the internal IC "
"representation to a \"logical\" Python data structure. Running the :mod:`ic` "
"module standalone will run a test program that lists all keys and values in "
"your IC database, this will have to serve as documentation."
msgstr ""

# 7dd96a18b77d4b1891cea79a2a0f0b20
#: ../Doc/library/ic.rst:68
msgid ""
"If the module does not know how to represent the data it returns an instance "
"of the ``ICOpaqueData`` type, with the raw data in its :attr:`data` "
"attribute. Objects of this type are also acceptable values for assignment."
msgstr ""

# 7671a6ff6a364f67897bc9688c5038aa
#: ../Doc/library/ic.rst:72
msgid ""
"Besides the dictionary interface, :class:`IC` objects have the following "
"methods:"
msgstr ""

# 0f836ceabc0a4d0394de8b27041bb965
#: ../Doc/library/ic.rst:78
msgid ""
"Parse the given URL, launch the correct application and pass it the URL. The "
"optional *hint* can be a scheme name such as ``'mailto:'``, in which case "
"incomplete URLs are completed with this scheme.  If *hint* is not provided, "
"incomplete URLs are invalid."
msgstr ""

# cd76187baefa401e8a984773d2a186ee
#: ../Doc/library/ic.rst:86
msgid ""
"Find an URL somewhere in *data* and return start position, end position and "
"the URL. The optional *start* and *end* can be used to limit the search, so "
"for instance if a user clicks in a long text field you can pass the whole "
"text field and the click-position in *start* and this routine will return "
"the whole URL in which the user clicked.  As above, *hint* is an optional "
"scheme used to complete incomplete URLs."
msgstr ""

# 98bd4a0e8c2b48d68ec761f1b0bf86fe
#: ../Doc/library/ic.rst:96
msgid ""
"Return the mapping entry for the given *file*, which can be passed as either "
"a filename or an :func:`FSSpec` result, and which need not exist."
msgstr ""

# e31301df264e43fabffc7d6fa2ea600d
#: ../Doc/library/ic.rst:99
msgid ""
"The mapping entry is returned as a tuple ``(version, type, creator, "
"postcreator, flags, extension, appname, postappname, mimetype, entryname)``, "
"where *version* is the entry version number, *type* is the 4-character "
"filetype, *creator* is the 4-character creator type, *postcreator* is the 4-"
"character creator code of an optional application to post-process the file "
"after downloading, *flags* are various bits specifying whether to transfer "
"in binary or ascii and such, *extension* is the filename extension for this "
"file type, *appname* is the printable name of the application to which this "
"file belongs, *postappname* is the name of the postprocessing application, "
"*mimetype* is the MIME type of this file and *entryname* is the name of this "
"entry."
msgstr ""

# 3d77048a484749aa87352fd91dc7198e
#: ../Doc/library/ic.rst:113
msgid ""
"Return the mapping entry for files with given 4-character *type* and "
"*creator* codes. The optional *filename* may be specified to further help "
"finding the correct entry (if the creator code is ``'????'``, for instance)."
msgstr ""

# 4ce803f39b634a0cad04fb90ab0b8717
#: ../Doc/library/ic.rst:117
msgid "The mapping entry is returned in the same format as for *mapfile*."
msgstr ""

# bf75467b2f184626b32c485ff6de760c
#: ../Doc/library/ic.rst:122
msgid ""
"Given an existing *file*, specified either as a filename or as an :func:"
"`FSSpec` result, set its creator and type correctly based on its extension.  "
"The finder is told about the change, so the finder icon will be updated "
"quickly."
msgstr ""

#: ../Doc/library/idle.rst:4
msgid "IDLE"
msgstr ""

#: ../Doc/library/idle.rst:13
msgid "IDLE is the Python IDE built with the :mod:`tkinter` GUI toolkit."
msgstr ""

#: ../Doc/library/idle.rst:15
msgid "IDLE has the following features:"
msgstr ""

#: ../Doc/library/idle.rst:17
msgid "coded in 100% pure Python, using the :mod:`tkinter` GUI toolkit"
msgstr ""

#: ../Doc/library/idle.rst:19
msgid "cross-platform: works on Windows and Unix"
msgstr ""

#: ../Doc/library/idle.rst:21
msgid ""
"multi-window text editor with multiple undo, Python colorizing and many "
"other features, e.g. smart indent and call tips"
msgstr ""

#: ../Doc/library/idle.rst:24
msgid "Python shell window (a.k.a. interactive interpreter)"
msgstr ""

#: ../Doc/library/idle.rst:26
msgid "debugger (not complete, but you can set breakpoints, view  and step)"
msgstr ""

#: ../Doc/library/idle.rst:30
msgid "Menus"
msgstr ""

#: ../Doc/library/idle.rst:34
msgid "File menu"
msgstr ""

#: ../Doc/library/idle.rst:37
msgid "create a new editing window"
msgstr ""

#: ../Doc/library/idle.rst:40
msgid "open an existing file"
msgstr ""

#: ../Doc/library/idle.rst:43
msgid "open an existing module (searches sys.path)"
msgstr ""

#: ../Doc/library/idle.rst:46
msgid "show classes and methods in current file"
msgstr ""

#: ../Doc/library/idle.rst:49
msgid "show sys.path directories, modules, classes and methods"
msgstr ""

#: ../Doc/library/idle.rst:56
msgid ""
"save current window to the associated file (unsaved windows have a \\* "
"before and after the window title)"
msgstr ""

#: ../Doc/library/idle.rst:60
msgid "save current window to new file, which becomes the associated file"
msgstr ""

#: ../Doc/library/idle.rst:63
msgid ""
"save current window to different file without changing the associated file"
msgstr ""

#: ../Doc/library/idle.rst:66
msgid "close current window (asks to save if unsaved)"
msgstr ""

#: ../Doc/library/idle.rst:69
msgid "close all windows and quit IDLE (asks to save if unsaved)"
msgstr ""

#: ../Doc/library/idle.rst:73
msgid "Edit menu"
msgstr ""

#: ../Doc/library/idle.rst:76
msgid "Undo last change to current window (max 1000 changes)"
msgstr ""

#: ../Doc/library/idle.rst:79
msgid "Redo last undone change to current window"
msgstr ""

#: ../Doc/library/idle.rst:82
msgid "Copy selection into system-wide clipboard; then delete selection"
msgstr ""

#: ../Doc/library/idle.rst:85
msgid "Copy selection into system-wide clipboard"
msgstr ""

#: ../Doc/library/idle.rst:88
msgid "Insert system-wide clipboard into window"
msgstr ""

#: ../Doc/library/idle.rst:91
msgid "Select the entire contents of the edit buffer"
msgstr ""

#: ../Doc/library/idle.rst:94
msgid "Open a search dialog box with many options"
msgstr ""

#: ../Doc/library/idle.rst:97
msgid "Repeat last search"
msgstr ""

#: ../Doc/library/idle.rst:100
msgid "Search for the string in the selection"
msgstr ""

#: ../Doc/library/idle.rst:103
msgid "Open a search dialog box for searching files"
msgstr ""

#: ../Doc/library/idle.rst:106
msgid "Open a search-and-replace dialog box"
msgstr ""

#: ../Doc/library/idle.rst:109
msgid "Ask for a line number and show that line"
msgstr ""

#: ../Doc/library/idle.rst:112
msgid "Shift selected lines right 4 spaces"
msgstr ""

#: ../Doc/library/idle.rst:115
msgid "Shift selected lines left 4 spaces"
msgstr ""

#: ../Doc/library/idle.rst:118
msgid "Insert ## in front of selected lines"
msgstr ""

#: ../Doc/library/idle.rst:121
msgid "Remove leading # or ## from selected lines"
msgstr ""

#: ../Doc/library/idle.rst:124
msgid "Turns *leading* stretches of spaces into tabs"
msgstr ""

#: ../Doc/library/idle.rst:127
msgid "Turn *all* tabs into the right number of spaces"
msgstr ""

#: ../Doc/library/idle.rst:130
msgid ""
"Expand the word you have typed to match another word in the same buffer; "
"repeat to get a different expansion"
msgstr ""

#: ../Doc/library/idle.rst:134
msgid "Reformat the current blank-line-separated paragraph"
msgstr ""

#: ../Doc/library/idle.rst:137
msgid "Import or reload the current module"
msgstr ""

#: ../Doc/library/idle.rst:140
msgid "Execute the current file in the __main__ namespace"
msgstr ""

#: ../Doc/library/idle.rst:148
msgid "Windows menu"
msgstr ""

#: ../Doc/library/idle.rst:151
msgid "toggles the window between normal size (24x80) and maximum height."
msgstr ""

#: ../Doc/library/idle.rst:153
msgid ""
"The rest of this menu lists the names of all open windows; select one to "
"bring it to the foreground (deiconifying it if necessary)."
msgstr ""

#: ../Doc/library/idle.rst:158
msgid "Debug menu (in the Python Shell window only)"
msgstr ""

#: ../Doc/library/idle.rst:161
msgid ""
"look around the insert point for a filename and linenumber, open the file, "
"and show the line."
msgstr ""

#: ../Doc/library/idle.rst:165
msgid "show the stack traceback of the last exception"
msgstr ""

#: ../Doc/library/idle.rst:168
msgid "Run commands in the shell under the debugger"
msgstr ""

#: ../Doc/library/idle.rst:171
msgid "Open stack viewer on traceback"
msgstr ""

#: ../Doc/library/idle.rst:179
msgid "Basic editing and navigation"
msgstr ""

#: ../Doc/library/idle.rst:181
msgid ":kbd:`Backspace` deletes to the left; :kbd:`Del` deletes to the right"
msgstr ""

#: ../Doc/library/idle.rst:183
msgid "Arrow keys and :kbd:`Page Up`/:kbd:`Page Down` to move around"
msgstr ""

#: ../Doc/library/idle.rst:185
msgid ":kbd:`Home`/:kbd:`End` go to begin/end of line"
msgstr ""

#: ../Doc/library/idle.rst:187
msgid ":kbd:`C-Home`/:kbd:`C-End` go to begin/end of file"
msgstr ""

#: ../Doc/library/idle.rst:189
msgid ""
"Some :program:`Emacs` bindings may also work, including :kbd:`C-B`, :kbd:`C-"
"P`, :kbd:`C-A`, :kbd:`C-E`, :kbd:`C-D`, :kbd:`C-L`"
msgstr ""

#: ../Doc/library/idle.rst:194
msgid "Automatic indentation"
msgstr ""

#: ../Doc/library/idle.rst:196
msgid ""
"After a block-opening statement, the next line is indented by 4 spaces (in "
"the Python Shell window by one tab).  After certain keywords (break, return "
"etc.) the next line is dedented.  In leading indentation, :kbd:`Backspace` "
"deletes up to 4 spaces if they are there. :kbd:`Tab` inserts 1-4 spaces (in "
"the Python Shell window one tab). See also the indent/dedent region commands "
"in the edit menu."
msgstr ""

#: ../Doc/library/idle.rst:205
msgid "Python Shell window"
msgstr ""

#: ../Doc/library/idle.rst:207
msgid ":kbd:`C-C` interrupts executing command"
msgstr ""

#: ../Doc/library/idle.rst:209
msgid ""
":kbd:`C-D` sends end-of-file; closes window if typed at a ``>>>`` prompt"
msgstr ""

#: ../Doc/library/idle.rst:211
msgid ":kbd:`Alt-p` retrieves previous command matching what you have typed"
msgstr ""

#: ../Doc/library/idle.rst:213
msgid ":kbd:`Alt-n` retrieves next"
msgstr ""

#: ../Doc/library/idle.rst:215
msgid ":kbd:`Return` while on any previous command retrieves that command"
msgstr ""

#: ../Doc/library/idle.rst:217
msgid ":kbd:`Alt-/` (Expand word) is also useful here"
msgstr ""

#: ../Doc/library/idle.rst:223
msgid "Syntax colors"
msgstr ""

#: ../Doc/library/idle.rst:225
msgid ""
"The coloring is applied in a background \"thread,\" so you may occasionally "
"see uncolorized text.  To change the color scheme, edit the ``[Colors]`` "
"section in :file:`config.txt`."
msgstr ""

#: ../Doc/library/idle.rst:231
msgid "orange"
msgstr ""

#: ../Doc/library/idle.rst:234
msgid "green"
msgstr ""

#: ../Doc/library/idle.rst:237
msgid "red"
msgstr ""

#: ../Doc/library/idle.rst:240 ../Doc/library/idle.rst:247
msgid "blue"
msgstr ""

#: ../Doc/library/idle.rst:244
msgid "brown"
msgstr ""

#: ../Doc/library/idle.rst:250
msgid "dark green"
msgstr ""

#: ../Doc/library/idle.rst:253
msgid "black"
msgstr ""

#: ../Doc/library/idle.rst:257
msgid "Startup"
msgstr ""

#: ../Doc/library/idle.rst:259
msgid ""
"Upon startup with the ``-s`` option, IDLE will execute the file referenced "
"by the environment variables :envvar:`IDLESTARTUP` or :envvar:"
"`PYTHONSTARTUP`. Idle first checks for ``IDLESTARTUP``; if ``IDLESTARTUP`` "
"is present the file referenced is run.  If ``IDLESTARTUP`` is not present, "
"Idle checks for ``PYTHONSTARTUP``.  Files referenced by these environment "
"variables are convenient places to store functions that are used frequently "
"from the Idle shell, or for executing import statements to import common "
"modules."
msgstr ""

#: ../Doc/library/idle.rst:267
msgid ""
"In addition, ``Tk`` also loads a startup file if it is present.  Note that "
"the Tk file is loaded unconditionally.  This additional file is ``.Idle.py`` "
"and is looked for in the user's home directory.  Statements in this file "
"will be executed in the Tk namespace, so this file is not useful for "
"importing functions to be used from Idle's Python shell."
msgstr ""

#: ../Doc/library/idle.rst:275
msgid "Command line usage"
msgstr ""

#: ../Doc/library/idle.rst:287
msgid "If there are arguments:"
msgstr ""

# e17a3e6cb77f48dbaa3c82e9efd6968f
#: ../Doc/library/idle.rst:289
msgid ""
"If ``-e`` is used, arguments are files opened for editing and ``sys.argv`` "
"reflects the arguments passed to IDLE itself."
msgstr ""

# 57f8e54785e344efad5a213c2ede56ec
#: ../Doc/library/idle.rst:292
msgid ""
"Otherwise, if ``-c`` is used, all arguments are placed in ``sys.argv[1:...]"
"``, with ``sys.argv[0]`` set to ``'-c'``."
msgstr ""

# 91ed004d077241778efc99d566831f5e
#: ../Doc/library/idle.rst:295
msgid ""
"Otherwise, if neither ``-e`` nor ``-c`` is used, the first argument is a "
"script which is executed with the remaining arguments in ``sys.argv[1:...]"
"``  and ``sys.argv[0]`` set to the script name.  If the script name is '-', "
"no script is executed but an interactive Python session is started; the "
"arguments are still available in ``sys.argv``."
msgstr ""

# b343fae213594960967246a7cf67649f
#: ../Doc/library/imageop.rst:3
msgid ":mod:`imageop` --- Manipulate raw image data"
msgstr ""

# ca70b7cb96ff4df3858861efd7af0d7a
#: ../Doc/library/imageop.rst:12
msgid ""
"The :mod:`imageop` module contains some useful operations on images. It "
"operates on images consisting of 8 or 32 bit pixels stored in Python "
"strings.  This is the same format as used by :func:`gl.lrectwrite` and the :"
"mod:`imgfile` module."
msgstr ""

# bef0a6f16db64106a30a6b9c75626577
#: ../Doc/library/imageop.rst:21
msgid ""
"This exception is raised on all errors, such as unknown number of bits per "
"pixel, etc."
msgstr ""

# f006b08be2894574a995e9de5ed6c14e
#: ../Doc/library/imageop.rst:27
msgid ""
"Return the selected part of *image*, which should be *width* by *height* in "
"size and consist of pixels of *psize* bytes. *x0*, *y0*, *x1* and *y1* are "
"like the :func:`gl.lrectread` parameters, i.e. the boundary is included in "
"the new image. The new boundaries need not be inside the picture.  Pixels "
"that fall outside the old image will have their value set to zero.  If *x0* "
"is bigger than *x1* the new image is mirrored.  The same holds for the y "
"coordinates."
msgstr ""

# 9d2c148e1d7c4d4b811b0f5fa76d6094
#: ../Doc/library/imageop.rst:37
msgid ""
"Return *image* scaled to size *newwidth* by *newheight*. No interpolation is "
"done, scaling is done by simple-minded pixel duplication or removal.  "
"Therefore, computer-generated images or dithered images will not look nice "
"after scaling."
msgstr ""

# f55b7226a2884927b98c7f1f90195577
#: ../Doc/library/imageop.rst:44
msgid ""
"Run a vertical low-pass filter over an image.  It does so by computing each "
"destination pixel as the average of two vertically-aligned source pixels.  "
"The main use of this routine is to forestall excessive flicker if the image "
"is displayed on a video device that uses interlacing, hence the name."
msgstr ""

# a1757bf7c9b442119f4cea645a275076
#: ../Doc/library/imageop.rst:52
msgid ""
"Convert a 8-bit deep greyscale image to a 1-bit deep image by thresholding "
"all the pixels.  The resulting image is tightly packed and is probably only "
"useful as an argument to :func:`mono2grey`."
msgstr ""

# 67ae5c2805de4f3288881a1baf03a7b7
#: ../Doc/library/imageop.rst:59
msgid ""
"Convert an 8-bit greyscale image to a 1-bit monochrome image using a (simple-"
"minded) dithering algorithm."
msgstr ""

# 34c89b13a4dd4efe973cee25882fd15c
#: ../Doc/library/imageop.rst:65
msgid ""
"Convert a 1-bit monochrome image to an 8 bit greyscale or color image. All "
"pixels that are zero-valued on input get value *p0* on output and all one-"
"value input pixels get value *p1* on output.  To convert a monochrome black-"
"and-white image to greyscale pass the values ``0`` and ``255`` respectively."
msgstr ""

# c1adf2358cea40a8a9fdc71d9f43fb1c
#: ../Doc/library/imageop.rst:73
msgid ""
"Convert an 8-bit greyscale image to a 4-bit greyscale image without "
"dithering."
msgstr ""

# 7dbb1cf891ac4dea889b401b06394c65
#: ../Doc/library/imageop.rst:78
msgid ""
"Convert an 8-bit greyscale image to a 2-bit greyscale image without "
"dithering."
msgstr ""

# 8f6aac556a204212a5c6f2e7a794221a
#: ../Doc/library/imageop.rst:83
msgid ""
"Convert an 8-bit greyscale image to a 2-bit greyscale image with dithering.  "
"As for :func:`dither2mono`, the dithering algorithm is currently very simple."
msgstr ""

# 9e1eb2e4dee54b628556d2df751295b4
#: ../Doc/library/imageop.rst:89
msgid "Convert a 4-bit greyscale image to an 8-bit greyscale image."
msgstr ""

# 1962479f5e8f493598b409ca755263a7
#: ../Doc/library/imageop.rst:94
msgid "Convert a 2-bit greyscale image to an 8-bit greyscale image."
msgstr ""

# 042197b50ae641debf3704d8949d3187
#: ../Doc/library/imageop.rst:99
msgid ""
"If set to 0, the functions in this module use a non-backward compatible way "
"of representing multi-byte pixels on little-endian systems.  The SGI for "
"which this module was originally written is a big-endian system, so setting "
"this variable will have no effect. However, the code wasn't originally "
"intended to run on anything else, so it made assumptions about byte order "
"which are not universal.  Setting this variable to 0 will cause the byte "
"order to be reversed on little-endian systems, so that it then is the same "
"as on big-endian systems."
msgstr ""

#: ../Doc/library/imaplib.rst:2
msgid ":mod:`imaplib` --- IMAP4 protocol client"
msgstr ""

# 3b0b3308dffb475ab08b830f74a8c468
#: ../Doc/library/imaplib.rst:19
msgid "**Source code:** :source:`Lib/imaplib.py`"
msgstr ""

#: ../Doc/library/imaplib.rst:23
msgid ""
"This module defines three classes, :class:`IMAP4`, :class:`IMAP4_SSL` and :"
"class:`IMAP4_stream`, which encapsulate a connection to an IMAP4 server and "
"implement a large subset of the IMAP4rev1 client protocol as defined in :rfc:"
"`2060`. It is backward compatible with IMAP4 (:rfc:`1730`) servers, but note "
"that the ``STATUS`` command is not supported in IMAP4."
msgstr ""

#: ../Doc/library/imaplib.rst:29
msgid ""
"Three classes are provided by the :mod:`imaplib` module, :class:`IMAP4` is "
"the base class:"
msgstr ""

#: ../Doc/library/imaplib.rst:35
msgid ""
"This class implements the actual IMAP4 protocol.  The connection is created "
"and protocol version (IMAP4 or IMAP4rev1) is determined when the instance is "
"initialized. If *host* is not specified, ``''`` (the local host) is used. If "
"*port* is omitted, the standard IMAP4 port (143) is used."
msgstr ""

#: ../Doc/library/imaplib.rst:40
msgid "Three exceptions are defined as attributes of the :class:`IMAP4` class:"
msgstr ""

#: ../Doc/library/imaplib.rst:45
msgid ""
"Exception raised on any errors.  The reason for the exception is passed to "
"the constructor as a string."
msgstr ""

#: ../Doc/library/imaplib.rst:51
msgid ""
"IMAP4 server errors cause this exception to be raised.  This is a sub-class "
"of :exc:`IMAP4.error`.  Note that closing the instance and instantiating a "
"new one will usually allow recovery from this exception."
msgstr ""

#: ../Doc/library/imaplib.rst:58
msgid ""
"This exception is raised when a writable mailbox has its status changed by "
"the server.  This is a sub-class of :exc:`IMAP4.error`.  Some other client "
"now has write permission, and the mailbox will need to be re-opened to re-"
"obtain write permission."
msgstr ""

#: ../Doc/library/imaplib.rst:63
msgid "There's also a subclass for secure connections:"
msgstr ""

#: ../Doc/library/imaplib.rst:68
msgid ""
"This is a subclass derived from :class:`IMAP4` that connects over an SSL "
"encrypted socket (to use this class you need a socket module that was "
"compiled with SSL support).  If *host* is not specified, ``''`` (the local "
"host) is used. If *port* is omitted, the standard IMAP4-over-SSL port (993) "
"is used.  *keyfile* and *certfile* are also optional - they can contain a "
"PEM formatted private key and certificate chain file for the SSL connection."
msgstr ""

#: ../Doc/library/imaplib.rst:75
msgid "The second subclass allows for connections created by a child process:"
msgstr ""

# 4273043e5d2a48d1998b549cb0a7f6f0
#: ../Doc/library/imaplib.rst:80
msgid ""
"This is a subclass derived from :class:`IMAP4` that connects to the ``stdin/"
"stdout`` file descriptors created by passing *command* to ``os.popen2()``."
msgstr ""

#: ../Doc/library/imaplib.rst:86
msgid "The following utility functions are defined:"
msgstr ""

# 07751690cbcc4e2192187b21a69a912c
#: ../Doc/library/imaplib.rst:91
msgid ""
"Parse an IMAP4 ``INTERNALDATE`` string and return corresponding local time.  "
"The return value is a :class:`time.struct_time` instance or None if the "
"string has wrong format."
msgstr ""

#: ../Doc/library/imaplib.rst:97
msgid ""
"Converts an integer into a string representation using characters from the "
"set [``A`` .. ``P``]."
msgstr ""

#: ../Doc/library/imaplib.rst:103
msgid "Converts an IMAP4 ``FLAGS`` response to a tuple of individual flags."
msgstr ""

# d2f15dc33a9d465b84cf454f9ed22e8e
#: ../Doc/library/imaplib.rst:108
msgid ""
"Convert *date_time* to an IMAP4 ``INTERNALDATE`` representation.  The return "
"value is a string in the form: ``\"DD-Mmm-YYYY HH:MM:SS +HHMM\"`` (including "
"double-quotes).  The *date_time* argument can be a number (int or float) "
"representing seconds since epoch (as returned by :func:`time.time`), a 9-"
"tuple representing local time (as returned by :func:`time.localtime`), or a "
"double-quoted string.  In the last case, it is assumed to already be in the "
"correct format."
msgstr ""

#: ../Doc/library/imaplib.rst:116
msgid ""
"Note that IMAP4 message numbers change as the mailbox changes; in "
"particular, after an ``EXPUNGE`` command performs deletions the remaining "
"messages are renumbered. So it is highly advisable to use UIDs instead, with "
"the UID command."
msgstr ""

#: ../Doc/library/imaplib.rst:120 ../Doc/library/poplib.rst:198
msgid ""
"At the end of the module, there is a test section that contains a more "
"extensive example of usage."
msgstr ""

#: ../Doc/library/imaplib.rst:126
msgid ""
"Documents describing the protocol, and sources and binaries  for servers "
"implementing it, can all be found at the University of Washington's *IMAP "
"Information Center* (http://www.washington.edu/imap/)."
msgstr ""

#: ../Doc/library/imaplib.rst:134
msgid "IMAP4 Objects"
msgstr ""

#: ../Doc/library/imaplib.rst:136
msgid ""
"All IMAP4rev1 commands are represented by methods of the same name, either "
"upper-case or lower-case."
msgstr ""

#: ../Doc/library/imaplib.rst:139
msgid ""
"All arguments to commands are converted to strings, except for "
"``AUTHENTICATE``, and the last argument to ``APPEND`` which is passed as an "
"IMAP4 literal.  If necessary (the string contains IMAP4 protocol-sensitive "
"characters and isn't enclosed with either parentheses or double quotes) each "
"string is quoted. However, the *password* argument to the ``LOGIN`` command "
"is always quoted. If you want to avoid having an argument string quoted (eg: "
"the *flags* argument to ``STORE``) then enclose the string in parentheses "
"(eg: ``r'(\\Deleted)'``)."
msgstr ""

#: ../Doc/library/imaplib.rst:147
msgid ""
"Each command returns a tuple: ``(type, [data, ...])`` where *type* is "
"usually ``'OK'`` or ``'NO'``, and *data* is either the text from the command "
"response, or mandated results from the command. Each *data* is either a "
"string, or a tuple. If a tuple, then the first part is the header of the "
"response, and the second part contains the data (ie: 'literal' value)."
msgstr ""

#: ../Doc/library/imaplib.rst:153
msgid ""
"The *message_set* options to commands below is a string specifying one or "
"more messages to be acted upon.  It may be a simple message number "
"(``'1'``), a range of message numbers (``'2:4'``), or a group of non-"
"contiguous ranges separated by commas (``'1:3,6:9'``).  A range can contain "
"an asterisk to indicate an infinite upper bound (``'3:*'``)."
msgstr ""

#: ../Doc/library/imaplib.rst:159
msgid "An :class:`IMAP4` instance has the following methods:"
msgstr ""

#: ../Doc/library/imaplib.rst:164
msgid "Append *message* to named mailbox."
msgstr ""

#: ../Doc/library/imaplib.rst:169
msgid "Authenticate command --- requires response processing."
msgstr ""

#: ../Doc/library/imaplib.rst:171
msgid ""
"*mechanism* specifies which authentication mechanism is to be used - it "
"should appear in the instance variable ``capabilities`` in the form "
"``AUTH=mechanism``."
msgstr ""

#: ../Doc/library/imaplib.rst:174
msgid "*authobject* must be a callable object::"
msgstr ""

#: ../Doc/library/imaplib.rst:178
msgid ""
"It will be called to process server continuation responses. It should return "
"``data`` that will be encoded and sent to server. It should return ``None`` "
"if the client abort response ``*`` should be sent instead."
msgstr ""

#: ../Doc/library/imaplib.rst:185
msgid "Checkpoint mailbox on server."
msgstr ""

#: ../Doc/library/imaplib.rst:190
msgid ""
"Close currently selected mailbox. Deleted messages are removed from writable "
"mailbox. This is the recommended command before ``LOGOUT``."
msgstr ""

#: ../Doc/library/imaplib.rst:196
msgid "Copy *message_set* messages onto end of *new_mailbox*."
msgstr ""

#: ../Doc/library/imaplib.rst:201
msgid "Create new mailbox named *mailbox*."
msgstr ""

#: ../Doc/library/imaplib.rst:206
msgid "Delete old mailbox named *mailbox*."
msgstr ""

#: ../Doc/library/imaplib.rst:211
msgid "Delete the ACLs (remove any rights) set for who on mailbox."
msgstr ""

#: ../Doc/library/imaplib.rst:218
msgid ""
"Permanently remove deleted items from selected mailbox. Generates an "
"``EXPUNGE`` response for each deleted message. Returned data contains a list "
"of ``EXPUNGE`` message numbers in order received."
msgstr ""

#: ../Doc/library/imaplib.rst:225
msgid ""
"Fetch (parts of) messages.  *message_parts* should be a string of message "
"part names enclosed within parentheses, eg: ``\"(UID BODY[TEXT])\"``.  "
"Returned data are tuples of message part envelope and data."
msgstr ""

#: ../Doc/library/imaplib.rst:232
msgid ""
"Get the ``ACL``\\ s for *mailbox*. The method is non-standard, but is "
"supported by the ``Cyrus`` server."
msgstr ""

#: ../Doc/library/imaplib.rst:238
msgid ""
"Retrieve the specified ``ANNOTATION``\\ s for *mailbox*. The method is non-"
"standard, but is supported by the ``Cyrus`` server."
msgstr ""

#: ../Doc/library/imaplib.rst:246
msgid ""
"Get the ``quota`` *root*'s resource usage and limits. This method is part of "
"the IMAP4 QUOTA extension defined in rfc2087."
msgstr ""

#: ../Doc/library/imaplib.rst:254
msgid ""
"Get the list of ``quota`` ``roots`` for the named *mailbox*. This method is "
"part of the IMAP4 QUOTA extension defined in rfc2087."
msgstr ""

#: ../Doc/library/imaplib.rst:262
msgid ""
"List mailbox names in *directory* matching *pattern*.  *directory* defaults "
"to the top-level mail folder, and *pattern* defaults to match anything.  "
"Returned data contains a list of ``LIST`` responses."
msgstr ""

#: ../Doc/library/imaplib.rst:269
msgid ""
"Identify the client using a plaintext password. The *password* will be "
"quoted."
msgstr ""

#: ../Doc/library/imaplib.rst:274
msgid ""
"Force use of ``CRAM-MD5`` authentication when identifying the client to "
"protect the password.  Will only work if the server ``CAPABILITY`` response "
"includes the phrase ``AUTH=CRAM-MD5``."
msgstr ""

#: ../Doc/library/imaplib.rst:283
msgid "Shutdown connection to server. Returns server ``BYE`` response."
msgstr ""

#: ../Doc/library/imaplib.rst:288
msgid ""
"List subscribed mailbox names in directory matching pattern. *directory* "
"defaults to the top level directory and *pattern* defaults to match any "
"mailbox. Returned data are tuples of message part envelope and data."
msgstr ""

#: ../Doc/library/imaplib.rst:295
msgid "Show my ACLs for a mailbox (i.e. the rights that I have on mailbox)."
msgstr ""

#: ../Doc/library/imaplib.rst:302
msgid "Returns IMAP namespaces as defined in RFC2342."
msgstr ""

#: ../Doc/library/imaplib.rst:309
msgid "Send ``NOOP`` to server."
msgstr ""

# 8a00d72396954b10a2099e9d148b6601
#: ../Doc/library/imaplib.rst:314
msgid ""
"Opens socket to *port* at *host*.  This method is implicitly called by the :"
"class:`IMAP4` constructor.  The connection objects established by this "
"method will be used in the ``read``, ``readline``, ``send``, and "
"``shutdown`` methods.  You may override this method."
msgstr ""

#: ../Doc/library/imaplib.rst:322
msgid ""
"Fetch truncated part of a message. Returned data is a tuple of message part "
"envelope and data."
msgstr ""

#: ../Doc/library/imaplib.rst:328
msgid ""
"Assume authentication as *user*. Allows an authorised administrator to proxy "
"into any user's mailbox."
msgstr ""

#: ../Doc/library/imaplib.rst:336
msgid ""
"Reads *size* bytes from the remote server. You may override this method."
msgstr ""

#: ../Doc/library/imaplib.rst:341
msgid "Reads one line from the remote server. You may override this method."
msgstr ""

#: ../Doc/library/imaplib.rst:346
msgid ""
"Prompt server for an update. Returned data is ``None`` if no new messages, "
"else value of ``RECENT`` response."
msgstr ""

#: ../Doc/library/imaplib.rst:352
msgid "Rename mailbox named *oldmailbox* to *newmailbox*."
msgstr ""

#: ../Doc/library/imaplib.rst:357
msgid ""
"Return data for response *code* if received, or ``None``. Returns the given "
"code, instead of the usual type."
msgstr ""

#: ../Doc/library/imaplib.rst:363
msgid ""
"Search mailbox for matching messages.  *charset* may be ``None``, in which "
"case no ``CHARSET`` will be specified in the request to the server.  The "
"IMAP protocol requires that at least one criterion be specified; an "
"exception will be raised when the server returns an error."
msgstr ""

#: ../Doc/library/imaplib.rst:379
msgid ""
"Select a mailbox. Returned data is the count of messages in *mailbox* "
"(``EXISTS`` response).  The default *mailbox* is ``'INBOX'``.  If the "
"*readonly* flag is set, modifications to the mailbox are not allowed."
msgstr ""

#: ../Doc/library/imaplib.rst:386
msgid "Sends ``data`` to the remote server. You may override this method."
msgstr ""

#: ../Doc/library/imaplib.rst:391
msgid ""
"Set an ``ACL`` for *mailbox*. The method is non-standard, but is supported "
"by the ``Cyrus`` server."
msgstr ""

#: ../Doc/library/imaplib.rst:397
msgid ""
"Set ``ANNOTATION``\\ s for *mailbox*. The method is non-standard, but is "
"supported by the ``Cyrus`` server."
msgstr ""

#: ../Doc/library/imaplib.rst:405
msgid ""
"Set the ``quota`` *root*'s resource *limits*. This method is part of the "
"IMAP4 QUOTA extension defined in rfc2087."
msgstr ""

# 3364361a896f482c93d49eca190a32be
#: ../Doc/library/imaplib.rst:413
msgid ""
"Close connection established in ``open``.  This method is implicitly called "
"by :meth:`IMAP4.logout`.  You may override this method."
msgstr ""

#: ../Doc/library/imaplib.rst:419
msgid "Returns socket instance used to connect to server."
msgstr ""

#: ../Doc/library/imaplib.rst:424
msgid ""
"The ``sort`` command is a variant of ``search`` with sorting semantics for "
"the results.  Returned data contains a space separated list of matching "
"message numbers."
msgstr ""

#: ../Doc/library/imaplib.rst:428
msgid ""
"Sort has two arguments before the *search_criterion* argument(s); a "
"parenthesized list of *sort_criteria*, and the searching *charset*.  Note "
"that unlike ``search``, the searching *charset* argument is mandatory.  "
"There is also a ``uid sort`` command which corresponds to ``sort`` the way "
"that ``uid search`` corresponds to ``search``.  The ``sort`` command first "
"searches the mailbox for messages that match the given searching criteria "
"using the charset argument for the interpretation of strings in the "
"searching criteria.  It then returns the numbers of matching messages."
msgstr ""

#: ../Doc/library/imaplib.rst:437 ../Doc/library/imaplib.rst:482
msgid "This is an ``IMAP4rev1`` extension command."
msgstr ""

#: ../Doc/library/imaplib.rst:442
msgid "Request named status conditions for *mailbox*."
msgstr ""

#: ../Doc/library/imaplib.rst:447
msgid ""
"Alters flag dispositions for messages in mailbox.  *command* is specified by "
"section 6.4.6 of :rfc:`2060` as being one of \"FLAGS\", \"+FLAGS\", or \"-"
"FLAGS\", optionally with a suffix of \".SILENT\"."
msgstr ""

#: ../Doc/library/imaplib.rst:451
msgid "For example, to set the delete flag on all messages::"
msgstr ""

#: ../Doc/library/imaplib.rst:461
msgid "Subscribe to new mailbox."
msgstr ""

#: ../Doc/library/imaplib.rst:466
msgid ""
"The ``thread`` command is a variant of ``search`` with threading semantics "
"for the results.  Returned data contains a space separated list of thread "
"members."
msgstr ""

#: ../Doc/library/imaplib.rst:469
msgid ""
"Thread members consist of zero or more messages numbers, delimited by "
"spaces, indicating successive parent and child."
msgstr ""

#: ../Doc/library/imaplib.rst:472
msgid ""
"Thread has two arguments before the *search_criterion* argument(s); a "
"*threading_algorithm*, and the searching *charset*.  Note that unlike "
"``search``, the searching *charset* argument is mandatory.  There is also a "
"``uid thread`` command which corresponds to ``thread`` the way that ``uid "
"search`` corresponds to ``search``.  The ``thread`` command first searches "
"the mailbox for messages that match the given searching criteria using the "
"charset argument for the interpretation of strings in the searching "
"criteria. It then returns the matching messages threaded according to the "
"specified threading algorithm."
msgstr ""

#: ../Doc/library/imaplib.rst:489
msgid ""
"Execute command args with messages identified by UID, rather than message "
"number.  Returns response appropriate to command.  At least one argument "
"must be supplied; if none are provided, the server will return an error and "
"an exception will be raised."
msgstr ""

#: ../Doc/library/imaplib.rst:497
msgid "Unsubscribe from old mailbox."
msgstr ""

#: ../Doc/library/imaplib.rst:502
msgid ""
"Allow simple extension commands notified by server in ``CAPABILITY`` "
"response."
msgstr ""

# e92a6e7194f644739ba8a86ebe0a11f9
#: ../Doc/library/imaplib.rst:504
msgid "Instances of :class:`IMAP4_SSL` have just one additional method:"
msgstr ""

# e66856257c2d49d2bf444f10aa773457
#: ../Doc/library/imaplib.rst:509
msgid ""
"Returns SSLObject instance used for the secure connection with the server."
msgstr ""

#: ../Doc/library/imaplib.rst:511
msgid "The following attributes are defined on instances of :class:`IMAP4`:"
msgstr ""

#: ../Doc/library/imaplib.rst:516
msgid ""
"The most recent supported protocol in the ``CAPABILITY`` response from the "
"server."
msgstr ""

#: ../Doc/library/imaplib.rst:522
msgid ""
"Integer value to control debugging output.  The initialize value is taken "
"from the module variable ``Debug``.  Values greater than three trace each "
"command."
msgstr ""

#: ../Doc/library/imaplib.rst:529
msgid "IMAP4 Example"
msgstr ""

#: ../Doc/library/imaplib.rst:531 ../Doc/library/poplib.rst:185
msgid ""
"Here is a minimal example (without error checking) that opens a mailbox and "
"retrieves and prints all messages::"
msgstr ""

# 4c8ed15e1d854395bdc0759739e3c685
#: ../Doc/library/imgfile.rst:3
msgid ":mod:`imgfile` --- Support for SGI imglib files"
msgstr ""

# 785dfa9597dd4fb5817d36f9db681519
#: ../Doc/library/imgfile.rst:15
msgid ""
"The :mod:`imgfile` module allows Python programs to access SGI imglib image "
"files (also known as :file:`.rgb` files).  The module is far from complete, "
"but is provided anyway since the functionality that there is enough in some "
"cases. Currently, colormap files are not supported."
msgstr ""

# aa42be6e5a2549258c3c4cd40a6ce330
#: ../Doc/library/imgfile.rst:25
msgid ""
"This exception is raised on all errors, such as unsupported file type, etc."
msgstr ""

# f6d25fcebf6a4c5989145897d0d3a174
#: ../Doc/library/imgfile.rst:30
msgid ""
"This function returns a tuple ``(x, y, z)`` where *x* and *y* are the size "
"of the image in pixels and *z* is the number of bytes per pixel. Only 3 byte "
"RGB pixels and 1 byte greyscale pixels are currently supported."
msgstr ""

# 0f944b34b24d49c38902c35a0f813da1
#: ../Doc/library/imgfile.rst:37
msgid ""
"This function reads and decodes the image on the specified file, and returns "
"it as a Python string. The string has either 1 byte greyscale pixels or 4 "
"byte RGBA pixels. The bottom left pixel is the first in the string. This "
"format is suitable to pass to :func:`gl.lrectwrite`, for instance."
msgstr ""

# 07143d3d571e4fb1aecdbc6f5fc0aa10
#: ../Doc/library/imgfile.rst:45
msgid ""
"This function is identical to read but it returns an image that is scaled to "
"the given *x* and *y* sizes. If the *filter* and *blur* parameters are "
"omitted scaling is done by simply dropping or duplicating pixels, so the "
"result will be less than perfect, especially for computer-generated images."
msgstr ""

# 7eb8ff2b60d549319b872fc3fbeab3f3
#: ../Doc/library/imgfile.rst:50
msgid ""
"Alternatively, you can specify a filter to use to smooth the image after "
"scaling. The filter forms supported are ``'impulse'``, ``'box'``, "
"``'triangle'``, ``'quadratic'`` and ``'gaussian'``. If a filter is specified "
"*blur* is an optional parameter specifying the blurriness of the filter. It "
"defaults to ``1.0``."
msgstr ""

# 64797ca56ca64ab990ecdf949cc76d5d
#: ../Doc/library/imgfile.rst:56
msgid ""
":func:`readscaled` makes no attempt to keep the aspect ratio correct, so "
"that is the users' responsibility."
msgstr ""

# c0679c31fe6e45568d7126e1de889431
#: ../Doc/library/imgfile.rst:62
msgid ""
"This function sets a global flag which defines whether the scan lines of the "
"image are read or written from bottom to top (flag is zero, compatible with "
"SGI GL) or from top to bottom(flag is one, compatible with X).  The default "
"is zero."
msgstr ""

# 39b9524874f64813954bc4db34d29046
#: ../Doc/library/imgfile.rst:69
msgid ""
"This function writes the RGB or greyscale data in *data* to image file "
"*file*. *x* and *y* give the size of the image, *z* is 1 for 1 byte "
"greyscale images or 3 for RGB images (which are stored as 4 byte values of "
"which only the lower three bytes are used). These are the formats returned "
"by :func:`gl.lrectread`."
msgstr ""

#: ../Doc/library/imghdr.rst:2
msgid ":mod:`imghdr` --- Determine the type of an image"
msgstr ""

# c11d1dd650fd4797a1858722f23a2274
#: ../Doc/library/imghdr.rst:7
msgid "**Source code:** :source:`Lib/imghdr.py`"
msgstr ""

#: ../Doc/library/imghdr.rst:11
msgid ""
"The :mod:`imghdr` module determines the type of image contained in a file or "
"byte stream."
msgstr ""

#: ../Doc/library/imghdr.rst:14
msgid "The :mod:`imghdr` module defines the following function:"
msgstr ""

#: ../Doc/library/imghdr.rst:19
msgid ""
"Tests the image data contained in the file named by *filename*, and returns "
"a string describing the image type.  If optional *h* is provided, the "
"*filename* is ignored and *h* is assumed to contain the byte stream to test."
msgstr ""

#: ../Doc/library/imghdr.rst:23
msgid ""
"The following image types are recognized, as listed below with the return "
"value from :func:`what`:"
msgstr ""

#: ../Doc/library/imghdr.rst:27
msgid "Image format"
msgstr ""

#: ../Doc/library/imghdr.rst:29
msgid "``'rgb'``"
msgstr ""

#: ../Doc/library/imghdr.rst:29
msgid "SGI ImgLib Files"
msgstr ""

#: ../Doc/library/imghdr.rst:31
msgid "``'gif'``"
msgstr ""

#: ../Doc/library/imghdr.rst:31
msgid "GIF 87a and 89a Files"
msgstr ""

#: ../Doc/library/imghdr.rst:33
msgid "``'pbm'``"
msgstr ""

#: ../Doc/library/imghdr.rst:33
msgid "Portable Bitmap Files"
msgstr ""

#: ../Doc/library/imghdr.rst:35
msgid "``'pgm'``"
msgstr ""

#: ../Doc/library/imghdr.rst:35
msgid "Portable Graymap Files"
msgstr ""

#: ../Doc/library/imghdr.rst:37
msgid "``'ppm'``"
msgstr ""

#: ../Doc/library/imghdr.rst:37
msgid "Portable Pixmap Files"
msgstr ""

#: ../Doc/library/imghdr.rst:39
msgid "``'tiff'``"
msgstr ""

#: ../Doc/library/imghdr.rst:39
msgid "TIFF Files"
msgstr ""

#: ../Doc/library/imghdr.rst:41
msgid "``'rast'``"
msgstr ""

#: ../Doc/library/imghdr.rst:41
msgid "Sun Raster Files"
msgstr ""

#: ../Doc/library/imghdr.rst:43
msgid "``'xbm'``"
msgstr ""

#: ../Doc/library/imghdr.rst:43
msgid "X Bitmap Files"
msgstr ""

#: ../Doc/library/imghdr.rst:45
msgid "``'jpeg'``"
msgstr ""

#: ../Doc/library/imghdr.rst:45
msgid "JPEG data in JFIF or Exif formats"
msgstr ""

#: ../Doc/library/imghdr.rst:47
msgid "``'bmp'``"
msgstr ""

#: ../Doc/library/imghdr.rst:47
msgid "BMP files"
msgstr ""

#: ../Doc/library/imghdr.rst:49
msgid "``'png'``"
msgstr ""

#: ../Doc/library/imghdr.rst:49
msgid "Portable Network Graphics"
msgstr ""

#: ../Doc/library/imghdr.rst:55
msgid ""
"You can extend the list of file types :mod:`imghdr` can recognize by "
"appending to this variable:"
msgstr ""

#: ../Doc/library/imghdr.rst:61
msgid ""
"A list of functions performing the individual tests.  Each function takes "
"two arguments: the byte-stream and an open file-like object. When :func:"
"`what` is called with a byte-stream, the file-like object will be ``None``."
msgstr ""

#: ../Doc/library/imghdr.rst:65
msgid ""
"The test function should return a string describing the image type if the "
"test succeeded, or ``None`` if it failed."
msgstr ""

#: ../Doc/library/imp.rst:3
msgid ":mod:`imp` --- Access the :keyword:`import` internals"
msgstr ""

#: ../Doc/library/imp.rst:11
msgid ""
"This module provides an interface to the mechanisms used to implement the :"
"keyword:`import` statement.  It defines the following constants and "
"functions:"
msgstr ""

#: ../Doc/library/imp.rst:19
msgid ""
"Return the magic string value used to recognize byte-compiled code files (:"
"file:`.pyc` files).  (This value may be different for each Python version.)"
msgstr ""

#: ../Doc/library/imp.rst:25
msgid ""
"Return a list of 3-element tuples, each describing a particular type of "
"module. Each triple has the form ``(suffix, mode, type)``, where *suffix* is "
"a string to be appended to the module name to form the filename to search "
"for, *mode* is the mode string to pass to the built-in :func:`open` function "
"to open the file (this can be ``'r'`` for text files or ``'rb'`` for binary "
"files), and *type* is the file type, which has one of the values :const:"
"`PY_SOURCE`, :const:`PY_COMPILED`, or :const:`C_EXTENSION`, described below."
msgstr ""

#: ../Doc/library/imp.rst:37
msgid ""
"Try to find the module *name*.  If *path* is omitted or ``None``, the list "
"of directory names given by ``sys.path`` is searched, but first a few "
"special places are searched: the function tries to find a built-in module "
"with the given name (:const:`C_BUILTIN`), then a frozen module (:const:"
"`PY_FROZEN`), and on some systems some other places are looked in as well "
"(on Windows, it looks in the registry which may point to a specific file)."
msgstr ""

#: ../Doc/library/imp.rst:44
msgid ""
"Otherwise, *path* must be a list of directory names; each directory is "
"searched for files with any of the suffixes returned by :func:`get_suffixes` "
"above.  Invalid names in the list are silently ignored (but all list items "
"must be strings)."
msgstr ""

#: ../Doc/library/imp.rst:49
msgid ""
"If search is successful, the return value is a 3-element tuple ``(file, "
"pathname, description)``:"
msgstr ""

#: ../Doc/library/imp.rst:52
msgid ""
"*file* is an open file object positioned at the beginning, *pathname* is the "
"pathname of the file found, and *description* is a 3-element tuple as "
"contained in the list returned by :func:`get_suffixes` describing the kind "
"of module found."
msgstr ""

#: ../Doc/library/imp.rst:57
msgid ""
"If the module does not live in a file, the returned *file* is ``None``, "
"*pathname* is the empty string, and the *description* tuple contains empty "
"strings for its suffix and mode; the module type is indicated as given in "
"parentheses above.  If the search is unsuccessful, :exc:`ImportError` is "
"raised.  Other exceptions indicate problems with the arguments or "
"environment."
msgstr ""

#: ../Doc/library/imp.rst:64
msgid ""
"If the module is a package, *file* is ``None``, *pathname* is the package "
"path and the last item in the *description* tuple is :const:`PKG_DIRECTORY`."
msgstr ""

# b7f28b179f1243b0b89000ee4bb0fc41
#: ../Doc/library/imp.rst:67
msgid ""
"This function does not handle hierarchical module names (names containing "
"dots).  In order to find *P.M*, that is, submodule *M* of package *P*, use :"
"func:`find_module` and :func:`load_module` to find and load package *P*, and "
"then use :func:`find_module` with the *path* argument set to ``P.__path__``. "
"When *P* itself has a dotted name, apply this recipe recursively."
msgstr ""

# da88b2ad5a114224a3d469993c250653
#: ../Doc/library/imp.rst:78
msgid ""
"Load a module that was previously found by :func:`find_module` (or by an "
"otherwise conducted search yielding compatible results).  This function does "
"more than importing the module: if the module was already imported, it is "
"equivalent to a :func:`reload`!  The *name* argument indicates the full "
"module name (including the package name, if this is a submodule of a "
"package).  The *file* argument is an open file, and *pathname* is the "
"corresponding file name; these can be ``None`` and ``''``, respectively, "
"when the module is a package or not being loaded from a file.  The "
"*description* argument is a tuple, as would be returned by :func:"
"`get_suffixes`, describing what kind of module must be loaded."
msgstr ""

#: ../Doc/library/imp.rst:89
msgid ""
"If the load is successful, the return value is the module object; otherwise, "
"an exception (usually :exc:`ImportError`) is raised."
msgstr ""

#: ../Doc/library/imp.rst:92
msgid ""
"**Important:** the caller is responsible for closing the *file* argument, if "
"it was not ``None``, even when an exception is raised.  This is best done "
"using a :keyword:`try` ... :keyword:`finally` statement."
msgstr ""

#: ../Doc/library/imp.rst:99
msgid ""
"Return a new empty module object called *name*.  This object is *not* "
"inserted in ``sys.modules``."
msgstr ""

#: ../Doc/library/imp.rst:105
msgid ""
"Return ``True`` if the import lock is currently held, else ``False``. On "
"platforms without threads, always return ``False``."
msgstr ""

#: ../Doc/library/imp.rst:108
msgid ""
"On platforms with threads, a thread executing an import holds an internal "
"lock until the import is complete. This lock blocks other threads from doing "
"an import until the original import completes, which in turn prevents other "
"threads from seeing incomplete module objects constructed by the original "
"thread while in the process of completing its import (and the imports, if "
"any, triggered by that)."
msgstr ""

# 1c7b0e9475014b0e8728f5073cb9162b
#: ../Doc/library/imp.rst:118
msgid ""
"Acquire the interpreter's import lock for the current thread.  This lock "
"should be used by import hooks to ensure thread-safety when importing "
"modules."
msgstr ""

#: ../Doc/library/imp.rst:121
msgid ""
"Once a thread has acquired the import lock, the same thread may acquire it "
"again without blocking; the thread must release it once for each time it has "
"acquired it."
msgstr ""

#: ../Doc/library/imp.rst:125
msgid "On platforms without threads, this function does nothing."
msgstr ""

#: ../Doc/library/imp.rst:132
msgid ""
"Release the interpreter's import lock. On platforms without threads, this "
"function does nothing."
msgstr ""

#: ../Doc/library/imp.rst:137
msgid ""
"The following constants with integer values, defined in this module, are "
"used to indicate the search result of :func:`find_module`."
msgstr ""

#: ../Doc/library/imp.rst:143
msgid "The module was found as a source file."
msgstr ""

#: ../Doc/library/imp.rst:148
msgid "The module was found as a compiled code object file."
msgstr ""

#: ../Doc/library/imp.rst:153
msgid "The module was found as dynamically loadable shared library."
msgstr ""

#: ../Doc/library/imp.rst:158
msgid "The module was found as a package directory."
msgstr ""

#: ../Doc/library/imp.rst:163
msgid "The module was found as a built-in module."
msgstr ""

#: ../Doc/library/imp.rst:168
msgid "The module was found as a frozen module (see :func:`init_frozen`)."
msgstr ""

#: ../Doc/library/imp.rst:170
msgid ""
"The following constant and functions are obsolete; their functionality is "
"available through :func:`find_module` or :func:`load_module`. They are kept "
"around for backward compatibility:"
msgstr ""

#: ../Doc/library/imp.rst:177
msgid "Unused."
msgstr ""

#: ../Doc/library/imp.rst:182
msgid ""
"Initialize the built-in module called *name* and return its module object "
"along with storing it in ``sys.modules``.  If the module was already "
"initialized, it will be initialized *again*.  Re-initialization involves the "
"copying of the built-in module's ``__dict__`` from the cached module over "
"the module's entry in ``sys.modules``.  If there is no built-in module "
"called *name*, ``None`` is returned."
msgstr ""

#: ../Doc/library/imp.rst:192
msgid ""
"Initialize the frozen module called *name* and return its module object.  If "
"the module was already initialized, it will be initialized *again*.  If "
"there is no frozen module called *name*, ``None`` is returned.  (Frozen "
"modules are modules written in Python whose compiled byte-code object is "
"incorporated into a custom-built Python interpreter by Python's :program:"
"`freeze` utility. See :file:`Tools/freeze/` for now.)"
msgstr ""

#: ../Doc/library/imp.rst:202
msgid ""
"Return ``1`` if there is a built-in module called *name* which can be "
"initialized again.  Return ``-1`` if there is a built-in module called "
"*name* which cannot be initialized again (see :func:`init_builtin`).  Return "
"``0`` if there is no built-in module called *name*."
msgstr ""

#: ../Doc/library/imp.rst:210
msgid ""
"Return ``True`` if there is a frozen module (see :func:`init_frozen`) called "
"*name*, or ``False`` if there is no such module."
msgstr ""

#: ../Doc/library/imp.rst:218
msgid ""
"Load and initialize a module implemented as a byte-compiled code file and "
"return its module object.  If the module was already initialized, it will be "
"initialized *again*.  The *name* argument is used to create or access a "
"module object.  The *pathname* argument points to the byte-compiled code "
"file.  The *file* argument is the byte-compiled code file, open for reading "
"in binary mode, from the beginning. It must currently be a real file object, "
"not a user-defined class emulating a file."
msgstr ""

#: ../Doc/library/imp.rst:229
msgid ""
"Load and initialize a module implemented as a dynamically loadable shared "
"library and return its module object.  If the module was already "
"initialized, it will be initialized *again*. Re-initialization involves "
"copying the ``__dict__`` attribute of the cached instance of the module over "
"the value used in the module cached in ``sys.modules``.  The *pathname* "
"argument must point to the shared library.  The *name* argument is used to "
"construct the name of the initialization function: an external C function "
"called ``initname()`` in the shared library is called.  The optional *file* "
"argument is ignored.  (Note: using shared libraries is highly system "
"dependent, and not all systems support it.)"
msgstr ""

#: ../Doc/library/imp.rst:243
msgid ""
"Load and initialize a module implemented as a Python source file and return "
"its module object.  If the module was already initialized, it will be "
"initialized *again*.  The *name* argument is used to create or access a "
"module object.  The *pathname* argument points to the source file.  The "
"*file* argument is the source file, open for reading as text, from the "
"beginning. It must currently be a real file object, not a user-defined class "
"emulating a file.  Note that if a properly matching byte-compiled file (with "
"suffix :file:`.pyc` or :file:`.pyo`) exists, it will be used instead of "
"parsing the given source file."
msgstr ""

#: ../Doc/library/imp.rst:255
msgid ""
"The :class:`NullImporter` type is a :pep:`302` import hook that handles non-"
"directory path strings by failing to find any modules.  Calling this type "
"with an existing directory or empty string raises :exc:`ImportError`. "
"Otherwise, a :class:`NullImporter` instance is returned."
msgstr ""

#: ../Doc/library/imp.rst:260
msgid ""
"Python adds instances of this type to ``sys.path_importer_cache`` for any "
"path entries that are not directories and are not handled by any other path "
"hooks on ``sys.path_hooks``.  Instances have only one method:"
msgstr ""

#: ../Doc/library/imp.rst:267
msgid ""
"This method always returns ``None``, indicating that the requested module "
"could not be found."
msgstr ""

#: ../Doc/library/imp.rst:278
msgid ""
"The following function emulates what was the standard import statement up to "
"Python 1.4 (no hierarchical module names).  (This *implementation* wouldn't "
"work in that version, since :func:`find_module` has been extended and :func:"
"`load_module` has been added in 1.4.) ::"
msgstr ""

#: ../Doc/library/imp.rst:309
msgid ""
"A more complete example that implements hierarchical module names and "
"includes a :func:`reload` function can be found in the module :mod:`knee`.  "
"The :mod:`knee` module can be found in :file:`Demo/imputil/` in the Python "
"source distribution."
msgstr ""

# 75e8abe325064063ab1ed9b65f9a2255
#: ../Doc/library/importlib.rst:2
msgid ":mod:`importlib` -- Convenience wrappers for :func:`__import__`"
msgstr ""

# c83a6da585c9440ba6b9c76056d88da1
#: ../Doc/library/importlib.rst:12
msgid ""
"This module is a minor subset of what is available in the more full-featured "
"package of the same name from Python 3.1 that provides a complete "
"implementation of :keyword:`import`. What is here has been provided to help "
"ease in transitioning from 2.7 to 3.1."
msgstr ""

# a82661446e404ba3b4710756f9685a6c
#: ../Doc/library/importlib.rst:20
msgid ""
"Import a module. The *name* argument specifies what module to import in "
"absolute or relative terms (e.g. either ``pkg.mod`` or ``..mod``). If the "
"name is specified in relative terms, then the *package* argument must be "
"specified to the package which is to act as the anchor for resolving the "
"package name (e.g. ``import_module('..mod', 'pkg.subpkg')`` will import "
"``pkg.mod``).  The specified module will be inserted into :data:`sys."
"modules` and returned."
msgstr ""

# a3062f38937140c0b44fef928b4164ad
#: ../Doc/library/imputil.rst:3
msgid ":mod:`imputil` --- Import utilities"
msgstr ""

# 55d6db7226c74b608c849da365eac319
#: ../Doc/library/imputil.rst:15
msgid ""
"This module provides a very handy and useful mechanism for custom :keyword:"
"`import` hooks. Compared to the older :mod:`ihooks` module, :mod:`imputil` "
"takes a dramatically simpler and more straight-forward approach to custom :"
"keyword:`import` functions."
msgstr ""

# 92a24e3e93c04649907bde028b8efb71
#: ../Doc/library/imputil.rst:23
msgid "Manage the import process."
msgstr ""

# ac9696586a8a411d92b5dbe9c9c31a68
#: ../Doc/library/imputil.rst:27
msgid "Install this ImportManager into the specified namespace."
msgstr ""

# 612b1e62b5564fae845f51ad0e1218f2
#: ../Doc/library/imputil.rst:31
msgid "Restore the previous import mechanism."
msgstr ""

# dc427439ffeb455e97f82f6fe5ca034b
# 29d5983cb2e44a1e8339babaa046214f
# 41c53e808a1b4e558920b317b0a3a3c4
# eab153f2650448218bca3be75bdbe96d
# fe4662ade64c4b349673604874babb3b
#: ../Doc/library/imputil.rst:35 ../Doc/library/imputil.rst:87
#: ../Doc/library/imputil.rst:91 ../Doc/library/imputil.rst:95
#: ../Doc/library/imputil.rst:99
msgid "Undocumented."
msgstr ""

# d24ab7f1c5964809957438e209b6cc7b
#: ../Doc/library/imputil.rst:40
msgid "Base class for replacing standard import functions."
msgstr ""

# 37b4cd0c5dea44f8937d53be1c38b0e2
#: ../Doc/library/imputil.rst:44
msgid "Import a top-level module."
msgstr ""

# f06580b09bd44976a2fa7c2cfd1f17ab
#: ../Doc/library/imputil.rst:48
msgid "Find and retrieve the code for the given module."
msgstr ""

# dc5bfadef1984033a64e23addf3b8a88
#: ../Doc/library/imputil.rst:50
msgid ""
"*parent* specifies a parent module to define a context for importing. It may "
"be ``None``, indicating no particular context for the search."
msgstr ""

# 47a5fa8c3c2b43488af71bd607eef70b
#: ../Doc/library/imputil.rst:53
msgid "*modname* specifies a single module (not dotted) within the parent."
msgstr ""

# b70c3820ed3f4500952292437c06e7aa
#: ../Doc/library/imputil.rst:55
msgid ""
"*fqname* specifies the fully-qualified module name. This is a (potentially) "
"dotted name from the \"root\" of the module namespace down to the modname."
msgstr ""

# df95b0f24c844cfa858edcc787f18174
#: ../Doc/library/imputil.rst:59
msgid "If there is no parent, then modname==fqname."
msgstr ""

# 31cbf0e697bc402584dde834440cd42b
#: ../Doc/library/imputil.rst:61
msgid "This method should return ``None``, or a 3-tuple."
msgstr ""

# f4fc5509aea4439d9de841508cf02a3f
#: ../Doc/library/imputil.rst:63
msgid "If the module was not found, then ``None`` should be returned."
msgstr ""

# 41a41117c2ea4b7d88c92828351a154a
#: ../Doc/library/imputil.rst:65
msgid ""
"The first item of the 2- or 3-tuple should be the integer 0 or 1, specifying "
"whether the module that was found is a package or not."
msgstr ""

# 24b3d1e8463b48a5b134174e89e77e77
#: ../Doc/library/imputil.rst:68
msgid ""
"The second item is the code object for the module (it will be executed "
"within the new module's namespace). This item can also be a fully-loaded "
"module object (e.g. loaded from a shared lib)."
msgstr ""

# eebabeaad9974ef5bce7abf92fad14e4
#: ../Doc/library/imputil.rst:72
msgid ""
"The third item is a dictionary of name/value pairs that will be inserted "
"into new module before the code object is executed. This is provided in case "
"the module's code expects certain values (such as where the module was "
"found). When the second item is a module object, then these names/values "
"will be inserted *after* the module has been loaded/initialized."
msgstr ""

# 34e93e0eee474e59ba91a8b127882f57
#: ../Doc/library/imputil.rst:82
msgid ""
"Emulate the import mechanism for built-in and frozen modules.  This is a sub-"
"class of the :class:`Importer` class."
msgstr ""

# f28dbb77336a4cff8e3c5f22ce003852
#: ../Doc/library/imputil.rst:106
msgid "This is a re-implementation of hierarchical module import."
msgstr ""

# 78a375403e06422f9fad3c9f556e1cf3
#: ../Doc/library/imputil.rst:108
msgid ""
"This code is intended to be read, not executed.  However, it does work -- "
"all you need to do to enable it is \"import knee\"."
msgstr ""

# 387736d512d941b5b006a6629156aedb
#: ../Doc/library/imputil.rst:111
msgid "(The name is a pun on the clunkier predecessor of this module, \"ni\".)"
msgstr ""

# e262ea6cea89489fad0c8bb43e3bb2d2
#: ../Doc/library/imputil.rst:235
msgid ""
"Also see the :mod:`importers` module (which can be found in :file:`Demo/"
"imputil/` in the Python source distribution) for additional examples."
msgstr ""

#: ../Doc/library/index.rst:5
msgid "The Python Standard Library"
msgstr ""

#: ../Doc/library/index.rst:7
msgid "|version|"
msgstr ""

#: ../Doc/library/index.rst:8
msgid "|today|"
msgstr ""

#: ../Doc/library/index.rst:10
msgid ""
"While :ref:`reference-index` describes the exact syntax and semantics of the "
"Python language, this library reference manual describes the standard "
"library that is distributed with Python. It also describes some of the "
"optional components that are commonly included in Python distributions."
msgstr ""

#: ../Doc/library/index.rst:16
msgid ""
"Python's standard library is very extensive, offering a wide range of "
"facilities as indicated by the long table of contents listed below. The "
"library contains built-in modules (written in C) that provide access to "
"system functionality such as file I/O that would otherwise be inaccessible "
"to Python programmers, as well as modules written in Python that provide "
"standardized solutions for many problems that occur in everyday programming. "
"Some of these modules are explicitly designed to encourage and enhance the "
"portability of Python programs by abstracting away platform-specifics into "
"platform-neutral APIs."
msgstr ""

#: ../Doc/library/index.rst:26
msgid ""
"The Python installers for the Windows platform usually includes the entire "
"standard library and often also include many additional components. For Unix-"
"like operating systems Python is normally provided as a collection of "
"packages, so it may be necessary to use the packaging tools provided with "
"the operating system to obtain some or all of the optional components."
msgstr ""

#: ../Doc/library/index.rst:33
msgid ""
"In addition to the standard library, there is a growing collection of "
"several thousand components (from individual programs and modules to "
"packages and entire application development frameworks), available from the "
"`Python Package Index <http://pypi.python.org/pypi>`_."
msgstr ""

#: ../Doc/library/inspect.rst:2
msgid ":mod:`inspect` --- Inspect live objects"
msgstr ""

# 7b6c7e8364fe454bb90b8db1d13f90cd
#: ../Doc/library/inspect.rst:12
msgid "**Source code:** :source:`Lib/inspect.py`"
msgstr ""

#: ../Doc/library/inspect.rst:16
msgid ""
"The :mod:`inspect` module provides several useful functions to help get "
"information about live objects such as modules, classes, methods, functions, "
"tracebacks, frame objects, and code objects.  For example, it can help you "
"examine the contents of a class, retrieve the source code of a method, "
"extract and format the argument list for a function, or get all the "
"information you need to display a detailed traceback."
msgstr ""

#: ../Doc/library/inspect.rst:23
msgid ""
"There are four main kinds of services provided by this module: type "
"checking, getting source code, inspecting classes and functions, and "
"examining the interpreter stack."
msgstr ""

#: ../Doc/library/inspect.rst:31
msgid "Types and members"
msgstr ""

#: ../Doc/library/inspect.rst:33
msgid ""
"The :func:`getmembers` function retrieves the members of an object such as a "
"class or module. The sixteen functions whose names begin with \"is\" are "
"mainly provided as convenient choices for the second argument to :func:"
"`getmembers`. They also help you determine when you can expect to find the "
"following special attributes:"
msgstr ""

#: ../Doc/library/inspect.rst:42 ../Doc/library/logging.rst:597
msgid "module"
msgstr ""

#: ../Doc/library/inspect.rst:42 ../Doc/library/inspect.rst:47
#: ../Doc/library/inspect.rst:52 ../Doc/library/inspect.rst:68
#: ../Doc/library/inspect.rst:207
msgid "__doc__"
msgstr ""

#: ../Doc/library/inspect.rst:42 ../Doc/library/inspect.rst:47
#: ../Doc/library/inspect.rst:52 ../Doc/library/inspect.rst:68
#: ../Doc/library/inspect.rst:207
msgid "documentation string"
msgstr ""

#: ../Doc/library/inspect.rst:44
msgid "__file__"
msgstr ""

#: ../Doc/library/inspect.rst:44
msgid "filename (missing for built-in modules)"
msgstr ""

#: ../Doc/library/inspect.rst:47 ../Doc/library/ttk.rst:109
msgid "class"
msgstr ""

#: ../Doc/library/inspect.rst:49
msgid "__module__"
msgstr ""

#: ../Doc/library/inspect.rst:49
msgid "name of module in which this class was defined"
msgstr ""

#: ../Doc/library/inspect.rst:52
msgid "method"
msgstr ""

#: ../Doc/library/inspect.rst:54 ../Doc/library/inspect.rst:70
#: ../Doc/library/inspect.rst:209
msgid "__name__"
msgstr ""

#: ../Doc/library/inspect.rst:54
msgid "name with which this method was defined"
msgstr ""

# b7abe5ffa74344dc9d278e7471a4325c
#: ../Doc/library/inspect.rst:57
msgid "im_class"
msgstr ""

# 48ec801bb33948269d8efaa18f506a89
#: ../Doc/library/inspect.rst:57
msgid "class object that asked for this method"
msgstr ""

# e01d109b932b4c359782ba236e8bfb1f
#: ../Doc/library/inspect.rst:60
msgid "im_func or __func__"
msgstr ""

#: ../Doc/library/inspect.rst:60
msgid "function object containing implementation of method"
msgstr ""

# 03de46074f6c432eb340f3b7c6d3ec8b
#: ../Doc/library/inspect.rst:64
msgid "im_self or __self__"
msgstr ""

#: ../Doc/library/inspect.rst:64
msgid "instance to which this method is bound, or ``None``"
msgstr ""

#: ../Doc/library/inspect.rst:68
msgid "function"
msgstr ""

#: ../Doc/library/inspect.rst:70
msgid "name with which this function was defined"
msgstr ""

# 213136bc0bba47a7bc760b40e900cfcc
#: ../Doc/library/inspect.rst:73
msgid "func_code"
msgstr ""

#: ../Doc/library/inspect.rst:73
msgid "code object containing compiled function :term:`bytecode`"
msgstr ""

# 5dab611b3ba04c918a9482bf18a11b5b
#: ../Doc/library/inspect.rst:77
msgid "func_defaults"
msgstr ""

#: ../Doc/library/inspect.rst:77
msgid "tuple of any default values for arguments"
msgstr ""

# 4e3df0db1388419d8043ab6c0781cbf0
#: ../Doc/library/inspect.rst:80
msgid "func_doc"
msgstr ""

# 7cd28f50de2a4155a3d8e87b42c9dc63
#: ../Doc/library/inspect.rst:80
msgid "(same as __doc__)"
msgstr ""

# fd83c256076f4ba99f25a46b058d0412
#: ../Doc/library/inspect.rst:82
msgid "func_globals"
msgstr ""

#: ../Doc/library/inspect.rst:82
msgid "global namespace in which this function was defined"
msgstr ""

# cfd8d933f82549b7963e2c2ae8b80c7f
#: ../Doc/library/inspect.rst:85
msgid "func_name"
msgstr ""

# 3b1d1959d71a4443a9676eb60c6ad652
#: ../Doc/library/inspect.rst:85
msgid "(same as __name__)"
msgstr ""

# 1db897288cf544cb985b7524367631e9
#: ../Doc/library/inspect.rst:87
msgid "generator"
msgstr ""

# fe26ced6e3b546a88dec1dc8de4dad9a
#: ../Doc/library/inspect.rst:87
msgid "__iter__"
msgstr ""

# eb3abd89e01d43acb03e0c4cdf287505
#: ../Doc/library/inspect.rst:87
msgid "defined to support iteration over container"
msgstr ""

# 5ad6191c10ff453e9d2b86550b925f55
#: ../Doc/library/inspect.rst:90
msgid "close"
msgstr ""

# f86963ced0da4569a89b2f0206f3ab69
#: ../Doc/library/inspect.rst:90
msgid ""
"raises new GeneratorExit exception inside the generator to terminate the "
"iteration"
msgstr ""

# 67774dc635bb4961bca7812258d7bd00
#: ../Doc/library/inspect.rst:95
msgid "gi_code"
msgstr ""

# 4dcf9343b25142c3ab2979b7e6768e71
#: ../Doc/library/inspect.rst:95
msgid "code object"
msgstr ""

# 29eb955253b74a41a0191f07096972c3
#: ../Doc/library/inspect.rst:97
msgid "gi_frame"
msgstr ""

# 67f7256685f443819ed43f44dce3db15
#: ../Doc/library/inspect.rst:97
msgid "frame object or possibly None once the generator has been exhausted"
msgstr ""

# 413b75af272446e3b464c143a90c7fac
#: ../Doc/library/inspect.rst:101
msgid "gi_running"
msgstr ""

# 2517987761654d3b9dcebea87d82eded
#: ../Doc/library/inspect.rst:101
msgid "set to 1 when generator is executing, 0 otherwise"
msgstr ""

# 5ea3dcc2ac4440b29269ad73ed7413bc
#: ../Doc/library/inspect.rst:104
msgid "next"
msgstr ""

# 41bb99e041834ceb9e1ba5594ab904ac
#: ../Doc/library/inspect.rst:104
msgid "return the next item from the container"
msgstr ""

# 28f2697f924340adb6e34b0cecbc8be6
#: ../Doc/library/inspect.rst:107
msgid "send"
msgstr ""

# deb1bac59eb34b6c9b858b486ee723e6
#: ../Doc/library/inspect.rst:107
msgid ""
"resumes the generator and \"sends\" a value that becomes the result of the "
"current yield-expression"
msgstr ""

# c2da4a7bf1a6435d98518c69a15fe464
#: ../Doc/library/inspect.rst:112
msgid "throw"
msgstr ""

# 5b82c97d322644a786b42c8f2eb7bac7
#: ../Doc/library/inspect.rst:112
msgid "used to raise an exception inside the generator"
msgstr ""

#: ../Doc/library/inspect.rst:116
msgid "traceback"
msgstr ""

#: ../Doc/library/inspect.rst:116
msgid "tb_frame"
msgstr ""

#: ../Doc/library/inspect.rst:116
msgid "frame object at this level"
msgstr ""

#: ../Doc/library/inspect.rst:119
msgid "tb_lasti"
msgstr ""

#: ../Doc/library/inspect.rst:119 ../Doc/library/inspect.rst:152
msgid "index of last attempted instruction in bytecode"
msgstr ""

#: ../Doc/library/inspect.rst:122
msgid "tb_lineno"
msgstr ""

#: ../Doc/library/inspect.rst:122 ../Doc/library/inspect.rst:155
msgid "current line number in Python source code"
msgstr ""

#: ../Doc/library/inspect.rst:125
msgid "tb_next"
msgstr ""

#: ../Doc/library/inspect.rst:125
msgid "next inner traceback object (called by this level)"
msgstr ""

#: ../Doc/library/inspect.rst:129
msgid "frame"
msgstr ""

#: ../Doc/library/inspect.rst:129
msgid "f_back"
msgstr ""

#: ../Doc/library/inspect.rst:129
msgid "next outer frame object (this frame's caller)"
msgstr ""

#: ../Doc/library/inspect.rst:132
msgid "f_builtins"
msgstr ""

#: ../Doc/library/inspect.rst:132
msgid "builtins namespace seen by this frame"
msgstr ""

#: ../Doc/library/inspect.rst:135
msgid "f_code"
msgstr ""

#: ../Doc/library/inspect.rst:135
msgid "code object being executed in this frame"
msgstr ""

# 92a4b3387cc442729b4d63d69100197d
#: ../Doc/library/inspect.rst:138
msgid "f_exc_traceback"
msgstr ""

# 9d27f1a6009c4f7ca878da678fbe99a7
#: ../Doc/library/inspect.rst:138
msgid "traceback if raised in this frame, or ``None``"
msgstr ""

# c8ed308f8ed64901b8ec6f8bc47697c1
#: ../Doc/library/inspect.rst:141
msgid "f_exc_type"
msgstr ""

# 159a940ffe65454d9604f48139f1c585
#: ../Doc/library/inspect.rst:141
msgid "exception type if raised in this frame, or ``None``"
msgstr ""

# efe6f232d00a4e11a084c6e1aa47477b
#: ../Doc/library/inspect.rst:145
msgid "f_exc_value"
msgstr ""

# 9f08676741c9414884393126284c9bce
#: ../Doc/library/inspect.rst:145
msgid "exception value if raised in this frame, or ``None``"
msgstr ""

#: ../Doc/library/inspect.rst:149
msgid "f_globals"
msgstr ""

#: ../Doc/library/inspect.rst:149
msgid "global namespace seen by this frame"
msgstr ""

#: ../Doc/library/inspect.rst:152
msgid "f_lasti"
msgstr ""

#: ../Doc/library/inspect.rst:155
msgid "f_lineno"
msgstr ""

#: ../Doc/library/inspect.rst:158
msgid "f_locals"
msgstr ""

#: ../Doc/library/inspect.rst:158
msgid "local namespace seen by this frame"
msgstr ""

#: ../Doc/library/inspect.rst:161
msgid "f_restricted"
msgstr ""

#: ../Doc/library/inspect.rst:161
msgid "0 or 1 if frame is in restricted execution mode"
msgstr ""

#: ../Doc/library/inspect.rst:164
msgid "f_trace"
msgstr ""

#: ../Doc/library/inspect.rst:164
msgid "tracing function for this frame, or ``None``"
msgstr ""

#: ../Doc/library/inspect.rst:167
msgid "code"
msgstr ""

#: ../Doc/library/inspect.rst:167
msgid "co_argcount"
msgstr ""

#: ../Doc/library/inspect.rst:167
msgid "number of arguments (not including \\* or \\*\\* args)"
msgstr ""

#: ../Doc/library/inspect.rst:171
msgid "co_code"
msgstr ""

#: ../Doc/library/inspect.rst:171
msgid "string of raw compiled bytecode"
msgstr ""

#: ../Doc/library/inspect.rst:174
msgid "co_consts"
msgstr ""

#: ../Doc/library/inspect.rst:174
msgid "tuple of constants used in the bytecode"
msgstr ""

#: ../Doc/library/inspect.rst:177
msgid "co_filename"
msgstr ""

#: ../Doc/library/inspect.rst:177
msgid "name of file in which this code object was created"
msgstr ""

#: ../Doc/library/inspect.rst:181
msgid "co_firstlineno"
msgstr ""

#: ../Doc/library/inspect.rst:181
msgid "number of first line in Python source code"
msgstr ""

#: ../Doc/library/inspect.rst:184
msgid "co_flags"
msgstr ""

#: ../Doc/library/inspect.rst:184
msgid "bitmap: 1=optimized ``|`` 2=newlocals ``|`` 4=\\*arg ``|`` 8=\\*\\*arg"
msgstr ""

#: ../Doc/library/inspect.rst:188
msgid "co_lnotab"
msgstr ""

#: ../Doc/library/inspect.rst:188
msgid "encoded mapping of line numbers to bytecode indices"
msgstr ""

#: ../Doc/library/inspect.rst:192
msgid "co_name"
msgstr ""

#: ../Doc/library/inspect.rst:192
msgid "name with which this code object was defined"
msgstr ""

#: ../Doc/library/inspect.rst:195
msgid "co_names"
msgstr ""

#: ../Doc/library/inspect.rst:195
msgid "tuple of names of local variables"
msgstr ""

#: ../Doc/library/inspect.rst:198
msgid "co_nlocals"
msgstr ""

#: ../Doc/library/inspect.rst:198
msgid "number of local variables"
msgstr ""

#: ../Doc/library/inspect.rst:200
msgid "co_stacksize"
msgstr ""

#: ../Doc/library/inspect.rst:200
msgid "virtual machine stack space required"
msgstr ""

#: ../Doc/library/inspect.rst:203
msgid "co_varnames"
msgstr ""

#: ../Doc/library/inspect.rst:203
msgid "tuple of names of arguments and local variables"
msgstr ""

#: ../Doc/library/inspect.rst:207
msgid "builtin"
msgstr ""

#: ../Doc/library/inspect.rst:209
msgid "original name of this function or method"
msgstr ""

#: ../Doc/library/inspect.rst:212
msgid "__self__"
msgstr ""

#: ../Doc/library/inspect.rst:212
msgid "instance to which a method is bound, or ``None``"
msgstr ""

# 85baf0ac5bcb4964a401b6afbfd574d5
# 85643b79b421456296fba25639c9b970
#: ../Doc/library/inspect.rst:217 ../Doc/library/posixfile.rst:134
msgid "Note:"
msgstr ""

#: ../Doc/library/inspect.rst:226
msgid ""
"Return all the members of an object in a list of (name, value) pairs sorted "
"by name.  If the optional *predicate* argument is supplied, only members for "
"which the predicate returns a true value are included."
msgstr ""

#: ../Doc/library/inspect.rst:232
msgid ""
":func:`getmembers` does not return metaclass attributes when the argument is "
"a class (this behavior is inherited from the :func:`dir` function)."
msgstr ""

# f50f2ba021f74299af382258f347432f
#: ../Doc/library/inspect.rst:238
msgid ""
"Return a tuple of values that describe how Python will interpret the file "
"identified by *path* if it is a module, or ``None`` if it would not be "
"identified as a module.  The return tuple is ``(name, suffix, mode, "
"module_type)``, where *name* is the name of the module without the name of "
"any enclosing package, *suffix* is the trailing part of the file name (which "
"may not be a dot-delimited extension), *mode* is the :func:`open` mode that "
"would be used (``'r'`` or ``'rb'``), and *module_type* is an integer giving "
"the type of the module.  *module_type* will have a value which can be "
"compared to the constants defined in the :mod:`imp` module; see the "
"documentation for that module for more information on module types."
msgstr ""

#: ../Doc/library/inspect.rst:256
msgid ""
"Return the name of the module named by the file *path*, without including "
"the names of enclosing packages.  This uses the same algorithm as the "
"interpreter uses when searching for modules.  If the name cannot be matched "
"according to the interpreter's rules, ``None`` is returned."
msgstr ""

#: ../Doc/library/inspect.rst:264
msgid "Return true if the object is a module."
msgstr ""

# 2264f530a4fe4595aeefa34895c1eb6d
#: ../Doc/library/inspect.rst:269
msgid ""
"Return true if the object is a class, whether built-in or created in Python "
"code."
msgstr ""

# 7ea7413e63f1450e893effe678cf759c
#: ../Doc/library/inspect.rst:275
msgid "Return true if the object is a bound method written in Python."
msgstr ""

# 31c27b7aea5e4f4eb9a06233e4a776e6
#: ../Doc/library/inspect.rst:280
msgid ""
"Return true if the object is a Python function, which includes functions "
"created by a :term:`lambda` expression."
msgstr ""

#: ../Doc/library/inspect.rst:286
msgid "Return true if the object is a Python generator function."
msgstr ""

#: ../Doc/library/inspect.rst:293
msgid "Return true if the object is a generator."
msgstr ""

#: ../Doc/library/inspect.rst:300
msgid "Return true if the object is a traceback."
msgstr ""

#: ../Doc/library/inspect.rst:305
msgid "Return true if the object is a frame."
msgstr ""

#: ../Doc/library/inspect.rst:310
msgid "Return true if the object is a code."
msgstr ""

# 2db4131ec3dd4c078778ad6ed1b4c857
#: ../Doc/library/inspect.rst:315
msgid ""
"Return true if the object is a built-in function or a bound built-in method."
msgstr ""

#: ../Doc/library/inspect.rst:320
msgid ""
"Return true if the object is a user-defined or built-in function or method."
msgstr ""

#: ../Doc/library/inspect.rst:325
msgid "Return true if the object is an abstract base class."
msgstr ""

# b0132600a6fc4c66ab156c6c7de42d6c
#: ../Doc/library/inspect.rst:332
msgid ""
"Return true if the object is a method descriptor, but not if :func:"
"`ismethod`, :func:`isclass`, :func:`isfunction` or :func:`isbuiltin` are "
"true."
msgstr ""

# 53e6bfe46a1d4b9bbdbcf89897255016
#: ../Doc/library/inspect.rst:336
msgid ""
"This is new as of Python 2.2, and, for example, is true of ``int.__add__``. "
"An object passing this test has a :attr:`__get__` attribute but not a :attr:"
"`__set__` attribute, but beyond that the set of attributes varies.  :attr:"
"`__name__` is usually sensible, and :attr:`__doc__` often is."
msgstr ""

# 51f14ed826924e61913312ed03d9b600
#: ../Doc/library/inspect.rst:341
msgid ""
"Methods implemented via descriptors that also pass one of the other tests "
"return false from the :func:`ismethoddescriptor` test, simply because the "
"other tests promise more -- you can, e.g., count on having the :attr:"
"`im_func` attribute (etc) when an object passes :func:`ismethod`."
msgstr ""

#: ../Doc/library/inspect.rst:349
msgid "Return true if the object is a data descriptor."
msgstr ""

#: ../Doc/library/inspect.rst:351
msgid ""
"Data descriptors have both a :attr:`__get__` and a :attr:`__set__` "
"attribute. Examples are properties (defined in Python), getsets, and "
"members.  The latter two are defined in C and there are more specific tests "
"available for those types, which is robust across Python implementations.  "
"Typically, data descriptors will also have :attr:`__name__` and :attr:"
"`__doc__` attributes (properties, getsets, and members have both of these "
"attributes), but this is not guaranteed."
msgstr ""

#: ../Doc/library/inspect.rst:364
msgid "Return true if the object is a getset descriptor."
msgstr ""

# 0e5692d487bf43bb8609979bc3747739
#: ../Doc/library/inspect.rst:368
msgid ""
"getsets are attributes defined in extension modules via :c:type:"
"`PyGetSetDef` structures.  For Python implementations without such types, "
"this method will always return ``False``."
msgstr ""

#: ../Doc/library/inspect.rst:377
msgid "Return true if the object is a member descriptor."
msgstr ""

# 1c0fa957f5a74741b77d5da33c350589
#: ../Doc/library/inspect.rst:381
msgid ""
"Member descriptors are attributes defined in extension modules via :c:type:"
"`PyMemberDef` structures.  For Python implementations without such types, "
"this method will always return ``False``."
msgstr ""

#: ../Doc/library/inspect.rst:391
msgid "Retrieving source code"
msgstr ""

#: ../Doc/library/inspect.rst:395
msgid ""
"Get the documentation string for an object, cleaned up with :func:`cleandoc`."
msgstr ""

#: ../Doc/library/inspect.rst:400
msgid ""
"Return in a single string any lines of comments immediately preceding the "
"object's source code (for a class, function, or method), or at the top of "
"the Python source file (if the object is a module)."
msgstr ""

#: ../Doc/library/inspect.rst:407
msgid ""
"Return the name of the (text or binary) file in which an object was defined. "
"This will fail with a :exc:`TypeError` if the object is a built-in module, "
"class, or function."
msgstr ""

#: ../Doc/library/inspect.rst:414
msgid "Try to guess which module an object was defined in."
msgstr ""

#: ../Doc/library/inspect.rst:419
msgid ""
"Return the name of the Python source file in which an object was defined.  "
"This will fail with a :exc:`TypeError` if the object is a built-in module, "
"class, or function."
msgstr ""

#: ../Doc/library/inspect.rst:426
msgid ""
"Return a list of source lines and starting line number for an object. The "
"argument may be a module, class, method, function, traceback, frame, or code "
"object.  The source code is returned as a list of the lines corresponding to "
"the object and the line number indicates where in the original source file "
"the first line of code was found.  An :exc:`IOError` is raised if the source "
"code cannot be retrieved."
msgstr ""

#: ../Doc/library/inspect.rst:436
msgid ""
"Return the text of the source code for an object. The argument may be a "
"module, class, method, function, traceback, frame, or code object.  The "
"source code is returned as a single string.  An :exc:`IOError` is raised if "
"the source code cannot be retrieved."
msgstr ""

#: ../Doc/library/inspect.rst:444
msgid ""
"Clean up indentation from docstrings that are indented to line up with "
"blocks of code.  Any whitespace that can be uniformly removed from the "
"second line onwards is removed.  Also, all tabs are expanded to spaces."
msgstr ""

#: ../Doc/library/inspect.rst:454 ../Doc/library/unittest.rst:670
msgid "Classes and functions"
msgstr ""

#: ../Doc/library/inspect.rst:459
msgid ""
"Arrange the given list of classes into a hierarchy of nested lists. Where a "
"nested list appears, it contains classes derived from the class whose entry "
"immediately precedes the list.  Each entry is a 2-tuple containing a class "
"and a tuple of its base classes.  If the *unique* argument is true, exactly "
"one entry appears in the returned structure for each class in the given "
"list.  Otherwise, classes using multiple inheritance and their descendants "
"will appear multiple times."
msgstr ""

# 167df327d50140b999c5a55e5cfa8543
#: ../Doc/library/inspect.rst:470
msgid ""
"Get the names and default values of a Python function's arguments. A tuple "
"of four things is returned: ``(args, varargs, keywords, defaults)``. *args* "
"is a list of the argument names (it may contain nested lists). *varargs* and "
"*keywords* are the names of the ``*`` and ``**`` arguments or ``None``. "
"*defaults* is a tuple of default argument values or None if there are no "
"default arguments; if this tuple has *n* elements, they correspond to the "
"last *n* elements listed in *args*."
msgstr ""

# 057a8314f85946a58654527155309e6d
#: ../Doc/library/inspect.rst:485
msgid ""
"Get information about arguments passed into a particular frame. A tuple of "
"four things is returned: ``(args, varargs, keywords, locals)``. *args* is a "
"list of the argument names (it may contain nested lists). *varargs* and "
"*keywords* are the names of the ``*`` and ``**`` arguments or ``None``. "
"*locals* is the locals dictionary of the given frame."
msgstr ""

#: ../Doc/library/inspect.rst:498
msgid ""
"Format a pretty argument spec from the four values returned by :func:"
"`getargspec`.  The format\\* arguments are the corresponding optional "
"formatting functions that are called to turn names and values into strings."
msgstr ""

#: ../Doc/library/inspect.rst:505
msgid ""
"Format a pretty argument spec from the four values returned by :func:"
"`getargvalues`.  The format\\* arguments are the corresponding optional "
"formatting functions that are called to turn names and values into strings."
msgstr ""

#: ../Doc/library/inspect.rst:512
msgid ""
"Return a tuple of class cls's base classes, including cls, in method "
"resolution order.  No class appears more than once in this tuple. Note that "
"the method resolution order depends on cls's type.  Unless a very peculiar "
"user-defined metatype is in use, cls will be the first element of the tuple."
msgstr ""

#: ../Doc/library/inspect.rst:520
msgid ""
"Bind the *args* and *kwds* to the argument names of the Python function or "
"method *func*, as if it was called with them. For bound methods, bind also "
"the first argument (typically named ``self``) to the associated instance. A "
"dict is returned, mapping the argument names (including the names of the "
"``*`` and ``**`` arguments, if any) to their values from *args* and *kwds*. "
"In case of invoking *func* incorrectly, i.e. whenever ``func(*args, **kwds)"
"`` would raise an exception because of incompatible signature, an exception "
"of the same type and the same or similar message is raised. For example::"
msgstr ""

#: ../Doc/library/inspect.rst:547
msgid "The interpreter stack"
msgstr ""

#: ../Doc/library/inspect.rst:549
msgid ""
"When the following functions return \"frame records,\" each record is a "
"tuple of six items: the frame object, the filename, the line number of the "
"current line, the function name, a list of lines of context from the source "
"code, and the index of the current line within that list."
msgstr ""

#: ../Doc/library/inspect.rst:556
msgid ""
"Keeping references to frame objects, as found in the first element of the "
"frame records these functions return, can cause your program to create "
"reference cycles.  Once a reference cycle has been created, the lifespan of "
"all objects which can be accessed from the objects which form the cycle can "
"become much longer even if Python's optional cycle detector is enabled.  If "
"such cycles must be created, it is important to ensure they are explicitly "
"broken to avoid the delayed destruction of objects and increased memory "
"consumption which occurs."
msgstr ""

#: ../Doc/library/inspect.rst:564
msgid ""
"Though the cycle detector will catch these, destruction of the frames (and "
"local variables) can be made deterministic by removing the cycle in a :"
"keyword:`finally` clause.  This is also important if the cycle detector was "
"disabled when Python was compiled or using :func:`gc.disable`.  For example::"
msgstr ""

#: ../Doc/library/inspect.rst:576
msgid ""
"The optional *context* argument supported by most of these functions "
"specifies the number of lines of context to return, which are centered "
"around the current line."
msgstr ""

# 8197a4f5cb804450ae0fbf17af199fdc
#: ../Doc/library/inspect.rst:583
msgid ""
"Get information about a frame or traceback object.  A 5-tuple is returned, "
"the last five elements of the frame's frame record."
msgstr ""

#: ../Doc/library/inspect.rst:593
msgid ""
"Get a list of frame records for a frame and all outer frames.  These frames "
"represent the calls that lead to the creation of *frame*. The first entry in "
"the returned list represents *frame*; the last entry represents the "
"outermost call on *frame*'s stack."
msgstr ""

#: ../Doc/library/inspect.rst:601
msgid ""
"Get a list of frame records for a traceback's frame and all inner frames.  "
"These frames represent calls made as a consequence of *frame*.  The first "
"entry in the list represents *traceback*; the last entry represents where "
"the exception was raised."
msgstr ""

#: ../Doc/library/inspect.rst:609
msgid "Return the frame object for the caller's stack frame."
msgstr ""

#: ../Doc/library/inspect.rst:613
msgid ""
"This function relies on Python stack frame support in the interpreter, which "
"isn't guaranteed to exist in all implementations of Python.  If running in "
"an implementation without Python stack frame support this function returns "
"``None``."
msgstr ""

#: ../Doc/library/inspect.rst:621
msgid ""
"Return a list of frame records for the caller's stack.  The first entry in "
"the returned list represents the caller; the last entry represents the "
"outermost call on the stack."
msgstr ""

#: ../Doc/library/inspect.rst:628
msgid ""
"Return a list of frame records for the stack between the current frame and "
"the frame in which an exception currently being handled was raised in.  The "
"first entry in the list represents the caller; the last entry represents "
"where the exception was raised."
msgstr ""

#: ../Doc/library/internet.rst:6
msgid "Internet Protocols and Support"
msgstr ""

#: ../Doc/library/internet.rst:15
msgid ""
"The modules described in this chapter implement Internet protocols and  "
"support for related technology.  They are all implemented in Python. Most of "
"these modules require the presence of the system-dependent module :mod:"
"`socket`, which is currently supported on most popular platforms.  Here is "
"an overview:"
msgstr ""

#: ../Doc/library/intro.rst:8
msgid "The \"Python library\" contains several different kinds of components."
msgstr ""

#: ../Doc/library/intro.rst:10
msgid ""
"It contains data types that would normally be considered part of the \"core"
"\" of a language, such as numbers and lists.  For these types, the Python "
"language core defines the form of literals and places some constraints on "
"their semantics, but does not fully define the semantics.  (On the other "
"hand, the language core does define syntactic properties like the spelling "
"and priorities of operators.)"
msgstr ""

#: ../Doc/library/intro.rst:16
msgid ""
"The library also contains built-in functions and exceptions --- objects that "
"can be used by all Python code without the need of an :keyword:`import` "
"statement. Some of these are defined by the core language, but many are not "
"essential for the core semantics and are only described here."
msgstr ""

#: ../Doc/library/intro.rst:21
msgid ""
"The bulk of the library, however, consists of a collection of modules. There "
"are many ways to dissect this collection.  Some modules are written in C and "
"built in to the Python interpreter; others are written in Python and "
"imported in source form.  Some modules provide interfaces that are highly "
"specific to Python, like printing a stack trace; some provide interfaces "
"that are specific to particular operating systems, such as access to "
"specific hardware; others provide interfaces that are specific to a "
"particular application domain, like the World Wide Web. Some modules are "
"available in all versions and ports of Python; others are only available "
"when the underlying system supports or requires them; yet others are "
"available only when a particular configuration option was chosen at the time "
"when Python was compiled and installed."
msgstr ""

#: ../Doc/library/intro.rst:33
msgid ""
"This manual is organized \"from the inside out:\" it first describes the "
"built-in data types, then the built-in functions and exceptions, and finally "
"the modules, grouped in chapters of related modules.  The ordering of the "
"chapters as well as the ordering of the modules within each chapter is "
"roughly from most relevant to least important."
msgstr ""

#: ../Doc/library/intro.rst:39
msgid ""
"This means that if you start reading this manual from the start, and skip to "
"the next chapter when you get bored, you will get a reasonable overview of "
"the available modules and application areas that are supported by the Python "
"library.  Of course, you don't *have* to read it like a novel --- you can "
"also browse the table of contents (in front of the manual), or look for a "
"specific function, module or term in the index (in the back).  And finally, "
"if you enjoy learning about random subjects, you choose a random page number "
"(see module :mod:`random`) and read a section or two.  Regardless of the "
"order in which you read the sections of this manual, it helps to start with "
"chapter :ref:`built-in-funcs`, as the remainder of the manual assumes "
"familiarity with this material."
msgstr ""

#: ../Doc/library/intro.rst:51
msgid "Let the show begin!"
msgstr ""

#: ../Doc/library/io.rst:2
msgid ":mod:`io` --- Core tools for working with streams"
msgstr ""

# f90df4dba032468eb0f02db5bea89d41
#: ../Doc/library/io.rst:16
msgid ""
"The :mod:`io` module provides the Python interfaces to stream handling. "
"Under Python 2.x, this is proposed as an alternative to the built-in :class:"
"`file` object, but in Python 3.x it is the default interface to access files "
"and streams."
msgstr ""

# a7850f11c1ee4804a3766a6697256abf
#: ../Doc/library/io.rst:23
msgid ""
"Since this module has been designed primarily for Python 3.x, you have to be "
"aware that all uses of \"bytes\" in this document refer to the :class:`str` "
"type (of which :class:`bytes` is an alias), and all uses of \"text\" refer "
"to the :class:`unicode` type.  Furthermore, those two types are not "
"interchangeable in the :mod:`io` APIs."
msgstr ""

# ca5baa6629d34ac5baba25b48773d596
#: ../Doc/library/io.rst:29
msgid ""
"At the top of the I/O hierarchy is the abstract base class :class:`IOBase`.  "
"It defines the basic interface to a stream.  Note, however, that there is no "
"separation between reading and writing to streams; implementations are "
"allowed to raise an :exc:`IOError` if they do not support a given operation."
msgstr ""

#: ../Doc/library/io.rst:34
msgid ""
"Extending :class:`IOBase` is :class:`RawIOBase` which deals simply with the "
"reading and writing of raw bytes to a stream.  :class:`FileIO` subclasses :"
"class:`RawIOBase` to provide an interface to files in the machine's file "
"system."
msgstr ""

#: ../Doc/library/io.rst:39
msgid ""
":class:`BufferedIOBase` deals with buffering on a raw byte stream (:class:"
"`RawIOBase`).  Its subclasses, :class:`BufferedWriter`, :class:"
"`BufferedReader`, and :class:`BufferedRWPair` buffer streams that are "
"readable, writable, and both readable and writable. :class:`BufferedRandom` "
"provides a buffered interface to random access streams.  :class:`BytesIO` is "
"a simple stream of in-memory bytes."
msgstr ""

# a734b5617fec464aa8e479e7d895f26e
#: ../Doc/library/io.rst:46
msgid ""
"Another :class:`IOBase` subclass, :class:`TextIOBase`, deals with streams "
"whose bytes represent text, and handles encoding and decoding from and to :"
"class:`unicode` strings.  :class:`TextIOWrapper`, which extends it, is a "
"buffered text interface to a buffered raw stream (:class:`BufferedIOBase`). "
"Finally, :class:`StringIO` is an in-memory stream for unicode text."
msgstr ""

#: ../Doc/library/io.rst:53
msgid ""
"Argument names are not part of the specification, and only the arguments of :"
"func:`.open` are intended to be used as keyword arguments."
msgstr ""

#: ../Doc/library/io.rst:58
msgid "Module Interface"
msgstr ""

#: ../Doc/library/io.rst:62
msgid ""
"An int containing the default buffer size used by the module's buffered I/O "
"classes.  :func:`.open` uses the file's blksize (as obtained by :func:`os."
"stat`) if possible."
msgstr ""

#: ../Doc/library/io.rst:68
msgid ""
"Open *file* and return a corresponding stream.  If the file cannot be "
"opened, an :exc:`IOError` is raised."
msgstr ""

# 72fad9bf896348d7b77f77cc7dc95610
#: ../Doc/library/io.rst:71
msgid ""
"*file* is either a string giving the pathname (absolute or relative to the "
"current working directory) of the file to be opened or an integer file "
"descriptor of the file to be wrapped.  (If a file descriptor is given, it is "
"closed when the returned I/O object is closed, unless *closefd* is set to "
"``False``.)"
msgstr ""

#: ../Doc/library/io.rst:77
msgid ""
"*mode* is an optional string that specifies the mode in which the file is "
"opened.  It defaults to ``'r'`` which means open for reading in text mode. "
"Other common values are ``'w'`` for writing (truncating the file if it "
"already exists), and ``'a'`` for appending (which on *some* Unix systems, "
"means that *all* writes append to the end of the file regardless of the "
"current seek position).  In text mode, if *encoding* is not specified the "
"encoding used is platform dependent. (For reading and writing raw bytes use "
"binary mode and leave *encoding* unspecified.)  The available modes are:"
msgstr ""

#: ../Doc/library/io.rst:87 ../Doc/library/struct.rst:104
msgid "Character"
msgstr ""

#: ../Doc/library/io.rst:89
msgid "open for reading (default)"
msgstr ""

#: ../Doc/library/io.rst:90
msgid "open for writing, truncating the file first"
msgstr ""

#: ../Doc/library/io.rst:91
msgid "``'a'``"
msgstr ""

#: ../Doc/library/io.rst:91
msgid "open for writing, appending to the end of the file if it exists"
msgstr ""

#: ../Doc/library/io.rst:92
msgid "binary mode"
msgstr ""

#: ../Doc/library/io.rst:93
msgid "``'t'``"
msgstr ""

#: ../Doc/library/io.rst:93
msgid "text mode (default)"
msgstr ""

#: ../Doc/library/io.rst:94 ../Doc/library/stdtypes.rst:1411
#: ../Doc/library/string.rst:369
msgid "``'+'``"
msgstr ""

#: ../Doc/library/io.rst:94
msgid "open a disk file for updating (reading and writing)"
msgstr ""

#: ../Doc/library/io.rst:95
msgid "``'U'``"
msgstr ""

# 91ed202a556a4b18af84b88ca0dc4207
#: ../Doc/library/io.rst:95
msgid ""
"universal newlines mode (for backwards compatibility; should not be used in "
"new code)"
msgstr ""

#: ../Doc/library/io.rst:99
msgid ""
"The default mode is ``'rt'`` (open for reading text).  For binary random "
"access, the mode ``'w+b'`` opens and truncates the file to 0 bytes, while "
"``'r+b'`` opens the file without truncation."
msgstr ""

# 7546e69afa0d4c579397d5fa6a4fcd2c
#: ../Doc/library/io.rst:103
msgid ""
"Python distinguishes between files opened in binary and text modes, even "
"when the underlying operating system doesn't.  Files opened in binary mode "
"(including ``'b'`` in the *mode* argument) return contents as :class:`bytes` "
"objects without any decoding.  In text mode (the default, or when ``'t'`` is "
"included in the *mode* argument), the contents of the file are returned as :"
"class:`unicode` strings, the bytes having been first decoded using a "
"platform-dependent encoding or using the specified *encoding* if given."
msgstr ""

#: ../Doc/library/io.rst:111
msgid ""
"*buffering* is an optional integer used to set the buffering policy. Pass 0 "
"to switch buffering off (only allowed in binary mode), 1 to select line "
"buffering (only usable in text mode), and an integer > 1 to indicate the "
"size of a fixed-size chunk buffer.  When no *buffering* argument is given, "
"the default buffering policy works as follows:"
msgstr ""

#: ../Doc/library/io.rst:117
msgid ""
"Binary files are buffered in fixed-size chunks; the size of the buffer is "
"chosen using a heuristic trying to determine the underlying device's \"block "
"size\" and falling back on :attr:`DEFAULT_BUFFER_SIZE`. On many systems, the "
"buffer will typically be 4096 or 8192 bytes long."
msgstr ""

#: ../Doc/library/io.rst:122
msgid ""
"\"Interactive\" text files (files for which :meth:`isatty` returns True) use "
"line buffering.  Other text files use the policy described above for binary "
"files."
msgstr ""

#: ../Doc/library/io.rst:126
msgid ""
"*encoding* is the name of the encoding used to decode or encode the file. "
"This should only be used in text mode.  The default encoding is platform "
"dependent (whatever :func:`locale.getpreferredencoding` returns), but any "
"encoding supported by Python can be used.  See the :mod:`codecs` module for "
"the list of supported encodings."
msgstr ""

#: ../Doc/library/io.rst:132
msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled--this cannot be used in binary mode.  Pass "
"``'strict'`` to raise a :exc:`ValueError` exception if there is an encoding "
"error (the default of ``None`` has the same effect), or pass ``'ignore'`` to "
"ignore errors.  (Note that ignoring encoding errors can lead to data loss.) "
"``'replace'`` causes a replacement marker (such as ``'?'``) to be inserted "
"where there is malformed data.  When writing, ``'xmlcharrefreplace'`` "
"(replace with the appropriate XML character reference) or "
"``'backslashreplace'`` (replace with backslashed escape sequences) can be "
"used.  Any other error handling name that has been registered with :func:"
"`codecs.register_error` is also valid."
msgstr ""

# 91eaba9a9d6644d0a81a9cb1a07cd417
#: ../Doc/library/io.rst:147
msgid ""
"*newline* controls how :term:`universal newlines` works (it only applies to "
"text mode).  It can be ``None``, ``''``, ``'\\n'``, ``'\\r'``, and ``'\\r"
"\\n'``. It works as follows:"
msgstr ""

# b35e798034f7459e8db725324f80636a
#: ../Doc/library/io.rst:151
msgid ""
"On input, if *newline* is ``None``, universal newlines mode is enabled. "
"Lines in the input can end in ``'\\n'``, ``'\\r'``, or ``'\\r\\n'``, and "
"these are translated into ``'\\n'`` before being returned to the caller.  If "
"it is ``''``, universal newlines mode is enabled, but line endings are "
"returned to the caller untranslated.  If it has any of the other legal "
"values, input lines are only terminated by the given string, and the line "
"ending is returned to the caller untranslated."
msgstr ""

#: ../Doc/library/io.rst:159 ../Doc/library/io.rst:774
msgid ""
"On output, if *newline* is ``None``, any ``'\\n'`` characters written are "
"translated to the system default line separator, :data:`os.linesep`.  If "
"*newline* is ``''``, no translation takes place.  If *newline* is any of the "
"other legal values, any ``'\\n'`` characters written are translated to the "
"given string."
msgstr ""

#: ../Doc/library/io.rst:165
msgid ""
"If *closefd* is ``False`` and a file descriptor rather than a filename was "
"given, the underlying file descriptor will be kept open when the file is "
"closed.  If a filename is given *closefd* has no effect and must be ``True`` "
"(the default)."
msgstr ""

#: ../Doc/library/io.rst:170
msgid ""
"The type of file object returned by the :func:`.open` function depends on "
"the mode.  When :func:`.open` is used to open a file in a text mode "
"(``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), it returns a subclass of :"
"class:`TextIOBase` (specifically :class:`TextIOWrapper`).  When used to open "
"a file in a binary mode with buffering, the returned class is a subclass of :"
"class:`BufferedIOBase`.  The exact class varies: in read binary mode, it "
"returns a :class:`BufferedReader`; in write binary and append binary modes, "
"it returns a :class:`BufferedWriter`, and in read/write mode, it returns a :"
"class:`BufferedRandom`.  When buffering is disabled, the raw stream, a "
"subclass of :class:`RawIOBase`, :class:`FileIO`, is returned."
msgstr ""

# f421fa1c1b694af68f6f9237fc6933b0
#: ../Doc/library/io.rst:181
msgid ""
"It is also possible to use an :class:`unicode` or :class:`bytes` string as a "
"file for both reading and writing.  For :class:`unicode` strings :class:"
"`StringIO` can be used like a file opened in text mode, and for :class:"
"`bytes` a :class:`BytesIO` can be used like a file opened in a binary mode."
msgstr ""

#: ../Doc/library/io.rst:190
msgid ""
"Error raised when blocking would occur on a non-blocking stream.  It "
"inherits :exc:`IOError`."
msgstr ""

#: ../Doc/library/io.rst:193
msgid ""
"In addition to those of :exc:`IOError`, :exc:`BlockingIOError` has one "
"attribute:"
msgstr ""

#: ../Doc/library/io.rst:198
msgid ""
"An integer containing the number of characters written to the stream before "
"it blocked."
msgstr ""

#: ../Doc/library/io.rst:204
msgid ""
"An exception inheriting :exc:`IOError` and :exc:`ValueError` that is raised "
"when an unsupported operation is called on a stream."
msgstr ""

#: ../Doc/library/io.rst:209
msgid "I/O Base Classes"
msgstr ""

#: ../Doc/library/io.rst:213
msgid ""
"The abstract base class for all I/O classes, acting on streams of bytes. "
"There is no public constructor."
msgstr ""

#: ../Doc/library/io.rst:216
msgid ""
"This class provides empty abstract implementations for many methods that "
"derived classes can override selectively; the default implementations "
"represent a file that cannot be read, written or seeked."
msgstr ""

#: ../Doc/library/io.rst:221
msgid ""
"Even though :class:`IOBase` does not declare :meth:`read`, :meth:`readinto`, "
"or :meth:`write` because their signatures will vary, implementations and "
"clients should consider those methods part of the interface.  Also, "
"implementations may raise a :exc:`IOError` when operations they do not "
"support are called."
msgstr ""

# 9f79cc48307742ceb98f16c8738c2de6
#: ../Doc/library/io.rst:227
msgid ""
"The basic type used for binary data read from or written to a file is :class:"
"`bytes` (also known as :class:`str`).  :class:`bytearray`\\s are accepted "
"too, and in some cases (such as :class:`readinto`) required. Text I/O "
"classes work with :class:`unicode` data."
msgstr ""

#: ../Doc/library/io.rst:232
msgid ""
"Note that calling any method (even inquiries) on a closed stream is "
"undefined.  Implementations may raise :exc:`IOError` in this case."
msgstr ""

# 974fb16300ab4dadba7186866199d883
#: ../Doc/library/io.rst:235
msgid ""
"IOBase (and its subclasses) support the iterator protocol, meaning that an :"
"class:`IOBase` object can be iterated over yielding the lines in a stream. "
"Lines are defined slightly differently depending on whether the stream is a "
"binary stream (yielding :class:`bytes`), or a text stream (yielding :class:"
"`unicode` strings).  See :meth:`~IOBase.readline` below."
msgstr ""

#: ../Doc/library/io.rst:241
msgid ""
"IOBase is also a context manager and therefore supports the :keyword:`with` "
"statement.  In this example, *file* is closed after the :keyword:`with` "
"statement's suite is finished---even if an exception occurs::"
msgstr ""

#: ../Doc/library/io.rst:248
msgid ":class:`IOBase` provides these data attributes and methods:"
msgstr ""

#: ../Doc/library/io.rst:252
msgid ""
"Flush and close this stream. This method has no effect if the file is "
"already closed. Once the file is closed, any operation on the file (e.g. "
"reading or writing) will raise a :exc:`ValueError`."
msgstr ""

#: ../Doc/library/io.rst:256
msgid ""
"As a convenience, it is allowed to call this method more than once; only the "
"first call, however, will have an effect."
msgstr ""

#: ../Doc/library/io.rst:261
msgid "True if the stream is closed."
msgstr ""

#: ../Doc/library/io.rst:265
msgid ""
"Return the underlying file descriptor (an integer) of the stream if it "
"exists.  An :exc:`IOError` is raised if the IO object does not use a file "
"descriptor."
msgstr ""

#: ../Doc/library/io.rst:271
msgid ""
"Flush the write buffers of the stream if applicable.  This does nothing for "
"read-only and non-blocking streams."
msgstr ""

#: ../Doc/library/io.rst:276
msgid ""
"Return ``True`` if the stream is interactive (i.e., connected to a terminal/"
"tty device)."
msgstr ""

#: ../Doc/library/io.rst:281
msgid ""
"Return ``True`` if the stream can be read from.  If False, :meth:`read` will "
"raise :exc:`IOError`."
msgstr ""

#: ../Doc/library/io.rst:286
msgid ""
"Read and return one line from the stream.  If *limit* is specified, at most "
"*limit* bytes will be read."
msgstr ""

#: ../Doc/library/io.rst:289
msgid ""
"The line terminator is always ``b'\\n'`` for binary files; for text files, "
"the *newlines* argument to :func:`.open` can be used to select the line "
"terminator(s) recognized."
msgstr ""

#: ../Doc/library/io.rst:295
msgid ""
"Read and return a list of lines from the stream.  *hint* can be specified to "
"control the number of lines read: no more lines will be read if the total "
"size (in bytes/characters) of all lines so far exceeds *hint*."
msgstr ""

#: ../Doc/library/io.rst:301
msgid ""
"Change the stream position to the given byte *offset*.  *offset* is "
"interpreted relative to the position indicated by *whence*.  Values for "
"*whence* are:"
msgstr ""

#: ../Doc/library/io.rst:305
msgid ""
":data:`SEEK_SET` or ``0`` -- start of the stream (the default); *offset* "
"should be zero or positive"
msgstr ""

#: ../Doc/library/io.rst:307
msgid ""
":data:`SEEK_CUR` or ``1`` -- current stream position; *offset* may be "
"negative"
msgstr ""

#: ../Doc/library/io.rst:309
msgid ""
":data:`SEEK_END` or ``2`` -- end of the stream; *offset* is usually negative"
msgstr ""

#: ../Doc/library/io.rst:312
msgid "Return the new absolute position."
msgstr ""

#: ../Doc/library/io.rst:319
msgid ""
"Return ``True`` if the stream supports random access.  If ``False``, :meth:"
"`seek`, :meth:`tell` and :meth:`truncate` will raise :exc:`IOError`."
msgstr ""

#: ../Doc/library/io.rst:324
msgid "Return the current stream position."
msgstr ""

#: ../Doc/library/io.rst:328
msgid ""
"Resize the stream to the given *size* in bytes (or the current position if "
"*size* is not specified).  The current stream position isn't changed. This "
"resizing can extend or reduce the current file size.  In case of extension, "
"the contents of the new file area depend on the platform (on most systems, "
"additional bytes are zero-filled, on Windows they're undetermined).  The new "
"file size is returned."
msgstr ""

#: ../Doc/library/io.rst:337
msgid ""
"Return ``True`` if the stream supports writing.  If ``False``, :meth:`write` "
"and :meth:`truncate` will raise :exc:`IOError`."
msgstr ""

#: ../Doc/library/io.rst:342
msgid ""
"Write a list of lines to the stream.  Line separators are not added, so it "
"is usual for each of the lines provided to have a line separator at the end."
msgstr ""

#: ../Doc/library/io.rst:349
msgid ""
"Base class for raw binary I/O.  It inherits :class:`IOBase`.  There is no "
"public constructor."
msgstr ""

#: ../Doc/library/io.rst:352
msgid ""
"Raw binary I/O typically provides low-level access to an underlying OS "
"device or API, and does not try to encapsulate it in high-level primitives "
"(this is left to Buffered I/O and Text I/O, described later in this page)."
msgstr ""

#: ../Doc/library/io.rst:356
msgid ""
"In addition to the attributes and methods from :class:`IOBase`, RawIOBase "
"provides the following methods:"
msgstr ""

#: ../Doc/library/io.rst:361
msgid ""
"Read up to *n* bytes from the object and return them.  As a convenience, if "
"*n* is unspecified or -1, :meth:`readall` is called.  Otherwise, only one "
"system call is ever made.  Fewer than *n* bytes may be returned if the "
"operating system call returns fewer than *n* bytes."
msgstr ""

#: ../Doc/library/io.rst:366
msgid ""
"If 0 bytes are returned, and *n* was not 0, this indicates end of file. If "
"the object is in non-blocking mode and no bytes are available, ``None`` is "
"returned."
msgstr ""

#: ../Doc/library/io.rst:372
msgid ""
"Read and return all the bytes from the stream until EOF, using multiple "
"calls to the stream if necessary."
msgstr ""

# eec1a1063d0146cd8e9d004a851f70ec
#: ../Doc/library/io.rst:377
msgid ""
"Read up to len(b) bytes into bytearray *b* and return the number of bytes "
"read.  If the object is in non-blocking mode and no bytes are available, "
"``None`` is returned."
msgstr ""

#: ../Doc/library/io.rst:383
msgid ""
"Write the given bytes or bytearray object, *b*, to the underlying raw stream "
"and return the number of bytes written.  This can be less than ``len(b)``, "
"depending on specifics of the underlying raw stream, and especially if it is "
"in non-blocking mode.  ``None`` is returned if the raw stream is set not to "
"block and no single byte could be readily written to it."
msgstr ""

#: ../Doc/library/io.rst:393
msgid ""
"Base class for binary streams that support some kind of buffering. It "
"inherits :class:`IOBase`. There is no public constructor."
msgstr ""

#: ../Doc/library/io.rst:396
msgid ""
"The main difference with :class:`RawIOBase` is that methods :meth:`read`, :"
"meth:`readinto` and :meth:`write` will try (respectively) to read as much "
"input as requested or to consume all given output, at the expense of making "
"perhaps more than one system call."
msgstr ""

#: ../Doc/library/io.rst:401
msgid ""
"In addition, those methods can raise :exc:`BlockingIOError` if the "
"underlying raw stream is in non-blocking mode and cannot take or give enough "
"data; unlike their :class:`RawIOBase` counterparts, they will never return "
"``None``."
msgstr ""

#: ../Doc/library/io.rst:406
msgid ""
"Besides, the :meth:`read` method does not have a default implementation that "
"defers to :meth:`readinto`."
msgstr ""

#: ../Doc/library/io.rst:409
msgid ""
"A typical :class:`BufferedIOBase` implementation should not inherit from a :"
"class:`RawIOBase` implementation, but wrap one, like :class:`BufferedWriter` "
"and :class:`BufferedReader` do."
msgstr ""

# 5a0c9d94147a477c8499228636dea215
#: ../Doc/library/io.rst:413
msgid ""
":class:`BufferedIOBase` provides or overrides these methods and attribute in "
"addition to those from :class:`IOBase`:"
msgstr ""

#: ../Doc/library/io.rst:418
msgid ""
"The underlying raw stream (a :class:`RawIOBase` instance) that :class:"
"`BufferedIOBase` deals with.  This is not part of the :class:"
"`BufferedIOBase` API and may not exist on some implementations."
msgstr ""

#: ../Doc/library/io.rst:424
msgid "Separate the underlying raw stream from the buffer and return it."
msgstr ""

#: ../Doc/library/io.rst:426
msgid ""
"After the raw stream has been detached, the buffer is in an unusable state."
msgstr ""

#: ../Doc/library/io.rst:429
msgid ""
"Some buffers, like :class:`BytesIO`, do not have the concept of a single raw "
"stream to return from this method.  They raise :exc:`UnsupportedOperation`."
msgstr ""

#: ../Doc/library/io.rst:437
msgid ""
"Read and return up to *n* bytes.  If the argument is omitted, ``None``, or "
"negative, data is read and returned until EOF is reached.  An empty bytes "
"object is returned if the stream is already at EOF."
msgstr ""

#: ../Doc/library/io.rst:441
msgid ""
"If the argument is positive, and the underlying raw stream is not "
"interactive, multiple raw reads may be issued to satisfy the byte count "
"(unless EOF is reached first).  But for interactive raw streams, at most one "
"raw read will be issued, and a short result does not imply that EOF is "
"imminent."
msgstr ""

#: ../Doc/library/io.rst:447 ../Doc/library/io.rst:465
msgid ""
"A :exc:`BlockingIOError` is raised if the underlying raw stream is in non "
"blocking-mode, and has no data available at the moment."
msgstr ""

#: ../Doc/library/io.rst:452
msgid ""
"Read and return up to *n* bytes, with at most one call to the underlying raw "
"stream's :meth:`~RawIOBase.read` method.  This can be useful if you are "
"implementing your own buffering on top of a :class:`BufferedIOBase` object."
msgstr ""

#: ../Doc/library/io.rst:459
msgid ""
"Read up to len(b) bytes into bytearray *b* and return the number of bytes "
"read."
msgstr ""

#: ../Doc/library/io.rst:462
msgid ""
"Like :meth:`read`, multiple reads may be issued to the underlying raw "
"stream, unless the latter is 'interactive'."
msgstr ""

#: ../Doc/library/io.rst:470
msgid ""
"Write the given bytes or bytearray object, *b* and return the number of "
"bytes written (never less than ``len(b)``, since if the write fails an :exc:"
"`IOError` will be raised).  Depending on the actual implementation, these "
"bytes may be readily written to the underlying stream, or held in a buffer "
"for performance and latency reasons."
msgstr ""

#: ../Doc/library/io.rst:476
msgid ""
"When in non-blocking mode, a :exc:`BlockingIOError` is raised if the data "
"needed to be written to the raw stream but it couldn't accept all the data "
"without blocking."
msgstr ""

#: ../Doc/library/io.rst:482
msgid "Raw File I/O"
msgstr ""

#: ../Doc/library/io.rst:486
msgid ""
":class:`FileIO` represents an OS-level file containing bytes data. It "
"implements the :class:`RawIOBase` interface (and therefore the :class:"
"`IOBase` interface, too)."
msgstr ""

#: ../Doc/library/io.rst:490
msgid "The *name* can be one of two things:"
msgstr ""

# 66939298ec864608b7267649db8f0315
#: ../Doc/library/io.rst:492
msgid "a string representing the path to the file which will be opened;"
msgstr ""

#: ../Doc/library/io.rst:493
msgid ""
"an integer representing the number of an existing OS-level file descriptor "
"to which the resulting :class:`FileIO` object will give access."
msgstr ""

#: ../Doc/library/io.rst:496
msgid ""
"The *mode* can be ``'r'``, ``'w'`` or ``'a'`` for reading (default), "
"writing, or appending.  The file will be created if it doesn't exist when "
"opened for writing or appending; it will be truncated when opened for "
"writing.  Add a ``'+'`` to the mode to allow simultaneous reading and "
"writing."
msgstr ""

#: ../Doc/library/io.rst:501
msgid ""
"The :meth:`read` (when called with a positive argument), :meth:`readinto` "
"and :meth:`write` methods on this class will only make one system call."
msgstr ""

#: ../Doc/library/io.rst:504
msgid ""
"In addition to the attributes and methods from :class:`IOBase` and :class:"
"`RawIOBase`, :class:`FileIO` provides the following data attributes and "
"methods:"
msgstr ""

#: ../Doc/library/io.rst:510
msgid "The mode as given in the constructor."
msgstr ""

#: ../Doc/library/io.rst:514
msgid ""
"The file name.  This is the file descriptor of the file when no name is "
"given in the constructor."
msgstr ""

#: ../Doc/library/io.rst:519
msgid "Buffered Streams"
msgstr ""

# 1ab60c7f72c1495e898955965ea1604a
#: ../Doc/library/io.rst:521
msgid ""
"Buffered I/O streams provide a higher-level interface to an I/O device than "
"raw I/O does."
msgstr ""

#: ../Doc/library/io.rst:526
msgid ""
"A stream implementation using an in-memory bytes buffer.  It inherits :class:"
"`BufferedIOBase`."
msgstr ""

# 9907ad0ff4c54c059cfcae0fae4e764a
#: ../Doc/library/io.rst:529
msgid "The argument *initial_bytes* is an optional initial :class:`bytes`."
msgstr ""

#: ../Doc/library/io.rst:531
msgid ""
":class:`BytesIO` provides or overrides these methods in addition to those "
"from :class:`BufferedIOBase` and :class:`IOBase`:"
msgstr ""

#: ../Doc/library/io.rst:536
msgid "Return ``bytes`` containing the entire contents of the buffer."
msgstr ""

#: ../Doc/library/io.rst:540
msgid "In :class:`BytesIO`, this is the same as :meth:`read`."
msgstr ""

#: ../Doc/library/io.rst:545
msgid ""
"A buffer providing higher-level access to a readable, sequential :class:"
"`RawIOBase` object.  It inherits :class:`BufferedIOBase`. When reading data "
"from this object, a larger amount of data may be requested from the "
"underlying raw stream, and kept in an internal buffer. The buffered data can "
"then be returned directly on subsequent reads."
msgstr ""

#: ../Doc/library/io.rst:551
msgid ""
"The constructor creates a :class:`BufferedReader` for the given readable "
"*raw* stream and *buffer_size*.  If *buffer_size* is omitted, :data:"
"`DEFAULT_BUFFER_SIZE` is used."
msgstr ""

#: ../Doc/library/io.rst:555
msgid ""
":class:`BufferedReader` provides or overrides these methods in addition to "
"those from :class:`BufferedIOBase` and :class:`IOBase`:"
msgstr ""

#: ../Doc/library/io.rst:560
msgid ""
"Return bytes from the stream without advancing the position.  At most one "
"single read on the raw stream is done to satisfy the call. The number of "
"bytes returned may be less or more than requested."
msgstr ""

#: ../Doc/library/io.rst:566
msgid ""
"Read and return *n* bytes, or if *n* is not given or negative, until EOF or "
"if the read call would block in non-blocking mode."
msgstr ""

#: ../Doc/library/io.rst:571
msgid ""
"Read and return up to *n* bytes with only one call on the raw stream.  If at "
"least one byte is buffered, only buffered bytes are returned. Otherwise, one "
"raw stream read call is made."
msgstr ""

#: ../Doc/library/io.rst:578
msgid ""
"A buffer providing higher-level access to a writeable, sequential :class:"
"`RawIOBase` object.  It inherits :class:`BufferedIOBase`. When writing to "
"this object, data is normally held into an internal buffer.  The buffer will "
"be written out to the underlying :class:`RawIOBase` object under various "
"conditions, including:"
msgstr ""

#: ../Doc/library/io.rst:584
msgid "when the buffer gets too small for all pending data;"
msgstr ""

#: ../Doc/library/io.rst:585
msgid "when :meth:`flush()` is called;"
msgstr ""

#: ../Doc/library/io.rst:586
msgid ""
"when a :meth:`seek()` is requested (for :class:`BufferedRandom` objects);"
msgstr ""

#: ../Doc/library/io.rst:587
msgid "when the :class:`BufferedWriter` object is closed or destroyed."
msgstr ""

#: ../Doc/library/io.rst:589
msgid ""
"The constructor creates a :class:`BufferedWriter` for the given writeable "
"*raw* stream.  If the *buffer_size* is not given, it defaults to :data:"
"`DEFAULT_BUFFER_SIZE`."
msgstr ""

#: ../Doc/library/io.rst:593 ../Doc/library/io.rst:620
msgid ""
"A third argument, *max_buffer_size*, is supported, but unused and deprecated."
msgstr ""

#: ../Doc/library/io.rst:595
msgid ""
":class:`BufferedWriter` provides or overrides these methods in addition to "
"those from :class:`BufferedIOBase` and :class:`IOBase`:"
msgstr ""

#: ../Doc/library/io.rst:600
msgid ""
"Force bytes held in the buffer into the raw stream.  A :exc:"
"`BlockingIOError` should be raised if the raw stream blocks."
msgstr ""

#: ../Doc/library/io.rst:605
msgid ""
"Write the bytes or bytearray object, *b* and return the number of bytes "
"written.  When in non-blocking mode, a :exc:`BlockingIOError` is raised if "
"the buffer needs to be written out but the raw stream blocks."
msgstr ""

#: ../Doc/library/io.rst:612
msgid ""
"A buffered interface to random access streams.  It inherits :class:"
"`BufferedReader` and :class:`BufferedWriter`, and further supports :meth:"
"`seek` and :meth:`tell` functionality."
msgstr ""

#: ../Doc/library/io.rst:616
msgid ""
"The constructor creates a reader and writer for a seekable raw stream, given "
"in the first argument.  If the *buffer_size* is omitted it defaults to :data:"
"`DEFAULT_BUFFER_SIZE`."
msgstr ""

#: ../Doc/library/io.rst:622
msgid ""
":class:`BufferedRandom` is capable of anything :class:`BufferedReader` or :"
"class:`BufferedWriter` can do."
msgstr ""

# bfe36bc20f8a454299e288258f9894db
#: ../Doc/library/io.rst:628
msgid ""
"A buffered I/O object combining two unidirectional :class:`RawIOBase` "
"objects -- one readable, the other writeable -- into a single bidirectional "
"endpoint.  It inherits :class:`BufferedIOBase`."
msgstr ""

#: ../Doc/library/io.rst:632
msgid ""
"*reader* and *writer* are :class:`RawIOBase` objects that are readable and "
"writeable respectively.  If the *buffer_size* is omitted it defaults to :"
"data:`DEFAULT_BUFFER_SIZE`."
msgstr ""

#: ../Doc/library/io.rst:636
msgid ""
"A fourth argument, *max_buffer_size*, is supported, but unused and "
"deprecated."
msgstr ""

#: ../Doc/library/io.rst:639
msgid ""
":class:`BufferedRWPair` implements all of :class:`BufferedIOBase`\\'s "
"methods except for :meth:`~BufferedIOBase.detach`, which raises :exc:"
"`UnsupportedOperation`."
msgstr ""

# d42377a1733b4be3b90e883872824ecb
#: ../Doc/library/io.rst:644
msgid ""
":class:`BufferedRWPair` does not attempt to synchronize accesses to its "
"underlying raw streams.  You should not pass it the same object as reader "
"and writer; use :class:`BufferedRandom` instead."
msgstr ""

#: ../Doc/library/io.rst:650 ../Doc/library/io.rst:858
msgid "Text I/O"
msgstr ""

# 4ba5f4fb17084aff833bea3a131b2591
#: ../Doc/library/io.rst:654
msgid ""
"Base class for text streams.  This class provides an unicode character and "
"line based interface to stream I/O.  There is no :meth:`readinto` method "
"because Python's :class:`unicode` strings are immutable. It inherits :class:"
"`IOBase`.  There is no public constructor."
msgstr ""

#: ../Doc/library/io.rst:659
msgid ""
":class:`TextIOBase` provides or overrides these data attributes and methods "
"in addition to those from :class:`IOBase`:"
msgstr ""

#: ../Doc/library/io.rst:664
msgid ""
"The name of the encoding used to decode the stream's bytes into strings, and "
"to encode strings into bytes."
msgstr ""

#: ../Doc/library/io.rst:669
msgid "The error setting of the decoder or encoder."
msgstr ""

#: ../Doc/library/io.rst:673
msgid ""
"A string, a tuple of strings, or ``None``, indicating the newlines "
"translated so far.  Depending on the implementation and the initial "
"constructor flags, this may not be available."
msgstr ""

#: ../Doc/library/io.rst:679
msgid ""
"The underlying binary buffer (a :class:`BufferedIOBase` instance) that :"
"class:`TextIOBase` deals with.  This is not part of the :class:`TextIOBase` "
"API and may not exist on some implementations."
msgstr ""

#: ../Doc/library/io.rst:685
msgid ""
"Separate the underlying binary buffer from the :class:`TextIOBase` and "
"return it."
msgstr ""

#: ../Doc/library/io.rst:688
msgid ""
"After the underlying buffer has been detached, the :class:`TextIOBase` is in "
"an unusable state."
msgstr ""

#: ../Doc/library/io.rst:691
msgid ""
"Some :class:`TextIOBase` implementations, like :class:`StringIO`, may not "
"have the concept of an underlying buffer and calling this method will raise :"
"exc:`UnsupportedOperation`."
msgstr ""

# 1da6af0d971f4ddb91942bdfd72d4227
#: ../Doc/library/io.rst:699
msgid ""
"Read and return at most *n* characters from the stream as a single :class:"
"`unicode`.  If *n* is negative or ``None``, reads until EOF."
msgstr ""

# b33a0150bfd6436d900994bcd7690acc
#: ../Doc/library/io.rst:704
msgid ""
"Read until newline or EOF and return a single ``unicode``.  If the stream is "
"already at EOF, an empty string is returned."
msgstr ""

# 3111177818b3434c818b5512dccf4751
#: ../Doc/library/io.rst:707
msgid "If *limit* is specified, at most *limit* characters will be read."
msgstr ""

# 78e17d00c0e74119a07c52c24c3b5979
#: ../Doc/library/io.rst:711
msgid ""
"Change the stream position to the given *offset*.  Behaviour depends on the "
"*whence* parameter:"
msgstr ""

# bd4edff6e7db4733bd664394242ed66d
#: ../Doc/library/io.rst:714
msgid ""
":data:`SEEK_SET` or ``0``: seek from the start of the stream (the default); "
"*offset* must either be a number returned by :meth:`TextIOBase.tell`, or "
"zero.  Any other *offset* value produces undefined behaviour."
msgstr ""

# fac3fc99e4fb4e9180feaa6ae4b52e13
#: ../Doc/library/io.rst:718
msgid ""
":data:`SEEK_CUR` or ``1``: \"seek\" to the current position; *offset* must "
"be zero, which is a no-operation (all other values are unsupported)."
msgstr ""

# 7389e0e7ccd542169bc2d913bf6b3ca9
#: ../Doc/library/io.rst:721
msgid ""
":data:`SEEK_END` or ``2``: seek to the end of the stream; *offset* must be "
"zero (all other values are unsupported)."
msgstr ""

# 1d8f02572e9a4b5ea9f115e72e001ea4
#: ../Doc/library/io.rst:724
msgid "Return the new absolute position as an opaque number."
msgstr ""

# 07a485068ca0458e9b409ea9a4853d7c
#: ../Doc/library/io.rst:731
msgid ""
"Return the current stream position as an opaque number.  The number does not "
"usually represent a number of bytes in the underlying binary storage."
msgstr ""

# ef4dfa70f1fb4acd9bbea63e7736d874
#: ../Doc/library/io.rst:737
msgid ""
"Write the :class:`unicode` string *s* to the stream and return the number of "
"characters written."
msgstr ""

#: ../Doc/library/io.rst:743
msgid ""
"A buffered text stream over a :class:`BufferedIOBase` binary stream. It "
"inherits :class:`TextIOBase`."
msgstr ""

#: ../Doc/library/io.rst:746
msgid ""
"*encoding* gives the name of the encoding that the stream will be decoded or "
"encoded with.  It defaults to :func:`locale.getpreferredencoding`."
msgstr ""

#: ../Doc/library/io.rst:749
msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled.  Pass ``'strict'`` to raise a :exc:`ValueError` "
"exception if there is an encoding error (the default of ``None`` has the "
"same effect), or pass ``'ignore'`` to ignore errors.  (Note that ignoring "
"encoding errors can lead to data loss.)  ``'replace'`` causes a replacement "
"marker (such as ``'?'``) to be inserted where there is malformed data.  When "
"writing, ``'xmlcharrefreplace'`` (replace with the appropriate XML character "
"reference) or ``'backslashreplace'`` (replace with backslashed escape "
"sequences) can be used.  Any other error handling name that has been "
"registered with :func:`codecs.register_error` is also valid."
msgstr ""

# 1299ed658efb4e97938491815b268b51
#: ../Doc/library/io.rst:763
msgid ""
"*newline* controls how line endings are handled.  It can be ``None``, "
"``''``, ``'\\n'``, ``'\\r'``, and ``'\\r\\n'``.  It works as follows:"
msgstr ""

# d76e90f8f1384ff2bfc978bc8b3abe92
#: ../Doc/library/io.rst:766
msgid ""
"On input, if *newline* is ``None``, :term:`universal newlines` mode is "
"enabled.  Lines in the input can end in ``'\\n'``, ``'\\r'``, or ``'\\r"
"\\n'``, and these are translated into ``'\\n'`` before being returned to the "
"caller.  If it is ``''``, universal newlines mode is enabled, but line "
"endings are returned to the caller untranslated.  If it has any of the other "
"legal values, input lines are only terminated by the given string, and the "
"line ending is returned to the caller untranslated."
msgstr ""

#: ../Doc/library/io.rst:780
msgid ""
"If *line_buffering* is ``True``, :meth:`flush` is implied when a call to "
"write contains a newline character."
msgstr ""

#: ../Doc/library/io.rst:783
msgid ""
":class:`TextIOWrapper` provides one attribute in addition to those of :class:"
"`TextIOBase` and its parents:"
msgstr ""

#: ../Doc/library/io.rst:788
msgid "Whether line buffering is enabled."
msgstr ""

# 4655b517075a4eed90d335ebe60c62d1
#: ../Doc/library/io.rst:793
msgid ""
"An in-memory stream for unicode text.  It inherits :class:`TextIOWrapper`."
msgstr ""

# 74a89152e1e0462bae76a4af587043b8
#: ../Doc/library/io.rst:795
msgid ""
"The initial value of the buffer (an empty unicode string by default) can be "
"set by providing *initial_value*.  The *newline* argument works like that "
"of :class:`TextIOWrapper`.  The default is to do no newline translation."
msgstr ""

#: ../Doc/library/io.rst:800
msgid ""
":class:`StringIO` provides this method in addition to those from :class:"
"`TextIOWrapper` and its parents:"
msgstr ""

# 1f835c09a0ef4a439d5e88ff4188997d
#: ../Doc/library/io.rst:805
msgid ""
"Return a ``unicode`` containing the entire contents of the buffer at any "
"time before the :class:`StringIO` object's :meth:`close` method is called."
msgstr ""

#: ../Doc/library/io.rst:809 ../Doc/library/stringio.rst:43
#: ../Doc/library/stringio.rst:112 ../Doc/library/wsgiref.rst:117
#: ../Doc/library/wsgiref.rst:164 ../Doc/library/wsgiref.rst:281
#: ../Doc/library/wsgiref.rst:413
msgid "Example usage::"
msgstr ""

# 6794843144fb430db07569c3275eb0ab
#: ../Doc/library/io.rst:831
msgid ""
"A helper codec that decodes newlines for :term:`universal newlines` mode. It "
"inherits :class:`codecs.IncrementalDecoder`."
msgstr ""

# ce88a300277f4919883d373ab455907f
#: ../Doc/library/io.rst:836
msgid "Advanced topics"
msgstr ""

# 72074c34b7ee49dfa31164a43795fb7c
#: ../Doc/library/io.rst:838
msgid ""
"Here we will discuss several advanced topics pertaining to the concrete I/O "
"implementations described above."
msgstr ""

# e3a7908c09ce4f579d2838588b216035
#: ../Doc/library/io.rst:842
msgid "Performance"
msgstr ""

# afb8ca75fda64183b952e2df28480b51
#: ../Doc/library/io.rst:845
msgid "Binary I/O"
msgstr ""

# b9b0c95cd2b84c65a10f08e26a69428c
#: ../Doc/library/io.rst:847
msgid ""
"By reading and writing only large chunks of data even when the user asks for "
"a single byte, buffered I/O is designed to hide any inefficiency in calling "
"and executing the operating system's unbuffered I/O routines.  The gain will "
"vary very much depending on the OS and the kind of I/O which is performed "
"(for example, on some contemporary OSes such as Linux, unbuffered disk I/O "
"can be as fast as buffered I/O).  The bottom line, however, is that buffered "
"I/O will offer you predictable performance regardless of the platform and "
"the backing device.  Therefore, it is most always preferable to use buffered "
"I/O rather than unbuffered I/O."
msgstr ""

# 36116276bf394883a9d955bf43ad0e9a
#: ../Doc/library/io.rst:860
msgid ""
"Text I/O over a binary storage (such as a file) is significantly slower than "
"binary I/O over the same storage, because it implies conversions from "
"unicode to binary data using a character codec.  This can become noticeable "
"if you handle huge amounts of text data (for example very large log files). "
"Also, :meth:`TextIOWrapper.tell` and :meth:`TextIOWrapper.seek` are both "
"quite slow due to the reconstruction algorithm used."
msgstr ""

# 0c49f8c04bfb4cfab4241eadcfa26b79
#: ../Doc/library/io.rst:867
msgid ""
":class:`StringIO`, however, is a native in-memory unicode container and will "
"exhibit similar speed to :class:`BytesIO`."
msgstr ""

# 27b0c4b14265408fa327756735e3983f
#: ../Doc/library/io.rst:871
msgid "Multi-threading"
msgstr ""

# 5999ee649d1142129d59397c23cc04d7
#: ../Doc/library/io.rst:873
msgid ""
":class:`FileIO` objects are thread-safe to the extent that the operating "
"system calls (such as ``read(2)`` under Unix) they are wrapping are thread-"
"safe too."
msgstr ""

# 9eabc816ba0e4a9eaf4d96b73579afc1
#: ../Doc/library/io.rst:877
msgid ""
"Binary buffered objects (instances of :class:`BufferedReader`, :class:"
"`BufferedWriter`, :class:`BufferedRandom` and :class:`BufferedRWPair`) "
"protect their internal structures using a lock; it is therefore safe to call "
"them from multiple threads at once."
msgstr ""

# eaaa4e59e25c4ab58aa84b151a407e14
#: ../Doc/library/io.rst:882
msgid ":class:`TextIOWrapper` objects are not thread-safe."
msgstr ""

# 1aed9ad4d0074824848a92e9ae12c6c2
#: ../Doc/library/io.rst:885
msgid "Reentrancy"
msgstr ""

# 2da63d0a28224552b5646a3ff0d5944d
#: ../Doc/library/io.rst:887
msgid ""
"Binary buffered objects (instances of :class:`BufferedReader`, :class:"
"`BufferedWriter`, :class:`BufferedRandom` and :class:`BufferedRWPair`) are "
"not reentrant.  While reentrant calls will not happen in normal situations, "
"they can arise if you are doing I/O in a :mod:`signal` handler.  If it is "
"attempted to enter a buffered object again while already being accessed "
"*from the same thread*, then a :exc:`RuntimeError` is raised."
msgstr ""

# 0d6b7a3065544e0fbb5b5f38dee7dfaa
#: ../Doc/library/io.rst:894
msgid ""
"The above implicitly extends to text files, since the :func:`open()` "
"function will wrap a buffered object inside a :class:`TextIOWrapper`.  This "
"includes standard streams and therefore affects the built-in function :func:"
"`print()` as well."
msgstr ""

#: ../Doc/library/ipc.rst:6
msgid "Interprocess Communication and Networking"
msgstr ""

#: ../Doc/library/ipc.rst:8
msgid ""
"The modules described in this chapter provide mechanisms for different "
"processes to communicate."
msgstr ""

#: ../Doc/library/ipc.rst:11
msgid ""
"Some modules only work for two processes that are on the same machine, e.g. :"
"mod:`signal` and :mod:`subprocess`.  Other modules support networking "
"protocols that two or more processes can used to communicate across machines."
msgstr ""

#: ../Doc/library/itertools.rst:3
msgid ":mod:`itertools` --- Functions creating iterators for efficient looping"
msgstr ""

#: ../Doc/library/itertools.rst:17
msgid ""
"This module implements a number of :term:`iterator` building blocks inspired "
"by constructs from APL, Haskell, and SML.  Each has been recast in a form "
"suitable for Python."
msgstr ""

#: ../Doc/library/itertools.rst:21
msgid ""
"The module standardizes a core set of fast, memory efficient tools that are "
"useful by themselves or in combination.  Together, they form an \"iterator "
"algebra\" making it possible to construct specialized tools succinctly and "
"efficiently in pure Python."
msgstr ""

# deb7db37faf845728c62ba50b2bbba1e
#: ../Doc/library/itertools.rst:26
msgid ""
"For instance, SML provides a tabulation tool: ``tabulate(f)`` which produces "
"a sequence ``f(0), f(1), ...``.  The same effect can be achieved in Python "
"by combining :func:`imap` and :func:`count` to form ``imap(f, count())``."
msgstr ""

# dda9e004248a4878bc30925fb5a2db45
#: ../Doc/library/itertools.rst:30
msgid ""
"These tools and their built-in counterparts also work well with the high-"
"speed functions in the :mod:`operator` module.  For example, the "
"multiplication operator can be mapped across two vectors to form an "
"efficient dot-product: ``sum(imap(operator.mul, vector1, vector2))``."
msgstr ""

#: ../Doc/library/itertools.rst:36
msgid "**Infinite Iterators:**"
msgstr ""

#: ../Doc/library/itertools.rst:39 ../Doc/library/itertools.rst:49
#: ../Doc/library/itertools.rst:69
msgid "Iterator"
msgstr ""

#: ../Doc/library/itertools.rst:39 ../Doc/library/itertools.rst:49
#: ../Doc/library/itertools.rst:69
msgid "Arguments"
msgstr ""

#: ../Doc/library/itertools.rst:39 ../Doc/library/itertools.rst:49
#: ../Doc/library/itertools.rst:69
msgid "Results"
msgstr ""

#: ../Doc/library/itertools.rst:41
msgid ":func:`count`"
msgstr ""

#: ../Doc/library/itertools.rst:41
msgid "start, [step]"
msgstr ""

#: ../Doc/library/itertools.rst:41
msgid "start, start+step, start+2*step, ..."
msgstr ""

#: ../Doc/library/itertools.rst:41
msgid "``count(10) --> 10 11 12 13 14 ...``"
msgstr ""

#: ../Doc/library/itertools.rst:42
msgid ":func:`cycle`"
msgstr ""

#: ../Doc/library/itertools.rst:42
msgid "p"
msgstr ""

#: ../Doc/library/itertools.rst:42
msgid "p0, p1, ... plast, p0, p1, ..."
msgstr ""

#: ../Doc/library/itertools.rst:42
msgid "``cycle('ABCD') --> A B C D A B C D ...``"
msgstr ""

#: ../Doc/library/itertools.rst:43
msgid ":func:`repeat`"
msgstr ""

#: ../Doc/library/itertools.rst:43
msgid "elem [,n]"
msgstr ""

#: ../Doc/library/itertools.rst:43
msgid "elem, elem, elem, ... endlessly or up to n times"
msgstr ""

#: ../Doc/library/itertools.rst:43
msgid "``repeat(10, 3) --> 10 10 10``"
msgstr ""

#: ../Doc/library/itertools.rst:46
msgid "**Iterators terminating on the shortest input sequence:**"
msgstr ""

#: ../Doc/library/itertools.rst:51
msgid ":func:`chain`"
msgstr ""

#: ../Doc/library/itertools.rst:51 ../Doc/library/itertools.rst:62
#: ../Doc/library/itertools.rst:63
msgid "p, q, ..."
msgstr ""

#: ../Doc/library/itertools.rst:51
msgid "p0, p1, ... plast, q0, q1, ..."
msgstr ""

#: ../Doc/library/itertools.rst:51
msgid "``chain('ABC', 'DEF') --> A B C D E F``"
msgstr ""

#: ../Doc/library/itertools.rst:52
msgid ":func:`compress`"
msgstr ""

#: ../Doc/library/itertools.rst:52
msgid "data, selectors"
msgstr ""

#: ../Doc/library/itertools.rst:52
msgid "(d[0] if s[0]), (d[1] if s[1]), ..."
msgstr ""

#: ../Doc/library/itertools.rst:52
msgid "``compress('ABCDEF', [1,0,1,0,1,1]) --> A C E F``"
msgstr ""

#: ../Doc/library/itertools.rst:53
msgid ":func:`dropwhile`"
msgstr ""

#: ../Doc/library/itertools.rst:53 ../Doc/library/itertools.rst:55
#: ../Doc/library/itertools.rst:56 ../Doc/library/itertools.rst:61
msgid "pred, seq"
msgstr ""

#: ../Doc/library/itertools.rst:53
msgid "seq[n], seq[n+1], starting when pred fails"
msgstr ""

#: ../Doc/library/itertools.rst:53
msgid "``dropwhile(lambda x: x<5, [1,4,6,4,1]) --> 6 4 1``"
msgstr ""

#: ../Doc/library/itertools.rst:54
msgid ":func:`groupby`"
msgstr ""

#: ../Doc/library/itertools.rst:54
msgid "iterable[, keyfunc]"
msgstr ""

#: ../Doc/library/itertools.rst:54
msgid "sub-iterators grouped by value of keyfunc(v)"
msgstr ""

# 6d28dff8d07e4e56b51c96612e5d41a0
#: ../Doc/library/itertools.rst:55
msgid ":func:`ifilter`"
msgstr ""

# 1fef61345859453f9db5d181ea8f318d
#: ../Doc/library/itertools.rst:55
msgid "elements of seq where pred(elem) is True"
msgstr ""

# 496f07f367504a6eba5a7309498f4be7
#: ../Doc/library/itertools.rst:55
msgid "``ifilter(lambda x: x%2, range(10)) --> 1 3 5 7 9``"
msgstr ""

# 1e46f6f4abc447f0ba3de67d9392cdf8
#: ../Doc/library/itertools.rst:56
msgid ":func:`ifilterfalse`"
msgstr ""

#: ../Doc/library/itertools.rst:56
msgid "elements of seq where pred(elem) is False"
msgstr ""

# 1ffa0fdcb26840918d314978c8a2c063
#: ../Doc/library/itertools.rst:56
msgid "``ifilterfalse(lambda x: x%2, range(10)) --> 0 2 4 6 8``"
msgstr ""

#: ../Doc/library/itertools.rst:57
msgid ":func:`islice`"
msgstr ""

#: ../Doc/library/itertools.rst:57
msgid "seq, [start,] stop [, step]"
msgstr ""

#: ../Doc/library/itertools.rst:57
msgid "elements from seq[start:stop:step]"
msgstr ""

#: ../Doc/library/itertools.rst:57
msgid "``islice('ABCDEFG', 2, None) --> C D E F G``"
msgstr ""

# 10774396e406449fbbeb7a7178efbf43
#: ../Doc/library/itertools.rst:58
msgid ":func:`imap`"
msgstr ""

# 15b98e9feebe40c2bc3a93131d4f6fe1
#: ../Doc/library/itertools.rst:58
msgid "func, p, q, ..."
msgstr ""

# 2b1f6998009741e9b968e260395790d2
#: ../Doc/library/itertools.rst:58
msgid "func(p0, q0), func(p1, q1), ..."
msgstr ""

# 99a66b41972d42dcabd41ab36b5fa56e
#: ../Doc/library/itertools.rst:58
msgid "``imap(pow, (2,3,10), (5,2,3)) --> 32 9 1000``"
msgstr ""

#: ../Doc/library/itertools.rst:59
msgid ":func:`starmap`"
msgstr ""

#: ../Doc/library/itertools.rst:59
msgid "func, seq"
msgstr ""

#: ../Doc/library/itertools.rst:59
msgid "func(\\*seq[0]), func(\\*seq[1]), ..."
msgstr ""

#: ../Doc/library/itertools.rst:59
msgid "``starmap(pow, [(2,5), (3,2), (10,3)]) --> 32 9 1000``"
msgstr ""

#: ../Doc/library/itertools.rst:60
msgid ":func:`tee`"
msgstr ""

#: ../Doc/library/itertools.rst:60
msgid "it, n"
msgstr ""

#: ../Doc/library/itertools.rst:60
msgid "it1, it2 , ... itn  splits one iterator into n"
msgstr ""

#: ../Doc/library/itertools.rst:61
msgid ":func:`takewhile`"
msgstr ""

#: ../Doc/library/itertools.rst:61
msgid "seq[0], seq[1], until pred fails"
msgstr ""

#: ../Doc/library/itertools.rst:61
msgid "``takewhile(lambda x: x<5, [1,4,6,4,1]) --> 1 4``"
msgstr ""

# 23f425b5ad364888aca1b974623f425a
#: ../Doc/library/itertools.rst:62
msgid ":func:`izip`"
msgstr ""

#: ../Doc/library/itertools.rst:62 ../Doc/library/itertools.rst:63
msgid "(p[0], q[0]), (p[1], q[1]), ..."
msgstr ""

# 4e6470c9bf014004b37513cb1b450a87
#: ../Doc/library/itertools.rst:62
msgid "``izip('ABCD', 'xy') --> Ax By``"
msgstr ""

# 96b1321c6bb74823a0a44939476a8e53
#: ../Doc/library/itertools.rst:63
msgid ":func:`izip_longest`"
msgstr ""

# 4ab196185bca4a70874d6b2e7ca54c17
#: ../Doc/library/itertools.rst:63
msgid "``izip_longest('ABCD', 'xy', fillvalue='-') --> Ax By C- D-``"
msgstr ""

#: ../Doc/library/itertools.rst:66
msgid "**Combinatoric generators:**"
msgstr ""

#: ../Doc/library/itertools.rst:71
msgid ":func:`product`"
msgstr ""

#: ../Doc/library/itertools.rst:71
msgid "p, q, ... [repeat=1]"
msgstr ""

#: ../Doc/library/itertools.rst:71
msgid "cartesian product, equivalent to a nested for-loop"
msgstr ""

#: ../Doc/library/itertools.rst:72
msgid ":func:`permutations`"
msgstr ""

#: ../Doc/library/itertools.rst:72
msgid "p[, r]"
msgstr ""

#: ../Doc/library/itertools.rst:72
msgid "r-length tuples, all possible orderings, no repeated elements"
msgstr ""

#: ../Doc/library/itertools.rst:73
msgid ":func:`combinations`"
msgstr ""

#: ../Doc/library/itertools.rst:73 ../Doc/library/itertools.rst:74
msgid "p, r"
msgstr ""

#: ../Doc/library/itertools.rst:73
msgid "r-length tuples, in sorted order, no repeated elements"
msgstr ""

#: ../Doc/library/itertools.rst:74
msgid ":func:`combinations_with_replacement`"
msgstr ""

#: ../Doc/library/itertools.rst:74
msgid "r-length tuples, in sorted order, with repeated elements"
msgstr ""

#: ../Doc/library/itertools.rst:75
msgid "``product('ABCD', repeat=2)``"
msgstr ""

#: ../Doc/library/itertools.rst:75
msgid "``AA AB AC AD BA BB BC BD CA CB CC CD DA DB DC DD``"
msgstr ""

#: ../Doc/library/itertools.rst:76
msgid "``permutations('ABCD', 2)``"
msgstr ""

#: ../Doc/library/itertools.rst:76
msgid "``AB AC AD BA BC BD CA CB CD DA DB DC``"
msgstr ""

#: ../Doc/library/itertools.rst:77
msgid "``combinations('ABCD', 2)``"
msgstr ""

#: ../Doc/library/itertools.rst:77
msgid "``AB AC AD BC BD CD``"
msgstr ""

#: ../Doc/library/itertools.rst:78
msgid "``combinations_with_replacement('ABCD', 2)``"
msgstr ""

#: ../Doc/library/itertools.rst:78
msgid "``AA AB AC AD BB BC BD CC CD DD``"
msgstr ""

#: ../Doc/library/itertools.rst:85
msgid "Itertool functions"
msgstr ""

#: ../Doc/library/itertools.rst:87
msgid ""
"The following module functions all construct and return iterators. Some "
"provide streams of infinite length, so they should only be accessed by "
"functions or loops that truncate the stream."
msgstr ""

#: ../Doc/library/itertools.rst:94
msgid ""
"Make an iterator that returns elements from the first iterable until it is "
"exhausted, then proceeds to the next iterable, until all of the iterables "
"are exhausted.  Used for treating consecutive sequences as a single "
"sequence. Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:108
msgid ""
"Alternate constructor for :func:`chain`.  Gets chained inputs from a single "
"iterable argument that is evaluated lazily.  Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:123
msgid "Return *r* length subsequences of elements from the input *iterable*."
msgstr ""

#: ../Doc/library/itertools.rst:125 ../Doc/library/itertools.rst:176
msgid ""
"Combinations are emitted in lexicographic sort order.  So, if the input "
"*iterable* is sorted, the combination tuples will be produced in sorted "
"order."
msgstr ""

#: ../Doc/library/itertools.rst:129
msgid ""
"Elements are treated as unique based on their position, not on their value.  "
"So if the input elements are unique, there will be no repeat values in each "
"combination."
msgstr ""

#: ../Doc/library/itertools.rst:155
msgid ""
"The code for :func:`combinations` can be also expressed as a subsequence of :"
"func:`permutations` after filtering entries where the elements are not in "
"sorted order (according to their position in the input pool)::"
msgstr ""

#: ../Doc/library/itertools.rst:166
msgid ""
"The number of items returned is ``n! / r! / (n-r)!`` when ``0 <= r <= n`` or "
"zero when ``r > n``."
msgstr ""

#: ../Doc/library/itertools.rst:173
msgid ""
"Return *r* length subsequences of elements from the input *iterable* "
"allowing individual elements to be repeated more than once."
msgstr ""

#: ../Doc/library/itertools.rst:180
msgid ""
"Elements are treated as unique based on their position, not on their value.  "
"So if the input elements are unique, the generated combinations will also be "
"unique."
msgstr ""

#: ../Doc/library/itertools.rst:203
msgid ""
"The code for :func:`combinations_with_replacement` can be also expressed as "
"a subsequence of :func:`product` after filtering entries where the elements "
"are not in sorted order (according to their position in the input pool)::"
msgstr ""

#: ../Doc/library/itertools.rst:214
msgid ""
"The number of items returned is ``(n+r-1)! / r! / (n-1)!`` when ``n > 0``."
msgstr ""

#: ../Doc/library/itertools.rst:220
msgid ""
"Make an iterator that filters elements from *data* returning only those that "
"have a corresponding element in *selectors* that evaluates to ``True``. "
"Stops when either the *data* or *selectors* iterables has been exhausted. "
"Equivalent to::"
msgstr ""

# 7273e16ee2a44c2ab9cf718a02176ce3
#: ../Doc/library/itertools.rst:234
msgid ""
"Make an iterator that returns evenly spaced values starting with *n*. Often "
"used as an argument to :func:`imap` to generate consecutive data points. "
"Also, used with :func:`izip` to add sequence numbers.  Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:246
msgid ""
"When counting with floating point numbers, better accuracy can sometimes be "
"achieved by substituting multiplicative code such as: ``(start + step * i "
"for i in count())``."
msgstr ""

#: ../Doc/library/itertools.rst:255
msgid ""
"Make an iterator returning elements from the iterable and saving a copy of "
"each. When the iterable is exhausted, return elements from the saved copy.  "
"Repeats indefinitely.  Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:269
msgid ""
"Note, this member of the toolkit may require significant auxiliary storage "
"(depending on the length of the iterable)."
msgstr ""

#: ../Doc/library/itertools.rst:275
msgid ""
"Make an iterator that drops elements from the iterable as long as the "
"predicate is true; afterwards, returns every element.  Note, the iterator "
"does not produce *any* output until the predicate first becomes false, so it "
"may have a lengthy start-up time.  Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:293
msgid ""
"Make an iterator that returns consecutive keys and groups from the "
"*iterable*. The *key* is a function computing a key value for each element.  "
"If not specified or is ``None``, *key* defaults to an identity function and "
"returns the element unchanged.  Generally, the iterable needs to already be "
"sorted on the same key function."
msgstr ""

#: ../Doc/library/itertools.rst:299
msgid ""
"The operation of :func:`groupby` is similar to the ``uniq`` filter in Unix.  "
"It generates a break or new group every time the value of the key function "
"changes (which is why it is usually necessary to have sorted the data using "
"the same key function).  That behavior differs from SQL's GROUP BY which "
"aggregates common elements regardless of their input order."
msgstr ""

#: ../Doc/library/itertools.rst:305
msgid ""
"The returned group is itself an iterator that shares the underlying iterable "
"with :func:`groupby`.  Because the source is shared, when the :func:"
"`groupby` object is advanced, the previous group is no longer visible.  So, "
"if that data is needed later, it should be stored as a list::"
msgstr ""

#: ../Doc/library/itertools.rst:317
msgid ":func:`groupby` is equivalent to::"
msgstr ""

# 779f7e0bcd4c4f989d9d340953278aeb
#: ../Doc/library/itertools.rst:347
msgid ""
"Make an iterator that filters elements from iterable returning only those "
"for which the predicate is ``True``. If *predicate* is ``None``, return the "
"items that are true. Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:362
msgid ""
"Make an iterator that filters elements from iterable returning only those "
"for which the predicate is ``False``. If *predicate* is ``None``, return the "
"items that are false. Equivalent to::"
msgstr ""

# ce531ad7493c496ab5b79fba84e18582
#: ../Doc/library/itertools.rst:377
msgid ""
"Make an iterator that computes the function using arguments from each of the "
"iterables.  If *function* is set to ``None``, then :func:`imap` returns the "
"arguments as a tuple.  Like :func:`map` but stops when the shortest iterable "
"is exhausted instead of filling in ``None`` for shorter iterables.  The "
"reason for the difference is that infinite iterator arguments are typically "
"an error for :func:`map` (because the output is fully evaluated) but "
"represent a common and useful way of supplying arguments to :func:`imap`. "
"Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:399
msgid ""
"Make an iterator that returns selected elements from the iterable. If "
"*start* is non-zero, then elements from the iterable are skipped until start "
"is reached. Afterward, elements are returned consecutively unless *step* is "
"set higher than one which results in items being skipped.  If *stop* is "
"``None``, then iteration continues until the iterator is exhausted, if at "
"all; otherwise, it stops at the specified position.  Unlike regular "
"slicing, :func:`islice` does not support negative values for *start*, "
"*stop*, or *step*.  Can be used to extract related fields from data where "
"the internal structure has been flattened (for example, a multi-line report "
"may list a name field on every third line).  Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:422
msgid ""
"If *start* is ``None``, then iteration starts at zero. If *step* is "
"``None``, then the step defaults to one."
msgstr ""

# ada312ea42a048afaa2270d9a13545fd
#: ../Doc/library/itertools.rst:431
msgid ""
"Make an iterator that aggregates elements from each of the iterables. Like :"
"func:`zip` except that it returns an iterator instead of a list.  Used for "
"lock-step iteration over several iterables at a time.  Equivalent to::"
msgstr ""

# aa49528293d74e5e822cd436f05ed8a4
#: ../Doc/library/itertools.rst:445
msgid ""
"The left-to-right evaluation order of the iterables is guaranteed. This "
"makes possible an idiom for clustering a data series into n-length groups "
"using ``izip(*[iter(s)]*n)``."
msgstr ""

# 70307eee767747fba3d07aa493280286
#: ../Doc/library/itertools.rst:449
msgid ""
":func:`izip` should only be used with unequal length inputs when you don't "
"care about trailing, unmatched values from the longer iterables.  If those "
"values are important, use :func:`izip_longest` instead."
msgstr ""

#: ../Doc/library/itertools.rst:456
msgid ""
"Make an iterator that aggregates elements from each of the iterables. If the "
"iterables are of uneven length, missing values are filled-in with "
"*fillvalue*. Iteration continues until the longest iterable is exhausted.  "
"Equivalent to::"
msgstr ""

# 81438ed4cbe84e1fadc7f27faa342c15
#: ../Doc/library/itertools.rst:480
msgid ""
"If one of the iterables is potentially infinite, then the :func:"
"`izip_longest` function should be wrapped with something that limits the "
"number of calls (for example :func:`islice` or :func:`takewhile`).  If not "
"specified, *fillvalue* defaults to ``None``."
msgstr ""

#: ../Doc/library/itertools.rst:489
msgid ""
"Return successive *r* length permutations of elements in the *iterable*."
msgstr ""

#: ../Doc/library/itertools.rst:491
msgid ""
"If *r* is not specified or is ``None``, then *r* defaults to the length of "
"the *iterable* and all possible full-length permutations are generated."
msgstr ""

#: ../Doc/library/itertools.rst:495
msgid ""
"Permutations are emitted in lexicographic sort order.  So, if the input "
"*iterable* is sorted, the permutation tuples will be produced in sorted "
"order."
msgstr ""

#: ../Doc/library/itertools.rst:499
msgid ""
"Elements are treated as unique based on their position, not on their value.  "
"So if the input elements are unique, there will be no repeat values in each "
"permutation."
msgstr ""

#: ../Doc/library/itertools.rst:530
msgid ""
"The code for :func:`permutations` can be also expressed as a subsequence of :"
"func:`product`, filtered to exclude entries with repeated elements (those "
"from the same position in the input pool)::"
msgstr ""

#: ../Doc/library/itertools.rst:542
msgid ""
"The number of items returned is ``n! / (n-r)!`` when ``0 <= r <= n`` or zero "
"when ``r > n``."
msgstr ""

#: ../Doc/library/itertools.rst:549
msgid "Cartesian product of input iterables."
msgstr ""

#: ../Doc/library/itertools.rst:551
msgid ""
"Equivalent to nested for-loops in a generator expression. For example, "
"``product(A, B)`` returns the same as ``((x,y) for x in A for y in B)``."
msgstr ""

#: ../Doc/library/itertools.rst:554
msgid ""
"The nested loops cycle like an odometer with the rightmost element advancing "
"on every iteration.  This pattern creates a lexicographic ordering so that "
"if the input's iterables are sorted, the product tuples are emitted in "
"sorted order."
msgstr ""

#: ../Doc/library/itertools.rst:559
msgid ""
"To compute the product of an iterable with itself, specify the number of "
"repetitions with the optional *repeat* keyword argument.  For example, "
"``product(A, repeat=4)`` means the same as ``product(A, A, A, A)``."
msgstr ""

#: ../Doc/library/itertools.rst:563
msgid ""
"This function is equivalent to the following code, except that the actual "
"implementation does not build up intermediate results in memory::"
msgstr ""

# febd1b166a0443a99c8cd5a9cfff1bf2
#: ../Doc/library/itertools.rst:580
msgid ""
"Make an iterator that returns *object* over and over again. Runs "
"indefinitely unless the *times* argument is specified. Used as argument to :"
"func:`imap` for invariant function parameters.  Also used with :func:`izip` "
"to create constant fields in a tuple record.  Equivalent to::"
msgstr ""

# 9ae12324eaa04aff82202b17ea40c508
#: ../Doc/library/itertools.rst:594
msgid ""
"A common use for *repeat* is to supply a stream of constant values to *imap* "
"or *zip*::"
msgstr ""

# be712a55290847f89fe835fdbe87442e
#: ../Doc/library/itertools.rst:602
msgid ""
"Make an iterator that computes the function using arguments obtained from "
"the iterable.  Used instead of :func:`imap` when argument parameters are "
"already grouped in tuples from a single iterable (the data has been \"pre-"
"zipped\").  The difference between :func:`imap` and :func:`starmap` "
"parallels the distinction between ``function(a,b)`` and ``function(*c)``. "
"Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:619
msgid ""
"Make an iterator that returns elements from the iterable as long as the "
"predicate is true.  Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:633
msgid ""
"Return *n* independent iterators from a single iterable.  Equivalent to::"
msgstr ""

#: ../Doc/library/itertools.rst:647
msgid ""
"Once :func:`tee` has made a split, the original *iterable* should not be "
"used anywhere else; otherwise, the *iterable* could get advanced without the "
"tee objects being informed."
msgstr ""

#: ../Doc/library/itertools.rst:651
msgid ""
"This itertool may require significant auxiliary storage (depending on how "
"much temporary data needs to be stored). In general, if one iterator uses "
"most or all of the data before another iterator starts, it is faster to use :"
"func:`list` instead of :func:`tee`."
msgstr ""

#: ../Doc/library/itertools.rst:664
msgid ""
"This section shows recipes for creating an extended toolset using the "
"existing itertools as building blocks."
msgstr ""

#: ../Doc/library/itertools.rst:667
msgid ""
"The extended tools offer the same high performance as the underlying "
"toolset. The superior memory performance is kept by processing elements one "
"at a time rather than bringing the whole iterable into memory all at once. "
"Code volume is kept small by linking the tools together in a functional "
"style which helps eliminate temporary variables.  High speed is retained by "
"preferring \"vectorized\" building blocks over the use of for-loops and :"
"term:`generator`\\s which incur interpreter overhead."
msgstr ""

#: ../Doc/library/itertools.rst:832
msgid ""
"Note, many of the above recipes can be optimized by replacing global lookups "
"with local variables defined as default values.  For example, the "
"*dotproduct* recipe can be written as::"
msgstr ""

# 5e903991dadc4d08ade6fddd3fd5d7e3
#: ../Doc/library/jpeg.rst:3
msgid ":mod:`jpeg` --- Read and write JPEG files"
msgstr ""

# e0307333ad9e4c36b4786631ea44f28a
#: ../Doc/library/jpeg.rst:17
msgid ""
"The module :mod:`jpeg` provides access to the jpeg compressor and "
"decompressor written by the Independent JPEG Group (IJG). JPEG is a standard "
"for compressing pictures; it is defined in ISO 10918.  For details on JPEG "
"or the Independent JPEG Group software refer to the JPEG standard or the "
"documentation provided with the software."
msgstr ""

# 455bfc108cc4459ea8b8c9df0f999d74
#: ../Doc/library/jpeg.rst:28
msgid ""
"A portable interface to JPEG image files is available with the Python "
"Imaging Library (PIL) by Fredrik Lundh.  Information on PIL is available at "
"http://www.pythonware.com/products/pil/."
msgstr ""

# e21a796a34a14ca1a4cc49ed70ffec3e
#: ../Doc/library/jpeg.rst:32
msgid "The :mod:`jpeg` module defines an exception and some functions."
msgstr ""

# 03bf39fccf3444008d4fd4da825e064e
#: ../Doc/library/jpeg.rst:37
msgid ""
"Exception raised by :func:`compress` and :func:`decompress` in case of "
"errors."
msgstr ""

# f6138ba7043e476b871de4308d807372
#: ../Doc/library/jpeg.rst:44
msgid ""
"Treat data as a pixmap of width *w* and height *h*, with *b* bytes per "
"pixel. The data is in SGI GL order, so the first pixel is in the lower-left "
"corner. This means that :func:`gl.lrectread` return data can immediately be "
"passed to :func:`compress`. Currently only 1 byte and 4 byte pixels are "
"allowed, the former being treated as greyscale and the latter as RGB color. :"
"func:`compress` returns a string that contains the compressed picture, in "
"JFIF format."
msgstr ""

# 275ffe8b11a24121aa90e47847435948
#: ../Doc/library/jpeg.rst:56
msgid ""
"Data is a string containing a picture in JFIF format. It returns a tuple ``"
"(data, width, height, bytesperpixel)``.  Again, the data is suitable to pass "
"to :func:`gl.lrectwrite`."
msgstr ""

# 194f305c37434400b4747c09131249e7
#: ../Doc/library/jpeg.rst:63
msgid ""
"Set various options.  Subsequent :func:`compress` and :func:`decompress` "
"calls will use these options.  The following options are available:"
msgstr ""

#: ../Doc/library/jpeg.rst:67 ../Doc/library/string.rst:342
#: ../Doc/library/string.rst:367 ../Doc/library/ttk.rst:107
msgid "Option"
msgstr ""

# cef3bed89f714bfea8362608b7f3604e
#: ../Doc/library/jpeg.rst:67
msgid "Effect"
msgstr ""

# 42fc34a48106472ab60cc1090f123009
#: ../Doc/library/jpeg.rst:69
msgid "``'forcegray'``"
msgstr ""

# 669947f47ed643718c158b458c4fb320
#: ../Doc/library/jpeg.rst:69
msgid "Force output to be grayscale, even if input is RGB."
msgstr ""

# 54200507c9e249a4bda747401c238e4d
#: ../Doc/library/jpeg.rst:72
msgid "``'quality'``"
msgstr ""

# f243356f46fb498287794de3c6208786
#: ../Doc/library/jpeg.rst:72
msgid ""
"Set the quality of the compressed image to a value between ``0`` and ``100`` "
"(default is ``75``).  This only affects compression."
msgstr ""

# 711a61927b96439bba331e79077c127b
#: ../Doc/library/jpeg.rst:76
msgid "``'optimize'``"
msgstr ""

# 03eca323fbc3481592c793d83c9015b6
#: ../Doc/library/jpeg.rst:76
msgid ""
"Perform Huffman table optimization.  Takes longer, but results in smaller "
"compressed image.  This only affects compression."
msgstr ""

# 491d7fbbbd2745a1940e2b8b51a41169
#: ../Doc/library/jpeg.rst:80
msgid "``'smooth'``"
msgstr ""

# c8c9b76ef88d4100bf7d371c007f0e09
#: ../Doc/library/jpeg.rst:80
msgid ""
"Perform inter-block smoothing on uncompressed image.  Only useful for low- "
"quality images.  This only affects decompression."
msgstr ""

# 3c1415b2544b416c8c7b3886aea51151
#: ../Doc/library/jpeg.rst:90
msgid ""
"The canonical reference for the JPEG image format, by Pennebaker and "
"Mitchell."
msgstr ""

# 1de59d9ef1464a46b1e55590fbb64ca7
#: ../Doc/library/jpeg.rst:93
msgid ""
"The ISO standard for JPEG is also published as ITU T.81.  This is available "
"online in PDF form."
msgstr ""

#: ../Doc/library/json.rst:2
msgid ":mod:`json` --- JSON encoder and decoder"
msgstr ""

# 67928ff3c5e3490cb38740e6c5dd73e2
#: ../Doc/library/json.rst:10
msgid ""
"`JSON (JavaScript Object Notation) <http://json.org>`_, specified by :rfc:"
"`4627`, is a lightweight data interchange format based on a subset of "
"`JavaScript <http://en.wikipedia.org/wiki/JavaScript>`_ syntax (`ECMA-262 "
"3rd edition <http://www.ecma-international.org/publications/files/ECMA-ST-"
"ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf>`_)."
msgstr ""

#: ../Doc/library/json.rst:15
msgid ""
":mod:`json` exposes an API familiar to users of the standard library :mod:"
"`marshal` and :mod:`pickle` modules."
msgstr ""

#: ../Doc/library/json.rst:18
msgid "Encoding basic Python object hierarchies::"
msgstr ""

#: ../Doc/library/json.rst:37
msgid "Compact encoding::"
msgstr ""

#: ../Doc/library/json.rst:43
msgid "Pretty printing::"
msgstr ""

#: ../Doc/library/json.rst:52
msgid "Decoding JSON::"
msgstr ""

#: ../Doc/library/json.rst:64
msgid "Specializing JSON object decoding::"
msgstr ""

#: ../Doc/library/json.rst:79
msgid "Extending :class:`JSONEncoder`::"
msgstr ""

#: ../Doc/library/json.rst:98
msgid "Using json.tool from the shell to validate and pretty-print::"
msgstr ""

# 9242ff835de442d4ab24fbd78df0dfaa
#: ../Doc/library/json.rst:111
msgid ""
"JSON is a subset of `YAML <http://yaml.org/>`_ 1.2.  The JSON produced by "
"this module's default settings (in particular, the default *separators* "
"value) is also a subset of YAML 1.0 and 1.1.  This module can thus also be "
"used as a YAML serializer."
msgstr ""

#: ../Doc/library/json.rst:118
msgid "Basic Usage"
msgstr ""

# 82458d7374ff451283c886de7b37f5c0
#: ../Doc/library/json.rst:122
msgid ""
"Serialize *obj* as a JSON formatted stream to *fp* (a ``.write()``-"
"supporting :term:`file-like object`)."
msgstr ""

# d8f43f9e1dee46fb9533da5da2e3997a
#: ../Doc/library/json.rst:125
msgid ""
"If *skipkeys* is ``True`` (default: ``False``), then dict keys that are not "
"of a basic type (:class:`str`, :class:`unicode`, :class:`int`, :class:"
"`long`, :class:`float`, :class:`bool`, ``None``) will be skipped instead of "
"raising a :exc:`TypeError`."
msgstr ""

# 41105bb0836a406f96edce9f244eac68
#: ../Doc/library/json.rst:130
msgid ""
"If *ensure_ascii* is ``True`` (the default), all non-ASCII characters in the "
"output are escaped with ``\\uXXXX`` sequences, and the result is a :class:"
"`str` instance consisting of ASCII characters only.  If *ensure_ascii* is "
"``False``, some chunks written to *fp* may be :class:`unicode` instances.  "
"This usually happens because the input contains unicode strings or the "
"*encoding* parameter is used.  Unless ``fp.write()`` explicitly understands :"
"class:`unicode` (as in :func:`codecs.getwriter`) this is likely to cause an "
"error."
msgstr ""

#: ../Doc/library/json.rst:139
msgid ""
"If *check_circular* is ``False`` (default: ``True``), then the circular "
"reference check for container types will be skipped and a circular reference "
"will result in an :exc:`OverflowError` (or worse)."
msgstr ""

#: ../Doc/library/json.rst:143
msgid ""
"If *allow_nan* is ``False`` (default: ``True``), then it will be a :exc:"
"`ValueError` to serialize out of range :class:`float` values (``nan``, "
"``inf``, ``-inf``) in strict compliance of the JSON specification, instead "
"of using the JavaScript equivalents (``NaN``, ``Infinity``, ``-Infinity``)."
msgstr ""

# 1aa90b4ffa6a47298fbe78a50efb0168
#: ../Doc/library/json.rst:148
msgid ""
"If *indent* is a non-negative integer, then JSON array elements and object "
"members will be pretty-printed with that indent level.  An indent level of "
"0, or negative, will only insert newlines.  ``None`` (the default) selects "
"the most compact representation."
msgstr ""

#: ../Doc/library/json.rst:153
msgid ""
"If *separators* is an ``(item_separator, dict_separator)`` tuple, then it "
"will be used instead of the default ``(', ', ': ')`` separators.  ``(',', "
"':')`` is the most compact JSON representation."
msgstr ""

# 2667d26e4629434dab43ea09aa39ceee
#: ../Doc/library/json.rst:157
msgid ""
"*encoding* is the character encoding for str instances, default is UTF-8."
msgstr ""

#: ../Doc/library/json.rst:159
msgid ""
"*default(obj)* is a function that should return a serializable version of "
"*obj* or raise :exc:`TypeError`.  The default simply raises :exc:`TypeError`."
msgstr ""

# 8ce3a74a53934422813fa0e3762905e3
#: ../Doc/library/json.rst:162
msgid ""
"To use a custom :class:`JSONEncoder` subclass (e.g. one that overrides the :"
"meth:`default` method to serialize additional types), specify it with the "
"*cls* kwarg; otherwise :class:`JSONEncoder` is used."
msgstr ""

# f31826fcb0044de4ba7f4b78ebe1c00f
#: ../Doc/library/json.rst:168
msgid ""
"Unlike :mod:`pickle` and :mod:`marshal`, JSON is not a framed protocol so "
"trying to serialize more objects with repeated calls to :func:`dump` and the "
"same *fp* will result in an invalid JSON file."
msgstr ""

# 0f7dfd78bbd54399a64b7919f421bebf
#: ../Doc/library/json.rst:174
msgid ""
"Serialize *obj* to a JSON formatted :class:`str`.  If *ensure_ascii* is "
"``False``, the result may contain non-ASCII characters and the return value "
"may be a :class:`unicode` instance."
msgstr ""

# b452714ad691406bba08915f16183963
#: ../Doc/library/json.rst:178
msgid "The arguments have the same meaning as in :func:`dump`."
msgstr ""

# 2f01407fc1a34493adb5925664225189
#: ../Doc/library/json.rst:182
msgid ""
"Keys in key/value pairs of JSON are always of the type :class:`str`. When a "
"dictionary is converted into JSON, all the keys of the dictionary are "
"coerced to strings. As a result of this, if a dictionary is convered into "
"JSON and then back into a dictionary, the dictionary may not equal the "
"original one. That is, ``loads(dumps(x)) != x`` if x has non-string keys."
msgstr ""

# db8e0471c761405a9d7be7491c0bd40f
#: ../Doc/library/json.rst:191
msgid ""
"Deserialize *fp* (a ``.read()``-supporting :term:`file-like object` "
"containing a JSON document) to a Python object."
msgstr ""

# 9071eb76c13d45e2b12053d2685efbcf
#: ../Doc/library/json.rst:194
msgid ""
"If the contents of *fp* are encoded with an ASCII based encoding other than "
"UTF-8 (e.g. latin-1), then an appropriate *encoding* name must be specified. "
"Encodings that are not ASCII based (such as UCS-2) are not allowed, and "
"should be wrapped with ``codecs.getreader(encoding)(fp)``, or simply decoded "
"to a :class:`unicode` object and passed to :func:`loads`."
msgstr ""

# cd740877bce84cbb9f5a97864b255f7c
#: ../Doc/library/json.rst:200
msgid ""
"*object_hook* is an optional function that will be called with the result of "
"any object literal decoded (a :class:`dict`).  The return value of "
"*object_hook* will be used instead of the :class:`dict`.  This feature can "
"be used to implement custom decoders (e.g. `JSON-RPC <http://www.jsonrpc."
"org>`_ class hinting)."
msgstr ""

#: ../Doc/library/json.rst:206
msgid ""
"*object_pairs_hook* is an optional function that will be called with the "
"result of any object literal decoded with an ordered list of pairs.  The "
"return value of *object_pairs_hook* will be used instead of the :class:"
"`dict`.  This feature can be used to implement custom decoders that rely on "
"the order that the key and value pairs are decoded (for example, :func:"
"`collections.OrderedDict` will remember the order of insertion). If "
"*object_hook* is also defined, the *object_pairs_hook* takes priority."
msgstr ""

#: ../Doc/library/json.rst:217 ../Doc/library/json.rst:308
msgid ""
"*parse_float*, if specified, will be called with the string of every JSON "
"float to be decoded.  By default, this is equivalent to ``float(num_str)``. "
"This can be used to use another datatype or parser for JSON floats (e.g. :"
"class:`decimal.Decimal`)."
msgstr ""

#: ../Doc/library/json.rst:222 ../Doc/library/json.rst:313
msgid ""
"*parse_int*, if specified, will be called with the string of every JSON int "
"to be decoded.  By default, this is equivalent to ``int(num_str)``.  This "
"can be used to use another datatype or parser for JSON integers (e.g. :class:"
"`float`)."
msgstr ""

# 4c0aa99a882a4d228f4cba72e7184ad0
#: ../Doc/library/json.rst:227
msgid ""
"*parse_constant*, if specified, will be called with one of the following "
"strings: ``'-Infinity'``, ``'Infinity'``, ``'NaN'``. This can be used to "
"raise an exception if invalid JSON numbers are encountered."
msgstr ""

# 8755820f4332451d84b63fb54cdf3895
#: ../Doc/library/json.rst:235
msgid ""
"To use a custom :class:`JSONDecoder` subclass, specify it with the ``cls`` "
"kwarg; otherwise :class:`JSONDecoder` is used.  Additional keyword arguments "
"will be passed to the constructor of the class."
msgstr ""

# 9fd39cf4d89d4b3f9fb5cfa4dd5aa239
#: ../Doc/library/json.rst:242
msgid ""
"Deserialize *s* (a :class:`str` or :class:`unicode` instance containing a "
"JSON document) to a Python object."
msgstr ""

# 723a770b9b4c4f5fa392fd49d018fa5c
#: ../Doc/library/json.rst:245
msgid ""
"If *s* is a :class:`str` instance and is encoded with an ASCII based "
"encoding other than UTF-8 (e.g. latin-1), then an appropriate *encoding* "
"name must be specified.  Encodings that are not ASCII based (such as UCS-2) "
"are not allowed and should be decoded to :class:`unicode` first."
msgstr ""

#: ../Doc/library/json.rst:250
msgid "The other arguments have the same meaning as in :func:`load`."
msgstr ""

# 4b17c9be4562455abd1ffd74b64b22c8
#: ../Doc/library/json.rst:254
msgid "Encoders and Decoders"
msgstr ""

#: ../Doc/library/json.rst:258
msgid "Simple JSON decoder."
msgstr ""

#: ../Doc/library/json.rst:260
msgid "Performs the following translations in decoding by default:"
msgstr ""

#: ../Doc/library/json.rst:263 ../Doc/library/json.rst:351
msgid "JSON"
msgstr ""

#: ../Doc/library/json.rst:263 ../Doc/library/json.rst:351
msgid "Python"
msgstr ""

#: ../Doc/library/json.rst:265 ../Doc/library/json.rst:353
msgid "object"
msgstr ""

#: ../Doc/library/json.rst:265 ../Doc/library/json.rst:353
msgid "dict"
msgstr ""

#: ../Doc/library/json.rst:267 ../Doc/library/json.rst:355
msgid "array"
msgstr ""

#: ../Doc/library/json.rst:271
msgid "number (int)"
msgstr ""

# b624f4048650414da20e3a29386ef8ae
#: ../Doc/library/json.rst:271
msgid "int, long"
msgstr ""

#: ../Doc/library/json.rst:273
msgid "number (real)"
msgstr ""

#: ../Doc/library/json.rst:275 ../Doc/library/json.rst:361
msgid "true"
msgstr ""

#: ../Doc/library/json.rst:275 ../Doc/library/json.rst:361
msgid "True"
msgstr ""

#: ../Doc/library/json.rst:277 ../Doc/library/json.rst:363
msgid "false"
msgstr ""

#: ../Doc/library/json.rst:277 ../Doc/library/json.rst:363
msgid "False"
msgstr ""

#: ../Doc/library/json.rst:279 ../Doc/library/json.rst:365
msgid "null"
msgstr ""

#: ../Doc/library/json.rst:279 ../Doc/library/json.rst:365
#: ../Doc/library/string.rst:414 ../Doc/library/string.rst:441
#: ../Doc/library/string.rst:500
msgid "None"
msgstr ""

#: ../Doc/library/json.rst:282
msgid ""
"It also understands ``NaN``, ``Infinity``, and ``-Infinity`` as their "
"corresponding ``float`` values, which is outside the JSON spec."
msgstr ""

# 96cb6afee4ef40008ec9e7abadb9c322
#: ../Doc/library/json.rst:285
msgid ""
"*encoding* determines the encoding used to interpret any :class:`str` "
"objects decoded by this instance (UTF-8 by default).  It has no effect when "
"decoding :class:`unicode` objects."
msgstr ""

# e6389ecfa7424dd6aa0d6fe98ef39514
#: ../Doc/library/json.rst:289
msgid ""
"Note that currently only encodings that are a superset of ASCII work, "
"strings of other encodings should be passed in as :class:`unicode`."
msgstr ""

#: ../Doc/library/json.rst:292
msgid ""
"*object_hook*, if specified, will be called with the result of every JSON "
"object decoded and its return value will be used in place of the given :"
"class:`dict`.  This can be used to provide custom deserializations (e.g. to "
"support JSON-RPC class hinting)."
msgstr ""

#: ../Doc/library/json.rst:297
msgid ""
"*object_pairs_hook*, if specified will be called with the result of every "
"JSON object decoded with an ordered list of pairs.  The return value of "
"*object_pairs_hook* will be used instead of the :class:`dict`.  This feature "
"can be used to implement custom decoders that rely on the order that the key "
"and value pairs are decoded (for example, :func:`collections.OrderedDict` "
"will remember the order of insertion). If *object_hook* is also defined, the "
"*object_pairs_hook* takes priority."
msgstr ""

#: ../Doc/library/json.rst:318
msgid ""
"*parse_constant*, if specified, will be called with one of the following "
"strings: ``'-Infinity'``, ``'Infinity'``, ``'NaN'``, ``'null'``, ``'true'``, "
"``'false'``.  This can be used to raise an exception if invalid JSON numbers "
"are encountered."
msgstr ""

# 902caf619e5e4626ba750df8996a2ccb
#: ../Doc/library/json.rst:323
msgid ""
"If *strict* is ``False`` (``True`` is the default), then control characters "
"will be allowed inside strings.  Control characters in this context are "
"those with character codes in the 0-31 range, including ``'\\t'`` (tab), "
"``'\\n'``, ``'\\r'`` and ``'\\0'``."
msgstr ""

# c61554267b7b441080b4530ccf274bed
#: ../Doc/library/json.rst:331
msgid ""
"Return the Python representation of *s* (a :class:`str` or :class:`unicode` "
"instance containing a JSON document)"
msgstr ""

# 0fc99855db52432e882a7e84d4e52cef
#: ../Doc/library/json.rst:336
msgid ""
"Decode a JSON document from *s* (a :class:`str` or :class:`unicode` "
"beginning with a JSON document) and return a 2-tuple of the Python "
"representation and the index in *s* where the document ended."
msgstr ""

#: ../Doc/library/json.rst:340
msgid ""
"This can be used to decode a JSON document from a string that may have "
"extraneous data at the end."
msgstr ""

#: ../Doc/library/json.rst:346
msgid "Extensible JSON encoder for Python data structures."
msgstr ""

#: ../Doc/library/json.rst:348
msgid "Supports the following objects and types by default:"
msgstr ""

#: ../Doc/library/json.rst:355
msgid "list, tuple"
msgstr ""

# ee8c3f1953624c29833dff71fcecb806
#: ../Doc/library/json.rst:357
msgid "str, unicode"
msgstr ""

# 1ba55e279ede48b3babb9b52a9f8320a
#: ../Doc/library/json.rst:359
msgid "int, long, float"
msgstr ""

#: ../Doc/library/json.rst:359
msgid "number"
msgstr ""

#: ../Doc/library/json.rst:368
msgid ""
"To extend this to recognize other objects, subclass and implement a :meth:"
"`default` method with another method that returns a serializable object for "
"``o`` if possible, otherwise it should call the superclass implementation "
"(to raise :exc:`TypeError`)."
msgstr ""

# 0bdd5dce77894581b69f90829b2084c6
#: ../Doc/library/json.rst:373
msgid ""
"If *skipkeys* is ``False`` (the default), then it is a :exc:`TypeError` to "
"attempt encoding of keys that are not str, int, long, float or None.  If "
"*skipkeys* is ``True``, such items are simply skipped."
msgstr ""

# e014699c31ef4d328d0e0d3136563150
#: ../Doc/library/json.rst:377
msgid ""
"If *ensure_ascii* is ``True`` (the default), all non-ASCII characters in the "
"output are escaped with ``\\uXXXX`` sequences, and the results are :class:"
"`str` instances consisting of ASCII characters only. If *ensure_ascii* is "
"``False``, a result may be a :class:`unicode` instance. This usually happens "
"if the input contains unicode strings or the *encoding* parameter is used."
msgstr ""

#: ../Doc/library/json.rst:384
msgid ""
"If *check_circular* is ``True`` (the default), then lists, dicts, and custom "
"encoded objects will be checked for circular references during encoding to "
"prevent an infinite recursion (which would cause an :exc:`OverflowError`). "
"Otherwise, no such check takes place."
msgstr ""

#: ../Doc/library/json.rst:389
msgid ""
"If *allow_nan* is ``True`` (the default), then ``NaN``, ``Infinity``, and ``-"
"Infinity`` will be encoded as such.  This behavior is not JSON specification "
"compliant, but is consistent with most JavaScript based encoders and "
"decoders.  Otherwise, it will be a :exc:`ValueError` to encode such floats."
msgstr ""

# f27a67a80ac24914a823a25c82c98aa8
#: ../Doc/library/json.rst:395
msgid ""
"If *sort_keys* is ``True`` (default ``False``), then the output of "
"dictionaries will be sorted by key; this is useful for regression tests to "
"ensure that JSON serializations can be compared on a day-to-day basis."
msgstr ""

#: ../Doc/library/json.rst:399
msgid ""
"If *indent* is a non-negative integer (it is ``None`` by default), then JSON "
"array elements and object members will be pretty-printed with that indent "
"level.  An indent level of 0 will only insert newlines.  ``None`` is the "
"most compact representation."
msgstr ""

#: ../Doc/library/json.rst:404
msgid ""
"If specified, *separators* should be an ``(item_separator, key_separator)`` "
"tuple.  The default is ``(', ', ': ')``.  To get the most compact JSON "
"representation, you should specify ``(',', ':')`` to eliminate whitespace."
msgstr ""

#: ../Doc/library/json.rst:408
msgid ""
"If specified, *default* is a function that gets called for objects that "
"can't otherwise be serialized.  It should return a JSON encodable version of "
"the object or raise a :exc:`TypeError`."
msgstr ""

# 36bb7262fd83400a9ad19ce9cefe11ae
#: ../Doc/library/json.rst:412
msgid ""
"If *encoding* is not ``None``, then all input strings will be transformed "
"into unicode using that encoding prior to JSON-encoding.  The default is "
"UTF-8."
msgstr ""

#: ../Doc/library/json.rst:419
msgid ""
"Implement this method in a subclass such that it returns a serializable "
"object for *o*, or calls the base implementation (to raise a :exc:"
"`TypeError`)."
msgstr ""

#: ../Doc/library/json.rst:423
msgid ""
"For example, to support arbitrary iterators, you could implement default "
"like this::"
msgstr ""

#: ../Doc/library/json.rst:438
msgid ""
"Return a JSON string representation of a Python data structure, *o*.  For "
"example::"
msgstr ""

#: ../Doc/library/json.rst:447
msgid ""
"Encode the given object, *o*, and yield each string representation as "
"available.  For example::"
msgstr ""

# db03ca027bf54209aefcdd8294d5a312
#: ../Doc/library/json.rst:455
msgid "Standard Compliance"
msgstr ""

# d531bd6ac857441f8aeff84eb929b1dc
#: ../Doc/library/json.rst:457
msgid ""
"The JSON format is specified by :rfc:`4627`.  This section details this "
"module's level of compliance with the RFC.  For simplicity, :class:"
"`JSONEncoder` and :class:`JSONDecoder` subclasses, and parameters other than "
"those explicitly mentioned, are not considered."
msgstr ""

# 939ace97ae0241fc84f3804d68b6eb59
#: ../Doc/library/json.rst:462
msgid ""
"This module does not comply with the RFC in a strict fashion, implementing "
"some extensions that are valid JavaScript but not valid JSON.  In particular:"
msgstr ""

# ede75aa284d0462b9d1d3cf184aff8c7
#: ../Doc/library/json.rst:465
msgid "Top-level non-object, non-array values are accepted and output;"
msgstr ""

# 20bffbe435154a5f91f48ae51dbb2acd
#: ../Doc/library/json.rst:466
msgid "Infinite and NaN number values are accepted and output;"
msgstr ""

# 40538ba0408a4a2799df09e1411490ed
#: ../Doc/library/json.rst:467
msgid ""
"Repeated names within an object are accepted, and only the value of the last "
"name-value pair is used."
msgstr ""

# 46b806472c694e7d865ebb3007d16171
#: ../Doc/library/json.rst:470
msgid ""
"Since the RFC permits RFC-compliant parsers to accept input texts that are "
"not RFC-compliant, this module's deserializer is technically RFC-compliant "
"under default settings."
msgstr ""

# f7fd64e0140244a4847f4be32dd3b467
#: ../Doc/library/json.rst:475
msgid "Character Encodings"
msgstr ""

# 38ac6a4855904005a41fc43fa3bb24ca
#: ../Doc/library/json.rst:477
msgid ""
"The RFC recommends that JSON be represented using either UTF-8, UTF-16, or "
"UTF-32, with UTF-8 being the default.  Accordingly, this module uses UTF-8 "
"as the default for its *encoding* parameter."
msgstr ""

# f8c8568d0a3f46eba25d4f8eb34d4ff1
#: ../Doc/library/json.rst:481
msgid ""
"This module's deserializer only directly works with ASCII-compatible "
"encodings; UTF-16, UTF-32, and other ASCII-incompatible encodings require "
"the use of workarounds described in the documentation for the deserializer's "
"*encoding* parameter."
msgstr ""

# 20905e10427847ec83254d07edbb628b
#: ../Doc/library/json.rst:486
msgid ""
"The RFC also non-normatively describes a limited encoding detection "
"technique for JSON texts; this module's deserializer does not implement this "
"or any other kind of encoding detection."
msgstr ""

# b764be0fe9b84317862ffacd2e87caa8
#: ../Doc/library/json.rst:490
msgid ""
"As permitted, though not required, by the RFC, this module's serializer sets "
"*ensure_ascii=True* by default, thus escaping the output so that the "
"resulting strings only contain ASCII characters."
msgstr ""

# d01f3eff91b94cb28d076582aace713c
#: ../Doc/library/json.rst:496
msgid "Top-level Non-Object, Non-Array Values"
msgstr ""

# 3d033fc75034468b9d036276826fb11c
#: ../Doc/library/json.rst:498
msgid ""
"The RFC specifies that the top-level value of a JSON text must be either a "
"JSON object or array (Python :class:`dict` or :class:`list`).  This module's "
"deserializer also accepts input texts consisting solely of a JSON null, "
"boolean, number, or string value::"
msgstr ""

# f055ffad08724dcfbbdd2c4e7b0bb04a
#: ../Doc/library/json.rst:507
msgid ""
"This module itself does not include a way to request that such input texts "
"be regarded as illegal.  Likewise, this module's serializer also accepts "
"single Python :data:`None`, :class:`bool`, numeric, and :class:`str` values "
"as input and will generate output texts consisting solely of a top-level "
"JSON null, boolean, number, or string value without raising an exception::"
msgstr ""

# 6c5b99e643e74b429810bccba1da7208
#: ../Doc/library/json.rst:517
msgid ""
"This module's serializer does not itself include a way to enforce the "
"aforementioned constraint."
msgstr ""

# b4aaf65e509c434c83594824cf2abfe5
#: ../Doc/library/json.rst:522
msgid "Infinite and NaN Number Values"
msgstr ""

# 46f394fc6f3347b890d6b9edaff2d028
#: ../Doc/library/json.rst:524
msgid ""
"The RFC does not permit the representation of infinite or NaN number values. "
"Despite that, by default, this module accepts and outputs ``Infinity``, ``-"
"Infinity``, and ``NaN`` as if they were valid JSON number literal values::"
msgstr ""

# 201a0a2fb9ee42d2b6dc7218b04e9c08
#: ../Doc/library/json.rst:539
msgid ""
"In the serializer, the *allow_nan* parameter can be used to alter this "
"behavior.  In the deserializer, the *parse_constant* parameter can be used "
"to alter this behavior."
msgstr ""

# 7967a70d076349b3903fa349fb45687e
#: ../Doc/library/json.rst:545
msgid "Repeated Names Within an Object"
msgstr ""

# 8430c3c74d2740cc9ee032998f91a993
#: ../Doc/library/json.rst:547
msgid ""
"The RFC specifies that the names within a JSON object should be unique, but "
"does not specify how repeated names in JSON objects should be handled.  By "
"default, this module does not raise an exception; instead, it ignores all "
"but the last name-value pair for a given name::"
msgstr ""

# 20332684124448d1a5f4774d000dcb36
#: ../Doc/library/json.rst:556
msgid "The *object_pairs_hook* parameter can be used to alter this behavior."
msgstr ""

#: ../Doc/library/keyword.rst:2
msgid ":mod:`keyword` --- Testing for Python keywords"
msgstr ""

# 4e2ffbe8965542ac9fcdc45b37d0a069
#: ../Doc/library/keyword.rst:7
msgid "**Source code:** :source:`Lib/keyword.py`"
msgstr ""

#: ../Doc/library/keyword.rst:11
msgid ""
"This module allows a Python program to determine if a string is a keyword."
msgstr ""

#: ../Doc/library/keyword.rst:16
msgid "Return true if *s* is a Python keyword."
msgstr ""

#: ../Doc/library/keyword.rst:21
msgid ""
"Sequence containing all the keywords defined for the interpreter.  If any "
"keywords are defined to only be active when particular :mod:`__future__` "
"statements are in effect, these will be included as well."
msgstr ""

#: ../Doc/library/language.rst:6
msgid "Python Language Services"
msgstr ""

#: ../Doc/library/language.rst:8
msgid ""
"Python provides a number of modules to assist in working with the Python "
"language.  These modules support tokenizing, parsing, syntax analysis, "
"bytecode disassembly, and various other facilities."
msgstr ""

#: ../Doc/library/language.rst:12
msgid "These modules include:"
msgstr ""

#: ../Doc/library/linecache.rst:3
msgid ":mod:`linecache` --- Random access to text lines"
msgstr ""

# 0bdee44c2e78472abfeddac7a4f2d2bf
#: ../Doc/library/linecache.rst:9
msgid "**Source code:** :source:`Lib/linecache.py`"
msgstr ""

#: ../Doc/library/linecache.rst:13
msgid ""
"The :mod:`linecache` module allows one to get any line from any file, while "
"attempting to optimize internally, using a cache, the common case where many "
"lines are read from a single file.  This is used by the :mod:`traceback` "
"module to retrieve source lines for inclusion in  the formatted traceback."
msgstr ""

#: ../Doc/library/linecache.rst:18
msgid "The :mod:`linecache` module defines the following functions:"
msgstr ""

# 02a3c98bbbd340a2a8920cae42c9bf09
#: ../Doc/library/linecache.rst:23
msgid ""
"Get line *lineno* from file named *filename*. This function will never raise "
"an exception --- it will return ``''`` on errors (the terminating newline "
"character will be included for lines that are found)."
msgstr ""

#: ../Doc/library/linecache.rst:29
msgid ""
"If a file named *filename* is not found, the function will look for it in "
"the module search path, ``sys.path``, after first checking for a :pep:`302` "
"``__loader__`` in *module_globals*, in case the module was imported from a "
"zipfile or other non-filesystem import source."
msgstr ""

#: ../Doc/library/linecache.rst:40
msgid ""
"Clear the cache.  Use this function if you no longer need lines from files "
"previously read using :func:`getline`."
msgstr ""

#: ../Doc/library/linecache.rst:46
msgid ""
"Check the cache for validity.  Use this function if files in the cache  may "
"have changed on disk, and you require the updated version.  If *filename* is "
"omitted, it will check all the entries in the cache."
msgstr ""

#: ../Doc/library/locale.rst:3
msgid ":mod:`locale` --- Internationalization services"
msgstr ""

#: ../Doc/library/locale.rst:11
msgid ""
"The :mod:`locale` module opens access to the POSIX locale database and "
"functionality. The POSIX locale mechanism allows programmers to deal with "
"certain cultural issues in an application, without requiring the programmer "
"to know all the specifics of each country where the software is executed."
msgstr ""

#: ../Doc/library/locale.rst:18
msgid ""
"The :mod:`locale` module is implemented on top of the :mod:`_locale` module, "
"which in turn uses an ANSI C locale implementation if available."
msgstr ""

#: ../Doc/library/locale.rst:21
msgid "The :mod:`locale` module defines the following exception and functions:"
msgstr ""

# 32ab072340d14b0d97e402a53747eca4
#: ../Doc/library/locale.rst:26
msgid ""
"Exception raised when the locale passed to :func:`setlocale` is not "
"recognized."
msgstr ""

# b90e08dfe37242c0a9dfaecaaf65edc3
#: ../Doc/library/locale.rst:32
msgid ""
"If *locale* is given and not ``None``, :func:`setlocale` modifies the locale "
"setting for the *category*. The available categories are listed in the data "
"description below. *locale* may be a string, or an iterable of two strings "
"(language code and encoding). If it's an iterable, it's converted to a "
"locale name using the locale aliasing engine. An empty string specifies the "
"user's default settings. If the modification of the locale fails, the "
"exception :exc:`Error` is raised. If successful, the new locale setting is "
"returned."
msgstr ""

#: ../Doc/library/locale.rst:40
msgid ""
"If *locale* is omitted or ``None``, the current setting for *category* is "
"returned."
msgstr ""

# b48f7ec602c14eccbb906bad9ee9d3e1
#: ../Doc/library/locale.rst:43
msgid ""
":func:`setlocale` is not thread-safe on most systems. Applications typically "
"start with a call of ::"
msgstr ""

#: ../Doc/library/locale.rst:49
msgid ""
"This sets the locale for all categories to the user's default setting "
"(typically specified in the :envvar:`LANG` environment variable).  If the "
"locale is not changed thereafter, using multithreading should not cause "
"problems."
msgstr ""

#: ../Doc/library/locale.rst:59
msgid ""
"Returns the database of the local conventions as a dictionary. This "
"dictionary has the following strings as keys:"
msgstr ""

#: ../Doc/library/locale.rst:63
msgid "Category"
msgstr ""

#: ../Doc/library/locale.rst:65
msgid ":const:`LC_NUMERIC`"
msgstr ""

#: ../Doc/library/locale.rst:65
msgid "``'decimal_point'``"
msgstr ""

#: ../Doc/library/locale.rst:65
msgid "Decimal point character."
msgstr ""

#: ../Doc/library/locale.rst:67
msgid "``'grouping'``"
msgstr ""

#: ../Doc/library/locale.rst:67
msgid ""
"Sequence of numbers specifying which relative positions the "
"``'thousands_sep'`` is expected.  If the sequence is terminated with :const:"
"`CHAR_MAX`, no further grouping is performed. If the sequence terminates "
"with a ``0``,  the last group size is repeatedly used."
msgstr ""

#: ../Doc/library/locale.rst:78
msgid "``'thousands_sep'``"
msgstr ""

#: ../Doc/library/locale.rst:78
msgid "Character used between groups."
msgstr ""

#: ../Doc/library/locale.rst:80
msgid ":const:`LC_MONETARY`"
msgstr ""

#: ../Doc/library/locale.rst:80
msgid "``'int_curr_symbol'``"
msgstr ""

#: ../Doc/library/locale.rst:80
msgid "International currency symbol."
msgstr ""

#: ../Doc/library/locale.rst:82
msgid "``'currency_symbol'``"
msgstr ""

#: ../Doc/library/locale.rst:82
msgid "Local currency symbol."
msgstr ""

#: ../Doc/library/locale.rst:84
msgid "``'p_cs_precedes/n_cs_precedes'``"
msgstr ""

#: ../Doc/library/locale.rst:84
msgid ""
"Whether the currency symbol precedes the value (for positive resp. negative "
"values)."
msgstr ""

#: ../Doc/library/locale.rst:89
msgid "``'p_sep_by_space/n_sep_by_space'``"
msgstr ""

#: ../Doc/library/locale.rst:89
msgid ""
"Whether the currency symbol is separated from the value  by a space (for "
"positive resp. negative values)."
msgstr ""

#: ../Doc/library/locale.rst:94
msgid "``'mon_decimal_point'``"
msgstr ""

#: ../Doc/library/locale.rst:94
msgid "Decimal point used for monetary values."
msgstr ""

#: ../Doc/library/locale.rst:97
msgid "``'frac_digits'``"
msgstr ""

#: ../Doc/library/locale.rst:97
msgid ""
"Number of fractional digits used in local formatting of monetary values."
msgstr ""

#: ../Doc/library/locale.rst:101
msgid "``'int_frac_digits'``"
msgstr ""

#: ../Doc/library/locale.rst:101
msgid ""
"Number of fractional digits used in international formatting of monetary "
"values."
msgstr ""

#: ../Doc/library/locale.rst:105
msgid "``'mon_thousands_sep'``"
msgstr ""

#: ../Doc/library/locale.rst:105
msgid "Group separator used for monetary values."
msgstr ""

#: ../Doc/library/locale.rst:108
msgid "``'mon_grouping'``"
msgstr ""

#: ../Doc/library/locale.rst:108
msgid "Equivalent to ``'grouping'``, used for monetary values."
msgstr ""

#: ../Doc/library/locale.rst:111
msgid "``'positive_sign'``"
msgstr ""

#: ../Doc/library/locale.rst:111
msgid "Symbol used to annotate a positive monetary value."
msgstr ""

#: ../Doc/library/locale.rst:114
msgid "``'negative_sign'``"
msgstr ""

#: ../Doc/library/locale.rst:114
msgid "Symbol used to annotate a negative monetary value."
msgstr ""

#: ../Doc/library/locale.rst:117
msgid "``'p_sign_posn/n_sign_posn'``"
msgstr ""

#: ../Doc/library/locale.rst:117
msgid ""
"The position of the sign (for positive resp. negative values), see below."
msgstr ""

#: ../Doc/library/locale.rst:122
msgid ""
"All numeric values can be set to :const:`CHAR_MAX` to indicate that there is "
"no value specified in this locale."
msgstr ""

#: ../Doc/library/locale.rst:125
msgid ""
"The possible values for ``'p_sign_posn'`` and ``'n_sign_posn'`` are given "
"below."
msgstr ""

#: ../Doc/library/locale.rst:128 ../Doc/library/mailbox.rst:796
#: ../Doc/library/mailbox.rst:963 ../Doc/library/mailbox.rst:1113
#: ../Doc/library/mailbox.rst:1200 ../Doc/library/mailbox.rst:1333
#: ../Doc/library/sys.rst:603
msgid "Explanation"
msgstr ""

#: ../Doc/library/locale.rst:130
msgid "Currency and value are surrounded by parentheses."
msgstr ""

#: ../Doc/library/locale.rst:133
msgid "The sign should precede the value and currency symbol."
msgstr ""

#: ../Doc/library/locale.rst:136
msgid "The sign should follow the value and currency symbol."
msgstr ""

#: ../Doc/library/locale.rst:139 ../Doc/library/resource.rst:176
#: ../Doc/library/zipfile.rst:398
msgid "``3``"
msgstr ""

#: ../Doc/library/locale.rst:139
msgid "The sign should immediately precede the value."
msgstr ""

#: ../Doc/library/locale.rst:142 ../Doc/library/resource.rst:178
#: ../Doc/library/zipfile.rst:400
msgid "``4``"
msgstr ""

#: ../Doc/library/locale.rst:142
msgid "The sign should immediately follow the value."
msgstr ""

#: ../Doc/library/locale.rst:145
msgid "``CHAR_MAX``"
msgstr ""

#: ../Doc/library/locale.rst:145
msgid "Nothing is specified in this locale."
msgstr ""

#: ../Doc/library/locale.rst:151
msgid ""
"Return some locale-specific information as a string.  This function is not "
"available on all systems, and the set of possible options might also vary "
"across platforms.  The possible argument values are numbers, for which "
"symbolic constants are available in the locale module."
msgstr ""

#: ../Doc/library/locale.rst:156
msgid ""
"The :func:`nl_langinfo` function accepts one of the following keys.  Most "
"descriptions are taken from the corresponding description in the GNU C "
"library."
msgstr ""

#: ../Doc/library/locale.rst:162
msgid ""
"Get a string with the name of the character encoding used in the selected "
"locale."
msgstr ""

# d309770a44444e599703ab1e74a5c075
#: ../Doc/library/locale.rst:167
msgid ""
"Get a string that can be used as a format string for :func:`time.strftime` "
"to represent date and time in a locale-specific way."
msgstr ""

# 718bb6e8228849eeba82daee2550fa87
#: ../Doc/library/locale.rst:172
msgid ""
"Get a string that can be used as a format string for :func:`time.strftime` "
"to represent a date in a locale-specific way."
msgstr ""

# 32b8073cb0cf4a689aa6a55d41630258
#: ../Doc/library/locale.rst:177
msgid ""
"Get a string that can be used as a format string for :func:`time.strftime` "
"to represent a time in a locale-specific way."
msgstr ""

# 3eea30d5e91b42f680f413d4b2acff9c
#: ../Doc/library/locale.rst:182
msgid ""
"Get a format string for :func:`time.strftime` to represent time in the am/pm "
"format."
msgstr ""

#: ../Doc/library/locale.rst:187
msgid "Get the name of the n-th day of the week."
msgstr ""

#: ../Doc/library/locale.rst:191
msgid ""
"This follows the US convention of :const:`DAY_1` being Sunday, not the "
"international convention (ISO 8601) that Monday is the first day of the week."
msgstr ""

#: ../Doc/library/locale.rst:197
msgid "Get the abbreviated name of the n-th day of the week."
msgstr ""

#: ../Doc/library/locale.rst:201
msgid "Get the name of the n-th month."
msgstr ""

#: ../Doc/library/locale.rst:205
msgid "Get the abbreviated name of the n-th month."
msgstr ""

#: ../Doc/library/locale.rst:209
msgid "Get the radix character (decimal dot, decimal comma, etc.)"
msgstr ""

#: ../Doc/library/locale.rst:213
msgid "Get the separator character for thousands (groups of three digits)."
msgstr ""

#: ../Doc/library/locale.rst:217
msgid ""
"Get a regular expression that can be used with the regex function to "
"recognize a positive response to a yes/no question."
msgstr ""

# ccdc193825e94aa2ba4bc97ca9ddae01
#: ../Doc/library/locale.rst:222
msgid ""
"The expression is in the syntax suitable for the :c:func:`regex` function "
"from the C library, which might differ from the syntax used in :mod:`re`."
msgstr ""

#: ../Doc/library/locale.rst:227
msgid ""
"Get a regular expression that can be used with the regex(3) function to "
"recognize a negative response to a yes/no question."
msgstr ""

#: ../Doc/library/locale.rst:232
msgid ""
"Get the currency symbol, preceded by \"-\" if the symbol should appear "
"before the value, \"+\" if the symbol should appear after the value, or \"."
"\" if the symbol should replace the radix character."
msgstr ""

#: ../Doc/library/locale.rst:238
msgid "Get a string that represents the era used in the current locale."
msgstr ""

#: ../Doc/library/locale.rst:240
msgid ""
"Most locales do not define this value.  An example of a locale which does "
"define this value is the Japanese one.  In Japan, the traditional "
"representation of dates includes the name of the era corresponding to the "
"then-emperor's reign."
msgstr ""

# 8923a634de4545d88c9fed0e2d67b725
#: ../Doc/library/locale.rst:245
msgid ""
"Normally it should not be necessary to use this value directly. Specifying "
"the ``E`` modifier in their format strings causes the :func:`time.strftime` "
"function to use this information.  The format of the returned string is not "
"specified, and therefore you should not assume knowledge of it on different "
"systems."
msgstr ""

# 8bc097da344c494ab51d9dd4ba187391
#: ../Doc/library/locale.rst:253
msgid ""
"Get a format string for :func:`time.strftime` to represent date and time in "
"a locale-specific era-based way."
msgstr ""

# dd86e9b713cb44278b3b706b27ed2868
#: ../Doc/library/locale.rst:258
msgid ""
"Get a format string for :func:`time.strftime` to represent a date in a "
"locale-specific era-based way."
msgstr ""

# 611e7960537247c6b1fbd6bd44154d71
#: ../Doc/library/locale.rst:263
msgid ""
"Get a format string for :func:`time.strftime` to represent a time in a "
"locale-specific era-based way."
msgstr ""

#: ../Doc/library/locale.rst:268
msgid ""
"Get a representation of up to 100 values used to represent the values 0 to "
"99."
msgstr ""

#: ../Doc/library/locale.rst:274
msgid ""
"Tries to determine the default locale settings and returns them as a tuple "
"of the form ``(language code, encoding)``."
msgstr ""

#: ../Doc/library/locale.rst:277
msgid ""
"According to POSIX, a program which has not called ``setlocale(LC_ALL, '')`` "
"runs using the portable ``'C'`` locale.  Calling ``setlocale(LC_ALL, '')`` "
"lets it use the default locale as defined by the :envvar:`LANG` variable.  "
"Since we do not want to interfere with the current locale setting we thus "
"emulate the behavior in the way described above."
msgstr ""

# 27578cd756b74a9a8d8b614f930aa4a2
#: ../Doc/library/locale.rst:283
msgid ""
"To maintain compatibility with other platforms, not only the :envvar:`LANG` "
"variable is tested, but a list of variables given as envvars parameter.  The "
"first found to be defined will be used.  *envvars* defaults to the search "
"path used in GNU gettext; it must always contain the variable name "
"``LANG``.  The GNU gettext search path contains ``'LANGUAGE'``, "
"``'LC_ALL'``, ``'LC_CTYPE'``, and ``'LANG'``, in that order."
msgstr ""

#: ../Doc/library/locale.rst:290 ../Doc/library/locale.rst:303
msgid ""
"Except for the code ``'C'``, the language code corresponds to :rfc:`1766`. "
"*language code* and *encoding* may be ``None`` if their values cannot be "
"determined."
msgstr ""

#: ../Doc/library/locale.rst:299
msgid ""
"Returns the current setting for the given locale category as sequence "
"containing *language code*, *encoding*. *category* may be one of the :const:"
"`LC_\\*` values except :const:`LC_ALL`.  It defaults to :const:`LC_CTYPE`."
msgstr ""

#: ../Doc/library/locale.rst:312
msgid ""
"Return the encoding used for text data, according to user preferences.  User "
"preferences are expressed differently on different systems, and might not be "
"available programmatically on some systems, so this function only returns a "
"guess."
msgstr ""

#: ../Doc/library/locale.rst:317
msgid ""
"On some systems, it is necessary to invoke :func:`setlocale` to obtain the "
"user preferences, so this function is not thread-safe. If invoking setlocale "
"is not necessary or desired, *do_setlocale* should be set to ``False``."
msgstr ""

#: ../Doc/library/locale.rst:326
msgid ""
"Returns a normalized locale code for the given locale name.  The returned "
"locale code is formatted for use with :func:`setlocale`.  If normalization "
"fails, the original name is returned unchanged."
msgstr ""

#: ../Doc/library/locale.rst:330
msgid ""
"If the given encoding is not known, the function defaults to the default "
"encoding for the locale code just like :func:`setlocale`."
msgstr ""

#: ../Doc/library/locale.rst:338
msgid "Sets the locale for *category* to the default setting."
msgstr ""

#: ../Doc/library/locale.rst:340
msgid ""
"The default setting is determined by calling :func:`getdefaultlocale`. "
"*category* defaults to :const:`LC_ALL`."
msgstr ""

#: ../Doc/library/locale.rst:348
msgid ""
"Compares two strings according to the current :const:`LC_COLLATE` setting. "
"As any other compare function, returns a negative, or a positive value, or "
"``0``, depending on whether *string1* collates before or after *string2* or "
"is equal to it."
msgstr ""

# 83a71f8c2a714e41b63ae5d541f97af9
#: ../Doc/library/locale.rst:358
msgid ""
"Transforms a string to one that can be used for the built-in function :func:"
"`cmp`, and still returns locale-aware results.  This function can be used "
"when the same string is compared repeatedly, e.g. when collating a sequence "
"of strings."
msgstr ""

#: ../Doc/library/locale.rst:366
msgid ""
"Formats a number *val* according to the current :const:`LC_NUMERIC` setting. "
"The format follows the conventions of the ``%`` operator.  For floating "
"point values, the decimal point is modified if appropriate.  If *grouping* "
"is true, also takes the grouping into account."
msgstr ""

#: ../Doc/library/locale.rst:371
msgid ""
"If *monetary* is true, the conversion uses monetary thousands separator and "
"grouping strings."
msgstr ""

#: ../Doc/library/locale.rst:374
msgid ""
"Please note that this function will only work for exactly one %char "
"specifier. For whole format strings, use :func:`format_string`."
msgstr ""

#: ../Doc/library/locale.rst:383
msgid ""
"Processes formatting specifiers as in ``format % val``, but takes the "
"current locale settings into account."
msgstr ""

#: ../Doc/library/locale.rst:391
msgid ""
"Formats a number *val* according to the current :const:`LC_MONETARY` "
"settings."
msgstr ""

#: ../Doc/library/locale.rst:393
msgid ""
"The returned string includes the currency symbol if *symbol* is true, which "
"is the default. If *grouping* is true (which is not the default), grouping "
"is done with the value. If *international* is true (which is not the "
"default), the international currency symbol is used."
msgstr ""

#: ../Doc/library/locale.rst:398
msgid ""
"Note that this function will not work with the 'C' locale, so you have to "
"set a locale via :func:`setlocale` first."
msgstr ""

#: ../Doc/library/locale.rst:406
msgid ""
"Formats a floating point number using the same format as the built-in "
"function ``str(float)``, but takes the decimal point into account."
msgstr ""

#: ../Doc/library/locale.rst:412
msgid ""
"Converts a string to a floating point number, following the :const:"
"`LC_NUMERIC` settings."
msgstr ""

#: ../Doc/library/locale.rst:418
msgid ""
"Converts a string to an integer, following the :const:`LC_NUMERIC` "
"conventions."
msgstr ""

#: ../Doc/library/locale.rst:425
msgid ""
"Locale category for the character type functions.  Depending on the settings "
"of this category, the functions of module :mod:`string` dealing with case "
"change their behaviour."
msgstr ""

#: ../Doc/library/locale.rst:432
msgid ""
"Locale category for sorting strings.  The functions :func:`strcoll` and :"
"func:`strxfrm` of the :mod:`locale` module are affected."
msgstr ""

#: ../Doc/library/locale.rst:438
msgid ""
"Locale category for the formatting of time.  The function :func:`time."
"strftime` follows these conventions."
msgstr ""

#: ../Doc/library/locale.rst:444
msgid ""
"Locale category for formatting of monetary values.  The available options "
"are available from the :func:`localeconv` function."
msgstr ""

#: ../Doc/library/locale.rst:450
msgid ""
"Locale category for message display. Python currently does not support "
"application specific locale-aware messages.  Messages displayed by the "
"operating system, like those returned by :func:`os.strerror` might be "
"affected by this category."
msgstr ""

#: ../Doc/library/locale.rst:458
msgid ""
"Locale category for formatting numbers.  The functions :func:`.format`, :"
"func:`atoi`, :func:`atof` and :func:`.str` of the :mod:`locale` module are "
"affected by that category.  All other numeric formatting operations are not "
"affected."
msgstr ""

#: ../Doc/library/locale.rst:466
msgid ""
"Combination of all locale settings.  If this flag is used when the locale is "
"changed, setting the locale for all categories is attempted. If that fails "
"for any category, no category is changed at all.  When the locale is "
"retrieved using this flag, a string indicating the setting for all "
"categories is returned. This string can be later used to restore the "
"settings."
msgstr ""

#: ../Doc/library/locale.rst:475
msgid ""
"This is a symbolic constant used for different values returned by :func:"
"`localeconv`."
msgstr ""

#: ../Doc/library/locale.rst:492
msgid "Background, details, hints, tips and caveats"
msgstr ""

#: ../Doc/library/locale.rst:494
msgid ""
"The C standard defines the locale as a program-wide property that may be "
"relatively expensive to change.  On top of that, some implementation are "
"broken in such a way that frequent locale changes may cause core dumps.  "
"This makes the locale somewhat painful to use correctly."
msgstr ""

#: ../Doc/library/locale.rst:499
msgid ""
"Initially, when a program is started, the locale is the ``C`` locale, no "
"matter what the user's preferred locale is.  The program must explicitly say "
"that it wants the user's preferred locale settings by calling ``setlocale"
"(LC_ALL, '')``."
msgstr ""

#: ../Doc/library/locale.rst:503
msgid ""
"It is generally a bad idea to call :func:`setlocale` in some library "
"routine, since as a side effect it affects the entire program.  Saving and "
"restoring it is almost as bad: it is expensive and affects other threads "
"that happen to run before the settings have been restored."
msgstr ""

# d8b8a59e3cdc4d4c8db35adff954d97b
#: ../Doc/library/locale.rst:508
msgid ""
"If, when coding a module for general use, you need a locale independent "
"version of an operation that is affected by the locale (such as :func:"
"`string.lower`, or certain formats used with :func:`time.strftime`), you "
"will have to find a way to do it without using the standard library "
"routine.  Even better is convincing yourself that using locale settings is "
"okay.  Only as a last resort should you document that your module is not "
"compatible with non-\\ ``C`` locale settings."
msgstr ""

# 6b002d1b8c16411d960686553c400c4c
#: ../Doc/library/locale.rst:517
msgid ""
"The case conversion functions in the :mod:`string` module are affected by "
"the locale settings.  When a call to the :func:`setlocale` function changes "
"the :const:`LC_CTYPE` settings, the variables ``string.lowercase``, ``string."
"uppercase`` and ``string.letters`` are recalculated.  Note that code that "
"uses these variable through ':keyword:`from` ... :keyword:`import` ...', e."
"g. ``from string import letters``, is not affected by subsequent :func:"
"`setlocale` calls."
msgstr ""

#: ../Doc/library/locale.rst:525
msgid ""
"The only way to perform numeric operations according to the locale is to use "
"the special functions defined by this module: :func:`atof`, :func:`atoi`, :"
"func:`.format`, :func:`.str`."
msgstr ""

#: ../Doc/library/locale.rst:533
msgid "For extension writers and programs that embed Python"
msgstr ""

#: ../Doc/library/locale.rst:535
msgid ""
"Extension modules should never call :func:`setlocale`, except to find out "
"what the current locale is.  But since the return value can only be used "
"portably to restore it, that is not very useful (except perhaps to find out "
"whether or not the locale is ``C``)."
msgstr ""

#: ../Doc/library/locale.rst:540
msgid ""
"When Python code uses the :mod:`locale` module to change the locale, this "
"also affects the embedding application.  If the embedding application "
"doesn't want this to happen, it should remove the :mod:`_locale` extension "
"module (which does all the work) from the table of built-in modules in the :"
"file:`config.c` file, and make sure that the :mod:`_locale` module is not "
"accessible as a shared library."
msgstr ""

#: ../Doc/library/locale.rst:551
msgid "Access to message catalogs"
msgstr ""

#: ../Doc/library/locale.rst:553
msgid ""
"The locale module exposes the C library's gettext interface on systems that "
"provide this interface.  It consists of the functions :func:`gettext`, :func:"
"`dgettext`, :func:`dcgettext`, :func:`textdomain`, :func:`bindtextdomain`, "
"and :func:`bind_textdomain_codeset`.  These are similar to the same "
"functions in the :mod:`gettext` module, but use the C library's binary "
"format for message catalogs, and the C library's search algorithms for "
"locating message catalogs."
msgstr ""

# dd246a5ad5d14b538284196f2a93d7f3
#: ../Doc/library/locale.rst:560
msgid ""
"Python applications should normally find no need to invoke these functions, "
"and should use :mod:`gettext` instead.  A known exception to this rule are "
"applications that link with additional C libraries which internally invoke :"
"c:func:`gettext` or :func:`dcgettext`.  For these applications, it may be "
"necessary to bind the text domain, so that the libraries can properly locate "
"their message catalogs."
msgstr ""

#: ../Doc/library/logging.rst:2
msgid ":mod:`logging` --- Logging facility for Python"
msgstr ""

# 0513e95508ff4d83894c587a2c9efffc
#: ../Doc/library/logging.rst:16
msgid ""
"This page contains the API reference information. For tutorial information "
"and discussion of more advanced topics, see"
msgstr ""

# 9292f6f2e057452a9ee018261106e186
# cd6b867efa6a4300bcfd5fde7e94df12
# 3cc83ee5b9084fc0a48ffc82f0f437cc
#: ../Doc/library/logging.rst:19 ../Doc/library/logging.config.rst:16
#: ../Doc/library/logging.handlers.rst:16
msgid ":ref:`Basic Tutorial <logging-basic-tutorial>`"
msgstr ""

# 6466d90d8ab54690af1f475e2d5ebb72
# 7800b3c763ec4960b313d8a63287110d
# d6c2be1b2caf483f8cf5f7c64b0a76bb
#: ../Doc/library/logging.rst:20 ../Doc/library/logging.config.rst:17
#: ../Doc/library/logging.handlers.rst:17
msgid ":ref:`Advanced Tutorial <logging-advanced-tutorial>`"
msgstr ""

# 86790cda772b4a0d8662952992cee8b9
# bfb09859179c4f79bc79e87e2e9391f1
# ff4ee8d3e1bd4fdbaea861ebd73ed5b4
#: ../Doc/library/logging.rst:21 ../Doc/library/logging.config.rst:18
#: ../Doc/library/logging.handlers.rst:18
msgid ":ref:`Logging Cookbook <logging-cookbook>`"
msgstr ""

# dc3a77dfbec94faf9f3c9a5e18fcb117
#: ../Doc/library/logging.rst:26
msgid ""
"This module defines functions and classes which implement a flexible event "
"logging system for applications and libraries."
msgstr ""

# 5194f69822904dbcb6c4d23d7ec1c63b
#: ../Doc/library/logging.rst:29
msgid ""
"The key benefit of having the logging API provided by a standard library "
"module is that all Python modules can participate in logging, so your "
"application log can include your own messages integrated with messages from "
"third-party modules."
msgstr ""

# 991a857ce425453bb4cf5c1c31aed9a0
#: ../Doc/library/logging.rst:34
msgid ""
"The module provides a lot of functionality and flexibility.  If you are "
"unfamiliar with logging, the best way to get to grips with it is to see the "
"tutorials (see the links on the right)."
msgstr ""

# 08c03d8581b041bbac0c478077e42e95
#: ../Doc/library/logging.rst:38
msgid ""
"The basic classes defined by the module, together with their functions, are "
"listed below."
msgstr ""

# c15baea99021481ebc4d277ebf28370b
#: ../Doc/library/logging.rst:41
msgid "Loggers expose the interface that application code directly uses."
msgstr ""

# 69d4eabcefc84beeb014ef9456cfb1e9
#: ../Doc/library/logging.rst:42
msgid ""
"Handlers send the log records (created by loggers) to the appropriate "
"destination."
msgstr ""

# c30c1333b11945d38f37cc5c62e17bbd
#: ../Doc/library/logging.rst:44
msgid ""
"Filters provide a finer grained facility for determining which log records "
"to output."
msgstr ""

# 4071f60525f642609c71525c60ecdd04
#: ../Doc/library/logging.rst:46
msgid "Formatters specify the layout of log records in the final output."
msgstr ""

#: ../Doc/library/logging.rst:52
msgid "Logger Objects"
msgstr ""

# 689cc5f62a9b434cadd4db939981583b
#: ../Doc/library/logging.rst:54
msgid ""
"Loggers have the following attributes and methods.  Note that Loggers are "
"never instantiated directly, but always through the module-level function "
"``logging.getLogger(name)``.  Multiple calls to :func:`getLogger` with the "
"same name will always return a reference to the same Logger object."
msgstr ""

# 8d32ddc490794e9ea0cb49123789a78a
#: ../Doc/library/logging.rst:59
msgid ""
"The ``name`` is potentially a period-separated hierarchical value, like "
"``foo.bar.baz`` (though it could also be just plain ``foo``, for example). "
"Loggers that are further down in the hierarchical list are children of "
"loggers higher up in the list.  For example, given a logger with a name of "
"``foo``, loggers with names of ``foo.bar``, ``foo.bar.baz``, and ``foo.bam`` "
"are all descendants of ``foo``.  The logger name hierarchy is analogous to "
"the Python package hierarchy, and identical to it if you organise your "
"loggers on a per-module basis using the recommended construction ``logging."
"getLogger(__name__)``.  That's because in a module, ``__name__`` is the "
"module's name in the Python package namespace."
msgstr ""

# 3c03123f833c433a80188beb719620a0
#: ../Doc/library/logging.rst:74
msgid ""
"If this evaluates to true, logging messages are passed by this logger and by "
"its child loggers to the handlers of higher level (ancestor) loggers. "
"Messages are passed directly to the ancestor loggers' handlers - neither the "
"level nor filters of the ancestor loggers in question are considered."
msgstr ""

# 8ab56305572c4183a8e31ec948521652
#: ../Doc/library/logging.rst:79
msgid ""
"If this evaluates to false, logging messages are not passed to the handlers "
"of ancestor loggers."
msgstr ""

# 81e3087469584fbabaf45085ca529bc1
#: ../Doc/library/logging.rst:82
msgid "The constructor sets this attribute to ``True``."
msgstr ""

#: ../Doc/library/logging.rst:87
msgid ""
"Sets the threshold for this logger to *lvl*. Logging messages which are less "
"severe than *lvl* will be ignored. When a logger is created, the level is "
"set to :const:`NOTSET` (which causes all messages to be processed when the "
"logger is the root logger, or delegation to the parent when the logger is a "
"non-root logger). Note that the root logger is created with level :const:"
"`WARNING`."
msgstr ""

# f7690891e55644d0817ae9e5ed983b72
#: ../Doc/library/logging.rst:93
msgid ""
"The term 'delegation to the parent' means that if a logger has a level of "
"NOTSET, its chain of ancestor loggers is traversed until either an ancestor "
"with a level other than NOTSET is found, or the root is reached."
msgstr ""

#: ../Doc/library/logging.rst:97
msgid ""
"If an ancestor is found with a level other than NOTSET, then that ancestor's "
"level is treated as the effective level of the logger where the ancestor "
"search began, and is used to determine how a logging event is handled."
msgstr ""

#: ../Doc/library/logging.rst:101
msgid ""
"If the root is reached, and it has a level of NOTSET, then all messages will "
"be processed. Otherwise, the root's level will be used as the effective "
"level."
msgstr ""

#: ../Doc/library/logging.rst:107
msgid ""
"Indicates if a message of severity *lvl* would be processed by this logger. "
"This method checks first the module-level level set by ``logging.disable(lvl)"
"`` and then the logger's effective level as determined by :meth:"
"`getEffectiveLevel`."
msgstr ""

#: ../Doc/library/logging.rst:115
msgid ""
"Indicates the effective level for this logger. If a value other than :const:"
"`NOTSET` has been set using :meth:`setLevel`, it is returned. Otherwise, the "
"hierarchy is traversed towards the root until a value other than :const:"
"`NOTSET` is found, and that value is returned."
msgstr ""

#: ../Doc/library/logging.rst:123
msgid ""
"Returns a logger which is a descendant to this logger, as determined by the "
"suffix. Thus, ``logging.getLogger('abc').getChild('def.ghi')`` would return "
"the same logger as would be returned by ``logging.getLogger('abc.def.ghi')"
"``. This is a convenience method, useful when the parent logger is named "
"using e.g. ``__name__`` rather than a literal string."
msgstr ""

#: ../Doc/library/logging.rst:134
msgid ""
"Logs a message with level :const:`DEBUG` on this logger. The *msg* is the "
"message format string, and the *args* are the arguments which are merged "
"into *msg* using the string formatting operator. (Note that this means that "
"you can use keywords in the format string, together with a single dictionary "
"argument.)"
msgstr ""

#: ../Doc/library/logging.rst:139 ../Doc/library/logging.rst:724
msgid ""
"There are two keyword arguments in *kwargs* which are inspected: *exc_info* "
"which, if it does not evaluate as false, causes exception information to be "
"added to the logging message. If an exception tuple (in the format returned "
"by :func:`sys.exc_info`) is provided, it is used; otherwise, :func:`sys."
"exc_info` is called to get the exception information."
msgstr ""

# 6d022069376246c6bde46d4a4dbc9cbc
#: ../Doc/library/logging.rst:145
msgid ""
"The second keyword argument is *extra* which can be used to pass a "
"dictionary which is used to populate the __dict__ of the LogRecord created "
"for the logging event with user-defined attributes. These custom attributes "
"can then be used as you like. For example, they could be incorporated into "
"logged messages. For example::"
msgstr ""

#: ../Doc/library/logging.rst:157
msgid "would print something like  ::"
msgstr ""

#: ../Doc/library/logging.rst:161 ../Doc/library/logging.rst:745
msgid ""
"The keys in the dictionary passed in *extra* should not clash with the keys "
"used by the logging system. (See the :class:`Formatter` documentation for "
"more information on which keys are used by the logging system.)"
msgstr ""

#: ../Doc/library/logging.rst:165 ../Doc/library/logging.rst:749
msgid ""
"If you choose to use these attributes in logged messages, you need to "
"exercise some care. In the above example, for instance, the :class:"
"`Formatter` has been set up with a format string which expects 'clientip' "
"and 'user' in the attribute dictionary of the LogRecord. If these are "
"missing, the message will not be logged because a string formatting "
"exception will occur. So in this case, you always need to pass the *extra* "
"dictionary with these keys."
msgstr ""

#: ../Doc/library/logging.rst:172 ../Doc/library/logging.rst:756
msgid ""
"While this might be annoying, this feature is intended for use in "
"specialized circumstances, such as multi-threaded servers where the same "
"code executes in many contexts, and interesting conditions which arise are "
"dependent on this context (such as remote client IP address and "
"authenticated user name, in the above example). In such circumstances, it is "
"likely that specialized :class:`Formatter`\\ s would be used with "
"particular :class:`Handler`\\ s."
msgstr ""

#: ../Doc/library/logging.rst:182
msgid ""
"Logs a message with level :const:`INFO` on this logger. The arguments are "
"interpreted as for :meth:`debug`."
msgstr ""

#: ../Doc/library/logging.rst:188
msgid ""
"Logs a message with level :const:`WARNING` on this logger. The arguments are "
"interpreted as for :meth:`debug`."
msgstr ""

#: ../Doc/library/logging.rst:194
msgid ""
"Logs a message with level :const:`ERROR` on this logger. The arguments are "
"interpreted as for :meth:`debug`."
msgstr ""

#: ../Doc/library/logging.rst:200
msgid ""
"Logs a message with level :const:`CRITICAL` on this logger. The arguments "
"are interpreted as for :meth:`debug`."
msgstr ""

#: ../Doc/library/logging.rst:206
msgid ""
"Logs a message with integer level *lvl* on this logger. The other arguments "
"are interpreted as for :meth:`debug`."
msgstr ""

#: ../Doc/library/logging.rst:212
msgid ""
"Logs a message with level :const:`ERROR` on this logger. The arguments are "
"interpreted as for :meth:`debug`. Exception info is added to the logging "
"message. This method should only be called from an exception handler."
msgstr ""

#: ../Doc/library/logging.rst:219
msgid "Adds the specified filter *filt* to this logger."
msgstr ""

#: ../Doc/library/logging.rst:224
msgid "Removes the specified filter *filt* from this logger."
msgstr ""

#: ../Doc/library/logging.rst:229
msgid ""
"Applies this logger's filters to the record and returns a true value if the "
"record is to be processed."
msgstr ""

#: ../Doc/library/logging.rst:235
msgid "Adds the specified handler *hdlr* to this logger."
msgstr ""

#: ../Doc/library/logging.rst:240
msgid "Removes the specified handler *hdlr* from this logger."
msgstr ""

#: ../Doc/library/logging.rst:245
msgid ""
"Finds the caller's source filename and line number. Returns the filename, "
"line number and function name as a 3-element tuple."
msgstr ""

#: ../Doc/library/logging.rst:254
msgid ""
"Handles a record by passing it to all handlers associated with this logger "
"and its ancestors (until a false value of *propagate* is found). This method "
"is used for unpickled records received from a socket, as well as those "
"created locally. Logger-level filtering is applied using :meth:`~Logger."
"filter`."
msgstr ""

#: ../Doc/library/logging.rst:262
msgid ""
"This is a factory method which can be overridden in subclasses to create "
"specialized :class:`LogRecord` instances."
msgstr ""

#: ../Doc/library/logging.rst:271
msgid "Handler Objects"
msgstr ""

#: ../Doc/library/logging.rst:273
msgid ""
"Handlers have the following attributes and methods. Note that :class:"
"`Handler` is never instantiated directly; this class acts as a base for more "
"useful subclasses. However, the :meth:`__init__` method in subclasses needs "
"to call :meth:`Handler.__init__`."
msgstr ""

#: ../Doc/library/logging.rst:281
msgid ""
"Initializes the :class:`Handler` instance by setting its level, setting the "
"list of filters to the empty list and creating a lock (using :meth:"
"`createLock`) for serializing access to an I/O mechanism."
msgstr ""

#: ../Doc/library/logging.rst:288
msgid ""
"Initializes a thread lock which can be used to serialize access to "
"underlying I/O functionality which may not be threadsafe."
msgstr ""

#: ../Doc/library/logging.rst:294
msgid "Acquires the thread lock created with :meth:`createLock`."
msgstr ""

#: ../Doc/library/logging.rst:299
msgid "Releases the thread lock acquired with :meth:`acquire`."
msgstr ""

#: ../Doc/library/logging.rst:304
msgid ""
"Sets the threshold for this handler to *lvl*. Logging messages which are "
"less severe than *lvl* will be ignored. When a handler is created, the level "
"is set to :const:`NOTSET` (which causes all messages to be processed)."
msgstr ""

#: ../Doc/library/logging.rst:311
msgid "Sets the :class:`Formatter` for this handler to *form*."
msgstr ""

#: ../Doc/library/logging.rst:316
msgid "Adds the specified filter *filt* to this handler."
msgstr ""

#: ../Doc/library/logging.rst:321
msgid "Removes the specified filter *filt* from this handler."
msgstr ""

#: ../Doc/library/logging.rst:326
msgid ""
"Applies this handler's filters to the record and returns a true value if the "
"record is to be processed."
msgstr ""

#: ../Doc/library/logging.rst:332
msgid ""
"Ensure all logging output has been flushed. This version does nothing and is "
"intended to be implemented by subclasses."
msgstr ""

#: ../Doc/library/logging.rst:338
msgid ""
"Tidy up any resources used by the handler. This version does no output but "
"removes the handler from an internal list of handlers which is closed when :"
"func:`shutdown` is called. Subclasses should ensure that this gets called "
"from overridden :meth:`close` methods."
msgstr ""

#: ../Doc/library/logging.rst:346
msgid ""
"Conditionally emits the specified logging record, depending on filters which "
"may have been added to the handler. Wraps the actual emission of the record "
"with acquisition/release of the I/O thread lock."
msgstr ""

# 99c917fe761a43f5bf4dd24e59584786
#: ../Doc/library/logging.rst:353
msgid ""
"This method should be called from handlers when an exception is encountered "
"during an :meth:`emit` call. If the module-level attribute "
"``raiseExceptions`` is ``False``, exceptions get silently ignored. This is "
"what is mostly wanted for a logging system - most users will not care about "
"errors in the logging system, they are more interested in application "
"errors. You could, however, replace this with a custom handler if you wish. "
"The specified record is the one which was being processed when the exception "
"occurred. (The default value of ``raiseExceptions`` is ``True``, as that is "
"more useful during development)."
msgstr ""

#: ../Doc/library/logging.rst:366
msgid ""
"Do formatting for a record - if a formatter is set, use it. Otherwise, use "
"the default formatter for the module."
msgstr ""

#: ../Doc/library/logging.rst:372
msgid ""
"Do whatever it takes to actually log the specified logging record. This "
"version is intended to be implemented by subclasses and so raises a :exc:"
"`NotImplementedError`."
msgstr ""

# 866584db52e8497c843e842ae761fb67
#: ../Doc/library/logging.rst:376
msgid ""
"For a list of handlers included as standard, see :mod:`logging.handlers`."
msgstr ""

#: ../Doc/library/logging.rst:381
msgid "Formatter Objects"
msgstr ""

# 417d06e4f19f4e4ba23a902bd5634fff
#: ../Doc/library/logging.rst:385
msgid ""
":class:`Formatter` objects have the following attributes and methods. They "
"are responsible for converting a :class:`LogRecord` to (usually) a string "
"which can be interpreted by either a human or an external system. The base :"
"class:`Formatter` allows a formatting string to be specified. If none is "
"supplied, the default value of ``'%(message)s'`` is used."
msgstr ""

# ddf3965a37734f2aab969b83af5c6e91
#: ../Doc/library/logging.rst:391
msgid ""
"A Formatter can be initialized with a format string which makes use of "
"knowledge of the :class:`LogRecord` attributes - such as the default value "
"mentioned above making use of the fact that the user's message and arguments "
"are pre-formatted into a :class:`LogRecord`'s *message* attribute.  This "
"format string contains standard Python %-style mapping keys. See section :"
"ref:`string-formatting` for more information on string formatting."
msgstr ""

# d937a05a893645aa95686fbf2f0d0a34
#: ../Doc/library/logging.rst:398
msgid ""
"The useful mapping keys in a :class:`LogRecord` are given in the section on :"
"ref:`logrecord-attributes`."
msgstr ""

#: ../Doc/library/logging.rst:404
msgid ""
"Returns a new instance of the :class:`Formatter` class.  The instance is "
"initialized with a format string for the message as a whole, as well as a "
"format string for the date/time portion of a message.  If no *fmt* is "
"specified, ``'%(message)s'`` is used.  If no *datefmt* is specified, the "
"ISO8601 date format is used."
msgstr ""

#: ../Doc/library/logging.rst:412
msgid ""
"The record's attribute dictionary is used as the operand to a string "
"formatting operation. Returns the resulting string. Before formatting the "
"dictionary, a couple of preparatory steps are carried out. The *message* "
"attribute of the record is computed using *msg* % *args*. If the formatting "
"string contains ``'(asctime)'``, :meth:`formatTime` is called to format the "
"event time. If there is exception information, it is formatted using :meth:"
"`formatException` and appended to the message. Note that the formatted "
"exception information is cached in attribute *exc_text*. This is useful "
"because the exception information can be pickled and sent across the wire, "
"but you should be careful if you have more than one :class:`Formatter` "
"subclass which customizes the formatting of exception information. In this "
"case, you will have to clear the cached value after a formatter has done its "
"formatting, so that the next formatter to handle the event doesn't use the "
"cached value but recalculates it afresh."
msgstr ""

#: ../Doc/library/logging.rst:431
msgid ""
"This method should be called from :meth:`format` by a formatter which wants "
"to make use of a formatted time. This method can be overridden in formatters "
"to provide for any specific requirement, but the basic behavior is as "
"follows: if *datefmt* (a string) is specified, it is used with :func:`time."
"strftime` to format the creation time of the record. Otherwise, the ISO8601 "
"format is used.  The resulting string is returned."
msgstr ""

# 9e56e036909141ca8949c06ed6cc90a4
#: ../Doc/library/logging.rst:439
msgid ""
"This function uses a user-configurable function to convert the creation time "
"to a tuple. By default, :func:`time.localtime` is used; to change this for a "
"particular formatter instance, set the ``converter`` attribute to a function "
"with the same signature as :func:`time.localtime` or :func:`time.gmtime`. To "
"change it for all formatters, for example if you want all logging times to "
"be shown in GMT, set the ``converter`` attribute in the ``Formatter`` class."
msgstr ""

#: ../Doc/library/logging.rst:449
msgid ""
"Formats the specified exception information (a standard exception tuple as "
"returned by :func:`sys.exc_info`) as a string. This default implementation "
"just uses :func:`traceback.print_exception`. The resulting string is "
"returned."
msgstr ""

#: ../Doc/library/logging.rst:457
msgid "Filter Objects"
msgstr ""

# 1e46f51b290e4ec389b7426de7a1996f
#: ../Doc/library/logging.rst:459
msgid ""
"``Filters`` can be used by ``Handlers`` and ``Loggers`` for more "
"sophisticated filtering than is provided by levels. The base filter class "
"only allows events which are below a certain point in the logger hierarchy. "
"For example, a filter initialized with 'A.B' will allow events logged by "
"loggers 'A.B', 'A.B.C', 'A.B.C.D', 'A.B.D' etc. but not 'A.BB', 'B.A.B' etc. "
"If initialized with the empty string, all events are passed."
msgstr ""

#: ../Doc/library/logging.rst:469
msgid ""
"Returns an instance of the :class:`Filter` class. If *name* is specified, it "
"names a logger which, together with its children, will have its events "
"allowed through the filter. If *name* is the empty string, allows every "
"event."
msgstr ""

#: ../Doc/library/logging.rst:476
msgid ""
"Is the specified record to be logged? Returns zero for no, nonzero for yes. "
"If deemed appropriate, the record may be modified in-place by this method."
msgstr ""

# b4e82a179ed14587be73d423b47d2bfd
#: ../Doc/library/logging.rst:480
msgid ""
"Note that filters attached to handlers are consulted whenever an event is "
"emitted by the handler, whereas filters attached to loggers are consulted "
"whenever an event is logged to the handler (using :meth:`debug`, :meth:"
"`info`, etc.) This means that events which have been generated by descendant "
"loggers will not be filtered by a logger's filter setting, unless the filter "
"has also been applied to those descendant loggers."
msgstr ""

# 203310bfe1344b26996c9fe0e58049e0
#: ../Doc/library/logging.rst:487
msgid ""
"You don't actually need to subclass ``Filter``: you can pass any instance "
"which has a ``filter`` method with the same semantics."
msgstr ""

# a523c7796bc44b83a81332b0defc4452
#: ../Doc/library/logging.rst:490
msgid ""
"Although filters are used primarily to filter records based on more "
"sophisticated criteria than levels, they get to see every record which is "
"processed by the handler or logger they're attached to: this can be useful "
"if you want to do things like counting how many records were processed by a "
"particular logger or handler, or adding, changing or removing attributes in "
"the LogRecord being processed. Obviously changing the LogRecord needs to be "
"done with some care, but it does allow the injection of contextual "
"information into logs (see :ref:`filters-contextual`)."
msgstr ""

#: ../Doc/library/logging.rst:502
msgid "LogRecord Objects"
msgstr ""

# 3e825794f5474e1c8aaa2580b9e5fdc8
#: ../Doc/library/logging.rst:504
msgid ""
":class:`LogRecord` instances are created automatically by the :class:"
"`Logger` every time something is logged, and can be created manually via :"
"func:`makeLogRecord` (for example, from a pickled event received over the "
"wire)."
msgstr ""

# 9db9e0e38ec5417db1715a441b3d6af2
#: ../Doc/library/logging.rst:512
msgid "Contains all the information pertinent to the event being logged."
msgstr ""

# 4c1c1ecc8e514b0c84301cbead60201c
#: ../Doc/library/logging.rst:514
msgid ""
"The primary information is passed in :attr:`msg` and :attr:`args`, which are "
"combined using ``msg % args`` to create the :attr:`message` field of the "
"record."
msgstr ""

# 83b89975117946f6a31471fc3dff6e06
#: ../Doc/library/logging.rst:542
msgid ""
"Returns the message for this :class:`LogRecord` instance after merging any "
"user-supplied arguments with the message. If the user-supplied message "
"argument to the logging call is not a string, :func:`str` is called on it to "
"convert it to a string. This allows use of user-defined classes as messages, "
"whose ``__str__`` method can return the actual format string to be used."
msgstr ""

# 0521c181f8cf41c68be67860151aa586
#: ../Doc/library/logging.rst:553
msgid "LogRecord attributes"
msgstr ""

# 830fe1d38dfd400aa50ecad296af89ef
#: ../Doc/library/logging.rst:555
msgid ""
"The LogRecord has a number of attributes, most of which are derived from the "
"parameters to the constructor. (Note that the names do not always correspond "
"exactly between the LogRecord constructor parameters and the LogRecord "
"attributes.) These attributes can be used to merge data from the record into "
"the format string. The following table lists (in alphabetical order) the "
"attribute names, their meanings and the corresponding placeholder in a %-"
"style format string."
msgstr ""

# 105ef66b74a144a9bc7d8a7a026b9e3f
#: ../Doc/library/logging.rst:564
msgid "Attribute name"
msgstr ""

#: ../Doc/library/logging.rst:564 ../Doc/library/logging.rst:879
#: ../Doc/library/ossaudiodev.rst:185 ../Doc/library/posixfile.rst:110
#: ../Doc/library/posixfile.rst:144 ../Doc/library/struct.rst:166
msgid "Format"
msgstr ""

# 4e533cd868234b4287ad77311bb401c0
#: ../Doc/library/logging.rst:566
msgid "args"
msgstr ""

# 4002f8bde85842b1b1a8ee9be29ae0ea
# c86268fcfd9e4b7da79974fbcabf8ce3
# 58e824bade6d4e5d993cd9014b52ce92
#: ../Doc/library/logging.rst:566 ../Doc/library/logging.rst:578
#: ../Doc/library/logging.rst:606
msgid "You shouldn't need to format this yourself."
msgstr ""

# e143c7724db942c08a51e3d689fbaa90
#: ../Doc/library/logging.rst:566
msgid "The tuple of arguments merged into ``msg`` to produce ``message``."
msgstr ""

# 65537cb188024a7da592fa4e4bab6ead
#: ../Doc/library/logging.rst:569
msgid "asctime"
msgstr ""

#: ../Doc/library/logging.rst:569
msgid "``%(asctime)s``"
msgstr ""

# 54ca45af242746c3b6319632c6908687
#: ../Doc/library/logging.rst:569
msgid ""
"Human-readable time when the :class:`LogRecord` was created.  By default "
"this is of the form '2003-07-08 16:49:45,896' (the numbers after the comma "
"are millisecond portion of the time)."
msgstr ""

# 2d89af49cb054cd1a2bc9941fa5cde76
#: ../Doc/library/logging.rst:575
msgid "created"
msgstr ""

#: ../Doc/library/logging.rst:575
msgid "``%(created)f``"
msgstr ""

#: ../Doc/library/logging.rst:575
msgid ""
"Time when the :class:`LogRecord` was created (as returned by :func:`time."
"time`)."
msgstr ""

# 88dbf57ff59a446da99778c9a732ea15
#: ../Doc/library/logging.rst:578
msgid "exc_info"
msgstr ""

# cf2ad014a519455a91609a73c232c492
#: ../Doc/library/logging.rst:578
msgid ""
"Exception tuple (à la ``sys.exc_info``) or, if no exception has occurred, "
"*None*."
msgstr ""

# d5e47b2f0cd943fb92eb6d208eebab8a
#: ../Doc/library/logging.rst:581
msgid "filename"
msgstr ""

#: ../Doc/library/logging.rst:581
msgid "``%(filename)s``"
msgstr ""

# 993c822b21da4517935a1bde6f80d042
#: ../Doc/library/logging.rst:581
msgid "Filename portion of ``pathname``."
msgstr ""

# 4b076e9b2fa948309980413dd1b7ea1b
#: ../Doc/library/logging.rst:583
msgid "funcName"
msgstr ""

#: ../Doc/library/logging.rst:583
msgid "``%(funcName)s``"
msgstr ""

#: ../Doc/library/logging.rst:583
msgid "Name of function containing the logging call."
msgstr ""

# 0cb6134775eb4a99a8a497de0717c4ae
#: ../Doc/library/logging.rst:585
msgid "levelname"
msgstr ""

#: ../Doc/library/logging.rst:585
msgid "``%(levelname)s``"
msgstr ""

#: ../Doc/library/logging.rst:585
msgid ""
"Text logging level for the message (``'DEBUG'``, ``'INFO'``, ``'WARNING'``, "
"``'ERROR'``, ``'CRITICAL'``)."
msgstr ""

# c7a6c79143784bbd8f52245f9ed41a97
#: ../Doc/library/logging.rst:589
msgid "levelno"
msgstr ""

#: ../Doc/library/logging.rst:589
msgid "``%(levelno)s``"
msgstr ""

#: ../Doc/library/logging.rst:589
msgid ""
"Numeric logging level for the message (:const:`DEBUG`, :const:`INFO`, :const:"
"`WARNING`, :const:`ERROR`, :const:`CRITICAL`)."
msgstr ""

# 535723f5e014496695d156df57c71cec
#: ../Doc/library/logging.rst:594
msgid "lineno"
msgstr ""

#: ../Doc/library/logging.rst:594
msgid "``%(lineno)d``"
msgstr ""

#: ../Doc/library/logging.rst:594
msgid "Source line number where the logging call was issued (if available)."
msgstr ""

#: ../Doc/library/logging.rst:597
msgid "``%(module)s``"
msgstr ""

# b6587b6b7bac4cf8bfff7d86fd6985f4
#: ../Doc/library/logging.rst:597
msgid "Module (name portion of ``filename``)."
msgstr ""

# 434dbc577b984f93b3d4520513d64b4e
#: ../Doc/library/logging.rst:599
msgid "msecs"
msgstr ""

#: ../Doc/library/logging.rst:599
msgid "``%(msecs)d``"
msgstr ""

#: ../Doc/library/logging.rst:599
msgid ""
"Millisecond portion of the time when the :class:`LogRecord` was created."
msgstr ""

# 5a38d2556c1f4939894e59fae88cfe39
#: ../Doc/library/logging.rst:602
msgid "message"
msgstr ""

#: ../Doc/library/logging.rst:602
msgid "``%(message)s``"
msgstr ""

# 7454753d294144948bafc3470c1314f8
#: ../Doc/library/logging.rst:602
msgid ""
"The logged message, computed as ``msg % args``. This is set when :meth:"
"`Formatter.format` is invoked."
msgstr ""

# 54284d89df2942ef81af07fb3125baa8
#: ../Doc/library/logging.rst:606
msgid "msg"
msgstr ""

# c17ea8c44b4e4d488ea9f51de783c321
#: ../Doc/library/logging.rst:606
msgid ""
"The format string passed in the original logging call. Merged with ``args`` "
"to produce ``message``, or an arbitrary object (see :ref:`arbitrary-object-"
"messages`)."
msgstr ""

# 7a03f31b2c8440eaaa536fe25d3236d7
#: ../Doc/library/logging.rst:611
msgid "name"
msgstr ""

#: ../Doc/library/logging.rst:611
msgid "``%(name)s``"
msgstr ""

# 28c18f191e214fb68eee9150caaef691
#: ../Doc/library/logging.rst:611
msgid "Name of the logger used to log the call."
msgstr ""

# 3ef048974d064a77ac2fe417b5af3c8e
#: ../Doc/library/logging.rst:613
msgid "pathname"
msgstr ""

#: ../Doc/library/logging.rst:613
msgid "``%(pathname)s``"
msgstr ""

#: ../Doc/library/logging.rst:613
msgid ""
"Full pathname of the source file where the logging call was issued (if "
"available)."
msgstr ""

# 9bb586db17f54b7eb24e9014f9d7819d
#: ../Doc/library/logging.rst:616
msgid "process"
msgstr ""

#: ../Doc/library/logging.rst:616
msgid "``%(process)d``"
msgstr ""

#: ../Doc/library/logging.rst:616
msgid "Process ID (if available)."
msgstr ""

# 7fbd4bc87ddd409ca5600a17ff0489e6
#: ../Doc/library/logging.rst:618
msgid "processName"
msgstr ""

# 974d13549696462fbd9bc6d0d9fbfa3a
#: ../Doc/library/logging.rst:618
msgid "``%(processName)s``"
msgstr ""

# 18c0eec5b03d4871965bf9be993f362f
#: ../Doc/library/logging.rst:618
msgid "Process name (if available)."
msgstr ""

# 26b3debb76a64206a557f43826f241e5
#: ../Doc/library/logging.rst:620
msgid "relativeCreated"
msgstr ""

#: ../Doc/library/logging.rst:620
msgid "``%(relativeCreated)d``"
msgstr ""

#: ../Doc/library/logging.rst:620
msgid ""
"Time in milliseconds when the LogRecord was created, relative to the time "
"the logging module was loaded."
msgstr ""

# 281190e5649948c1973610b805106cec
#: ../Doc/library/logging.rst:624
msgid "thread"
msgstr ""

#: ../Doc/library/logging.rst:624
msgid "``%(thread)d``"
msgstr ""

#: ../Doc/library/logging.rst:624
msgid "Thread ID (if available)."
msgstr ""

# ec087a89dfd849eab8211682c4b8a4ba
#: ../Doc/library/logging.rst:626
msgid "threadName"
msgstr ""

#: ../Doc/library/logging.rst:626
msgid "``%(threadName)s``"
msgstr ""

#: ../Doc/library/logging.rst:626
msgid "Thread name (if available)."
msgstr ""

#: ../Doc/library/logging.rst:638
msgid "LoggerAdapter Objects"
msgstr ""

# 9d1f00dd903c4d24b0551596a26ef665
#: ../Doc/library/logging.rst:640
msgid ""
":class:`LoggerAdapter` instances are used to conveniently pass contextual "
"information into logging calls. For a usage example , see the section on :"
"ref:`adding contextual information to your logging output <context-info>`."
msgstr ""

#: ../Doc/library/logging.rst:649
msgid ""
"Returns an instance of :class:`LoggerAdapter` initialized with an "
"underlying :class:`Logger` instance and a dict-like object."
msgstr ""

#: ../Doc/library/logging.rst:654
msgid ""
"Modifies the message and/or keyword arguments passed to a logging call in "
"order to insert contextual information. This implementation takes the object "
"passed as *extra* to the constructor and adds it to *kwargs* using key "
"'extra'. The return value is a (*msg*, *kwargs*) tuple which has the "
"(possibly modified) versions of the arguments passed in."
msgstr ""

# 5a6d8e053fa545bebd22cb2d378ebd11
#: ../Doc/library/logging.rst:660
msgid ""
"In addition to the above, :class:`LoggerAdapter` supports the following "
"methods of :class:`Logger`, i.e. :meth:`debug`, :meth:`info`, :meth:"
"`warning`, :meth:`error`, :meth:`exception`, :meth:`critical`, :meth:`log`, :"
"meth:`isEnabledFor`, :meth:`getEffectiveLevel`, :meth:`setLevel`, :meth:"
"`hasHandlers`. These methods have the same signatures as their counterparts "
"in :class:`Logger`, so you can use the two types of instances "
"interchangeably."
msgstr ""

#: ../Doc/library/logging.rst:674
msgid "Thread Safety"
msgstr ""

#: ../Doc/library/logging.rst:676
msgid ""
"The logging module is intended to be thread-safe without any special work "
"needing to be done by its clients. It achieves this though using threading "
"locks; there is one lock to serialize access to the module's shared data, "
"and each handler also creates a lock to serialize access to its underlying I/"
"O."
msgstr ""

#: ../Doc/library/logging.rst:681
msgid ""
"If you are implementing asynchronous signal handlers using the :mod:`signal` "
"module, you may not be able to use logging from within such handlers. This "
"is because lock implementations in the :mod:`threading` module are not "
"always re-entrant, and so cannot be invoked from such signal handlers."
msgstr ""

#: ../Doc/library/logging.rst:688
msgid "Module-Level Functions"
msgstr ""

#: ../Doc/library/logging.rst:690
msgid ""
"In addition to the classes described above, there are a number of module- "
"level functions."
msgstr ""

# 7217e649c5f6490c8749f5491a7742dc
#: ../Doc/library/logging.rst:696
msgid ""
"Return a logger with the specified name or, if no name is specified, return "
"a logger which is the root logger of the hierarchy. If specified, the name "
"is typically a dot-separated hierarchical name like *\"a\"*, *\"a.b\"* or *"
"\"a.b.c.d\"*. Choice of these names is entirely up to the developer who is "
"using logging."
msgstr ""

#: ../Doc/library/logging.rst:701
msgid ""
"All calls to this function with a given name return the same logger "
"instance. This means that logger instances never need to be passed between "
"different parts of an application."
msgstr ""

#: ../Doc/library/logging.rst:708
msgid ""
"Return either the standard :class:`Logger` class, or the last class passed "
"to :func:`setLoggerClass`. This function may be called from within a new "
"class definition, to ensure that installing a customised :class:`Logger` "
"class will not undo customisations already applied by other code. For "
"example::"
msgstr ""

#: ../Doc/library/logging.rst:719
msgid ""
"Logs a message with level :const:`DEBUG` on the root logger. The *msg* is "
"the message format string, and the *args* are the arguments which are merged "
"into *msg* using the string formatting operator. (Note that this means that "
"you can use keywords in the format string, together with a single dictionary "
"argument.)"
msgstr ""

#: ../Doc/library/logging.rst:730
msgid ""
"The other optional keyword argument is *extra* which can be used to pass a "
"dictionary which is used to populate the __dict__ of the LogRecord created "
"for the logging event with user-defined attributes. These custom attributes "
"can then be used as you like. For example, they could be incorporated into "
"logged messages. For example::"
msgstr ""

# 0e9775d5adbb49c29d8f43c14402fed1
#: ../Doc/library/logging.rst:741
msgid "would print something like::"
msgstr ""

#: ../Doc/library/logging.rst:769
msgid ""
"Logs a message with level :const:`INFO` on the root logger. The arguments "
"are interpreted as for :func:`debug`."
msgstr ""

#: ../Doc/library/logging.rst:775
msgid ""
"Logs a message with level :const:`WARNING` on the root logger. The arguments "
"are interpreted as for :func:`debug`."
msgstr ""

#: ../Doc/library/logging.rst:781
msgid ""
"Logs a message with level :const:`ERROR` on the root logger. The arguments "
"are interpreted as for :func:`debug`."
msgstr ""

#: ../Doc/library/logging.rst:787
msgid ""
"Logs a message with level :const:`CRITICAL` on the root logger. The "
"arguments are interpreted as for :func:`debug`."
msgstr ""

#: ../Doc/library/logging.rst:793
msgid ""
"Logs a message with level :const:`ERROR` on the root logger. The arguments "
"are interpreted as for :func:`debug`. Exception info is added to the logging "
"message. This function should only be called from an exception handler."
msgstr ""

#: ../Doc/library/logging.rst:800
msgid ""
"Logs a message with level *level* on the root logger. The other arguments "
"are interpreted as for :func:`debug`."
msgstr ""

# fa192da1d05a439792926f68e5638bc6
#: ../Doc/library/logging.rst:803
msgid ""
"PLEASE NOTE: The above module-level functions which delegate to the root "
"logger should *not* be used in threads, in versions of Python earlier than "
"2.7.1 and 3.2, unless at least one handler has been added to the root logger "
"*before* the threads are started. These convenience functions call :func:"
"`basicConfig` to ensure that at least one handler is available; in earlier "
"versions of Python, this can (under rare circumstances) lead to handlers "
"being added multiple times to the root logger, which can in turn lead to "
"multiple messages for the same event."
msgstr ""

# 050a7d78c390498db34ecf59de161c7c
#: ../Doc/library/logging.rst:814
msgid ""
"Provides an overriding level *lvl* for all loggers which takes precedence "
"over the logger's own level. When the need arises to temporarily throttle "
"logging output down across the whole application, this function can be "
"useful. Its effect is to disable all logging calls of severity *lvl* and "
"below, so that if you call it with a value of INFO, then all INFO and DEBUG "
"events would be discarded, whereas those of severity WARNING and above would "
"be processed according to the logger's effective level. To undo the effect "
"of a call to ``logging.disable(lvl)``, call ``logging.disable(logging.NOTSET)"
"``."
msgstr ""

#: ../Doc/library/logging.rst:826
msgid ""
"Associates level *lvl* with text *levelName* in an internal dictionary, "
"which is used to map numeric levels to a textual representation, for example "
"when a :class:`Formatter` formats a message. This function can also be used "
"to define your own levels. The only constraints are that all levels used "
"must be registered using this function, levels should be positive integers "
"and they should increase in increasing order of severity."
msgstr ""

# 90f4ffe48b21427386eaf4b69396c983
#: ../Doc/library/logging.rst:833
msgid ""
"NOTE: If you are thinking of defining your own levels, please see the "
"section on :ref:`custom-levels`."
msgstr ""

#: ../Doc/library/logging.rst:838
msgid ""
"Returns the textual representation of logging level *lvl*. If the level is "
"one of the predefined levels :const:`CRITICAL`, :const:`ERROR`, :const:"
"`WARNING`, :const:`INFO` or :const:`DEBUG` then you get the corresponding "
"string. If you have associated levels with names using :func:`addLevelName` "
"then the name you have associated with *lvl* is returned. If a numeric value "
"corresponding to one of the defined levels is passed in, the corresponding "
"string representation is returned. Otherwise, the string \"Level %s\" % lvl "
"is returned."
msgstr ""

#: ../Doc/library/logging.rst:849
msgid ""
"Creates and returns a new :class:`LogRecord` instance whose attributes are "
"defined by *attrdict*. This function is useful for taking a pickled :class:"
"`LogRecord` attribute dictionary, sent over a socket, and reconstituting it "
"as a :class:`LogRecord` instance at the receiving end."
msgstr ""

#: ../Doc/library/logging.rst:857
msgid ""
"Does basic configuration for the logging system by creating a :class:"
"`StreamHandler` with a default :class:`Formatter` and adding it to the root "
"logger. The functions :func:`debug`, :func:`info`, :func:`warning`, :func:"
"`error` and :func:`critical` will call :func:`basicConfig` automatically if "
"no handlers are defined for the root logger."
msgstr ""

#: ../Doc/library/logging.rst:863
msgid ""
"This function does nothing if the root logger already has handlers "
"configured for it."
msgstr ""

# 5016d1926f064f4281f3e577ab0864e8
#: ../Doc/library/logging.rst:869
msgid ""
"PLEASE NOTE: This function should be called from the main thread before "
"other threads are started. In versions of Python prior to 2.7.1 and 3.2, if "
"this function is called from multiple threads, it is possible (in rare "
"circumstances) that a handler will be added to the root logger more than "
"once, leading to unexpected results such as messages being duplicated in the "
"log."
msgstr ""

#: ../Doc/library/logging.rst:876
msgid "The following keyword arguments are supported."
msgstr ""

#: ../Doc/library/logging.rst:881
msgid "``filename``"
msgstr ""

#: ../Doc/library/logging.rst:881
msgid ""
"Specifies that a FileHandler be created, using the specified filename, "
"rather than a StreamHandler."
msgstr ""

#: ../Doc/library/logging.rst:885
msgid "``filemode``"
msgstr ""

#: ../Doc/library/logging.rst:885
msgid ""
"Specifies the mode to open the file, if filename is specified (if filemode "
"is unspecified, it defaults to 'a')."
msgstr ""

#: ../Doc/library/logging.rst:889
msgid "``format``"
msgstr ""

#: ../Doc/library/logging.rst:889
msgid "Use the specified format string for the handler."
msgstr ""

#: ../Doc/library/logging.rst:892
msgid "``datefmt``"
msgstr ""

#: ../Doc/library/logging.rst:892
msgid "Use the specified date/time format."
msgstr ""

#: ../Doc/library/logging.rst:894
msgid "``level``"
msgstr ""

#: ../Doc/library/logging.rst:894
msgid "Set the root logger level to the specified level."
msgstr ""

#: ../Doc/library/logging.rst:897
msgid "``stream``"
msgstr ""

#: ../Doc/library/logging.rst:897
msgid ""
"Use the specified stream to initialize the StreamHandler. Note that this "
"argument is incompatible with 'filename' - if both are present, 'stream' is "
"ignored."
msgstr ""

#: ../Doc/library/logging.rst:906
msgid ""
"Informs the logging system to perform an orderly shutdown by flushing and "
"closing all handlers. This should be called at application exit and no "
"further use of the logging system should be made after this call."
msgstr ""

#: ../Doc/library/logging.rst:913
msgid ""
"Tells the logging system to use the class *klass* when instantiating a "
"logger. The class should define :meth:`__init__` such that only a name "
"argument is required, and the :meth:`__init__` should call :meth:`Logger."
"__init__`. This function is typically called before any loggers are "
"instantiated by applications which need to use custom logger behavior."
msgstr ""

#: ../Doc/library/logging.rst:921
msgid "Integration with the warnings module"
msgstr ""

#: ../Doc/library/logging.rst:923
msgid ""
"The :func:`captureWarnings` function can be used to integrate :mod:`logging` "
"with the :mod:`warnings` module."
msgstr ""

#: ../Doc/library/logging.rst:928
msgid ""
"This function is used to turn the capture of warnings by logging on and off."
msgstr ""

# a7cea4febca64f74b206b4db13736918
#: ../Doc/library/logging.rst:931
msgid ""
"If *capture* is ``True``, warnings issued by the :mod:`warnings` module will "
"be redirected to the logging system. Specifically, a warning will be "
"formatted using :func:`warnings.formatwarning` and the resulting string "
"logged to a logger named ``'py.warnings'`` with a severity of :const:"
"`WARNING`."
msgstr ""

# b38a97ade61b45e7af30a5494cfac55e
#: ../Doc/library/logging.rst:936
msgid ""
"If *capture* is ``False``, the redirection of warnings to the logging system "
"will stop, and warnings will be redirected to their original destinations (i."
"e. those in effect before ``captureWarnings(True)`` was called)."
msgstr ""

# f8bb9d89774a490888c626efbc70aea0
# 0b71048850df41e9a88cd27942a798df
#: ../Doc/library/logging.rst:944 ../Doc/library/logging.handlers.rst:738
msgid "Configuration API for the logging module."
msgstr ""

# ef44e18309a2406cafae17d546819d28
# e7dd5cf4550541849aef84a642db34cb
#: ../Doc/library/logging.rst:947 ../Doc/library/logging.config.rst:729
msgid "Useful handlers included with the logging module."
msgstr ""

#: ../Doc/library/logging.rst:950
msgid ""
"The proposal which described this feature for inclusion in the Python "
"standard library."
msgstr ""

#: ../Doc/library/logging.rst:954
msgid ""
"This is the original source for the :mod:`logging` package.  The version of "
"the package available from this site is suitable for use with Python 1.5.2, "
"2.1.x and 2.2.x, which do not include the :mod:`logging` package in the "
"standard library."
msgstr ""

# 6aef905668c14567bda78f1a610c90f3
#: ../Doc/library/logging.config.rst:2
msgid ":mod:`logging.config` --- Logging configuration"
msgstr ""

# 2d7d298fc6494bde8632ed4725929c0d
# 334e7d3418b54be987dd7b5044a03f12
#: ../Doc/library/logging.config.rst:13 ../Doc/library/logging.handlers.rst:13
msgid ""
"This page contains only reference information. For tutorials, please see"
msgstr ""

# e05f73d8273e4fe4bbb40af2762548ce
#: ../Doc/library/logging.config.rst:20
msgid "This section describes the API for configuring the logging module."
msgstr ""

#: ../Doc/library/logging.config.rst:25
msgid "Configuration functions"
msgstr ""

#: ../Doc/library/logging.config.rst:27
msgid ""
"The following functions configure the logging module. They are located in "
"the :mod:`logging.config` module.  Their use is optional --- you can "
"configure the logging module using these functions or by making calls to the "
"main API (defined in :mod:`logging` itself) and defining handlers which are "
"declared either in :mod:`logging` or :mod:`logging.handlers`."
msgstr ""

#: ../Doc/library/logging.config.rst:35
msgid ""
"Takes the logging configuration from a dictionary.  The contents of this "
"dictionary are described in :ref:`logging-config-dictschema` below."
msgstr ""

#: ../Doc/library/logging.config.rst:39
msgid ""
"If an error is encountered during configuration, this function will raise a :"
"exc:`ValueError`, :exc:`TypeError`, :exc:`AttributeError` or :exc:"
"`ImportError` with a suitably descriptive message.  The following is a "
"(possibly incomplete) list of conditions which will raise an error:"
msgstr ""

#: ../Doc/library/logging.config.rst:45
msgid ""
"A ``level`` which is not a string or which is a string not corresponding to "
"an actual logging level."
msgstr ""

#: ../Doc/library/logging.config.rst:47
msgid "A ``propagate`` value which is not a boolean."
msgstr ""

#: ../Doc/library/logging.config.rst:48
msgid "An id which does not have a corresponding destination."
msgstr ""

#: ../Doc/library/logging.config.rst:49
msgid "A non-existent handler id found during an incremental call."
msgstr ""

#: ../Doc/library/logging.config.rst:50
msgid "An invalid logger name."
msgstr ""

#: ../Doc/library/logging.config.rst:51
msgid "Inability to resolve to an internal or external object."
msgstr ""

#: ../Doc/library/logging.config.rst:53
msgid ""
"Parsing is performed by the :class:`DictConfigurator` class, whose "
"constructor is passed the dictionary used for configuration, and has a :meth:"
"`configure` method.  The :mod:`logging.config` module has a callable "
"attribute :attr:`dictConfigClass` which is initially set to :class:"
"`DictConfigurator`. You can replace the value of :attr:`dictConfigClass` "
"with a suitable implementation of your own."
msgstr ""

#: ../Doc/library/logging.config.rst:61
msgid ""
":func:`dictConfig` calls :attr:`dictConfigClass` passing the specified "
"dictionary, and then calls the :meth:`configure` method on the returned "
"object to put the configuration into effect::"
msgstr ""

#: ../Doc/library/logging.config.rst:68
msgid ""
"For example, a subclass of :class:`DictConfigurator` could call "
"``DictConfigurator.__init__()`` in its own :meth:`__init__()`, then set up "
"custom prefixes which would be usable in the subsequent :meth:`configure` "
"call. :attr:`dictConfigClass` would be bound to this new subclass, and then :"
"func:`dictConfig` could be called exactly as in the default, uncustomized "
"state."
msgstr ""

# 2e7d81b9acd24e5494eb915f71946636
#: ../Doc/library/logging.config.rst:79
msgid ""
"Reads the logging configuration from a :mod:`configparser`\\-format file "
"named *fname*. This function can be called several times from an "
"application, allowing an end user to select from various pre-canned "
"configurations (if the developer provides a mechanism to present the choices "
"and load the chosen configuration)."
msgstr ""

#: ../Doc/library/logging.config.rst:103
msgid ""
"Starts up a socket server on the specified port, and listens for new "
"configurations. If no port is specified, the module's default :const:"
"`DEFAULT_LOGGING_CONFIG_PORT` is used. Logging configurations will be sent "
"as a file suitable for processing by :func:`fileConfig`. Returns a :class:"
"`Thread` instance on which you can call :meth:`start` to start the server, "
"and which you can :meth:`join` when appropriate. To stop the server, call :"
"func:`stopListening`."
msgstr ""

#: ../Doc/library/logging.config.rst:111
msgid ""
"To send a configuration to the socket, read in the configuration file and "
"send it to the socket as a string of bytes preceded by a four-byte length "
"string packed in binary using ``struct.pack('>L', n)``."
msgstr ""

# 2b51a6a6b9494007b5a00f7fbb133fc1
#: ../Doc/library/logging.config.rst:115
msgid ""
"Because portions of the configuration are passed through :func:`eval`, use "
"of this function may open its users to a security risk. While the function "
"only binds to a socket on ``localhost``, and so does not accept connections "
"from remote machines, there are scenarios where untrusted code could be run "
"under the account of the process which calls :func:`listen`. Specifically, "
"if the process calling :func:`listen` runs on a multi-user machine where "
"users cannot trust each other, then a malicious user could arrange to run "
"essentially arbitrary code in a victim user's process, simply by connecting "
"to the victim's :func:`listen` socket and sending a configuration which runs "
"whatever code the attacker wants to have executed in the victim's process. "
"This is especially easy to do if the default port is used, but not hard even "
"if a different port is used)."
msgstr ""

#: ../Doc/library/logging.config.rst:131
msgid ""
"Stops the listening server which was created with a call to :func:`listen`. "
"This is typically called before calling :meth:`join` on the return value "
"from :func:`listen`."
msgstr ""

#: ../Doc/library/logging.config.rst:139
msgid "Configuration dictionary schema"
msgstr ""

# bebaac4112c74b7ca5051a4e5bedc158
#: ../Doc/library/logging.config.rst:141
msgid ""
"Describing a logging configuration requires listing the various objects to "
"create and the connections between them; for example, you may create a "
"handler named 'console' and then say that the logger named 'startup' will "
"send its messages to the 'console' handler. These objects aren't limited to "
"those provided by the :mod:`logging` module because you might write your own "
"formatter or handler class. The parameters to these classes may also need to "
"include external objects such as ``sys.stderr``.  The syntax for describing "
"these objects and connections is defined in :ref:`logging-config-dict-"
"connections` below."
msgstr ""

#: ../Doc/library/logging.config.rst:153
msgid "Dictionary Schema Details"
msgstr ""

#: ../Doc/library/logging.config.rst:155
msgid ""
"The dictionary passed to :func:`dictConfig` must contain the following keys:"
msgstr ""

# 44134874ba034c1bb342f3ddbbcaa86e
#: ../Doc/library/logging.config.rst:158
msgid ""
"*version* - to be set to an integer value representing the schema version.  "
"The only valid value at present is 1, but having this key allows the schema "
"to evolve while still preserving backwards compatibility."
msgstr ""

#: ../Doc/library/logging.config.rst:163
msgid ""
"All other keys are optional, but if present they will be interpreted as "
"described below.  In all cases below where a 'configuring dict' is "
"mentioned, it will be checked for the special ``'()'`` key to see if a "
"custom instantiation is required.  If so, the mechanism described in :ref:"
"`logging-config-dict-userdef` below is used to create an instance; "
"otherwise, the context is used to determine what to instantiate."
msgstr ""

# 0b52b2182f564f299807d7d891a8816f
#: ../Doc/library/logging.config.rst:170
msgid ""
"*formatters* - the corresponding value will be a dict in which each key is a "
"formatter id and each value is a dict describing how to configure the "
"corresponding Formatter instance."
msgstr ""

#: ../Doc/library/logging.config.rst:174
msgid ""
"The configuring dict is searched for keys ``format`` and ``datefmt`` (with "
"defaults of ``None``) and these are used to construct a :class:`logging."
"Formatter` instance."
msgstr ""

# ad65cbef74d1435e93f1e9780a169392
#: ../Doc/library/logging.config.rst:178
msgid ""
"*filters* - the corresponding value will be a dict in which each key is a "
"filter id and each value is a dict describing how to configure the "
"corresponding Filter instance."
msgstr ""

#: ../Doc/library/logging.config.rst:182
msgid ""
"The configuring dict is searched for the key ``name`` (defaulting to the "
"empty string) and this is used to construct a :class:`logging.Filter` "
"instance."
msgstr ""

# 76cc1438beef4d8990b98bd93dab3a86
#: ../Doc/library/logging.config.rst:186
msgid ""
"*handlers* - the corresponding value will be a dict in which each key is a "
"handler id and each value is a dict describing how to configure the "
"corresponding Handler instance."
msgstr ""

#: ../Doc/library/logging.config.rst:190 ../Doc/library/logging.config.rst:230
msgid "The configuring dict is searched for the following keys:"
msgstr ""

#: ../Doc/library/logging.config.rst:192
msgid ""
"``class`` (mandatory).  This is the fully qualified name of the handler "
"class."
msgstr ""

#: ../Doc/library/logging.config.rst:195
msgid "``level`` (optional).  The level of the handler."
msgstr ""

#: ../Doc/library/logging.config.rst:197
msgid "``formatter`` (optional).  The id of the formatter for this handler."
msgstr ""

#: ../Doc/library/logging.config.rst:200
msgid "``filters`` (optional).  A list of ids of the filters for this handler."
msgstr ""

#: ../Doc/library/logging.config.rst:203
msgid ""
"All *other* keys are passed through as keyword arguments to the handler's "
"constructor.  For example, given the snippet::"
msgstr ""

#: ../Doc/library/logging.config.rst:220
msgid ""
"the handler with id ``console`` is instantiated as a :class:`logging."
"StreamHandler`, using ``sys.stdout`` as the underlying stream.  The handler "
"with id ``file`` is instantiated as a :class:`logging.handlers."
"RotatingFileHandler` with the keyword arguments ``filename='logconfig.log', "
"maxBytes=1024, backupCount=3``."
msgstr ""

# c69c065137ea4d8aa828b2ebdaed48c7
#: ../Doc/library/logging.config.rst:226
msgid ""
"*loggers* - the corresponding value will be a dict in which each key is a "
"logger name and each value is a dict describing how to configure the "
"corresponding Logger instance."
msgstr ""

#: ../Doc/library/logging.config.rst:232
msgid "``level`` (optional).  The level of the logger."
msgstr ""

#: ../Doc/library/logging.config.rst:234
msgid "``propagate`` (optional).  The propagation setting of the logger."
msgstr ""

#: ../Doc/library/logging.config.rst:236
msgid "``filters`` (optional).  A list of ids of the filters for this logger."
msgstr ""

#: ../Doc/library/logging.config.rst:239
msgid ""
"``handlers`` (optional).  A list of ids of the handlers for this logger."
msgstr ""

#: ../Doc/library/logging.config.rst:242
msgid ""
"The specified loggers will be configured according to the level, "
"propagation, filters and handlers specified."
msgstr ""

# 7254664205c2408f8dcd8bc3b5a143b7
#: ../Doc/library/logging.config.rst:245
msgid ""
"*root* - this will be the configuration for the root logger. Processing of "
"the configuration will be as for any logger, except that the ``propagate`` "
"setting will not be applicable."
msgstr ""

# 6cf5e7b56fa6480cb91069c4ba68546d
#: ../Doc/library/logging.config.rst:249
msgid ""
"*incremental* - whether the configuration is to be interpreted as "
"incremental to the existing configuration.  This value defaults to "
"``False``, which means that the specified configuration replaces the "
"existing configuration with the same semantics as used by the existing :func:"
"`fileConfig` API."
msgstr ""

#: ../Doc/library/logging.config.rst:255
msgid ""
"If the specified value is ``True``, the configuration is processed as "
"described in the section on :ref:`logging-config-dict-incremental`."
msgstr ""

# f85cdb6ed2ac478fabd899c5e6090f33
#: ../Doc/library/logging.config.rst:258
msgid ""
"*disable_existing_loggers* - whether any existing loggers are to be "
"disabled. This setting mirrors the parameter of the same name in :func:"
"`fileConfig`. If absent, this parameter defaults to ``True``. This value is "
"ignored if *incremental* is ``True``."
msgstr ""

#: ../Doc/library/logging.config.rst:266
msgid "Incremental Configuration"
msgstr ""

#: ../Doc/library/logging.config.rst:268
msgid ""
"It is difficult to provide complete flexibility for incremental "
"configuration.  For example, because objects such as filters and formatters "
"are anonymous, once a configuration is set up, it is not possible to refer "
"to such anonymous objects when augmenting a configuration."
msgstr ""

#: ../Doc/library/logging.config.rst:274
msgid ""
"Furthermore, there is not a compelling case for arbitrarily altering the "
"object graph of loggers, handlers, filters, formatters at run-time, once a "
"configuration is set up; the verbosity of loggers and handlers can be "
"controlled just by setting levels (and, in the case of loggers, propagation "
"flags).  Changing the object graph arbitrarily in a safe way is problematic "
"in a multi-threaded environment; while not impossible, the benefits are not "
"worth the complexity it adds to the implementation."
msgstr ""

#: ../Doc/library/logging.config.rst:283
msgid ""
"Thus, when the ``incremental`` key of a configuration dict is present and is "
"``True``, the system will completely ignore any ``formatters`` and "
"``filters`` entries, and process only the ``level`` settings in the "
"``handlers`` entries, and the ``level`` and ``propagate`` settings in the "
"``loggers`` and ``root`` entries."
msgstr ""

#: ../Doc/library/logging.config.rst:289
msgid ""
"Using a value in the configuration dict lets configurations to be sent over "
"the wire as pickled dicts to a socket listener. Thus, the logging verbosity "
"of a long-running application can be altered over time with no need to stop "
"and restart the application."
msgstr ""

#: ../Doc/library/logging.config.rst:297
msgid "Object connections"
msgstr ""

#: ../Doc/library/logging.config.rst:299
msgid ""
"The schema describes a set of logging objects - loggers, handlers, "
"formatters, filters - which are connected to each other in an object graph.  "
"Thus, the schema needs to represent connections between the objects.  For "
"example, say that, once configured, a particular logger has attached to it a "
"particular handler.  For the purposes of this discussion, we can say that "
"the logger represents the source, and the handler the destination, of a "
"connection between the two.  Of course in the configured objects this is "
"represented by the logger holding a reference to the handler.  In the "
"configuration dict, this is done by giving each destination object an id "
"which identifies it unambiguously, and then using the id in the source "
"object's configuration to indicate that a connection exists between the "
"source and the destination object with that id."
msgstr ""

#: ../Doc/library/logging.config.rst:313
msgid "So, for example, consider the following YAML snippet::"
msgstr ""

#: ../Doc/library/logging.config.rst:332
msgid ""
"(Note: YAML used here because it's a little more readable than the "
"equivalent Python source form for the dictionary.)"
msgstr ""

#: ../Doc/library/logging.config.rst:335
msgid ""
"The ids for loggers are the logger names which would be used "
"programmatically to obtain a reference to those loggers, e.g. ``foo.bar."
"baz``.  The ids for Formatters and Filters can be any string value (such as "
"``brief``, ``precise`` above) and they are transient, in that they are only "
"meaningful for processing the configuration dictionary and used to determine "
"connections between objects, and are not persisted anywhere when the "
"configuration call is complete."
msgstr ""

#: ../Doc/library/logging.config.rst:343
msgid ""
"The above snippet indicates that logger named ``foo.bar.baz`` should have "
"two handlers attached to it, which are described by the handler ids ``h1`` "
"and ``h2``. The formatter for ``h1`` is that described by id ``brief``, and "
"the formatter for ``h2`` is that described by id ``precise``."
msgstr ""

#: ../Doc/library/logging.config.rst:353
msgid "User-defined objects"
msgstr ""

#: ../Doc/library/logging.config.rst:355
msgid ""
"The schema supports user-defined objects for handlers, filters and "
"formatters.  (Loggers do not need to have different types for different "
"instances, so there is no support in this configuration schema for user-"
"defined logger classes.)"
msgstr ""

#: ../Doc/library/logging.config.rst:360
msgid ""
"Objects to be configured are described by dictionaries which detail their "
"configuration.  In some places, the logging system will be able to infer "
"from the context how an object is to be instantiated, but when a user-"
"defined object is to be instantiated, the system will not know how to do "
"this.  In order to provide complete flexibility for user-defined object "
"instantiation, the user needs to provide a 'factory' - a callable which is "
"called with a configuration dictionary and which returns the instantiated "
"object. This is signalled by an absolute import path to the factory being "
"made available under the special key ``'()'``.  Here's a concrete example::"
msgstr ""

#: ../Doc/library/logging.config.rst:384
msgid ""
"The above YAML snippet defines three formatters.  The first, with id "
"``brief``, is a standard :class:`logging.Formatter` instance with the "
"specified format string.  The second, with id ``default``, has a longer "
"format and also defines the time format explicitly, and will result in a :"
"class:`logging.Formatter` initialized with those two format strings.  Shown "
"in Python source form, the ``brief`` and ``default`` formatters have "
"configuration sub-dictionaries::"
msgstr ""

#: ../Doc/library/logging.config.rst:396
msgid "and::"
msgstr ""

#: ../Doc/library/logging.config.rst:403
msgid ""
"respectively, and as these dictionaries do not contain the special key "
"``'()'``, the instantiation is inferred from the context: as a result, "
"standard :class:`logging.Formatter` instances are created.  The "
"configuration sub-dictionary for the third formatter, with id ``custom``, "
"is::"
msgstr ""

#: ../Doc/library/logging.config.rst:416
msgid ""
"and this contains the special key ``'()'``, which means that user-defined "
"instantiation is wanted.  In this case, the specified factory callable will "
"be used. If it is an actual callable it will be used directly - otherwise, "
"if you specify a string (as in the example) the actual callable will be "
"located using normal import mechanisms. The callable will be called with the "
"**remaining** items in the configuration sub-dictionary as keyword "
"arguments.  In the above example, the formatter with id ``custom`` will be "
"assumed to be returned by the call::"
msgstr ""

#: ../Doc/library/logging.config.rst:428
msgid ""
"The key ``'()'`` has been used as the special key because it is not a valid "
"keyword parameter name, and so will not clash with the names of the keyword "
"arguments used in the call.  The ``'()'`` also serves as a mnemonic that the "
"corresponding value is a callable."
msgstr ""

#: ../Doc/library/logging.config.rst:437
msgid "Access to external objects"
msgstr ""

#: ../Doc/library/logging.config.rst:439
msgid ""
"There are times where a configuration needs to refer to objects external to "
"the configuration, for example ``sys.stderr``.  If the configuration dict is "
"constructed using Python code, this is straightforward, but a problem arises "
"when the configuration is provided via a text file (e.g. JSON, YAML).  In a "
"text file, there is no standard way to distinguish ``sys.stderr`` from the "
"literal string ``'sys.stderr'``.  To facilitate this distinction, the "
"configuration system looks for certain special prefixes in string values and "
"treat them specially.  For example, if the literal string ``'ext://sys."
"stderr'`` is provided as a value in the configuration, then the ``ext://`` "
"will be stripped off and the remainder of the value processed using normal "
"import mechanisms."
msgstr ""

#: ../Doc/library/logging.config.rst:452
msgid ""
"The handling of such prefixes is done in a way analogous to protocol "
"handling: there is a generic mechanism to look for prefixes which match the "
"regular expression ``^(?P<prefix>[a-z]+)://(?P<suffix>.*)$`` whereby, if the "
"``prefix`` is recognised, the ``suffix`` is processed in a prefix-dependent "
"manner and the result of the processing replaces the string value.  If the "
"prefix is not recognised, then the string value will be left as-is."
msgstr ""

#: ../Doc/library/logging.config.rst:464
msgid "Access to internal objects"
msgstr ""

#: ../Doc/library/logging.config.rst:466
msgid ""
"As well as external objects, there is sometimes also a need to refer to "
"objects in the configuration.  This will be done implicitly by the "
"configuration system for things that it knows about.  For example, the "
"string value ``'DEBUG'`` for a ``level`` in a logger or handler will "
"automatically be converted to the value ``logging.DEBUG``, and the "
"``handlers``, ``filters`` and ``formatter`` entries will take an object id "
"and resolve to the appropriate destination object."
msgstr ""

#: ../Doc/library/logging.config.rst:474
msgid ""
"However, a more generic mechanism is needed for user-defined objects which "
"are not known to the :mod:`logging` module.  For example, consider :class:"
"`logging.handlers.MemoryHandler`, which takes a ``target`` argument which is "
"another handler to delegate to. Since the system already knows about this "
"class, then in the configuration, the given ``target`` just needs to be the "
"object id of the relevant target handler, and the system will resolve to the "
"handler from the id.  If, however, a user defines a ``my.package.MyHandler`` "
"which has an ``alternate`` handler, the configuration system would not know "
"that the ``alternate`` referred to a handler.  To cater for this, a generic "
"resolution system allows the user to specify::"
msgstr ""

#: ../Doc/library/logging.config.rst:494
msgid ""
"The literal string ``'cfg://handlers.file'`` will be resolved in an "
"analogous way to strings with the ``ext://`` prefix, but looking in the "
"configuration itself rather than the import namespace.  The mechanism allows "
"access by dot or by index, in a similar way to that provided by ``str."
"format``.  Thus, given the following snippet::"
msgstr ""

#: ../Doc/library/logging.config.rst:510
msgid ""
"in the configuration, the string ``'cfg://handlers'`` would resolve to the "
"dict with key ``handlers``, the string ``'cfg://handlers.email`` would "
"resolve to the dict with key ``email`` in the ``handlers`` dict, and so on.  "
"The string ``'cfg://handlers.email.toaddrs[1]`` would resolve to ``'dev_team."
"domain.tld'`` and the string ``'cfg://handlers.email.toaddrs[0]'`` would "
"resolve to the value ``'support_team@domain.tld'``. The ``subject`` value "
"could be accessed using either ``'cfg://handlers.email.subject'`` or, "
"equivalently, ``'cfg://handlers.email[subject]'``.  The latter form only "
"needs to be used if the key contains spaces or non-alphanumeric characters.  "
"If an index value consists only of decimal digits, access will be attempted "
"using the corresponding integer value, falling back to the string value if "
"needed."
msgstr ""

#: ../Doc/library/logging.config.rst:524
msgid ""
"Given a string ``cfg://handlers.myhandler.mykey.123``, this will resolve to "
"``config_dict['handlers']['myhandler']['mykey']['123']``. If the string is "
"specified as ``cfg://handlers.myhandler.mykey[123]``, the system will "
"attempt to retrieve the value from ``config_dict['handlers']['myhandler']"
"['mykey'][123]``, and fall back to ``config_dict['handlers']['myhandler']"
"['mykey']['123']`` if that fails."
msgstr ""

# 89ae7aaa386146db9056a082e664a9f9
#: ../Doc/library/logging.config.rst:536
msgid "Import resolution and custom importers"
msgstr ""

# 82bc9bc7f570441daba60d38d804fd24
#: ../Doc/library/logging.config.rst:538
msgid ""
"Import resolution, by default, uses the builtin :func:`__import__` function "
"to do its importing. You may want to replace this with your own importing "
"mechanism: if so, you can replace the :attr:`importer` attribute of the :"
"class:`DictConfigurator` or its superclass, the :class:`BaseConfigurator` "
"class. However, you need to be careful because of the way functions are "
"accessed from classes via descriptors. If you are using a Python callable to "
"do your imports, and you want to define it at class level rather than "
"instance level, you need to wrap it with :func:`staticmethod`. For example::"
msgstr ""

# 35b17d1ec73242dda2059069506a6b98
#: ../Doc/library/logging.config.rst:553
msgid ""
"You don't need to wrap with :func:`staticmethod` if you're setting the "
"import callable on a configurator *instance*."
msgstr ""

#: ../Doc/library/logging.config.rst:560
msgid "Configuration file format"
msgstr ""

#: ../Doc/library/logging.config.rst:562
msgid ""
"The configuration file format understood by :func:`fileConfig` is based on :"
"mod:`configparser` functionality. The file must contain sections called ``"
"[loggers]``, ``[handlers]`` and ``[formatters]`` which identify by name the "
"entities of each type which are defined in the file. For each such entity, "
"there is a separate section which identifies how that entity is configured.  "
"Thus, for a logger named ``log01`` in the ``[loggers]`` section, the "
"relevant configuration details are held in a section ``[logger_log01]``. "
"Similarly, a handler called ``hand01`` in the ``[handlers]`` section will "
"have its configuration held in a section called ``[handler_hand01]``, while "
"a formatter called ``form01`` in the ``[formatters]`` section will have its "
"configuration specified in a section called ``[formatter_form01]``. The root "
"logger configuration must be specified in a section called ``[logger_root]``."
msgstr ""

#: ../Doc/library/logging.config.rst:575
msgid "Examples of these sections in the file are given below. ::"
msgstr ""

#: ../Doc/library/logging.config.rst:586
msgid ""
"The root logger must specify a level and a list of handlers. An example of a "
"root logger section is given below. ::"
msgstr ""

#: ../Doc/library/logging.config.rst:593
msgid ""
"The ``level`` entry can be one of ``DEBUG, INFO, WARNING, ERROR, CRITICAL`` "
"or ``NOTSET``. For the root logger only, ``NOTSET`` means that all messages "
"will be logged. Level values are :func:`eval`\\ uated in the context of the "
"``logging`` package's namespace."
msgstr ""

#: ../Doc/library/logging.config.rst:598
msgid ""
"The ``handlers`` entry is a comma-separated list of handler names, which "
"must appear in the ``[handlers]`` section. These names must appear in the ``"
"[handlers]`` section and have corresponding sections in the configuration "
"file."
msgstr ""

#: ../Doc/library/logging.config.rst:603
msgid ""
"For loggers other than the root logger, some additional information is "
"required. This is illustrated by the following example. ::"
msgstr ""

#: ../Doc/library/logging.config.rst:612
msgid ""
"The ``level`` and ``handlers`` entries are interpreted as for the root "
"logger, except that if a non-root logger's level is specified as ``NOTSET``, "
"the system consults loggers higher up the hierarchy to determine the "
"effective level of the logger. The ``propagate`` entry is set to 1 to "
"indicate that messages must propagate to handlers higher up the logger "
"hierarchy from this logger, or 0 to indicate that messages are **not** "
"propagated to handlers up the hierarchy. The ``qualname`` entry is the "
"hierarchical channel name of the logger, that is to say the name used by the "
"application to get the logger."
msgstr ""

#: ../Doc/library/logging.config.rst:621
msgid ""
"Sections which specify handler configuration are exemplified by the "
"following. ::"
msgstr ""

# 1b7bcf8144dd4b74b170ffdb815a9cc0
#: ../Doc/library/logging.config.rst:630
msgid ""
"The ``class`` entry indicates the handler's class (as determined by :func:"
"`eval` in the ``logging`` package's namespace). The ``level`` is interpreted "
"as for loggers, and ``NOTSET`` is taken to mean 'log everything'."
msgstr ""

#: ../Doc/library/logging.config.rst:638
msgid ""
"The ``formatter`` entry indicates the key name of the formatter for this "
"handler. If blank, a default formatter (``logging._defaultFormatter``) is "
"used. If a name is specified, it must appear in the ``[formatters]`` section "
"and have a corresponding section in the configuration file."
msgstr ""

#: ../Doc/library/logging.config.rst:643
msgid ""
"The ``args`` entry, when :func:`eval`\\ uated in the context of the "
"``logging`` package's namespace, is the list of arguments to the constructor "
"for the handler class. Refer to the constructors for the relevant handlers, "
"or to the examples below, to see how typical entries are constructed. ::"
msgstr ""

#: ../Doc/library/logging.config.rst:697
msgid ""
"Sections which specify formatter configuration are typified by the "
"following. ::"
msgstr ""

# ddfe9296597a41cc9cdaa5592fbdc225
#: ../Doc/library/logging.config.rst:704
msgid ""
"The ``format`` entry is the overall format string, and the ``datefmt`` entry "
"is the :func:`strftime`\\ -compatible date/time format string.  If empty, "
"the package substitutes ISO8601 format date/times, which is almost "
"equivalent to specifying the date format string ``'%Y-%m-%d %H:%M:%S'``.  "
"The ISO8601 format also specifies milliseconds, which are appended to the "
"result of using the above format string, with a comma separator.  An example "
"time in ISO8601 format is ``2003-01-23 00:29:50,411``."
msgstr ""

#: ../Doc/library/logging.config.rst:712
msgid ""
"The ``class`` entry is optional.  It indicates the name of the formatter's "
"class (as a dotted module and class name.)  This option is useful for "
"instantiating a :class:`Formatter` subclass.  Subclasses of :class:"
"`Formatter` can present exception tracebacks in an expanded or condensed "
"format."
msgstr ""

# 4d2b1844086441a19280dd7ac44b65ea
#: ../Doc/library/logging.config.rst:717
msgid ""
"Due to the use of :func:`eval` as described above, there are potential "
"security risks which result from using the :func:`listen` to send and "
"receive configurations via sockets. The risks are limited to where multiple "
"users with no mutual trust run code on the same machine; see the :func:"
"`listen` documentation for more information."
msgstr ""

# cb8ae85cebc142c1b17cb9d8f1452026
# 21956d8d86384bac9aa7d38854ed261e
#: ../Doc/library/logging.config.rst:726
#: ../Doc/library/logging.handlers.rst:735
msgid "API reference for the logging module."
msgstr ""

# dfbaa20b77f4455eb402fd90fa03f337
#: ../Doc/library/logging.handlers.rst:2
msgid ":mod:`logging.handlers` --- Logging handlers"
msgstr ""

# 648a5b05a3ec4c8b950706b27946c7d4
#: ../Doc/library/logging.handlers.rst:22
msgid ""
"The following useful handlers are provided in the package. Note that three "
"of the handlers (:class:`StreamHandler`, :class:`FileHandler` and :class:"
"`NullHandler`) are actually defined in the :mod:`logging` module itself, but "
"have been documented here along with the other handlers."
msgstr ""

#: ../Doc/library/logging.handlers.rst:30
msgid "StreamHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:32
msgid ""
"The :class:`StreamHandler` class, located in the core :mod:`logging` "
"package, sends logging output to streams such as *sys.stdout*, *sys.stderr* "
"or any file-like object (or, more precisely, any object which supports :meth:"
"`write` and :meth:`flush` methods)."
msgstr ""

#: ../Doc/library/logging.handlers.rst:40
msgid ""
"Returns a new instance of the :class:`StreamHandler` class. If *stream* is "
"specified, the instance will use it for logging output; otherwise, *sys."
"stderr* will be used."
msgstr ""

# 238e359aa6f9495c908c27eec0550110
#: ../Doc/library/logging.handlers.rst:47
msgid ""
"If a formatter is specified, it is used to format the record. The record is "
"then written to the stream with a newline terminator. If exception "
"information is present, it is formatted using :func:`traceback."
"print_exception` and appended to the stream."
msgstr ""

#: ../Doc/library/logging.handlers.rst:55
msgid ""
"Flushes the stream by calling its :meth:`flush` method. Note that the :meth:"
"`close` method is inherited from :class:`Handler` and so does no output, so "
"an explicit :meth:`flush` call may be needed at times."
msgstr ""

#: ../Doc/library/logging.handlers.rst:62
msgid "FileHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:64
msgid ""
"The :class:`FileHandler` class, located in the core :mod:`logging` package, "
"sends logging output to a disk file.  It inherits the output functionality "
"from :class:`StreamHandler`."
msgstr ""

#: ../Doc/library/logging.handlers.rst:71
msgid ""
"Returns a new instance of the :class:`FileHandler` class. The specified file "
"is opened and used as the stream for logging. If *mode* is not specified, :"
"const:`'a'` is used.  If *encoding* is not *None*, it is used to open the "
"file with that encoding.  If *delay* is true, then file opening is deferred "
"until the first call to :meth:`emit`. By default, the file grows "
"indefinitely."
msgstr ""

#: ../Doc/library/logging.handlers.rst:82
msgid "Closes the file."
msgstr ""

#: ../Doc/library/logging.handlers.rst:87
msgid "Outputs the record to the file."
msgstr ""

#: ../Doc/library/logging.handlers.rst:93
msgid "NullHandler"
msgstr ""

# e3ee424a85814afd84b264f8fa35621f
#: ../Doc/library/logging.handlers.rst:97
msgid ""
"The :class:`NullHandler` class, located in the core :mod:`logging` package, "
"does not do any formatting or output. It is essentially a 'no-op' handler "
"for use by library developers."
msgstr ""

#: ../Doc/library/logging.handlers.rst:103
msgid "Returns a new instance of the :class:`NullHandler` class."
msgstr ""

#: ../Doc/library/logging.handlers.rst:107
#: ../Doc/library/logging.handlers.rst:111
msgid "This method does nothing."
msgstr ""

# 3952f0422b934a3a9ab5e01099628656
#: ../Doc/library/logging.handlers.rst:115
msgid ""
"This method returns ``None`` for the lock, since there is no underlying I/O "
"to which access needs to be serialized."
msgstr ""

#: ../Doc/library/logging.handlers.rst:119
msgid ""
"See :ref:`library-config` for more information on how to use :class:"
"`NullHandler`."
msgstr ""

#: ../Doc/library/logging.handlers.rst:125
msgid "WatchedFileHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:131
msgid ""
"The :class:`WatchedFileHandler` class, located in the :mod:`logging."
"handlers` module, is a :class:`FileHandler` which watches the file it is "
"logging to. If the file changes, it is closed and reopened using the file "
"name."
msgstr ""

#: ../Doc/library/logging.handlers.rst:135
msgid ""
"A file change can happen because of usage of programs such as *newsyslog* "
"and *logrotate* which perform log file rotation. This handler, intended for "
"use under Unix/Linux, watches the file to see if it has changed since the "
"last emit. (A file is deemed to have changed if its device or inode have "
"changed.) If the file has changed, the old file stream is closed, and the "
"file opened to get a new stream."
msgstr ""

#: ../Doc/library/logging.handlers.rst:142
msgid ""
"This handler is not appropriate for use under Windows, because under Windows "
"open log files cannot be moved or renamed - logging opens the files with "
"exclusive locks - and so there is no need for such a handler. Furthermore, "
"*ST_INO* is not supported under Windows; :func:`stat` always returns zero "
"for this value."
msgstr ""

#: ../Doc/library/logging.handlers.rst:151
msgid ""
"Returns a new instance of the :class:`WatchedFileHandler` class. The "
"specified file is opened and used as the stream for logging. If *mode* is "
"not specified, :const:`'a'` is used.  If *encoding* is not *None*, it is "
"used to open the file with that encoding.  If *delay* is true, then file "
"opening is deferred until the first call to :meth:`emit`.  By default, the "
"file grows indefinitely."
msgstr ""

#: ../Doc/library/logging.handlers.rst:160
msgid ""
"Outputs the record to the file, but first checks to see if the file has "
"changed.  If it has, the existing stream is flushed and closed and the file "
"opened again, before outputting the record to the file."
msgstr ""

#: ../Doc/library/logging.handlers.rst:167
msgid "RotatingFileHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:169
msgid ""
"The :class:`RotatingFileHandler` class, located in the :mod:`logging."
"handlers` module, supports rotation of disk log files."
msgstr ""

#: ../Doc/library/logging.handlers.rst:175
msgid ""
"Returns a new instance of the :class:`RotatingFileHandler` class. The "
"specified file is opened and used as the stream for logging. If *mode* is "
"not specified, ``'a'`` is used.  If *encoding* is not *None*, it is used to "
"open the file with that encoding.  If *delay* is true, then file opening is "
"deferred until the first call to :meth:`emit`.  By default, the file grows "
"indefinitely."
msgstr ""

# 74bc58e3df9546e882052eafa6312519
#: ../Doc/library/logging.handlers.rst:181
msgid ""
"You can use the *maxBytes* and *backupCount* values to allow the file to :"
"dfn:`rollover` at a predetermined size. When the size is about to be "
"exceeded, the file is closed and a new file is silently opened for output. "
"Rollover occurs whenever the current log file is nearly *maxBytes* in "
"length; if *maxBytes* is zero, rollover never occurs.  If *backupCount* is "
"non-zero, the system will save old log files by appending the extensions "
"'.1', '.2' etc., to the filename. For example, with a *backupCount* of 5 and "
"a base file name of :file:`app.log`, you would get :file:`app.log`, :file:"
"`app.log.1`, :file:`app.log.2`, up to :file:`app.log.5`. The file being "
"written to is always :file:`app.log`.  When this file is filled, it is "
"closed and renamed to :file:`app.log.1`, and if files :file:`app.log.1`, :"
"file:`app.log.2`, etc.  exist, then they are renamed to :file:`app.log.2`, :"
"file:`app.log.3` etc.  respectively."
msgstr ""

#: ../Doc/library/logging.handlers.rst:200
#: ../Doc/library/logging.handlers.rst:270
msgid "Does a rollover, as described above."
msgstr ""

#: ../Doc/library/logging.handlers.rst:205
msgid ""
"Outputs the record to the file, catering for rollover as described "
"previously."
msgstr ""

#: ../Doc/library/logging.handlers.rst:211
msgid "TimedRotatingFileHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:213
msgid ""
"The :class:`TimedRotatingFileHandler` class, located in the :mod:`logging."
"handlers` module, supports rotation of disk log files at certain timed "
"intervals."
msgstr ""

#: ../Doc/library/logging.handlers.rst:220
msgid ""
"Returns a new instance of the :class:`TimedRotatingFileHandler` class. The "
"specified file is opened and used as the stream for logging. On rotating it "
"also sets the filename suffix. Rotating happens based on the product of "
"*when* and *interval*."
msgstr ""

#: ../Doc/library/logging.handlers.rst:225
msgid ""
"You can use the *when* to specify the type of *interval*. The list of "
"possible values is below.  Note that they are not case sensitive."
msgstr ""

#: ../Doc/library/logging.handlers.rst:229
msgid "Type of interval"
msgstr ""

#: ../Doc/library/logging.handlers.rst:231
msgid "``'S'``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:231
msgid "Seconds"
msgstr ""

#: ../Doc/library/logging.handlers.rst:233
msgid "``'M'``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:233
msgid "Minutes"
msgstr ""

#: ../Doc/library/logging.handlers.rst:235
msgid "Hours"
msgstr ""

#: ../Doc/library/logging.handlers.rst:237
msgid "``'D'``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:237
msgid "Days"
msgstr ""

#: ../Doc/library/logging.handlers.rst:239
msgid "``'W'``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:239
msgid "Week day (0=Monday)"
msgstr ""

#: ../Doc/library/logging.handlers.rst:241
msgid "``'midnight'``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:241
msgid "Roll over at midnight"
msgstr ""

#: ../Doc/library/logging.handlers.rst:244
msgid ""
"The system will save old log files by appending extensions to the filename. "
"The extensions are date-and-time based, using the strftime format ``%Y-%m-%d_"
"%H-%M-%S`` or a leading portion thereof, depending on the rollover interval."
msgstr ""

#: ../Doc/library/logging.handlers.rst:249
msgid ""
"When computing the next rollover time for the first time (when the handler "
"is created), the last modification time of an existing log file, or else the "
"current time, is used to compute when the next rotation will occur."
msgstr ""

#: ../Doc/library/logging.handlers.rst:253
msgid ""
"If the *utc* argument is true, times in UTC will be used; otherwise local "
"time is used."
msgstr ""

#: ../Doc/library/logging.handlers.rst:256
msgid ""
"If *backupCount* is nonzero, at most *backupCount* files will be kept, and "
"if more would be created when rollover occurs, the oldest one is deleted. "
"The deletion logic uses the interval to determine which files to delete, so "
"changing the interval may leave old files lying around."
msgstr ""

#: ../Doc/library/logging.handlers.rst:261
msgid ""
"If *delay* is true, then file opening is deferred until the first call to :"
"meth:`emit`."
msgstr ""

#: ../Doc/library/logging.handlers.rst:275
msgid ""
"Outputs the record to the file, catering for rollover as described above."
msgstr ""

#: ../Doc/library/logging.handlers.rst:281
msgid "SocketHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:283
msgid ""
"The :class:`SocketHandler` class, located in the :mod:`logging.handlers` "
"module, sends logging output to a network socket. The base class uses a TCP "
"socket."
msgstr ""

#: ../Doc/library/logging.handlers.rst:289
msgid ""
"Returns a new instance of the :class:`SocketHandler` class intended to "
"communicate with a remote machine whose address is given by *host* and "
"*port*."
msgstr ""

#: ../Doc/library/logging.handlers.rst:295
msgid "Closes the socket."
msgstr ""

#: ../Doc/library/logging.handlers.rst:300
msgid ""
"Pickles the record's attribute dictionary and writes it to the socket in "
"binary format. If there is an error with the socket, silently drops the "
"packet. If the connection was previously lost, re-establishes the "
"connection. To unpickle the record at the receiving end into a :class:"
"`LogRecord`, use the :func:`makeLogRecord` function."
msgstr ""

#: ../Doc/library/logging.handlers.rst:309
msgid ""
"Handles an error which has occurred during :meth:`emit`. The most likely "
"cause is a lost connection. Closes the socket so that we can retry on the "
"next event."
msgstr ""

#: ../Doc/library/logging.handlers.rst:316
msgid ""
"This is a factory method which allows subclasses to define the precise type "
"of socket they want. The default implementation creates a TCP socket (:const:"
"`socket.SOCK_STREAM`)."
msgstr ""

#: ../Doc/library/logging.handlers.rst:323
msgid ""
"Pickles the record's attribute dictionary in binary format with a length "
"prefix, and returns it ready for transmission across the socket."
msgstr ""

#: ../Doc/library/logging.handlers.rst:326
msgid ""
"Note that pickles aren't completely secure. If you are concerned about "
"security, you may want to override this method to implement a more secure "
"mechanism. For example, you can sign pickles using HMAC and then verify them "
"on the receiving end, or alternatively you can disable unpickling of global "
"objects on the receiving end."
msgstr ""

#: ../Doc/library/logging.handlers.rst:335
msgid ""
"Send a pickled string *packet* to the socket. This function allows for "
"partial sends which can happen when the network is busy."
msgstr ""

# 27d44b93d4474b03a5622ae9249d5b1c
#: ../Doc/library/logging.handlers.rst:341
msgid ""
"Tries to create a socket; on failure, uses an exponential back-off "
"algorithm.  On intial failure, the handler will drop the message it was "
"trying to send.  When subsequent messages are handled by the same instance, "
"it will not try connecting until some time has passed.  The default "
"parameters are such that the initial delay is one second, and if after that "
"delay the connection still can't be made, the handler will double the delay "
"each time up to a maximum of 30 seconds."
msgstr ""

# 5ac2d11b4ef34798bbb7ae9242ab207b
#: ../Doc/library/logging.handlers.rst:349
msgid "This behaviour is controlled by the following handler attributes:"
msgstr ""

# afb0f58f526e40988c8e8e45c60511d0
#: ../Doc/library/logging.handlers.rst:351
msgid "``retryStart`` (initial delay, defaulting to 1.0 seconds)."
msgstr ""

# 13e5f0c5ae2446a288da49f1553be2cf
#: ../Doc/library/logging.handlers.rst:352
msgid "``retryFactor`` (multiplier, defaulting to 2.0)."
msgstr ""

# e3f0a65d85bd4414b9ae513f04123dee
#: ../Doc/library/logging.handlers.rst:353
msgid "``retryMax`` (maximum delay, defaulting to 30.0 seconds)."
msgstr ""

# 982cb47522b34338a39cca63833df5be
#: ../Doc/library/logging.handlers.rst:355
msgid ""
"This means that if the remote listener starts up *after* the handler has "
"been used, you could lose messages (since the handler won't even attempt a "
"connection until the delay has elapsed, but just silently drop messages "
"during the delay period)."
msgstr ""

#: ../Doc/library/logging.handlers.rst:364
msgid "DatagramHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:366
msgid ""
"The :class:`DatagramHandler` class, located in the :mod:`logging.handlers` "
"module, inherits from :class:`SocketHandler` to support sending logging "
"messages over UDP sockets."
msgstr ""

#: ../Doc/library/logging.handlers.rst:373
msgid ""
"Returns a new instance of the :class:`DatagramHandler` class intended to "
"communicate with a remote machine whose address is given by *host* and "
"*port*."
msgstr ""

#: ../Doc/library/logging.handlers.rst:379
msgid ""
"Pickles the record's attribute dictionary and writes it to the socket in "
"binary format. If there is an error with the socket, silently drops the "
"packet. To unpickle the record at the receiving end into a :class:"
"`LogRecord`, use the :func:`makeLogRecord` function."
msgstr ""

#: ../Doc/library/logging.handlers.rst:387
msgid ""
"The factory method of :class:`SocketHandler` is here overridden to create a "
"UDP socket (:const:`socket.SOCK_DGRAM`)."
msgstr ""

#: ../Doc/library/logging.handlers.rst:393
msgid "Send a pickled string to a socket."
msgstr ""

#: ../Doc/library/logging.handlers.rst:399
msgid "SysLogHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:401
msgid ""
"The :class:`SysLogHandler` class, located in the :mod:`logging.handlers` "
"module, supports sending logging messages to a remote or local Unix syslog."
msgstr ""

# dc6903aed67440b88259b3f9d41e4769
#: ../Doc/library/logging.handlers.rst:407
msgid ""
"Returns a new instance of the :class:`SysLogHandler` class intended to "
"communicate with a remote Unix machine whose address is given by *address* "
"in the form of a ``(host, port)`` tuple.  If *address* is not specified, ``"
"('localhost', 514)`` is used.  The address is used to open a socket.  An "
"alternative to providing a ``(host, port)`` tuple is providing an address as "
"a string, for example '/dev/log'. In this case, a Unix domain socket is used "
"to send the message to the syslog. If *facility* is not specified, :const:"
"`LOG_USER` is used. The type of socket opened depends on the *socktype* "
"argument, which defaults to :const:`socket.SOCK_DGRAM` and thus opens a UDP "
"socket. To open a TCP socket (for use with the newer syslog daemons such as "
"rsyslog), specify a value of :const:`socket.SOCK_STREAM`."
msgstr ""

# 926a6c231cb64dd094f92ba2e9b65a1f
#: ../Doc/library/logging.handlers.rst:419
msgid ""
"Note that if your server is not listening on UDP port 514, :class:"
"`SysLogHandler` may appear not to work. In that case, check what address you "
"should be using for a domain socket - it's system dependent. For example, on "
"Linux it's usually '/dev/log' but on OS/X it's '/var/run/syslog'. You'll "
"need to check your platform and use the appropriate address (you may need to "
"do this check at runtime if your application needs to run on several "
"platforms). On Windows, you pretty much have to use the UDP option."
msgstr ""

#: ../Doc/library/logging.handlers.rst:434
msgid "Closes the socket to the remote host."
msgstr ""

#: ../Doc/library/logging.handlers.rst:439
msgid ""
"The record is formatted, and then sent to the syslog server. If exception "
"information is present, it is *not* sent to the server."
msgstr ""

#: ../Doc/library/logging.handlers.rst:445
msgid ""
"Encodes the facility and priority into an integer. You can pass in strings "
"or integers - if strings are passed, internal mapping dictionaries are used "
"to convert them to integers."
msgstr ""

#: ../Doc/library/logging.handlers.rst:449
msgid ""
"The symbolic ``LOG_`` values are defined in :class:`SysLogHandler` and "
"mirror the values defined in the ``sys/syslog.h`` header file."
msgstr ""

#: ../Doc/library/logging.handlers.rst:452
msgid "**Priorities**"
msgstr ""

#: ../Doc/library/logging.handlers.rst:455
#: ../Doc/library/logging.handlers.rst:477
msgid "Name (string)"
msgstr ""

#: ../Doc/library/logging.handlers.rst:455
#: ../Doc/library/logging.handlers.rst:477
msgid "Symbolic value"
msgstr ""

#: ../Doc/library/logging.handlers.rst:457
msgid "``alert``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:457
msgid "LOG_ALERT"
msgstr ""

#: ../Doc/library/logging.handlers.rst:459
msgid "``crit`` or ``critical``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:459
msgid "LOG_CRIT"
msgstr ""

#: ../Doc/library/logging.handlers.rst:461
msgid "``debug``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:461
msgid "LOG_DEBUG"
msgstr ""

#: ../Doc/library/logging.handlers.rst:463
msgid "``emerg`` or ``panic``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:463
msgid "LOG_EMERG"
msgstr ""

#: ../Doc/library/logging.handlers.rst:465
msgid "``err`` or ``error``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:465
msgid "LOG_ERR"
msgstr ""

#: ../Doc/library/logging.handlers.rst:467
msgid "``info``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:467
msgid "LOG_INFO"
msgstr ""

#: ../Doc/library/logging.handlers.rst:469
msgid "``notice``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:469
msgid "LOG_NOTICE"
msgstr ""

#: ../Doc/library/logging.handlers.rst:471
msgid "``warn`` or ``warning``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:471
msgid "LOG_WARNING"
msgstr ""

#: ../Doc/library/logging.handlers.rst:474
msgid "**Facilities**"
msgstr ""

#: ../Doc/library/logging.handlers.rst:479
msgid "``auth``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:479
msgid "LOG_AUTH"
msgstr ""

#: ../Doc/library/logging.handlers.rst:481
msgid "``authpriv``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:481
msgid "LOG_AUTHPRIV"
msgstr ""

#: ../Doc/library/logging.handlers.rst:483
msgid "``cron``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:483
msgid "LOG_CRON"
msgstr ""

#: ../Doc/library/logging.handlers.rst:485
msgid "``daemon``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:485
msgid "LOG_DAEMON"
msgstr ""

#: ../Doc/library/logging.handlers.rst:487
msgid "``ftp``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:487
msgid "LOG_FTP"
msgstr ""

#: ../Doc/library/logging.handlers.rst:489
msgid "``kern``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:489
msgid "LOG_KERN"
msgstr ""

#: ../Doc/library/logging.handlers.rst:491
msgid "``lpr``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:491
msgid "LOG_LPR"
msgstr ""

#: ../Doc/library/logging.handlers.rst:493
msgid "``mail``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:493
msgid "LOG_MAIL"
msgstr ""

#: ../Doc/library/logging.handlers.rst:495
msgid "``news``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:495
msgid "LOG_NEWS"
msgstr ""

#: ../Doc/library/logging.handlers.rst:497
msgid "``syslog``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:497
msgid "LOG_SYSLOG"
msgstr ""

#: ../Doc/library/logging.handlers.rst:499
msgid "``user``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:499
msgid "LOG_USER"
msgstr ""

#: ../Doc/library/logging.handlers.rst:501
msgid "``uucp``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:501
msgid "LOG_UUCP"
msgstr ""

#: ../Doc/library/logging.handlers.rst:503
msgid "``local0``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:503
msgid "LOG_LOCAL0"
msgstr ""

#: ../Doc/library/logging.handlers.rst:505
msgid "``local1``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:505
msgid "LOG_LOCAL1"
msgstr ""

#: ../Doc/library/logging.handlers.rst:507
msgid "``local2``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:507
msgid "LOG_LOCAL2"
msgstr ""

#: ../Doc/library/logging.handlers.rst:509
msgid "``local3``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:509
msgid "LOG_LOCAL3"
msgstr ""

#: ../Doc/library/logging.handlers.rst:511
msgid "``local4``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:511
msgid "LOG_LOCAL4"
msgstr ""

#: ../Doc/library/logging.handlers.rst:513
msgid "``local5``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:513
msgid "LOG_LOCAL5"
msgstr ""

#: ../Doc/library/logging.handlers.rst:515
msgid "``local6``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:515
msgid "LOG_LOCAL6"
msgstr ""

#: ../Doc/library/logging.handlers.rst:517
msgid "``local7``"
msgstr ""

#: ../Doc/library/logging.handlers.rst:517
msgid "LOG_LOCAL7"
msgstr ""

# 9c8a283fecf045988110aca7436d64c4
#: ../Doc/library/logging.handlers.rst:522
msgid ""
"Maps a logging level name to a syslog priority name. You may need to "
"override this if you are using custom levels, or if the default algorithm is "
"not suitable for your needs. The default algorithm maps ``DEBUG``, ``INFO``, "
"``WARNING``, ``ERROR`` and ``CRITICAL`` to the equivalent syslog names, and "
"all other level names to 'warning'."
msgstr ""

#: ../Doc/library/logging.handlers.rst:532
msgid "NTEventLogHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:534
msgid ""
"The :class:`NTEventLogHandler` class, located in the :mod:`logging.handlers` "
"module, supports sending logging messages to a local Windows NT, Windows "
"2000 or Windows XP event log. Before you can use it, you need Mark Hammond's "
"Win32 extensions for Python installed."
msgstr ""

#: ../Doc/library/logging.handlers.rst:542
msgid ""
"Returns a new instance of the :class:`NTEventLogHandler` class. The "
"*appname* is used to define the application name as it appears in the event "
"log. An appropriate registry entry is created using this name. The *dllname* "
"should give the fully qualified pathname of a .dll or .exe which contains "
"message definitions to hold in the log (if not specified, ``'win32service."
"pyd'`` is used - this is installed with the Win32 extensions and contains "
"some basic placeholder message definitions. Note that use of these "
"placeholders will make your event logs big, as the entire message source is "
"held in the log. If you want slimmer logs, you have to pass in the name of "
"your own .dll or .exe which contains the message definitions you want to use "
"in the event log). The *logtype* is one of ``'Application'``, ``'System'`` "
"or ``'Security'``, and defaults to ``'Application'``."
msgstr ""

#: ../Doc/library/logging.handlers.rst:558
msgid ""
"At this point, you can remove the application name from the registry as a "
"source of event log entries. However, if you do this, you will not be able "
"to see the events as you intended in the Event Log Viewer - it needs to be "
"able to access the registry to get the .dll name. The current version does "
"not do this."
msgstr ""

#: ../Doc/library/logging.handlers.rst:567
msgid ""
"Determines the message ID, event category and event type, and then logs the "
"message in the NT event log."
msgstr ""

#: ../Doc/library/logging.handlers.rst:573
msgid ""
"Returns the event category for the record. Override this if you want to "
"specify your own categories. This version returns 0."
msgstr ""

#: ../Doc/library/logging.handlers.rst:579
msgid ""
"Returns the event type for the record. Override this if you want to specify "
"your own types. This version does a mapping using the handler's typemap "
"attribute, which is set up in :meth:`__init__` to a dictionary which "
"contains mappings for :const:`DEBUG`, :const:`INFO`, :const:`WARNING`, :"
"const:`ERROR` and :const:`CRITICAL`. If you are using your own levels, you "
"will either need to override this method or place a suitable dictionary in "
"the handler's *typemap* attribute."
msgstr ""

#: ../Doc/library/logging.handlers.rst:590
msgid ""
"Returns the message ID for the record. If you are using your own messages, "
"you could do this by having the *msg* passed to the logger being an ID "
"rather than a format string. Then, in here, you could use a dictionary "
"lookup to get the message ID. This version returns 1, which is the base "
"message ID in :file:`win32service.pyd`."
msgstr ""

#: ../Doc/library/logging.handlers.rst:599
msgid "SMTPHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:601
msgid ""
"The :class:`SMTPHandler` class, located in the :mod:`logging.handlers` "
"module, supports sending logging messages to an email address via SMTP."
msgstr ""

#: ../Doc/library/logging.handlers.rst:607
msgid ""
"Returns a new instance of the :class:`SMTPHandler` class. The instance is "
"initialized with the from and to addresses and subject line of the email. "
"The *toaddrs* should be a list of strings. To specify a non-standard SMTP "
"port, use the (host, port) tuple format for the *mailhost* argument. If you "
"use a string, the standard SMTP port is used. If your SMTP server requires "
"authentication, you can specify a (username, password) tuple for the "
"*credentials* argument."
msgstr ""

# 267b4a0a940b4f2fad943bb98a3b3c2d
#: ../Doc/library/logging.handlers.rst:615
msgid ""
"To specify the use of a secure protocol (TLS), pass in a tuple to the "
"*secure* argument. This will only be used when authentication credentials "
"are supplied. The tuple should be either an empty tuple, or a single-value "
"tuple with the name of a keyfile, or a 2-value tuple with the names of the "
"keyfile and certificate file. (This tuple is passed to the :meth:`smtplib."
"SMTP.starttls` method.)"
msgstr ""

#: ../Doc/library/logging.handlers.rst:631
msgid "Formats the record and sends it to the specified addressees."
msgstr ""

#: ../Doc/library/logging.handlers.rst:636
msgid ""
"If you want to specify a subject line which is record-dependent, override "
"this method."
msgstr ""

#: ../Doc/library/logging.handlers.rst:642
msgid "MemoryHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:644
msgid ""
"The :class:`MemoryHandler` class, located in the :mod:`logging.handlers` "
"module, supports buffering of logging records in memory, periodically "
"flushing them to a :dfn:`target` handler. Flushing occurs whenever the "
"buffer is full, or when an event of a certain severity or greater is seen."
msgstr ""

# c57399c717f540ad8de4da7f1f39fe69
#: ../Doc/library/logging.handlers.rst:649
msgid ""
":class:`MemoryHandler` is a subclass of the more general :class:"
"`BufferingHandler`, which is an abstract class. This buffers logging records "
"in memory. Whenever each record is added to the buffer, a check is made by "
"calling :meth:`shouldFlush` to see if the buffer should be flushed.  If it "
"should, then :meth:`flush` is expected to do the flushing."
msgstr ""

#: ../Doc/library/logging.handlers.rst:658
msgid "Initializes the handler with a buffer of the specified capacity."
msgstr ""

#: ../Doc/library/logging.handlers.rst:663
msgid ""
"Appends the record to the buffer. If :meth:`shouldFlush` returns true, "
"calls :meth:`flush` to process the buffer."
msgstr ""

#: ../Doc/library/logging.handlers.rst:669
msgid ""
"You can override this to implement custom flushing behavior. This version "
"just zaps the buffer to empty."
msgstr ""

#: ../Doc/library/logging.handlers.rst:675
msgid ""
"Returns true if the buffer is up to capacity. This method can be overridden "
"to implement custom flushing strategies."
msgstr ""

#: ../Doc/library/logging.handlers.rst:681
msgid ""
"Returns a new instance of the :class:`MemoryHandler` class. The instance is "
"initialized with a buffer size of *capacity*. If *flushLevel* is not "
"specified, :const:`ERROR` is used. If no *target* is specified, the target "
"will need to be set using :meth:`setTarget` before this handler does "
"anything useful."
msgstr ""

#: ../Doc/library/logging.handlers.rst:689
msgid ""
"Calls :meth:`flush`, sets the target to :const:`None` and clears the buffer."
msgstr ""

# 7e2318189f1c4c37b03fe43764736d02
#: ../Doc/library/logging.handlers.rst:695
msgid ""
"For a :class:`MemoryHandler`, flushing means just sending the buffered "
"records to the target, if there is one. The buffer is also cleared when this "
"happens. Override if you want different behavior."
msgstr ""

#: ../Doc/library/logging.handlers.rst:702
msgid "Sets the target handler for this handler."
msgstr ""

#: ../Doc/library/logging.handlers.rst:707
msgid "Checks for buffer full or a record at the *flushLevel* or higher."
msgstr ""

#: ../Doc/library/logging.handlers.rst:713
msgid "HTTPHandler"
msgstr ""

#: ../Doc/library/logging.handlers.rst:715
msgid ""
"The :class:`HTTPHandler` class, located in the :mod:`logging.handlers` "
"module, supports sending logging messages to a Web server, using either "
"``GET`` or ``POST`` semantics."
msgstr ""

# fd66ee5d594540d09772e04a70c91142
#: ../Doc/library/logging.handlers.rst:722
msgid ""
"Returns a new instance of the :class:`HTTPHandler` class. The *host* can be "
"of the form ``host:port``, should you need to use a specific port number. If "
"no *method* is specified, ``GET`` is used."
msgstr ""

# 540e459995f74411be88e20ac28f72b4
#: ../Doc/library/logging.handlers.rst:729
msgid "Sends the record to the Web server as a percent-encoded dictionary."
msgstr ""

# cc1a7d5b5cb647a9bf9f7ade8daf2940
#: ../Doc/library/mac.rst:5
msgid "Mac OS X specific services"
msgstr ""

# f78141ef7c28487ea593d2394b48555b
#: ../Doc/library/mac.rst:7
msgid ""
"This chapter describes modules that are only available on the Mac OS X "
"platform."
msgstr ""

# 964e7dc1d8b74e028faf9ab2025139cd
#: ../Doc/library/mac.rst:9
msgid ""
"See the chapters :ref:`mac-scripting` and :ref:`undoc-mac-modules` for more "
"modules, and the HOWTO :ref:`using-on-mac` for a general introduction to Mac-"
"specific Python programming."
msgstr ""

# 985a261093f8463d86ffce0540850f79
#: ../Doc/library/mac.rst:15
msgid "These modules are deprecated and have been removed in Python 3.x."
msgstr ""

# 75ee98bf00b04969844b2d3cfe469447
#: ../Doc/library/macos.rst:2
msgid ":mod:`MacOS` --- Access to Mac OS interpreter features"
msgstr ""

# 90b93366c9774f5e8b618a6408770ee2
#: ../Doc/library/macos.rst:10
msgid ""
"This module provides access to MacOS specific functionality in the Python "
"interpreter, such as how the interpreter eventloop functions and the like. "
"Use with care."
msgstr ""

# 04f15bc309a44543957d919cffcae27f
#: ../Doc/library/macos.rst:18
msgid ""
"Note the capitalization of the module name; this is a historical artifact."
msgstr ""

# 49da1ad206254b57836190e6fdaa91a8
#: ../Doc/library/macos.rst:23
msgid ""
"Always ``'macho'``, from Python 2.4 on. In earlier versions of Python the "
"value could also be ``'ppc'`` for the classic Mac OS 8 runtime model or "
"``'carbon'`` for the Mac OS 9 runtime model."
msgstr ""

# 6e1082b0b88f415dac856749638fbca6
#: ../Doc/library/macos.rst:30
msgid ""
"The way the interpreter has been linked. As extension modules may be "
"incompatible between linking models, packages could use this information to "
"give more decent error messages. The value is one of ``'static'`` for a "
"statically linked Python, ``'framework'`` for Python in a Mac OS X "
"framework, ``'shared'`` for Python in a standard Unix shared library. Older "
"Pythons could also have the value ``'cfm'`` for Mac OS 9-compatible Python."
msgstr ""

# 83ccaddf187649ccaa3dee20605b2090
#: ../Doc/library/macos.rst:42
msgid ""
"This exception is raised on MacOS generated errors, either from functions in "
"this module or from other mac-specific modules like the toolbox interfaces. "
"The arguments are the integer error code (the :c:data:`OSErr` value) and a "
"textual description of the error code. Symbolic names for all known error "
"codes are defined in the standard module :mod:`macerrors`."
msgstr ""

# dee3a145e91a4392a3ab3a148ea437c7
#: ../Doc/library/macos.rst:51
msgid "Return the textual description of MacOS error code *errno*."
msgstr ""

# 3db38d56e085412aacd71e3fe498735f
#: ../Doc/library/macos.rst:56
msgid ""
"On Mac OS X the string is simply printed to stderr (on older Mac OS systems "
"more elaborate functionality was available), but it provides a convenient "
"location to attach a breakpoint in a low-level debugger like :program:`gdb`."
msgstr ""

# 7162abca4467490ead87b6e46928611b
# d43f98658c004352b511e0f3da472d48
# 8376960e18654641bf352ab333dab04c
#: ../Doc/library/macos.rst:62 ../Doc/library/macos.rst:71
#: ../Doc/library/macos.rst:122
msgid "Not available in 64-bit mode."
msgstr ""

# caeb684138984673984a86f3710c94b2
#: ../Doc/library/macos.rst:67
msgid "Ring the bell."
msgstr ""

# 78a7b232fb2b4d208d69de9a5c2cb3a2
#: ../Doc/library/macos.rst:76
msgid "Get the number of clock ticks (1/60th of a second) since system boot."
msgstr ""

# fc64e082c02143e0855fe039062e7519
#: ../Doc/library/macos.rst:81
msgid ""
"Return the file creator and file type as two four-character strings. The "
"*file* parameter can be a pathname or an ``FSSpec`` or  ``FSRef`` object."
msgstr ""

# 3b1944177814411ca26cdbfdec1561cb
# d782a0bb8e2b4aacadc5dd33a680f582
#: ../Doc/library/macos.rst:86 ../Doc/library/macos.rst:97
msgid "It is not possible to use an ``FSSpec`` in 64-bit mode."
msgstr ""

# a7ccd5341c524ea891b9cf7083829e18
#: ../Doc/library/macos.rst:91
msgid ""
"Set the file creator and file type. The *file* parameter can be a pathname "
"or an ``FSSpec`` or  ``FSRef`` object. *creator* and *type* must be four "
"character strings."
msgstr ""

# 1d249562ac034e208ed7fced831914d3
#: ../Doc/library/macos.rst:101
msgid ""
"Open the resource fork of a file. Arguments are the same as for the built-in "
"function :func:`open`. The object returned has file-like semantics, but it "
"is not a Python file object, so there may be subtle differences."
msgstr ""

# a1be3928a9584969b2b15432e0901109
#: ../Doc/library/macos.rst:108
msgid ""
"Checks whether the current process has access to the window manager. The "
"method will return ``False`` if the window manager is not available, for "
"instance when running on Mac OS X Server or when logged in via ssh, or when "
"the current interpreter is not running from a fullblown application bundle. "
"A script runs from an application bundle either when it has been started "
"with :program:`pythonw` instead of :program:`python` or when running  as an "
"applet."
msgstr ""

# d7ef3ec8102e48e2a7553e9ebd25949c
#: ../Doc/library/macos.rst:117
msgid ""
"Opens a splash screen by resource id. Use resourceid ``0`` to close the "
"splash screen."
msgstr ""

# 49e881eff0054522acc2e052d67154a9
#: ../Doc/library/macosa.rst:6
msgid "MacPython OSA Modules"
msgstr ""

# a080d8eb121f41fa92d7fe5d5ed2a835
#: ../Doc/library/macosa.rst:8
msgid ""
"This chapter describes the current implementation of the Open Scripting "
"Architecture (OSA, also commonly referred to as AppleScript) for Python, "
"allowing you to control scriptable applications from your Python program, "
"and with a fairly pythonic interface. Development on this set of modules has "
"stopped. For more up-to-date implementation of AppleScript support for "
"Python, see the third-party py-appscript project: <http://pypi.python.org/"
"pypi/appscript/>."
msgstr ""

# 3f84f0acb7334204bf428de34f1b0449
#: ../Doc/library/macosa.rst:15
msgid ""
"For a description of the various components of AppleScript and OSA, and to "
"get an understanding of the architecture and terminology, you should read "
"Apple's documentation. The \"Applescript Language Guide\" explains the "
"conceptual model and the terminology, and documents the standard suite. The "
"\"Open Scripting Architecture\" document explains how to use OSA from an "
"application programmers point of view. In the Apple Help Viewer these books "
"are located in the Developer Documentation, Core Technologies section."
msgstr ""

# cb80558656fe420e921ec0f9915b7501
#: ../Doc/library/macosa.rst:23
msgid ""
"As an example of scripting an application, the following piece of "
"AppleScript will get the name of the frontmost :program:`Finder` window and "
"print it::"
msgstr ""

# 666302ceb6ca4597b734733f3c8189a2
#: ../Doc/library/macosa.rst:30
msgid "In Python, the following code fragment will do the same::"
msgstr ""

# b0117ea04f63428b936f67240438e74a
#: ../Doc/library/macosa.rst:37
msgid ""
"As distributed the Python library includes packages that implement the "
"standard suites, plus packages that interface to a small number of common "
"applications."
msgstr ""

# a7f83e35dc014f83bbbbeb8325888dfb
#: ../Doc/library/macosa.rst:40
msgid ""
"To send AppleEvents to an application you must first create the Python "
"package interfacing to the terminology of the application (what :program:"
"`Script Editor` calls the \"Dictionary\"). This can be done from within the :"
"program:`PythonIDE` or by running the :file:`gensuitemodule.py` module as a "
"standalone program from the command line."
msgstr ""

# afe018966c624a9e9aec55f83657fc3e
#: ../Doc/library/macosa.rst:46
msgid ""
"The generated output is a package with a number of modules, one for every "
"suite used in the program plus an :mod:`__init__` module to glue it all "
"together. The Python inheritance graph follows the AppleScript inheritance "
"graph, so if a program's dictionary specifies that it includes support for "
"the Standard Suite, but extends one or two verbs with extra arguments then "
"the output suite will contain a module :mod:`Standard_Suite` that imports "
"and re-exports everything from :mod:`StdSuites.Standard_Suite` but overrides "
"the methods that have extra functionality. The output of :mod:"
"`gensuitemodule` is pretty readable, and contains the documentation that was "
"in the original AppleScript dictionary in Python docstrings, so reading it "
"is a good source of documentation."
msgstr ""

# a21c6cc7844542589fde0826b7f474c1
#: ../Doc/library/macosa.rst:57
msgid ""
"The output package implements a main class with the same name as the package "
"which contains all the AppleScript verbs as methods, with the direct object "
"as the first argument and all optional parameters as keyword arguments. "
"AppleScript classes are also implemented as Python classes, as are "
"comparisons and all the other thingies."
msgstr ""

# dff223aac56e44368c59edcdb3ebb8ff
#: ../Doc/library/macosa.rst:63
msgid ""
"The main Python class implementing the verbs also allows access to the "
"properties and elements declared in the AppleScript class \"application\". "
"In the current release that is as far as the object orientation goes, so in "
"the example above we need to use ``f.get(f.window(1).name)`` instead of the "
"more Pythonic ``f.window(1).name.get()``."
msgstr ""

# e5d25134f4c94b9380757ded78a37618
#: ../Doc/library/macosa.rst:69
msgid ""
"If an AppleScript identifier is not a Python identifier the name is mangled "
"according to a small number of rules:"
msgstr ""

# ac140fd66f744c379f117c098c3bff3e
#: ../Doc/library/macosa.rst:72
msgid "spaces are replaced with underscores"
msgstr ""

# 12f2337157744ec5b350c1b138f481f4
#: ../Doc/library/macosa.rst:74
msgid ""
"other non-alphanumeric characters are replaced with ``_xx_`` where ``xx`` is "
"the hexadecimal character value"
msgstr ""

# 3ed86e561ecb48a5ab0f0f1a8787060a
#: ../Doc/library/macosa.rst:77
msgid "any Python reserved word gets an underscore appended"
msgstr ""

# b1d4b43fe0394faf88df9f8e58dc9ea6
#: ../Doc/library/macosa.rst:79
msgid ""
"Python also has support for creating scriptable applications in Python, but "
"The following modules are relevant to MacPython AppleScript support:"
msgstr ""

# 0345641efd624b219d6f43ada92f2184
#: ../Doc/library/macosa.rst:91
msgid ""
"In addition, support modules have been pre-generated for :mod:`Finder`, :mod:"
"`Terminal`, :mod:`Explorer`, :mod:`Netscape`, :mod:`CodeWarrior`, :mod:"
"`SystemEvents` and :mod:`StdSuites`."
msgstr ""

# 07871db5a7184ff399a66848e5a65ad6
#: ../Doc/library/macostools.rst:3
msgid ":mod:`macostools` --- Convenience routines for file manipulation"
msgstr ""

# 45db247779a64585baffb5ab673286a6
#: ../Doc/library/macostools.rst:11
msgid ""
"This module contains some convenience routines for file-manipulation on the "
"Macintosh. All file parameters can be specified as pathnames, :class:`FSRef` "
"or :class:`FSSpec` objects.  This module expects a filesystem which supports "
"forked files, so it should not be used on UFS partitions."
msgstr ""

# d03c770b7b284a388cfed829d8e79444
#: ../Doc/library/macostools.rst:18
msgid "This module has been removed in Python 3."
msgstr ""

# 923d0a1702b448d69d0a2923596861bf
#: ../Doc/library/macostools.rst:22
msgid "The :mod:`macostools` module defines the following functions:"
msgstr ""

# 88d76dd2895c4d968a1108b06bbb57b1
#: ../Doc/library/macostools.rst:27
msgid ""
"Copy file *src* to *dst*.  If *createpath* is non-zero the folders leading "
"to *dst* are created if necessary. The method copies data and resource fork "
"and some finder information (creator, type, flags) and optionally the "
"creation, modification and backup times (default is to copy them). Custom "
"icons, comments and icon position are not copied."
msgstr ""

# 585d331b8ea84b9abb81511f18284176
# 9cbc77d4d5ab420ba4fdbd39e447285f
# 5f6b085189b4476c87a5c6ca6966c342
#: ../Doc/library/macostools.rst:35 ../Doc/library/macostools.rst:45
#: ../Doc/library/macostools.rst:54
msgid ""
"This function does not work in 64-bit code because it uses APIs that are not "
"available in 64-bit mode."
msgstr ""

# e012b5ffe55a4574b0fe877d9ecd0459
#: ../Doc/library/macostools.rst:40
msgid ""
"Recursively copy a file tree from *src* to *dst*, creating folders as "
"needed. *src* and *dst* should be specified as pathnames."
msgstr ""

# b7124cb20b01443481761f1e55702fb3
#: ../Doc/library/macostools.rst:50
msgid "Create a finder alias *dst* pointing to *src*."
msgstr ""

# 83b5f58906b6481886632f4e3a103207
#: ../Doc/library/macostools.rst:60
msgid ""
"Tell the finder that some bits of finder-information such as creator or type "
"for file *dst* has changed. The file can be specified by pathname or fsspec. "
"This call should tell the finder to redraw the files icon."
msgstr ""

# 604b011e999745f6ba69f2f1b64fb3d3
#: ../Doc/library/macostools.rst:70
msgid "The buffer size for ``copy``, default 1 megabyte."
msgstr ""

# 22b9626eba0e4c7c956980fe243aa730
#: ../Doc/library/macostools.rst:72
msgid ""
"Note that the process of creating finder aliases is not specified in the "
"Apple documentation. Hence, aliases created with :func:`mkalias` could "
"conceivably have incompatible behaviour in some cases."
msgstr ""

# 846a705757a44848ad4ccc39be1b3f43
#: ../Doc/library/macostools.rst:78
msgid ":mod:`findertools` --- The :program:`finder`'s Apple Events interface"
msgstr ""

# 074168506290427085e10e74ba1517d1
#: ../Doc/library/macostools.rst:87
msgid ""
"This module contains routines that give Python programs access to some "
"functionality provided by the finder. They are implemented as wrappers "
"around the AppleEvent interface to the finder."
msgstr ""

# 41e2460f9fbc4ad69c3dc2c5aaa29042
#: ../Doc/library/macostools.rst:91
msgid ""
"All file and folder parameters can be specified either as full pathnames, or "
"as :class:`FSRef` or :class:`FSSpec` objects."
msgstr ""

# 928acb1a35504489b17ed4c96a09cb75
#: ../Doc/library/macostools.rst:94
msgid "The :mod:`findertools` module defines the following functions:"
msgstr ""

# 284ca16df0bc48ff9250e9cb16894d91
#: ../Doc/library/macostools.rst:99
msgid ""
"Tell the finder to launch *file*. What launching means depends on the file: "
"applications are started, folders are opened and documents are opened in the "
"correct application."
msgstr ""

# 33852af4db4b4d3fb576d3dd23a854eb
#: ../Doc/library/macostools.rst:106
msgid ""
"Tell the finder to print a file. The behaviour is identical to selecting the "
"file and using the print command in the finder's file menu."
msgstr ""

# c31b04c4054f457fb3215dbb41b68f5d
#: ../Doc/library/macostools.rst:112
msgid ""
"Tell the finder to copy a file or folder *file* to folder *destdir*. The "
"function returns an :class:`Alias` object pointing to the new file."
msgstr ""

# 3dd82f8eb3074ae1976cbae502f6bb2a
#: ../Doc/library/macostools.rst:118
msgid ""
"Tell the finder to move a file or folder *file* to folder *destdir*. The "
"function returns an :class:`Alias` object pointing to the new file."
msgstr ""

# 701a7e7c9e2f4d00a7a40d23dd8a3858
#: ../Doc/library/macostools.rst:124
msgid ""
"Tell the finder to put the Macintosh to sleep, if your machine supports it."
msgstr ""

# 58c481271f5e49faad99d29df97a2bc6
#: ../Doc/library/macostools.rst:129
msgid "Tell the finder to perform an orderly restart of the machine."
msgstr ""

# 3e0c3126a49144d08def19ca1213b403
#: ../Doc/library/macostools.rst:134
msgid "Tell the finder to perform an orderly shutdown of the machine."
msgstr ""

#: ../Doc/library/macpath.rst:3
msgid ":mod:`macpath` --- Mac OS 9 path manipulation functions"
msgstr ""

#: ../Doc/library/macpath.rst:9
msgid ""
"This module is the Mac OS 9 (and earlier) implementation of the :mod:`os."
"path` module. It can be used to manipulate old-style Macintosh pathnames on "
"Mac OS X (or any other platform)."
msgstr ""

#: ../Doc/library/macpath.rst:13
msgid ""
"The following functions are available in this module: :func:`normcase`, :"
"func:`normpath`, :func:`isabs`, :func:`join`, :func:`split`, :func:`isdir`, :"
"func:`isfile`, :func:`walk`, :func:`exists`. For other functions available "
"in :mod:`os.path` dummy counterparts are available."
msgstr ""

#: ../Doc/library/mailbox.rst:3
msgid ":mod:`mailbox` --- Manipulate mailboxes in various formats"
msgstr ""

#: ../Doc/library/mailbox.rst:11
msgid ""
"This module defines two classes, :class:`Mailbox` and :class:`Message`, for "
"accessing and manipulating on-disk mailboxes and the messages they contain. :"
"class:`Mailbox` offers a dictionary-like mapping from keys to messages. :"
"class:`Message` extends the :mod:`email.Message` module's :class:`Message` "
"class with format-specific state and behavior. Supported mailbox formats are "
"Maildir, mbox, MH, Babyl, and MMDF."
msgstr ""

#: ../Doc/library/mailbox.rst:22
msgid "Represent and manipulate messages."
msgstr ""

#: ../Doc/library/mailbox.rst:28
msgid ":class:`Mailbox` objects"
msgstr ""

#: ../Doc/library/mailbox.rst:33
msgid "A mailbox, which may be inspected and modified."
msgstr ""

#: ../Doc/library/mailbox.rst:35
msgid ""
"The :class:`Mailbox` class defines an interface and is not intended to be "
"instantiated.  Instead, format-specific subclasses should inherit from :"
"class:`Mailbox` and your code should instantiate a particular subclass."
msgstr ""

#: ../Doc/library/mailbox.rst:39
msgid ""
"The :class:`Mailbox` interface is dictionary-like, with small keys "
"corresponding to messages. Keys are issued by the :class:`Mailbox` instance "
"with which they will be used and are only meaningful to that :class:"
"`Mailbox` instance. A key continues to identify a message even if the "
"corresponding message is modified, such as by replacing it with another "
"message."
msgstr ""

#: ../Doc/library/mailbox.rst:45
msgid ""
"Messages may be added to a :class:`Mailbox` instance using the set-like "
"method :meth:`add` and removed using a ``del`` statement or the set-like "
"methods :meth:`remove` and :meth:`discard`."
msgstr ""

#: ../Doc/library/mailbox.rst:49
msgid ""
":class:`Mailbox` interface semantics differ from dictionary semantics in "
"some noteworthy ways. Each time a message is requested, a new representation "
"(typically a :class:`Message` instance) is generated based upon the current "
"state of the mailbox. Similarly, when a message is added to a :class:"
"`Mailbox` instance, the provided message representation's contents are "
"copied. In neither case is a reference to the message representation kept by "
"the :class:`Mailbox` instance."
msgstr ""

#: ../Doc/library/mailbox.rst:57
msgid ""
"The default :class:`Mailbox` iterator iterates over message representations, "
"not keys as the default dictionary iterator does. Moreover, modification of "
"a mailbox during iteration is safe and well-defined. Messages added to the "
"mailbox after an iterator is created will not be seen by the iterator. "
"Messages removed from the mailbox before the iterator yields them will be "
"silently skipped, though using a key from an iterator may result in a :exc:"
"`KeyError` exception if the corresponding message is subsequently removed."
msgstr ""

#: ../Doc/library/mailbox.rst:68
msgid ""
"Be very cautious when modifying mailboxes that might be simultaneously "
"changed by some other process.  The safest mailbox format to use for such "
"tasks is Maildir; try to avoid using single-file formats such as mbox for "
"concurrent writing.  If you're modifying a mailbox, you *must* lock it by "
"calling the :meth:`lock` and :meth:`unlock` methods *before* reading any "
"messages in the file or making any changes by adding or deleting a message.  "
"Failing to lock the mailbox runs the risk of losing messages or corrupting "
"the entire mailbox."
msgstr ""

#: ../Doc/library/mailbox.rst:77
msgid ":class:`Mailbox` instances have the following methods:"
msgstr ""

#: ../Doc/library/mailbox.rst:82
msgid ""
"Add *message* to the mailbox and return the key that has been assigned to it."
msgstr ""

#: ../Doc/library/mailbox.rst:85
msgid ""
"Parameter *message* may be a :class:`Message` instance, an :class:`email."
"Message.Message` instance, a string, or a file-like object (which should be "
"open in text mode). If *message* is an instance of the appropriate format-"
"specific :class:`Message` subclass (e.g., if it's an :class:`mboxMessage` "
"instance and this is an :class:`mbox` instance), its format-specific "
"information is used. Otherwise, reasonable defaults for format-specific "
"information are used."
msgstr ""

#: ../Doc/library/mailbox.rst:98
msgid "Delete the message corresponding to *key* from the mailbox."
msgstr ""

#: ../Doc/library/mailbox.rst:100
msgid ""
"If no such message exists, a :exc:`KeyError` exception is raised if the "
"method was called as :meth:`remove` or :meth:`__delitem__` but no exception "
"is raised if the method was called as :meth:`discard`. The behavior of :meth:"
"`discard` may be preferred if the underlying mailbox format supports "
"concurrent modification by other processes."
msgstr ""

#: ../Doc/library/mailbox.rst:109
msgid ""
"Replace the message corresponding to *key* with *message*. Raise a :exc:"
"`KeyError` exception if no message already corresponds to *key*."
msgstr ""

#: ../Doc/library/mailbox.rst:112
msgid ""
"As with :meth:`add`, parameter *message* may be a :class:`Message` instance, "
"an :class:`email.Message.Message` instance, a string, or a file-like object "
"(which should be open in text mode). If *message* is an instance of the "
"appropriate format-specific :class:`Message` subclass (e.g., if it's an :"
"class:`mboxMessage` instance and this is an :class:`mbox` instance), its "
"format-specific information is used. Otherwise, the format-specific "
"information of the message that currently corresponds to *key* is left "
"unchanged."
msgstr ""

#: ../Doc/library/mailbox.rst:125
msgid ""
"Return an iterator over all keys if called as :meth:`iterkeys` or return a "
"list of keys if called as :meth:`keys`."
msgstr ""

#: ../Doc/library/mailbox.rst:133
msgid ""
"Return an iterator over representations of all messages if called as :meth:"
"`itervalues` or :meth:`__iter__` or return a list of such representations if "
"called as :meth:`values`. The messages are represented as instances of the "
"appropriate format-specific :class:`Message` subclass unless a custom "
"message factory was specified when the :class:`Mailbox` instance was "
"initialized."
msgstr ""

#: ../Doc/library/mailbox.rst:142
msgid ""
"The behavior of :meth:`__iter__` is unlike that of dictionaries, which "
"iterate over keys."
msgstr ""

#: ../Doc/library/mailbox.rst:149
msgid ""
"Return an iterator over (*key*, *message*) pairs, where *key* is a key and "
"*message* is a message representation, if called as :meth:`iteritems` or "
"return a list of such pairs if called as :meth:`items`. The messages are "
"represented as instances of the appropriate format-specific :class:`Message` "
"subclass unless a custom message factory was specified when the :class:"
"`Mailbox` instance was initialized."
msgstr ""

#: ../Doc/library/mailbox.rst:160
msgid ""
"Return a representation of the message corresponding to *key*. If no such "
"message exists, *default* is returned if the method was called as :meth:"
"`get` and a :exc:`KeyError` exception is raised if the method was called as :"
"meth:`__getitem__`. The message is represented as an instance of the "
"appropriate format-specific :class:`Message` subclass unless a custom "
"message factory was specified when the :class:`Mailbox` instance was "
"initialized."
msgstr ""

#: ../Doc/library/mailbox.rst:171
msgid ""
"Return a representation of the message corresponding to *key* as an instance "
"of the appropriate format-specific :class:`Message` subclass, or raise a :"
"exc:`KeyError` exception if no such message exists."
msgstr ""

#: ../Doc/library/mailbox.rst:178
msgid ""
"Return a string representation of the message corresponding to *key*, or "
"raise a :exc:`KeyError` exception if no such message exists."
msgstr ""

#: ../Doc/library/mailbox.rst:184
msgid ""
"Return a file-like representation of the message corresponding to *key*, or "
"raise a :exc:`KeyError` exception if no such message exists. The file-like "
"object behaves as if open in binary mode. This file should be closed once it "
"is no longer needed."
msgstr ""

#: ../Doc/library/mailbox.rst:191
msgid ""
"Unlike other representations of messages, file-like representations are not "
"necessarily independent of the :class:`Mailbox` instance that created them "
"or of the underlying mailbox. More specific documentation is provided by "
"each subclass."
msgstr ""

#: ../Doc/library/mailbox.rst:200
msgid "Return ``True`` if *key* corresponds to a message, ``False`` otherwise."
msgstr ""

#: ../Doc/library/mailbox.rst:205
msgid "Return a count of messages in the mailbox."
msgstr ""

#: ../Doc/library/mailbox.rst:210
msgid "Delete all messages from the mailbox."
msgstr ""

# f2a548067cdc4754aba15ef5d7d54906
#: ../Doc/library/mailbox.rst:215
msgid ""
"Return a representation of the message corresponding to *key* and delete the "
"message. If no such message exists, return *default* if it was supplied or "
"else raise a :exc:`KeyError` exception. The message is represented as an "
"instance of the appropriate format-specific :class:`Message` subclass unless "
"a custom message factory was specified when the :class:`Mailbox` instance "
"was initialized."
msgstr ""

#: ../Doc/library/mailbox.rst:225
msgid ""
"Return an arbitrary (*key*, *message*) pair, where *key* is a key and "
"*message* is a message representation, and delete the corresponding message. "
"If the mailbox is empty, raise a :exc:`KeyError` exception. The message is "
"represented as an instance of the appropriate format-specific :class:"
"`Message` subclass unless a custom message factory was specified when the :"
"class:`Mailbox` instance was initialized."
msgstr ""

#: ../Doc/library/mailbox.rst:235
msgid ""
"Parameter *arg* should be a *key*-to-*message* mapping or an iterable of "
"(*key*, *message*) pairs. Updates the mailbox so that, for each given *key* "
"and *message*, the message corresponding to *key* is set to *message* as if "
"by using :meth:`__setitem__`. As with :meth:`__setitem__`, each *key* must "
"already correspond to a message in the mailbox or else a :exc:`KeyError` "
"exception will be raised, so in general it is incorrect for *arg* to be a :"
"class:`Mailbox` instance."
msgstr ""

#: ../Doc/library/mailbox.rst:245
msgid "Unlike with dictionaries, keyword arguments are not supported."
msgstr ""

#: ../Doc/library/mailbox.rst:250
msgid ""
"Write any pending changes to the filesystem. For some :class:`Mailbox` "
"subclasses, changes are always written immediately and :meth:`flush` does "
"nothing, but you should still make a habit of calling this method."
msgstr ""

#: ../Doc/library/mailbox.rst:257
msgid ""
"Acquire an exclusive advisory lock on the mailbox so that other processes "
"know not to modify it. An :exc:`ExternalClashError` is raised if the lock is "
"not available. The particular locking mechanisms used depend upon the "
"mailbox format.  You should *always* lock the mailbox before making any "
"modifications to its contents."
msgstr ""

#: ../Doc/library/mailbox.rst:266
msgid "Release the lock on the mailbox, if any."
msgstr ""

#: ../Doc/library/mailbox.rst:271
msgid ""
"Flush the mailbox, unlock it if necessary, and close any open files. For "
"some :class:`Mailbox` subclasses, this method does nothing."
msgstr ""

#: ../Doc/library/mailbox.rst:278
msgid ":class:`Maildir`"
msgstr ""

#: ../Doc/library/mailbox.rst:283
msgid ""
"A subclass of :class:`Mailbox` for mailboxes in Maildir format. Parameter "
"*factory* is a callable object that accepts a file-like message "
"representation (which behaves as if opened in binary mode) and returns a "
"custom representation. If *factory* is ``None``, :class:`MaildirMessage` is "
"used as the default message representation. If *create* is ``True``, the "
"mailbox is created if it does not exist."
msgstr ""

# a4f0657b4b0b4b83b507c1b50d2bf539
#: ../Doc/library/mailbox.rst:290
msgid ""
"It is for historical reasons that *factory* defaults to :class:`rfc822."
"Message` and that *dirname* is named as such rather than *path*. For a :"
"class:`Maildir` instance that behaves like instances of other :class:"
"`Mailbox` subclasses, set *factory* to ``None``."
msgstr ""

#: ../Doc/library/mailbox.rst:295
msgid ""
"Maildir is a directory-based mailbox format invented for the qmail mail "
"transfer agent and now widely supported by other programs. Messages in a "
"Maildir mailbox are stored in separate files within a common directory "
"structure. This design allows Maildir mailboxes to be accessed and modified "
"by multiple unrelated programs without data corruption, so file locking is "
"unnecessary."
msgstr ""

#: ../Doc/library/mailbox.rst:302
msgid ""
"Maildir mailboxes contain three subdirectories, namely: :file:`tmp`, :file:"
"`new`, and :file:`cur`. Messages are created momentarily in the :file:`tmp` "
"subdirectory and then moved to the :file:`new` subdirectory to finalize "
"delivery. A mail user agent may subsequently move the message to the :file:"
"`cur` subdirectory and store information about the state of the message in a "
"special \"info\" section appended to its file name."
msgstr ""

#: ../Doc/library/mailbox.rst:309
msgid ""
"Folders of the style introduced by the Courier mail transfer agent are also "
"supported. Any subdirectory of the main mailbox is considered a folder if "
"``'.'`` is the first character in its name. Folder names are represented by :"
"class:`Maildir` without the leading ``'.'``. Each folder is itself a Maildir "
"mailbox but should not contain other folders. Instead, a logical nesting is "
"indicated using ``'.'`` to delimit levels, e.g., \"Archived.2005.07\"."
msgstr ""

#: ../Doc/library/mailbox.rst:318
msgid ""
"The Maildir specification requires the use of a colon (``':'``) in certain "
"message file names. However, some operating systems do not permit this "
"character in file names, If you wish to use a Maildir-like format on such an "
"operating system, you should specify another character to use instead. The "
"exclamation point (``'!'``) is a popular choice. For example::"
msgstr ""

#: ../Doc/library/mailbox.rst:328
msgid "The :attr:`colon` attribute may also be set on a per-instance basis."
msgstr ""

#: ../Doc/library/mailbox.rst:330
msgid ""
":class:`Maildir` instances have all of the methods of :class:`Mailbox` in "
"addition to the following:"
msgstr ""

#: ../Doc/library/mailbox.rst:336 ../Doc/library/mailbox.rst:514
msgid "Return a list of the names of all folders."
msgstr ""

#: ../Doc/library/mailbox.rst:341
msgid ""
"Return a :class:`Maildir` instance representing the folder whose name is "
"*folder*. A :exc:`NoSuchMailboxError` exception is raised if the folder does "
"not exist."
msgstr ""

#: ../Doc/library/mailbox.rst:348
msgid ""
"Create a folder whose name is *folder* and return a :class:`Maildir` "
"instance representing it."
msgstr ""

#: ../Doc/library/mailbox.rst:354 ../Doc/library/mailbox.rst:532
msgid ""
"Delete the folder whose name is *folder*. If the folder contains any "
"messages, a :exc:`NotEmptyError` exception will be raised and the folder "
"will not be deleted."
msgstr ""

#: ../Doc/library/mailbox.rst:361
msgid ""
"Delete temporary files from the mailbox that have not been accessed in the "
"last 36 hours. The Maildir specification says that mail-reading programs "
"should do this occasionally."
msgstr ""

#: ../Doc/library/mailbox.rst:365
msgid ""
"Some :class:`Mailbox` methods implemented by :class:`Maildir` deserve "
"special remarks:"
msgstr ""

#: ../Doc/library/mailbox.rst:375
msgid ""
"These methods generate unique file names based upon the current process ID. "
"When using multiple threads, undetected name clashes may occur and cause "
"corruption of the mailbox unless threads are coordinated to avoid using "
"these methods to manipulate the same mailbox simultaneously."
msgstr ""

#: ../Doc/library/mailbox.rst:383
msgid ""
"All changes to Maildir mailboxes are immediately applied, so this method "
"does nothing."
msgstr ""

#: ../Doc/library/mailbox.rst:390
msgid ""
"Maildir mailboxes do not support (or require) locking, so these methods do "
"nothing."
msgstr ""

#: ../Doc/library/mailbox.rst:396
msgid ""
":class:`Maildir` instances do not keep any open files and the underlying "
"mailboxes do not support locking, so this method does nothing."
msgstr ""

#: ../Doc/library/mailbox.rst:402
msgid ""
"Depending upon the host platform, it may not be possible to modify or remove "
"the underlying message while the returned file remains open."
msgstr ""

#: ../Doc/library/mailbox.rst:409
msgid "The original specification of the format."
msgstr ""

#: ../Doc/library/mailbox.rst:412
msgid ""
"Notes on Maildir by its inventor. Includes an updated name-creation scheme "
"and details on \"info\" semantics."
msgstr ""

#: ../Doc/library/mailbox.rst:416
msgid ""
"Another specification of the format. Describes a common extension for "
"supporting folders."
msgstr ""

#: ../Doc/library/mailbox.rst:423
msgid ":class:`mbox`"
msgstr ""

#: ../Doc/library/mailbox.rst:428
msgid ""
"A subclass of :class:`Mailbox` for mailboxes in mbox format. Parameter "
"*factory* is a callable object that accepts a file-like message "
"representation (which behaves as if opened in binary mode) and returns a "
"custom representation. If *factory* is ``None``, :class:`mboxMessage` is "
"used as the default message representation. If *create* is ``True``, the "
"mailbox is created if it does not exist."
msgstr ""

#: ../Doc/library/mailbox.rst:435
msgid ""
"The mbox format is the classic format for storing mail on Unix systems. All "
"messages in an mbox mailbox are stored in a single file with the beginning "
"of each message indicated by a line whose first five characters are \"From "
"\"."
msgstr ""

#: ../Doc/library/mailbox.rst:439
msgid ""
"Several variations of the mbox format exist to address perceived "
"shortcomings in the original. In the interest of compatibility, :class:"
"`mbox` implements the original format, which is sometimes referred to as :"
"dfn:`mboxo`. This means that the :mailheader:`Content-Length` header, if "
"present, is ignored and that any occurrences of \"From \" at the beginning "
"of a line in a message body are transformed to \">From \" when storing the "
"message, although occurrences of \">From \" are not transformed to \"From \" "
"when reading the message."
msgstr ""

#: ../Doc/library/mailbox.rst:447
msgid ""
"Some :class:`Mailbox` methods implemented by :class:`mbox` deserve special "
"remarks:"
msgstr ""

#: ../Doc/library/mailbox.rst:453
msgid ""
"Using the file after calling :meth:`flush` or :meth:`close` on the :class:"
"`mbox` instance may yield unpredictable results or raise an exception."
msgstr ""

# 4305c4f15ade475bae8af4d4eb20694c
# 7d164593923643e895770197bb4dec78
# 9c713ee5006f4d5c892f2c36e7e03114
#: ../Doc/library/mailbox.rst:461 ../Doc/library/mailbox.rst:673
#: ../Doc/library/mailbox.rst:724
msgid ""
"Three locking mechanisms are used---dot locking and, if available, the :c:"
"func:`flock` and :c:func:`lockf` system calls."
msgstr ""

#: ../Doc/library/mailbox.rst:468
msgid "A specification of the format and its variations."
msgstr ""

#: ../Doc/library/mailbox.rst:471
msgid "Another specification of the format, with details on locking."
msgstr ""

#: ../Doc/library/mailbox.rst:474
msgid "An argument for using the original mbox format rather than a variation."
msgstr ""

#: ../Doc/library/mailbox.rst:477
msgid "A history of mbox variations."
msgstr ""

#: ../Doc/library/mailbox.rst:483
msgid ":class:`MH`"
msgstr ""

#: ../Doc/library/mailbox.rst:488
msgid ""
"A subclass of :class:`Mailbox` for mailboxes in MH format. Parameter "
"*factory* is a callable object that accepts a file-like message "
"representation (which behaves as if opened in binary mode) and returns a "
"custom representation. If *factory* is ``None``, :class:`MHMessage` is used "
"as the default message representation. If *create* is ``True``, the mailbox "
"is created if it does not exist."
msgstr ""

#: ../Doc/library/mailbox.rst:495
msgid ""
"MH is a directory-based mailbox format invented for the MH Message Handling "
"System, a mail user agent. Each message in an MH mailbox resides in its own "
"file. An MH mailbox may contain other MH mailboxes (called :dfn:`folders`) "
"in addition to messages. Folders may be nested indefinitely. MH mailboxes "
"also support :dfn:`sequences`, which are named lists used to logically group "
"messages without moving them to sub-folders. Sequences are defined in a file "
"called :file:`.mh_sequences` in each folder."
msgstr ""

#: ../Doc/library/mailbox.rst:503
msgid ""
"The :class:`MH` class manipulates MH mailboxes, but it does not attempt to "
"emulate all of :program:`mh`'s behaviors. In particular, it does not modify "
"and is not affected by the :file:`context` or :file:`.mh_profile` files that "
"are used by :program:`mh` to store its state and configuration."
msgstr ""

#: ../Doc/library/mailbox.rst:508
msgid ""
":class:`MH` instances have all of the methods of :class:`Mailbox` in "
"addition to the following:"
msgstr ""

#: ../Doc/library/mailbox.rst:519
msgid ""
"Return an :class:`MH` instance representing the folder whose name is "
"*folder*. A :exc:`NoSuchMailboxError` exception is raised if the folder does "
"not exist."
msgstr ""

#: ../Doc/library/mailbox.rst:526
msgid ""
"Create a folder whose name is *folder* and return an :class:`MH` instance "
"representing it."
msgstr ""

#: ../Doc/library/mailbox.rst:539
msgid ""
"Return a dictionary of sequence names mapped to key lists. If there are no "
"sequences, the empty dictionary is returned."
msgstr ""

#: ../Doc/library/mailbox.rst:545
msgid ""
"Re-define the sequences that exist in the mailbox based upon *sequences*, a "
"dictionary of names mapped to key lists, like returned by :meth:"
"`get_sequences`."
msgstr ""

#: ../Doc/library/mailbox.rst:552
msgid ""
"Rename messages in the mailbox as necessary to eliminate gaps in numbering.  "
"Entries in the sequences list are updated correspondingly."
msgstr ""

#: ../Doc/library/mailbox.rst:557
msgid ""
"Already-issued keys are invalidated by this operation and should not be "
"subsequently used."
msgstr ""

#: ../Doc/library/mailbox.rst:560
msgid ""
"Some :class:`Mailbox` methods implemented by :class:`MH` deserve special "
"remarks:"
msgstr ""

#: ../Doc/library/mailbox.rst:568
msgid ""
"These methods immediately delete the message. The MH convention of marking a "
"message for deletion by prepending a comma to its name is not used."
msgstr ""

# f1dba6d1a88745778b192c6ba830e6bf
#: ../Doc/library/mailbox.rst:575
msgid ""
"Three locking mechanisms are used---dot locking and, if available, the :c:"
"func:`flock` and :c:func:`lockf` system calls. For MH mailboxes, locking the "
"mailbox means locking the :file:`.mh_sequences` file and, only for the "
"duration of any operations that affect them, locking individual message "
"files."
msgstr ""

#: ../Doc/library/mailbox.rst:584
msgid ""
"Depending upon the host platform, it may not be possible to remove the "
"underlying message while the returned file remains open."
msgstr ""

#: ../Doc/library/mailbox.rst:590
msgid ""
"All changes to MH mailboxes are immediately applied, so this method does "
"nothing."
msgstr ""

#: ../Doc/library/mailbox.rst:596
msgid ""
":class:`MH` instances do not keep any open files, so this method is "
"equivalent to :meth:`unlock`."
msgstr ""

#: ../Doc/library/mailbox.rst:603
msgid ""
"Home page of :program:`nmh`, an updated version of the original :program:"
"`mh`."
msgstr ""

#: ../Doc/library/mailbox.rst:606
msgid ""
"A GPL-licensed book on :program:`mh` and :program:`nmh`, with some "
"information on the mailbox format."
msgstr ""

#: ../Doc/library/mailbox.rst:613
msgid ":class:`Babyl`"
msgstr ""

#: ../Doc/library/mailbox.rst:618
msgid ""
"A subclass of :class:`Mailbox` for mailboxes in Babyl format. Parameter "
"*factory* is a callable object that accepts a file-like message "
"representation (which behaves as if opened in binary mode) and returns a "
"custom representation. If *factory* is ``None``, :class:`BabylMessage` is "
"used as the default message representation. If *create* is ``True``, the "
"mailbox is created if it does not exist."
msgstr ""

#: ../Doc/library/mailbox.rst:625
msgid ""
"Babyl is a single-file mailbox format used by the Rmail mail user agent "
"included with Emacs. The beginning of a message is indicated by a line "
"containing the two characters Control-Underscore (``'\\037'``) and Control-L "
"(``'\\014'``). The end of a message is indicated by the start of the next "
"message or, in the case of the last message, a line containing a Control-"
"Underscore (``'\\037'``) character."
msgstr ""

#: ../Doc/library/mailbox.rst:632
msgid ""
"Messages in a Babyl mailbox have two sets of headers, original headers and "
"so-called visible headers. Visible headers are typically a subset of the "
"original headers that have been reformatted or abridged to be more "
"attractive. Each message in a Babyl mailbox also has an accompanying list "
"of :dfn:`labels`, or short strings that record extra information about the "
"message, and a list of all user-defined labels found in the mailbox is kept "
"in the Babyl options section."
msgstr ""

#: ../Doc/library/mailbox.rst:640
msgid ""
":class:`Babyl` instances have all of the methods of :class:`Mailbox` in "
"addition to the following:"
msgstr ""

#: ../Doc/library/mailbox.rst:646
msgid ""
"Return a list of the names of all user-defined labels used in the mailbox."
msgstr ""

#: ../Doc/library/mailbox.rst:650
msgid ""
"The actual messages are inspected to determine which labels exist in the "
"mailbox rather than consulting the list of labels in the Babyl options "
"section, but the Babyl section is updated whenever the mailbox is modified."
msgstr ""

#: ../Doc/library/mailbox.rst:655
msgid ""
"Some :class:`Mailbox` methods implemented by :class:`Babyl` deserve special "
"remarks:"
msgstr ""

#: ../Doc/library/mailbox.rst:661
msgid ""
"In Babyl mailboxes, the headers of a message are not stored contiguously "
"with the body of the message. To generate a file-like representation, the "
"headers and body are copied together into a :class:`StringIO` instance (from "
"the :mod:`StringIO` module), which has an API identical to that of a file. "
"As a result, the file-like object is truly independent of the underlying "
"mailbox but does not save memory compared to a string representation."
msgstr ""

#: ../Doc/library/mailbox.rst:680
msgid "A specification of the Babyl format."
msgstr ""

#: ../Doc/library/mailbox.rst:683
msgid "The Rmail manual, with some information on Babyl semantics."
msgstr ""

#: ../Doc/library/mailbox.rst:689
msgid ":class:`MMDF`"
msgstr ""

#: ../Doc/library/mailbox.rst:694
msgid ""
"A subclass of :class:`Mailbox` for mailboxes in MMDF format. Parameter "
"*factory* is a callable object that accepts a file-like message "
"representation (which behaves as if opened in binary mode) and returns a "
"custom representation. If *factory* is ``None``, :class:`MMDFMessage` is "
"used as the default message representation. If *create* is ``True``, the "
"mailbox is created if it does not exist."
msgstr ""

#: ../Doc/library/mailbox.rst:701
msgid ""
"MMDF is a single-file mailbox format invented for the Multichannel "
"Memorandum Distribution Facility, a mail transfer agent. Each message is in "
"the same form as an mbox message but is bracketed before and after by lines "
"containing four Control-A (``'\\001'``) characters. As with the mbox format, "
"the beginning of each message is indicated by a line whose first five "
"characters are \"From \", but additional occurrences of \"From \" are not "
"transformed to \">From \" when storing messages because the extra message "
"separator lines prevent mistaking such occurrences for the starts of "
"subsequent messages."
msgstr ""

#: ../Doc/library/mailbox.rst:710
msgid ""
"Some :class:`Mailbox` methods implemented by :class:`MMDF` deserve special "
"remarks:"
msgstr ""

#: ../Doc/library/mailbox.rst:716
msgid ""
"Using the file after calling :meth:`flush` or :meth:`close` on the :class:"
"`MMDF` instance may yield unpredictable results or raise an exception."
msgstr ""

#: ../Doc/library/mailbox.rst:731
msgid ""
"A specification of MMDF format from the documentation of tin, a newsreader."
msgstr ""

#: ../Doc/library/mailbox.rst:734
msgid ""
"A Wikipedia article describing the Multichannel Memorandum Distribution "
"Facility."
msgstr ""

#: ../Doc/library/mailbox.rst:741
msgid ":class:`Message` objects"
msgstr ""

#: ../Doc/library/mailbox.rst:746
msgid ""
"A subclass of the :mod:`email.Message` module's :class:`Message`. Subclasses "
"of :class:`mailbox.Message` add mailbox-format-specific state and behavior."
msgstr ""

#: ../Doc/library/mailbox.rst:749
msgid ""
"If *message* is omitted, the new instance is created in a default, empty "
"state. If *message* is an :class:`email.Message.Message` instance, its "
"contents are copied; furthermore, any format-specific information is "
"converted insofar as possible if *message* is a :class:`Message` instance. "
"If *message* is a string or a file, it should contain an :rfc:`2822`\\ -"
"compliant message, which is read and parsed."
msgstr ""

#: ../Doc/library/mailbox.rst:756
msgid ""
"The format-specific state and behaviors offered by subclasses vary, but in "
"general it is only the properties that are not specific to a particular "
"mailbox that are supported (although presumably the properties are specific "
"to a particular mailbox format). For example, file offsets for single-file "
"mailbox formats and file names for directory-based mailbox formats are not "
"retained, because they are only applicable to the original mailbox. But "
"state such as whether a message has been read by the user or marked as "
"important is retained, because it applies to the message itself."
msgstr ""

# a12652aa43b54864bb4c7b6f26bdfe13
#: ../Doc/library/mailbox.rst:765
msgid ""
"There is no requirement that :class:`Message` instances be used to represent "
"messages retrieved using :class:`Mailbox` instances. In some situations, the "
"time and memory required to generate :class:`Message` representations might "
"not be acceptable. For such situations, :class:`Mailbox` instances also "
"offer string and file-like representations, and a custom message factory may "
"be specified when a :class:`Mailbox` instance is initialized."
msgstr ""

#: ../Doc/library/mailbox.rst:776
msgid ":class:`MaildirMessage`"
msgstr ""

#: ../Doc/library/mailbox.rst:781
msgid ""
"A message with Maildir-specific behaviors. Parameter *message* has the same "
"meaning as with the :class:`Message` constructor."
msgstr ""

#: ../Doc/library/mailbox.rst:784
msgid ""
"Typically, a mail user agent application moves all of the messages in the :"
"file:`new` subdirectory to the :file:`cur` subdirectory after the first time "
"the user opens and closes the mailbox, recording that the messages are old "
"whether or not they've actually been read. Each message in :file:`cur` has "
"an \"info\" section added to its file name to store information about its "
"state. (Some mail readers may also add an \"info\" section to messages in :"
"file:`new`.)  The \"info\" section may take one of two forms: it may contain "
"\"2,\" followed by a list of standardized flags (e.g., \"2,FR\") or it may "
"contain \"1,\" followed by so-called experimental information. Standard "
"flags for Maildir messages are as follows:"
msgstr ""

#: ../Doc/library/mailbox.rst:796 ../Doc/library/mailbox.rst:963
#: ../Doc/library/mailbox.rst:1333 ../Doc/library/stdtypes.rst:1398
msgid "Flag"
msgstr ""

#: ../Doc/library/mailbox.rst:798 ../Doc/library/mailbox.rst:969
#: ../Doc/library/mailbox.rst:1339
msgid "D"
msgstr ""

#: ../Doc/library/mailbox.rst:798
msgid "Draft"
msgstr ""

#: ../Doc/library/mailbox.rst:798
msgid "Under composition"
msgstr ""

#: ../Doc/library/mailbox.rst:800 ../Doc/library/mailbox.rst:971
#: ../Doc/library/mailbox.rst:1341
msgid "F"
msgstr ""

#: ../Doc/library/mailbox.rst:800 ../Doc/library/mailbox.rst:971
#: ../Doc/library/mailbox.rst:1341
msgid "Flagged"
msgstr ""

#: ../Doc/library/mailbox.rst:800 ../Doc/library/mailbox.rst:971
#: ../Doc/library/mailbox.rst:1119 ../Doc/library/mailbox.rst:1341
msgid "Marked as important"
msgstr ""

#: ../Doc/library/mailbox.rst:802
msgid "P"
msgstr ""

#: ../Doc/library/mailbox.rst:802
msgid "Passed"
msgstr ""

#: ../Doc/library/mailbox.rst:802
msgid "Forwarded, resent, or bounced"
msgstr ""

#: ../Doc/library/mailbox.rst:804 ../Doc/library/mailbox.rst:965
#: ../Doc/library/mailbox.rst:1335
msgid "R"
msgstr ""

#: ../Doc/library/mailbox.rst:804
msgid "Replied"
msgstr ""

#: ../Doc/library/mailbox.rst:804 ../Doc/library/mailbox.rst:973
#: ../Doc/library/mailbox.rst:1117 ../Doc/library/mailbox.rst:1208
#: ../Doc/library/mailbox.rst:1343
msgid "Replied to"
msgstr ""

#: ../Doc/library/mailbox.rst:806
msgid "S"
msgstr ""

#: ../Doc/library/mailbox.rst:806
msgid "Seen"
msgstr ""

#: ../Doc/library/mailbox.rst:806 ../Doc/library/mailbox.rst:965
#: ../Doc/library/mailbox.rst:1335
msgid "Read"
msgstr ""

#: ../Doc/library/mailbox.rst:808
msgid "T"
msgstr ""

#: ../Doc/library/mailbox.rst:808
msgid "Trashed"
msgstr ""

#: ../Doc/library/mailbox.rst:808 ../Doc/library/mailbox.rst:969
#: ../Doc/library/mailbox.rst:1204 ../Doc/library/mailbox.rst:1339
msgid "Marked for subsequent deletion"
msgstr ""

#: ../Doc/library/mailbox.rst:811
msgid ":class:`MaildirMessage` instances offer the following methods:"
msgstr ""

#: ../Doc/library/mailbox.rst:816
msgid ""
"Return either \"new\" (if the message should be stored in the :file:`new` "
"subdirectory) or \"cur\" (if the message should be stored in the :file:`cur` "
"subdirectory)."
msgstr ""

#: ../Doc/library/mailbox.rst:822
msgid ""
"A message is typically moved from :file:`new` to :file:`cur` after its "
"mailbox has been accessed, whether or not the message is has been read. A "
"message ``msg`` has been read if ``\"S\" in msg.get_flags()`` is ``True``."
msgstr ""

#: ../Doc/library/mailbox.rst:830
msgid ""
"Set the subdirectory the message should be stored in. Parameter *subdir* "
"must be either \"new\" or \"cur\"."
msgstr ""

#: ../Doc/library/mailbox.rst:836
msgid ""
"Return a string specifying the flags that are currently set. If the message "
"complies with the standard Maildir format, the result is the concatenation "
"in alphabetical order of zero or one occurrence of each of ``'D'``, ``'F'``, "
"``'P'``, ``'R'``, ``'S'``, and ``'T'``. The empty string is returned if no "
"flags are set or if \"info\" contains experimental semantics."
msgstr ""

#: ../Doc/library/mailbox.rst:846
msgid "Set the flags specified by *flags* and unset all others."
msgstr ""

#: ../Doc/library/mailbox.rst:851
msgid ""
"Set the flag(s) specified by *flag* without changing other flags. To add "
"more than one flag at a time, *flag* may be a string of more than one "
"character. The current \"info\" is overwritten whether or not it contains "
"experimental information rather than flags."
msgstr ""

#: ../Doc/library/mailbox.rst:859
msgid ""
"Unset the flag(s) specified by *flag* without changing other flags. To "
"remove more than one flag at a time, *flag* maybe a string of more than one "
"character.  If \"info\" contains experimental information rather than flags, "
"the current \"info\" is not modified."
msgstr ""

#: ../Doc/library/mailbox.rst:867
msgid ""
"Return the delivery date of the message as a floating-point number "
"representing seconds since the epoch."
msgstr ""

#: ../Doc/library/mailbox.rst:873
msgid ""
"Set the delivery date of the message to *date*, a floating-point number "
"representing seconds since the epoch."
msgstr ""

#: ../Doc/library/mailbox.rst:879
msgid ""
"Return a string containing the \"info\" for a message. This is useful for "
"accessing and modifying \"info\" that is experimental (i.e., not a list of "
"flags)."
msgstr ""

#: ../Doc/library/mailbox.rst:886
msgid "Set \"info\" to *info*, which should be a string."
msgstr ""

#: ../Doc/library/mailbox.rst:888
msgid ""
"When a :class:`MaildirMessage` instance is created based upon an :class:"
"`mboxMessage` or :class:`MMDFMessage` instance, the :mailheader:`Status` "
"and :mailheader:`X-Status` headers are omitted and the following conversions "
"take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:894 ../Doc/library/mailbox.rst:912
#: ../Doc/library/mailbox.rst:927 ../Doc/library/mailbox.rst:1034
#: ../Doc/library/mailbox.rst:1051 ../Doc/library/mailbox.rst:1066
#: ../Doc/library/mailbox.rst:1081 ../Doc/library/mailbox.rst:1148
#: ../Doc/library/mailbox.rst:1163 ../Doc/library/mailbox.rst:1177
#: ../Doc/library/mailbox.rst:1274 ../Doc/library/mailbox.rst:1291
#: ../Doc/library/mailbox.rst:1305 ../Doc/library/mailbox.rst:1405
#: ../Doc/library/mailbox.rst:1422 ../Doc/library/mailbox.rst:1437
#: ../Doc/library/mailbox.rst:1453
msgid "Resulting state"
msgstr ""

#: ../Doc/library/mailbox.rst:894 ../Doc/library/mailbox.rst:1163
#: ../Doc/library/mailbox.rst:1291
msgid ":class:`mboxMessage` or :class:`MMDFMessage` state"
msgstr ""

#: ../Doc/library/mailbox.rst:897 ../Doc/library/mailbox.rst:914
#: ../Doc/library/mailbox.rst:929 ../Doc/library/mailbox.rst:1038
#: ../Doc/library/mailbox.rst:1409
msgid "\"cur\" subdirectory"
msgstr ""

#: ../Doc/library/mailbox.rst:897 ../Doc/library/mailbox.rst:1038
#: ../Doc/library/mailbox.rst:1055 ../Doc/library/mailbox.rst:1070
#: ../Doc/library/mailbox.rst:1085 ../Doc/library/mailbox.rst:1409
#: ../Doc/library/mailbox.rst:1426 ../Doc/library/mailbox.rst:1441
#: ../Doc/library/mailbox.rst:1457
msgid "O flag"
msgstr ""

#: ../Doc/library/mailbox.rst:899 ../Doc/library/mailbox.rst:918
#: ../Doc/library/mailbox.rst:1042 ../Doc/library/mailbox.rst:1057
#: ../Doc/library/mailbox.rst:1089 ../Doc/library/mailbox.rst:1154
#: ../Doc/library/mailbox.rst:1170 ../Doc/library/mailbox.rst:1413
#: ../Doc/library/mailbox.rst:1428 ../Doc/library/mailbox.rst:1461
msgid "F flag"
msgstr ""

#: ../Doc/library/mailbox.rst:901 ../Doc/library/mailbox.rst:903
#: ../Doc/library/mailbox.rst:920 ../Doc/library/mailbox.rst:935
#: ../Doc/library/mailbox.rst:1036 ../Doc/library/mailbox.rst:1044
#: ../Doc/library/mailbox.rst:1083 ../Doc/library/mailbox.rst:1152
#: ../Doc/library/mailbox.rst:1280 ../Doc/library/mailbox.rst:1407
#: ../Doc/library/mailbox.rst:1415 ../Doc/library/mailbox.rst:1455
msgid "R flag"
msgstr ""

#: ../Doc/library/mailbox.rst:901 ../Doc/library/mailbox.rst:1044
#: ../Doc/library/mailbox.rst:1059 ../Doc/library/mailbox.rst:1074
#: ../Doc/library/mailbox.rst:1091 ../Doc/library/mailbox.rst:1168
#: ../Doc/library/mailbox.rst:1298 ../Doc/library/mailbox.rst:1415
#: ../Doc/library/mailbox.rst:1430 ../Doc/library/mailbox.rst:1445
#: ../Doc/library/mailbox.rst:1463
msgid "A flag"
msgstr ""

#: ../Doc/library/mailbox.rst:903 ../Doc/library/mailbox.rst:1036
#: ../Doc/library/mailbox.rst:1407
msgid "S flag"
msgstr ""

#: ../Doc/library/mailbox.rst:905 ../Doc/library/mailbox.rst:937
#: ../Doc/library/mailbox.rst:1040 ../Doc/library/mailbox.rst:1278
#: ../Doc/library/mailbox.rst:1411
msgid "T flag"
msgstr ""

#: ../Doc/library/mailbox.rst:905 ../Doc/library/mailbox.rst:1040
#: ../Doc/library/mailbox.rst:1072 ../Doc/library/mailbox.rst:1087
#: ../Doc/library/mailbox.rst:1296 ../Doc/library/mailbox.rst:1411
#: ../Doc/library/mailbox.rst:1443 ../Doc/library/mailbox.rst:1459
msgid "D flag"
msgstr ""

#: ../Doc/library/mailbox.rst:908
msgid ""
"When a :class:`MaildirMessage` instance is created based upon an :class:"
"`MHMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:912 ../Doc/library/mailbox.rst:1051
#: ../Doc/library/mailbox.rst:1305 ../Doc/library/mailbox.rst:1422
msgid ":class:`MHMessage` state"
msgstr ""

#: ../Doc/library/mailbox.rst:914 ../Doc/library/mailbox.rst:1055
#: ../Doc/library/mailbox.rst:1150 ../Doc/library/mailbox.rst:1166
#: ../Doc/library/mailbox.rst:1179 ../Doc/library/mailbox.rst:1307
#: ../Doc/library/mailbox.rst:1426
msgid "\"unseen\" sequence"
msgstr ""

#: ../Doc/library/mailbox.rst:916 ../Doc/library/mailbox.rst:931
msgid "\"cur\" subdirectory and S flag"
msgstr ""

#: ../Doc/library/mailbox.rst:916 ../Doc/library/mailbox.rst:1053
#: ../Doc/library/mailbox.rst:1424
msgid "no \"unseen\" sequence"
msgstr ""

#: ../Doc/library/mailbox.rst:918 ../Doc/library/mailbox.rst:1057
#: ../Doc/library/mailbox.rst:1154 ../Doc/library/mailbox.rst:1170
#: ../Doc/library/mailbox.rst:1428
msgid "\"flagged\" sequence"
msgstr ""

#: ../Doc/library/mailbox.rst:920 ../Doc/library/mailbox.rst:1059
#: ../Doc/library/mailbox.rst:1152 ../Doc/library/mailbox.rst:1168
#: ../Doc/library/mailbox.rst:1181 ../Doc/library/mailbox.rst:1309
#: ../Doc/library/mailbox.rst:1430
msgid "\"replied\" sequence"
msgstr ""

#: ../Doc/library/mailbox.rst:923
msgid ""
"When a :class:`MaildirMessage` instance is created based upon a :class:"
"`BabylMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:927 ../Doc/library/mailbox.rst:1066
#: ../Doc/library/mailbox.rst:1177 ../Doc/library/mailbox.rst:1437
msgid ":class:`BabylMessage` state"
msgstr ""

#: ../Doc/library/mailbox.rst:929 ../Doc/library/mailbox.rst:1070
#: ../Doc/library/mailbox.rst:1179 ../Doc/library/mailbox.rst:1276
#: ../Doc/library/mailbox.rst:1294 ../Doc/library/mailbox.rst:1307
#: ../Doc/library/mailbox.rst:1441
msgid "\"unseen\" label"
msgstr ""

#: ../Doc/library/mailbox.rst:931 ../Doc/library/mailbox.rst:1068
#: ../Doc/library/mailbox.rst:1439
msgid "no \"unseen\" label"
msgstr ""

#: ../Doc/library/mailbox.rst:933 ../Doc/library/mailbox.rst:1282
msgid "P flag"
msgstr ""

#: ../Doc/library/mailbox.rst:933
msgid "\"forwarded\" or \"resent\" label"
msgstr ""

#: ../Doc/library/mailbox.rst:935 ../Doc/library/mailbox.rst:1074
#: ../Doc/library/mailbox.rst:1181 ../Doc/library/mailbox.rst:1280
#: ../Doc/library/mailbox.rst:1298 ../Doc/library/mailbox.rst:1309
#: ../Doc/library/mailbox.rst:1445
msgid "\"answered\" label"
msgstr ""

#: ../Doc/library/mailbox.rst:937 ../Doc/library/mailbox.rst:1072
#: ../Doc/library/mailbox.rst:1278 ../Doc/library/mailbox.rst:1296
#: ../Doc/library/mailbox.rst:1443
msgid "\"deleted\" label"
msgstr ""

#: ../Doc/library/mailbox.rst:944
msgid ":class:`mboxMessage`"
msgstr ""

#: ../Doc/library/mailbox.rst:949
msgid ""
"A message with mbox-specific behaviors. Parameter *message* has the same "
"meaning as with the :class:`Message` constructor."
msgstr ""

#: ../Doc/library/mailbox.rst:952
msgid ""
"Messages in an mbox mailbox are stored together in a single file. The "
"sender's envelope address and the time of delivery are typically stored in a "
"line beginning with \"From \" that is used to indicate the start of a "
"message, though there is considerable variation in the exact format of this "
"data among mbox implementations. Flags that indicate the state of the "
"message, such as whether it has been read or marked as important, are "
"typically stored in :mailheader:`Status` and :mailheader:`X-Status` headers."
msgstr ""

#: ../Doc/library/mailbox.rst:960
msgid "Conventional flags for mbox messages are as follows:"
msgstr ""

#: ../Doc/library/mailbox.rst:967 ../Doc/library/mailbox.rst:1337
msgid "O"
msgstr ""

#: ../Doc/library/mailbox.rst:967 ../Doc/library/mailbox.rst:1337
msgid "Old"
msgstr ""

#: ../Doc/library/mailbox.rst:967 ../Doc/library/mailbox.rst:1337
msgid "Previously detected by MUA"
msgstr ""

#: ../Doc/library/mailbox.rst:969 ../Doc/library/mailbox.rst:1339
msgid "Deleted"
msgstr ""

#: ../Doc/library/mailbox.rst:973 ../Doc/library/mailbox.rst:1343
msgid "A"
msgstr ""

#: ../Doc/library/mailbox.rst:973 ../Doc/library/mailbox.rst:1343
msgid "Answered"
msgstr ""

#: ../Doc/library/mailbox.rst:976 ../Doc/library/mailbox.rst:1346
msgid ""
"The \"R\" and \"O\" flags are stored in the :mailheader:`Status` header, and "
"the \"D\", \"F\", and \"A\" flags are stored in the :mailheader:`X-Status` "
"header. The flags and headers typically appear in the order mentioned."
msgstr ""

#: ../Doc/library/mailbox.rst:980
msgid ":class:`mboxMessage` instances offer the following methods:"
msgstr ""

#: ../Doc/library/mailbox.rst:985 ../Doc/library/mailbox.rst:1356
msgid ""
"Return a string representing the \"From \" line that marks the start of the "
"message in an mbox mailbox. The leading \"From \" and the trailing newline "
"are excluded."
msgstr ""

#: ../Doc/library/mailbox.rst:992 ../Doc/library/mailbox.rst:1363
msgid ""
"Set the \"From \" line to *from_*, which should be specified without a "
"leading \"From \" or trailing newline. For convenience, *time_* may be "
"specified and will be formatted appropriately and appended to *from_*. If "
"*time_* is specified, it should be a :class:`struct_time` instance, a tuple "
"suitable for passing to :meth:`time.strftime`, or ``True`` (to use :meth:"
"`time.gmtime`)."
msgstr ""

#: ../Doc/library/mailbox.rst:1002 ../Doc/library/mailbox.rst:1373
msgid ""
"Return a string specifying the flags that are currently set. If the message "
"complies with the conventional format, the result is the concatenation in "
"the following order of zero or one occurrence of each of ``'R'``, ``'O'``, "
"``'D'``, ``'F'``, and ``'A'``."
msgstr ""

#: ../Doc/library/mailbox.rst:1010 ../Doc/library/mailbox.rst:1381
msgid ""
"Set the flags specified by *flags* and unset all others. Parameter *flags* "
"should be the concatenation in any order of zero or more occurrences of each "
"of ``'R'``, ``'O'``, ``'D'``, ``'F'``, and ``'A'``."
msgstr ""

#: ../Doc/library/mailbox.rst:1017 ../Doc/library/mailbox.rst:1388
msgid ""
"Set the flag(s) specified by *flag* without changing other flags. To add "
"more than one flag at a time, *flag* may be a string of more than one "
"character."
msgstr ""

#: ../Doc/library/mailbox.rst:1024 ../Doc/library/mailbox.rst:1395
msgid ""
"Unset the flag(s) specified by *flag* without changing other flags. To "
"remove more than one flag at a time, *flag* maybe a string of more than one "
"character."
msgstr ""

#: ../Doc/library/mailbox.rst:1028
msgid ""
"When an :class:`mboxMessage` instance is created based upon a :class:"
"`MaildirMessage` instance, a \"From \" line is generated based upon the :"
"class:`MaildirMessage` instance's delivery date, and the following "
"conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1034 ../Doc/library/mailbox.rst:1148
#: ../Doc/library/mailbox.rst:1274 ../Doc/library/mailbox.rst:1405
msgid ":class:`MaildirMessage` state"
msgstr ""

#: ../Doc/library/mailbox.rst:1047
msgid ""
"When an :class:`mboxMessage` instance is created based upon an :class:"
"`MHMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1053 ../Doc/library/mailbox.rst:1068
#: ../Doc/library/mailbox.rst:1424 ../Doc/library/mailbox.rst:1439
msgid "R flag and O flag"
msgstr ""

#: ../Doc/library/mailbox.rst:1062
msgid ""
"When an :class:`mboxMessage` instance is created based upon a :class:"
"`BabylMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1077
msgid ""
"When a :class:`Message` instance is created based upon an :class:"
"`MMDFMessage` instance, the \"From \" line is copied and all flags directly "
"correspond:"
msgstr ""

#: ../Doc/library/mailbox.rst:1081
msgid ":class:`MMDFMessage` state"
msgstr ""

#: ../Doc/library/mailbox.rst:1098
msgid ":class:`MHMessage`"
msgstr ""

#: ../Doc/library/mailbox.rst:1103
msgid ""
"A message with MH-specific behaviors. Parameter *message* has the same "
"meaning as with the :class:`Message` constructor."
msgstr ""

#: ../Doc/library/mailbox.rst:1106
msgid ""
"MH messages do not support marks or flags in the traditional sense, but they "
"do support sequences, which are logical groupings of arbitrary messages. "
"Some mail reading programs (although not the standard :program:`mh` and :"
"program:`nmh`) use sequences in much the same way flags are used with other "
"formats, as follows:"
msgstr ""

#: ../Doc/library/mailbox.rst:1113
msgid "Sequence"
msgstr ""

#: ../Doc/library/mailbox.rst:1115 ../Doc/library/mailbox.rst:1202
msgid "unseen"
msgstr ""

#: ../Doc/library/mailbox.rst:1115 ../Doc/library/mailbox.rst:1202
msgid "Not read, but previously detected by MUA"
msgstr ""

#: ../Doc/library/mailbox.rst:1117
msgid "replied"
msgstr ""

#: ../Doc/library/mailbox.rst:1119
msgid "flagged"
msgstr ""

#: ../Doc/library/mailbox.rst:1122
msgid ":class:`MHMessage` instances offer the following methods:"
msgstr ""

#: ../Doc/library/mailbox.rst:1127
msgid "Return a list of the names of sequences that include this message."
msgstr ""

#: ../Doc/library/mailbox.rst:1132
msgid "Set the list of sequences that include this message."
msgstr ""

#: ../Doc/library/mailbox.rst:1137
msgid "Add *sequence* to the list of sequences that include this message."
msgstr ""

#: ../Doc/library/mailbox.rst:1142
msgid "Remove *sequence* from the list of sequences that include this message."
msgstr ""

#: ../Doc/library/mailbox.rst:1144
msgid ""
"When an :class:`MHMessage` instance is created based upon a :class:"
"`MaildirMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1150 ../Doc/library/mailbox.rst:1276
msgid "no S flag"
msgstr ""

#: ../Doc/library/mailbox.rst:1157
msgid ""
"When an :class:`MHMessage` instance is created based upon an :class:"
"`mboxMessage` or :class:`MMDFMessage` instance, the :mailheader:`Status` "
"and :mailheader:`X-Status` headers are omitted and the following conversions "
"take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1166 ../Doc/library/mailbox.rst:1294
msgid "no R flag"
msgstr ""

#: ../Doc/library/mailbox.rst:1173
msgid ""
"When an :class:`MHMessage` instance is created based upon a :class:"
"`BabylMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1188
msgid ":class:`BabylMessage`"
msgstr ""

#: ../Doc/library/mailbox.rst:1193
msgid ""
"A message with Babyl-specific behaviors. Parameter *message* has the same "
"meaning as with the :class:`Message` constructor."
msgstr ""

#: ../Doc/library/mailbox.rst:1196
msgid ""
"Certain message labels, called :dfn:`attributes`, are defined by convention "
"to have special meanings. The attributes are as follows:"
msgstr ""

#: ../Doc/library/mailbox.rst:1200
msgid "Label"
msgstr ""

#: ../Doc/library/mailbox.rst:1204
msgid "deleted"
msgstr ""

#: ../Doc/library/mailbox.rst:1206
msgid "filed"
msgstr ""

#: ../Doc/library/mailbox.rst:1206
msgid "Copied to another file or mailbox"
msgstr ""

#: ../Doc/library/mailbox.rst:1208
msgid "answered"
msgstr ""

#: ../Doc/library/mailbox.rst:1210
msgid "forwarded"
msgstr ""

#: ../Doc/library/mailbox.rst:1210
msgid "Forwarded"
msgstr ""

#: ../Doc/library/mailbox.rst:1212
msgid "edited"
msgstr ""

#: ../Doc/library/mailbox.rst:1212
msgid "Modified by the user"
msgstr ""

#: ../Doc/library/mailbox.rst:1214
msgid "resent"
msgstr ""

#: ../Doc/library/mailbox.rst:1214
msgid "Resent"
msgstr ""

#: ../Doc/library/mailbox.rst:1217
msgid ""
"By default, Rmail displays only visible headers. The :class:`BabylMessage` "
"class, though, uses the original headers because they are more complete. "
"Visible headers may be accessed explicitly if desired."
msgstr ""

#: ../Doc/library/mailbox.rst:1221
msgid ":class:`BabylMessage` instances offer the following methods:"
msgstr ""

#: ../Doc/library/mailbox.rst:1226
msgid "Return a list of labels on the message."
msgstr ""

#: ../Doc/library/mailbox.rst:1231
msgid "Set the list of labels on the message to *labels*."
msgstr ""

#: ../Doc/library/mailbox.rst:1236
msgid "Add *label* to the list of labels on the message."
msgstr ""

#: ../Doc/library/mailbox.rst:1241
msgid "Remove *label* from the list of labels on the message."
msgstr ""

#: ../Doc/library/mailbox.rst:1246
msgid ""
"Return an :class:`Message` instance whose headers are the message's visible "
"headers and whose body is empty."
msgstr ""

#: ../Doc/library/mailbox.rst:1252
msgid ""
"Set the message's visible headers to be the same as the headers in "
"*message*.  Parameter *visible* should be a :class:`Message` instance, an :"
"class:`email.Message.Message` instance, a string, or a file-like object "
"(which should be open in text mode)."
msgstr ""

#: ../Doc/library/mailbox.rst:1260
msgid ""
"When a :class:`BabylMessage` instance's original headers are modified, the "
"visible headers are not automatically modified to correspond. This method "
"updates the visible headers as follows: each visible header with a "
"corresponding original header is set to the value of the original header, "
"each visible header without a corresponding original header is removed, and "
"any of :mailheader:`Date`, :mailheader:`From`, :mailheader:`Reply-To`, :"
"mailheader:`To`, :mailheader:`CC`, and :mailheader:`Subject` that are "
"present in the original headers but not the visible headers are added to the "
"visible headers."
msgstr ""

#: ../Doc/library/mailbox.rst:1270
msgid ""
"When a :class:`BabylMessage` instance is created based upon a :class:"
"`MaildirMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1282
msgid "\"forwarded\" label"
msgstr ""

#: ../Doc/library/mailbox.rst:1285
msgid ""
"When a :class:`BabylMessage` instance is created based upon an :class:"
"`mboxMessage` or :class:`MMDFMessage` instance, the :mailheader:`Status` "
"and :mailheader:`X-Status` headers are omitted and the following conversions "
"take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1301
msgid ""
"When a :class:`BabylMessage` instance is created based upon an :class:"
"`MHMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1316
msgid ":class:`MMDFMessage`"
msgstr ""

#: ../Doc/library/mailbox.rst:1321
msgid ""
"A message with MMDF-specific behaviors. Parameter *message* has the same "
"meaning as with the :class:`Message` constructor."
msgstr ""

#: ../Doc/library/mailbox.rst:1324
msgid ""
"As with message in an mbox mailbox, MMDF messages are stored with the "
"sender's address and the delivery date in an initial line beginning with "
"\"From \".  Likewise, flags that indicate the state of the message are "
"typically stored in :mailheader:`Status` and :mailheader:`X-Status` headers."
msgstr ""

#: ../Doc/library/mailbox.rst:1329
msgid ""
"Conventional flags for MMDF messages are identical to those of mbox message "
"and are as follows:"
msgstr ""

#: ../Doc/library/mailbox.rst:1350
msgid ""
":class:`MMDFMessage` instances offer the following methods, which are "
"identical to those offered by :class:`mboxMessage`:"
msgstr ""

#: ../Doc/library/mailbox.rst:1399
msgid ""
"When an :class:`MMDFMessage` instance is created based upon a :class:"
"`MaildirMessage` instance, a \"From \" line is generated based upon the :"
"class:`MaildirMessage` instance's delivery date, and the following "
"conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1418
msgid ""
"When an :class:`MMDFMessage` instance is created based upon an :class:"
"`MHMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1433
msgid ""
"When an :class:`MMDFMessage` instance is created based upon a :class:"
"`BabylMessage` instance, the following conversions take place:"
msgstr ""

#: ../Doc/library/mailbox.rst:1448
msgid ""
"When an :class:`MMDFMessage` instance is created based upon an :class:"
"`mboxMessage` instance, the \"From \" line is copied and all flags directly "
"correspond:"
msgstr ""

#: ../Doc/library/mailbox.rst:1453
msgid ":class:`mboxMessage` state"
msgstr ""

#: ../Doc/library/mailbox.rst:1468 ../Doc/library/subprocess.rst:408
#: ../Doc/library/xdrlib.rst:256 ../Doc/library/xml.dom.rst:823
msgid "Exceptions"
msgstr ""

#: ../Doc/library/mailbox.rst:1470
msgid ""
"The following exception classes are defined in the :mod:`mailbox` module:"
msgstr ""

#: ../Doc/library/mailbox.rst:1475
msgid "The based class for all other module-specific exceptions."
msgstr ""

#: ../Doc/library/mailbox.rst:1480
msgid ""
"Raised when a mailbox is expected but is not found, such as when "
"instantiating a :class:`Mailbox` subclass with a path that does not exist "
"(and with the *create* parameter set to ``False``), or when opening a folder "
"that does not exist."
msgstr ""

#: ../Doc/library/mailbox.rst:1487
msgid ""
"Raised when a mailbox is not empty but is expected to be, such as when "
"deleting a folder that contains messages."
msgstr ""

#: ../Doc/library/mailbox.rst:1493
msgid ""
"Raised when some mailbox-related condition beyond the control of the program "
"causes it to be unable to proceed, such as when failing to acquire a lock "
"that another program already holds a lock, or when a uniquely-generated file "
"name already exists."
msgstr ""

#: ../Doc/library/mailbox.rst:1501
msgid ""
"Raised when the data in a file cannot be parsed, such as when an :class:`MH` "
"instance attempts to read a corrupted :file:`.mh_sequences` file."
msgstr ""

# 99739a088d414c93af8a74df29778d53
#: ../Doc/library/mailbox.rst:1508
msgid "Deprecated classes and methods"
msgstr ""

# a42bdaf9e11245eea7465b291911d78e
#: ../Doc/library/mailbox.rst:1512
msgid ""
"Older versions of the :mod:`mailbox` module do not support modification of "
"mailboxes, such as adding or removing message, and do not provide classes to "
"represent format-specific message properties. For backward compatibility, "
"the older mailbox classes are still available, but the newer classes should "
"be used in preference to them.  The old classes have been removed in Python "
"3."
msgstr ""

# 738c96dfac944214b4f0d4d0642ead86
#: ../Doc/library/mailbox.rst:1518
msgid ""
"Older mailbox objects support only iteration and provide a single public "
"method:"
msgstr ""

# 84aa98ebae8341aaba24bcd41080961b
#: ../Doc/library/mailbox.rst:1523
msgid ""
"Return the next message in the mailbox, created with the optional *factory* "
"argument passed into the mailbox object's constructor. By default this is "
"an :class:`rfc822.Message` object (see the :mod:`rfc822` module).  Depending "
"on the mailbox implementation the *fp* attribute of this object may be a "
"true file object or a class instance simulating a file object, taking care "
"of things like message boundaries if multiple mail messages are contained in "
"a single file, etc.  If no more messages are available, this method returns "
"``None``."
msgstr ""

# 8a812034df534dd984a8214e07336c06
#: ../Doc/library/mailbox.rst:1531
msgid ""
"Most of the older mailbox classes have names that differ from the current "
"mailbox class names, except for :class:`Maildir`. For this reason, the new :"
"class:`Maildir` class defines a :meth:`!next` method and its constructor "
"differs slightly from those of the other new mailbox classes."
msgstr ""

# ab3ef406a91b421da1239cf4dfac862b
#: ../Doc/library/mailbox.rst:1536
msgid ""
"The older mailbox classes whose names are not the same as their newer "
"counterparts are as follows:"
msgstr ""

# c2e635f5c5da4dc49462d9c13c2ad6c7
#: ../Doc/library/mailbox.rst:1542
msgid ""
"Access to a classic Unix-style mailbox, where all messages are contained in "
"a single file and separated by ``From`` (a.k.a. ``From_``) lines.  The file "
"object *fp* points to the mailbox file.  The optional *factory* parameter is "
"a callable that should create new message objects.  *factory* is called with "
"one argument, *fp* by the :meth:`!next` method of the mailbox object.  The "
"default is the :class:`rfc822.Message` class (see the :mod:`rfc822` module "
"-- and the note below)."
msgstr ""

# a4ed8d7843a4428daabd3bfdd278cde1
#: ../Doc/library/mailbox.rst:1552
msgid ""
"For reasons of this module's internal implementation, you will probably want "
"to open the *fp* object in binary mode.  This is especially important on "
"Windows."
msgstr ""

# 922e54d9fd2e4a10a4e68034eb341830
#: ../Doc/library/mailbox.rst:1555
msgid ""
"For maximum portability, messages in a Unix-style mailbox are separated by "
"any line that begins exactly with the string ``'From '`` (note the trailing "
"space) if preceded by exactly two newlines. Because of the wide-range of "
"variations in practice, nothing else on the ``From_`` line should be "
"considered.  However, the current implementation doesn't check for the "
"leading two newlines.  This is usually fine for most applications."
msgstr ""

# 34403c9ef73b4c4fb4d1bb748ef3d39d
#: ../Doc/library/mailbox.rst:1562
msgid ""
"The :class:`UnixMailbox` class implements a more strict version of ``From_`` "
"line checking, using a regular expression that usually correctly matched "
"``From_`` delimiters.  It considers delimiter line to be separated by ``From "
"name time`` lines.  For maximum portability, use the :class:"
"`PortableUnixMailbox` class instead.  This class is identical to :class:"
"`UnixMailbox` except that individual messages are separated by only ``From`` "
"lines."
msgstr ""

# 60ad761d346049d980a8c06142fd6988
#: ../Doc/library/mailbox.rst:1573
msgid ""
"A less-strict version of :class:`UnixMailbox`, which considers only the "
"``From`` at the beginning of the line separating messages.  The \"*name* "
"*time*\" portion of the From line is ignored, to protect against some "
"variations that are observed in practice.  This works since lines in the "
"message which begin with ``'From '`` are quoted by mail handling software at "
"delivery-time."
msgstr ""

# 061386f013554d2ebe81a7b50f69ba69
#: ../Doc/library/mailbox.rst:1582
msgid ""
"Access an MMDF-style mailbox, where all messages are contained in a single "
"file and separated by lines consisting of 4 control-A characters.  The file "
"object *fp* points to the mailbox file. Optional *factory* is as with the :"
"class:`UnixMailbox` class."
msgstr ""

# b5ce2dcb898c4ca09f453ed27af6cd0d
#: ../Doc/library/mailbox.rst:1590
msgid ""
"Access an MH mailbox, a directory with each message in a separate file with "
"a numeric name. The name of the mailbox directory is passed in *dirname*. "
"*factory* is as with the :class:`UnixMailbox` class."
msgstr ""

# 2263ba1f24a542919e3bc3c46217a8ad
#: ../Doc/library/mailbox.rst:1597
msgid ""
"Access a Babyl mailbox, which is similar to an MMDF mailbox.  In Babyl "
"format, each message has two sets of headers, the *original* headers and the "
"*visible* headers.  The original headers appear before a line containing "
"only ``'*** EOOH ***'`` (End-Of-Original-Headers) and the visible headers "
"appear after the ``EOOH`` line.  Babyl-compliant mail readers will show you "
"only the visible headers, and :class:`BabylMailbox` objects will return "
"messages containing only the visible headers.  You'll have to do your own "
"parsing of the mailbox file to get at the original headers.  Mail messages "
"start with the EOOH line and end with a line containing only "
"``'\\037\\014'``.  *factory* is as with the :class:`UnixMailbox` class."
msgstr ""

# a2ef550db58945d9b60130037cc22594
#: ../Doc/library/mailbox.rst:1608
msgid ""
"If you wish to use the older mailbox classes with the :mod:`email` module "
"rather than the deprecated :mod:`rfc822` module, you can do so as follows::"
msgstr ""

# bd66205ff03e44d193d6066a59a93d37
#: ../Doc/library/mailbox.rst:1625
msgid ""
"Alternatively, if you know your mailbox contains only well-formed MIME "
"messages, you can simplify this to::"
msgstr ""

#: ../Doc/library/mailbox.rst:1639
msgid ""
"A simple example of printing the subjects of all messages in a mailbox that "
"seem interesting::"
msgstr ""

#: ../Doc/library/mailbox.rst:1648
msgid ""
"To copy all mail from a Babyl mailbox to an MH mailbox, converting all of "
"the format-specific information that can be converted::"
msgstr ""

#: ../Doc/library/mailbox.rst:1659
msgid ""
"This example sorts mail from several mailing lists into different mailboxes, "
"being careful to avoid mail corruption due to concurrent modification by "
"other programs, mail loss due to interruption of the program, or premature "
"termination due to malformed messages in the mailbox::"
msgstr ""

#: ../Doc/library/mailcap.rst:2
msgid ":mod:`mailcap` --- Mailcap file handling"
msgstr ""

# a67e8bec166d4f78b1fd088c73a72bdd
#: ../Doc/library/mailcap.rst:7
msgid "**Source code:** :source:`Lib/mailcap.py`"
msgstr ""

#: ../Doc/library/mailcap.rst:11
msgid ""
"Mailcap files are used to configure how MIME-aware applications such as mail "
"readers and Web browsers react to files with different MIME types. (The name "
"\"mailcap\" is derived from the phrase \"mail capability\".)  For example, a "
"mailcap file might contain a line like ``video/mpeg; xmpeg %s``.  Then, if "
"the user encounters an email message or Web document with the MIME type :"
"mimetype:`video/mpeg`, ``%s`` will be replaced by a filename (usually one "
"belonging to a temporary file) and the :program:`xmpeg` program can be "
"automatically started to view the file."
msgstr ""

#: ../Doc/library/mailcap.rst:20
msgid ""
"The mailcap format is documented in :rfc:`1524`, \"A User Agent "
"Configuration Mechanism For Multimedia Mail Format Information,\" but is not "
"an Internet standard.  However, mailcap files are supported on most Unix "
"systems."
msgstr ""

#: ../Doc/library/mailcap.rst:27
msgid ""
"Return a 2-tuple; the first element is a string containing the command line "
"to be executed (which can be passed to :func:`os.system`), and the second "
"element is the mailcap entry for a given MIME type.  If no matching MIME "
"type can be found, ``(None, None)`` is returned."
msgstr ""

#: ../Doc/library/mailcap.rst:32
msgid ""
"*key* is the name of the field desired, which represents the type of "
"activity to be performed; the default value is 'view', since in the  most "
"common case you simply want to view the body of the MIME-typed data.  Other "
"possible values might be 'compose' and 'edit', if you wanted to create a new "
"body of the given MIME type or alter the existing body data.  See :rfc:"
"`1524` for a complete list of these fields."
msgstr ""

#: ../Doc/library/mailcap.rst:39
msgid ""
"*filename* is the filename to be substituted for ``%s`` in the command line; "
"the default value is ``'/dev/null'`` which is almost certainly not what you "
"want, so usually you'll override it by specifying a filename."
msgstr ""

#: ../Doc/library/mailcap.rst:43
msgid ""
"*plist* can be a list containing named parameters; the default value is "
"simply an empty list.  Each entry in the list must be a string containing "
"the parameter name, an equals sign (``'='``), and the parameter's value.  "
"Mailcap entries can contain  named parameters like ``%{foo}``, which will be "
"replaced by the value of the parameter named 'foo'.  For example, if the "
"command line ``showpartial %{id} %{number} %{total}`` was in a mailcap file, "
"and *plist* was set to ``['id=1', 'number=2', 'total=3']``, the resulting "
"command line would be ``'showpartial 1 2 3'``."
msgstr ""

#: ../Doc/library/mailcap.rst:52
msgid ""
"In a mailcap file, the \"test\" field can optionally be specified to test "
"some external condition (such as the machine architecture, or the window "
"system in use) to determine whether or not the mailcap line applies.  :func:"
"`findmatch` will automatically check such conditions and skip the entry if "
"the check fails."
msgstr ""

#: ../Doc/library/mailcap.rst:60
msgid ""
"Returns a dictionary mapping MIME types to a list of mailcap file entries. "
"This dictionary must be passed to the :func:`findmatch` function.  An entry "
"is stored as a list of dictionaries, but it shouldn't be necessary to know "
"the details of this representation."
msgstr ""

#: ../Doc/library/mailcap.rst:65
msgid ""
"The information is derived from all of the mailcap files found on the "
"system. Settings in the user's mailcap file :file:`$HOME/.mailcap` will "
"override settings in the system mailcap files :file:`/etc/mailcap`, :file:`/"
"usr/etc/mailcap`, and :file:`/usr/local/etc/mailcap`."
msgstr ""

#: ../Doc/library/mailcap.rst:70
msgid "An example usage::"
msgstr ""

#: ../Doc/library/markup.rst:5
msgid "Structured Markup Processing Tools"
msgstr ""

#: ../Doc/library/markup.rst:7
msgid ""
"Python supports a variety of modules to work with various forms of "
"structured data markup.  This includes modules to work with the Standard "
"Generalized Markup Language (SGML) and the Hypertext Markup Language (HTML), "
"and several interfaces for working with the Extensible Markup Language (XML)."
msgstr ""

# 4a76824c4ddd47318561c508ebb23dd0
#: ../Doc/library/markup.rst:12
msgid ""
"It is important to note that modules in the :mod:`xml` package require that "
"there be at least one SAX-compliant XML parser available. Starting with "
"Python 2.3, the Expat parser is included with Python, so the :mod:`xml."
"parsers.expat` module will always be available. You may still want to be "
"aware of the `PyXML add-on package <http://pyxml.sourceforge.net/>`_; that "
"package provides an extended set of XML libraries for Python."
msgstr ""

#: ../Doc/library/markup.rst:19
msgid ""
"The documentation for the :mod:`xml.dom` and :mod:`xml.sax` packages are the "
"definition of the Python bindings for the DOM and SAX interfaces."
msgstr ""

#: ../Doc/library/marshal.rst:3
msgid ":mod:`marshal` --- Internal Python object serialization"
msgstr ""

#: ../Doc/library/marshal.rst:10
msgid ""
"This module contains functions that can read and write Python values in a "
"binary format.  The format is specific to Python, but independent of machine "
"architecture issues (e.g., you can write a Python value to a file on a PC, "
"transport the file to a Sun, and read it back there).  Details of the format "
"are undocumented on purpose; it may change between Python versions (although "
"it rarely does). [#]_"
msgstr ""

#: ../Doc/library/marshal.rst:22
msgid ""
"This is not a general \"persistence\" module.  For general persistence and "
"transfer of Python objects through RPC calls, see the modules :mod:`pickle` "
"and :mod:`shelve`.  The :mod:`marshal` module exists mainly to support "
"reading and writing the \"pseudo-compiled\" code for Python modules of :file:"
"`.pyc` files. Therefore, the Python maintainers reserve the right to modify "
"the marshal format in backward incompatible ways should the need arise.  If "
"you're serializing and de-serializing Python objects, use the :mod:`pickle` "
"module instead -- the performance is comparable, version independence is "
"guaranteed, and pickle supports a substantially wider range of objects than "
"marshal."
msgstr ""

#: ../Doc/library/marshal.rst:34
msgid ""
"The :mod:`marshal` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unmarshal data received from an "
"untrusted or unauthenticated source."
msgstr ""

# da476654fb9f4f50a0f276fac8e4665a
#: ../Doc/library/marshal.rst:38
msgid ""
"Not all Python object types are supported; in general, only objects whose "
"value is independent from a particular invocation of Python can be written "
"and read by this module.  The following types are supported: booleans, "
"integers, long integers, floating point numbers, complex numbers, strings, "
"Unicode objects, tuples, lists, sets, frozensets, dictionaries, and code "
"objects, where it should be understood that tuples, lists, sets, frozensets "
"and dictionaries are only supported as long as the values contained therein "
"are themselves supported; and recursive lists, sets and dictionaries should "
"not be written (they will cause infinite loops).  The singletons :const:"
"`None`, :const:`Ellipsis` and :exc:`StopIteration` can also be marshalled "
"and unmarshalled."
msgstr ""

# 4d40b6914e794ea4816291d29466aa5e
#: ../Doc/library/marshal.rst:51
msgid ""
"On machines where C's ``long int`` type has more than 32 bits (such as the "
"DEC Alpha), it is possible to create plain Python integers that are longer "
"than 32 bits. If such an integer is marshaled and read back in on a machine "
"where C's ``long int`` type has only 32 bits, a Python long integer object "
"is returned instead.  While of a different type, the numeric value is the "
"same.  (This behavior is new in Python 2.2.  In earlier versions, all but "
"the least-significant 32 bits of the value were lost, and a warning message "
"was printed.)"
msgstr ""

#: ../Doc/library/marshal.rst:60
msgid ""
"There are functions that read/write files as well as functions operating on "
"strings."
msgstr ""

#: ../Doc/library/marshal.rst:63
msgid "The module defines these functions:"
msgstr ""

#: ../Doc/library/marshal.rst:68
msgid ""
"Write the value on the open file.  The value must be a supported type.  The "
"file must be an open file object such as ``sys.stdout`` or returned by :func:"
"`open` or :func:`os.popen`.  It must be opened in binary mode (``'wb'`` or "
"``'w+b'``)."
msgstr ""

#: ../Doc/library/marshal.rst:73
msgid ""
"If the value has (or contains an object that has) an unsupported type, a :"
"exc:`ValueError` exception is raised --- but garbage data will also be "
"written to the file.  The object will not be properly read back by :func:"
"`load`."
msgstr ""

#: ../Doc/library/marshal.rst:84
msgid ""
"Read one value from the open file and return it.  If no valid value is read "
"(e.g. because the data has a different Python version's incompatible marshal "
"format), raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  The "
"file must be an open file object opened in binary mode (``'rb'`` or ``'r"
"+b'``)."
msgstr ""

#: ../Doc/library/marshal.rst:92
msgid ""
"If an object containing an unsupported type was marshalled with :func:"
"`dump`, :func:`load` will substitute ``None`` for the unmarshallable type."
msgstr ""

#: ../Doc/library/marshal.rst:98
msgid ""
"Return the string that would be written to a file by ``dump(value, file)``.  "
"The value must be a supported type.  Raise a :exc:`ValueError` exception if "
"value has (or contains an object that has) an unsupported type."
msgstr ""

#: ../Doc/library/marshal.rst:109
msgid ""
"Convert the string to a value.  If no valid value is found, raise :exc:"
"`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  Extra characters in the "
"string are ignored."
msgstr ""

#: ../Doc/library/marshal.rst:114
msgid "In addition, the following constants are defined:"
msgstr ""

# 381f25be69cd40439668117595d7a97b
#: ../Doc/library/marshal.rst:118
msgid ""
"Indicates the format that the module uses. Version 0 is the historical "
"format, version 1 (added in Python 2.4) shares interned strings and version "
"2 (added in Python 2.5) uses a binary format for floating point numbers. The "
"current version is 2."
msgstr ""

#: ../Doc/library/marshal.rst:128
msgid ""
"The name of this module stems from a bit of terminology used by the "
"designers of Modula-3 (amongst others), who use the term \"marshalling\" for "
"shipping of data around in a self-contained form. Strictly speaking, \"to "
"marshal\" means to convert some data from internal to external form (in an "
"RPC buffer for instance) and \"unmarshalling\" for the reverse process."
msgstr ""

#: ../Doc/library/math.rst:3
msgid ":mod:`math` --- Mathematical functions"
msgstr ""

#: ../Doc/library/math.rst:9
msgid ""
"This module is always available.  It provides access to the mathematical "
"functions defined by the C standard."
msgstr ""

#: ../Doc/library/math.rst:12
msgid ""
"These functions cannot be used with complex numbers; use the functions of "
"the same name from the :mod:`cmath` module if you require support for "
"complex numbers.  The distinction between functions which support complex "
"numbers and those which don't is made since most users do not want to learn "
"quite as much mathematics as required to understand complex numbers.  "
"Receiving an exception instead of a complex result allows earlier detection "
"of the unexpected complex number used as a parameter, so that the programmer "
"can determine how and why it was generated in the first place."
msgstr ""

#: ../Doc/library/math.rst:21
msgid ""
"The following functions are provided by this module.  Except when explicitly "
"noted otherwise, all return values are floats."
msgstr ""

#: ../Doc/library/math.rst:26
msgid "Number-theoretic and representation functions"
msgstr ""

# 8d1756a3310a468992f073f87be431c5
#: ../Doc/library/math.rst:30
msgid ""
"Return the ceiling of *x* as a float, the smallest integer value greater "
"than or equal to *x*."
msgstr ""

#: ../Doc/library/math.rst:36
msgid ""
"Return *x* with the sign of *y*.  On a platform that supports signed zeros, "
"``copysign(1.0, -0.0)`` returns *-1.0*."
msgstr ""

#: ../Doc/library/math.rst:44
msgid "Return the absolute value of *x*."
msgstr ""

#: ../Doc/library/math.rst:49
msgid ""
"Return *x* factorial.  Raises :exc:`ValueError` if *x* is not integral or is "
"negative."
msgstr ""

# b3a8e6e90e7d48ef854ad90558b245f6
#: ../Doc/library/math.rst:57
msgid ""
"Return the floor of *x* as a float, the largest integer value less than or "
"equal to *x*."
msgstr ""

#: ../Doc/library/math.rst:63
msgid ""
"Return ``fmod(x, y)``, as defined by the platform C library. Note that the "
"Python expression ``x % y`` may not return the same result.  The intent of "
"the C standard is that ``fmod(x, y)`` be exactly (mathematically; to "
"infinite precision) equal to ``x - n*y`` for some integer *n* such that the "
"result has the same sign as *x* and magnitude less than ``abs(y)``.  "
"Python's ``x % y`` returns a result with the sign of *y* instead, and may "
"not be exactly computable for float arguments. For example, ``fmod(-1e-100, "
"1e100)`` is ``-1e-100``, but the result of Python's ``-1e-100 % 1e100`` is "
"``1e100-1e-100``, which cannot be represented exactly as a float, and rounds "
"to the surprising ``1e100``.  For this reason, function :func:`fmod` is "
"generally preferred when working with floats, while Python's ``x % y`` is "
"preferred when working with integers."
msgstr ""

#: ../Doc/library/math.rst:78
msgid ""
"Return the mantissa and exponent of *x* as the pair ``(m, e)``.  *m* is a "
"float and *e* is an integer such that ``x == m * 2**e`` exactly. If *x* is "
"zero, returns ``(0.0, 0)``, otherwise ``0.5 <= abs(m) < 1``.  This is used "
"to \"pick apart\" the internal representation of a float in a portable way."
msgstr ""

#: ../Doc/library/math.rst:86
msgid ""
"Return an accurate floating point sum of values in the iterable.  Avoids "
"loss of precision by tracking multiple intermediate partial sums::"
msgstr ""

#: ../Doc/library/math.rst:94
msgid ""
"The algorithm's accuracy depends on IEEE-754 arithmetic guarantees and the "
"typical case where the rounding mode is half-even.  On some non-Windows "
"builds, the underlying C library uses extended precision addition and may "
"occasionally double-round an intermediate sum causing it to be off in its "
"least significant bit."
msgstr ""

#: ../Doc/library/math.rst:100
msgid ""
"For further discussion and two alternative approaches, see the `ASPN "
"cookbook recipes for accurate floating point summation <http://code."
"activestate.com/recipes/393090/>`_\\."
msgstr ""

#: ../Doc/library/math.rst:109
msgid "Check if the float *x* is positive or negative infinity."
msgstr ""

#: ../Doc/library/math.rst:116
msgid ""
"Check if the float *x* is a NaN (not a number).  For more information on "
"NaNs, see the IEEE 754 standards."
msgstr ""

#: ../Doc/library/math.rst:124
msgid ""
"Return ``x * (2**i)``.  This is essentially the inverse of function :func:"
"`frexp`."
msgstr ""

#: ../Doc/library/math.rst:130
msgid ""
"Return the fractional and integer parts of *x*.  Both results carry the sign "
"of *x* and are floats."
msgstr ""

# 0afe5ed475fd4447a47e537ef8c601da
#: ../Doc/library/math.rst:136
msgid ""
"Return the :class:`Real` value *x* truncated to an :class:`Integral` "
"(usually a long integer).  Uses the ``__trunc__`` method."
msgstr ""

#: ../Doc/library/math.rst:142
msgid ""
"Note that :func:`frexp` and :func:`modf` have a different call/return "
"pattern than their C equivalents: they take a single argument and return a "
"pair of values, rather than returning their second return value through an "
"'output parameter' (there is no such thing in Python)."
msgstr ""

#: ../Doc/library/math.rst:147
msgid ""
"For the :func:`ceil`, :func:`floor`, and :func:`modf` functions, note that "
"*all* floating-point numbers of sufficiently large magnitude are exact "
"integers. Python floats typically carry no more than 53 bits of precision "
"(the same as the platform C double type), in which case any float *x* with "
"``abs(x) >= 2**52`` necessarily has no fractional bits."
msgstr ""

#: ../Doc/library/math.rst:159
msgid "Return ``e**x``."
msgstr ""

#: ../Doc/library/math.rst:164
msgid ""
"Return ``e**x - 1``.  For small floats *x*, the subtraction in ``exp(x) - "
"1`` can result in a significant loss of precision; the :func:`expm1` "
"function provides a way to compute this quantity to full precision::"
msgstr ""

#: ../Doc/library/math.rst:180
msgid "With one argument, return the natural logarithm of *x* (to base *e*)."
msgstr ""

#: ../Doc/library/math.rst:182
msgid ""
"With two arguments, return the logarithm of *x* to the given *base*, "
"calculated as ``log(x)/log(base)``."
msgstr ""

#: ../Doc/library/math.rst:191
msgid ""
"Return the natural logarithm of *1+x* (base *e*). The result is calculated "
"in a way which is accurate for *x* near zero."
msgstr ""

#: ../Doc/library/math.rst:199
msgid ""
"Return the base-10 logarithm of *x*.  This is usually more accurate than "
"``log(x, 10)``."
msgstr ""

#: ../Doc/library/math.rst:205
msgid ""
"Return ``x`` raised to the power ``y``.  Exceptional cases follow Annex 'F' "
"of the C99 standard as far as possible.  In particular, ``pow(1.0, x)`` and "
"``pow(x, 0.0)`` always return ``1.0``, even when ``x`` is a zero or a NaN.  "
"If both ``x`` and ``y`` are finite, ``x`` is negative, and ``y`` is not an "
"integer then ``pow(x, y)`` is undefined, and raises :exc:`ValueError`."
msgstr ""

#: ../Doc/library/math.rst:218
msgid "Return the square root of *x*."
msgstr ""

#: ../Doc/library/math.rst:226
msgid "Return the arc cosine of *x*, in radians."
msgstr ""

#: ../Doc/library/math.rst:231
msgid "Return the arc sine of *x*, in radians."
msgstr ""

#: ../Doc/library/math.rst:236
msgid "Return the arc tangent of *x*, in radians."
msgstr ""

#: ../Doc/library/math.rst:241
msgid ""
"Return ``atan(y / x)``, in radians. The result is between ``-pi`` and "
"``pi``. The vector in the plane from the origin to point ``(x, y)`` makes "
"this angle with the positive X axis. The point of :func:`atan2` is that the "
"signs of both inputs are known to it, so it can compute the correct quadrant "
"for the angle. For example, ``atan(1)`` and ``atan2(1, 1)`` are both "
"``pi/4``, but ``atan2(-1, -1)`` is ``-3*pi/4``."
msgstr ""

#: ../Doc/library/math.rst:251
msgid "Return the cosine of *x* radians."
msgstr ""

#: ../Doc/library/math.rst:256
msgid ""
"Return the Euclidean norm, ``sqrt(x*x + y*y)``. This is the length of the "
"vector from the origin to point ``(x, y)``."
msgstr ""

#: ../Doc/library/math.rst:262
msgid "Return the sine of *x* radians."
msgstr ""

#: ../Doc/library/math.rst:267
msgid "Return the tangent of *x* radians."
msgstr ""

#: ../Doc/library/math.rst:271
msgid "Angular conversion"
msgstr ""

#: ../Doc/library/math.rst:275
msgid "Converts angle *x* from radians to degrees."
msgstr ""

#: ../Doc/library/math.rst:280
msgid "Converts angle *x* from degrees to radians."
msgstr ""

#: ../Doc/library/math.rst:288
msgid "Return the inverse hyperbolic cosine of *x*."
msgstr ""

#: ../Doc/library/math.rst:295
msgid "Return the inverse hyperbolic sine of *x*."
msgstr ""

#: ../Doc/library/math.rst:302
msgid "Return the inverse hyperbolic tangent of *x*."
msgstr ""

#: ../Doc/library/math.rst:323
msgid "Special functions"
msgstr ""

#: ../Doc/library/math.rst:327
msgid "Return the error function at *x*."
msgstr ""

#: ../Doc/library/math.rst:334
msgid "Return the complementary error function at *x*."
msgstr ""

#: ../Doc/library/math.rst:341
msgid "Return the Gamma function at *x*."
msgstr ""

#: ../Doc/library/math.rst:348
msgid ""
"Return the natural logarithm of the absolute value of the Gamma function at "
"*x*."
msgstr ""

#: ../Doc/library/math.rst:359
msgid "The mathematical constant π = 3.141592..., to available precision."
msgstr ""

#: ../Doc/library/math.rst:364
msgid "The mathematical constant e = 2.718281..., to available precision."
msgstr ""

#: ../Doc/library/math.rst:369
msgid ""
"The :mod:`math` module consists mostly of thin wrappers around the platform "
"C math library functions.  Behavior in exceptional cases follows Annex F of "
"the C99 standard where appropriate.  The current implementation will raise :"
"exc:`ValueError` for invalid operations like ``sqrt(-1.0)`` or ``log(0.0)`` "
"(where C99 Annex F recommends signaling invalid operation or divide-by-"
"zero), and :exc:`OverflowError` for results that overflow (for example, ``exp"
"(1000.0)``).  A NaN will not be returned from any of the functions above "
"unless one or more of the input arguments was a NaN; in that case, most "
"functions will return a NaN, but (again following C99 Annex F) there are "
"some exceptions to this rule, for example ``pow(float('nan'), 0.0)`` or "
"``hypot(float('nan'), float('inf'))``."
msgstr ""

#: ../Doc/library/math.rst:381
msgid ""
"Note that Python makes no effort to distinguish signaling NaNs from quiet "
"NaNs, and behavior for signaling NaNs remains unspecified. Typical behavior "
"is to treat all NaNs as though they were quiet."
msgstr ""

#: ../Doc/library/math.rst:393
msgid "Complex number versions of many of these functions."
msgstr ""

# a9434700047f4d80b131472dc846a5d1
#: ../Doc/library/md5.rst:3
msgid ":mod:`md5` --- MD5 message digest algorithm"
msgstr ""

# b37da5c5b96547af8cae3cbaa99dd254
#: ../Doc/library/md5.rst:17
msgid ""
"This module implements the interface to RSA's MD5 message digest  algorithm "
"(see also Internet :rfc:`1321`).  Its use is quite straightforward: use :"
"func:`new` to create an md5 object. You can now feed this object with "
"arbitrary strings using the :meth:`update` method, and at any point you can "
"ask it for the :dfn:`digest` (a strong kind of 128-bit checksum, a.k.a. "
"\"fingerprint\") of the concatenation of the strings fed to it so far using "
"the :meth:`digest` method."
msgstr ""

# ce0fb0dccbda491483022e6439d52c80
#: ../Doc/library/md5.rst:39
msgid ""
"The following values are provided as constants in the module and as "
"attributes of the md5 objects returned by :func:`new`:"
msgstr ""

# 1959aa42fc0541b3aacc88d123952cf9
#: ../Doc/library/md5.rst:45
msgid "The size of the resulting digest in bytes.  This is always ``16``."
msgstr ""

# ce3a5c0b96844fa5b17b972b1f8dea28
#: ../Doc/library/md5.rst:47
msgid "The md5 module provides the following functions:"
msgstr ""

# 0f6dd0e7d4b64d35bd228e7f73213c38
#: ../Doc/library/md5.rst:52
msgid ""
"Return a new md5 object.  If *arg* is present, the method call ``update(arg)"
"`` is made."
msgstr ""

# 3454fa8ed1e24ab1bf24843c87e66939
#: ../Doc/library/md5.rst:58
msgid ""
"For backward compatibility reasons, this is an alternative name for the :"
"func:`new` function."
msgstr ""

# 566dd39e156147b3896ae1c7a4506b5c
#: ../Doc/library/md5.rst:61
msgid "An md5 object has the following methods:"
msgstr ""

# f72fb30fa1cf43288c27e545de221fe7
#: ../Doc/library/md5.rst:66
msgid ""
"Update the md5 object with the string *arg*.  Repeated calls are equivalent "
"to a single call with the concatenation of all the arguments: ``m.update(a); "
"m.update(b)`` is equivalent to ``m.update(a+b)``."
msgstr ""

# 8e470fc88926499297a8168a09fee6ba
#: ../Doc/library/md5.rst:73
msgid ""
"Return the digest of the strings passed to the :meth:`update` method so far. "
"This is a 16-byte string which may contain non-ASCII characters, including "
"null bytes."
msgstr ""

# eef94338bf824c4cb5aca6696b9c7a58
#: ../Doc/library/md5.rst:80
msgid ""
"Like :meth:`digest` except the digest is returned as a string of length 32, "
"containing only hexadecimal digits.  This may  be used to exchange the value "
"safely in email or other non-binary environments."
msgstr ""

# 9aaba7a1c580467dbb9b08aa7c4b21e6
#: ../Doc/library/md5.rst:87
msgid ""
"Return a copy (\"clone\") of the md5 object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""

# 1ead2a0e6b324d60b966cca594989c5f
#: ../Doc/library/md5.rst:94
msgid ""
"Similar module implementing the Secure Hash Algorithm (SHA).  The SHA "
"algorithm is considered a more secure hash."
msgstr ""

# 396b95b238fa4a20a4a13e1aa74efe4b
#: ../Doc/library/mhlib.rst:2
msgid ":mod:`mhlib` --- Access to MH mailboxes"
msgstr ""

# fcdfc6b4c8694f06b3f18089d1e25ff9
#: ../Doc/library/mhlib.rst:14
msgid ""
"The :mod:`mhlib` module provides a Python interface to MH folders and their "
"contents."
msgstr ""

# 02b3ccc0ff9c4095987f7e8b29688976
#: ../Doc/library/mhlib.rst:17
msgid ""
"The module contains three basic classes, :class:`MH`, which represents a "
"particular collection of folders, :class:`Folder`, which represents a single "
"folder, and :class:`Message`, which represents a single message."
msgstr ""

# bb9917dfb0814e368bf5af71906276ea
#: ../Doc/library/mhlib.rst:24
msgid ":class:`MH` represents a collection of MH folders."
msgstr ""

# d24989880fb2498fa8919c3ca16ac4c8
#: ../Doc/library/mhlib.rst:29
msgid "The :class:`Folder` class represents a single folder and its messages."
msgstr ""

# 686a2a79ed4e464b863d084e7d833b37
#: ../Doc/library/mhlib.rst:34
msgid ""
":class:`Message` objects represent individual messages in a folder.  The "
"Message class is derived from :class:`mimetools.Message`."
msgstr ""

# d239cbcbef174ab4b25962845eef41df
#: ../Doc/library/mhlib.rst:41
msgid "MH Objects"
msgstr ""

# f99ed46f786d43bd9e65b03e9f095b67
#: ../Doc/library/mhlib.rst:43
msgid ":class:`MH` instances have the following methods:"
msgstr ""

# cc9b9b87125a4370abc1609a29c4f172
# 1398bc420f324356bb5955ec88042643
#: ../Doc/library/mhlib.rst:48 ../Doc/library/mhlib.rst:116
msgid "Print an error message -- can be overridden."
msgstr ""

# ba3df8cf685144e3be1f3b2cc79a2965
#: ../Doc/library/mhlib.rst:53
msgid "Return a profile entry (``None`` if not set)."
msgstr ""

# d97d82686d0b4405a3eebdf5b87369ca
#: ../Doc/library/mhlib.rst:58
msgid "Return the mailbox pathname."
msgstr ""

# 49c4b0c87b1e4035b6a74df5b6065319
#: ../Doc/library/mhlib.rst:63
msgid "Return the current folder name."
msgstr ""

# 4069af92b7254452bf10064c37818173
#: ../Doc/library/mhlib.rst:68
msgid "Set the current folder name."
msgstr ""

# b0b0146ee05248b29c38ca5d68f533bf
#: ../Doc/library/mhlib.rst:73
msgid "Return a list of top-level folders."
msgstr ""

# 70735cc3f16542f082383ef817b2a725
#: ../Doc/library/mhlib.rst:78
msgid "Return a list of all folders."
msgstr ""

# 6c4a212dde0045948c6c2b50e7cbc53a
#: ../Doc/library/mhlib.rst:83
msgid "Return a list of direct subfolders of the given folder."
msgstr ""

# 157cd4bea19346c0ae7017b1f5c5058e
#: ../Doc/library/mhlib.rst:88
msgid "Return a list of all subfolders of the given folder."
msgstr ""

# 778468bf8c0548518b27c36f59319e08
#: ../Doc/library/mhlib.rst:93
msgid "Create a new folder."
msgstr ""

# 370d8637d0154fa2996ac2341a09756e
#: ../Doc/library/mhlib.rst:98
msgid "Delete a folder -- must have no subfolders."
msgstr ""

# c104746bfa4f450d889d4900695626cf
#: ../Doc/library/mhlib.rst:103
msgid "Return a new open folder object."
msgstr ""

# fb81ed739a43482696c19b7e6bcd2f8b
#: ../Doc/library/mhlib.rst:109
msgid "Folder Objects"
msgstr ""

# d928137d35674e85a13f3dc6bbfb536a
#: ../Doc/library/mhlib.rst:111
msgid ""
":class:`Folder` instances represent open folders and have the following "
"methods:"
msgstr ""

# ab58035f1b4948559176851456e5d50a
#: ../Doc/library/mhlib.rst:121
msgid "Return the folder's full pathname."
msgstr ""

# 939a8a88d8a848f1a6dba0dab69977e4
#: ../Doc/library/mhlib.rst:126
msgid "Return the full pathname of the folder's sequences file."
msgstr ""

# c8128a0995774ef68dd36cd70c1d5862
#: ../Doc/library/mhlib.rst:131
msgid "Return the full pathname of message *n* of the folder."
msgstr ""

# 909c919707084c5ab6a8be1a821dbe52
#: ../Doc/library/mhlib.rst:136
msgid "Return a list of messages in the folder (as numbers)."
msgstr ""

# faa11516bb884c00a6219822f88e98ce
#: ../Doc/library/mhlib.rst:141
msgid "Return the current message number."
msgstr ""

# 574c8d77cc2a4341863c328dd924fdc6
#: ../Doc/library/mhlib.rst:146
msgid "Set the current message number to *n*."
msgstr ""

# e10d786cd89e4c6caddd2e2acb65f205
#: ../Doc/library/mhlib.rst:151
msgid "Parse msgs syntax into list of messages."
msgstr ""

# e871cb235d5d4a1db0f6d1fcf7f497d9
#: ../Doc/library/mhlib.rst:156
msgid "Get last message, or ``0`` if no messages are in the folder."
msgstr ""

# 3deef7a0e18d4d84b4652b0d7e2ec3a2
#: ../Doc/library/mhlib.rst:161
msgid "Set last message (internal use only)."
msgstr ""

# f65458934181413f948d28223abf9520
#: ../Doc/library/mhlib.rst:166
msgid ""
"Return dictionary of sequences in folder.  The sequence names are used  as "
"keys, and the values are the lists of message numbers in the sequences."
msgstr ""

# 0d8f98bb691c4aca86c0f5bf8bad2d1a
#: ../Doc/library/mhlib.rst:172
msgid "Return dictionary of sequences in folder name: list."
msgstr ""

# 8a82731b36b14339b1223bc6039fbf1b
#: ../Doc/library/mhlib.rst:177
msgid "Remove messages in list from folder."
msgstr ""

# 2a5c9310fea2412e94d24383f10dfe31
#: ../Doc/library/mhlib.rst:182
msgid "Move messages in list to other folder."
msgstr ""

# 38f581e3d29f4e3694c50df49d41f660
#: ../Doc/library/mhlib.rst:187
msgid "Move one message to a given destination in another folder."
msgstr ""

# b7ad4e591c984a46a7e17288b5cd4bea
#: ../Doc/library/mhlib.rst:192
msgid "Copy one message to a given destination in another folder."
msgstr ""

# 109830f0278949d195d04f3924391cf1
# af8fbc8ebffb4596829de5c143f4b2e8
#: ../Doc/library/mhlib.rst:198 ../Doc/library/rfc822.rst:143
msgid "Message Objects"
msgstr ""

# bb885fa3e62445ad84d6f23f6f31a558
#: ../Doc/library/mhlib.rst:200
msgid ""
"The :class:`Message` class adds one method to those of :class:`mimetools."
"Message`:"
msgstr ""

# 22e4fb6a844f42d78df2d2ec037ad4b5
#: ../Doc/library/mhlib.rst:206
msgid "Return a new open message object (costs a file descriptor)."
msgstr ""

# 15bba6ca0dcd4334aa3bdd9db0ccc992
#: ../Doc/library/mimetools.rst:3
msgid ":mod:`mimetools` --- Tools for parsing MIME messages"
msgstr ""

# 0718817f3b634468ab98fb27c8bec4a9
#: ../Doc/library/mimetools.rst:17
msgid ""
"This module defines a subclass of the :mod:`rfc822` module's :class:"
"`Message` class and a number of utility functions that are useful for the "
"manipulation for MIME multipart or encoded message."
msgstr ""

# 90ee50f5f72b4e0e82219ce8481cad4d
#: ../Doc/library/mimetools.rst:26
msgid ""
"Return a new instance of the :class:`Message` class.  This is a subclass of "
"the :class:`rfc822.Message` class, with some additional methods (see "
"below).  The *seekable* argument has the same meaning as for :class:`rfc822."
"Message`."
msgstr ""

# d2e897dfcbf543608597232f805291f7
#: ../Doc/library/mimetools.rst:33
msgid ""
"Return a unique string that has a high likelihood of being usable as a part "
"boundary.  The string has the form ``'hostipaddr.uid.pid.timestamp.random'``."
msgstr ""

# e04ff0ad42c54e7db32b72e57c59d41f
#: ../Doc/library/mimetools.rst:39
msgid ""
"Read data encoded using the allowed MIME *encoding* from open file object "
"*input* and write the decoded data to open file object *output*.  Valid "
"values for *encoding* include ``'base64'``, ``'quoted-printable'``, "
"``'uuencode'``, ``'x-uuencode'``, ``'uue'``, ``'x-uue'``, ``'7bit'``, and  "
"``'8bit'``.  Decoding messages encoded in ``'7bit'`` or ``'8bit'`` has no "
"effect.  The input is simply copied to the output."
msgstr ""

# 9fb0568e647e45c681c08880debd6108
#: ../Doc/library/mimetools.rst:49
msgid ""
"Read data from open file object *input* and write it encoded using the "
"allowed MIME *encoding* to open file object *output*. Valid values for "
"*encoding* are the same as for :meth:`decode`."
msgstr ""

# 7089edb492484148bb5eff3337105789
#: ../Doc/library/mimetools.rst:56
msgid ""
"Read lines from open file *input* until EOF and write them to open file "
"*output*."
msgstr ""

# b5b0dd30efc549fbba20abf4a8d8533d
#: ../Doc/library/mimetools.rst:62
msgid ""
"Read blocks until EOF from open file *input* and write them to open file "
"*output*.  The block size is currently fixed at 8192."
msgstr ""

# 386169d45d4d45f3bbe84e0394815c3d
#: ../Doc/library/mimetools.rst:69
msgid ""
"Comprehensive email handling package; supersedes the :mod:`mimetools` module."
msgstr ""

# 274d7446b43046468a018a4abc207fe8
#: ../Doc/library/mimetools.rst:72
msgid "Provides the base class for :class:`mimetools.Message`."
msgstr ""

# 395c8541ef904c1bb0515814abeea257
#: ../Doc/library/mimetools.rst:75
msgid ""
"Support for reading files which contain distinct parts, such as MIME data."
msgstr ""

# 16351a3b0a064ebcbc9ef2490176c25f
#: ../Doc/library/mimetools.rst:78
msgid ""
"The MIME Frequently Asked Questions document.  For an overview of MIME, see "
"the answer to question 1.1 in Part 1 of this document."
msgstr ""

# d8b431d9d8dd44dfb9037a2f74b91f49
#: ../Doc/library/mimetools.rst:85
msgid "Additional Methods of Message Objects"
msgstr ""

# c23d779410fc4ac78b2901ab957a4c13
#: ../Doc/library/mimetools.rst:87
msgid ""
"The :class:`Message` class defines the following methods in addition to the :"
"class:`rfc822.Message` methods:"
msgstr ""

# d31363a6fbbb4eddb70b390bacb7e275
#: ../Doc/library/mimetools.rst:93
msgid ""
"Return the parameter list of the :mailheader:`Content-Type` header. This is "
"a list of strings.  For parameters of the form ``key=value``, *key* is "
"converted to lower case but *value* is not.  For example, if the message "
"contains the header ``Content-type: text/html; spam=1; Spam=2; Spam`` then :"
"meth:`getplist` will return the Python list ``['spam=1', 'spam=2', 'Spam']``."
msgstr ""

# 2667a337de5242c38df66adf32579e34
#: ../Doc/library/mimetools.rst:102
msgid ""
"Return the *value* of the first parameter (as returned by :meth:`getplist`) "
"of the form ``name=value`` for the given *name*.  If *value* is surrounded "
"by quotes of the form '``<``...\\ ``>``' or '``\"``...\\ ``\"``', these are "
"removed."
msgstr ""

# 6db91d4a0e2c4b6b9c4847e73910d8a3
#: ../Doc/library/mimetools.rst:109
msgid ""
"Return the encoding specified in the :mailheader:`Content-Transfer-Encoding` "
"message header.  If no such header exists, return ``'7bit'``.  The encoding "
"is converted to lower case."
msgstr ""

# ae3e93f941dc40988c966539fbf812ce
#: ../Doc/library/mimetools.rst:116
msgid ""
"Return the message type (of the form ``type/subtype``) as specified in the :"
"mailheader:`Content-Type` header.  If no such header exists, return ``'text/"
"plain'``.  The type is converted to lower case."
msgstr ""

# 0ddaad3e33ef4cf8a662401ca5e0d6dc
#: ../Doc/library/mimetools.rst:123
msgid ""
"Return the main type as specified in the :mailheader:`Content-Type` header.  "
"If no such header exists, return ``'text'``.  The main type is converted to "
"lower case."
msgstr ""

# df76c36932bf41c891e856a2246d0a83
#: ../Doc/library/mimetools.rst:130
msgid ""
"Return the subtype as specified in the :mailheader:`Content-Type` header.  "
"If no such header exists, return ``'plain'``.  The subtype is converted to "
"lower case."
msgstr ""

#: ../Doc/library/mimetypes.rst:2
msgid ":mod:`mimetypes` --- Map filenames to MIME types"
msgstr ""

# 2262a77279a944a1a804fe587c330f0d
#: ../Doc/library/mimetypes.rst:11
msgid "**Source code:** :source:`Lib/mimetypes.py`"
msgstr ""

#: ../Doc/library/mimetypes.rst:15
msgid ""
"The :mod:`mimetypes` module converts between a filename or URL and the MIME "
"type associated with the filename extension.  Conversions are provided from "
"filename to MIME type and from MIME type to filename extension; encodings "
"are not supported for the latter conversion."
msgstr ""

#: ../Doc/library/mimetypes.rst:20
msgid ""
"The module provides one class and a number of convenience functions. The "
"functions are the normal interface to this module, but some applications may "
"be interested in the class as well."
msgstr ""

#: ../Doc/library/mimetypes.rst:24
msgid ""
"The functions described below provide the primary interface for this "
"module.  If the module has not been initialized, they will call :func:`init` "
"if they rely on the information :func:`init` sets up."
msgstr ""

# 30851d9dee0e4c42a46fecfaffee08b6
#: ../Doc/library/mimetypes.rst:33
msgid ""
"Guess the type of a file based on its filename or URL, given by *url*.  The "
"return value is a tuple ``(type, encoding)`` where *type* is ``None`` if the "
"type can't be guessed (missing or unknown suffix) or a string of the form "
"``'type/subtype'``, usable for a MIME :mailheader:`content-type` header."
msgstr ""

# 03e0bd64be75463cbd90643a18e7ddb2
#: ../Doc/library/mimetypes.rst:38
msgid ""
"*encoding* is ``None`` for no encoding or the name of the program used to "
"encode (e.g. :program:`compress` or :program:`gzip`). The encoding is "
"suitable for use as a :mailheader:`Content-Encoding` header, **not** as a :"
"mailheader:`Content-Transfer-Encoding` header. The mappings are table "
"driven. Encoding suffixes are case sensitive; type suffixes are first tried "
"case sensitively, then case insensitively."
msgstr ""

# 1d378da097c749dbb379a4644df78f40
#: ../Doc/library/mimetypes.rst:45
msgid ""
"The optional *strict* argument is a flag specifying whether the list of "
"known MIME types is limited to only the official types `registered with IANA "
"<http://www.iana.org/assignments/media-types/>`_. When *strict* is ``True`` "
"(the default), only the IANA types are supported; when *strict* is "
"``False``, some additional non-standard but commonly used MIME types are "
"also recognized."
msgstr ""

#: ../Doc/library/mimetypes.rst:55
msgid ""
"Guess the extensions for a file based on its MIME type, given by *type*. The "
"return value is a list of strings giving all possible filename extensions, "
"including the leading dot (``'.'``).  The extensions are not guaranteed to "
"have been associated with any particular data stream, but would be mapped to "
"the MIME type *type* by :func:`guess_type`."
msgstr ""

# 09287124be3f4e1cbe0e0ad05baf5409
# dab3a9a8c5bd4f57acf929385863fa9e
#: ../Doc/library/mimetypes.rst:61 ../Doc/library/mimetypes.rst:73
msgid ""
"The optional *strict* argument has the same meaning as with the :func:"
"`guess_type` function."
msgstr ""

# 05ac88ef08a0428e8f1587a023f6eb29
#: ../Doc/library/mimetypes.rst:66
msgid ""
"Guess the extension for a file based on its MIME type, given by *type*. The "
"return value is a string giving a filename extension, including the leading "
"dot (``'.'``).  The extension is not guaranteed to have been associated with "
"any particular data stream, but would be mapped to the MIME type *type* by :"
"func:`guess_type`.  If no extension can be guessed for *type*, ``None`` is "
"returned."
msgstr ""

#: ../Doc/library/mimetypes.rst:75
msgid ""
"Some additional functions and data items are available for controlling the "
"behavior of the module."
msgstr ""

#: ../Doc/library/mimetypes.rst:81
msgid ""
"Initialize the internal data structures.  If given, *files* must be a "
"sequence of file names which should be used to augment the default type "
"map.  If omitted, the file names to use are taken from :const:`knownfiles`; "
"on Windows, the current registry settings are loaded.  Each file named in "
"*files* or :const:`knownfiles` takes precedence over those named before it.  "
"Calling :func:`init` repeatedly is allowed."
msgstr ""

# be56844b27274ac7930900ed4a95c17c
#: ../Doc/library/mimetypes.rst:94
msgid ""
"Load the type map given in the file *filename*, if it exists.  The type map "
"is returned as a dictionary mapping filename extensions, including the "
"leading dot (``'.'``), to strings of the form ``'type/subtype'``.  If the "
"file *filename* does not exist or cannot be read, ``None`` is returned."
msgstr ""

# c18eeba01e324d0e84b1f80a96b854a1
#: ../Doc/library/mimetypes.rst:102
msgid ""
"Add a mapping from the MIME type *type* to the extension *ext*. When the "
"extension is already known, the new type will replace the old one. When the "
"type is already known the extension will be added to the list of known "
"extensions."
msgstr ""

# b202111f47e9416fad0ff458fa77d0ab
#: ../Doc/library/mimetypes.rst:106
msgid ""
"When *strict* is ``True`` (the default), the mapping will added to the "
"official MIME types, otherwise to the non-standard ones."
msgstr ""

# 80a21114507045c2aad601f54c0d5d02
#: ../Doc/library/mimetypes.rst:112
msgid ""
"Flag indicating whether or not the global data structures have been "
"initialized. This is set to ``True`` by :func:`init`."
msgstr ""

#: ../Doc/library/mimetypes.rst:120
msgid ""
"List of type map file names commonly installed.  These files are typically "
"named :file:`mime.types` and are installed in different locations by "
"different packages."
msgstr ""

#: ../Doc/library/mimetypes.rst:127
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to :file:"
"`.tar.gz` to allow the encoding and type to be recognized separately."
msgstr ""

#: ../Doc/library/mimetypes.rst:135
msgid "Dictionary mapping filename extensions to encoding types."
msgstr ""

#: ../Doc/library/mimetypes.rst:140
msgid "Dictionary mapping filename extensions to MIME types."
msgstr ""

#: ../Doc/library/mimetypes.rst:145
msgid ""
"Dictionary mapping filename extensions to non-standard, but commonly found "
"MIME types."
msgstr ""

#: ../Doc/library/mimetypes.rst:149
msgid "An example usage of the module::"
msgstr ""

#: ../Doc/library/mimetypes.rst:166
msgid "MimeTypes Objects"
msgstr ""

# a8d5ec5f87884e8183ff4beceec4844d
#: ../Doc/library/mimetypes.rst:168
msgid ""
"The :class:`MimeTypes` class may be useful for applications which may want "
"more than one MIME-type database; it provides an interface similar to the "
"one of the :mod:`mimetypes` module."
msgstr ""

#: ../Doc/library/mimetypes.rst:175
msgid ""
"This class represents a MIME-types database.  By default, it provides access "
"to the same database as the rest of this module. The initial database is a "
"copy of that provided by the module, and may be extended by loading "
"additional :file:`mime.types`\\ -style files into the database using the :"
"meth:`read` or :meth:`readfp` methods.  The mapping dictionaries may also be "
"cleared before loading additional data if the default data is not desired."
msgstr ""

#: ../Doc/library/mimetypes.rst:182
msgid ""
"The optional *filenames* parameter can be used to cause additional files to "
"be loaded \"on top\" of the default database."
msgstr ""

# c4750cdf55d741ed861f170b55fb5fff
#: ../Doc/library/mimetypes.rst:188
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to :file:"
"`.tar.gz` to allow the encoding and type to be recognized separately.  This "
"is initially a copy of the global :data:`suffix_map` defined in the module."
msgstr ""

# 2eaf642654d14faf86f4a3aeafc893b7
#: ../Doc/library/mimetypes.rst:197
msgid ""
"Dictionary mapping filename extensions to encoding types.  This is initially "
"a copy of the global :data:`encodings_map` defined in the module."
msgstr ""

# 93e8922d7c4b4825b7691ce588c3e885
#: ../Doc/library/mimetypes.rst:203
msgid ""
"Tuple containing two dictionaries, mapping filename extensions to MIME "
"types: the first dictionary is for the non-standards types and the second "
"one is for the standard types. They are initialized by :data:`common_types` "
"and :data:`types_map`."
msgstr ""

# b6a6d490b03a45a79c4488a0145d2380
#: ../Doc/library/mimetypes.rst:211
msgid ""
"Tuple containing two dictionaries, mapping MIME types to a list of filename "
"extensions: the first dictionary is for the non-standards types and the "
"second one is for the standard types. They are initialized by :data:"
"`common_types` and :data:`types_map`."
msgstr ""

#: ../Doc/library/mimetypes.rst:219
msgid ""
"Similar to the :func:`guess_extension` function, using the tables stored as "
"part of the object."
msgstr ""

#: ../Doc/library/mimetypes.rst:225
msgid ""
"Similar to the :func:`guess_type` function, using the tables stored as part "
"of the object."
msgstr ""

# 9ca179ae663542959302996a9b679c10
#: ../Doc/library/mimetypes.rst:231
msgid ""
"Similar to the :func:`guess_all_extensions` function, using the tables "
"stored as part of the object."
msgstr ""

# 02fb845bed3b40e4acbb4c2162f66432
#: ../Doc/library/mimetypes.rst:237
msgid ""
"Load MIME information from a file named *filename*.  This uses :meth:"
"`readfp` to parse the file."
msgstr ""

# 55ffdc664e8e499db6e9dbe92929a66e
#: ../Doc/library/mimetypes.rst:240
msgid ""
"If *strict* is ``True``, information will be added to list of standard "
"types, else to the list of non-standard types."
msgstr ""

# 5550c517125246fc8f5413e5716b39ea
#: ../Doc/library/mimetypes.rst:246
msgid ""
"Load MIME type information from an open file *fp*.  The file must have the "
"format of the standard :file:`mime.types` files."
msgstr ""

# 181e110f2f504209b60fdf10385f0b85
# 2dc3c62db307495db59d4f275305aa86
#: ../Doc/library/mimetypes.rst:249 ../Doc/library/mimetypes.rst:257
msgid ""
"If *strict* is ``True``, information will be added to the list of standard "
"types, else to the list of non-standard types."
msgstr ""

#: ../Doc/library/mimetypes.rst:255
msgid ""
"Load MIME type information from the Windows registry.  Availability: Windows."
msgstr ""

# f706438f77454e8db45e49d664901d39
#: ../Doc/library/mimewriter.rst:2
msgid ":mod:`MimeWriter` --- Generic MIME file writer"
msgstr ""

# 84303eb65a864cf8976277f7901fe092
#: ../Doc/library/mimewriter.rst:15
msgid ""
"This module defines the class :class:`MimeWriter`.  The :class:`MimeWriter` "
"class implements a basic formatter for creating MIME multi-part files.  It "
"doesn't seek around the output file nor does it use large amounts of buffer "
"space. You must write the parts out in the order that they should occur in "
"the final file. :class:`MimeWriter` does buffer the headers you add, "
"allowing you to rearrange their order."
msgstr ""

# 29f9c60062ca434993fd5851d5476a81
#: ../Doc/library/mimewriter.rst:25
msgid ""
"Return a new instance of the :class:`MimeWriter` class.  The only argument "
"passed, *fp*, is a file object to be used for writing. Note that a :class:"
"`StringIO` object could also be used."
msgstr ""

# 7475db0bc97447a2884ab445fabed3eb
#: ../Doc/library/mimewriter.rst:33
msgid "MimeWriter Objects"
msgstr ""

# bb9758c2c3c240f796b9a884eba24e90
#: ../Doc/library/mimewriter.rst:35
msgid ":class:`MimeWriter` instances have the following methods:"
msgstr ""

# 477ebb314d2546acaf58dc9ca9e54d0b
#: ../Doc/library/mimewriter.rst:40
msgid ""
"Add a header line to the MIME message. The *key* is the name of the header, "
"where the *value* obviously provides the value of the header. The optional "
"argument *prefix* determines where the header  is inserted; ``0`` means "
"append at the end, ``1`` is insert at the start. The default is to append."
msgstr ""

# 6e07db902e51444d82d7218380985371
#: ../Doc/library/mimewriter.rst:48
msgid ""
"Causes all headers accumulated so far to be written out (and forgotten). "
"This is useful if you don't need a body part at all, e.g. for a subpart of "
"type :mimetype:`message/rfc822` that's (mis)used to store some header-like "
"information."
msgstr ""

# 840797e9eb2344dc99dd42dcaa93ea05
#: ../Doc/library/mimewriter.rst:56
msgid ""
"Returns a file-like object which can be used to write to the body of the "
"message.  The content-type is set to the provided *ctype*, and the optional "
"parameter *plist* provides additional parameters for the content-type "
"declaration. *prefix* functions as in :meth:`addheader` except that the "
"default is to insert at the start."
msgstr ""

# 13f5a39f60964895ae6c1ec63c4ba8a8
#: ../Doc/library/mimewriter.rst:65
msgid ""
"Returns a file-like object which can be used to write to the body of the "
"message.  Additionally, this method initializes the multi-part code, where "
"*subtype* provides the multipart subtype, *boundary* may provide a user-"
"defined boundary specification, and *plist* provides optional parameters for "
"the subtype. *prefix* functions as in :meth:`startbody`.  Subparts should be "
"created using :meth:`nextpart`."
msgstr ""

# eec94ce2dccb4fda8c662efc2148eaf0
#: ../Doc/library/mimewriter.rst:75
msgid ""
"Returns a new instance of :class:`MimeWriter` which represents an individual "
"part in a multipart message.  This may be used to write the  part as well as "
"used for creating recursively complex multipart messages. The message must "
"first be initialized with :meth:`startmultipartbody` before using :meth:"
"`nextpart`."
msgstr ""

# fc758ccc4e9e4d4d8bfff467da7bedd2
#: ../Doc/library/mimewriter.rst:83
msgid ""
"This is used to designate the last part of a multipart message, and should "
"*always* be used when writing multipart messages."
msgstr ""

# f1112a189b7f4c348dfdf10ca8ad46d9
#: ../Doc/library/mimify.rst:3
msgid ":mod:`mimify` --- MIME processing of mail messages"
msgstr ""

# 780ad77285d04e269f04ecf7f6fe4ec7
#: ../Doc/library/mimify.rst:14
msgid ""
"The :mod:`mimify` module defines two functions to convert mail messages to "
"and from MIME format.  The mail message can be either a simple message or a "
"so-called multipart message.  Each part is treated separately. Mimifying (a "
"part of) a message entails encoding the message as quoted-printable if it "
"contains any characters that cannot be represented using 7-bit ASCII.  "
"Unmimifying (a part of) a message entails undoing the quoted-printable "
"encoding.  Mimify and unmimify are especially useful when a message has to "
"be edited before being sent.  Typical use would be::"
msgstr ""

# 3e8393a18f0944bcb0b917820e38bfa3
#: ../Doc/library/mimify.rst:28
msgid ""
"The modules defines the following user-callable functions and user-settable "
"variables:"
msgstr ""

# 3d67c0e7ffe74a1eb9b5a4cf050aa1e0
#: ../Doc/library/mimify.rst:34
msgid ""
"Copy the message in *infile* to *outfile*, converting parts to quoted-"
"printable and adding MIME mail headers when necessary. *infile* and "
"*outfile* can be file objects (actually, any object that has a :meth:"
"`readline` method (for *infile*) or a :meth:`write` method (for *outfile*)) "
"or strings naming the files. If *infile* and *outfile* are both strings, "
"they may have the same value."
msgstr ""

# ed1a8a0f7f204fc294c84ad83137ff9e
#: ../Doc/library/mimify.rst:43
msgid ""
"Copy the message in *infile* to *outfile*, decoding all quoted-printable "
"parts. *infile* and *outfile* can be file objects (actually, any object that "
"has a :meth:`readline` method (for *infile*) or a :meth:`write` method (for "
"*outfile*)) or strings naming the files.  If *infile* and *outfile* are both "
"strings, they may have the same value. If the *decode_base64* argument is "
"provided and tests true, any parts that are coded in the base64 encoding are "
"decoded as well."
msgstr ""

# 01d7e8e81312466c9b8b87be015139bb
#: ../Doc/library/mimify.rst:54
msgid ""
"Return a decoded version of the encoded header line in *line*. This only "
"supports the ISO 8859-1 charset (Latin-1)."
msgstr ""

# 8f304291a0504ec69fab58f36330162b
#: ../Doc/library/mimify.rst:60
msgid "Return a MIME-encoded version of the header line in *line*."
msgstr ""

# 5ed65960758f4abc8fd6094118a810aa
#: ../Doc/library/mimify.rst:65
msgid ""
"By default, a part will be encoded as quoted-printable when it contains any "
"non-ASCII characters (characters with the 8th bit set), or if there are any "
"lines longer than :const:`MAXLEN` characters (default value 200)."
msgstr ""

# fc51e620143f424e8a1218149fe5f15a
#: ../Doc/library/mimify.rst:72
msgid ""
"When not specified in the mail headers, a character set must be filled in.  "
"The string used is stored in :const:`CHARSET`, and the default value is "
"ISO-8859-1 (also known as Latin1 (latin-one))."
msgstr ""

# f95f47fbaf1043a2ac2500d6c09a9835
#: ../Doc/library/mimify.rst:76
msgid ""
"This module can also be used from the command line.  Usage is as follows::"
msgstr ""

# 86d8000c8f2943388662268816e2919f
#: ../Doc/library/mimify.rst:81
msgid ""
"to encode (mimify) and decode (unmimify) respectively.  *infile* defaults to "
"standard input, *outfile* defaults to standard output. The same file can be "
"specified for input and output."
msgstr ""

# 192171b62dfb42ecb9658803b40d7d5a
#: ../Doc/library/mimify.rst:85
msgid ""
"If the **-l** option is given when encoding, if there are any lines longer "
"than the specified *length*, the containing part will be encoded."
msgstr ""

# f296e527cce64c6f804348af90cefb98
#: ../Doc/library/mimify.rst:88
msgid ""
"If the **-b** option is given when decoding, any base64 parts will be "
"decoded as well."
msgstr ""

# 0aec14d1b6eb44c4bbe9e10267ac8f07
#: ../Doc/library/mimify.rst:95
msgid "Encode and decode MIME quoted-printable files."
msgstr ""

# ad0e7e3e8dcf4e4a9521241f38b089f5
#: ../Doc/library/miniaeframe.rst:3
msgid ":mod:`MiniAEFrame` --- Open Scripting Architecture server support"
msgstr ""

# 46ccdc475b5b43cead70ad0a07fe89b0
#: ../Doc/library/miniaeframe.rst:15
msgid ""
"The module :mod:`MiniAEFrame` provides a framework for an application that "
"can function as an Open Scripting Architecture  (OSA) server, i.e. receive "
"and process AppleEvents. It can be used in conjunction with :mod:`FrameWork` "
"or standalone. As an example, it is used in :program:`PythonCGISlave`."
msgstr ""

# 4ca8540636534d6fb32a4d88c62d98e2
#: ../Doc/library/miniaeframe.rst:20
msgid "The :mod:`MiniAEFrame` module defines the following classes:"
msgstr ""

# a59b0992388b4091be9732a75d114ad5
#: ../Doc/library/miniaeframe.rst:25
msgid ""
"A class that handles AppleEvent dispatch. Your application should subclass "
"this class together with either :class:`MiniApplication` or :class:"
"`FrameWork.Application`. Your :meth:`__init__` method should call the :meth:"
"`__init__` method for both classes."
msgstr ""

# 86215f1613154ee0af98142872d41065
#: ../Doc/library/miniaeframe.rst:33
msgid ""
"A class that is more or less compatible with :class:`FrameWork.Application` "
"but with less functionality. Its event loop supports the apple menu, command-"
"dot and AppleEvents; other events are passed on to the Python interpreter "
"and/or Sioux. Useful if your application wants to use :class:`AEServer` but "
"does not provide its own windows, etc."
msgstr ""

# 1e2b00cb85434c3d9688499dfbb4549b
#: ../Doc/library/miniaeframe.rst:43
msgid "AEServer Objects"
msgstr ""

# 72df77b67adf4fd9bbfa1e1dabcbd04a
#: ../Doc/library/miniaeframe.rst:48
msgid ""
"Installs an AppleEvent handler. *classe* and *type* are the four-character "
"OSA Class and Type designators, ``'****'`` wildcards are allowed. When a "
"matching AppleEvent is received the parameters are decoded and your callback "
"is invoked."
msgstr ""

# b5cd9fb5ea58418da3fd9f98e38d5189
#: ../Doc/library/miniaeframe.rst:55
msgid ""
"Your callback is called with the OSA Direct Object as first positional "
"parameter. The other parameters are passed as keyword arguments, with the 4-"
"character designator as name. Three extra keyword parameters are passed: "
"``_class`` and ``_type`` are the Class and Type designators and "
"``_attributes`` is a dictionary with the AppleEvent attributes."
msgstr ""

# 5518cd5ae0f4423eaf777ca913ee6bc4
#: ../Doc/library/miniaeframe.rst:61
msgid ""
"The return value of your method is packed with :func:`aetools.packevent` and "
"sent as reply."
msgstr ""

# 27af2a399f114f1b99af9f57aa5e9751
#: ../Doc/library/miniaeframe.rst:64
msgid ""
"Note that there are some serious problems with the current design. "
"AppleEvents which have non-identifier 4-character designators for arguments "
"are not implementable, and it is not possible to return an error to the "
"originator. This will be addressed in a future release."
msgstr ""

#: ../Doc/library/misc.rst:6
msgid "Miscellaneous Services"
msgstr ""

#: ../Doc/library/misc.rst:8
msgid ""
"The modules described in this chapter provide miscellaneous services that "
"are available in all Python versions.  Here's an overview:"
msgstr ""

#: ../Doc/library/mm.rst:6
msgid "Multimedia Services"
msgstr ""

#: ../Doc/library/mm.rst:8
msgid ""
"The modules described in this chapter implement various algorithms or "
"interfaces that are mainly useful for multimedia applications.  They are "
"available at the discretion of the installation.  Here's an overview:"
msgstr ""

#: ../Doc/library/mmap.rst:3
msgid ":mod:`mmap` --- Memory-mapped file support"
msgstr ""

# 0587a2b14f0442c58de8f4f8321fb4c8
#: ../Doc/library/mmap.rst:9
msgid ""
"Memory-mapped file objects behave like both strings and like file objects. "
"Unlike normal string objects, however, these are mutable.  You can use mmap "
"objects in most places where strings are expected; for example, you can use "
"the :mod:`re` module to search through a memory-mapped file.  Since they're "
"mutable, you can change a single character by doing ``obj[index] = 'a'``, or "
"change a substring by assigning to a slice: ``obj[i1:i2] = '...'``.  You can "
"also read and write data starting at the current file position, and :meth:"
"`seek` through the file to different positions."
msgstr ""

#: ../Doc/library/mmap.rst:18
msgid ""
"A memory-mapped file is created by the :class:`mmap` constructor, which is "
"different on Unix and on Windows.  In either case you must provide a file "
"descriptor for a file opened for update. If you wish to map an existing "
"Python file object, use its :meth:`fileno` method to obtain the correct "
"value for the *fileno* parameter.  Otherwise, you can open the file using "
"the :func:`os.open` function, which returns a file descriptor directly (the "
"file still needs to be closed when done)."
msgstr ""

# 3fd3b557ec5e4ff791350a8098923b28
#: ../Doc/library/mmap.rst:27
msgid ""
"If you want to create a memory-mapping for a writable, buffered file, you "
"should :func:`~io.IOBase.flush` the file first.  This is necessary to ensure "
"that local modifications to the buffers are actually available to the "
"mapping."
msgstr ""

#: ../Doc/library/mmap.rst:32
msgid ""
"For both the Unix and Windows versions of the constructor, *access* may be "
"specified as an optional keyword parameter. *access* accepts one of three "
"values: :const:`ACCESS_READ`, :const:`ACCESS_WRITE`, or :const:`ACCESS_COPY` "
"to specify read-only, write-through or copy-on-write memory respectively. "
"*access* can be used on both Unix and Windows.  If *access* is not "
"specified, Windows mmap returns a write-through mapping.  The initial memory "
"values for all three access types are taken from the specified file.  "
"Assignment to an :const:`ACCESS_READ` memory map raises a :exc:`TypeError` "
"exception. Assignment to an :const:`ACCESS_WRITE` memory map affects both "
"memory and the underlying file.  Assignment to an :const:`ACCESS_COPY` "
"memory map affects memory but does not update the underlying file."
msgstr ""

#: ../Doc/library/mmap.rst:54
msgid ""
"**(Windows version)** Maps *length* bytes from the file specified by the "
"file handle *fileno*, and creates a mmap object.  If *length* is larger than "
"the current size of the file, the file is extended to contain *length* "
"bytes.  If *length* is ``0``, the maximum length of the map is the current "
"size of the file, except that if the file is empty Windows raises an "
"exception (you cannot create an empty mapping on Windows)."
msgstr ""

#: ../Doc/library/mmap.rst:61
msgid ""
"*tagname*, if specified and not ``None``, is a string giving a tag name for "
"the mapping.  Windows allows you to have many different mappings against the "
"same file.  If you specify the name of an existing tag, that tag is opened, "
"otherwise a new tag of this name is created.  If this parameter is omitted "
"or ``None``, the mapping is created without a name.  Avoiding the use of the "
"tag parameter will assist in keeping your code portable between Unix and "
"Windows."
msgstr ""

#: ../Doc/library/mmap.rst:69
msgid ""
"*offset* may be specified as a non-negative integer offset. mmap references "
"will be relative to the offset from the beginning of the file. *offset* "
"defaults to 0.  *offset* must be a multiple of the ALLOCATIONGRANULARITY."
msgstr ""

#: ../Doc/library/mmap.rst:77
msgid ""
"**(Unix version)** Maps *length* bytes from the file specified by the file "
"descriptor *fileno*, and returns a mmap object.  If *length* is ``0``, the "
"maximum length of the map will be the current size of the file when :class:"
"`mmap` is called."
msgstr ""

#: ../Doc/library/mmap.rst:82
msgid ""
"*flags* specifies the nature of the mapping. :const:`MAP_PRIVATE` creates a "
"private copy-on-write mapping, so changes to the contents of the mmap object "
"will be private to this process, and :const:`MAP_SHARED` creates a mapping "
"that's shared with all other processes mapping the same areas of the file.  "
"The default value is :const:`MAP_SHARED`."
msgstr ""

#: ../Doc/library/mmap.rst:88
msgid ""
"*prot*, if specified, gives the desired memory protection; the two most "
"useful values are :const:`PROT_READ` and :const:`PROT_WRITE`, to specify "
"that the pages may be read or written.  *prot* defaults to :const:`PROT_READ "
"\\| PROT_WRITE`."
msgstr ""

#: ../Doc/library/mmap.rst:93
msgid ""
"*access* may be specified in lieu of *flags* and *prot* as an optional "
"keyword parameter.  It is an error to specify both *flags*, *prot* and "
"*access*.  See the description of *access* above for information on how to "
"use this parameter."
msgstr ""

#: ../Doc/library/mmap.rst:98
msgid ""
"*offset* may be specified as a non-negative integer offset. mmap references "
"will be relative to the offset from the beginning of the file. *offset* "
"defaults to 0.  *offset* must be a multiple of the PAGESIZE or "
"ALLOCATIONGRANULARITY."
msgstr ""

# 8165d1ee1e9e471d8290e06c1176ec0d
#: ../Doc/library/mmap.rst:103
msgid ""
"To ensure validity of the created memory mapping the file specified by the "
"descriptor *fileno* is internally automatically synchronized with physical "
"backing store on Mac OS X and OpenVMS."
msgstr ""

#: ../Doc/library/mmap.rst:107
msgid "This example shows a simple way of using :class:`mmap`::"
msgstr ""

#: ../Doc/library/mmap.rst:132
msgid ""
"The next example demonstrates how to create an anonymous map and exchange "
"data between the parent and child processes::"
msgstr ""

#: ../Doc/library/mmap.rst:150
msgid "Memory-mapped file objects support the following methods:"
msgstr ""

#: ../Doc/library/mmap.rst:155
msgid ""
"Close the file.  Subsequent calls to other methods of the object will result "
"in an exception being raised."
msgstr ""

# 9bc54404a17b45f9909006b2ed6b9b31
#: ../Doc/library/mmap.rst:161
msgid ""
"Returns the lowest index in the object where the substring *string* is "
"found, such that *string* is contained in the range [*start*, *end*]. "
"Optional arguments *start* and *end* are interpreted as in slice notation. "
"Returns ``-1`` on failure."
msgstr ""

#: ../Doc/library/mmap.rst:169
msgid ""
"Flushes changes made to the in-memory copy of a file back to disk. Without "
"use of this call there is no guarantee that changes are written back before "
"the object is destroyed.  If *offset* and *size* are specified, only changes "
"to the given range of bytes will be flushed to disk; otherwise, the whole "
"extent of the mapping is flushed."
msgstr ""

#: ../Doc/library/mmap.rst:175
msgid ""
"**(Windows version)** A nonzero value returned indicates success; zero "
"indicates failure."
msgstr ""

#: ../Doc/library/mmap.rst:178
msgid ""
"**(Unix version)** A zero value is returned to indicate success. An "
"exception is raised when the call failed."
msgstr ""

# c412d1ceb98e435ab4d20d86c1846f14
#: ../Doc/library/mmap.rst:184
msgid ""
"Copy the *count* bytes starting at offset *src* to the destination index "
"*dest*.  If the mmap was created with :const:`ACCESS_READ`, then calls to "
"move will raise a :exc:`TypeError` exception."
msgstr ""

# fb7cbf48389746f8bfb71750c7c4fe28
#: ../Doc/library/mmap.rst:191
msgid ""
"Return a string containing up to *num* bytes starting from the current file "
"position; the file position is updated to point after the bytes that were "
"returned."
msgstr ""

# 50a850b2203c4a108e0e9b89df6d96c4
#: ../Doc/library/mmap.rst:198
msgid ""
"Returns a string of length 1 containing the character at the current file "
"position, and advances the file position by 1."
msgstr ""

#: ../Doc/library/mmap.rst:204
msgid ""
"Returns a single line, starting at the current file position and up to the "
"next newline."
msgstr ""

# 4f83bc852c32408783475dc72ed090b4
#: ../Doc/library/mmap.rst:210
msgid ""
"Resizes the map and the underlying file, if any. If the mmap was created "
"with :const:`ACCESS_READ` or :const:`ACCESS_COPY`, resizing the map will "
"raise a :exc:`TypeError` exception."
msgstr ""

# 0091fe5cb624486c90bc40b5cd021934
#: ../Doc/library/mmap.rst:217
msgid ""
"Returns the highest index in the object where the substring *string* is "
"found, such that *string* is contained in the range [*start*, *end*]. "
"Optional arguments *start* and *end* are interpreted as in slice notation. "
"Returns ``-1`` on failure."
msgstr ""

#: ../Doc/library/mmap.rst:225
msgid ""
"Set the file's current position.  *whence* argument is optional and defaults "
"to ``os.SEEK_SET`` or ``0`` (absolute file positioning); other values are "
"``os.SEEK_CUR`` or ``1`` (seek relative to the current position) and ``os."
"SEEK_END`` or ``2`` (seek relative to the file's end)."
msgstr ""

#: ../Doc/library/mmap.rst:233
msgid ""
"Return the length of the file, which can be larger than the size of the "
"memory-mapped area."
msgstr ""

#: ../Doc/library/mmap.rst:239
msgid "Returns the current position of the file pointer."
msgstr ""

# 87a116e08ecd43b7add4001fbdbb43fc
#: ../Doc/library/mmap.rst:244
msgid ""
"Write the bytes in *string* into memory at the current position of the file "
"pointer; the file position is updated to point after the bytes that were "
"written. If the mmap was created with :const:`ACCESS_READ`, then writing to "
"it will raise a :exc:`TypeError` exception."
msgstr ""

# 5eb32ea510de4fd5a08a0af2a70dd62f
#: ../Doc/library/mmap.rst:252
msgid ""
"Write the single-character string *byte* into memory at the current position "
"of the file pointer; the file position is advanced by ``1``. If the mmap was "
"created with :const:`ACCESS_READ`, then writing to it will raise a :exc:"
"`TypeError` exception."
msgstr ""

#: ../Doc/library/modulefinder.rst:2
msgid ":mod:`modulefinder` --- Find modules used by a script"
msgstr ""

# 4a659538a7aa4bbd90e65460bd754823
#: ../Doc/library/modulefinder.rst:11
msgid "**Source code:** :source:`Lib/modulefinder.py`"
msgstr ""

#: ../Doc/library/modulefinder.rst:15
msgid ""
"This module provides a :class:`ModuleFinder` class that can be used to "
"determine the set of modules imported by a script. ``modulefinder.py`` can "
"also be run as a script, giving the filename of a Python script as its "
"argument, after which a report of the imported modules will be printed."
msgstr ""

#: ../Doc/library/modulefinder.rst:23
msgid ""
"Record that the package named *pkg_name* can be found in the specified "
"*path*."
msgstr ""

#: ../Doc/library/modulefinder.rst:28
msgid ""
"Allows specifying that the module named *oldname* is in fact the package "
"named *newname*.  The most common usage would be  to handle how the :mod:"
"`_xmlplus` package replaces the :mod:`xml` package."
msgstr ""

# 80d6646112c54a1bb5f0103ee0805330
#: ../Doc/library/modulefinder.rst:35
msgid ""
"This class provides :meth:`run_script` and :meth:`report` methods to "
"determine the set of modules imported by a script. *path* can be a list of "
"directories to search for modules; if not specified, ``sys.path`` is used.  "
"*debug* sets the debugging level; higher values make the class print  "
"debugging messages about what it's doing. *excludes* is a list of module "
"names to exclude from the analysis. *replace_paths* is a list of ``(oldpath, "
"newpath)`` tuples that will be replaced in module paths."
msgstr ""

#: ../Doc/library/modulefinder.rst:46
msgid ""
"Print a report to standard output that lists the modules imported by the "
"script and their paths, as well as modules that are missing or seem to be "
"missing."
msgstr ""

#: ../Doc/library/modulefinder.rst:52
msgid ""
"Analyze the contents of the *pathname* file, which must contain Python code."
msgstr ""

#: ../Doc/library/modulefinder.rst:57
msgid ""
"A dictionary mapping module names to modules. See :ref:`modulefinder-example`"
msgstr ""

#: ../Doc/library/modulefinder.rst:64
msgid "Example usage of :class:`ModuleFinder`"
msgstr ""

#: ../Doc/library/modulefinder.rst:66
msgid "The script that is going to get analyzed later on (bacon.py)::"
msgstr ""

#: ../Doc/library/modulefinder.rst:81
msgid "The script that will output the report of bacon.py::"
msgstr ""

#: ../Doc/library/modulefinder.rst:97
msgid "Sample output (may vary depending on the architecture)::"
msgstr ""

#: ../Doc/library/modules.rst:6
msgid "Importing Modules"
msgstr ""

#: ../Doc/library/modules.rst:8
msgid ""
"The modules described in this chapter provide new ways to import other "
"Python modules and hooks for customizing the import process."
msgstr ""

#: ../Doc/library/msilib.rst:2
msgid ":mod:`msilib` --- Read and write Microsoft Installer files"
msgstr ""

#: ../Doc/library/msilib.rst:15
msgid ""
"The :mod:`msilib` supports the creation of Microsoft Installer (``.msi``) "
"files. Because these files often contain an embedded \"cabinet\" file (``."
"cab``), it also exposes an API to create CAB files. Support for reading ``."
"cab`` files is currently not implemented; read support for the ``.msi`` "
"database is possible."
msgstr ""

#: ../Doc/library/msilib.rst:20
msgid ""
"This package aims to provide complete access to all tables in an ``.msi`` "
"file, therefore, it is a fairly low-level API. Two primary applications of "
"this package are the :mod:`distutils` command ``bdist_msi``, and the "
"creation of Python installer package itself (although that currently uses a "
"different version of ``msilib``)."
msgstr ""

#: ../Doc/library/msilib.rst:26
msgid ""
"The package contents can be roughly split into four parts: low-level CAB "
"routines, low-level MSI routines, higher-level MSI routines, and standard "
"table structures."
msgstr ""

#: ../Doc/library/msilib.rst:33
msgid ""
"Create a new CAB file named *cabname*. *files* must be a list of tuples, "
"each containing the name of the file on disk, and the name of the file "
"inside the CAB file."
msgstr ""

#: ../Doc/library/msilib.rst:37
msgid ""
"The files are added to the CAB file in the order they appear in the list. "
"All files are added into a single CAB file, using the MSZIP compression "
"algorithm."
msgstr ""

#: ../Doc/library/msilib.rst:40
msgid ""
"Callbacks to Python for the various steps of MSI creation are currently not "
"exposed."
msgstr ""

# 7e96f72f110f4de4965d6c80078c97aa
#: ../Doc/library/msilib.rst:46
msgid ""
"Return the string representation of a new unique identifier. This wraps the "
"Windows API functions :c:func:`UuidCreate` and :c:func:`UuidToString`."
msgstr ""

#: ../Doc/library/msilib.rst:52
msgid ""
"Return a new database object by calling MsiOpenDatabase.   *path* is the "
"file name of the MSI file; *persist* can be one of the constants "
"``MSIDBOPEN_CREATEDIRECT``, ``MSIDBOPEN_CREATE``, ``MSIDBOPEN_DIRECT``, "
"``MSIDBOPEN_READONLY``, or ``MSIDBOPEN_TRANSACT``, and may include the flag "
"``MSIDBOPEN_PATCHFILE``. See the Microsoft documentation for the meaning of "
"these flags; depending on the flags, an existing database is opened, or a "
"new one created."
msgstr ""

# fa4a9297c8094202a926c7686541b7d7
#: ../Doc/library/msilib.rst:63
msgid ""
"Return a new record object by calling :c:func:`MSICreateRecord`. *count* is "
"the number of fields of the record."
msgstr ""

#: ../Doc/library/msilib.rst:69
msgid ""
"Create and return a new database *name*, initialize it with *schema*, and "
"set the properties *ProductName*, *ProductCode*, *ProductVersion*, and "
"*Manufacturer*."
msgstr ""

#: ../Doc/library/msilib.rst:73
msgid ""
"*schema* must be a module object containing ``tables`` and "
"``_Validation_records`` attributes; typically, :mod:`msilib.schema` should "
"be used."
msgstr ""

#: ../Doc/library/msilib.rst:77
msgid ""
"The database will contain just the schema and the validation records when "
"this function returns."
msgstr ""

#: ../Doc/library/msilib.rst:83
msgid "Add all *records* to the table named *table* in *database*."
msgstr ""

#: ../Doc/library/msilib.rst:85
msgid ""
"The *table* argument must be one of the predefined tables in the MSI schema, "
"e.g. ``'Feature'``, ``'File'``, ``'Component'``, ``'Dialog'``, "
"``'Control'``, etc."
msgstr ""

#: ../Doc/library/msilib.rst:89
msgid ""
"*records* should be a list of tuples, each one containing all fields of a "
"record according to the schema of the table.  For optional fields, ``None`` "
"can be passed."
msgstr ""

#: ../Doc/library/msilib.rst:93
msgid ""
"Field values can be int or long numbers, strings, or instances of the Binary "
"class."
msgstr ""

#: ../Doc/library/msilib.rst:99
msgid ""
"Represents entries in the Binary table; inserting such an object using :func:"
"`add_data` reads the file named *filename* into the table."
msgstr ""

#: ../Doc/library/msilib.rst:105
msgid ""
"Add all table content from *module* to *database*. *module* must contain an "
"attribute *tables* listing all tables for which content should be added, and "
"one attribute per table that has the actual content."
msgstr ""

#: ../Doc/library/msilib.rst:109
msgid "This is typically used to install the sequence tables."
msgstr ""

#: ../Doc/library/msilib.rst:114
msgid ""
"Add the file *path* into the ``_Stream`` table of *database*, with the "
"stream name *name*."
msgstr ""

#: ../Doc/library/msilib.rst:120
msgid ""
"Return a new UUID, in the format that MSI typically requires (i.e. in curly "
"braces, and with all hexdigits in upper-case)."
msgstr ""

#: ../Doc/library/msilib.rst:126
msgid ""
"`FCICreateFile <http://msdn.microsoft.com/library/default.asp?url=/library/"
"en-us/devnotes/winprog/fcicreate.asp>`_ `UuidCreate <http://msdn.microsoft."
"com/library/default.asp?url=/library/en-us/rpc/rpc/uuidcreate.asp>`_ "
"`UuidToString <http://msdn.microsoft.com/library/default.asp?url=/library/en-"
"us/rpc/rpc/uuidtostring.asp>`_"
msgstr ""

# 5e6873f67ac74432832b84db349f3c4f
#: ../Doc/library/msilib.rst:138
msgid ""
"Return a view object, by calling :c:func:`MSIDatabaseOpenView`. *sql* is the "
"SQL statement to execute."
msgstr ""

# 5f729865439243119a1cb20e184fde18
#: ../Doc/library/msilib.rst:144
msgid ""
"Commit the changes pending in the current transaction, by calling :c:func:"
"`MSIDatabaseCommit`."
msgstr ""

# d79f321730ea4f07970a52dd9ea1fc1c
#: ../Doc/library/msilib.rst:150
msgid ""
"Return a new summary information object, by calling :c:func:"
"`MsiGetSummaryInformation`.  *count* is the maximum number of updated values."
msgstr ""

#: ../Doc/library/msilib.rst:157
msgid ""
"`MSIDatabaseOpenView <http://msdn.microsoft.com/library/default.asp?url=/"
"library/en-us/msi/setup/msidatabaseopenview.asp>`_ `MSIDatabaseCommit "
"<http://msdn.microsoft.com/library/default.asp?url=/library/en-us/msi/setup/"
"msidatabasecommit.asp>`_ `MSIGetSummaryInformation <http://msdn.microsoft."
"com/library/default.asp?url=/library/en-us/msi/setup/"
"msigetsummaryinformation.asp>`_"
msgstr ""

#: ../Doc/library/msilib.rst:164
msgid "View Objects"
msgstr ""

# f2fb8b15e2e644ca87c361e1ec25de3e
#: ../Doc/library/msilib.rst:169
msgid ""
"Execute the SQL query of the view, through :c:func:`MSIViewExecute`. If "
"*params* is not ``None``, it is a record describing actual values of the "
"parameter tokens in the query."
msgstr ""

# d65be5610e374a328ab6fb9792f69b09
#: ../Doc/library/msilib.rst:176
msgid ""
"Return a record describing the columns of the view, through calling :c:func:"
"`MsiViewGetColumnInfo`. *kind* can be either ``MSICOLINFO_NAMES`` or "
"``MSICOLINFO_TYPES``."
msgstr ""

# 7be64f5435704bb49dd573599d47d5eb
#: ../Doc/library/msilib.rst:183
msgid ""
"Return a result record of the query, through calling :c:func:`MsiViewFetch`."
msgstr ""

# fc1e5126033340e3be93789fa39c8c31
#: ../Doc/library/msilib.rst:188
msgid ""
"Modify the view, by calling :c:func:`MsiViewModify`. *kind* can be one of "
"``MSIMODIFY_SEEK``, ``MSIMODIFY_REFRESH``, ``MSIMODIFY_INSERT``, "
"``MSIMODIFY_UPDATE``, ``MSIMODIFY_ASSIGN``, ``MSIMODIFY_REPLACE``, "
"``MSIMODIFY_MERGE``, ``MSIMODIFY_DELETE``, ``MSIMODIFY_INSERT_TEMPORARY``, "
"``MSIMODIFY_VALIDATE``, ``MSIMODIFY_VALIDATE_NEW``, "
"``MSIMODIFY_VALIDATE_FIELD``, or ``MSIMODIFY_VALIDATE_DELETE``."
msgstr ""

#: ../Doc/library/msilib.rst:195
msgid "*data* must be a record describing the new data."
msgstr ""

# 0187d841a9ba42ac8f7584c8042630ec
#: ../Doc/library/msilib.rst:200
msgid "Close the view, through :c:func:`MsiViewClose`."
msgstr ""

#: ../Doc/library/msilib.rst:205
msgid ""
"`MsiViewExecute <http://msdn.microsoft.com/library/default.asp?url=/library/"
"en-us/msi/setup/msiviewexecute.asp>`_ `MSIViewGetColumnInfo <http://msdn."
"microsoft.com/library/default.asp?url=/library/en-us/msi/setup/"
"msiviewgetcolumninfo.asp>`_ `MsiViewFetch <http://msdn.microsoft.com/library/"
"default.asp?url=/library/en-us/msi/setup/msiviewfetch.asp>`_ `MsiViewModify "
"<http://msdn.microsoft.com/library/default.asp?url=/library/en-us/msi/setup/"
"msiviewmodify.asp>`_ `MsiViewClose <http://msdn.microsoft.com/library/"
"default.asp?url=/library/en-us/msi/setup/msiviewclose.asp>`_"
msgstr ""

#: ../Doc/library/msilib.rst:214
msgid "Summary Information Objects"
msgstr ""

# daa3f823cec1421f84bddb3a6ee54f3e
#: ../Doc/library/msilib.rst:219
msgid ""
"Return a property of the summary, through :c:func:"
"`MsiSummaryInfoGetProperty`. *field* is the name of the property, and can be "
"one of the constants ``PID_CODEPAGE``, ``PID_TITLE``, ``PID_SUBJECT``, "
"``PID_AUTHOR``, ``PID_KEYWORDS``, ``PID_COMMENTS``, ``PID_TEMPLATE``, "
"``PID_LASTAUTHOR``, ``PID_REVNUMBER``, ``PID_LASTPRINTED``, "
"``PID_CREATE_DTM``, ``PID_LASTSAVE_DTM``, ``PID_PAGECOUNT``, "
"``PID_WORDCOUNT``, ``PID_CHARCOUNT``, ``PID_APPNAME``, or ``PID_SECURITY``."
msgstr ""

# d73ed639c44141a1ad9a25dab793a612
#: ../Doc/library/msilib.rst:230
msgid ""
"Return the number of summary properties, through :c:func:"
"`MsiSummaryInfoGetPropertyCount`."
msgstr ""

# 2346e4462f92447a8dd7c1da7bea8bd3
#: ../Doc/library/msilib.rst:236
msgid ""
"Set a property through :c:func:`MsiSummaryInfoSetProperty`. *field* can have "
"the same values as in :meth:`GetProperty`, *value* is the new value of the "
"property. Possible value types are integer and string."
msgstr ""

# 192c9a0e94ed4e41abf1de3f0b4281ff
#: ../Doc/library/msilib.rst:243
msgid ""
"Write the modified properties to the summary information stream, using :c:"
"func:`MsiSummaryInfoPersist`."
msgstr ""

#: ../Doc/library/msilib.rst:249
msgid ""
"`MsiSummaryInfoGetProperty <http://msdn.microsoft.com/library/default.asp?"
"url=/library/en-us/msi/setup/msisummaryinfogetproperty.asp>`_ "
"`MsiSummaryInfoGetPropertyCount <http://msdn.microsoft.com/library/default."
"asp?url=/library/en-us/msi/setup/msisummaryinfogetpropertycount.asp>`_ "
"`MsiSummaryInfoSetProperty <http://msdn.microsoft.com/library/default.asp?"
"url=/library/en-us/msi/setup/msisummaryinfosetproperty.asp>`_ "
"`MsiSummaryInfoPersist <http://msdn.microsoft.com/library/default.asp?url=/"
"library/en-us/msi/setup/msisummaryinfopersist.asp>`_"
msgstr ""

#: ../Doc/library/msilib.rst:257
msgid "Record Objects"
msgstr ""

# 9b0b71e04e774ad58eb300829d0442b8
#: ../Doc/library/msilib.rst:262
msgid ""
"Return the number of fields of the record, through :c:func:"
"`MsiRecordGetFieldCount`."
msgstr ""

#: ../Doc/library/msilib.rst:268
msgid ""
"Return the value of *field* as an integer where possible.  *field* must be "
"an integer."
msgstr ""

#: ../Doc/library/msilib.rst:274
msgid ""
"Return the value of *field* as a string where possible.  *field* must be an "
"integer."
msgstr ""

# 6f82289e12174329bcd13f315ba006c6
#: ../Doc/library/msilib.rst:280
msgid ""
"Set *field* to *value* through :c:func:`MsiRecordSetString`. *field* must be "
"an integer; *value* a string."
msgstr ""

# ccbfe543623d4acb96744171915eb847
#: ../Doc/library/msilib.rst:286
msgid ""
"Set *field* to the contents of the file named *value*, through :c:func:"
"`MsiRecordSetStream`. *field* must be an integer; *value* a string."
msgstr ""

# 52afc42f32534a0dbf08ae2c0b10ab90
#: ../Doc/library/msilib.rst:292
msgid ""
"Set *field* to *value* through :c:func:`MsiRecordSetInteger`. Both *field* "
"and *value* must be an integer."
msgstr ""

# 31dea04e3f484218975e179551234ebe
#: ../Doc/library/msilib.rst:298
msgid ""
"Set all fields of the record to 0, through :c:func:`MsiRecordClearData`."
msgstr ""

#: ../Doc/library/msilib.rst:303
msgid ""
"`MsiRecordGetFieldCount <http://msdn.microsoft.com/library/default.asp?url=/"
"library/en-us/msi/setup/msirecordgetfieldcount.asp>`_ `MsiRecordSetString "
"<http://msdn.microsoft.com/library/default.asp?url=/library/en-us/msi/setup/"
"msirecordsetstring.asp>`_ `MsiRecordSetStream <http://msdn.microsoft.com/"
"library/default.asp?url=/library/en-us/msi/setup/msirecordsetstream.asp>`_ "
"`MsiRecordSetInteger <http://msdn.microsoft.com/library/default.asp?url=/"
"library/en-us/msi/setup/msirecordsetinteger.asp>`_ `MsiRecordClear <http://"
"msdn.microsoft.com/library/default.asp?url=/library/en-us/msi/setup/"
"msirecordclear.asp>`_"
msgstr ""

#: ../Doc/library/msilib.rst:312
msgid "Errors"
msgstr ""

#: ../Doc/library/msilib.rst:314
msgid ""
"All wrappers around MSI functions raise :exc:`MsiError`; the string inside "
"the exception will contain more detail."
msgstr ""

#: ../Doc/library/msilib.rst:321
msgid "CAB Objects"
msgstr ""

#: ../Doc/library/msilib.rst:326
msgid ""
"The class :class:`CAB` represents a CAB file. During MSI construction, files "
"will be added simultaneously to the ``Files`` table, and to a CAB file. "
"Then, when all files have been added, the CAB file can be written, then "
"added to the MSI file."
msgstr ""

#: ../Doc/library/msilib.rst:331
msgid "*name* is the name of the CAB file in the MSI file."
msgstr ""

#: ../Doc/library/msilib.rst:336
msgid ""
"Add the file with the pathname *full* to the CAB file, under the name "
"*logical*.  If there is already a file named *logical*, a new file name is "
"created."
msgstr ""

#: ../Doc/library/msilib.rst:340
msgid ""
"Return the index of the file in the CAB file, and the new name of the file "
"inside the CAB file."
msgstr ""

#: ../Doc/library/msilib.rst:346
msgid ""
"Generate a CAB file, add it as a stream to the MSI file, put it into the "
"``Media`` table, and remove the generated file from the disk."
msgstr ""

#: ../Doc/library/msilib.rst:353
msgid "Directory Objects"
msgstr ""

#: ../Doc/library/msilib.rst:358
msgid ""
"Create a new directory in the Directory table. There is a current component "
"at each point in time for the directory, which is either explicitly created "
"through :meth:`start_component`, or implicitly when files are added for the "
"first time. Files are added into the current component, and into the cab "
"file.  To create a directory, a base directory object needs to be specified "
"(can be ``None``), the path to the physical directory, and a logical "
"directory name.  *default* specifies the DefaultDir slot in the directory "
"table. *componentflags* specifies the default flags that new components get."
msgstr ""

#: ../Doc/library/msilib.rst:370
msgid ""
"Add an entry to the Component table, and make this component the current "
"component for this directory. If no component name is given, the directory "
"name is used. If no *feature* is given, the current feature is used. If no "
"*flags* are given, the directory's default flags are used. If no *keyfile* "
"is given, the KeyPath is left null in the Component table."
msgstr ""

#: ../Doc/library/msilib.rst:379
msgid ""
"Add a file to the current component of the directory, starting a new one if "
"there is no current component. By default, the file name in the source and "
"the file table will be identical. If the *src* file is specified, it is "
"interpreted relative to the current directory. Optionally, a *version* and a "
"*language* can be specified for the entry in the File table."
msgstr ""

#: ../Doc/library/msilib.rst:388
msgid ""
"Add a list of files to the current component as specified in the glob "
"pattern.  Individual files can be excluded in the *exclude* list."
msgstr ""

#: ../Doc/library/msilib.rst:394
msgid "Remove ``.pyc``/``.pyo`` files on uninstall."
msgstr ""

#: ../Doc/library/msilib.rst:399
msgid ""
"`Directory Table <http://msdn.microsoft.com/library/default.asp?url=/library/"
"en-us/msi/setup/directory_table.asp>`_ `File Table <http://msdn.microsoft."
"com/library/default.asp?url=/library/en-us/msi/setup/file_table.asp>`_ "
"`Component Table <http://msdn.microsoft.com/library/default.asp?url=/library/"
"en-us/msi/setup/component_table.asp>`_ `FeatureComponents Table <http://msdn."
"microsoft.com/library/default.asp?url=/library/en-us/msi/setup/"
"featurecomponents_table.asp>`_"
msgstr ""

#: ../Doc/library/msilib.rst:407 ../Doc/library/turtle.rst:2177
msgid "Features"
msgstr ""

#: ../Doc/library/msilib.rst:412
msgid ""
"Add a new record to the ``Feature`` table, using the values *id*, *parent."
"id*, *title*, *desc*, *display*, *level*, *directory*, and *attributes*. The "
"resulting feature object can be passed to the :meth:`start_component` method "
"of :class:`Directory`."
msgstr ""

#: ../Doc/library/msilib.rst:420
msgid ""
"Make this feature the current feature of :mod:`msilib`. New components are "
"automatically added to the default feature, unless a feature is explicitly "
"specified."
msgstr ""

#: ../Doc/library/msilib.rst:427
msgid ""
"`Feature Table <http://msdn.microsoft.com/library/default.asp?url=/library/"
"en-us/msi/setup/feature_table.asp>`_"
msgstr ""

#: ../Doc/library/msilib.rst:432
msgid "GUI classes"
msgstr ""

#: ../Doc/library/msilib.rst:434
msgid ""
":mod:`msilib` provides several classes that wrap the GUI tables in an MSI "
"database. However, no standard user interface is provided; use :mod:"
"`bdist_msi` to create MSI files with a user-interface for installing Python "
"packages."
msgstr ""

#: ../Doc/library/msilib.rst:441
msgid ""
"Base class of the dialog controls. *dlg* is the dialog object the control "
"belongs to, and *name* is the control's name."
msgstr ""

#: ../Doc/library/msilib.rst:447
msgid "Make an entry into the ``ControlEvent`` table for this control."
msgstr ""

#: ../Doc/library/msilib.rst:452
msgid "Make an entry into the ``EventMapping`` table for this control."
msgstr ""

#: ../Doc/library/msilib.rst:457
msgid "Make an entry into the ``ControlCondition`` table for this control."
msgstr ""

#: ../Doc/library/msilib.rst:462
msgid ""
"Create a radio button control named *name*. *property* is the installer "
"property that gets set when a radio button is selected."
msgstr ""

# 11608f9a8efb47cf872c9f109df77399
#: ../Doc/library/msilib.rst:468
msgid ""
"Add a radio button named *name* to the group, at the coordinates *x*, *y*, "
"*width*, *height*, and with the label *text*. If *value* is omitted, it "
"defaults to *name*."
msgstr ""

#: ../Doc/library/msilib.rst:475
msgid ""
"Return a new :class:`Dialog` object. An entry in the ``Dialog`` table is "
"made, with the specified coordinates, dialog attributes, title, name of the "
"first, default, and cancel controls."
msgstr ""

#: ../Doc/library/msilib.rst:482
msgid ""
"Return a new :class:`Control` object. An entry in the ``Control`` table is "
"made with the specified parameters."
msgstr ""

#: ../Doc/library/msilib.rst:485
msgid ""
"This is a generic method; for specific types, specialized methods are "
"provided."
msgstr ""

#: ../Doc/library/msilib.rst:491
msgid "Add and return a ``Text`` control."
msgstr ""

#: ../Doc/library/msilib.rst:496
msgid "Add and return a ``Bitmap`` control."
msgstr ""

#: ../Doc/library/msilib.rst:501
msgid "Add and return a ``Line`` control."
msgstr ""

#: ../Doc/library/msilib.rst:506
msgid "Add and return a ``PushButton`` control."
msgstr ""

#: ../Doc/library/msilib.rst:511
msgid "Add and return a ``RadioButtonGroup`` control."
msgstr ""

#: ../Doc/library/msilib.rst:516
msgid "Add and return a ``CheckBox`` control."
msgstr ""

#: ../Doc/library/msilib.rst:521
msgid ""
"`Dialog Table <http://msdn.microsoft.com/library/default.asp?url=/library/en-"
"us/msi/setup/dialog_table.asp>`_ `Control Table <http://msdn.microsoft.com/"
"library/default.asp?url=/library/en-us/msi/setup/control_table.asp>`_ "
"`Control Types <http://msdn.microsoft.com/library/default.asp?url=/library/"
"en-us/msi/setup/controls.asp>`_ `ControlCondition Table <http://msdn."
"microsoft.com/library/default.asp?url=/library/en-us/msi/setup/"
"controlcondition_table.asp>`_ `ControlEvent Table <http://msdn.microsoft.com/"
"library/default.asp?url=/library/en-us/msi/setup/controlevent_table.asp>`_ "
"`EventMapping Table <http://msdn.microsoft.com/library/default.asp?url=/"
"library/en-us/msi/setup/eventmapping_table.asp>`_ `RadioButton Table <http://"
"msdn.microsoft.com/library/default.asp?url=/library/en-us/msi/setup/"
"radiobutton_table.asp>`_"
msgstr ""

#: ../Doc/library/msilib.rst:532
msgid "Precomputed tables"
msgstr ""

#: ../Doc/library/msilib.rst:534
msgid ""
":mod:`msilib` provides a few subpackages that contain only schema and table "
"definitions. Currently, these definitions are based on MSI version 2.0."
msgstr ""

#: ../Doc/library/msilib.rst:540
msgid ""
"This is the standard MSI schema for MSI 2.0, with the *tables* variable "
"providing a list of table definitions, and *_Validation_records* providing "
"the data for MSI validation."
msgstr ""

#: ../Doc/library/msilib.rst:547
msgid ""
"This module contains table contents for the standard sequence tables: "
"*AdminExecuteSequence*, *AdminUISequence*, *AdvtExecuteSequence*, "
"*InstallExecuteSequence*, and *InstallUISequence*."
msgstr ""

#: ../Doc/library/msilib.rst:554
msgid ""
"This module contains definitions for the UIText and ActionText tables, for "
"the standard installer actions."
msgstr ""

#: ../Doc/library/msvcrt.rst:3
msgid ":mod:`msvcrt` -- Useful routines from the MS VC++ runtime"
msgstr ""

#: ../Doc/library/msvcrt.rst:11
msgid ""
"These functions provide access to some useful capabilities on Windows "
"platforms. Some higher-level modules use these functions to build the  "
"Windows implementations of their services.  For example, the :mod:`getpass` "
"module uses this in the implementation of the :func:`getpass` function."
msgstr ""

#: ../Doc/library/msvcrt.rst:16
msgid ""
"Further documentation on these functions can be found in the Platform API "
"documentation."
msgstr ""

#: ../Doc/library/msvcrt.rst:19
msgid ""
"The module implements both the normal and wide char variants of the console "
"I/O api. The normal API deals only with ASCII characters and is of limited "
"use for internationalized applications. The wide char API should be used "
"where ever possible"
msgstr ""

#: ../Doc/library/msvcrt.rst:27
msgid "File Operations"
msgstr ""

#: ../Doc/library/msvcrt.rst:32
msgid ""
"Lock part of a file based on file descriptor *fd* from the C runtime.  "
"Raises :exc:`IOError` on failure.  The locked region of the file extends "
"from the current file position for *nbytes* bytes, and may continue beyond "
"the end of the file.  *mode* must be one of the :const:`LK_\\*` constants "
"listed below. Multiple regions in a file may be locked at the same time, but "
"may not overlap.  Adjacent regions are not merged; they must be unlocked "
"individually."
msgstr ""

#: ../Doc/library/msvcrt.rst:43
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, the program "
"immediately tries again after 1 second.  If, after 10 attempts, the bytes "
"cannot be locked, :exc:`IOError` is raised."
msgstr ""

#: ../Doc/library/msvcrt.rst:51
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, :exc:`IOError` is "
"raised."
msgstr ""

#: ../Doc/library/msvcrt.rst:57
msgid "Unlocks the specified bytes, which must have been previously locked."
msgstr ""

#: ../Doc/library/msvcrt.rst:62
msgid ""
"Set the line-end translation mode for the file descriptor *fd*. To set it to "
"text mode, *flags* should be :const:`os.O_TEXT`; for binary, it should be :"
"const:`os.O_BINARY`."
msgstr ""

#: ../Doc/library/msvcrt.rst:69
msgid ""
"Create a C runtime file descriptor from the file handle *handle*.  The "
"*flags* parameter should be a bitwise OR of :const:`os.O_APPEND`, :const:`os."
"O_RDONLY`, and :const:`os.O_TEXT`.  The returned file descriptor may be used "
"as a parameter to :func:`os.fdopen` to create a file object."
msgstr ""

#: ../Doc/library/msvcrt.rst:77
msgid ""
"Return the file handle for the file descriptor *fd*.  Raises :exc:`IOError` "
"if *fd* is not recognized."
msgstr ""

#: ../Doc/library/msvcrt.rst:84
msgid "Console I/O"
msgstr ""

#: ../Doc/library/msvcrt.rst:89
msgid "Return true if a keypress is waiting to be read."
msgstr ""

#: ../Doc/library/msvcrt.rst:94
msgid ""
"Read a keypress and return the resulting character.  Nothing is echoed to "
"the console.  This call will block if a keypress is not already available, "
"but will not wait for :kbd:`Enter` to be pressed. If the pressed key was a "
"special function key, this will return ``'\\000'`` or ``'\\xe0'``; the next "
"call will return the keycode.  The :kbd:`Control-C` keypress cannot be read "
"with this function."
msgstr ""

#: ../Doc/library/msvcrt.rst:104
msgid "Wide char variant of :func:`getch`, returning a Unicode value."
msgstr ""

#: ../Doc/library/msvcrt.rst:111
msgid ""
"Similar to :func:`getch`, but the keypress will be echoed if it  represents "
"a printable character."
msgstr ""

#: ../Doc/library/msvcrt.rst:117
msgid "Wide char variant of :func:`getche`, returning a Unicode value."
msgstr ""

#: ../Doc/library/msvcrt.rst:124
msgid "Print the character *char* to the console without buffering."
msgstr ""

#: ../Doc/library/msvcrt.rst:129
msgid "Wide char variant of :func:`putch`, accepting a Unicode value."
msgstr ""

#: ../Doc/library/msvcrt.rst:136
msgid ""
"Cause the character *char* to be \"pushed back\" into the console buffer; it "
"will be the next character read by :func:`getch` or :func:`getche`."
msgstr ""

#: ../Doc/library/msvcrt.rst:142
msgid "Wide char variant of :func:`ungetch`, accepting a Unicode value."
msgstr ""

#: ../Doc/library/msvcrt.rst:150
msgid "Other Functions"
msgstr ""

# 64ec74e0ec144ce89770d72089cf50ad
#: ../Doc/library/msvcrt.rst:155
msgid ""
"Force the :c:func:`malloc` heap to clean itself up and return unused blocks "
"to the operating system.  On failure, this raises :exc:`IOError`."
msgstr ""

# 38f99664741544ed9a570e5a4ffec5b1
#: ../Doc/library/multifile.rst:3
msgid ":mod:`multifile` --- Support for files containing distinct parts"
msgstr ""

# 3cd69fe992074c619d24cf730721a940
#: ../Doc/library/multifile.rst:15
msgid ""
"The :class:`MultiFile` object enables you to treat sections of a text file "
"as file-like input objects, with ``''`` being returned by :meth:`readline` "
"when a given delimiter pattern is encountered.  The defaults of this class "
"are designed to make it useful for parsing MIME multipart messages, but by "
"subclassing it and overriding methods  it can be easily adapted for more "
"general use."
msgstr ""

# e2d5d582ce084c598fdb7f8f3d52b600
#: ../Doc/library/multifile.rst:24
msgid ""
"Create a multi-file.  You must instantiate this class with an input object "
"argument for the :class:`MultiFile` instance to get lines from, such as a "
"file object returned by :func:`open`."
msgstr ""

# 21250ac49520492088350813a5e03bef
#: ../Doc/library/multifile.rst:28
msgid ""
":class:`MultiFile` only ever looks at the input object's :meth:`readline`, :"
"meth:`seek` and :meth:`tell` methods, and the latter two are only needed if "
"you want random access to the individual MIME parts. To use :class:"
"`MultiFile` on a non-seekable stream object, set the optional *seekable* "
"argument to false; this will prevent using the input object's :meth:`seek` "
"and :meth:`tell` methods."
msgstr ""

# 0ca1acbd240a467cb11481325b115a89
#: ../Doc/library/multifile.rst:34
msgid ""
"It will be useful to know that in :class:`MultiFile`'s view of the world, "
"text is composed of three kinds of lines: data, section-dividers, and end-"
"markers. MultiFile is designed to support parsing of messages that may have "
"multiple nested message parts, each with its own pattern for section-divider "
"and end-marker lines."
msgstr ""

# abdbd0a16e1146bfabaebc2681e05682
#: ../Doc/library/multifile.rst:44
msgid ""
"Comprehensive email handling package; supersedes the :mod:`multifile` module."
msgstr ""

# 67730c0003144931be084f03915dd229
#: ../Doc/library/multifile.rst:50
msgid "MultiFile Objects"
msgstr ""

# bb0a38d5b8294e8a9801f99e6a62cd3c
#: ../Doc/library/multifile.rst:52
msgid "A :class:`MultiFile` instance has the following methods:"
msgstr ""

# c1900f46ef2d46fd87941b3685df30dd
#: ../Doc/library/multifile.rst:57
msgid ""
"Read a line.  If the line is data (not a section-divider or end-marker or "
"real EOF) return it.  If the line matches the most-recently-stacked "
"boundary, return ``''`` and set ``self.last`` to 1 or 0 according as the "
"match is or is not an end-marker.  If the line matches any other stacked "
"boundary, raise an error.  On encountering end-of-file on the underlying "
"stream object, the method raises :exc:`Error` unless all boundaries have "
"been popped."
msgstr ""

# 9c4ae11860734d4e85c71c522dc54069
#: ../Doc/library/multifile.rst:67
msgid "Return all lines remaining in this part as a list of strings."
msgstr ""

# 2521f3a02ed54319b3ceef26dab32479
#: ../Doc/library/multifile.rst:72
msgid ""
"Read all lines, up to the next section.  Return them as a single (multiline) "
"string.  Note that this doesn't take a size argument!"
msgstr ""

# 3f5d2cef2a5d42f197ab3d223a920384
#: ../Doc/library/multifile.rst:78
msgid ""
"Seek.  Seek indices are relative to the start of the current section. The "
"*pos* and *whence* arguments are interpreted as for a file seek."
msgstr ""

# 9c23d50e0dfe4b81a7d94b96f771eb22
#: ../Doc/library/multifile.rst:84
msgid "Return the file position relative to the start of the current section."
msgstr ""

# f4a02dc754d9453d84f1a144ff213066
#: ../Doc/library/multifile.rst:89
msgid ""
"Skip lines to the next section (that is, read lines until a section-divider "
"or end-marker has been consumed).  Return true if there is such a section, "
"false if an end-marker is seen.  Re-enable the most-recently-pushed boundary."
msgstr ""

# 96a83eb4fa374938b8b3c0b7d1bf8e8f
#: ../Doc/library/multifile.rst:96
msgid ""
"Return true if *str* is data and false if it might be a section boundary.  "
"As written, it tests for a prefix other than ``'-``\\ ``-'`` at start of "
"line (which all MIME boundaries have) but it is declared so it can be "
"overridden in derived classes."
msgstr ""

# 53eee275a7894812aabcdfeed9d7539c
#: ../Doc/library/multifile.rst:101
msgid ""
"Note that this test is used intended as a fast guard for the real boundary "
"tests; if it always returns false it will merely slow processing, not cause "
"it to fail."
msgstr ""

# 6b4b400cd1fa4cedbf8f2547bf847f91
#: ../Doc/library/multifile.rst:108
msgid ""
"Push a boundary string.  When a decorated version of this boundary  is found "
"as an input line, it will be interpreted as a section-divider  or end-marker "
"(depending on the decoration, see :rfc:`2045`).  All subsequent reads will "
"return the empty string to indicate end-of-file, until a call to :meth:`pop` "
"removes the boundary a or :meth:`.next` call reenables it."
msgstr ""

# 14294cb8e08e45a38897a7f4270c46fc
#: ../Doc/library/multifile.rst:114
msgid ""
"It is possible to push more than one boundary.  Encountering the most-"
"recently-pushed boundary will return EOF; encountering any other boundary "
"will raise an error."
msgstr ""

# 6f50b3311a5a4cbf89eee63993085c94
#: ../Doc/library/multifile.rst:121
msgid ""
"Pop a section boundary.  This boundary will no longer be interpreted as EOF."
msgstr ""

# 3140e234ad974dbc8aa056bf719eec39
#: ../Doc/library/multifile.rst:126
msgid ""
"Turn a boundary into a section-divider line.  By default, this method "
"prepends ``'--'`` (which MIME section boundaries have) but it is declared so "
"it can be overridden in derived classes.  This method need not append LF or "
"CR-LF, as comparison with the result ignores trailing whitespace."
msgstr ""

# 2cc75494e81f46d7a785dcdc1f36f708
#: ../Doc/library/multifile.rst:134
msgid ""
"Turn a boundary string into an end-marker line.  By default, this method "
"prepends ``'--'`` and appends ``'--'`` (like a MIME-multipart end-of-message "
"marker) but it is declared so it can be overridden in derived classes.  This "
"method need not append LF or CR-LF, as comparison with the result ignores "
"trailing whitespace."
msgstr ""

# b6f609be8f7d4fabb616573123cf321b
#: ../Doc/library/multifile.rst:140
msgid ""
"Finally, :class:`MultiFile` instances have two public instance variables:"
msgstr ""

# 361743d63ce548a8a630c3ac9e2a87fd
#: ../Doc/library/multifile.rst:145
msgid "Nesting depth of the current part."
msgstr ""

# 3d3ab8ef3f0e4f5fae23f772acaf5c2e
#: ../Doc/library/multifile.rst:150
msgid "True if the last end-of-file was for an end-of-message marker."
msgstr ""

# 13da3a7892a9440f90851ed5d9b8fd3d
#: ../Doc/library/multifile.rst:156
msgid ":class:`MultiFile` Example"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2
msgid ":mod:`multiprocessing` --- Process-based \"threading\" interface"
msgstr ""

#: ../Doc/library/multiprocessing.rst:13
msgid ""
":mod:`multiprocessing` is a package that supports spawning processes using "
"an API similar to the :mod:`threading` module.  The :mod:`multiprocessing` "
"package offers both local and remote concurrency, effectively side-stepping "
"the :term:`Global Interpreter Lock` by using subprocesses instead of "
"threads.  Due to this, the :mod:`multiprocessing` module allows the "
"programmer to fully leverage multiple processors on a given machine.  It "
"runs on both Unix and Windows."
msgstr ""

#: ../Doc/library/multiprocessing.rst:23
msgid ""
"Some of this package's functionality requires a functioning shared semaphore "
"implementation on the host operating system. Without one, the :mod:"
"`multiprocessing.synchronize` module will be disabled, and attempts to "
"import it will result in an :exc:`ImportError`. See :issue:`3770` for "
"additional information."
msgstr ""

# 0c25b6848bb149219694ba3f6c2f5ea2
#: ../Doc/library/multiprocessing.rst:31
msgid ""
"Functionality within this package requires that the ``__main__`` module be "
"importable by the children. This is covered in :ref:`multiprocessing-"
"programming` however it is worth pointing out here. This means that some "
"examples, such as the :class:`multiprocessing.Pool` examples will not work "
"in the interactive interpreter. For example::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:53
msgid ""
"(If you try this it will actually output three full tracebacks interleaved "
"in a semi-random fashion, and then you may have to stop the master process "
"somehow.)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:59
msgid "The :class:`Process` class"
msgstr ""

#: ../Doc/library/multiprocessing.rst:61
msgid ""
"In :mod:`multiprocessing`, processes are spawned by creating a :class:"
"`Process` object and then calling its :meth:`~Process.start` method.  :class:"
"`Process` follows the API of :class:`threading.Thread`.  A trivial example "
"of a multiprocess program is ::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:76
msgid ""
"To show the individual process IDs involved, here is an expanded example::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:98
msgid ""
"For an explanation of why (on Windows) the ``if __name__ == '__main__'`` "
"part is necessary, see :ref:`multiprocessing-programming`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:104
msgid "Exchanging objects between processes"
msgstr ""

#: ../Doc/library/multiprocessing.rst:106
msgid ""
":mod:`multiprocessing` supports two types of communication channel between "
"processes:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:109
msgid "**Queues**"
msgstr ""

# 692928eacd7a4a91bdd47aa6374537b3
#: ../Doc/library/multiprocessing.rst:111
msgid ""
"The :class:`~multiprocessing.Queue` class is a near clone of :class:`Queue."
"Queue`.  For example::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:126
msgid "Queues are thread and process safe."
msgstr ""

#: ../Doc/library/multiprocessing.rst:128
msgid "**Pipes**"
msgstr ""

#: ../Doc/library/multiprocessing.rst:130
msgid ""
"The :func:`Pipe` function returns a pair of connection objects connected by "
"a pipe which by default is duplex (two-way).  For example::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:146
msgid ""
"The two connection objects returned by :func:`Pipe` represent the two ends "
"of the pipe.  Each connection object has :meth:`~Connection.send` and :meth:"
"`~Connection.recv` methods (among others).  Note that data in a pipe may "
"become corrupted if two processes (or threads) try to read from or write to "
"the *same* end of the pipe at the same time.  Of course there is no risk of "
"corruption from processes using different ends of the pipe at the same time."
msgstr ""

#: ../Doc/library/multiprocessing.rst:156
msgid "Synchronization between processes"
msgstr ""

#: ../Doc/library/multiprocessing.rst:158
msgid ""
":mod:`multiprocessing` contains equivalents of all the synchronization "
"primitives from :mod:`threading`.  For instance one can use a lock to ensure "
"that only one process prints to standard output at a time::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:175
msgid ""
"Without using the lock output from the different processes is liable to get "
"all mixed up."
msgstr ""

#: ../Doc/library/multiprocessing.rst:180
msgid "Sharing state between processes"
msgstr ""

#: ../Doc/library/multiprocessing.rst:182
msgid ""
"As mentioned above, when doing concurrent programming it is usually best to "
"avoid using shared state as far as possible.  This is particularly true when "
"using multiple processes."
msgstr ""

#: ../Doc/library/multiprocessing.rst:186
msgid ""
"However, if you really do need to use some shared data then :mod:"
"`multiprocessing` provides a couple of ways of doing so."
msgstr ""

#: ../Doc/library/multiprocessing.rst:189
msgid "**Shared memory**"
msgstr ""

#: ../Doc/library/multiprocessing.rst:191
msgid ""
"Data can be stored in a shared memory map using :class:`Value` or :class:"
"`Array`.  For example, the following code ::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:212
#: ../Doc/library/multiprocessing.rst:259
msgid "will print ::"
msgstr ""

# 0797ce6edf0c49b2848be2c60eece873
#: ../Doc/library/multiprocessing.rst:217
msgid ""
"The ``'d'`` and ``'i'`` arguments used when creating ``num`` and ``arr`` are "
"typecodes of the kind used by the :mod:`array` module: ``'d'`` indicates a "
"double precision float and ``'i'`` indicates a signed integer.  These shared "
"objects will be process and thread-safe."
msgstr ""

#: ../Doc/library/multiprocessing.rst:222
msgid ""
"For more flexibility in using shared memory one can use the :mod:"
"`multiprocessing.sharedctypes` module which supports the creation of "
"arbitrary ctypes objects allocated from shared memory."
msgstr ""

#: ../Doc/library/multiprocessing.rst:226
msgid "**Server process**"
msgstr ""

#: ../Doc/library/multiprocessing.rst:228
msgid ""
"A manager object returned by :func:`Manager` controls a server process which "
"holds Python objects and allows other processes to manipulate them using "
"proxies."
msgstr ""

# afbdd4a016174b6a9b963a14f24b15bd
#: ../Doc/library/multiprocessing.rst:232
msgid ""
"A manager returned by :func:`Manager` will support types :class:`list`, :"
"class:`dict`, :class:`Namespace`, :class:`Lock`, :class:`RLock`, :class:"
"`Semaphore`, :class:`BoundedSemaphore`, :class:`Condition`, :class:`Event`, :"
"class:`~multiprocessing.Queue`, :class:`Value` and :class:`Array`.  For "
"example, ::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:264
msgid ""
"Server process managers are more flexible than using shared memory objects "
"because they can be made to support arbitrary object types.  Also, a single "
"manager can be shared by processes on different computers over a network. "
"They are, however, slower than using shared memory."
msgstr ""

#: ../Doc/library/multiprocessing.rst:271
msgid "Using a pool of workers"
msgstr ""

#: ../Doc/library/multiprocessing.rst:273
msgid ""
"The :class:`~multiprocessing.pool.Pool` class represents a pool of worker "
"processes.  It has methods which allows tasks to be offloaded to the worker "
"processes in a few different ways."
msgstr ""

#: ../Doc/library/multiprocessing.rst:292
#: ../Doc/library/xml.etree.elementtree.rst:350
msgid "Reference"
msgstr ""

#: ../Doc/library/multiprocessing.rst:294
msgid ""
"The :mod:`multiprocessing` package mostly replicates the API of the :mod:"
"`threading` module."
msgstr ""

#: ../Doc/library/multiprocessing.rst:299
msgid ":class:`Process` and exceptions"
msgstr ""

#: ../Doc/library/multiprocessing.rst:303
msgid ""
"Process objects represent activity that is run in a separate process. The :"
"class:`Process` class has equivalents of all the methods of :class:"
"`threading.Thread`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:307
msgid ""
"The constructor should always be called with keyword arguments. *group* "
"should always be ``None``; it exists solely for compatibility with :class:"
"`threading.Thread`.  *target* is the callable object to be invoked by the :"
"meth:`run()` method.  It defaults to ``None``, meaning nothing is called. "
"*name* is the process name.  By default, a unique name is constructed of the "
"form 'Process-N\\ :sub:`1`:N\\ :sub:`2`:...:N\\ :sub:`k`' where N\\ :sub:`1`,"
"N\\ :sub:`2`,...,N\\ :sub:`k` is a sequence of integers whose length is "
"determined by the *generation* of the process.  *args* is the argument tuple "
"for the target invocation.  *kwargs* is a dictionary of keyword arguments "
"for the target invocation.  By default, no arguments are passed to *target*."
msgstr ""

#: ../Doc/library/multiprocessing.rst:319
msgid ""
"If a subclass overrides the constructor, it must make sure it invokes the "
"base class constructor (:meth:`Process.__init__`) before doing anything else "
"to the process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:325
msgid "Method representing the process's activity."
msgstr ""

#: ../Doc/library/multiprocessing.rst:327
msgid ""
"You may override this method in a subclass.  The standard :meth:`run` method "
"invokes the callable object passed to the object's constructor as the target "
"argument, if any, with sequential and keyword arguments taken from the "
"*args* and *kwargs* arguments, respectively."
msgstr ""

#: ../Doc/library/multiprocessing.rst:334
msgid "Start the process's activity."
msgstr ""

#: ../Doc/library/multiprocessing.rst:336
msgid ""
"This must be called at most once per process object.  It arranges for the "
"object's :meth:`run` method to be invoked in a separate process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:341
msgid ""
"Block the calling thread until the process whose :meth:`join` method is "
"called terminates or until the optional timeout occurs."
msgstr ""

#: ../Doc/library/multiprocessing.rst:344
msgid "If *timeout* is ``None`` then there is no timeout."
msgstr ""

#: ../Doc/library/multiprocessing.rst:346
msgid "A process can be joined many times."
msgstr ""

#: ../Doc/library/multiprocessing.rst:348
msgid ""
"A process cannot join itself because this would cause a deadlock.  It is an "
"error to attempt to join a process before it has been started."
msgstr ""

#: ../Doc/library/multiprocessing.rst:353
msgid "The process's name."
msgstr ""

#: ../Doc/library/multiprocessing.rst:355
msgid ""
"The name is a string used for identification purposes only.  It has no "
"semantics.  Multiple processes may be given the same name.  The initial name "
"is set by the constructor."
msgstr ""

#: ../Doc/library/multiprocessing.rst:361
msgid "Return whether the process is alive."
msgstr ""

#: ../Doc/library/multiprocessing.rst:363
msgid ""
"Roughly, a process object is alive from the moment the :meth:`start` method "
"returns until the child process terminates."
msgstr ""

#: ../Doc/library/multiprocessing.rst:368
msgid ""
"The process's daemon flag, a Boolean value.  This must be set before :meth:"
"`start` is called."
msgstr ""

#: ../Doc/library/multiprocessing.rst:371
msgid "The initial value is inherited from the creating process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:373
msgid ""
"When a process exits, it attempts to terminate all of its daemonic child "
"processes."
msgstr ""

# 1c87622a82a4446fa40a6df2a851cece
#: ../Doc/library/multiprocessing.rst:376
msgid ""
"Note that a daemonic process is not allowed to create child processes. "
"Otherwise a daemonic process would leave its children orphaned if it gets "
"terminated when its parent process exits. Additionally, these are **not** "
"Unix daemons or services, they are normal processes that will be terminated "
"(and not joined) if non-daemonic processes have exited."
msgstr ""

#: ../Doc/library/multiprocessing.rst:382
msgid ""
"In addition to the  :class:`Threading.Thread` API, :class:`Process` objects "
"also support the following attributes and methods:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:387
msgid ""
"Return the process ID.  Before the process is spawned, this will be ``None``."
msgstr ""

#: ../Doc/library/multiprocessing.rst:392
msgid ""
"The child's exit code.  This will be ``None`` if the process has not yet "
"terminated.  A negative value *-N* indicates that the child was terminated "
"by signal *N*."
msgstr ""

#: ../Doc/library/multiprocessing.rst:398
msgid "The process's authentication key (a byte string)."
msgstr ""

#: ../Doc/library/multiprocessing.rst:400
msgid ""
"When :mod:`multiprocessing` is initialized the main process is assigned a "
"random string using :func:`os.random`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:403
msgid ""
"When a :class:`Process` object is created, it will inherit the "
"authentication key of its parent process, although this may be changed by "
"setting :attr:`authkey` to another byte string."
msgstr ""

#: ../Doc/library/multiprocessing.rst:407
msgid "See :ref:`multiprocessing-auth-keys`."
msgstr ""

# d0385ae5139647c3a94d19684210dc7e
#: ../Doc/library/multiprocessing.rst:411
msgid ""
"Terminate the process.  On Unix this is done using the ``SIGTERM`` signal; "
"on Windows :c:func:`TerminateProcess` is used.  Note that exit handlers and "
"finally clauses, etc., will not be executed."
msgstr ""

#: ../Doc/library/multiprocessing.rst:415
msgid ""
"Note that descendant processes of the process will *not* be terminated -- "
"they will simply become orphaned."
msgstr ""

#: ../Doc/library/multiprocessing.rst:420
msgid ""
"If this method is used when the associated process is using a pipe or queue "
"then the pipe or queue is liable to become corrupted and may become unusable "
"by other process.  Similarly, if the process has acquired a lock or "
"semaphore etc. then terminating it is liable to cause other processes to "
"deadlock."
msgstr ""

#: ../Doc/library/multiprocessing.rst:426
msgid ""
"Note that the :meth:`start`, :meth:`join`, :meth:`is_alive` and :attr:"
"`exit_code` methods should only be called by the process that created the "
"process object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:430
msgid "Example usage of some of the methods of :class:`Process`:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:451
msgid ""
"Exception raised by :meth:`Connection.recv_bytes_into()` when the supplied "
"buffer object is too small for the message read."
msgstr ""

#: ../Doc/library/multiprocessing.rst:454
msgid ""
"If ``e`` is an instance of :exc:`BufferTooShort` then ``e.args[0]`` will "
"give the message as a byte string."
msgstr ""

#: ../Doc/library/multiprocessing.rst:459
msgid "Pipes and Queues"
msgstr ""

#: ../Doc/library/multiprocessing.rst:461
msgid ""
"When using multiple processes, one generally uses message passing for "
"communication between processes and avoids having to use any synchronization "
"primitives like locks."
msgstr ""

#: ../Doc/library/multiprocessing.rst:465
msgid ""
"For passing messages one can use :func:`Pipe` (for a connection between two "
"processes) or a queue (which allows multiple producers and consumers)."
msgstr ""

# e981ac123c884af4974b5d206904d2dd
#: ../Doc/library/multiprocessing.rst:468
msgid ""
"The :class:`~multiprocessing.Queue`, :class:`multiprocessing.queues."
"SimpleQueue` and :class:`JoinableQueue` types are multi-producer, multi-"
"consumer FIFO queues modelled on the :class:`Queue.Queue` class in the "
"standard library.  They differ in that :class:`~multiprocessing.Queue` lacks "
"the :meth:`~Queue.Queue.task_done` and :meth:`~Queue.Queue.join` methods "
"introduced into Python 2.5's :class:`Queue.Queue` class."
msgstr ""

# 3b12a4310bde4ba99513a49305c2f013
#: ../Doc/library/multiprocessing.rst:474
msgid ""
"If you use :class:`JoinableQueue` then you **must** call :meth:"
"`JoinableQueue.task_done` for each task removed from the queue or else the "
"semaphore used to count the number of unfinished tasks may eventually "
"overflow, raising an exception."
msgstr ""

#: ../Doc/library/multiprocessing.rst:479
msgid ""
"Note that one can also create a shared queue by using a manager object -- "
"see :ref:`multiprocessing-managers`."
msgstr ""

# 82e11947a3074b049227e48c80ad05c6
#: ../Doc/library/multiprocessing.rst:484
msgid ""
":mod:`multiprocessing` uses the usual :exc:`Queue.Empty` and :exc:`Queue."
"Full` exceptions to signal a timeout.  They are not available in the :mod:"
"`multiprocessing` namespace so you need to import them from :mod:`Queue`."
msgstr ""

# b61486e0646a4460b877046fc24986ac
#: ../Doc/library/multiprocessing.rst:492
msgid ""
"If a process is killed using :meth:`Process.terminate` or :func:`os.kill` "
"while it is trying to use a :class:`~multiprocessing.Queue`, then the data "
"in the queue is likely to become corrupted.  This may cause any other "
"process to get an exception when it tries to use the queue later on."
msgstr ""

#: ../Doc/library/multiprocessing.rst:499
msgid ""
"As mentioned above, if a child process has put items on a queue (and it has "
"not used :meth:`JoinableQueue.cancel_join_thread`), then that process will "
"not terminate until all buffered items have been flushed to the pipe."
msgstr ""

#: ../Doc/library/multiprocessing.rst:503
msgid ""
"This means that if you try joining that process you may get a deadlock "
"unless you are sure that all items which have been put on the queue have "
"been consumed.  Similarly, if the child process is non-daemonic then the "
"parent process may hang on exit when it tries to join all its non-daemonic "
"children."
msgstr ""

#: ../Doc/library/multiprocessing.rst:508
msgid ""
"Note that a queue created using a manager does not have this issue.  See :"
"ref:`multiprocessing-programming`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:511
msgid ""
"For an example of the usage of queues for interprocess communication see :"
"ref:`multiprocessing-examples`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:517
msgid ""
"Returns a pair ``(conn1, conn2)`` of :class:`Connection` objects "
"representing the ends of a pipe."
msgstr ""

#: ../Doc/library/multiprocessing.rst:520
msgid ""
"If *duplex* is ``True`` (the default) then the pipe is bidirectional.  If "
"*duplex* is ``False`` then the pipe is unidirectional: ``conn1`` can only be "
"used for receiving messages and ``conn2`` can only be used for sending "
"messages."
msgstr ""

#: ../Doc/library/multiprocessing.rst:528
msgid ""
"Returns a process shared queue implemented using a pipe and a few locks/"
"semaphores.  When a process first puts an item on the queue a feeder thread "
"is started which transfers objects from a buffer into the pipe."
msgstr ""

# ec854dcc308047538ccfbcd87410bc0e
#: ../Doc/library/multiprocessing.rst:532
msgid ""
"The usual :exc:`Queue.Empty` and :exc:`Queue.Full` exceptions from the "
"standard library's :mod:`Queue` module are raised to signal timeouts."
msgstr ""

# 5a5b1ec9eaaa456490ebc5ac0243bc04
#: ../Doc/library/multiprocessing.rst:535
msgid ""
":class:`~multiprocessing.Queue` implements all the methods of :class:`Queue."
"Queue` except for :meth:`~Queue.Queue.task_done` and :meth:`~Queue.Queue."
"join`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:540
msgid ""
"Return the approximate size of the queue.  Because of multithreading/"
"multiprocessing semantics, this number is not reliable."
msgstr ""

#: ../Doc/library/multiprocessing.rst:543
msgid ""
"Note that this may raise :exc:`NotImplementedError` on Unix platforms like "
"Mac OS X where ``sem_getvalue()`` is not implemented."
msgstr ""

#: ../Doc/library/multiprocessing.rst:548
msgid ""
"Return ``True`` if the queue is empty, ``False`` otherwise.  Because of "
"multithreading/multiprocessing semantics, this is not reliable."
msgstr ""

#: ../Doc/library/multiprocessing.rst:553
msgid ""
"Return ``True`` if the queue is full, ``False`` otherwise.  Because of "
"multithreading/multiprocessing semantics, this is not reliable."
msgstr ""

# 5acebc53d64a42e5b3fd610dc80d8ff2
#: ../Doc/library/multiprocessing.rst:558
msgid ""
"Put obj into the queue.  If the optional argument *block* is ``True`` (the "
"default) and *timeout* is ``None`` (the default), block if necessary until a "
"free slot is available.  If *timeout* is a positive number, it blocks at "
"most *timeout* seconds and raises the :exc:`Queue.Full` exception if no free "
"slot was available within that time.  Otherwise (*block* is ``False``), put "
"an item on the queue if a free slot is immediately available, else raise "
"the :exc:`Queue.Full` exception (*timeout* is ignored in that case)."
msgstr ""

# b0c42a78da4b44cea80c2c048a9a3838
#: ../Doc/library/multiprocessing.rst:569
msgid "Equivalent to ``put(obj, False)``."
msgstr ""

# 77f6859c1cb74c73ab808f7deeaba442
#: ../Doc/library/multiprocessing.rst:573
msgid ""
"Remove and return an item from the queue.  If optional args *block* is "
"``True`` (the default) and *timeout* is ``None`` (the default), block if "
"necessary until an item is available.  If *timeout* is a positive number, it "
"blocks at most *timeout* seconds and raises the :exc:`Queue.Empty` exception "
"if no item was available within that time.  Otherwise (block is ``False``), "
"return an item if one is immediately available, else raise the :exc:`Queue."
"Empty` exception (*timeout* is ignored in that case)."
msgstr ""

#: ../Doc/library/multiprocessing.rst:584 ../Doc/library/queue.rst:145
msgid "Equivalent to ``get(False)``."
msgstr ""

# 68a682803a2c4769b66c03c47fb1914b
#: ../Doc/library/multiprocessing.rst:586
msgid ""
":class:`~multiprocessing.Queue` has a few additional methods not found in :"
"class:`Queue.Queue`.  These methods are usually unnecessary for most code:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:592
msgid ""
"Indicate that no more data will be put on this queue by the current "
"process.  The background thread will quit once it has flushed all buffered "
"data to the pipe.  This is called automatically when the queue is garbage "
"collected."
msgstr ""

#: ../Doc/library/multiprocessing.rst:599
msgid ""
"Join the background thread.  This can only be used after :meth:`close` has "
"been called.  It blocks until the background thread exits, ensuring that all "
"data in the buffer has been flushed to the pipe."
msgstr ""

#: ../Doc/library/multiprocessing.rst:603
msgid ""
"By default if a process is not the creator of the queue then on exit it will "
"attempt to join the queue's background thread.  The process can call :meth:"
"`cancel_join_thread` to make :meth:`join_thread` do nothing."
msgstr ""

#: ../Doc/library/multiprocessing.rst:609
msgid ""
"Prevent :meth:`join_thread` from blocking.  In particular, this prevents the "
"background thread from being joined automatically when the process exits -- "
"see :meth:`join_thread`."
msgstr ""

# 5c258a1382374619b4ba5143f8f1d934
#: ../Doc/library/multiprocessing.rst:616
msgid ""
"It is a simplified :class:`~multiprocessing.Queue` type, very close to a "
"locked :class:`Pipe`."
msgstr ""

# 494486b8a86045328ce02cd0183c46a8
#: ../Doc/library/multiprocessing.rst:620
msgid "Return ``True`` if the queue is empty, ``False`` otherwise."
msgstr ""

# 3bb025c00c244d2f8abb6b696664c30e
#: ../Doc/library/multiprocessing.rst:624
msgid "Remove and return an item from the queue."
msgstr ""

# 0d1951d496ab493585ab6773b548acba
#: ../Doc/library/multiprocessing.rst:628
msgid "Put *item* into the queue."
msgstr ""

# d501f72e59374dcda22fffd5e9434b18
#: ../Doc/library/multiprocessing.rst:633
msgid ""
":class:`JoinableQueue`, a :class:`~multiprocessing.Queue` subclass, is a "
"queue which additionally has :meth:`task_done` and :meth:`join` methods."
msgstr ""

#: ../Doc/library/multiprocessing.rst:638
msgid ""
"Indicate that a formerly enqueued task is complete. Used by queue consumer "
"threads.  For each :meth:`~Queue.get` used to fetch a task, a subsequent "
"call to :meth:`task_done` tells the queue that the processing on the task is "
"complete."
msgstr ""

#: ../Doc/library/multiprocessing.rst:643
msgid ""
"If a :meth:`~Queue.join` is currently blocking, it will resume when all "
"items have been processed (meaning that a :meth:`task_done` call was "
"received for every item that had been :meth:`~Queue.put` into the queue)."
msgstr ""

#: ../Doc/library/multiprocessing.rst:647 ../Doc/library/queue.rst:161
msgid ""
"Raises a :exc:`ValueError` if called more times than there were items placed "
"in the queue."
msgstr ""

#: ../Doc/library/multiprocessing.rst:653
msgid "Block until all items in the queue have been gotten and processed."
msgstr ""

#: ../Doc/library/multiprocessing.rst:655
msgid ""
"The count of unfinished tasks goes up whenever an item is added to the "
"queue.  The count goes down whenever a consumer thread calls :meth:"
"`task_done` to indicate that the item was retrieved and all work on it is "
"complete.  When the count of unfinished tasks drops to zero, :meth:`~Queue."
"join` unblocks."
msgstr ""

#: ../Doc/library/multiprocessing.rst:663
msgid "Miscellaneous"
msgstr ""

#: ../Doc/library/multiprocessing.rst:667
msgid "Return list of all live children of the current process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:669
msgid ""
"Calling this has the side affect of \"joining\" any processes which have "
"already finished."
msgstr ""

#: ../Doc/library/multiprocessing.rst:674
msgid ""
"Return the number of CPUs in the system.  May raise :exc:"
"`NotImplementedError`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:679
msgid ""
"Return the :class:`Process` object corresponding to the current process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:681
msgid "An analogue of :func:`threading.current_thread`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:685
msgid ""
"Add support for when a program which uses :mod:`multiprocessing` has been "
"frozen to produce a Windows executable.  (Has been tested with **py2exe**, "
"**PyInstaller** and **cx_Freeze**.)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:689
msgid ""
"One needs to call this function straight after the ``if __name__ == "
"'__main__'`` line of the main module.  For example::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:701
msgid ""
"If the ``freeze_support()`` line is omitted then trying to run the frozen "
"executable will raise :exc:`RuntimeError`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:704
msgid ""
"If the module is being run normally by the Python interpreter then :func:"
"`freeze_support` has no effect."
msgstr ""

#: ../Doc/library/multiprocessing.rst:709
msgid ""
"Sets the path of the Python interpreter to use when starting a child "
"process. (By default :data:`sys.executable` is used).  Embedders will "
"probably need to do some thing like ::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:715
msgid "before they can create child processes.  (Windows only)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:720
msgid ""
":mod:`multiprocessing` contains no analogues of :func:`threading."
"active_count`, :func:`threading.enumerate`, :func:`threading.settrace`, :"
"func:`threading.setprofile`, :class:`threading.Timer`, or :class:`threading."
"local`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:727 ../Doc/library/sqlite3.rst:227
msgid "Connection Objects"
msgstr ""

#: ../Doc/library/multiprocessing.rst:729
msgid ""
"Connection objects allow the sending and receiving of picklable objects or "
"strings.  They can be thought of as message oriented connected sockets."
msgstr ""

# a936799331b84555a21b496f086f4d48
#: ../Doc/library/multiprocessing.rst:732
msgid ""
"Connection objects are usually created using :func:`Pipe` -- see also :ref:"
"`multiprocessing-listeners-clients`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:739
msgid ""
"Send an object to the other end of the connection which should be read "
"using :meth:`recv`."
msgstr ""

# bcebf4b88e584095a422efa358c0f0d1
#: ../Doc/library/multiprocessing.rst:742
msgid ""
"The object must be picklable.  Very large pickles (approximately 32 MB+, "
"though it depends on the OS) may raise a :exc:`ValueError` exception."
msgstr ""

# e8008594d8d04c4e9c54647c6a201570
#: ../Doc/library/multiprocessing.rst:747
msgid ""
"Return an object sent from the other end of the connection using :meth:"
"`send`.  Blocks until there its something to receive.  Raises :exc:"
"`EOFError` if there is nothing left to receive and the other end was closed."
msgstr ""

# 40c386be04cd4a7495e155542b9b7f4f
#: ../Doc/library/multiprocessing.rst:754
msgid "Return the file descriptor or handle used by the connection."
msgstr ""

#: ../Doc/library/multiprocessing.rst:758 ../Doc/library/telnetlib.rst:157
msgid "Close the connection."
msgstr ""

#: ../Doc/library/multiprocessing.rst:760
msgid "This is called automatically when the connection is garbage collected."
msgstr ""

#: ../Doc/library/multiprocessing.rst:764
msgid "Return whether there is any data available to be read."
msgstr ""

#: ../Doc/library/multiprocessing.rst:766
msgid ""
"If *timeout* is not specified then it will return immediately.  If *timeout* "
"is a number then this specifies the maximum time in seconds to block.  If "
"*timeout* is ``None`` then an infinite timeout is used."
msgstr ""

#: ../Doc/library/multiprocessing.rst:772
msgid ""
"Send byte data from an object supporting the buffer interface as a complete "
"message."
msgstr ""

# 1ae8bff5c0e8478aa3b46ce913019c79
#: ../Doc/library/multiprocessing.rst:775
msgid ""
"If *offset* is given then data is read from that position in *buffer*.  If "
"*size* is given then that many bytes will be read from buffer.  Very large "
"buffers (approximately 32 MB+, though it depends on the OS) may raise a :exc:"
"`ValueError` exception"
msgstr ""

# 879c4b18aef64805bda83ec5b6c7a138
#: ../Doc/library/multiprocessing.rst:782
msgid ""
"Return a complete message of byte data sent from the other end of the "
"connection as a string.  Blocks until there is something to receive. Raises :"
"exc:`EOFError` if there is nothing left to receive and the other end has "
"closed."
msgstr ""

#: ../Doc/library/multiprocessing.rst:787
msgid ""
"If *maxlength* is specified and the message is longer than *maxlength* then :"
"exc:`IOError` is raised and the connection will no longer be readable."
msgstr ""

# 3e96088859b34f7d8090f62db13ecb06
#: ../Doc/library/multiprocessing.rst:793
msgid ""
"Read into *buffer* a complete message of byte data sent from the other end "
"of the connection and return the number of bytes in the message.  Blocks "
"until there is something to receive.  Raises :exc:`EOFError` if there is "
"nothing left to receive and the other end was closed."
msgstr ""

#: ../Doc/library/multiprocessing.rst:799
msgid ""
"*buffer* must be an object satisfying the writable buffer interface.  If "
"*offset* is given then the message will be written into the buffer from that "
"position.  Offset must be a non-negative integer less than the length of "
"*buffer* (in bytes)."
msgstr ""

#: ../Doc/library/multiprocessing.rst:804
msgid ""
"If the buffer is too short then a :exc:`BufferTooShort` exception is raised "
"and the complete message is available as ``e.args[0]`` where ``e`` is the "
"exception instance."
msgstr ""

#: ../Doc/library/multiprocessing.rst:833
msgid ""
"The :meth:`Connection.recv` method automatically unpickles the data it "
"receives, which can be a security risk unless you can trust the process "
"which sent the message."
msgstr ""

#: ../Doc/library/multiprocessing.rst:837
msgid ""
"Therefore, unless the connection object was produced using :func:`Pipe` you "
"should only use the :meth:`~Connection.recv` and :meth:`~Connection.send` "
"methods after performing some sort of authentication.  See :ref:"
"`multiprocessing-auth-keys`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:844
msgid ""
"If a process is killed while it is trying to read or write to a pipe then "
"the data in the pipe is likely to become corrupted, because it may become "
"impossible to be sure where the message boundaries lie."
msgstr ""

#: ../Doc/library/multiprocessing.rst:850
msgid "Synchronization primitives"
msgstr ""

#: ../Doc/library/multiprocessing.rst:852
msgid ""
"Generally synchronization primitives are not as necessary in a multiprocess "
"program as they are in a multithreaded program.  See the documentation for :"
"mod:`threading` module."
msgstr ""

#: ../Doc/library/multiprocessing.rst:856
msgid ""
"Note that one can also create synchronization primitives by using a manager "
"object -- see :ref:`multiprocessing-managers`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:861
msgid ""
"A bounded semaphore object: a clone of :class:`threading.BoundedSemaphore`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:863
msgid ""
"(On Mac OS X, this is indistinguishable from :class:`Semaphore` because "
"``sem_getvalue()`` is not implemented on that platform)."
msgstr ""

#: ../Doc/library/multiprocessing.rst:868
msgid "A condition variable: a clone of :class:`threading.Condition`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:870
msgid ""
"If *lock* is specified then it should be a :class:`Lock` or :class:`RLock` "
"object from :mod:`multiprocessing`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:875
msgid ""
"A clone of :class:`threading.Event`. This method returns the state of the "
"internal semaphore on exit, so it will always return ``True`` except if a "
"timeout is given and the operation times out."
msgstr ""

#: ../Doc/library/multiprocessing.rst:885
msgid "A non-recursive lock object: a clone of :class:`threading.Lock`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:889
msgid "A recursive lock object: a clone of :class:`threading.RLock`."
msgstr ""

# fccaae17d6ce42599ed06bddeeffc611
#: ../Doc/library/multiprocessing.rst:893
msgid "A semaphore object: a clone of :class:`threading.Semaphore`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:897
msgid ""
"The :meth:`acquire` method of :class:`BoundedSemaphore`, :class:`Lock`, :"
"class:`RLock` and :class:`Semaphore` has a timeout parameter not supported "
"by the equivalents in :mod:`threading`.  The signature is ``acquire"
"(block=True, timeout=None)`` with keyword parameters being acceptable.  If "
"*block* is ``True`` and *timeout* is not ``None`` then it specifies a "
"timeout in seconds.  If *block* is ``False`` then *timeout* is ignored."
msgstr ""

#: ../Doc/library/multiprocessing.rst:905
msgid ""
"On Mac OS X, ``sem_timedwait`` is unsupported, so calling ``acquire()`` with "
"a timeout will emulate that function's behavior using a sleeping loop."
msgstr ""

#: ../Doc/library/multiprocessing.rst:910
msgid ""
"If the SIGINT signal generated by Ctrl-C arrives while the main thread is "
"blocked by a call to :meth:`BoundedSemaphore.acquire`, :meth:`Lock."
"acquire`, :meth:`RLock.acquire`, :meth:`Semaphore.acquire`, :meth:`Condition."
"acquire` or :meth:`Condition.wait` then the call will be immediately "
"interrupted and :exc:`KeyboardInterrupt` will be raised."
msgstr ""

#: ../Doc/library/multiprocessing.rst:916
msgid ""
"This differs from the behaviour of :mod:`threading` where SIGINT will be "
"ignored while the equivalent blocking calls are in progress."
msgstr ""

#: ../Doc/library/multiprocessing.rst:921
msgid "Shared :mod:`ctypes` Objects"
msgstr ""

#: ../Doc/library/multiprocessing.rst:923
msgid ""
"It is possible to create shared objects using shared memory which can be "
"inherited by child processes."
msgstr ""

#: ../Doc/library/multiprocessing.rst:928
msgid ""
"Return a :mod:`ctypes` object allocated from shared memory.  By default the "
"return value is actually a synchronized wrapper for the object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:931
#: ../Doc/library/multiprocessing.rst:1006
msgid ""
"*typecode_or_type* determines the type of the returned object: it is either "
"a ctypes type or a one character typecode of the kind used by the :mod:"
"`array` module.  *\\*args* is passed on to the constructor for the type."
msgstr ""

#: ../Doc/library/multiprocessing.rst:935
#: ../Doc/library/multiprocessing.rst:956
#: ../Doc/library/multiprocessing.rst:1024
#: ../Doc/library/multiprocessing.rst:1039
msgid ""
"If *lock* is ``True`` (the default) then a new lock object is created to "
"synchronize access to the value.  If *lock* is a :class:`Lock` or :class:"
"`RLock` object then that will be used to synchronize access to the value.  "
"If *lock* is ``False`` then access to the returned object will not be "
"automatically protected by a lock, so it will not necessarily be \"process-"
"safe\"."
msgstr ""

#: ../Doc/library/multiprocessing.rst:942
#: ../Doc/library/multiprocessing.rst:1031
#: ../Doc/library/multiprocessing.rst:1046
msgid "Note that *lock* is a keyword-only argument."
msgstr ""

#: ../Doc/library/multiprocessing.rst:946
msgid ""
"Return a ctypes array allocated from shared memory.  By default the return "
"value is actually a synchronized wrapper for the array."
msgstr ""

#: ../Doc/library/multiprocessing.rst:949
msgid ""
"*typecode_or_type* determines the type of the elements of the returned "
"array: it is either a ctypes type or a one character typecode of the kind "
"used by the :mod:`array` module.  If *size_or_initializer* is an integer, "
"then it determines the length of the array, and the array will be initially "
"zeroed. Otherwise, *size_or_initializer* is a sequence which is used to "
"initialize the array and whose length determines the length of the array."
msgstr ""

#: ../Doc/library/multiprocessing.rst:963
msgid "Note that *lock* is a keyword only argument."
msgstr ""

#: ../Doc/library/multiprocessing.rst:965
msgid ""
"Note that an array of :data:`ctypes.c_char` has *value* and *raw* attributes "
"which allow one to use it to store and retrieve strings."
msgstr ""

#: ../Doc/library/multiprocessing.rst:970
msgid "The :mod:`multiprocessing.sharedctypes` module"
msgstr ""

#: ../Doc/library/multiprocessing.rst:975
msgid ""
"The :mod:`multiprocessing.sharedctypes` module provides functions for "
"allocating :mod:`ctypes` objects from shared memory which can be inherited "
"by child processes."
msgstr ""

#: ../Doc/library/multiprocessing.rst:981
msgid ""
"Although it is possible to store a pointer in shared memory remember that "
"this will refer to a location in the address space of a specific process. "
"However, the pointer is quite likely to be invalid in the context of a "
"second process and trying to dereference the pointer from the second process "
"may cause a crash."
msgstr ""

#: ../Doc/library/multiprocessing.rst:989
msgid "Return a ctypes array allocated from shared memory."
msgstr ""

#: ../Doc/library/multiprocessing.rst:991
msgid ""
"*typecode_or_type* determines the type of the elements of the returned "
"array: it is either a ctypes type or a one character typecode of the kind "
"used by the :mod:`array` module.  If *size_or_initializer* is an integer "
"then it determines the length of the array, and the array will be initially "
"zeroed. Otherwise *size_or_initializer* is a sequence which is used to "
"initialize the array and whose length determines the length of the array."
msgstr ""

#: ../Doc/library/multiprocessing.rst:998
msgid ""
"Note that setting and getting an element is potentially non-atomic -- use :"
"func:`Array` instead to make sure that access is automatically synchronized "
"using a lock."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1004
msgid "Return a ctypes object allocated from shared memory."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1010
msgid ""
"Note that setting and getting the value is potentially non-atomic -- use :"
"func:`Value` instead to make sure that access is automatically synchronized "
"using a lock."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1014
msgid ""
"Note that an array of :data:`ctypes.c_char` has ``value`` and ``raw`` "
"attributes which allow one to use it to store and retrieve strings -- see "
"documentation for :mod:`ctypes`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1020
msgid ""
"The same as :func:`RawArray` except that depending on the value of *lock* a "
"process-safe synchronization wrapper may be returned instead of a raw ctypes "
"array."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1035
msgid ""
"The same as :func:`RawValue` except that depending on the value of *lock* a "
"process-safe synchronization wrapper may be returned instead of a raw ctypes "
"object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1050
msgid ""
"Return a ctypes object allocated from shared memory which is a copy of the "
"ctypes object *obj*."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1055
msgid ""
"Return a process-safe wrapper object for a ctypes object which uses *lock* "
"to synchronize access.  If *lock* is ``None`` (the default) then a :class:"
"`multiprocessing.RLock` object is created automatically."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1059
msgid ""
"A synchronized wrapper will have two methods in addition to those of the "
"object it wraps: :meth:`get_obj` returns the wrapped object and :meth:"
"`get_lock` returns the lock object used for synchronization."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1063
msgid ""
"Note that accessing the ctypes object through the wrapper can be a lot "
"slower than accessing the raw ctypes object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1067
msgid ""
"The table below compares the syntax for creating shared ctypes objects from "
"shared memory with the normal ctypes syntax.  (In the table ``MyStruct`` is "
"some subclass of :class:`ctypes.Structure`.)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1072
msgid "ctypes"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1072
msgid "sharedctypes using type"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1072
msgid "sharedctypes using typecode"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1074
msgid "c_double(2.4)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1074
msgid "RawValue(c_double, 2.4)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1074
msgid "RawValue('d', 2.4)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1075
msgid "MyStruct(4, 6)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1075
msgid "RawValue(MyStruct, 4, 6)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1076
msgid "(c_short * 7)()"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1076
msgid "RawArray(c_short, 7)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1076
msgid "RawArray('h', 7)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1077
msgid "(c_int * 3)(9, 2, 8)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1077
msgid "RawArray(c_int, (9, 2, 8))"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1077
msgid "RawArray('i', (9, 2, 8))"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1081
msgid ""
"Below is an example where a number of ctypes objects are modified by a child "
"process::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1119
msgid "The results printed are ::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1132
msgid "Managers"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1134
msgid ""
"Managers provide a way to create data which can be shared between different "
"processes. A manager object controls a server process which manages *shared "
"objects*.  Other processes can access the shared objects by using proxies."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1140
msgid ""
"Returns a started :class:`~multiprocessing.managers.SyncManager` object "
"which can be used for sharing objects between processes.  The returned "
"manager object corresponds to a spawned child process and has methods which "
"will create shared objects and return corresponding proxies."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1148
msgid ""
"Manager processes will be shutdown as soon as they are garbage collected or "
"their parent process exits.  The manager classes are defined in the :mod:"
"`multiprocessing.managers` module:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1154
msgid "Create a BaseManager object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1156
msgid ""
"Once created one should call :meth:`start` or ``get_server().serve_forever()"
"`` to ensure that the manager object refers to a started manager process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1159
msgid ""
"*address* is the address on which the manager process listens for new "
"connections.  If *address* is ``None`` then an arbitrary one is chosen."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1162
msgid ""
"*authkey* is the authentication key which will be used to check the validity "
"of incoming connections to the server process.  If *authkey* is ``None`` "
"then ``current_process().authkey``.  Otherwise *authkey* is used and it must "
"be a string."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1169
msgid ""
"Start a subprocess to start the manager.  If *initializer* is not ``None`` "
"then the subprocess will call ``initializer(*initargs)`` when it starts."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1174
msgid ""
"Returns a :class:`Server` object which represents the actual server under "
"the control of the Manager. The :class:`Server` object supports the :meth:"
"`serve_forever` method::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1183
msgid ":class:`Server` additionally has an :attr:`address` attribute."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1187
msgid "Connect a local manager object to a remote manager process::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1195
msgid ""
"Stop the process used by the manager.  This is only available if :meth:"
"`start` has been used to start the server process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1198
msgid "This can be called multiple times."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1202
msgid ""
"A classmethod which can be used for registering a type or callable with the "
"manager class."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1205
msgid ""
"*typeid* is a \"type identifier\" which is used to identify a particular "
"type of shared object.  This must be a string."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1208
msgid ""
"*callable* is a callable used for creating objects for this type "
"identifier.  If a manager instance will be created using the :meth:"
"`from_address` classmethod or if the *create_method* argument is ``False`` "
"then this can be left as ``None``."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1213
msgid ""
"*proxytype* is a subclass of :class:`BaseProxy` which is used to create "
"proxies for shared objects with this *typeid*.  If ``None`` then a proxy "
"class is created automatically."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1217
msgid ""
"*exposed* is used to specify a sequence of method names which proxies for "
"this typeid should be allowed to access using :meth:`BaseProxy."
"_callMethod`.  (If *exposed* is ``None`` then :attr:`proxytype._exposed_` is "
"used instead if it exists.)  In the case where no exposed list is specified, "
"all \"public methods\" of the shared object will be accessible.  (Here a "
"\"public method\" means any attribute which has a :meth:`__call__` method "
"and whose name does not begin with ``'_'``.)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1226
msgid ""
"*method_to_typeid* is a mapping used to specify the return type of those "
"exposed methods which should return a proxy.  It maps method names to typeid "
"strings.  (If *method_to_typeid* is ``None`` then :attr:`proxytype."
"_method_to_typeid_` is used instead if it exists.)  If a method's name is "
"not a key of this mapping or if the mapping is ``None`` then the object "
"returned by the method will be copied by value."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1233
msgid ""
"*create_method* determines whether a method should be created with name "
"*typeid* which can be used to tell the server process to create a new shared "
"object and return a proxy for it.  By default it is ``True``."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1237
msgid ":class:`BaseManager` instances also have one read-only property:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1241
msgid "The address used by the manager."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1246
msgid ""
"A subclass of :class:`BaseManager` which can be used for the synchronization "
"of processes.  Objects of this type are returned by :func:`multiprocessing."
"Manager`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1250
msgid "It also supports creation of shared lists and dictionaries."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1254
msgid ""
"Create a shared :class:`threading.BoundedSemaphore` object and return a "
"proxy for it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1259
msgid ""
"Create a shared :class:`threading.Condition` object and return a proxy for "
"it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1262
msgid ""
"If *lock* is supplied then it should be a proxy for a :class:`threading."
"Lock` or :class:`threading.RLock` object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1267
msgid ""
"Create a shared :class:`threading.Event` object and return a proxy for it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1271
msgid ""
"Create a shared :class:`threading.Lock` object and return a proxy for it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1275
msgid "Create a shared :class:`Namespace` object and return a proxy for it."
msgstr ""

# fda566bc10874d8da354c0a54dc131da
#: ../Doc/library/multiprocessing.rst:1279
msgid "Create a shared :class:`Queue.Queue` object and return a proxy for it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1283
msgid ""
"Create a shared :class:`threading.RLock` object and return a proxy for it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1287
msgid ""
"Create a shared :class:`threading.Semaphore` object and return a proxy for "
"it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1292
msgid "Create an array and return a proxy for it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1296
msgid ""
"Create an object with a writable ``value`` attribute and return a proxy for "
"it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1303
msgid "Create a shared ``dict`` object and return a proxy for it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1308
msgid "Create a shared ``list`` object and return a proxy for it."
msgstr ""

# 3fa2f206b63540ed84bfaae9b2c81cd3
#: ../Doc/library/multiprocessing.rst:1312
msgid ""
"Modifications to mutable values or items in dict and list proxies will not "
"be propagated through the manager, because the proxy has no way of knowing "
"when its values or items are modified.  To modify such an item, you can re-"
"assign the modified object to the container proxy::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1330
msgid "Namespace objects"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1332
msgid ""
"A namespace object has no public methods, but does have writable attributes. "
"Its representation shows the values of its attributes."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1335
msgid ""
"However, when using a proxy for a namespace object, an attribute beginning "
"with ``'_'`` will be an attribute of the proxy and not an attribute of the "
"referent:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1350
msgid "Customized managers"
msgstr ""

# e41c6093449e4ce4ad96ee707b1a53d4
#: ../Doc/library/multiprocessing.rst:1352
msgid ""
"To create one's own manager, one creates a subclass of :class:`BaseManager` "
"and uses the :meth:`~BaseManager.register` classmethod to register new types "
"or callables with the manager class.  For example::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1378
msgid "Using a remote manager"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1380
msgid ""
"It is possible to run a manager server on one machine and have clients use "
"it from other machines (assuming that the firewalls involved allow it)."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1383
msgid ""
"Running the following commands creates a server for a single shared queue "
"which remote clients can access::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1395
msgid "One client can access the server as follows::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1405
msgid "Another client can also use it::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1416
msgid ""
"Local processes can also access that queue, using the code from above on the "
"client to access it remotely::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1439
msgid "Proxy Objects"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1441
msgid ""
"A proxy is an object which *refers* to a shared object which lives "
"(presumably) in a different process.  The shared object is said to be the "
"*referent* of the proxy.  Multiple proxy objects may have the same referent."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1445
msgid ""
"A proxy object has methods which invoke corresponding methods of its "
"referent (although not every method of the referent will necessarily be "
"available through the proxy).  A proxy can usually be used in most of the "
"same ways that its referent can:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1464
msgid ""
"Notice that applying :func:`str` to a proxy will return the representation "
"of the referent, whereas applying :func:`repr` will return the "
"representation of the proxy."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1468
msgid ""
"An important feature of proxy objects is that they are picklable so they can "
"be passed between processes.  Note, however, that if a proxy is sent to the "
"corresponding manager's process then unpickling it will produce the referent "
"itself.  This means, for example, that one shared object can contain a "
"second:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1486
msgid ""
"The proxy types in :mod:`multiprocessing` do nothing to support comparisons "
"by value.  So, for instance, we have:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1494
msgid ""
"One should just use a copy of the referent instead when making comparisons."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1498
msgid "Proxy objects are instances of subclasses of :class:`BaseProxy`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1502
msgid "Call and return the result of a method of the proxy's referent."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1504
msgid ""
"If ``proxy`` is a proxy whose referent is ``obj`` then the expression ::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1508
msgid "will evaluate the expression ::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1512
msgid "in the manager's process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1514
msgid ""
"The returned value will be a copy of the result of the call or a proxy to a "
"new shared object -- see documentation for the *method_to_typeid* argument "
"of :meth:`BaseManager.register`."
msgstr ""

# acc6a1c1f787467e8440aa7465de7908
#: ../Doc/library/multiprocessing.rst:1518
msgid ""
"If an exception is raised by the call, then is re-raised by :meth:"
"`_callmethod`.  If some other exception is raised in the manager's process "
"then this is converted into a :exc:`RemoteError` exception and is raised by :"
"meth:`_callmethod`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1523
msgid ""
"Note in particular that an exception will be raised if *methodname* has not "
"been *exposed*"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1526
msgid "An example of the usage of :meth:`_callmethod`:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1542
msgid "Return a copy of the referent."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1544
msgid "If the referent is unpicklable then this will raise an exception."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1548
msgid "Return a representation of the proxy object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1552
msgid "Return the representation of the referent."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1556 ../Doc/library/optparse.rst:1479
msgid "Cleanup"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1558
msgid ""
"A proxy object uses a weakref callback so that when it gets garbage "
"collected it deregisters itself from the manager which owns its referent."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1561
msgid ""
"A shared object gets deleted from the manager process when there are no "
"longer any proxies referring to it."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1566
msgid "Process Pools"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1571
msgid ""
"One can create a pool of processes which will carry out tasks submitted to "
"it with the :class:`Pool` class."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1576
msgid ""
"A process pool object which controls a pool of worker processes to which "
"jobs can be submitted.  It supports asynchronous results with timeouts and "
"callbacks and has a parallel map implementation."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1580
msgid ""
"*processes* is the number of worker processes to use.  If *processes* is "
"``None`` then the number returned by :func:`cpu_count` is used.  If "
"*initializer* is not ``None`` then each worker process will call "
"``initializer(*initargs)`` when it starts."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1593
msgid ""
"Worker processes within a :class:`Pool` typically live for the complete "
"duration of the Pool's work queue. A frequent pattern found in other systems "
"(such as Apache, mod_wsgi, etc) to free resources held by workers is to "
"allow a worker within a pool to complete only a set amount of work before "
"being exiting, being cleaned up and a new process spawned to replace the old "
"one. The *maxtasksperchild* argument to the :class:`Pool` exposes this "
"ability to the end user."
msgstr ""

# d9f75c6c8f78476d9f17dfdbe16c658b
#: ../Doc/library/multiprocessing.rst:1603
msgid ""
"Equivalent of the :func:`apply` built-in function.  It blocks until the "
"result is ready, so :meth:`apply_async` is better suited for performing work "
"in parallel. Additionally, *func* is only executed in one of the workers of "
"the pool."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1610
msgid "A variant of the :meth:`apply` method which returns a result object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1612
#: ../Doc/library/multiprocessing.rst:1630
msgid ""
"If *callback* is specified then it should be a callable which accepts a "
"single argument.  When the result becomes ready *callback* is applied to it "
"(unless the call failed).  *callback* should complete immediately since "
"otherwise the thread which handles the results will get blocked."
msgstr ""

# 32a6b43e24c8494e8d67c8bf02e94295
#: ../Doc/library/multiprocessing.rst:1619
msgid ""
"A parallel equivalent of the :func:`map` built-in function (it supports only "
"one *iterable* argument though).  It blocks until the result is ready."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1622
msgid ""
"This method chops the iterable into a number of chunks which it submits to "
"the process pool as separate tasks.  The (approximate) size of these chunks "
"can be specified by setting *chunksize* to a positive integer."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1628
msgid "A variant of the :meth:`.map` method which returns a result object."
msgstr ""

# 4dbc8385f86245b3990a9e77af6efa17
#: ../Doc/library/multiprocessing.rst:1637
msgid "An equivalent of :func:`itertools.imap`."
msgstr ""

# ac66feae71ee4026a32895545b8f9f9d
#: ../Doc/library/multiprocessing.rst:1639
msgid ""
"The *chunksize* argument is the same as the one used by the :meth:`.map` "
"method.  For very long iterables using a large value for *chunksize* can "
"make the job complete **much** faster than using the default value of ``1``."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1644
msgid ""
"Also if *chunksize* is ``1`` then the :meth:`!next` method of the iterator "
"returned by the :meth:`imap` method has an optional *timeout* parameter: "
"``next(timeout)`` will raise :exc:`multiprocessing.TimeoutError` if the "
"result cannot be returned within *timeout* seconds."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1651
msgid ""
"The same as :meth:`imap` except that the ordering of the results from the "
"returned iterator should be considered arbitrary.  (Only when there is only "
"one worker process is the order guaranteed to be \"correct\".)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1657
msgid ""
"Prevents any more tasks from being submitted to the pool.  Once all the "
"tasks have been completed the worker processes will exit."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1662
msgid ""
"Stops the worker processes immediately without completing outstanding work.  "
"When the pool object is garbage collected :meth:`terminate` will be called "
"immediately."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1668
msgid ""
"Wait for the worker processes to exit.  One must call :meth:`close` or :meth:"
"`terminate` before using :meth:`join`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1674
msgid ""
"The class of the result returned by :meth:`Pool.apply_async` and :meth:`Pool."
"map_async`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1679
msgid ""
"Return the result when it arrives.  If *timeout* is not ``None`` and the "
"result does not arrive within *timeout* seconds then :exc:`multiprocessing."
"TimeoutError` is raised.  If the remote call raised an exception then that "
"exception will be reraised by :meth:`get`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1686
msgid "Wait until the result is available or until *timeout* seconds pass."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1690
msgid "Return whether the call has completed."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1694
msgid ""
"Return whether the call completed without raising an exception.  Will raise :"
"exc:`AssertionError` if the result is not ready."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1697
msgid "The following example demonstrates the use of a pool::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1725
msgid "Listeners and Clients"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1730
msgid ""
"Usually message passing between processes is done using queues or by using :"
"class:`Connection` objects returned by :func:`Pipe`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1733
msgid ""
"However, the :mod:`multiprocessing.connection` module allows some extra "
"flexibility.  It basically gives a high level message oriented API for "
"dealing with sockets or Windows named pipes, and also has support for "
"*digest authentication* using the :mod:`hmac` module."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1741
msgid ""
"Send a randomly generated message to the other end of the connection and "
"wait for a reply."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1744
msgid ""
"If the reply matches the digest of the message using *authkey* as the key "
"then a welcome message is sent to the other end of the connection.  "
"Otherwise :exc:`AuthenticationError` is raised."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1750
msgid ""
"Receive a message, calculate the digest of the message using *authkey* as "
"the key, and then send the digest back."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1753
msgid ""
"If a welcome message is not received, then :exc:`AuthenticationError` is "
"raised."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1758
msgid ""
"Attempt to set up a connection to the listener which is using address "
"*address*, returning a :class:`~multiprocessing.Connection`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1761
msgid ""
"The type of the connection is determined by *family* argument, but this can "
"generally be omitted since it can usually be inferred from the format of "
"*address*. (See :ref:`multiprocessing-address-formats`)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1765
msgid ""
"If *authenticate* is ``True`` or *authkey* is a string then digest "
"authentication is used.  The key used for authentication will be either "
"*authkey* or ``current_process().authkey)`` if *authkey* is ``None``. If "
"authentication fails then :exc:`AuthenticationError` is raised.  See :ref:"
"`multiprocessing-auth-keys`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1773
msgid ""
"A wrapper for a bound socket or Windows named pipe which is 'listening' for "
"connections."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1776
msgid ""
"*address* is the address to be used by the bound socket or named pipe of the "
"listener object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1781
msgid ""
"If an address of '0.0.0.0' is used, the address will not be a connectable "
"end point on Windows. If you require a connectable end-point, you should use "
"'127.0.0.1'."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1785
msgid ""
"*family* is the type of socket (or named pipe) to use.  This can be one of "
"the strings ``'AF_INET'`` (for a TCP socket), ``'AF_UNIX'`` (for a Unix "
"domain socket) or ``'AF_PIPE'`` (for a Windows named pipe).  Of these only "
"the first is guaranteed to be available.  If *family* is ``None`` then the "
"family is inferred from the format of *address*.  If *address* is also "
"``None`` then a default is chosen.  This default is the family which is "
"assumed to be the fastest available.  See :ref:`multiprocessing-address-"
"formats`.  Note that if *family* is ``'AF_UNIX'`` and address is ``None`` "
"then the socket will be created in a private temporary directory created "
"using :func:`tempfile.mkstemp`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1796
msgid ""
"If the listener object uses a socket then *backlog* (1 by default) is passed "
"to the :meth:`listen` method of the socket once it has been bound."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1799
msgid ""
"If *authenticate* is ``True`` (``False`` by default) or *authkey* is not "
"``None`` then digest authentication is used."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1802
msgid ""
"If *authkey* is a string then it will be used as the authentication key; "
"otherwise it must be *None*."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1805
msgid ""
"If *authkey* is ``None`` and *authenticate* is ``True`` then "
"``current_process().authkey`` is used as the authentication key.  If "
"*authkey* is ``None`` and *authenticate* is ``False`` then no authentication "
"is done.  If authentication fails then :exc:`AuthenticationError` is "
"raised.  See :ref:`multiprocessing-auth-keys`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1813
msgid ""
"Accept a connection on the bound socket or named pipe of the listener object "
"and return a :class:`Connection` object.  If authentication is attempted and "
"fails, then :exc:`AuthenticationError` is raised."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1819
msgid ""
"Close the bound socket or named pipe of the listener object.  This is called "
"automatically when the listener is garbage collected.  However it is "
"advisable to call it explicitly."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1823
msgid "Listener objects have the following read-only properties:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1827
msgid "The address which is being used by the Listener object."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1831
msgid ""
"The address from which the last accepted connection came.  If this is "
"unavailable then it is ``None``."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1835
msgid "The module defines two exceptions:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1839
msgid "Exception raised when there is an authentication error."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1842
msgid "**Examples**"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1844
msgid ""
"The following server code creates a listener which uses ``'secret "
"password'`` as an authentication key.  It then waits for a connection and "
"sends some data to the client::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1866
msgid ""
"The following code connects to the server and receives some data from the "
"server::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1889
msgid "Address Formats"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1891
msgid ""
"An ``'AF_INET'`` address is a tuple of the form ``(hostname, port)`` where "
"*hostname* is a string and *port* is an integer."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1894
msgid ""
"An ``'AF_UNIX'`` address is a string representing a filename on the "
"filesystem."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1898
msgid ""
":samp:`r'\\\\\\\\.\\\\pipe\\\\{PipeName}'`.  To use :func:`Client` to "
"connect to a named pipe on a remote computer called *ServerName* one should "
"use an address of the form :samp:`r'\\\\\\\\{ServerName}\\\\pipe\\"
"\\{PipeName}'` instead."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1902
msgid ""
"Note that any string beginning with two backslashes is assumed by default to "
"be an ``'AF_PIPE'`` address rather than an ``'AF_UNIX'`` address."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1909
msgid "Authentication keys"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1911
msgid ""
"When one uses :meth:`Connection.recv`, the data received is automatically "
"unpickled.  Unfortunately unpickling data from an untrusted source is a "
"security risk.  Therefore :class:`Listener` and :func:`Client` use the :mod:"
"`hmac` module to provide digest authentication."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1916
msgid ""
"An authentication key is a string which can be thought of as a password: "
"once a connection is established both ends will demand proof that the other "
"knows the authentication key.  (Demonstrating that both ends are using the "
"same key does **not** involve sending the key over the connection.)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1921
msgid ""
"If authentication is requested but do authentication key is specified then "
"the return value of ``current_process().authkey`` is used (see :class:"
"`~multiprocessing.Process`).  This value will automatically inherited by "
"any :class:`~multiprocessing.Process` object that the current process "
"creates. This means that (by default) all processes of a multi-process "
"program will share a single authentication key which can be used when "
"setting up connections between themselves."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1929
msgid ""
"Suitable authentication keys can also be generated by using :func:`os."
"urandom`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1933
msgid "Logging"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1935
msgid ""
"Some support for logging is available.  Note, however, that the :mod:"
"`logging` package does not use process shared locks so it is possible "
"(depending on the handler type) for messages from different processes to get "
"mixed up."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1942
msgid ""
"Returns the logger used by :mod:`multiprocessing`.  If necessary, a new one "
"will be created."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1945
msgid ""
"When first created the logger has level :data:`logging.NOTSET` and no "
"default handler. Messages sent to this logger will not by default propagate "
"to the root logger."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1949
msgid ""
"Note that on Windows child processes will only inherit the level of the "
"parent process's logger -- any other customization of the logger will not be "
"inherited."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1956
msgid ""
"This function performs a call to :func:`get_logger` but in addition to "
"returning the logger created by get_logger, it adds a handler which sends "
"output to :data:`sys.stderr` using format ``'[%(levelname)s/%(processName)s] "
"%(message)s'``."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1961
msgid "Below is an example session with logging turned on::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1976
msgid ""
"In addition to having these two logging functions, the multiprocessing also "
"exposes two additional logging level attributes. These are  :const:"
"`SUBWARNING` and :const:`SUBDEBUG`. The table below illustrates where theses "
"fit in the normal level hierarchy."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1982
msgid "Level"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1982
msgid "Numeric value"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1984
msgid "``SUBWARNING``"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1984
msgid "25"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1986
msgid "``SUBDEBUG``"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1986 ../Doc/library/pwd.rst:30
#: ../Doc/library/spwd.rst:37 ../Doc/library/time.rst:413
#: ../Doc/library/urlparse.rst:106
msgid "5"
msgstr ""

#: ../Doc/library/multiprocessing.rst:1989
msgid "For a full table of logging levels, see the :mod:`logging` module."
msgstr ""

#: ../Doc/library/multiprocessing.rst:1991
msgid ""
"These additional logging levels are used primarily for certain debug "
"messages within the multiprocessing module. Below is the same example as "
"above, except with :const:`SUBDEBUG` enabled::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2015
msgid "The :mod:`multiprocessing.dummy` module"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2020
msgid ""
":mod:`multiprocessing.dummy` replicates the API of :mod:`multiprocessing` "
"but is no more than a wrapper around the :mod:`threading` module."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2027
msgid "Programming guidelines"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2029
msgid ""
"There are certain guidelines and idioms which should be adhered to when "
"using :mod:`multiprocessing`."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2034
msgid "All platforms"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2036
msgid "Avoid shared state"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2038
msgid ""
"As far as possible one should try to avoid shifting large amounts of data "
"between processes."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2041
msgid ""
"It is probably best to stick to using queues or pipes for communication "
"between processes rather than using the lower level synchronization "
"primitives from the :mod:`threading` module."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2045
msgid "Picklability"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2047
msgid "Ensure that the arguments to the methods of proxies are picklable."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2049
msgid "Thread safety of proxies"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2051
msgid ""
"Do not use a proxy object from more than one thread unless you protect it "
"with a lock."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2054
msgid ""
"(There is never a problem with different processes using the *same* proxy.)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2056
msgid "Joining zombie processes"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2058
msgid ""
"On Unix when a process finishes but has not been joined it becomes a zombie. "
"There should never be very many because each time a new process starts (or :"
"func:`active_children` is called) all completed processes which have not yet "
"been joined will be joined.  Also calling a finished process's :meth:"
"`Process.is_alive` will join the process.  Even so it is probably good "
"practice to explicitly join all the processes that you start."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2065
msgid "Better to inherit than pickle/unpickle"
msgstr ""

# 7e8408fbf97c4d6da6e2701fdc9de3d4
#: ../Doc/library/multiprocessing.rst:2067
msgid ""
"On Windows many types from :mod:`multiprocessing` need to be picklable so "
"that child processes can use them.  However, one should generally avoid "
"sending shared objects to other processes using pipes or queues.  Instead "
"you should arrange the program so that a process which needs access to a "
"shared resource created elsewhere can inherit it from an ancestor process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2073
msgid "Avoid terminating processes"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2075
msgid ""
"Using the :meth:`Process.terminate` method to stop a process is liable to "
"cause any shared resources (such as locks, semaphores, pipes and queues) "
"currently being used by the process to become broken or unavailable to other "
"processes."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2080
msgid ""
"Therefore it is probably best to only consider using :meth:`Process."
"terminate` on processes which never use any shared resources."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2083
msgid "Joining processes that use queues"
msgstr ""

# 61556cada30c41aea7111ff8b26576a9
#: ../Doc/library/multiprocessing.rst:2085
msgid ""
"Bear in mind that a process that has put items in a queue will wait before "
"terminating until all the buffered items are fed by the \"feeder\" thread to "
"the underlying pipe.  (The child process can call the :meth:"
"`~multiprocessing.Queue.cancel_join_thread` method of the queue to avoid "
"this behaviour.)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2090
msgid ""
"This means that whenever you use a queue you need to make sure that all "
"items which have been put on the queue will eventually be removed before the "
"process is joined.  Otherwise you cannot be sure that processes which have "
"put items on the queue will terminate.  Remember also that non-daemonic "
"processes will be automatically be joined."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2096
msgid "An example which will deadlock is the following::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2110
msgid ""
"A fix here would be to swap the last two lines round (or simply remove the "
"``p.join()`` line)."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2113
msgid "Explicitly pass resources to child processes"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2115
msgid ""
"On Unix a child process can make use of a shared resource created in a "
"parent process using a global resource.  However, it is better to pass the "
"object as an argument to the constructor for the child process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2119
msgid ""
"Apart from making the code (potentially) compatible with Windows this also "
"ensures that as long as the child process is still alive the object will not "
"be garbage collected in the parent process.  This might be important if some "
"resource is freed when the object is garbage collected in the parent process."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2125
msgid "So for instance ::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2137
msgid "should be rewritten as ::"
msgstr ""

# 9f9525ade76b45e2a1bee1eba4a0abce
#: ../Doc/library/multiprocessing.rst:2149
msgid "Beware of replacing :data:`sys.stdin` with a \"file like object\""
msgstr ""

#: ../Doc/library/multiprocessing.rst:2151
msgid ":mod:`multiprocessing` originally unconditionally called::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2155
msgid ""
"in the :meth:`multiprocessing.Process._bootstrap` method --- this resulted "
"in issues with processes-in-processes. This has been changed to::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2161
msgid ""
"Which solves the fundamental issue of processes colliding with each other "
"resulting in a bad file descriptor error, but introduces a potential danger "
"to applications which replace :func:`sys.stdin` with a \"file-like object\" "
"with output buffering.  This danger is that if multiple processes call :func:"
"`close()` on this file-like object, it could result in the same data being "
"flushed to the object multiple times, resulting in corruption."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2168
msgid ""
"If you write a file-like object and implement your own caching, you can make "
"it fork-safe by storing the pid whenever you append to the cache, and "
"discarding the cache when the pid changes. For example::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2180
msgid ""
"For more information, see :issue:`5155`, :issue:`5313` and :issue:`5331`"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2183 ../Doc/library/socket.rst:638
#: ../Doc/library/sys.rst:755
msgid "Windows"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2185
msgid "Since Windows lacks :func:`os.fork` it has a few extra restrictions:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2187
msgid "More picklability"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2189
msgid ""
"Ensure that all arguments to :meth:`Process.__init__` are picklable.  This "
"means, in particular, that bound or unbound methods cannot be used directly "
"as the ``target`` argument on Windows --- just define a function and use "
"that instead."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2194
msgid ""
"Also, if you subclass :class:`Process` then make sure that instances will be "
"picklable when the :meth:`Process.start` method is called."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2197
msgid "Global variables"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2199
msgid ""
"Bear in mind that if code run in a child process tries to access a global "
"variable, then the value it sees (if any) may not be the same as the value "
"in the parent process at the time that :meth:`Process.start` was called."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2203
msgid ""
"However, global variables which are just module level constants cause no "
"problems."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2206
msgid "Safe importing of main module"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2208
msgid ""
"Make sure that the main module can be safely imported by a new Python "
"interpreter without causing unintended side effects (such a starting a new "
"process)."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2212
msgid ""
"For example, under Windows running the following module would fail with a :"
"exc:`RuntimeError`::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2223
msgid ""
"Instead one should protect the \"entry point\" of the program by using ``if "
"__name__ == '__main__':`` as follows::"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2236
msgid ""
"(The ``freeze_support()`` line can be omitted if the program will be run "
"normally instead of frozen.)"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2239
msgid ""
"This allows the newly spawned Python interpreter to safely import the module "
"and then run the module's ``foo()`` function."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2242
msgid ""
"Similar restrictions apply if a pool or manager is created in the main "
"module."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2251
msgid "Demonstration of how to create and use customized managers and proxies:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2256
msgid "Using :class:`Pool`:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2261
msgid "Synchronization types like locks, conditions and queues:"
msgstr ""

# 3d0cc39f95924aeab34f42cece0c46cb
#: ../Doc/library/multiprocessing.rst:2266
msgid ""
"An example showing how to use queues to feed tasks to a collection of worker "
"processes and collect the results:"
msgstr ""

#: ../Doc/library/multiprocessing.rst:2272
msgid ""
"An example of how a pool of worker processes can each run a :class:"
"`SimpleHTTPServer.HttpServer` instance while sharing a single listening "
"socket."
msgstr ""

#: ../Doc/library/multiprocessing.rst:2279
msgid ""
"Some simple benchmarks comparing :mod:`multiprocessing` with :mod:"
"`threading`:"
msgstr ""

# 467f2d892c7b4456b9b40f4446550c86
#: ../Doc/library/mutex.rst:3
msgid ":mod:`mutex` --- Mutual exclusion support"
msgstr ""

# 46cb3fab2f2448baa9369f02194e49e3
#: ../Doc/library/mutex.rst:15
msgid ""
"The :mod:`mutex` module defines a class that allows mutual-exclusion via "
"acquiring and releasing locks. It does not require (or imply) :mod:"
"`threading` or multi-tasking, though it could be useful for those purposes."
msgstr ""

# ab087c88026a44bba8949cc7e76b95b7
#: ../Doc/library/mutex.rst:20
msgid "The :mod:`mutex` module defines the following class:"
msgstr ""

# ac1ef10da7104e24987bfdae9c51bce3
#: ../Doc/library/mutex.rst:25
msgid "Create a new (unlocked) mutex."
msgstr ""

# 066e045e1182466a9f03881c02360455
#: ../Doc/library/mutex.rst:27
msgid ""
"A mutex has two pieces of state --- a \"locked\" bit and a queue. When the "
"mutex is not locked, the queue is empty. Otherwise, the queue contains zero "
"or more ``(function, argument)`` pairs representing functions (or methods) "
"waiting to acquire the lock. When the mutex is unlocked while the queue is "
"not empty, the first queue entry is removed and its  ``function(argument)`` "
"pair called, implying it now has the lock."
msgstr ""

# 6b18dfe0ee3e4b63946bd51f87b46b6e
#: ../Doc/library/mutex.rst:34
msgid ""
"Of course, no multi-threading is implied -- hence the funny interface for :"
"meth:`lock`, where a function is called once the lock is acquired."
msgstr ""

# 6c9917ba55b84e059566471c21a255eb
#: ../Doc/library/mutex.rst:41
msgid "Mutex Objects"
msgstr ""

# a417794cd05f47d1a7c691d0e9f54441
#: ../Doc/library/mutex.rst:43
msgid ":class:`mutex` objects have following methods:"
msgstr ""

# 2739eabd269a48f1b25e38c16166827a
#: ../Doc/library/mutex.rst:48
msgid "Check whether the mutex is locked."
msgstr ""

# ff68bd08d85d42c2a7f5ef0c38a12bb7
#: ../Doc/library/mutex.rst:53
msgid ""
"\"Atomic\" test-and-set, grab the lock if it is not set, and return "
"``True``, otherwise, return ``False``."
msgstr ""

# efc2e2fad8744dfb961d48ea188bbe7d
#: ../Doc/library/mutex.rst:59
msgid ""
"Execute ``function(argument)``, unless the mutex is locked. In the case it "
"is locked, place the function and argument on the queue. See :meth:`unlock` "
"for explanation of when ``function(argument)`` is executed in that case."
msgstr ""

# cb4d769d83e64af087e6d037c8a85046
#: ../Doc/library/mutex.rst:66
msgid ""
"Unlock the mutex if queue is empty, otherwise execute the first element in "
"the queue."
msgstr ""

#: ../Doc/library/netdata.rst:6
msgid "Internet Data Handling"
msgstr ""

#: ../Doc/library/netdata.rst:8
msgid ""
"This chapter describes modules which support handling data formats commonly "
"used on the Internet."
msgstr ""

#: ../Doc/library/netrc.rst:3
msgid ":mod:`netrc` --- netrc file processing"
msgstr ""

# 7241a6b808754567927a01c2bc60ee03
#: ../Doc/library/netrc.rst:13
msgid "**Source code:** :source:`Lib/netrc.py`"
msgstr ""

#: ../Doc/library/netrc.rst:17
msgid ""
"The :class:`netrc` class parses and encapsulates the netrc file format used "
"by the Unix :program:`ftp` program and other FTP clients."
msgstr ""

#: ../Doc/library/netrc.rst:23
msgid ""
"A :class:`netrc` instance or subclass instance encapsulates data from  a "
"netrc file.  The initialization argument, if present, specifies the file to "
"parse.  If no argument is given, the file :file:`.netrc` in the user's home "
"directory will be read.  Parse errors will raise :exc:`NetrcParseError` with "
"diagnostic information including the file name, line number, and terminating "
"token."
msgstr ""

#: ../Doc/library/netrc.rst:32
msgid ""
"Exception raised by the :class:`netrc` class when syntactical errors are "
"encountered in source text.  Instances of this exception provide three "
"interesting attributes:  :attr:`msg` is a textual explanation of the error, :"
"attr:`filename` is the name of the source file, and :attr:`lineno` gives the "
"line number on which the error was found."
msgstr ""

#: ../Doc/library/netrc.rst:42
msgid "netrc Objects"
msgstr ""

#: ../Doc/library/netrc.rst:44
msgid "A :class:`netrc` instance has the following methods:"
msgstr ""

#: ../Doc/library/netrc.rst:49
msgid ""
"Return a 3-tuple ``(login, account, password)`` of authenticators for "
"*host*. If the netrc file did not contain an entry for the given host, "
"return the tuple associated with the 'default' entry.  If neither matching "
"host nor default entry is available, return ``None``."
msgstr ""

#: ../Doc/library/netrc.rst:57
msgid ""
"Dump the class data as a string in the format of a netrc file. (This "
"discards comments and may reorder the entries.)"
msgstr ""

#: ../Doc/library/netrc.rst:60
msgid "Instances of :class:`netrc` have public instance variables:"
msgstr ""

#: ../Doc/library/netrc.rst:65
msgid ""
"Dictionary mapping host names to ``(login, account, password)`` tuples.  The "
"'default' entry, if any, is represented as a pseudo-host by that name."
msgstr ""

#: ../Doc/library/netrc.rst:71
msgid "Dictionary mapping macro names to string lists."
msgstr ""

# 37c6318dde0b4118862df5cff7df4a73
#: ../Doc/library/netrc.rst:75
msgid ""
"Passwords are limited to a subset of the ASCII character set. Versions of "
"this module prior to 2.3 were extremely limited.  Starting with 2.3, all "
"ASCII punctuation is allowed in passwords.  However, note that whitespace "
"and non-printable characters are not allowed in passwords.  This is a "
"limitation of the way the .netrc file is parsed and may be removed in the "
"future."
msgstr ""

# fe15cd331f8c40e5bd3ccfcf4cead1bb
#: ../Doc/library/new.rst:2
msgid ":mod:`new` --- Creation of runtime internal objects"
msgstr ""

# 49efc67b663f49f0bd9d19b46c0fb8e2
#: ../Doc/library/new.rst:15
msgid ""
"The :mod:`new` module allows an interface to the interpreter object creation "
"functions. This is for use primarily in marshal-type functions, when a new "
"object needs to be created \"magically\" and not by using the regular "
"creation functions. This module provides a low-level interface to the "
"interpreter, so care must be exercised when using this module. It is "
"possible to supply non-sensical arguments which crash the interpreter when "
"the object is used."
msgstr ""

# 65621acd499b4932851a1619551fb5dd
#: ../Doc/library/new.rst:22
msgid "The :mod:`new` module defines the following functions:"
msgstr ""

# e99434b989fe47e9aa6d38b6590b4d65
#: ../Doc/library/new.rst:27
msgid ""
"This function creates an instance of *class* with dictionary *dict* without "
"calling the :meth:`__init__` constructor.  If *dict* is omitted or ``None``, "
"a new, empty dictionary is created for the new instance.  Note that there "
"are no guarantees that the object will be in a consistent state."
msgstr ""

# 5d2917a241cd49c482a2f4221b07dea3
#: ../Doc/library/new.rst:35
msgid ""
"This function will return a method object, bound to *instance*, or unbound "
"if *instance* is ``None``.  *function* must be callable."
msgstr ""

# c28d34b1c84d48568218881c9ae2654f
#: ../Doc/library/new.rst:41
msgid ""
"Returns a (Python) function with the given code and globals. If *name* is "
"given, it must be a string or ``None``.  If it is a string, the function "
"will have the given name, otherwise the function name will be taken from "
"``code.co_name``.  If *argdefs* is given, it must be a tuple and will be "
"used to determine the default values of parameters.  If *closure* is given, "
"it must be ``None`` or a tuple of cell objects containing objects to bind to "
"the names in ``code.co_freevars``."
msgstr ""

# fee5217c43eb422daa05bc1bea4d83fa
#: ../Doc/library/new.rst:51
msgid "This function is an interface to the :c:func:`PyCode_New` C function."
msgstr ""

# 50f8bbc1b58344259e5d88a3a2b9378b
#: ../Doc/library/new.rst:58
msgid ""
"This function returns a new module object with name *name*. *name* must be a "
"string. The optional *doc* argument can have any type."
msgstr ""

# d1b4230d21084da796f8e98f13ec7aae
#: ../Doc/library/new.rst:64
msgid ""
"This function returns a new class object, with name *name*, derived from "
"*baseclasses* (which should be a tuple of classes) and with namespace *dict*."
msgstr ""

#: ../Doc/library/nis.rst:3
msgid ":mod:`nis` --- Interface to Sun's NIS (Yellow Pages)"
msgstr ""

#: ../Doc/library/nis.rst:12
msgid ""
"The :mod:`nis` module gives a thin wrapper around the NIS library, useful "
"for central administration of several hosts."
msgstr ""

#: ../Doc/library/nis.rst:15
msgid ""
"Because NIS exists only on Unix systems, this module is only available for "
"Unix."
msgstr ""

#: ../Doc/library/nis.rst:17
msgid "The :mod:`nis` module defines the following functions:"
msgstr ""

#: ../Doc/library/nis.rst:22
msgid ""
"Return the match for *key* in map *mapname*, or raise an error (:exc:`nis."
"error`) if there is none. Both should be strings, *key* is 8-bit clean. "
"Return value is an arbitrary array of bytes (may contain ``NULL`` and other "
"joys)."
msgstr ""

#: ../Doc/library/nis.rst:27 ../Doc/library/nis.rst:40
msgid "Note that *mapname* is first checked if it is an alias to another name."
msgstr ""

#: ../Doc/library/nis.rst:36
msgid ""
"Return a dictionary mapping *key* to *value* such that ``match(key, mapname)"
"==value``. Note that both keys and values of the dictionary are arbitrary "
"arrays of bytes."
msgstr ""

#: ../Doc/library/nis.rst:49
msgid "Return a list of all valid maps."
msgstr ""

#: ../Doc/library/nis.rst:58
msgid "Return the system default NIS domain."
msgstr ""

#: ../Doc/library/nis.rst:62
msgid "The :mod:`nis` module defines the following exception:"
msgstr ""

#: ../Doc/library/nis.rst:67
msgid "An error raised when a NIS function returns an error code."
msgstr ""

#: ../Doc/library/nntplib.rst:3
msgid ":mod:`nntplib` --- NNTP protocol client"
msgstr ""

# cbf3d5a57a1745c089e201fc75198762
#: ../Doc/library/nntplib.rst:13
msgid "**Source code:** :source:`Lib/nntplib.py`"
msgstr ""

#: ../Doc/library/nntplib.rst:17
msgid ""
"This module defines the class :class:`NNTP` which implements the client side "
"of the NNTP protocol.  It can be used to implement a news reader or poster, "
"or automated news processors.  For more information on NNTP (Network News "
"Transfer Protocol), see Internet :rfc:`977`."
msgstr ""

#: ../Doc/library/nntplib.rst:22
msgid ""
"Here are two small examples of how it can be used.  To list some statistics "
"about a newsgroup and print the subjects of the last 10 articles::"
msgstr ""

# 0a2193a5df6448d39c41b65475a15d9d
#: ../Doc/library/nntplib.rst:45
msgid ""
"To post an article from a file (this assumes that the article has valid "
"headers, and that you have right to post on the particular newsgroup)::"
msgstr ""

#: ../Doc/library/nntplib.rst:55
msgid "The module itself defines the following items:"
msgstr ""

#: ../Doc/library/nntplib.rst:60
msgid ""
"Return a new instance of the :class:`NNTP` class, representing a connection "
"to the NNTP server running on host *host*, listening at port *port*.  The "
"default *port* is 119.  If the optional *user* and *password* are provided, "
"or if suitable credentials are present in :file:`/.netrc` and the optional "
"flag *usenetrc* is true (the default), the ``AUTHINFO USER`` and ``AUTHINFO "
"PASS`` commands are used to identify and authenticate the user to the "
"server. If the optional flag *readermode* is true, then a ``mode reader`` "
"command is sent before authentication is performed.  Reader mode is "
"sometimes necessary if you are connecting to an NNTP server on the local "
"machine and intend to call reader-specific commands, such as ``group``.  If "
"you get unexpected :exc:`NNTPPermanentError`\\ s, you might need to set "
"*readermode*. *readermode* defaults to ``None``. *usenetrc* defaults to "
"``True``."
msgstr ""

#: ../Doc/library/nntplib.rst:79
msgid ""
"Derived from the standard exception :exc:`Exception`, this is the base class "
"for all exceptions raised by the :mod:`nntplib` module."
msgstr ""

#: ../Doc/library/nntplib.rst:85
msgid ""
"Exception raised when an unexpected reply is received from the server.  For "
"backwards compatibility, the exception ``error_reply`` is equivalent to this "
"class."
msgstr ""

#: ../Doc/library/nntplib.rst:92
msgid ""
"Exception raised when an error code in the range 400--499 is received.  For "
"backwards compatibility, the exception ``error_temp`` is equivalent to this "
"class."
msgstr ""

#: ../Doc/library/nntplib.rst:99
msgid ""
"Exception raised when an error code in the range 500--599 is received.  For "
"backwards compatibility, the exception ``error_perm`` is equivalent to this "
"class."
msgstr ""

#: ../Doc/library/nntplib.rst:106
msgid ""
"Exception raised when a reply is received from the server that does not "
"begin with a digit in the range 1--5.  For backwards compatibility, the "
"exception ``error_proto`` is equivalent to this class."
msgstr ""

#: ../Doc/library/nntplib.rst:113
msgid ""
"Exception raised when there is some error in the response data.  For "
"backwards compatibility, the exception ``error_data`` is equivalent to this "
"class."
msgstr ""

#: ../Doc/library/nntplib.rst:120
msgid "NNTP Objects"
msgstr ""

#: ../Doc/library/nntplib.rst:122
msgid ""
"NNTP instances have the following methods.  The *response* that is returned "
"as the first item in the return tuple of almost all methods is the server's "
"response: a string beginning with a three-digit code. If the server's "
"response indicates an error, the method raises one of the above exceptions."
msgstr ""

#: ../Doc/library/nntplib.rst:137
msgid ""
"Set the instance's debugging level.  This controls the amount of debugging "
"output printed.  The default, ``0``, produces no debugging output.  A value "
"of ``1`` produces a moderate amount of debugging output, generally a single "
"line per request or response.  A value of ``2`` or higher produces the "
"maximum amount of debugging output, logging each line sent and received on "
"the connection (including message text)."
msgstr ""

#: ../Doc/library/nntplib.rst:147
msgid ""
"Send a ``NEWGROUPS`` command.  The *date* argument should be a string of the "
"form ``'yymmdd'`` indicating the date, and *time* should be a string of the "
"form ``'hhmmss'`` indicating the time.  Return a pair ``(response, groups)`` "
"where *groups* is a list of group names that are new since the given date "
"and time. If the *file* parameter is supplied, then the output of the  "
"``NEWGROUPS`` command is stored in a file.  If *file* is a string,  then the "
"method will open a file object with that name, write to it  then close it.  "
"If *file* is a file object, then it will start calling :meth:`write` on it "
"to store the lines of the command output. If *file* is supplied, then the "
"returned *list* is an empty list."
msgstr ""

#: ../Doc/library/nntplib.rst:160
msgid ""
"Send a ``NEWNEWS`` command.  Here, *group* is a group name or ``'*'``, and "
"*date* and *time* have the same meaning as for :meth:`newgroups`.  Return a "
"pair ``(response, articles)`` where *articles* is a list of message ids. If "
"the *file* parameter is supplied, then the output of the  ``NEWNEWS`` "
"command is stored in a file.  If *file* is a string,  then the method will "
"open a file object with that name, write to it  then close it.  If *file* is "
"a file object, then it will start calling :meth:`write` on it to store the "
"lines of the command output. If *file* is supplied, then the returned *list* "
"is an empty list."
msgstr ""

#: ../Doc/library/nntplib.rst:172
msgid ""
"Send a ``LIST`` command.  Return a pair ``(response, list)`` where *list* is "
"a list of tuples.  Each tuple has the form ``(group, last, first, flag)``, "
"where *group* is a group name, *last* and *first* are the last and first "
"article numbers (as strings), and *flag* is ``'y'`` if posting is allowed, "
"``'n'`` if not, and ``'m'`` if the newsgroup is moderated.  (Note the "
"ordering: *last*, *first*.) If the *file* parameter is supplied, then the "
"output of the  ``LIST`` command is stored in a file.  If *file* is a "
"string,  then the method will open a file object with that name, write to "
"it  then close it.  If *file* is a file object, then it will start calling :"
"meth:`write` on it to store the lines of the command output. If *file* is "
"supplied, then the returned *list* is an empty list."
msgstr ""

#: ../Doc/library/nntplib.rst:187
msgid ""
"Send a ``LIST NEWSGROUPS`` command, where *grouppattern* is a wildmat string "
"as specified in RFC2980 (it's essentially the same as DOS or UNIX shell "
"wildcard strings).  Return a pair ``(response, list)``, where *list* is a "
"list of tuples containing ``(name, title)``."
msgstr ""

#: ../Doc/library/nntplib.rst:197
msgid ""
"Get a description for a single group *group*.  If more than one group "
"matches (if 'group' is a real wildmat string), return the first match.   If "
"no group matches, return an empty string."
msgstr ""

#: ../Doc/library/nntplib.rst:201
msgid ""
"This elides the response code from the server.  If the response code is "
"needed, use :meth:`descriptions`."
msgstr ""

#: ../Doc/library/nntplib.rst:209
msgid ""
"Send a ``GROUP`` command, where *name* is the group name. Return a tuple ``"
"(response, count, first, last, name)`` where *count* is the (estimated) "
"number of articles in the group, *first* is the first article number in the "
"group, *last* is the last article number in the group, and *name* is the "
"group name. The numbers are returned as strings."
msgstr ""

#: ../Doc/library/nntplib.rst:218
msgid ""
"Send a ``HELP`` command.  Return a pair ``(response, list)`` where *list* is "
"a list of help strings. If the *file* parameter is supplied, then the output "
"of the  ``HELP`` command is stored in a file.  If *file* is a string,  then "
"the method will open a file object with that name, write to it  then close "
"it.  If *file* is a file object, then it will start calling :meth:`write` on "
"it to store the lines of the command output. If *file* is supplied, then the "
"returned *list* is an empty list."
msgstr ""

#: ../Doc/library/nntplib.rst:229
msgid ""
"Send a ``STAT`` command, where *id* is the message id (enclosed in ``'<'`` "
"and ``'>'``) or an article number (as a string). Return a triple ``"
"(response, number, id)`` where *number* is the article number (as a string) "
"and *id* is the message id  (enclosed in ``'<'`` and ``'>'``)."
msgstr ""

#: ../Doc/library/nntplib.rst:237
msgid "Send a ``NEXT`` command.  Return as for :meth:`stat`."
msgstr ""

#: ../Doc/library/nntplib.rst:242
msgid "Send a ``LAST`` command.  Return as for :meth:`stat`."
msgstr ""

#: ../Doc/library/nntplib.rst:247
msgid ""
"Send a ``HEAD`` command, where *id* has the same meaning as for :meth:"
"`stat`. Return a tuple ``(response, number, id, list)`` where the first "
"three are the same as for :meth:`stat`, and *list* is a list of the "
"article's headers (an uninterpreted list of lines, without trailing "
"newlines)."
msgstr ""

#: ../Doc/library/nntplib.rst:255
msgid ""
"Send a ``BODY`` command, where *id* has the same meaning as for :meth:"
"`stat`. If the *file* parameter is supplied, then the body is stored in a "
"file.  If *file* is a string, then the method will open a file object with "
"that name, write to it then close it. If *file* is a file object, then it "
"will start calling :meth:`write` on it to store the lines of the body. "
"Return as for :meth:`head`.  If *file* is supplied, then the returned *list* "
"is an empty list."
msgstr ""

#: ../Doc/library/nntplib.rst:265
msgid ""
"Send an ``ARTICLE`` command, where *id* has the same meaning as for :meth:"
"`stat`.  Return as for :meth:`head`."
msgstr ""

#: ../Doc/library/nntplib.rst:271
msgid "Send a ``SLAVE`` command.  Return the server's *response*."
msgstr ""

#: ../Doc/library/nntplib.rst:276
msgid ""
"Send an ``XHDR`` command.  This command is not defined in the RFC but is a "
"common extension.  The *header* argument is a header keyword, e.g. "
"``'subject'``.  The *string* argument should have the form ``'first-last'`` "
"where *first* and *last* are the first and last article numbers to search. "
"Return a pair ``(response, list)``, where *list* is a list of pairs ``(id, "
"text)``, where *id* is an article number (as a string) and *text* is the "
"text of the requested header for that article. If the *file* parameter is "
"supplied, then the output of the  ``XHDR`` command is stored in a file.  If "
"*file* is a string, then the method will open a file object with that name, "
"write to it  then close it.  If *file* is a file object, then it will start "
"calling :meth:`write` on it to store the lines of the command output. If "
"*file* is supplied, then the returned *list* is an empty list."
msgstr ""

#: ../Doc/library/nntplib.rst:292
msgid ""
"Post an article using the ``POST`` command.  The *file* argument is an open "
"file object which is read until EOF using its :meth:`readline` method.  It "
"should be a well-formed news article, including the required headers.  The :"
"meth:`post` method automatically escapes lines beginning with ``.``."
msgstr ""

#: ../Doc/library/nntplib.rst:300
msgid ""
"Send an ``IHAVE`` command. *id* is a message id (enclosed in  ``'<'`` and "
"``'>'``). If the response is not an error, treat *file* exactly as for the :"
"meth:`post` method."
msgstr ""

#: ../Doc/library/nntplib.rst:307
msgid ""
"Return a triple ``(response, date, time)``, containing the current date and "
"time in a form suitable for the :meth:`newnews` and :meth:`newgroups` "
"methods. This is an optional NNTP extension, and may not be supported by all "
"servers."
msgstr ""

#: ../Doc/library/nntplib.rst:314
msgid ""
"Process an ``XGTITLE`` command, returning a pair ``(response, list)``, where "
"*list* is a list of tuples containing ``(name, title)``. If the *file* "
"parameter is supplied, then the output of the  ``XGTITLE`` command is stored "
"in a file. If *file* is a string,  then the method will open a file object "
"with that name, write to it  then close it.  If *file* is a file object, "
"then it will start calling :meth:`write` on it to store the lines of the "
"command output. If *file* is supplied, then the returned *list* is an empty "
"list. This is an optional NNTP extension, and may not be supported by all "
"servers."
msgstr ""

#: ../Doc/library/nntplib.rst:323
msgid ""
"RFC2980 says \"It is suggested that this extension be deprecated\".  Use :"
"meth:`descriptions` or :meth:`description` instead."
msgstr ""

#: ../Doc/library/nntplib.rst:329
msgid ""
"Return a pair ``(resp, list)``.  *list* is a list of tuples, one for each "
"article in the range delimited by the *start* and *end* article numbers.  "
"Each tuple is of the form ``(article number, subject, poster, date, id, "
"references, size, lines)``. If the *file* parameter is supplied, then the "
"output of the ``XOVER`` command is stored in a file.  If *file* is a "
"string,  then the method will open a file object with that name, write to "
"it  then close it.  If *file* is a file object, then it will start calling :"
"meth:`write` on it to store the lines of the command output. If *file* is "
"supplied, then the returned *list* is an empty list. This is an optional "
"NNTP extension, and may not be supported by all servers."
msgstr ""

#: ../Doc/library/nntplib.rst:343
msgid ""
"Return a pair ``(resp, path)``, where *path* is the directory path to the "
"article with message ID *id*.  This is an optional NNTP extension, and may "
"not be supported by all servers."
msgstr ""

#: ../Doc/library/nntplib.rst:350
msgid ""
"Send a ``QUIT`` command and close the connection.  Once this method has been "
"called, no other methods of the NNTP object should be called."
msgstr ""

#: ../Doc/library/numbers.rst:2
msgid ":mod:`numbers` --- Numeric abstract base classes"
msgstr ""

# 75c09f6bf37344708d8fdc2617d92740
#: ../Doc/library/numbers.rst:10
msgid ""
"The :mod:`numbers` module (:pep:`3141`) defines a hierarchy of numeric :term:"
"`abstract base classes <abstract base class>` which progressively define "
"more operations.  None of the types defined in this module can be "
"instantiated."
msgstr ""

#: ../Doc/library/numbers.rst:17
msgid ""
"The root of the numeric hierarchy. If you just want to check if an argument "
"*x* is a number, without caring what kind, use ``isinstance(x, Number)``."
msgstr ""

#: ../Doc/library/numbers.rst:22
msgid "The numeric tower"
msgstr ""

#: ../Doc/library/numbers.rst:26
msgid ""
"Subclasses of this type describe complex numbers and include the operations "
"that work on the built-in :class:`complex` type. These are: conversions to :"
"class:`complex` and :class:`bool`, :attr:`.real`, :attr:`.imag`, ``+``, ``-"
"``, ``*``, ``/``, :func:`abs`, :meth:`conjugate`, ``==``, and ``!=``. All "
"except ``-`` and ``!=`` are abstract."
msgstr ""

#: ../Doc/library/numbers.rst:34
msgid "Abstract. Retrieves the real component of this number."
msgstr ""

#: ../Doc/library/numbers.rst:38
msgid "Abstract. Retrieves the imaginary component of this number."
msgstr ""

#: ../Doc/library/numbers.rst:42
msgid ""
"Abstract. Returns the complex conjugate. For example, ``(1+3j).conjugate() "
"== (1-3j)``."
msgstr ""

#: ../Doc/library/numbers.rst:47
msgid ""
"To :class:`Complex`, :class:`Real` adds the operations that work on real "
"numbers."
msgstr ""

# adf2fa0c9c5646f99521b4b6568c6ce6
#: ../Doc/library/numbers.rst:50
msgid ""
"In short, those are: a conversion to :class:`float`, :func:`math.trunc`, :"
"func:`round`, :func:`math.floor`, :func:`math.ceil`, :func:`divmod`, ``//``, "
"``%``, ``<``, ``<=``, ``>``, and ``>=``."
msgstr ""

#: ../Doc/library/numbers.rst:54
msgid ""
"Real also provides defaults for :func:`complex`, :attr:`~Complex.real`, :"
"attr:`~Complex.imag`, and :meth:`~Complex.conjugate`."
msgstr ""

#: ../Doc/library/numbers.rst:60
msgid ""
"Subtypes :class:`Real` and adds :attr:`~Rational.numerator` and :attr:"
"`~Rational.denominator` properties, which should be in lowest terms. With "
"these, it provides a default for :func:`float`."
msgstr ""

#: ../Doc/library/numbers.rst:67 ../Doc/library/numbers.rst:71
msgid "Abstract."
msgstr ""

#: ../Doc/library/numbers.rst:76
msgid ""
"Subtypes :class:`Rational` and adds a conversion to :class:`int`. Provides "
"defaults for :func:`float`, :attr:`~Rational.numerator`, and :attr:"
"`~Rational.denominator`, and bit-string operations: ``<<``, ``>>``, ``&``, "
"``^``, ``|``, ``~``."
msgstr ""

#: ../Doc/library/numbers.rst:83
msgid "Notes for type implementors"
msgstr ""

#: ../Doc/library/numbers.rst:85
msgid ""
"Implementors should be careful to make equal numbers equal and hash them to "
"the same values. This may be subtle if there are two different extensions of "
"the real numbers. For example, :class:`fractions.Fraction` implements :func:"
"`hash` as follows::"
msgstr ""

#: ../Doc/library/numbers.rst:104
msgid "Adding More Numeric ABCs"
msgstr ""

#: ../Doc/library/numbers.rst:106
msgid ""
"There are, of course, more possible ABCs for numbers, and this would be a "
"poor hierarchy if it precluded the possibility of adding those. You can add "
"``MyFoo`` between :class:`Complex` and :class:`Real` with::"
msgstr ""

#: ../Doc/library/numbers.rst:116
msgid "Implementing the arithmetic operations"
msgstr ""

#: ../Doc/library/numbers.rst:118
msgid ""
"We want to implement the arithmetic operations so that mixed-mode operations "
"either call an implementation whose author knew about the types of both "
"arguments, or convert both to the nearest built in type and do the operation "
"there. For subtypes of :class:`Integral`, this means that :meth:`__add__` "
"and :meth:`__radd__` should be defined as::"
msgstr ""

#: ../Doc/library/numbers.rst:149
msgid ""
"There are 5 different cases for a mixed-type operation on subclasses of :"
"class:`Complex`. I'll refer to all of the above code that doesn't refer to "
"``MyIntegral`` and ``OtherTypeIKnowAbout`` as \"boilerplate\". ``a`` will be "
"an instance of ``A``, which is a subtype of :class:`Complex` (``a : A <: "
"Complex``), and ``b : B <: Complex``. I'll consider ``a + b``:"
msgstr ""

#: ../Doc/library/numbers.rst:156
msgid "If ``A`` defines an :meth:`__add__` which accepts ``b``, all is well."
msgstr ""

#: ../Doc/library/numbers.rst:158
msgid ""
"If ``A`` falls back to the boilerplate code, and it were to return a value "
"from :meth:`__add__`, we'd miss the possibility that ``B`` defines a more "
"intelligent :meth:`__radd__`, so the boilerplate should return :const:"
"`NotImplemented` from :meth:`__add__`. (Or ``A`` may not implement :meth:"
"`__add__` at all.)"
msgstr ""

#: ../Doc/library/numbers.rst:164
msgid ""
"Then ``B``'s :meth:`__radd__` gets a chance. If it accepts ``a``, all is "
"well."
msgstr ""

#: ../Doc/library/numbers.rst:166
msgid ""
"If it falls back to the boilerplate, there are no more possible methods to "
"try, so this is where the default implementation should live."
msgstr ""

#: ../Doc/library/numbers.rst:169
msgid ""
"If ``B <: A``, Python tries ``B.__radd__`` before ``A.__add__``. This is ok, "
"because it was implemented with knowledge of ``A``, so it can handle those "
"instances before delegating to :class:`Complex`."
msgstr ""

#: ../Doc/library/numbers.rst:174
msgid ""
"If ``A <: Complex`` and ``B <: Real`` without sharing any other knowledge, "
"then the appropriate shared operation is the one involving the built in :"
"class:`complex`, and both :meth:`__radd__` s land there, so ``a+b == b+a``."
msgstr ""

#: ../Doc/library/numbers.rst:179
msgid ""
"Because most of the operations on any given type will be very similar, it "
"can be useful to define a helper function which generates the forward and "
"reverse instances of any given operator. For example, :class:`fractions."
"Fraction` uses::"
msgstr ""

#: ../Doc/library/numeric.rst:6
msgid "Numeric and Mathematical Modules"
msgstr ""

#: ../Doc/library/numeric.rst:8
msgid ""
"The modules described in this chapter provide numeric and math-related "
"functions and data types. The :mod:`numbers` module defines an abstract "
"hierarchy of numeric types. The :mod:`math` and :mod:`cmath` modules contain "
"various mathematical functions for floating-point and complex numbers. For "
"users more interested in decimal accuracy than in speed, the :mod:`decimal` "
"module supports exact representations of decimal numbers."
msgstr ""

#: ../Doc/library/operator.rst:2
msgid ":mod:`operator` --- Standard operators as functions"
msgstr ""

# 3717ac28ef3c4264b029184a5b7a4a37
#: ../Doc/library/operator.rst:15
msgid ""
"The :mod:`operator` module exports a set of efficient functions "
"corresponding to the intrinsic operators of Python.  For example, ``operator."
"add(x, y)`` is equivalent to the expression ``x+y``.  The function names are "
"those used for special class methods; variants without leading and trailing "
"``__`` are also provided for convenience."
msgstr ""

#: ../Doc/library/operator.rst:21
msgid ""
"The functions fall into categories that perform object comparisons, logical "
"operations, mathematical operations, sequence operations, and abstract type "
"tests."
msgstr ""

#: ../Doc/library/operator.rst:25
msgid ""
"The object comparison functions are useful for all objects, and are named "
"after the rich comparison operators they support:"
msgstr ""

# 23f4bc0b75b04548868d33f6689d2344
#: ../Doc/library/operator.rst:42
msgid ""
"Perform \"rich comparisons\" between *a* and *b*. Specifically, ``lt(a, b)`` "
"is equivalent to ``a < b``, ``le(a, b)`` is equivalent to ``a <= b``, ``eq"
"(a, b)`` is equivalent to ``a == b``, ``ne(a, b)`` is equivalent to ``a != "
"b``, ``gt(a, b)`` is equivalent to ``a > b`` and ``ge(a, b)`` is equivalent "
"to ``a >= b``.  Note that unlike the built-in :func:`cmp`, these functions "
"can return any value, which may or may not be interpretable as a Boolean "
"value. See :ref:`comparisons` for more information about rich comparisons."
msgstr ""

#: ../Doc/library/operator.rst:52
msgid ""
"The logical operations are also generally applicable to all objects, and "
"support truth tests, identity tests, and boolean operations:"
msgstr ""

# 49bda26d9bb34cceb7ab0d07a15f2bfe
#: ../Doc/library/operator.rst:59
msgid ""
"Return the outcome of :keyword:`not` *obj*.  (Note that there is no :meth:"
"`__not__` method for object instances; only the interpreter core defines "
"this operation.  The result is affected by the :meth:`__nonzero__` and :meth:"
"`__len__` methods.)"
msgstr ""

#: ../Doc/library/operator.rst:67
msgid ""
"Return :const:`True` if *obj* is true, and :const:`False` otherwise.  This "
"is equivalent to using the :class:`bool` constructor."
msgstr ""

#: ../Doc/library/operator.rst:73
msgid "Return ``a is b``.  Tests object identity."
msgstr ""

#: ../Doc/library/operator.rst:80
msgid "Return ``a is not b``.  Tests object identity."
msgstr ""

#: ../Doc/library/operator.rst:84
msgid "The mathematical and bitwise operations are the most numerous:"
msgstr ""

#: ../Doc/library/operator.rst:90
msgid "Return the absolute value of *obj*."
msgstr ""

#: ../Doc/library/operator.rst:96
msgid "Return ``a + b``, for *a* and *b* numbers."
msgstr ""

#: ../Doc/library/operator.rst:102
msgid "Return the bitwise and of *a* and *b*."
msgstr ""

# a194cad6ae9a4489a4a50d1bcb74f410
#: ../Doc/library/operator.rst:108
msgid ""
"Return ``a / b`` when ``__future__.division`` is not in effect.  This is "
"also known as \"classic\" division."
msgstr ""

#: ../Doc/library/operator.rst:115
msgid "Return ``a // b``."
msgstr ""

#: ../Doc/library/operator.rst:123
msgid "Return *a* converted to an integer.  Equivalent to ``a.__index__()``."
msgstr ""

#: ../Doc/library/operator.rst:133
msgid ""
"Return the bitwise inverse of the number *obj*.  This is equivalent to "
"``~obj``."
msgstr ""

#: ../Doc/library/operator.rst:142
msgid "Return *a* shifted left by *b*."
msgstr ""

#: ../Doc/library/operator.rst:148
msgid "Return ``a % b``."
msgstr ""

#: ../Doc/library/operator.rst:154
msgid "Return ``a * b``, for *a* and *b* numbers."
msgstr ""

#: ../Doc/library/operator.rst:160
msgid "Return *obj* negated (``-obj``)."
msgstr ""

#: ../Doc/library/operator.rst:166
msgid "Return the bitwise or of *a* and *b*."
msgstr ""

#: ../Doc/library/operator.rst:172
msgid "Return *obj* positive (``+obj``)."
msgstr ""

#: ../Doc/library/operator.rst:178
msgid "Return ``a ** b``, for *a* and *b* numbers."
msgstr ""

#: ../Doc/library/operator.rst:186
msgid "Return *a* shifted right by *b*."
msgstr ""

#: ../Doc/library/operator.rst:192
msgid "Return ``a - b``."
msgstr ""

# 5631c71904d5448889b37d6578936592
#: ../Doc/library/operator.rst:198
msgid ""
"Return ``a / b`` when ``__future__.division`` is in effect.  This is also "
"known as \"true\" division."
msgstr ""

#: ../Doc/library/operator.rst:207
msgid "Return the bitwise exclusive or of *a* and *b*."
msgstr ""

#: ../Doc/library/operator.rst:210
msgid ""
"Operations which work with sequences (some of them with mappings too) "
"include:"
msgstr ""

#: ../Doc/library/operator.rst:215
msgid "Return ``a + b`` for *a* and *b* sequences."
msgstr ""

#: ../Doc/library/operator.rst:221
msgid "Return the outcome of the test ``b in a``. Note the reversed operands."
msgstr ""

#: ../Doc/library/operator.rst:229
msgid "Return the number of occurrences of *b* in *a*."
msgstr ""

#: ../Doc/library/operator.rst:235
msgid "Remove the value of *a* at index *b*."
msgstr ""

# 9374fe2fe4134353bad24741fe853d87
#: ../Doc/library/operator.rst:241
msgid "Delete the slice of *a* from index *b* to index *c-1*."
msgstr ""

#: ../Doc/library/operator.rst:251
msgid "Return the value of *a* at index *b*."
msgstr ""

# ab43da5135f7404fb1c6f2b55711eed7
#: ../Doc/library/operator.rst:257
msgid "Return the slice of *a* from index *b* to index *c-1*."
msgstr ""

#: ../Doc/library/operator.rst:266
msgid "Return the index of the first of occurrence of *b* in *a*."
msgstr ""

# f19062291b6a4831ae6bb126d295c484
#: ../Doc/library/operator.rst:275
msgid "Return ``a * b`` where *a* is a sequence and *b* is an integer."
msgstr ""

# 520872a4d8b54054a014fbc2de43b8d2
#: ../Doc/library/operator.rst:283
msgid "Alias for :func:`contains`."
msgstr ""

#: ../Doc/library/operator.rst:289
msgid "Set the value of *a* at index *b* to *c*."
msgstr ""

# 58427374e00144328a8cfa45039fb8c3
#: ../Doc/library/operator.rst:295
msgid "Set the slice of *a* from index *b* to index *c-1* to the sequence *v*."
msgstr ""

# 0cc7d8553819440e881f47abd0c44a96
#: ../Doc/library/operator.rst:301
msgid "Example use of operator functions::"
msgstr ""

#: ../Doc/library/operator.rst:311
msgid ""
"Many operations have an \"in-place\" version.  The following functions "
"provide a more primitive access to in-place operators than the usual syntax "
"does; for example, the :term:`statement` ``x += y`` is equivalent to ``x = "
"operator.iadd(x, y)``.  Another way to put it is to say that ``z = operator."
"iadd(x, y)`` is equivalent to the compound statement ``z = x; z += y``."
msgstr ""

#: ../Doc/library/operator.rst:321
msgid "``a = iadd(a, b)`` is equivalent to ``a += b``."
msgstr ""

#: ../Doc/library/operator.rst:329
msgid "``a = iand(a, b)`` is equivalent to ``a &= b``."
msgstr ""

#: ../Doc/library/operator.rst:337
msgid ""
"``a = iconcat(a, b)`` is equivalent to ``a += b`` for *a* and *b* sequences."
msgstr ""

# 93065f9a1fe44b51aecce8d0ffdc2cc1
#: ../Doc/library/operator.rst:345
msgid ""
"``a = idiv(a, b)`` is equivalent to ``a /= b`` when ``__future__.division`` "
"is not in effect."
msgstr ""

#: ../Doc/library/operator.rst:354
msgid "``a = ifloordiv(a, b)`` is equivalent to ``a //= b``."
msgstr ""

#: ../Doc/library/operator.rst:362
msgid "``a = ilshift(a, b)`` is equivalent to ``a <<= b``."
msgstr ""

#: ../Doc/library/operator.rst:370
msgid "``a = imod(a, b)`` is equivalent to ``a %= b``."
msgstr ""

#: ../Doc/library/operator.rst:378
msgid "``a = imul(a, b)`` is equivalent to ``a *= b``."
msgstr ""

#: ../Doc/library/operator.rst:386
msgid "``a = ior(a, b)`` is equivalent to ``a |= b``."
msgstr ""

#: ../Doc/library/operator.rst:394
msgid "``a = ipow(a, b)`` is equivalent to ``a **= b``."
msgstr ""

# 870d9291f1e24dfe8542514c195c6160
#: ../Doc/library/operator.rst:405
msgid ""
"``a = irepeat(a, b)`` is equivalent to ``a *= b`` where *a* is a sequence "
"and *b* is an integer."
msgstr ""

#: ../Doc/library/operator.rst:414
msgid "``a = irshift(a, b)`` is equivalent to ``a >>= b``."
msgstr ""

#: ../Doc/library/operator.rst:422
msgid "``a = isub(a, b)`` is equivalent to ``a -= b``."
msgstr ""

# 7a33c01e348c4acda8c571cf4beca908
#: ../Doc/library/operator.rst:430
msgid ""
"``a = itruediv(a, b)`` is equivalent to ``a /= b`` when ``__future__."
"division`` is in effect."
msgstr ""

#: ../Doc/library/operator.rst:439
msgid "``a = ixor(a, b)`` is equivalent to ``a ^= b``."
msgstr ""

# 3e808ea837214e8195b5e00e67fbc9e7
#: ../Doc/library/operator.rst:444
msgid ""
"The :mod:`operator` module also defines a few predicates to test the type of "
"objects; however, these are not all reliable.  It is preferable to test "
"abstract base classes instead (see :mod:`collections` and :mod:`numbers` for "
"details)."
msgstr ""

# 66d19677c03d4e86bd27365bf3b69b82
#: ../Doc/library/operator.rst:454
msgid ""
"Returns true if the object *obj* can be called like a function, otherwise it "
"returns false.  True is returned for functions, bound and unbound methods, "
"class objects, and instance objects which support the :meth:`__call__` "
"method."
msgstr ""

# 82b7fff42ace482989108c8fd19775a4
#: ../Doc/library/operator.rst:464
msgid ""
"Returns true if the object *obj* supports the mapping interface. This is "
"true for dictionaries and all instance objects defining :meth:`__getitem__`."
msgstr ""

# 862d7b4ecb794ccdae8064cbca7e7a01
#: ../Doc/library/operator.rst:473
msgid ""
"Returns true if the object *obj* represents a number.  This is true for all "
"numeric types implemented in C."
msgstr ""

# 562fd90712db42b98b4074eaa8002677
#: ../Doc/library/operator.rst:482
msgid ""
"Returns true if the object *obj* supports the sequence protocol. This "
"returns true for all objects which define sequence methods in C, and for all "
"instance objects defining :meth:`__getitem__`."
msgstr ""

#: ../Doc/library/operator.rst:487
msgid ""
"The :mod:`operator` module also defines tools for generalized attribute and "
"item lookups.  These are useful for making fast field extractors as "
"arguments for :func:`map`, :func:`sorted`, :meth:`itertools.groupby`, or "
"other functions that expect a function argument."
msgstr ""

# e63d285350f04415af818106fa1473c1
#: ../Doc/library/operator.rst:495
msgid ""
"Return a callable object that fetches *attr* from its operand. If more than "
"one attribute is requested, returns a tuple of attributes. After, ``f = "
"attrgetter('name')``, the call ``f(b)`` returns ``b.name``.  After, ``f = "
"attrgetter('name', 'date')``, the call ``f(b)`` returns ``(b.name, b.date)"
"``.  Equivalent to::"
msgstr ""

#: ../Doc/library/operator.rst:517
msgid ""
"The attribute names can also contain dots; after ``f = attrgetter('date."
"month')``, the call ``f(b)`` returns ``b.date.month``."
msgstr ""

#: ../Doc/library/operator.rst:531
msgid ""
"Return a callable object that fetches *item* from its operand using the "
"operand's :meth:`__getitem__` method.  If multiple items are specified, "
"returns a tuple of lookup values.  Equivalent to::"
msgstr ""

#: ../Doc/library/operator.rst:545
msgid ""
"The items can be any type accepted by the operand's :meth:`__getitem__` "
"method.  Dictionaries accept any hashable value.  Lists, tuples, and strings "
"accept an index or a slice:"
msgstr ""

#: ../Doc/library/operator.rst:561
msgid ""
"Example of using :func:`itemgetter` to retrieve specific fields from a tuple "
"record:"
msgstr ""

# 21a98266f491421e8e7d644677435aa4
#: ../Doc/library/operator.rst:574
msgid ""
"Return a callable object that calls the method *name* on its operand.  If "
"additional arguments and/or keyword arguments are given, they will be given "
"to the method as well.  After ``f = methodcaller('name')``, the call ``f(b)"
"`` returns ``b.name()``.  After ``f = methodcaller('name', 'foo', bar=1)``, "
"the call ``f(b)`` returns ``b.name('foo', bar=1)``.  Equivalent to::"
msgstr ""

#: ../Doc/library/operator.rst:591
msgid "Mapping Operators to Functions"
msgstr ""

#: ../Doc/library/operator.rst:593
msgid ""
"This table shows how abstract operations correspond to operator symbols in "
"the Python syntax and the functions in the :mod:`operator` module."
msgstr ""

#: ../Doc/library/operator.rst:597
#: ../Doc/library/xml.etree.elementtree.rst:308
msgid "Syntax"
msgstr ""

#: ../Doc/library/operator.rst:597
msgid "Function"
msgstr ""

#: ../Doc/library/operator.rst:599
msgid "Addition"
msgstr ""

#: ../Doc/library/operator.rst:599
msgid "``a + b``"
msgstr ""

#: ../Doc/library/operator.rst:599
msgid "``add(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:601
msgid "Concatenation"
msgstr ""

#: ../Doc/library/operator.rst:601
msgid "``seq1 + seq2``"
msgstr ""

#: ../Doc/library/operator.rst:601
msgid "``concat(seq1, seq2)``"
msgstr ""

#: ../Doc/library/operator.rst:603
msgid "Containment Test"
msgstr ""

#: ../Doc/library/operator.rst:603
msgid "``obj in seq``"
msgstr ""

#: ../Doc/library/operator.rst:603
msgid "``contains(seq, obj)``"
msgstr ""

#: ../Doc/library/operator.rst:605 ../Doc/library/operator.rst:608
#: ../Doc/library/operator.rst:611
msgid "Division"
msgstr ""

#: ../Doc/library/operator.rst:605 ../Doc/library/operator.rst:608
msgid "``a / b``"
msgstr ""

# eba2f013c00c40848a8263aa9adb1a6e
#: ../Doc/library/operator.rst:605
msgid "``div(a, b)`` (without ``__future__.division``)"
msgstr ""

# 7c93164ded004d99997013af6db089e7
#: ../Doc/library/operator.rst:608
msgid "``truediv(a, b)`` (with ``__future__.division``)"
msgstr ""

#: ../Doc/library/operator.rst:611
msgid "``a // b``"
msgstr ""

#: ../Doc/library/operator.rst:611
msgid "``floordiv(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:613
msgid "Bitwise And"
msgstr ""

#: ../Doc/library/operator.rst:613
msgid "``a & b``"
msgstr ""

#: ../Doc/library/operator.rst:613
msgid "``and_(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:615
msgid "Bitwise Exclusive Or"
msgstr ""

#: ../Doc/library/operator.rst:615
msgid "``a ^ b``"
msgstr ""

#: ../Doc/library/operator.rst:615
msgid "``xor(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:617
msgid "Bitwise Inversion"
msgstr ""

#: ../Doc/library/operator.rst:617
msgid "``~ a``"
msgstr ""

#: ../Doc/library/operator.rst:617
msgid "``invert(a)``"
msgstr ""

#: ../Doc/library/operator.rst:619
msgid "Bitwise Or"
msgstr ""

#: ../Doc/library/operator.rst:619
msgid "``a | b``"
msgstr ""

#: ../Doc/library/operator.rst:619
msgid "``or_(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:621
msgid "Exponentiation"
msgstr ""

#: ../Doc/library/operator.rst:621
msgid "``a ** b``"
msgstr ""

#: ../Doc/library/operator.rst:621
msgid "``pow(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:623 ../Doc/library/operator.rst:625
msgid "Identity"
msgstr ""

#: ../Doc/library/operator.rst:623 ../Doc/library/unittest.rst:806
msgid "``a is b``"
msgstr ""

#: ../Doc/library/operator.rst:623
msgid "``is_(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:625 ../Doc/library/unittest.rst:809
msgid "``a is not b``"
msgstr ""

#: ../Doc/library/operator.rst:625
msgid "``is_not(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:627
msgid "Indexed Assignment"
msgstr ""

#: ../Doc/library/operator.rst:627
msgid "``obj[k] = v``"
msgstr ""

#: ../Doc/library/operator.rst:627
msgid "``setitem(obj, k, v)``"
msgstr ""

#: ../Doc/library/operator.rst:629
msgid "Indexed Deletion"
msgstr ""

#: ../Doc/library/operator.rst:629
msgid "``del obj[k]``"
msgstr ""

#: ../Doc/library/operator.rst:629
msgid "``delitem(obj, k)``"
msgstr ""

#: ../Doc/library/operator.rst:631
msgid "Indexing"
msgstr ""

#: ../Doc/library/operator.rst:631
msgid "``obj[k]``"
msgstr ""

#: ../Doc/library/operator.rst:631
msgid "``getitem(obj, k)``"
msgstr ""

#: ../Doc/library/operator.rst:633
msgid "Left Shift"
msgstr ""

#: ../Doc/library/operator.rst:633
msgid "``a << b``"
msgstr ""

#: ../Doc/library/operator.rst:633
msgid "``lshift(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:635
msgid "Modulo"
msgstr ""

#: ../Doc/library/operator.rst:635
msgid "``a % b``"
msgstr ""

#: ../Doc/library/operator.rst:635
msgid "``mod(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:637
msgid "Multiplication"
msgstr ""

#: ../Doc/library/operator.rst:637
msgid "``a * b``"
msgstr ""

#: ../Doc/library/operator.rst:637
msgid "``mul(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:639
msgid "Negation (Arithmetic)"
msgstr ""

#: ../Doc/library/operator.rst:639
msgid "``- a``"
msgstr ""

#: ../Doc/library/operator.rst:639
msgid "``neg(a)``"
msgstr ""

#: ../Doc/library/operator.rst:641
msgid "Negation (Logical)"
msgstr ""

#: ../Doc/library/operator.rst:641
msgid "``not a``"
msgstr ""

#: ../Doc/library/operator.rst:641
msgid "``not_(a)``"
msgstr ""

#: ../Doc/library/operator.rst:643
msgid "Positive"
msgstr ""

#: ../Doc/library/operator.rst:643
msgid "``+ a``"
msgstr ""

#: ../Doc/library/operator.rst:643
msgid "``pos(a)``"
msgstr ""

#: ../Doc/library/operator.rst:645
msgid "Right Shift"
msgstr ""

#: ../Doc/library/operator.rst:645
msgid "``a >> b``"
msgstr ""

#: ../Doc/library/operator.rst:645
msgid "``rshift(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:647
msgid "Sequence Repetition"
msgstr ""

#: ../Doc/library/operator.rst:647
msgid "``seq * i``"
msgstr ""

#: ../Doc/library/operator.rst:647
msgid "``repeat(seq, i)``"
msgstr ""

#: ../Doc/library/operator.rst:649
msgid "Slice Assignment"
msgstr ""

#: ../Doc/library/operator.rst:649
msgid "``seq[i:j] = values``"
msgstr ""

#: ../Doc/library/operator.rst:649
msgid "``setitem(seq, slice(i, j), values)``"
msgstr ""

#: ../Doc/library/operator.rst:651
msgid "Slice Deletion"
msgstr ""

#: ../Doc/library/operator.rst:651
msgid "``del seq[i:j]``"
msgstr ""

#: ../Doc/library/operator.rst:651
msgid "``delitem(seq, slice(i, j))``"
msgstr ""

#: ../Doc/library/operator.rst:653
msgid "Slicing"
msgstr ""

#: ../Doc/library/operator.rst:653
msgid "``seq[i:j]``"
msgstr ""

#: ../Doc/library/operator.rst:653
msgid "``getitem(seq, slice(i, j))``"
msgstr ""

#: ../Doc/library/operator.rst:655 ../Doc/library/string.rst:109
msgid "String Formatting"
msgstr ""

#: ../Doc/library/operator.rst:655
msgid "``s % obj``"
msgstr ""

#: ../Doc/library/operator.rst:655
msgid "``mod(s, obj)``"
msgstr ""

#: ../Doc/library/operator.rst:657
msgid "Subtraction"
msgstr ""

#: ../Doc/library/operator.rst:657
msgid "``a - b``"
msgstr ""

#: ../Doc/library/operator.rst:657
msgid "``sub(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:659
msgid "Truth Test"
msgstr ""

#: ../Doc/library/operator.rst:659
msgid "``obj``"
msgstr ""

#: ../Doc/library/operator.rst:659
msgid "``truth(obj)``"
msgstr ""

#: ../Doc/library/operator.rst:661 ../Doc/library/operator.rst:663
#: ../Doc/library/operator.rst:669 ../Doc/library/operator.rst:671
msgid "Ordering"
msgstr ""

#: ../Doc/library/operator.rst:661 ../Doc/library/unittest.rst:983
msgid "``a < b``"
msgstr ""

#: ../Doc/library/operator.rst:661
msgid "``lt(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:663 ../Doc/library/unittest.rst:986
msgid "``a <= b``"
msgstr ""

#: ../Doc/library/operator.rst:663
msgid "``le(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:665
msgid "Equality"
msgstr ""

#: ../Doc/library/operator.rst:665 ../Doc/library/unittest.rst:794
msgid "``a == b``"
msgstr ""

#: ../Doc/library/operator.rst:665
msgid "``eq(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:667
msgid "Difference"
msgstr ""

#: ../Doc/library/operator.rst:667 ../Doc/library/unittest.rst:797
msgid "``a != b``"
msgstr ""

#: ../Doc/library/operator.rst:667
msgid "``ne(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:669 ../Doc/library/unittest.rst:980
msgid "``a >= b``"
msgstr ""

#: ../Doc/library/operator.rst:669
msgid "``ge(a, b)``"
msgstr ""

#: ../Doc/library/operator.rst:671 ../Doc/library/unittest.rst:977
msgid "``a > b``"
msgstr ""

#: ../Doc/library/operator.rst:671
msgid "``gt(a, b)``"
msgstr ""

#: ../Doc/library/optparse.rst:2
msgid ":mod:`optparse` --- Parser for command line options"
msgstr ""

# f38f55ebb88f46ef9487885bf9caacd3
#: ../Doc/library/optparse.rst:16
msgid "**Source code:** :source:`Lib/optparse.py`"
msgstr ""

#: ../Doc/library/optparse.rst:20
msgid ""
":mod:`optparse` is a more convenient, flexible, and powerful library for "
"parsing command-line options than the old :mod:`getopt` module.  :mod:"
"`optparse` uses a more declarative style of command-line parsing: you create "
"an instance of :class:`OptionParser`, populate it with options, and parse "
"the command line. :mod:`optparse` allows users to specify options in the "
"conventional GNU/POSIX syntax, and additionally generates usage and help "
"messages for you."
msgstr ""

#: ../Doc/library/optparse.rst:27
msgid "Here's an example of using :mod:`optparse` in a simple script::"
msgstr ""

#: ../Doc/library/optparse.rst:40
msgid ""
"With these few lines of code, users of your script can now do the \"usual "
"thing\" on the command-line, for example::"
msgstr ""

#: ../Doc/library/optparse.rst:45
msgid ""
"As it parses the command line, :mod:`optparse` sets attributes of the "
"``options`` object returned by :meth:`parse_args` based on user-supplied "
"command-line values.  When :meth:`parse_args` returns from parsing this "
"command line, ``options.filename`` will be ``\"outfile\"`` and ``options."
"verbose`` will be ``False``.  :mod:`optparse` supports both long and short "
"options, allows short options to be merged together, and allows options to "
"be associated with their arguments in a variety of ways.  Thus, the "
"following command lines are all equivalent to the above example::"
msgstr ""

#: ../Doc/library/optparse.rst:59
msgid "Additionally, users can run one of  ::"
msgstr ""

#: ../Doc/library/optparse.rst:64
msgid ""
"and :mod:`optparse` will print out a brief summary of your script's options:"
msgstr ""

#: ../Doc/library/optparse.rst:75
msgid ""
"where the value of *yourscript* is determined at runtime (normally from "
"``sys.argv[0]``)."
msgstr ""

#: ../Doc/library/optparse.rst:82
msgid "Background"
msgstr ""

#: ../Doc/library/optparse.rst:84
msgid ""
":mod:`optparse` was explicitly designed to encourage the creation of "
"programs with straightforward, conventional command-line interfaces.  To "
"that end, it supports only the most common command-line syntax and semantics "
"conventionally used under Unix.  If you are unfamiliar with these "
"conventions, read this section to acquaint yourself with them."
msgstr ""

#: ../Doc/library/optparse.rst:94
msgid "Terminology"
msgstr ""

#: ../Doc/library/optparse.rst:97
msgid ""
"a string entered on the command-line, and passed by the shell to ``execl()`` "
"or ``execv()``.  In Python, arguments are elements of ``sys.argv[1:]`` "
"(``sys.argv[0]`` is the name of the program being executed).  Unix shells "
"also use the term \"word\"."
msgstr ""

#: ../Doc/library/optparse.rst:102
msgid ""
"It is occasionally desirable to substitute an argument list other than ``sys."
"argv[1:]``, so you should read \"argument\" as \"an element of ``sys.argv[1:]"
"``, or of some other list provided as a substitute for ``sys.argv[1:]``\"."
msgstr ""

# 7c25691c2fc1423f93d241a2045d9902
#: ../Doc/library/optparse.rst:108
msgid ""
"an argument used to supply extra information to guide or customize the "
"execution of a program.  There are many different syntaxes for options; the "
"traditional Unix syntax is a hyphen (\"-\") followed by a single letter, e."
"g. ``-x`` or ``-F``.  Also, traditional Unix syntax allows multiple options "
"to be merged into a single argument, e.g. ``-x -F`` is equivalent to ``-"
"xF``.  The GNU project introduced ``--`` followed by a series of hyphen-"
"separated words, e.g. ``--file`` or ``--dry-run``.  These are the only two "
"option syntaxes provided by :mod:`optparse`."
msgstr ""

#: ../Doc/library/optparse.rst:117
msgid "Some other option syntaxes that the world has seen include:"
msgstr ""

# 757883e14b0c4ebab2d181d1d813e610
#: ../Doc/library/optparse.rst:119
msgid ""
"a hyphen followed by a few letters, e.g. ``-pf`` (this is *not* the same as "
"multiple options merged into a single argument)"
msgstr ""

# 269c7c86f366465999b371eb3240e9f3
#: ../Doc/library/optparse.rst:122
msgid ""
"a hyphen followed by a whole word, e.g. ``-file`` (this is technically "
"equivalent to the previous syntax, but they aren't usually seen in the same "
"program)"
msgstr ""

# 1ea7a18f8696472b9a40aebb2dbf5728
#: ../Doc/library/optparse.rst:126
msgid ""
"a plus sign followed by a single letter, or a few letters, or a word, e.g. ``"
"+f``, ``+rgb``"
msgstr ""

# ac426cef995e4bbc9e578dcff4ec9c41
#: ../Doc/library/optparse.rst:129
msgid ""
"a slash followed by a letter, or a few letters, or a word, e.g. ``/f``, ``/"
"file``"
msgstr ""

#: ../Doc/library/optparse.rst:132
msgid ""
"These option syntaxes are not supported by :mod:`optparse`, and they never "
"will be.  This is deliberate: the first three are non-standard on any "
"environment, and the last only makes sense if you're exclusively targeting "
"VMS, MS-DOS, and/or Windows."
msgstr ""

#: ../Doc/library/optparse.rst:138
msgid ""
"an argument that follows an option, is closely associated with that option, "
"and is consumed from the argument list when that option is. With :mod:"
"`optparse`, option arguments may either be in a separate argument from their "
"option:"
msgstr ""

#: ../Doc/library/optparse.rst:148
msgid "or included in the same argument:"
msgstr ""

# 9a12a4b69249437b9cb710e99342298a
#: ../Doc/library/optparse.rst:155
msgid ""
"Typically, a given option either takes an argument or it doesn't. Lots of "
"people want an \"optional option arguments\" feature, meaning that some "
"options will take an argument if they see it, and won't if they don't.  This "
"is somewhat controversial, because it makes parsing ambiguous: if ``-a`` "
"takes an optional argument and ``-b`` is another option entirely, how do we "
"interpret ``-ab``?  Because of this ambiguity, :mod:`optparse` does not "
"support this feature."
msgstr ""

#: ../Doc/library/optparse.rst:164
msgid ""
"something leftover in the argument list after options have been parsed, i.e. "
"after options and their arguments have been parsed and removed from the "
"argument list."
msgstr ""

#: ../Doc/library/optparse.rst:169
msgid ""
"an option that must be supplied on the command-line; note that the phrase "
"\"required option\" is self-contradictory in English.  :mod:`optparse` "
"doesn't prevent you from implementing required options, but doesn't give you "
"much help at it either."
msgstr ""

#: ../Doc/library/optparse.rst:174
msgid "For example, consider this hypothetical command-line::"
msgstr ""

# 21db3502c4cf4129b7547ef630efaf9e
#: ../Doc/library/optparse.rst:178
msgid ""
"``-v`` and ``--report`` are both options.  Assuming that ``--report`` takes "
"one argument, ``/tmp/report.txt`` is an option argument.  ``foo`` and "
"``bar`` are positional arguments."
msgstr ""

#: ../Doc/library/optparse.rst:186
msgid "What are options for?"
msgstr ""

#: ../Doc/library/optparse.rst:188
msgid ""
"Options are used to provide extra information to tune or customize the "
"execution of a program.  In case it wasn't clear, options are usually "
"*optional*.  A program should be able to run just fine with no options "
"whatsoever.  (Pick a random program from the Unix or GNU toolsets.  Can it "
"run without any options at all and still make sense?  The main exceptions "
"are ``find``, ``tar``, and ``dd``\\ ---all of which are mutant oddballs that "
"have been rightly criticized for their non-standard syntax and confusing "
"interfaces.)"
msgstr ""

#: ../Doc/library/optparse.rst:196
msgid ""
"Lots of people want their programs to have \"required options\".  Think "
"about it. If it's required, then it's *not optional*!  If there is a piece "
"of information that your program absolutely requires in order to run "
"successfully, that's what positional arguments are for."
msgstr ""

#: ../Doc/library/optparse.rst:201
msgid ""
"As an example of good command-line interface design, consider the humble "
"``cp`` utility, for copying files.  It doesn't make much sense to try to "
"copy files without supplying a destination and at least one source. Hence, "
"``cp`` fails if you run it with no arguments.  However, it has a flexible, "
"useful syntax that does not require any options at all::"
msgstr ""

#: ../Doc/library/optparse.rst:210
msgid ""
"You can get pretty far with just that.  Most ``cp`` implementations provide "
"a bunch of options to tweak exactly how the files are copied: you can "
"preserve mode and modification time, avoid following symlinks, ask before "
"clobbering existing files, etc.  But none of this distracts from the core "
"mission of ``cp``, which is to copy either one file to another, or several "
"files to another directory."
msgstr ""

#: ../Doc/library/optparse.rst:221
msgid "What are positional arguments for?"
msgstr ""

#: ../Doc/library/optparse.rst:223
msgid ""
"Positional arguments are for those pieces of information that your program "
"absolutely, positively requires to run."
msgstr ""

#: ../Doc/library/optparse.rst:226
msgid ""
"A good user interface should have as few absolute requirements as possible.  "
"If your program requires 17 distinct pieces of information in order to run "
"successfully, it doesn't much matter *how* you get that information from the "
"user---most people will give up and walk away before they successfully run "
"the program.  This applies whether the user interface is a command-line, a "
"configuration file, or a GUI: if you make that many demands on your users, "
"most of them will simply give up."
msgstr ""

#: ../Doc/library/optparse.rst:234
msgid ""
"In short, try to minimize the amount of information that users are "
"absolutely required to supply---use sensible defaults whenever possible.  Of "
"course, you also want to make your programs reasonably flexible.  That's "
"what options are for.  Again, it doesn't matter if they are entries in a "
"config file, widgets in the \"Preferences\" dialog of a GUI, or command-line "
"options---the more options you implement, the more flexible your program is, "
"and the more complicated its implementation becomes.  Too much flexibility "
"has drawbacks as well, of course; too many options can overwhelm users and "
"make your code much harder to maintain."
msgstr ""

#: ../Doc/library/optparse.rst:247 ../Doc/library/xml.etree.elementtree.rst:50
msgid "Tutorial"
msgstr ""

#: ../Doc/library/optparse.rst:249
msgid ""
"While :mod:`optparse` is quite flexible and powerful, it's also "
"straightforward to use in most cases.  This section covers the code patterns "
"that are common to any :mod:`optparse`\\ -based program."
msgstr ""

#: ../Doc/library/optparse.rst:253
msgid ""
"First, you need to import the OptionParser class; then, early in the main "
"program, create an OptionParser instance::"
msgstr ""

#: ../Doc/library/optparse.rst:260
msgid "Then you can start defining options.  The basic syntax is::"
msgstr ""

# 3e4bf39c2e5544128bd6936de2b29640
#: ../Doc/library/optparse.rst:265
msgid ""
"Each option has one or more option strings, such as ``-f`` or ``--file``, "
"and several option attributes that tell :mod:`optparse` what to expect and "
"what to do when it encounters that option on the command line."
msgstr ""

#: ../Doc/library/optparse.rst:269
msgid ""
"Typically, each option will have one short option string and one long option "
"string, e.g.::"
msgstr ""

#: ../Doc/library/optparse.rst:274
msgid ""
"You're free to define as many short option strings and as many long option "
"strings as you like (including zero), as long as there is at least one "
"option string overall."
msgstr ""

# d1f61f14f75140ff97a3e1fa24d2f118
#: ../Doc/library/optparse.rst:278
msgid ""
"The option strings passed to :meth:`OptionParser.add_option` are effectively "
"labels for the option defined by that call.  For brevity, we will frequently "
"refer to *encountering an option* on the command line; in reality, :mod:"
"`optparse` encounters *option strings* and looks up options from them."
msgstr ""

#: ../Doc/library/optparse.rst:284
msgid ""
"Once all of your options are defined, instruct :mod:`optparse` to parse your "
"program's command line::"
msgstr ""

#: ../Doc/library/optparse.rst:289
msgid ""
"(If you like, you can pass a custom argument list to :meth:`parse_args`, but "
"that's rarely necessary: by default it uses ``sys.argv[1:]``.)"
msgstr ""

#: ../Doc/library/optparse.rst:292
msgid ":meth:`parse_args` returns two values:"
msgstr ""

# 7668991c75e04f51a9ab52f1986c27ee
#: ../Doc/library/optparse.rst:294
msgid ""
"``options``, an object containing values for all of your options---e.g. if "
"``--file`` takes a single string argument, then ``options.file`` will be the "
"filename supplied by the user, or ``None`` if the user did not supply that "
"option"
msgstr ""

#: ../Doc/library/optparse.rst:299
msgid ""
"``args``, the list of positional arguments leftover after parsing options"
msgstr ""

#: ../Doc/library/optparse.rst:301
msgid ""
"This tutorial section only covers the four most important option "
"attributes: :attr:`~Option.action`, :attr:`~Option.type`, :attr:`~Option."
"dest` (destination), and :attr:`~Option.help`. Of these, :attr:`~Option."
"action` is the most fundamental."
msgstr ""

#: ../Doc/library/optparse.rst:310
msgid "Understanding option actions"
msgstr ""

#: ../Doc/library/optparse.rst:312
msgid ""
"Actions tell :mod:`optparse` what to do when it encounters an option on the "
"command line.  There is a fixed set of actions hard-coded into :mod:"
"`optparse`; adding new actions is an advanced topic covered in section :ref:"
"`optparse-extending-optparse`.  Most actions tell :mod:`optparse` to store a "
"value in some variable---for example, take a string from the command line "
"and store it in an attribute of ``options``."
msgstr ""

#: ../Doc/library/optparse.rst:319
msgid ""
"If you don't specify an option action, :mod:`optparse` defaults to ``store``."
msgstr ""

#: ../Doc/library/optparse.rst:325
msgid "The store action"
msgstr ""

#: ../Doc/library/optparse.rst:327
msgid ""
"The most common option action is ``store``, which tells :mod:`optparse` to "
"take the next argument (or the remainder of the current argument), ensure "
"that it is of the correct type, and store it to your chosen destination."
msgstr ""

#: ../Doc/library/optparse.rst:336
msgid ""
"Now let's make up a fake command line and ask :mod:`optparse` to parse it::"
msgstr ""

# f4d0339f19a84e348c645720dfc95a1f
#: ../Doc/library/optparse.rst:341
msgid ""
"When :mod:`optparse` sees the option string ``-f``, it consumes the next "
"argument, ``foo.txt``, and stores it in ``options.filename``.  So, after "
"this call to :meth:`parse_args`, ``options.filename`` is ``\"foo.txt\"``."
msgstr ""

#: ../Doc/library/optparse.rst:345
msgid ""
"Some other option types supported by :mod:`optparse` are ``int`` and "
"``float``. Here's an option that expects an integer argument::"
msgstr ""

#: ../Doc/library/optparse.rst:350
msgid ""
"Note that this option has no long option string, which is perfectly "
"acceptable. Also, there's no explicit action, since the default is ``store``."
msgstr ""

# 62010940753b4cd394d4de1d7287eb7a
#: ../Doc/library/optparse.rst:353
msgid ""
"Let's parse another fake command-line.  This time, we'll jam the option "
"argument right up against the option: since ``-n42`` (one argument) is "
"equivalent to ``-n 42`` (two arguments), the code ::"
msgstr ""

# e073303eee584c40ab5eb80ad9daab2b
#: ../Doc/library/optparse.rst:360
msgid "will print ``42``."
msgstr ""

#: ../Doc/library/optparse.rst:362
msgid ""
"If you don't specify a type, :mod:`optparse` assumes ``string``.  Combined "
"with the fact that the default action is ``store``, that means our first "
"example can be a lot shorter::"
msgstr ""

# 9fbb6e2f732448fb8283b8e51aad5be4
#: ../Doc/library/optparse.rst:368
msgid ""
"If you don't supply a destination, :mod:`optparse` figures out a sensible "
"default from the option strings: if the first long option string is ``--foo-"
"bar``, then the default destination is ``foo_bar``.  If there are no long "
"option strings, :mod:`optparse` looks at the first short option string: the "
"default destination for ``-f`` is ``f``."
msgstr ""

# 6ad381b233d2428b9c940829e33fe10b
#: ../Doc/library/optparse.rst:374
msgid ""
":mod:`optparse` also includes built-in ``long`` and ``complex`` types.  "
"Adding types is covered in section :ref:`optparse-extending-optparse`."
msgstr ""

#: ../Doc/library/optparse.rst:381
msgid "Handling boolean (flag) options"
msgstr ""

# 3d8123443e9c490e878249a50cf70acf
#: ../Doc/library/optparse.rst:383
msgid ""
"Flag options---set a variable to true or false when a particular option is "
"seen ---are quite common.  :mod:`optparse` supports them with two separate "
"actions, ``store_true`` and ``store_false``.  For example, you might have a "
"``verbose`` flag that is turned on with ``-v`` and off with ``-q``::"
msgstr ""

#: ../Doc/library/optparse.rst:391
msgid ""
"Here we have two different options with the same destination, which is "
"perfectly OK.  (It just means you have to be a bit careful when setting "
"default values--- see below.)"
msgstr ""

# 9f477f7859204b4eb97425755738b8e6
#: ../Doc/library/optparse.rst:395
msgid ""
"When :mod:`optparse` encounters ``-v`` on the command line, it sets "
"``options.verbose`` to ``True``; when it encounters ``-q``, ``options."
"verbose`` is set to ``False``."
msgstr ""

#: ../Doc/library/optparse.rst:403
msgid "Other actions"
msgstr ""

#: ../Doc/library/optparse.rst:405
msgid "Some other actions supported by :mod:`optparse` are:"
msgstr ""

#: ../Doc/library/optparse.rst:408 ../Doc/library/optparse.rst:924
msgid "store a constant value"
msgstr ""

#: ../Doc/library/optparse.rst:411 ../Doc/library/optparse.rst:933
msgid "append this option's argument to a list"
msgstr ""

#: ../Doc/library/optparse.rst:414 ../Doc/library/optparse.rst:939
msgid "increment a counter by one"
msgstr ""

#: ../Doc/library/optparse.rst:417 ../Doc/library/optparse.rst:942
msgid "call a specified function"
msgstr ""

#: ../Doc/library/optparse.rst:419
msgid ""
"These are covered in section :ref:`optparse-reference-guide`, Reference "
"Guide and section :ref:`optparse-option-callbacks`."
msgstr ""

#: ../Doc/library/optparse.rst:426
msgid "Default values"
msgstr ""

#: ../Doc/library/optparse.rst:428
msgid ""
"All of the above examples involve setting some variable (the \"destination"
"\") when certain command-line options are seen.  What happens if those "
"options are never seen?  Since we didn't supply any defaults, they are all "
"set to ``None``.  This is usually fine, but sometimes you want more "
"control.  :mod:`optparse` lets you supply a default value for each "
"destination, which is assigned before the command line is parsed."
msgstr ""

# 083a0159debb4bae922130a24b1e6aec
#: ../Doc/library/optparse.rst:435
msgid ""
"First, consider the verbose/quiet example.  If we want :mod:`optparse` to "
"set ``verbose`` to ``True`` unless ``-q`` is seen, then we can do this::"
msgstr ""

#: ../Doc/library/optparse.rst:441
msgid ""
"Since default values apply to the *destination* rather than to any "
"particular option, and these two options happen to have the same "
"destination, this is exactly equivalent::"
msgstr ""

#: ../Doc/library/optparse.rst:448
msgid "Consider this::"
msgstr ""

#: ../Doc/library/optparse.rst:453
msgid ""
"Again, the default value for ``verbose`` will be ``True``: the last default "
"value supplied for any particular destination is the one that counts."
msgstr ""

#: ../Doc/library/optparse.rst:456
msgid ""
"A clearer way to specify default values is the :meth:`set_defaults` method "
"of OptionParser, which you can call at any time before calling :meth:"
"`parse_args`::"
msgstr ""

#: ../Doc/library/optparse.rst:463
msgid ""
"As before, the last value specified for a given option destination is the "
"one that counts.  For clarity, try to use one method or the other of setting "
"default values, not both."
msgstr ""

#: ../Doc/library/optparse.rst:471
msgid "Generating help"
msgstr ""

#: ../Doc/library/optparse.rst:473
msgid ""
":mod:`optparse`'s ability to generate help and usage text automatically is "
"useful for creating user-friendly command-line interfaces.  All you have to "
"do is supply a :attr:`~Option.help` value for each option, and optionally a "
"short usage message for your whole program.  Here's an OptionParser "
"populated with user-friendly (documented) options::"
msgstr ""

# 708f317040bf4da2a49491c8e1083cbe
#: ../Doc/library/optparse.rst:494
msgid ""
"If :mod:`optparse` encounters either ``-h`` or ``--help`` on the command-"
"line, or if you just call :meth:`parser.print_help`, it prints the following "
"to standard output:"
msgstr ""

#: ../Doc/library/optparse.rst:511
msgid ""
"(If the help output is triggered by a help option, :mod:`optparse` exits "
"after printing the help text.)"
msgstr ""

#: ../Doc/library/optparse.rst:514
msgid ""
"There's a lot going on here to help :mod:`optparse` generate the best "
"possible help message:"
msgstr ""

#: ../Doc/library/optparse.rst:517
msgid "the script defines its own usage message::"
msgstr ""

# 7901de8370af4d01ab6708d45b38f390
#: ../Doc/library/optparse.rst:521
msgid ""
":mod:`optparse` expands ``%prog`` in the usage string to the name of the "
"current program, i.e. ``os.path.basename(sys.argv[0])``.  The expanded "
"string is then printed before the detailed option help."
msgstr ""

# 530a02c9dd8a4b5c8588a71715e3883f
#: ../Doc/library/optparse.rst:525
msgid ""
"If you don't supply a usage string, :mod:`optparse` uses a bland but "
"sensible default: ``\"Usage: %prog [options]\"``, which is fine if your "
"script doesn't take any positional arguments."
msgstr ""

#: ../Doc/library/optparse.rst:529
msgid ""
"every option defines a help string, and doesn't worry about line-"
"wrapping--- :mod:`optparse` takes care of wrapping lines and making the help "
"output look good."
msgstr ""

#: ../Doc/library/optparse.rst:533
msgid ""
"options that take a value indicate this fact in their automatically-"
"generated help message, e.g. for the \"mode\" option::"
msgstr ""

# a3c7573076484baf803224c2d1a64225
#: ../Doc/library/optparse.rst:538
msgid ""
"Here, \"MODE\" is called the meta-variable: it stands for the argument that "
"the user is expected to supply to ``-m``/``--mode``.  By default, :mod:"
"`optparse` converts the destination variable name to uppercase and uses that "
"for the meta-variable.  Sometimes, that's not what you want---for example, "
"the ``--filename`` option explicitly sets ``metavar=\"FILE\"``, resulting in "
"this automatically-generated option description::"
msgstr ""

# 16296b8985b04bd593e26de44ec45c2d
#: ../Doc/library/optparse.rst:547
msgid ""
"This is important for more than just saving space, though: the manually "
"written help text uses the meta-variable ``FILE`` to clue the user in that "
"there's a connection between the semi-formal syntax ``-f FILE`` and the "
"informal semantic description \"write output to FILE\". This is a simple but "
"effective way to make your help text a lot clearer and more useful for end "
"users."
msgstr ""

# 6f57672de12740288f4bebfd4549a897
#: ../Doc/library/optparse.rst:560
msgid "Grouping Options"
msgstr ""

#: ../Doc/library/optparse.rst:562
msgid ""
"When dealing with many options, it is convenient to group these options for "
"better help output.  An :class:`OptionParser` can contain several option "
"groups, each of which can contain several options."
msgstr ""

# 339f516586b3453091d1645375b4b71b
#: ../Doc/library/optparse.rst:566
msgid "An option group is obtained using the class :class:`OptionGroup`:"
msgstr ""

#: ../Doc/library/optparse.rst:570 ../Doc/library/optparse.rst:1616
msgid "where"
msgstr ""

# 77bb893bc17949deb6f5941f42495642
#: ../Doc/library/optparse.rst:572
msgid ""
"parser is the :class:`OptionParser` instance the group will be insterted in "
"to"
msgstr ""

# 8ca352600fea4a83b35b64fa0f571c07
#: ../Doc/library/optparse.rst:574
msgid "title is the group title"
msgstr ""

# cff363c70b4a4ea2a0d3631d31069ea6
#: ../Doc/library/optparse.rst:575
msgid "description, optional, is a long description of the group"
msgstr ""

# 35e4d22164b9461695cd0e47c76d5af1
#: ../Doc/library/optparse.rst:577
msgid ""
":class:`OptionGroup` inherits from :class:`OptionContainer` (like :class:"
"`OptionParser`) and so the :meth:`add_option` method can be used to add an "
"option to the group."
msgstr ""

# 8ddb7140621f4d03a0442fb77cb871a0
#: ../Doc/library/optparse.rst:581
msgid ""
"Once all the options are declared, using the :class:`OptionParser` method :"
"meth:`add_option_group` the group is added to the previously defined parser."
msgstr ""

# be2c2f6925ba455b82a850bd7ba93421
#: ../Doc/library/optparse.rst:584
msgid ""
"Continuing with the parser defined in the previous section, adding an :class:"
"`OptionGroup` to a parser is easy::"
msgstr ""

#: ../Doc/library/optparse.rst:593
msgid "This would result in the following help output:"
msgstr ""

# fb49b8d276244350ad020a2ee1962a85
#: ../Doc/library/optparse.rst:614
msgid ""
"A bit more complete example might involve using more than one group: still "
"extending the previous example::"
msgstr ""

# ae191ba83cf94acba555d85082f70924
#: ../Doc/library/optparse.rst:631
msgid "that results in the following output:"
msgstr ""

# 97e04f79ec874a6a8e611d45ae8cb8bf
#: ../Doc/library/optparse.rst:657
msgid ""
"Another interesting method, in particular when working programmatically with "
"option groups is:"
msgstr ""

# 7e1d7834e287486c8a88b6bfb34bb293
#: ../Doc/library/optparse.rst:662
msgid ""
"Return the :class:`OptionGroup` to which the short or long option string "
"*opt_str* (e.g. ``'-o'`` or ``'--option'``) belongs. If there's no such :"
"class:`OptionGroup`, return ``None``."
msgstr ""

#: ../Doc/library/optparse.rst:669
msgid "Printing a version string"
msgstr ""

#: ../Doc/library/optparse.rst:671
msgid ""
"Similar to the brief usage string, :mod:`optparse` can also print a version "
"string for your program.  You have to supply the string as the ``version`` "
"argument to OptionParser::"
msgstr ""

# d77509ff784b437c9c50efa665abf138
#: ../Doc/library/optparse.rst:677
msgid ""
"``%prog`` is expanded just like it is in ``usage``.  Apart from that, "
"``version`` can contain anything you like.  When you supply it, :mod:"
"`optparse` automatically adds a ``--version`` option to your parser. If it "
"encounters this option on the command line, it expands your ``version`` "
"string (by replacing ``%prog``), prints it to stdout, and exits."
msgstr ""

#: ../Doc/library/optparse.rst:683
msgid "For example, if your script is called ``/usr/bin/foo``::"
msgstr ""

#: ../Doc/library/optparse.rst:688
msgid ""
"The following two methods can be used to print and get the ``version`` "
"string:"
msgstr ""

# 671ff94ce59d4a08b989793635e530d1
#: ../Doc/library/optparse.rst:692
msgid ""
"Print the version message for the current program (``self.version``) to "
"*file* (default stdout).  As with :meth:`print_usage`, any occurrence of ``"
"%prog`` in ``self.version`` is replaced with the name of the current "
"program.  Does nothing if ``self.version`` is empty or undefined."
msgstr ""

#: ../Doc/library/optparse.rst:699
msgid ""
"Same as :meth:`print_version` but returns the version string instead of "
"printing it."
msgstr ""

#: ../Doc/library/optparse.rst:706
msgid "How :mod:`optparse` handles errors"
msgstr ""

#: ../Doc/library/optparse.rst:708
msgid ""
"There are two broad classes of errors that :mod:`optparse` has to worry "
"about: programmer errors and user errors.  Programmer errors are usually "
"erroneous calls to :func:`OptionParser.add_option`, e.g. invalid option "
"strings, unknown option attributes, missing option attributes, etc.  These "
"are dealt with in the usual way: raise an exception (either :exc:`optparse."
"OptionError` or :exc:`TypeError`) and let the program crash."
msgstr ""

# 7cb7bacb5da048499717f50cc7bcadf7
#: ../Doc/library/optparse.rst:715
msgid ""
"Handling user errors is much more important, since they are guaranteed to "
"happen no matter how stable your code is.  :mod:`optparse` can automatically "
"detect some user errors, such as bad option arguments (passing ``-n 4x`` "
"where ``-n`` takes an integer argument), missing arguments (``-n`` at the "
"end of the command line, where ``-n`` takes an argument of any type).  Also, "
"you can call :func:`OptionParser.error` to signal an application-defined "
"error condition::"
msgstr ""

#: ../Doc/library/optparse.rst:728
msgid ""
"In either case, :mod:`optparse` handles the error the same way: it prints "
"the program's usage message and an error message to standard error and exits "
"with error status 2."
msgstr ""

# 5747075795f948238fc4c2eddcc0ecca
#: ../Doc/library/optparse.rst:732
msgid ""
"Consider the first example above, where the user passes ``4x`` to an option "
"that takes an integer::"
msgstr ""

#: ../Doc/library/optparse.rst:740
msgid "Or, where the user fails to pass a value at all::"
msgstr ""

#: ../Doc/library/optparse.rst:747
msgid ""
":mod:`optparse`\\ -generated error messages take care always to mention the "
"option involved in the error; be sure to do the same when calling :func:"
"`OptionParser.error` from your application code."
msgstr ""

#: ../Doc/library/optparse.rst:751
msgid ""
"If :mod:`optparse`'s default error-handling behaviour does not suit your "
"needs, you'll need to subclass OptionParser and override its :meth:"
"`~OptionParser.exit` and/or :meth:`~OptionParser.error` methods."
msgstr ""

#: ../Doc/library/optparse.rst:759
msgid "Putting it all together"
msgstr ""

#: ../Doc/library/optparse.rst:761
msgid "Here's what :mod:`optparse`\\ -based scripts usually look like::"
msgstr ""

#: ../Doc/library/optparse.rst:789
msgid "Reference Guide"
msgstr ""

#: ../Doc/library/optparse.rst:795
msgid "Creating the parser"
msgstr ""

#: ../Doc/library/optparse.rst:797
msgid ""
"The first step in using :mod:`optparse` is to create an OptionParser "
"instance."
msgstr ""

#: ../Doc/library/optparse.rst:801
msgid ""
"The OptionParser constructor has no required arguments, but a number of "
"optional keyword arguments.  You should always pass them as keyword "
"arguments, i.e. do not rely on the order in which the arguments are declared."
msgstr ""

#: ../Doc/library/optparse.rst:806
msgid ""
"The usage summary to print when your program is run incorrectly or with a "
"help option.  When :mod:`optparse` prints the usage string, it expands ``"
"%prog`` to ``os.path.basename(sys.argv[0])`` (or to ``prog`` if you passed "
"that keyword argument).  To suppress a usage message, pass the special "
"value :data:`optparse.SUPPRESS_USAGE`."
msgstr ""

#: ../Doc/library/optparse.rst:813
msgid ""
"A list of Option objects to populate the parser with.  The options in "
"``option_list`` are added after any options in ``standard_option_list`` (a "
"class attribute that may be set by OptionParser subclasses), but before any "
"version or help options. Deprecated; use :meth:`add_option` after creating "
"the parser instead."
msgstr ""

#: ../Doc/library/optparse.rst:820
msgid "Class to use when adding options to the parser in :meth:`add_option`."
msgstr ""

# a9dd204f2e9c4f3897d282af0cd7b794
#: ../Doc/library/optparse.rst:823
msgid ""
"A version string to print when the user supplies a version option. If you "
"supply a true value for ``version``, :mod:`optparse` automatically adds a "
"version option with the single option string ``--version``.  The substring ``"
"%prog`` is expanded the same as for ``usage``."
msgstr ""

#: ../Doc/library/optparse.rst:829
msgid ""
"Specifies what to do when options with conflicting option strings are added "
"to the parser; see section :ref:`optparse-conflicts-between-options`."
msgstr ""

#: ../Doc/library/optparse.rst:834
msgid ""
"A paragraph of text giving a brief overview of your program. :mod:`optparse` "
"reformats this paragraph to fit the current terminal width and prints it "
"when the user requests help (after ``usage``, but before the list of "
"options)."
msgstr ""

#: ../Doc/library/optparse.rst:840
msgid ""
"An instance of optparse.HelpFormatter that will be used for printing help "
"text.  :mod:`optparse` provides two concrete classes for this purpose: "
"IndentedHelpFormatter and TitledHelpFormatter."
msgstr ""

# 516242d7e38345ad8dd5ec9846de667f
#: ../Doc/library/optparse.rst:845
msgid ""
"If true, :mod:`optparse` will add a help option (with option strings ``-h`` "
"and ``--help``) to the parser."
msgstr ""

# 620c4dc66de340b288b6bf09affdfe0d
#: ../Doc/library/optparse.rst:849
msgid ""
"The string to use when expanding ``%prog`` in ``usage`` and ``version`` "
"instead of ``os.path.basename(sys.argv[0])``."
msgstr ""

#: ../Doc/library/optparse.rst:853
msgid "A paragraph of help text to print after the option help."
msgstr ""

#: ../Doc/library/optparse.rst:858
msgid "Populating the parser"
msgstr ""

#: ../Doc/library/optparse.rst:860
msgid ""
"There are several ways to populate the parser with options.  The preferred "
"way is by using :meth:`OptionParser.add_option`, as shown in section :ref:"
"`optparse-tutorial`.  :meth:`add_option` can be called in one of two ways:"
msgstr ""

#: ../Doc/library/optparse.rst:864
msgid "pass it an Option instance (as returned by :func:`make_option`)"
msgstr ""

#: ../Doc/library/optparse.rst:866
msgid ""
"pass it any combination of positional and keyword arguments that are "
"acceptable to :func:`make_option` (i.e., to the Option constructor), and it "
"will create the Option instance for you"
msgstr ""

#: ../Doc/library/optparse.rst:870
msgid ""
"The other alternative is to pass a list of pre-constructed Option instances "
"to the OptionParser constructor, as in::"
msgstr ""

#: ../Doc/library/optparse.rst:881
msgid ""
"(:func:`make_option` is a factory function for creating Option instances; "
"currently it is an alias for the Option constructor.  A future version of :"
"mod:`optparse` may split Option into several classes, and :func:"
"`make_option` will pick the right class to instantiate.  Do not instantiate "
"Option directly.)"
msgstr ""

#: ../Doc/library/optparse.rst:890
msgid "Defining options"
msgstr ""

# 0b945a7284084d55a48703bc46fb22f9
#: ../Doc/library/optparse.rst:892
msgid ""
"Each Option instance represents a set of synonymous command-line option "
"strings, e.g. ``-f`` and ``--file``.  You can specify any number of short or "
"long option strings, but you must specify at least one overall option string."
msgstr ""

#: ../Doc/library/optparse.rst:896
msgid ""
"The canonical way to create an :class:`Option` instance is with the :meth:"
"`add_option` method of :class:`OptionParser`."
msgstr ""

#: ../Doc/library/optparse.rst:902
msgid "To define an option with only a short option string::"
msgstr ""

#: ../Doc/library/optparse.rst:906
msgid "And to define an option with only a long option string::"
msgstr ""

#: ../Doc/library/optparse.rst:910
msgid ""
"The keyword arguments define attributes of the new Option object.  The most "
"important option attribute is :attr:`~Option.action`, and it largely "
"determines which other attributes are relevant or required.  If you pass "
"irrelevant option attributes, or fail to pass required ones, :mod:`optparse` "
"raises an :exc:`OptionError` exception explaining your mistake."
msgstr ""

#: ../Doc/library/optparse.rst:916
msgid ""
"An option's *action* determines what :mod:`optparse` does when it encounters "
"this option on the command-line.  The standard option actions hard-coded "
"into :mod:`optparse` are:"
msgstr ""

#: ../Doc/library/optparse.rst:921
msgid "store this option's argument (default)"
msgstr ""

#: ../Doc/library/optparse.rst:927
msgid "store a true value"
msgstr ""

#: ../Doc/library/optparse.rst:930
msgid "store a false value"
msgstr ""

#: ../Doc/library/optparse.rst:936
msgid "append a constant value to a list"
msgstr ""

#: ../Doc/library/optparse.rst:945
msgid ""
"print a usage message including all options and the documentation for them"
msgstr ""

#: ../Doc/library/optparse.rst:947
msgid ""
"(If you don't supply an action, the default is ``\"store\"``.  For this "
"action, you may also supply :attr:`~Option.type` and :attr:`~Option.dest` "
"option attributes; see :ref:`optparse-standard-option-actions`.)"
msgstr ""

#: ../Doc/library/optparse.rst:951
msgid ""
"As you can see, most actions involve storing or updating a value somewhere. :"
"mod:`optparse` always creates a special object for this, conventionally "
"called ``options`` (it happens to be an instance of :class:`optparse."
"Values`).  Option arguments (and various other values) are stored as "
"attributes of this object, according to the :attr:`~Option.dest` "
"(destination) option attribute."
msgstr ""

#: ../Doc/library/optparse.rst:957
msgid "For example, when you call ::"
msgstr ""

#: ../Doc/library/optparse.rst:961
msgid ""
"one of the first things :mod:`optparse` does is create the ``options`` "
"object::"
msgstr ""

#: ../Doc/library/optparse.rst:965
msgid "If one of the options in this parser is defined with ::"
msgstr ""

#: ../Doc/library/optparse.rst:969
msgid "and the command-line being parsed includes any of the following::"
msgstr ""

#: ../Doc/library/optparse.rst:976
msgid ""
"then :mod:`optparse`, on seeing this option, will do the equivalent of ::"
msgstr ""

#: ../Doc/library/optparse.rst:980
msgid ""
"The :attr:`~Option.type` and :attr:`~Option.dest` option attributes are "
"almost as important as :attr:`~Option.action`, but :attr:`~Option.action` is "
"the only one that makes sense for *all* options."
msgstr ""

#: ../Doc/library/optparse.rst:988
msgid "Option attributes"
msgstr ""

#: ../Doc/library/optparse.rst:990
msgid ""
"The following option attributes may be passed as keyword arguments to :meth:"
"`OptionParser.add_option`.  If you pass an option attribute that is not "
"relevant to a particular option, or fail to pass a required option "
"attribute, :mod:`optparse` raises :exc:`OptionError`."
msgstr ""

#: ../Doc/library/optparse.rst:997
msgid "(default: ``\"store\"``)"
msgstr ""

#: ../Doc/library/optparse.rst:999
msgid ""
"Determines :mod:`optparse`'s behaviour when this option is seen on the "
"command line; the available options are documented :ref:`here <optparse-"
"standard-option-actions>`."
msgstr ""

#: ../Doc/library/optparse.rst:1005
msgid "(default: ``\"string\"``)"
msgstr ""

#: ../Doc/library/optparse.rst:1007
msgid ""
"The argument type expected by this option (e.g., ``\"string\"`` or ``\"int"
"\"``); the available option types are documented :ref:`here <optparse-"
"standard-option-types>`."
msgstr ""

#: ../Doc/library/optparse.rst:1013 ../Doc/library/optparse.rst:1063
msgid "(default: derived from option strings)"
msgstr ""

#: ../Doc/library/optparse.rst:1015
msgid ""
"If the option's action implies writing or modifying a value somewhere, this "
"tells :mod:`optparse` where to write it: :attr:`~Option.dest` names an "
"attribute of the ``options`` object that :mod:`optparse` builds as it parses "
"the command line."
msgstr ""

#: ../Doc/library/optparse.rst:1022
msgid ""
"The value to use for this option's destination if the option is not seen on "
"the command line.  See also :meth:`OptionParser.set_defaults`."
msgstr ""

#: ../Doc/library/optparse.rst:1027
msgid "(default: 1)"
msgstr ""

#: ../Doc/library/optparse.rst:1029
msgid ""
"How many arguments of type :attr:`~Option.type` should be consumed when this "
"option is seen.  If > 1, :mod:`optparse` will store a tuple of values to :"
"attr:`~Option.dest`."
msgstr ""

#: ../Doc/library/optparse.rst:1035
msgid "For actions that store a constant value, the constant value to store."
msgstr ""

#: ../Doc/library/optparse.rst:1039
msgid ""
"For options of type ``\"choice\"``, the list of strings the user may choose "
"from."
msgstr ""

#: ../Doc/library/optparse.rst:1044
msgid ""
"For options with action ``\"callback\"``, the callable to call when this "
"option is seen.  See section :ref:`optparse-option-callbacks` for detail on "
"the arguments passed to the callable."
msgstr ""

#: ../Doc/library/optparse.rst:1051
msgid ""
"Additional positional and keyword arguments to pass to ``callback`` after "
"the four standard callback arguments."
msgstr ""

# 1f492458f7f7440887efa21b1abdc914
#: ../Doc/library/optparse.rst:1056
msgid ""
"Help text to print for this option when listing all available options after "
"the user supplies a :attr:`~Option.help` option (such as ``--help``).  If no "
"help text is supplied, the option will be listed without help text.  To hide "
"this option, use the special value :data:`optparse.SUPPRESS_HELP`."
msgstr ""

#: ../Doc/library/optparse.rst:1065
msgid ""
"Stand-in for the option argument(s) to use when printing help text.  See "
"section :ref:`optparse-tutorial` for an example."
msgstr ""

#: ../Doc/library/optparse.rst:1072
msgid "Standard option actions"
msgstr ""

#: ../Doc/library/optparse.rst:1074
msgid ""
"The various option actions all have slightly different requirements and "
"effects. Most actions have several relevant option attributes which you may "
"specify to guide :mod:`optparse`'s behaviour; a few have required "
"attributes, which you must specify for any option using that action."
msgstr ""

#: ../Doc/library/optparse.rst:1079
msgid ""
"``\"store\"`` [relevant: :attr:`~Option.type`, :attr:`~Option.dest`, :attr:"
"`~Option.nargs`, :attr:`~Option.choices`]"
msgstr ""

#: ../Doc/library/optparse.rst:1082
msgid ""
"The option must be followed by an argument, which is converted to a value "
"according to :attr:`~Option.type` and stored in :attr:`~Option.dest`.  If :"
"attr:`~Option.nargs` > 1, multiple arguments will be consumed from the "
"command line; all will be converted according to :attr:`~Option.type` and "
"stored to :attr:`~Option.dest` as a tuple.  See the :ref:`optparse-standard-"
"option-types` section."
msgstr ""

#: ../Doc/library/optparse.rst:1089
msgid ""
"If :attr:`~Option.choices` is supplied (a list or tuple of strings), the "
"type defaults to ``\"choice\"``."
msgstr ""

#: ../Doc/library/optparse.rst:1092
msgid "If :attr:`~Option.type` is not supplied, it defaults to ``\"string\"``."
msgstr ""

# 5c5e07da8018496fa5ed52fa02873343
#: ../Doc/library/optparse.rst:1094
msgid ""
"If :attr:`~Option.dest` is not supplied, :mod:`optparse` derives a "
"destination from the first long option string (e.g., ``--foo-bar`` implies "
"``foo_bar``). If there are no long option strings, :mod:`optparse` derives a "
"destination from the first short option string (e.g., ``-f`` implies ``f``)."
msgstr ""

#: ../Doc/library/optparse.rst:1104
msgid "As it parses the command line ::"
msgstr ""

#: ../Doc/library/optparse.rst:1108
msgid ":mod:`optparse` will set ::"
msgstr ""

#: ../Doc/library/optparse.rst:1114
msgid ""
"``\"store_const\"`` [required: :attr:`~Option.const`; relevant: :attr:"
"`~Option.dest`]"
msgstr ""

#: ../Doc/library/optparse.rst:1117
msgid "The value :attr:`~Option.const` is stored in :attr:`~Option.dest`."
msgstr ""

# 140f73652ba5459695015a16faf23d4d
#: ../Doc/library/optparse.rst:1128
msgid "If ``--noisy`` is seen, :mod:`optparse` will set  ::"
msgstr ""

#: ../Doc/library/optparse.rst:1132
msgid "``\"store_true\"`` [relevant: :attr:`~Option.dest`]"
msgstr ""

#: ../Doc/library/optparse.rst:1134
msgid ""
"A special case of ``\"store_const\"`` that stores a true value to :attr:"
"`~Option.dest`."
msgstr ""

#: ../Doc/library/optparse.rst:1137
msgid "``\"store_false\"`` [relevant: :attr:`~Option.dest`]"
msgstr ""

#: ../Doc/library/optparse.rst:1139
msgid "Like ``\"store_true\"``, but stores a false value."
msgstr ""

#: ../Doc/library/optparse.rst:1146
msgid ""
"``\"append\"`` [relevant: :attr:`~Option.type`, :attr:`~Option.dest`, :attr:"
"`~Option.nargs`, :attr:`~Option.choices`]"
msgstr ""

#: ../Doc/library/optparse.rst:1149
msgid ""
"The option must be followed by an argument, which is appended to the list "
"in :attr:`~Option.dest`.  If no default value for :attr:`~Option.dest` is "
"supplied, an empty list is automatically created when :mod:`optparse` first "
"encounters this option on the command-line.  If :attr:`~Option.nargs` > 1, "
"multiple arguments are consumed, and a tuple of length :attr:`~Option.nargs` "
"is appended to :attr:`~Option.dest`."
msgstr ""

#: ../Doc/library/optparse.rst:1156
msgid ""
"The defaults for :attr:`~Option.type` and :attr:`~Option.dest` are the same "
"as for the ``\"store\"`` action."
msgstr ""

# dded289667204296aac7e556d7ffe42c
#: ../Doc/library/optparse.rst:1163
msgid ""
"If ``-t3`` is seen on the command-line, :mod:`optparse` does the equivalent "
"of::"
msgstr ""

# 3dd8730110e541dfb1bf7e3c1370de39
#: ../Doc/library/optparse.rst:1169
msgid "If, a little later on, ``--tracks=4`` is seen, it does::"
msgstr ""

# eeb8748ed8ba4802bbe70e4ae871ba88
#: ../Doc/library/optparse.rst:1173
msgid ""
"The ``append`` action calls the ``append`` method on the current value of "
"the option.  This means that any default value specified must have an "
"``append`` method.  It also means that if the default value is non-empty, "
"the default elements will be present in the parsed value for the option, "
"with any values from the command line appended after those default values::"
msgstr ""

#: ../Doc/library/optparse.rst:1184
msgid ""
"``\"append_const\"`` [required: :attr:`~Option.const`; relevant: :attr:"
"`~Option.dest`]"
msgstr ""

#: ../Doc/library/optparse.rst:1187
msgid ""
"Like ``\"store_const\"``, but the value :attr:`~Option.const` is appended "
"to :attr:`~Option.dest`; as with ``\"append\"``, :attr:`~Option.dest` "
"defaults to ``None``, and an empty list is automatically created the first "
"time the option is encountered."
msgstr ""

#: ../Doc/library/optparse.rst:1192
msgid "``\"count\"`` [relevant: :attr:`~Option.dest`]"
msgstr ""

#: ../Doc/library/optparse.rst:1194
msgid ""
"Increment the integer stored at :attr:`~Option.dest`.  If no default value "
"is supplied, :attr:`~Option.dest` is set to zero before being incremented "
"the first time."
msgstr ""

# bb63497a444a4e57b5da4d6f74061431
#: ../Doc/library/optparse.rst:1202
msgid ""
"The first time ``-v`` is seen on the command line, :mod:`optparse` does the "
"equivalent of::"
msgstr ""

# 8b1b8762d0cb45408fb7831ccd30964b
#: ../Doc/library/optparse.rst:1208
msgid "Every subsequent occurrence of ``-v`` results in  ::"
msgstr ""

#: ../Doc/library/optparse.rst:1212
msgid ""
"``\"callback\"`` [required: :attr:`~Option.callback`; relevant: :attr:"
"`~Option.type`, :attr:`~Option.nargs`, :attr:`~Option.callback_args`, :attr:"
"`~Option.callback_kwargs`]"
msgstr ""

#: ../Doc/library/optparse.rst:1216
msgid ""
"Call the function specified by :attr:`~Option.callback`, which is called "
"as ::"
msgstr ""

#: ../Doc/library/optparse.rst:1220
msgid "See section :ref:`optparse-option-callbacks` for more detail."
msgstr ""

#: ../Doc/library/optparse.rst:1222
msgid "``\"help\"``"
msgstr ""

#: ../Doc/library/optparse.rst:1224
msgid ""
"Prints a complete help message for all the options in the current option "
"parser.  The help message is constructed from the ``usage`` string passed to "
"OptionParser's constructor and the :attr:`~Option.help` string passed to "
"every option."
msgstr ""

#: ../Doc/library/optparse.rst:1229
msgid ""
"If no :attr:`~Option.help` string is supplied for an option, it will still "
"be listed in the help message.  To omit an option entirely, use the special "
"value :data:`optparse.SUPPRESS_HELP`."
msgstr ""

#: ../Doc/library/optparse.rst:1233
msgid ""
":mod:`optparse` automatically adds a :attr:`~Option.help` option to all "
"OptionParsers, so you do not normally need to create one."
msgstr ""

# 3cb352e6010e4accaf3a9fba00ba9804
#: ../Doc/library/optparse.rst:1251
msgid ""
"If :mod:`optparse` sees either ``-h`` or ``--help`` on the command line, it "
"will print something like the following help message to stdout (assuming "
"``sys.argv[0]`` is ``\"foo.py\"``):"
msgstr ""

#: ../Doc/library/optparse.rst:1264
msgid ""
"After printing the help message, :mod:`optparse` terminates your process "
"with ``sys.exit(0)``."
msgstr ""

#: ../Doc/library/optparse.rst:1267
msgid "``\"version\"``"
msgstr ""

#: ../Doc/library/optparse.rst:1269
msgid ""
"Prints the version number supplied to the OptionParser to stdout and exits. "
"The version number is actually formatted and printed by the ``print_version()"
"`` method of OptionParser.  Generally only relevant if the ``version`` "
"argument is supplied to the OptionParser constructor.  As with :attr:"
"`~Option.help` options, you will rarely create ``version`` options, since :"
"mod:`optparse` automatically adds them when needed."
msgstr ""

#: ../Doc/library/optparse.rst:1280
msgid "Standard option types"
msgstr ""

# e56e6ad06de64f64805d88ef3951c2e5
#: ../Doc/library/optparse.rst:1282
msgid ""
":mod:`optparse` has six built-in option types: ``\"string\"``, ``\"int\"``, "
"``\"long\"``, ``\"choice\"``, ``\"float\"`` and ``\"complex\"``.  If you "
"need to add new option types, see section :ref:`optparse-extending-optparse`."
msgstr ""

#: ../Doc/library/optparse.rst:1286
msgid ""
"Arguments to string options are not checked or converted in any way: the "
"text on the command line is stored in the destination (or passed to the "
"callback) as-is."
msgstr ""

# 251bad05272f4bd7bc6e69dc12d317b3
#: ../Doc/library/optparse.rst:1289
msgid ""
"Integer arguments (type ``\"int\"`` or ``\"long\"``) are parsed as follows:"
msgstr ""

#: ../Doc/library/optparse.rst:1291
msgid "if the number starts with ``0x``, it is parsed as a hexadecimal number"
msgstr ""

#: ../Doc/library/optparse.rst:1293
msgid "if the number starts with ``0``, it is parsed as an octal number"
msgstr ""

#: ../Doc/library/optparse.rst:1295
msgid "if the number starts with ``0b``, it is parsed as a binary number"
msgstr ""

#: ../Doc/library/optparse.rst:1297
msgid "otherwise, the number is parsed as a decimal number"
msgstr ""

# ea70dc22811b4d8baa5bc6737507593b
#: ../Doc/library/optparse.rst:1300
msgid ""
"The conversion is done by calling either :func:`int` or :func:`long` with "
"the appropriate base (2, 8, 10, or 16).  If this fails, so will :mod:"
"`optparse`, although with a more useful error message."
msgstr ""

#: ../Doc/library/optparse.rst:1304
msgid ""
"``\"float\"`` and ``\"complex\"`` option arguments are converted directly "
"with :func:`float` and :func:`complex`, with similar error-handling."
msgstr ""

# f445b98b035c47d79522b1edf9840f99
#: ../Doc/library/optparse.rst:1307
msgid ""
"``\"choice\"`` options are a subtype of ``\"string\"`` options.  The :attr:"
"`~Option.choices` option attribute (a sequence of strings) defines the set "
"of allowed option arguments.  :func:`optparse.check_choice` compares user-"
"supplied option arguments against this master list and raises :exc:"
"`OptionValueError` if an invalid string is given."
msgstr ""

#: ../Doc/library/optparse.rst:1319
msgid ""
"The whole point of creating and populating an OptionParser is to call its :"
"meth:`parse_args` method::"
msgstr ""

#: ../Doc/library/optparse.rst:1324
msgid "where the input parameters are"
msgstr ""

#: ../Doc/library/optparse.rst:1327
msgid "the list of arguments to process (default: ``sys.argv[1:]``)"
msgstr ""

# 93395e73c07f4f72901f72b80c05541f
#: ../Doc/library/optparse.rst:1330
msgid ""
"a :class:`optparse.Values` object to store option arguments in (default: a "
"new instance of :class:`Values`) -- if you give an existing object, the "
"option defaults will not be initialized on it"
msgstr ""

#: ../Doc/library/optparse.rst:1334
msgid "and the return values are"
msgstr ""

#: ../Doc/library/optparse.rst:1337
msgid ""
"the same object that was passed in as ``values``, or the optparse.Values "
"instance created by :mod:`optparse`"
msgstr ""

#: ../Doc/library/optparse.rst:1341
msgid "the leftover positional arguments after all options have been processed"
msgstr ""

#: ../Doc/library/optparse.rst:1343
msgid ""
"The most common usage is to supply neither keyword argument.  If you supply "
"``values``, it will be modified with repeated :func:`setattr` calls (roughly "
"one for every option argument stored to an option destination) and returned "
"by :meth:`parse_args`."
msgstr ""

#: ../Doc/library/optparse.rst:1348
msgid ""
"If :meth:`parse_args` encounters any errors in the argument list, it calls "
"the OptionParser's :meth:`error` method with an appropriate end-user error "
"message. This ultimately terminates your process with an exit status of 2 "
"(the traditional Unix exit status for command-line errors)."
msgstr ""

#: ../Doc/library/optparse.rst:1357
msgid "Querying and manipulating your option parser"
msgstr ""

#: ../Doc/library/optparse.rst:1359
msgid ""
"The default behavior of the option parser can be customized slightly, and "
"you can also poke around your option parser and see what's there.  "
"OptionParser provides several methods to help you out:"
msgstr ""

# 2d034422cbee49749360c91d54a4f36e
#: ../Doc/library/optparse.rst:1365
msgid ""
"Set parsing to stop on the first non-option.  For example, if ``-a`` and ``-"
"b`` are both simple options that take no arguments, :mod:`optparse` normally "
"accepts this syntax::"
msgstr ""

#: ../Doc/library/optparse.rst:1371
msgid "and treats it as equivalent to  ::"
msgstr ""

#: ../Doc/library/optparse.rst:1375
msgid ""
"To disable this feature, call :meth:`disable_interspersed_args`.  This "
"restores traditional Unix syntax, where option parsing stops with the first "
"non-option argument."
msgstr ""

#: ../Doc/library/optparse.rst:1379
msgid ""
"Use this if you have a command processor which runs another command which "
"has options of its own and you want to make sure these options don't get "
"confused.  For example, each command might have a different set of options."
msgstr ""

#: ../Doc/library/optparse.rst:1385
msgid ""
"Set parsing to not stop on the first non-option, allowing interspersing "
"switches with command arguments.  This is the default behavior."
msgstr ""

#: ../Doc/library/optparse.rst:1390
msgid ""
"Returns the Option instance with the option string *opt_str*, or ``None`` if "
"no options have that option string."
msgstr ""

# 92b57b50dcac42b5b60b18e9f816d4bf
#: ../Doc/library/optparse.rst:1395
msgid ""
"Return true if the OptionParser has an option with option string *opt_str* "
"(e.g., ``-q`` or ``--verbose``)."
msgstr ""

#: ../Doc/library/optparse.rst:1400
msgid ""
"If the :class:`OptionParser` has an option corresponding to *opt_str*, that "
"option is removed.  If that option provided any other option strings, all of "
"those option strings become invalid. If *opt_str* does not occur in any "
"option belonging to this :class:`OptionParser`, raises :exc:`ValueError`."
msgstr ""

#: ../Doc/library/optparse.rst:1409
msgid "Conflicts between options"
msgstr ""

#: ../Doc/library/optparse.rst:1411
msgid ""
"If you're not careful, it's easy to define options with conflicting option "
"strings::"
msgstr ""

#: ../Doc/library/optparse.rst:1418
msgid ""
"(This is particularly true if you've defined your own OptionParser subclass "
"with some standard options.)"
msgstr ""

#: ../Doc/library/optparse.rst:1421
msgid ""
"Every time you add an option, :mod:`optparse` checks for conflicts with "
"existing options.  If it finds any, it invokes the current conflict-handling "
"mechanism. You can set the conflict-handling mechanism either in the "
"constructor::"
msgstr ""

#: ../Doc/library/optparse.rst:1427
msgid "or with a separate call::"
msgstr ""

#: ../Doc/library/optparse.rst:1431
msgid "The available conflict handlers are:"
msgstr ""

#: ../Doc/library/optparse.rst:1434
msgid ""
"assume option conflicts are a programming error and raise :exc:"
"`OptionConflictError`"
msgstr ""

#: ../Doc/library/optparse.rst:1438
msgid "resolve option conflicts intelligently (see below)"
msgstr ""

#: ../Doc/library/optparse.rst:1441
msgid ""
"As an example, let's define an :class:`OptionParser` that resolves conflicts "
"intelligently and add conflicting options to it::"
msgstr ""

# 6516def536b244c48067b194837e93c5
#: ../Doc/library/optparse.rst:1448
msgid ""
"At this point, :mod:`optparse` detects that a previously-added option is "
"already using the ``-n`` option string.  Since ``conflict_handler`` is ``"
"\"resolve\"``, it resolves the situation by removing ``-n`` from the earlier "
"option's list of option strings.  Now ``--dry-run`` is the only way for the "
"user to activate that option.  If the user asks for help, the help message "
"will reflect that::"
msgstr ""

#: ../Doc/library/optparse.rst:1459
msgid ""
"It's possible to whittle away the option strings for a previously-added "
"option until there are none left, and the user has no way of invoking that "
"option from the command-line.  In that case, :mod:`optparse` removes that "
"option completely, so it doesn't show up in help text or anywhere else. "
"Carrying on with our existing OptionParser::"
msgstr ""

# 62c1e24b267544b3bca586157d636c99
#: ../Doc/library/optparse.rst:1467
msgid ""
"At this point, the original ``-n``/``--dry-run`` option is no longer "
"accessible, so :mod:`optparse` removes it, leaving this help text::"
msgstr ""

#: ../Doc/library/optparse.rst:1481
msgid ""
"OptionParser instances have several cyclic references.  This should not be a "
"problem for Python's garbage collector, but you may wish to break the cyclic "
"references explicitly by calling :meth:`~OptionParser.destroy` on your "
"OptionParser once you are done with it.  This is particularly useful in long-"
"running applications where large object graphs are reachable from your "
"OptionParser."
msgstr ""

#: ../Doc/library/optparse.rst:1492
msgid "Other methods"
msgstr ""

#: ../Doc/library/optparse.rst:1494
msgid "OptionParser supports several other public methods:"
msgstr ""

#: ../Doc/library/optparse.rst:1498
msgid ""
"Set the usage string according to the rules described above for the "
"``usage`` constructor keyword argument.  Passing ``None`` sets the default "
"usage string; use :data:`optparse.SUPPRESS_USAGE` to suppress a usage "
"message."
msgstr ""

# df05af81017c4df6bc74c2ac235f0b5e
#: ../Doc/library/optparse.rst:1504
msgid ""
"Print the usage message for the current program (``self.usage``) to *file* "
"(default stdout).  Any occurrence of the string ``%prog`` in ``self.usage`` "
"is replaced with the name of the current program.  Does nothing if ``self."
"usage`` is empty or not defined."
msgstr ""

#: ../Doc/library/optparse.rst:1511
msgid ""
"Same as :meth:`print_usage` but returns the usage string instead of printing "
"it."
msgstr ""

#: ../Doc/library/optparse.rst:1516
msgid ""
"Set default values for several option destinations at once.  Using :meth:"
"`set_defaults` is the preferred way to set default values for options, since "
"multiple options can share the same destination.  For example, if several "
"\"mode\" options all set the same destination, any one of them can set the "
"default, and the last one wins::"
msgstr ""

#: ../Doc/library/optparse.rst:1529
msgid "To avoid this confusion, use :meth:`set_defaults`::"
msgstr ""

#: ../Doc/library/optparse.rst:1541
msgid "Option Callbacks"
msgstr ""

#: ../Doc/library/optparse.rst:1543
msgid ""
"When :mod:`optparse`'s built-in actions and types aren't quite enough for "
"your needs, you have two choices: extend :mod:`optparse` or define a "
"callback option. Extending :mod:`optparse` is more general, but overkill for "
"a lot of simple cases.  Quite often a simple callback is all you need."
msgstr ""

#: ../Doc/library/optparse.rst:1548
msgid "There are two steps to defining a callback option:"
msgstr ""

#: ../Doc/library/optparse.rst:1550
msgid "define the option itself using the ``\"callback\"`` action"
msgstr ""

#: ../Doc/library/optparse.rst:1552
msgid ""
"write the callback; this is a function (or method) that takes at least four "
"arguments, as described below"
msgstr ""

#: ../Doc/library/optparse.rst:1559
msgid "Defining a callback option"
msgstr ""

#: ../Doc/library/optparse.rst:1561
msgid ""
"As always, the easiest way to define a callback option is by using the :meth:"
"`OptionParser.add_option` method.  Apart from :attr:`~Option.action`, the "
"only option attribute you must specify is ``callback``, the function to "
"call::"
msgstr ""

# 67e06d633baf461c834be4457451a814
#: ../Doc/library/optparse.rst:1567
msgid ""
"``callback`` is a function (or other callable object), so you must have "
"already defined ``my_callback()`` when you create this callback option. In "
"this simple case, :mod:`optparse` doesn't even know if ``-c`` takes any "
"arguments, which usually means that the option takes no arguments---the mere "
"presence of ``-c`` on the command-line is all it needs to know.  In some "
"circumstances, though, you might want your callback to consume an arbitrary "
"number of command-line arguments.  This is where writing callbacks gets "
"tricky; it's covered later in this section."
msgstr ""

#: ../Doc/library/optparse.rst:1576
msgid ""
":mod:`optparse` always passes four particular arguments to your callback, "
"and it will only pass additional arguments if you specify them via :attr:"
"`~Option.callback_args` and :attr:`~Option.callback_kwargs`.  Thus, the "
"minimal callback function signature is::"
msgstr ""

#: ../Doc/library/optparse.rst:1583
msgid "The four arguments to a callback are described below."
msgstr ""

#: ../Doc/library/optparse.rst:1585
msgid ""
"There are several other option attributes that you can supply when you "
"define a callback option:"
msgstr ""

#: ../Doc/library/optparse.rst:1589
msgid ""
"has its usual meaning: as with the ``\"store\"`` or ``\"append\"`` actions, "
"it instructs :mod:`optparse` to consume one argument and convert it to :attr:"
"`~Option.type`.  Rather than storing the converted value(s) anywhere, "
"though, :mod:`optparse` passes it to your callback function."
msgstr ""

#: ../Doc/library/optparse.rst:1595
msgid ""
"also has its usual meaning: if it is supplied and > 1, :mod:`optparse` will "
"consume :attr:`~Option.nargs` arguments, each of which must be convertible "
"to :attr:`~Option.type`.  It then passes a tuple of converted values to your "
"callback."
msgstr ""

#: ../Doc/library/optparse.rst:1601
msgid "a tuple of extra positional arguments to pass to the callback"
msgstr ""

#: ../Doc/library/optparse.rst:1604
msgid "a dictionary of extra keyword arguments to pass to the callback"
msgstr ""

#: ../Doc/library/optparse.rst:1610
msgid "How callbacks are called"
msgstr ""

#: ../Doc/library/optparse.rst:1612
msgid "All callbacks are called as follows::"
msgstr ""

#: ../Doc/library/optparse.rst:1619
msgid "is the Option instance that's calling the callback"
msgstr ""

# 0df7bae61d914178960935bb1b2a8f2b
#: ../Doc/library/optparse.rst:1622
msgid ""
"is the option string seen on the command-line that's triggering the "
"callback. (If an abbreviated long option was used, ``opt_str`` will be the "
"full, canonical option string---e.g. if the user puts ``--foo`` on the "
"command-line as an abbreviation for ``--foobar``, then ``opt_str`` will be ``"
"\"--foobar\"``.)"
msgstr ""

#: ../Doc/library/optparse.rst:1629
msgid ""
"is the argument to this option seen on the command-line.  :mod:`optparse` "
"will only expect an argument if :attr:`~Option.type` is set; the type of "
"``value`` will be the type implied by the option's type.  If :attr:`~Option."
"type` for this option is ``None`` (no argument expected), then ``value`` "
"will be ``None``.  If :attr:`~Option.nargs` > 1, ``value`` will be a tuple "
"of values of the appropriate type."
msgstr ""

#: ../Doc/library/optparse.rst:1636
msgid ""
"is the OptionParser instance driving the whole thing, mainly useful because "
"you can access some other interesting data through its instance attributes:"
msgstr ""

#: ../Doc/library/optparse.rst:1640
msgid ""
"the current list of leftover arguments, ie. arguments that have been "
"consumed but are neither options nor option arguments. Feel free to modify "
"``parser.largs``, e.g. by adding more arguments to it.  (This list will "
"become ``args``, the second return value of :meth:`parse_args`.)"
msgstr ""

#: ../Doc/library/optparse.rst:1646
msgid ""
"the current list of remaining arguments, ie. with ``opt_str`` and ``value`` "
"(if applicable) removed, and only the arguments following them still there.  "
"Feel free to modify ``parser.rargs``, e.g. by consuming more arguments."
msgstr ""

#: ../Doc/library/optparse.rst:1652
msgid ""
"the object where option values are by default stored (an instance of "
"optparse.OptionValues).  This lets callbacks use the same mechanism as the "
"rest of :mod:`optparse` for storing option values; you don't need to mess "
"around with globals or closures.  You can also access or modify the value(s) "
"of any options already encountered on the command-line."
msgstr ""

#: ../Doc/library/optparse.rst:1659
msgid ""
"is a tuple of arbitrary positional arguments supplied via the :attr:`~Option."
"callback_args` option attribute."
msgstr ""

#: ../Doc/library/optparse.rst:1663
msgid ""
"is a dictionary of arbitrary keyword arguments supplied via :attr:`~Option."
"callback_kwargs`."
msgstr ""

#: ../Doc/library/optparse.rst:1670
msgid "Raising errors in a callback"
msgstr ""

#: ../Doc/library/optparse.rst:1672
msgid ""
"The callback function should raise :exc:`OptionValueError` if there are any "
"problems with the option or its argument(s).  :mod:`optparse` catches this "
"and terminates the program, printing the error message you supply to "
"stderr.  Your message should be clear, concise, accurate, and mention the "
"option at fault. Otherwise, the user will have a hard time figuring out what "
"he did wrong."
msgstr ""

#: ../Doc/library/optparse.rst:1682
msgid "Callback example 1: trivial callback"
msgstr ""

#: ../Doc/library/optparse.rst:1684
msgid ""
"Here's an example of a callback option that takes no arguments, and simply "
"records that the option was seen::"
msgstr ""

#: ../Doc/library/optparse.rst:1692
msgid "Of course, you could do that with the ``\"store_true\"`` action."
msgstr ""

#: ../Doc/library/optparse.rst:1698
msgid "Callback example 2: check option order"
msgstr ""

# 35c0d7012e644a6da279fccf4d9c1b63
#: ../Doc/library/optparse.rst:1700
msgid ""
"Here's a slightly more interesting example: record the fact that ``-a`` is "
"seen, but blow up if it comes after ``-b`` in the command-line.  ::"
msgstr ""

#: ../Doc/library/optparse.rst:1715
msgid "Callback example 3: check option order (generalized)"
msgstr ""

# 464a0fca0c624c40b870914d7d6d2f08
#: ../Doc/library/optparse.rst:1717
msgid ""
"If you want to re-use this callback for several similar options (set a flag, "
"but blow up if ``-b`` has already been seen), it needs a bit of work: the "
"error message and the flag that it sets must be generalized.  ::"
msgstr ""

#: ../Doc/library/optparse.rst:1734
msgid "Callback example 4: check arbitrary condition"
msgstr ""

#: ../Doc/library/optparse.rst:1736
msgid ""
"Of course, you could put any condition in there---you're not limited to "
"checking the values of already-defined options.  For example, if you have "
"options that should not be called when the moon is full, all you have to do "
"is this::"
msgstr ""

#: ../Doc/library/optparse.rst:1749
msgid ""
"(The definition of ``is_moon_full()`` is left as an exercise for the reader.)"
msgstr ""

#: ../Doc/library/optparse.rst:1755
msgid "Callback example 5: fixed arguments"
msgstr ""

#: ../Doc/library/optparse.rst:1757
msgid ""
"Things get slightly more interesting when you define callback options that "
"take a fixed number of arguments.  Specifying that a callback option takes "
"arguments is similar to defining a ``\"store\"`` or ``\"append\"`` option: "
"if you define :attr:`~Option.type`, then the option takes one argument that "
"must be convertible to that type; if you further define :attr:`~Option."
"nargs`, then the option takes :attr:`~Option.nargs` arguments."
msgstr ""

#: ../Doc/library/optparse.rst:1764
msgid ""
"Here's an example that just emulates the standard ``\"store\"`` action::"
msgstr ""

#: ../Doc/library/optparse.rst:1773
msgid ""
"Note that :mod:`optparse` takes care of consuming 3 arguments and converting "
"them to integers for you; all you have to do is store them.  (Or whatever; "
"obviously you don't need a callback for this example.)"
msgstr ""

#: ../Doc/library/optparse.rst:1781
msgid "Callback example 6: variable arguments"
msgstr ""

# f2bb43bf162946ef91275e38937f9b0d
#: ../Doc/library/optparse.rst:1783
msgid ""
"Things get hairy when you want an option to take a variable number of "
"arguments. For this case, you must write a callback, as :mod:`optparse` "
"doesn't provide any built-in capabilities for it.  And you have to deal with "
"certain intricacies of conventional Unix command-line parsing that :mod:"
"`optparse` normally handles for you.  In particular, callbacks should "
"implement the conventional rules for bare ``--`` and ``-`` arguments:"
msgstr ""

# d421d65d8e0349b69cd8cc377cccde6e
#: ../Doc/library/optparse.rst:1790
msgid "either ``--`` or ``-`` can be option arguments"
msgstr ""

# 8bf1019abe124a529f7c0a81d82ee937
#: ../Doc/library/optparse.rst:1792
msgid ""
"bare ``--`` (if not the argument to some option): halt command-line "
"processing and discard the ``--``"
msgstr ""

# 0c27dd7fd37146aeae6eed8715e7af09
#: ../Doc/library/optparse.rst:1795
msgid ""
"bare ``-`` (if not the argument to some option): halt command-line "
"processing but keep the ``-`` (append it to ``parser.largs``)"
msgstr ""

#: ../Doc/library/optparse.rst:1798
msgid ""
"If you want an option that takes a variable number of arguments, there are "
"several subtle, tricky issues to worry about.  The exact implementation you "
"choose will be based on which trade-offs you're willing to make for your "
"application (which is why :mod:`optparse` doesn't support this sort of thing "
"directly)."
msgstr ""

#: ../Doc/library/optparse.rst:1804
msgid ""
"Nevertheless, here's a stab at a callback for an option with variable "
"arguments::"
msgstr ""

#: ../Doc/library/optparse.rst:1838
msgid "Extending :mod:`optparse`"
msgstr ""

#: ../Doc/library/optparse.rst:1840
msgid ""
"Since the two major controlling factors in how :mod:`optparse` interprets "
"command-line options are the action and type of each option, the most likely "
"direction of extension is to add new actions and new types."
msgstr ""

#: ../Doc/library/optparse.rst:1848
msgid "Adding new types"
msgstr ""

#: ../Doc/library/optparse.rst:1850
msgid ""
"To add new types, you need to define your own subclass of :mod:`optparse`'s :"
"class:`Option` class.  This class has a couple of attributes that define :"
"mod:`optparse`'s types: :attr:`~Option.TYPES` and :attr:`~Option."
"TYPE_CHECKER`."
msgstr ""

#: ../Doc/library/optparse.rst:1856
msgid ""
"A tuple of type names; in your subclass, simply define a new tuple :attr:"
"`TYPES` that builds on the standard one."
msgstr ""

#: ../Doc/library/optparse.rst:1861
msgid ""
"A dictionary mapping type names to type-checking functions.  A type-checking "
"function has the following signature::"
msgstr ""

# e5bd58f3e1b24954bdda3c9849442393
#: ../Doc/library/optparse.rst:1866
msgid ""
"where ``option`` is an :class:`Option` instance, ``opt`` is an option string "
"(e.g., ``-f``), and ``value`` is the string from the command line that must "
"be checked and converted to your desired type.  ``check_mytype()`` should "
"return an object of the hypothetical type ``mytype``.  The value returned by "
"a type-checking function will wind up in the OptionValues instance returned "
"by :meth:`OptionParser.parse_args`, or be passed to a callback as the "
"``value`` parameter."
msgstr ""

#: ../Doc/library/optparse.rst:1874
msgid ""
"Your type-checking function should raise :exc:`OptionValueError` if it "
"encounters any problems.  :exc:`OptionValueError` takes a single string "
"argument, which is passed as-is to :class:`OptionParser`'s :meth:`error` "
"method, which in turn prepends the program name and the string ``\"error:"
"\"`` and prints everything to stderr before terminating the process."
msgstr ""

#: ../Doc/library/optparse.rst:1880
msgid ""
"Here's a silly example that demonstrates adding a ``\"complex\"`` option "
"type to parse Python-style complex numbers on the command line.  (This is "
"even sillier than it used to be, because :mod:`optparse` 1.3 added built-in "
"support for complex numbers, but never mind.)"
msgstr ""

#: ../Doc/library/optparse.rst:1885
msgid "First, the necessary imports::"
msgstr ""

#: ../Doc/library/optparse.rst:1890
msgid ""
"You need to define your type-checker first, since it's referred to later (in "
"the :attr:`~Option.TYPE_CHECKER` class attribute of your Option subclass)::"
msgstr ""

#: ../Doc/library/optparse.rst:1900
msgid "Finally, the Option subclass::"
msgstr ""

#: ../Doc/library/optparse.rst:1907
msgid ""
"(If we didn't make a :func:`copy` of :attr:`Option.TYPE_CHECKER`, we would "
"end up modifying the :attr:`~Option.TYPE_CHECKER` attribute of :mod:"
"`optparse`'s Option class.  This being Python, nothing stops you from doing "
"that except good manners and common sense.)"
msgstr ""

#: ../Doc/library/optparse.rst:1912
msgid ""
"That's it!  Now you can write a script that uses the new option type just "
"like any other :mod:`optparse`\\ -based script, except you have to instruct "
"your OptionParser to use MyOption instead of Option::"
msgstr ""

#: ../Doc/library/optparse.rst:1919
msgid ""
"Alternately, you can build your own option list and pass it to OptionParser; "
"if you don't use :meth:`add_option` in the above way, you don't need to tell "
"OptionParser which option class to use::"
msgstr ""

#: ../Doc/library/optparse.rst:1930
msgid "Adding new actions"
msgstr ""

#: ../Doc/library/optparse.rst:1932
msgid ""
"Adding new actions is a bit trickier, because you have to understand that :"
"mod:`optparse` has a couple of classifications for actions:"
msgstr ""

#: ../Doc/library/optparse.rst:1936
msgid ""
"actions that result in :mod:`optparse` storing a value to an attribute of "
"the current OptionValues instance; these options require a :attr:`~Option."
"dest` attribute to be supplied to the Option constructor."
msgstr ""

#: ../Doc/library/optparse.rst:1941
msgid ""
"actions that take a value from the command line and expect it to be of a "
"certain type; or rather, a string that can be converted to a certain type. "
"These options require a :attr:`~Option.type` attribute to the Option "
"constructor."
msgstr ""

#: ../Doc/library/optparse.rst:1946
msgid ""
"These are overlapping sets: some default \"store\" actions are ``\"store"
"\"``, ``\"store_const\"``, ``\"append\"``, and ``\"count\"``, while the "
"default \"typed\" actions are ``\"store\"``, ``\"append\"``, and ``\"callback"
"\"``."
msgstr ""

#: ../Doc/library/optparse.rst:1950
msgid ""
"When you add an action, you need to categorize it by listing it in at least "
"one of the following class attributes of Option (all are lists of strings):"
msgstr ""

#: ../Doc/library/optparse.rst:1955
msgid "All actions must be listed in ACTIONS."
msgstr ""

#: ../Doc/library/optparse.rst:1959
msgid "\"store\" actions are additionally listed here."
msgstr ""

#: ../Doc/library/optparse.rst:1963
msgid "\"typed\" actions are additionally listed here."
msgstr ""

#: ../Doc/library/optparse.rst:1967
msgid ""
"Actions that always take a type (i.e. whose options always take a value) are "
"additionally listed here.  The only effect of this is that :mod:`optparse` "
"assigns the default type, ``\"string\"``, to options with no explicit type "
"whose action is listed in :attr:`ALWAYS_TYPED_ACTIONS`."
msgstr ""

#: ../Doc/library/optparse.rst:1972
msgid ""
"In order to actually implement your new action, you must override Option's :"
"meth:`take_action` method and add a case that recognizes your action."
msgstr ""

# eb65d02b7f314de69caefbe1611f4b30
#: ../Doc/library/optparse.rst:1975
msgid ""
"For example, let's add an ``\"extend\"`` action.  This is similar to the "
"standard ``\"append\"`` action, but instead of taking a single value from "
"the command-line and appending it to an existing list, ``\"extend\"`` will "
"take multiple values in a single comma-delimited string, and extend an "
"existing list with them.  That is, if ``--names`` is an ``\"extend\"`` "
"option of type ``\"string\"``, the command line ::"
msgstr ""

#: ../Doc/library/optparse.rst:1984
msgid "would result in a list  ::"
msgstr ""

#: ../Doc/library/optparse.rst:1988
msgid "Again we define a subclass of Option::"
msgstr ""

#: ../Doc/library/optparse.rst:2005
msgid "Features of note:"
msgstr ""

#: ../Doc/library/optparse.rst:2007
msgid ""
"``\"extend\"`` both expects a value on the command-line and stores that "
"value somewhere, so it goes in both :attr:`~Option.STORE_ACTIONS` and :attr:"
"`~Option.TYPED_ACTIONS`."
msgstr ""

#: ../Doc/library/optparse.rst:2011
msgid ""
"to ensure that :mod:`optparse` assigns the default type of ``\"string\"`` to "
"``\"extend\"`` actions, we put the ``\"extend\"`` action in :attr:`~Option."
"ALWAYS_TYPED_ACTIONS` as well."
msgstr ""

#: ../Doc/library/optparse.rst:2015
msgid ""
":meth:`MyOption.take_action` implements just this one new action, and passes "
"control back to :meth:`Option.take_action` for the standard :mod:`optparse` "
"actions."
msgstr ""

#: ../Doc/library/optparse.rst:2019
msgid ""
"``values`` is an instance of the optparse_parser.Values class, which "
"provides the very useful :meth:`ensure_value` method. :meth:`ensure_value` "
"is essentially :func:`getattr` with a safety valve; it is called as ::"
msgstr ""

#: ../Doc/library/optparse.rst:2025
msgid ""
"If the ``attr`` attribute of ``values`` doesn't exist or is None, then "
"ensure_value() first sets it to ``value``, and then returns 'value. This is "
"very handy for actions like ``\"extend\"``, ``\"append\"``, and ``\"count"
"\"``, all of which accumulate data in a variable and expect that variable to "
"be of a certain type (a list for the first two, an integer for the latter).  "
"Using :meth:`ensure_value` means that scripts using your action don't have "
"to worry about setting a default value for the option destinations in "
"question; they can just leave the default as None and :meth:`ensure_value` "
"will take care of getting it right when it's needed."
msgstr ""

#: ../Doc/library/os.rst:2
msgid ":mod:`os` --- Miscellaneous operating system interfaces"
msgstr ""

#: ../Doc/library/os.rst:8
msgid ""
"This module provides a portable way of using operating system dependent "
"functionality.  If you just want to read or write a file see :func:`open`, "
"if you want to manipulate paths, see the :mod:`os.path` module, and if you "
"want to read all the lines in all the files on the command line see the :mod:"
"`fileinput` module.  For creating temporary files and directories see the :"
"mod:`tempfile` module, and for high-level file and directory handling see "
"the :mod:`shutil` module."
msgstr ""

#: ../Doc/library/os.rst:16
msgid "Notes on the availability of these functions:"
msgstr ""

#: ../Doc/library/os.rst:18
msgid ""
"The design of all built-in operating system dependent modules of Python is "
"such that as long as the same functionality is available, it uses the same "
"interface; for example, the function ``os.stat(path)`` returns stat "
"information about *path* in the same format (which happens to have "
"originated with the POSIX interface)."
msgstr ""

#: ../Doc/library/os.rst:24
msgid ""
"Extensions peculiar to a particular operating system are also available "
"through the :mod:`os` module, but using them is of course a threat to "
"portability."
msgstr ""

#: ../Doc/library/os.rst:28
msgid ""
"An \"Availability: Unix\" note means that this function is commonly found on "
"Unix systems.  It does not make any claims about its existence on a specific "
"operating system."
msgstr ""

#: ../Doc/library/os.rst:32
msgid ""
"If not separately noted, all functions that claim \"Availability: Unix\" are "
"supported on Mac OS X, which builds on a Unix core."
msgstr ""

#: ../Doc/library/os.rst:40
msgid ""
"All functions in this module raise :exc:`OSError` in the case of invalid or "
"inaccessible file names and paths, or other arguments that have the correct "
"type, but are not accepted by the operating system."
msgstr ""

#: ../Doc/library/os.rst:47
msgid "An alias for the built-in :exc:`OSError` exception."
msgstr ""

# d493723cb49f4354827070cceff6f69c
#: ../Doc/library/os.rst:52
msgid ""
"The name of the operating system dependent module imported.  The following "
"names have currently been registered: ``'posix'``, ``'nt'``, ``'os2'``, "
"``'ce'``, ``'java'``, ``'riscos'``."
msgstr ""

# f2a490e4c3004c8c86747d80ad12fbf9
# 56cc62d74f3a434fa13780870879cb29
#: ../Doc/library/os.rst:60 ../Doc/library/sys.rst:768
msgid ""
"The :mod:`platform` module provides detailed checks for the system's "
"identity."
msgstr ""

#: ../Doc/library/os.rst:67
msgid "Process Parameters"
msgstr ""

#: ../Doc/library/os.rst:69
msgid ""
"These functions and data items provide information and operate on the "
"current process and user."
msgstr ""

#: ../Doc/library/os.rst:75
msgid ""
"A mapping object representing the string environment. For example, ``environ"
"['HOME']`` is the pathname of your home directory (on some platforms), and "
"is equivalent to ``getenv(\"HOME\")`` in C."
msgstr ""

#: ../Doc/library/os.rst:79
msgid ""
"This mapping is captured the first time the :mod:`os` module is imported, "
"typically during Python startup as part of processing :file:`site.py`.  "
"Changes to the environment made after this time are not reflected in ``os."
"environ``, except for changes made by modifying ``os.environ`` directly."
msgstr ""

#: ../Doc/library/os.rst:84
msgid ""
"If the platform supports the :func:`putenv` function, this mapping may be "
"used to modify the environment as well as query the environment.  :func:"
"`putenv` will be called automatically when the mapping is modified."
msgstr ""

#: ../Doc/library/os.rst:90
msgid ""
"Calling :func:`putenv` directly does not change ``os.environ``, so it's "
"better to modify ``os.environ``."
msgstr ""

# c7aca0924bfc4d0abfab9477d5794b5e
#: ../Doc/library/os.rst:95
msgid ""
"On some platforms, including FreeBSD and Mac OS X, setting ``environ`` may "
"cause memory leaks.  Refer to the system documentation for :c:func:`putenv`."
msgstr ""

#: ../Doc/library/os.rst:99
msgid ""
"If :func:`putenv` is not provided, a modified copy of this mapping  may be "
"passed to the appropriate process-creation functions to cause  child "
"processes to use a modified environment."
msgstr ""

#: ../Doc/library/os.rst:103
msgid ""
"If the platform supports the :func:`unsetenv` function, you can delete items "
"in this mapping to unset environment variables. :func:`unsetenv` will be "
"called automatically when an item is deleted from ``os.environ``, and when "
"one of the :meth:`pop` or :meth:`clear` methods is called."
msgstr ""

#: ../Doc/library/os.rst:118
msgid "These functions are described in :ref:`os-file-dir`."
msgstr ""

#: ../Doc/library/os.rst:123
msgid ""
"Return the filename corresponding to the controlling terminal of the process."
msgstr ""

#: ../Doc/library/os.rst:125 ../Doc/library/os.rst:133
#: ../Doc/library/os.rst:142 ../Doc/library/os.rst:151
#: ../Doc/library/os.rst:158 ../Doc/library/os.rst:181
#: ../Doc/library/os.rst:194 ../Doc/library/os.rst:202
#: ../Doc/library/os.rst:213 ../Doc/library/os.rst:231
#: ../Doc/library/os.rst:239 ../Doc/library/os.rst:249
#: ../Doc/library/os.rst:260 ../Doc/library/os.rst:296
#: ../Doc/library/os.rst:303 ../Doc/library/os.rst:310
#: ../Doc/library/os.rst:319 ../Doc/library/os.rst:333
#: ../Doc/library/os.rst:342 ../Doc/library/os.rst:349
#: ../Doc/library/os.rst:356 ../Doc/library/os.rst:365
#: ../Doc/library/os.rst:374 ../Doc/library/os.rst:381
#: ../Doc/library/os.rst:390 ../Doc/library/os.rst:399
#: ../Doc/library/os.rst:656 ../Doc/library/os.rst:666
#: ../Doc/library/os.rst:676 ../Doc/library/os.rst:697
#: ../Doc/library/os.rst:712 ../Doc/library/os.rst:732
#: ../Doc/library/os.rst:740 ../Doc/library/os.rst:829
#: ../Doc/library/os.rst:837 ../Doc/library/os.rst:846
#: ../Doc/library/os.rst:1011 ../Doc/library/os.rst:1050
#: ../Doc/library/os.rst:1105 ../Doc/library/os.rst:1113
#: ../Doc/library/os.rst:1124 ../Doc/library/os.rst:1134
#: ../Doc/library/os.rst:1143 ../Doc/library/os.rst:1175
#: ../Doc/library/os.rst:1272 ../Doc/library/os.rst:1293
#: ../Doc/library/os.rst:1498 ../Doc/library/os.rst:1508
#: ../Doc/library/os.rst:1777 ../Doc/library/os.rst:1787
#: ../Doc/library/os.rst:1796 ../Doc/library/os.rst:1805
#: ../Doc/library/os.rst:1814 ../Doc/library/os.rst:1823
#: ../Doc/library/os.rst:1832 ../Doc/library/os.rst:1841
#: ../Doc/library/os.rst:1851 ../Doc/library/os.rst:1861
#: ../Doc/library/os.rst:1870 ../Doc/library/os.rst:1879
#: ../Doc/library/os.rst:1890 ../Doc/library/os.rst:1900
#: ../Doc/library/os.rst:1910 ../Doc/library/os.rst:1919
#: ../Doc/library/os.rst:1928 ../Doc/library/os.rst:1941
#: ../Doc/library/os.rst:1983 ../Doc/library/os.rst:1992
#: ../Doc/library/os.rst:2000 ../Doc/library/os.rst:2198
#: ../Doc/library/os.rst:2237 ../Doc/library/os.rst:2250
#: ../Doc/library/os.rst:2260 ../Doc/library/os.rst:2278
#: ../Doc/library/os.rst:2292 ../Doc/library/os.rst:2302
#: ../Doc/library/os.rst:2312 ../Doc/library/os.rst:2320
#: ../Doc/library/os.rst:2328 ../Doc/library/os.rst:2336
#: ../Doc/library/os.rst:2343 ../Doc/library/os.rst:2350
#: ../Doc/library/os.rst:2386 ../Doc/library/os.rst:2395
#: ../Doc/library/os.rst:2407 ../Doc/library/os.rst:2416
#: ../Doc/library/os.path.rst:250 ../Doc/library/os.path.rst:257
#: ../Doc/library/os.path.rst:267 ../Doc/library/time.rst:466
msgid "Availability: Unix."
msgstr ""

#: ../Doc/library/os.rst:130
msgid ""
"Return the effective group id of the current process.  This corresponds to "
"the \"set id\" bit on the file being executed in the current process."
msgstr ""

#: ../Doc/library/os.rst:140
msgid "Return the current process's effective user id."
msgstr ""

#: ../Doc/library/os.rst:149
msgid "Return the real group id of the current process."
msgstr ""

#: ../Doc/library/os.rst:156
msgid ""
"Return list of supplemental group ids associated with the current process."
msgstr ""

# 4c0d06e8150247e6b6d680c688f38e00
#: ../Doc/library/os.rst:160
msgid ""
"On Mac OS X, :func:`getgroups` behavior differs somewhat from other Unix "
"platforms. If the Python interpreter was built with a deployment target of :"
"const:`10.5` or earlier, :func:`getgroups` returns the list of effective "
"group ids associated with the current user process; this list is limited to "
"a system-defined number of entries, typically 16, and may be modified by "
"calls to :func:`setgroups` if suitably privileged. If built with a "
"deployment target greater than :const:`10.5`, :func:`getgroups` returns the "
"current group access list for the user associated with the effective user id "
"of the process; the group access list may change over the lifetime of the "
"process, it is not affected by calls to :func:`setgroups`, and its length is "
"not limited to 16.  The deployment target value, :const:"
"`MACOSX_DEPLOYMENT_TARGET`, can be obtained with :func:`sysconfig."
"get_config_var`."
msgstr ""

#: ../Doc/library/os.rst:177
msgid ""
"Call the system initgroups() to initialize the group access list with all of "
"the groups of which the specified username is a member, plus the specified "
"group id."
msgstr ""

#: ../Doc/library/os.rst:188
msgid ""
"Return the name of the user logged in on the controlling terminal of the "
"process.  For most purposes, it is more useful to use the environment "
"variable :envvar:`LOGNAME` to find out who the user is, or ``pwd.getpwuid(os."
"getuid())[0]`` to get the login name of the currently effective user id."
msgstr ""

#: ../Doc/library/os.rst:199
msgid ""
"Return the process group id of the process with process id *pid*. If *pid* "
"is 0, the process group id of the current process is returned."
msgstr ""

#: ../Doc/library/os.rst:211
msgid "Return the id of the current process group."
msgstr ""

#: ../Doc/library/os.rst:220
msgid "Return the current process id."
msgstr ""

#: ../Doc/library/os.rst:222 ../Doc/library/os.rst:409
#: ../Doc/library/os.rst:416 ../Doc/library/os.rst:467
#: ../Doc/library/os.rst:490 ../Doc/library/os.rst:509
#: ../Doc/library/os.rst:547 ../Doc/library/os.rst:561
#: ../Doc/library/os.rst:575 ../Doc/library/os.rst:611
#: ../Doc/library/os.rst:632 ../Doc/library/os.rst:641
#: ../Doc/library/os.rst:648 ../Doc/library/os.rst:704
#: ../Doc/library/os.rst:751 ../Doc/library/os.rst:778
#: ../Doc/library/os.rst:804 ../Doc/library/os.rst:813
#: ../Doc/library/os.rst:854 ../Doc/library/os.rst:937
#: ../Doc/library/os.rst:1002 ../Doc/library/os.rst:1020
#: ../Doc/library/os.rst:1027 ../Doc/library/os.rst:1090
#: ../Doc/library/os.rst:1153 ../Doc/library/os.rst:1231
#: ../Doc/library/os.rst:1305 ../Doc/library/os.rst:1335
#: ../Doc/library/os.rst:1359 ../Doc/library/os.rst:1445
#: ../Doc/library/os.rst:1529 ../Doc/library/os.rst:1564
#: ../Doc/library/os.rst:1583 ../Doc/library/os.rst:1698
#: ../Doc/library/os.rst:1747 ../Doc/library/os.rst:1755
#: ../Doc/library/os.rst:2088 ../Doc/library/os.rst:2101
#: ../Doc/library/os.rst:2175
msgid "Availability: Unix, Windows."
msgstr ""

#: ../Doc/library/os.rst:229
msgid "Return the parent's process id."
msgstr ""

#: ../Doc/library/os.rst:236
msgid ""
"Return a tuple (ruid, euid, suid) denoting the current process's real, "
"effective, and saved user ids."
msgstr ""

# 78098247548348389a7a73044c42a31c
#: ../Doc/library/os.rst:246
msgid ""
"Return a tuple (rgid, egid, sgid) denoting the current process's real, "
"effective, and saved group ids."
msgstr ""

#: ../Doc/library/os.rst:258
msgid "Return the current process's user id."
msgstr ""

# c3897b45072f464c8ec9e821944a854d
#: ../Doc/library/os.rst:265
msgid ""
"Return the value of the environment variable *varname* if it exists, or "
"*value* if it doesn't.  *value* defaults to ``None``."
msgstr ""

#: ../Doc/library/os.rst:268 ../Doc/library/os.rst:279
#: ../Doc/library/os.rst:448
msgid "Availability: most flavors of Unix, Windows."
msgstr ""

# ad99efa1c7684053986611e6ed0cb3a4
#: ../Doc/library/os.rst:275
msgid ""
"Set the environment variable named *varname* to the string *value*.  Such "
"changes to the environment affect subprocesses started with :func:`os."
"system`, :func:`popen` or :func:`fork` and :func:`execv`."
msgstr ""

#: ../Doc/library/os.rst:283
msgid ""
"On some platforms, including FreeBSD and Mac OS X, setting ``environ`` may "
"cause memory leaks. Refer to the system documentation for putenv."
msgstr ""

#: ../Doc/library/os.rst:286
msgid ""
"When :func:`putenv` is supported, assignments to items in ``os.environ`` are "
"automatically translated into corresponding calls to :func:`putenv`; "
"however, calls to :func:`putenv` don't update ``os.environ``, so it is "
"actually preferable to assign to items of ``os.environ``."
msgstr ""

#: ../Doc/library/os.rst:294
msgid "Set the current process's effective group id."
msgstr ""

#: ../Doc/library/os.rst:301
msgid "Set the current process's effective user id."
msgstr ""

#: ../Doc/library/os.rst:308
msgid "Set the current process' group id."
msgstr ""

#: ../Doc/library/os.rst:315
msgid ""
"Set the list of supplemental group ids associated with the current process "
"to *groups*. *groups* must be a sequence, and each element must be an "
"integer identifying a group. This operation is typically available only to "
"the superuser."
msgstr ""

# da60c9148aa04d01862081f4c433408f
#: ../Doc/library/os.rst:323
msgid ""
"On Mac OS X, the length of *groups* may not exceed the system-defined "
"maximum number of effective group ids, typically 16. See the documentation "
"for :func:`getgroups` for cases where it may not return the same group list "
"set by calling setgroups()."
msgstr ""

# 91d4a2e7e4174fc3a1c38d91e231c1cb
#: ../Doc/library/os.rst:330
msgid ""
"Call the system call :c:func:`setpgrp` or :c:func:`setpgrp(0, 0)` depending "
"on which version is implemented (if any).  See the Unix manual for the "
"semantics."
msgstr ""

# 9751899ea8914aac8d061a8e8320dfe7
#: ../Doc/library/os.rst:338
msgid ""
"Call the system call :c:func:`setpgid` to set the process group id of the "
"process with id *pid* to the process group with id *pgrp*.  See the Unix "
"manual for the semantics."
msgstr ""

#: ../Doc/library/os.rst:347
msgid "Set the current process's real and effective group ids."
msgstr ""

#: ../Doc/library/os.rst:354
msgid "Set the current process's real, effective, and saved group ids."
msgstr ""

#: ../Doc/library/os.rst:363
msgid "Set the current process's real, effective, and saved user ids."
msgstr ""

#: ../Doc/library/os.rst:372
msgid "Set the current process's real and effective user ids."
msgstr ""

# 2666388a5cb04b808fc2e853b38d9feb
#: ../Doc/library/os.rst:379
msgid ""
"Call the system call :c:func:`getsid`.  See the Unix manual for the "
"semantics."
msgstr ""

# d995c43f723f41c9a414e9d9fec263f2
#: ../Doc/library/os.rst:388
msgid ""
"Call the system call :c:func:`setsid`.  See the Unix manual for the "
"semantics."
msgstr ""

#: ../Doc/library/os.rst:397
msgid "Set the current process's user id."
msgstr ""

# 6f2b5e9926564c479cb98708b0824b2e
#: ../Doc/library/os.rst:405
msgid ""
"Return the error message corresponding to the error code in *code*. On "
"platforms where :c:func:`strerror` returns ``NULL`` when given an unknown "
"error number, :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/os.rst:414
msgid "Set the current numeric umask and return the previous umask."
msgstr ""

#: ../Doc/library/os.rst:425
msgid ""
"Return a 5-tuple containing information identifying the current operating "
"system.  The tuple contains 5 strings: ``(sysname, nodename, release, "
"version, machine)``.  Some systems truncate the nodename to 8 characters or "
"to the leading component; a better way to get the hostname is :func:`socket."
"gethostname`  or even ``socket.gethostbyaddr(socket.gethostname())``."
msgstr ""

#: ../Doc/library/os.rst:432
msgid "Availability: recent flavors of Unix."
msgstr ""

# 058697db1e2045839a463af5e5a988d8
#: ../Doc/library/os.rst:439
msgid ""
"Unset (delete) the environment variable named *varname*. Such changes to the "
"environment affect subprocesses started with :func:`os.system`, :func:"
"`popen` or :func:`fork` and :func:`execv`."
msgstr ""

#: ../Doc/library/os.rst:443
msgid ""
"When :func:`unsetenv` is supported, deletion of items in ``os.environ`` is "
"automatically translated into a corresponding call to :func:`unsetenv`; "
"however, calls to :func:`unsetenv` don't update ``os.environ``, so it is "
"actually preferable to delete items of ``os.environ``."
msgstr ""

#: ../Doc/library/os.rst:454
msgid "File Object Creation"
msgstr ""

#: ../Doc/library/os.rst:456
msgid "These functions create new file objects. (See also :func:`open`.)"
msgstr ""

#: ../Doc/library/os.rst:463
msgid ""
"Return an open file object connected to the file descriptor *fd*.  The "
"*mode* and *bufsize* arguments have the same meaning as the corresponding "
"arguments to the built-in :func:`open` function."
msgstr ""

# 0b258d8757f34503bcf526650fdff19f
#: ../Doc/library/os.rst:481
msgid ""
"Open a pipe to or from *command*.  The return value is an open file object "
"connected to the pipe, which can be read or written depending on whether "
"*mode* is ``'r'`` (default) or ``'w'``. The *bufsize* argument has the same "
"meaning as the corresponding argument to the built-in :func:`open` "
"function.  The exit status of the command (encoded in the format specified "
"for :func:`wait`) is available as the return value of the :meth:`~file."
"close` method of the file object, except that when the exit status is zero "
"(termination without errors), ``None`` is returned."
msgstr ""

# 2f5d747cd2634855b2e12d3df40a7486
#: ../Doc/library/os.rst:505
msgid ""
"Return a new file object opened in update mode (``w+b``).  The file has no "
"directory entries associated with it and will be automatically deleted once "
"there are no file descriptors for the file."
msgstr ""

# 8a21ce3138564606ace202099b560a6a
#: ../Doc/library/os.rst:511
msgid ""
"There are a number of different :func:`popen\\*` functions that provide "
"slightly different ways to create subprocesses."
msgstr ""

# 88270c723e60416d9ef21d754a29da18
#: ../Doc/library/os.rst:518
msgid ""
"For each of the :func:`popen\\*` variants, if *bufsize* is specified, it "
"specifies the buffer size for the I/O pipes. *mode*, if provided, should be "
"the string ``'b'`` or ``'t'``; on Windows this is needed to determine "
"whether the file objects should be opened in binary or text mode.  The "
"default value for *mode* is ``'t'``."
msgstr ""

# 122b07a8427549108bd1de7168b37927
#: ../Doc/library/os.rst:524
msgid ""
"Also, for each of these variants, on Unix, *cmd* may be a sequence, in which "
"case arguments will be passed directly to the program without shell "
"intervention (as with :func:`os.spawnv`). If *cmd* is a string it will be "
"passed to the shell (as with :func:`os.system`)."
msgstr ""

# 7d675590d3f94e9995ff2ff331ab7b64
#: ../Doc/library/os.rst:529
msgid ""
"These methods do not make it possible to retrieve the exit status from the "
"child processes.  The only way to control the input and output streams and "
"also retrieve the return codes is to use the :mod:`subprocess` module; these "
"are only available on Unix."
msgstr ""

# dedc509e66cf4a88913201d9eddb71ed
#: ../Doc/library/os.rst:534
msgid ""
"For a discussion of possible deadlock conditions related to the use of these "
"functions, see :ref:`popen2-flow-control`."
msgstr ""

# 6aac9f7cd2204e2d9bf6039fa948fa06
#: ../Doc/library/os.rst:540
msgid ""
"Execute *cmd* as a sub-process and return the file objects ``(child_stdin, "
"child_stdout)``."
msgstr ""

# abc5b1a16d31443496935c84582c2bfe
#: ../Doc/library/os.rst:554
msgid ""
"Execute *cmd* as a sub-process and return the file objects ``(child_stdin, "
"child_stdout, child_stderr)``."
msgstr ""

# 567c3240e62e46fb93d9abc951ccd71d
#: ../Doc/library/os.rst:568
msgid ""
"Execute *cmd* as a sub-process and return the file objects ``(child_stdin, "
"child_stdout_and_stderr)``."
msgstr ""

# b79837baae2f40c9a58612124c72e29f
#: ../Doc/library/os.rst:579
msgid ""
"(Note that ``child_stdin, child_stdout, and child_stderr`` are named from "
"the point of view of the child process, so *child_stdin* is the child's "
"standard input.)"
msgstr ""

# 6e2f2b4c901c4eeb8a97a702d88b6875
#: ../Doc/library/os.rst:583
msgid ""
"This functionality is also available in the :mod:`popen2` module using "
"functions of the same names, but the return values of those functions have a "
"different order."
msgstr ""

#: ../Doc/library/os.rst:591
msgid "File Descriptor Operations"
msgstr ""

#: ../Doc/library/os.rst:593
msgid ""
"These functions operate on I/O streams referenced using file descriptors."
msgstr ""

#: ../Doc/library/os.rst:595
msgid ""
"File descriptors are small integers corresponding to a file that has been "
"opened by the current process.  For example, standard input is usually file "
"descriptor 0, standard output is 1, and standard error is 2.  Further files "
"opened by a process will then be assigned 3, 4, 5, and so forth.  The name "
"\"file descriptor\" is slightly deceptive; on Unix platforms, sockets and "
"pipes are also referenced by file descriptors."
msgstr ""

#: ../Doc/library/os.rst:602
msgid ""
"The :meth:`~file.fileno` method can be used to obtain the file descriptor "
"associated with a file object when required.  Note that using the file "
"descriptor directly will bypass the file object methods, ignoring aspects "
"such as internal buffering of data."
msgstr ""

#: ../Doc/library/os.rst:609
msgid "Close file descriptor *fd*."
msgstr ""

#: ../Doc/library/os.rst:615
msgid ""
"This function is intended for low-level I/O and must be applied to a file "
"descriptor as returned by :func:`os.open` or :func:`pipe`.  To close a "
"\"file object\" returned by the built-in function :func:`open` or by :func:"
"`popen` or :func:`fdopen`, use its :meth:`~file.close` method."
msgstr ""

#: ../Doc/library/os.rst:623
msgid ""
"Close all file descriptors from *fd_low* (inclusive) to *fd_high* "
"(exclusive), ignoring errors. Equivalent to::"
msgstr ""

#: ../Doc/library/os.rst:639
msgid "Return a duplicate of file descriptor *fd*."
msgstr ""

#: ../Doc/library/os.rst:646
msgid ""
"Duplicate file descriptor *fd* to *fd2*, closing the latter first if "
"necessary."
msgstr ""

#: ../Doc/library/os.rst:653
msgid ""
"Change the mode of the file given by *fd* to the numeric *mode*.  See the "
"docs for :func:`chmod` for possible values of *mode*."
msgstr ""

#: ../Doc/library/os.rst:663
msgid ""
"Change the owner and group id of the file given by *fd* to the numeric *uid* "
"and *gid*.  To leave one of the ids unchanged, set it to -1."
msgstr ""

#: ../Doc/library/os.rst:673
msgid ""
"Force write of file with filedescriptor *fd* to disk. Does not force update "
"of metadata."
msgstr ""

#: ../Doc/library/os.rst:679
msgid "This function is not available on MacOS."
msgstr ""

#: ../Doc/library/os.rst:684
msgid ""
"Return system configuration information relevant to an open file. *name* "
"specifies the configuration value to retrieve; it may be a string which is "
"the name of a defined system value; these names are specified in a number of "
"standards (POSIX.1, Unix 95, Unix 98, and others).  Some platforms define "
"additional names as well.  The names known to the host operating system are "
"given in the ``pathconf_names`` dictionary.  For configuration variables not "
"included in that mapping, passing an integer for *name* is also accepted."
msgstr ""

#: ../Doc/library/os.rst:692 ../Doc/library/os.rst:1267
msgid ""
"If *name* is a string and is not known, :exc:`ValueError` is raised.  If a "
"specific value for *name* is not supported by the host system, even if it is "
"included in ``pathconf_names``, an :exc:`OSError` is raised with :const:"
"`errno.EINVAL` for the error number."
msgstr ""

# 95d09d22e9bb45bab688f611a71db0bd
#: ../Doc/library/os.rst:702
msgid "Return status for file descriptor *fd*, like :func:`~os.stat`."
msgstr ""

#: ../Doc/library/os.rst:709
msgid ""
"Return information about the filesystem containing the file associated with "
"file descriptor *fd*, like :func:`statvfs`."
msgstr ""

# 0cefdc1e81d94daea744cdfbf0448860
#: ../Doc/library/os.rst:717
msgid ""
"Force write of file with filedescriptor *fd* to disk.  On Unix, this calls "
"the native :c:func:`fsync` function; on Windows, the MS :c:func:`_commit` "
"function."
msgstr ""

#: ../Doc/library/os.rst:720
msgid ""
"If you're starting with a Python file object *f*, first do ``f.flush()``, "
"and then do ``os.fsync(f.fileno())``, to ensure that all internal buffers "
"associated with *f* are written to disk."
msgstr ""

# f45e060d59444a09ad9fd4d937b4e66b
#: ../Doc/library/os.rst:724
msgid "Availability: Unix, and Windows starting in 2.2.3."
msgstr ""

#: ../Doc/library/os.rst:729
msgid ""
"Truncate the file corresponding to file descriptor *fd*, so that it is at "
"most *length* bytes in size."
msgstr ""

#: ../Doc/library/os.rst:737
msgid ""
"Return ``True`` if the file descriptor *fd* is open and connected to a tty(-"
"like) device, else ``False``."
msgstr ""

#: ../Doc/library/os.rst:745
msgid ""
"Set the current position of file descriptor *fd* to position *pos*, modified "
"by *how*: :const:`SEEK_SET` or ``0`` to set the position relative to the "
"beginning of the file; :const:`SEEK_CUR` or ``1`` to set it relative to the "
"current position; :const:`os.SEEK_END` or ``2`` to set it relative to the "
"end of the file."
msgstr ""

# f5223eac96e7412e8b093746703ed7fa
#: ../Doc/library/os.rst:758
msgid ""
"Parameters to the :func:`lseek` function. Their values are 0, 1, and 2, "
"respectively."
msgstr ""

# 33938226ba654563bf9d647b1f545c1d
#: ../Doc/library/os.rst:761
msgid "Availability: Windows, Unix."
msgstr ""

# d1f37096a2f5489da366301ad8841e6d
#: ../Doc/library/os.rst:768
msgid ""
"Open the file *file* and set various flags according to *flags* and possibly "
"its mode according to *mode*. The default *mode* is ``0777`` (octal), and "
"the current umask value is first masked out.  Return the file descriptor for "
"the newly opened file."
msgstr ""

#: ../Doc/library/os.rst:773
msgid ""
"For a description of the flag and mode values, see the C run-time "
"documentation; flag constants (like :const:`O_RDONLY` and :const:`O_WRONLY`) "
"are defined in this module too (see :ref:`open-constants`).  In particular, "
"on Windows adding :const:`O_BINARY` is needed to open files in binary mode."
msgstr ""

# fe6616ef520647d4aa50f03ba0e9cb57
#: ../Doc/library/os.rst:782
msgid ""
"This function is intended for low-level I/O.  For normal usage, use the "
"built-in function :func:`open`, which returns a \"file object\" with :meth:"
"`~file.read` and :meth:`~file.write` methods (and many more).  To wrap a "
"file descriptor in a \"file object\", use :func:`fdopen`."
msgstr ""

#: ../Doc/library/os.rst:792
msgid ""
"Open a new pseudo-terminal pair. Return a pair of file descriptors ``"
"(master, slave)`` for the pty and the tty, respectively. For a (slightly) "
"more portable approach, use the :mod:`pty` module."
msgstr ""

#: ../Doc/library/os.rst:796 ../Doc/library/os.rst:1952
msgid "Availability: some flavors of Unix."
msgstr ""

#: ../Doc/library/os.rst:801
msgid ""
"Create a pipe.  Return a pair of file descriptors ``(r, w)`` usable for "
"reading and writing, respectively."
msgstr ""

# cc56b577142045d4ab18a76eeb93ea2c
#: ../Doc/library/os.rst:809
msgid ""
"Read at most *n* bytes from file descriptor *fd*. Return a string containing "
"the bytes read.  If the end of the file referred to by *fd* has been "
"reached, an empty string is returned."
msgstr ""

#: ../Doc/library/os.rst:817
msgid ""
"This function is intended for low-level I/O and must be applied to a file "
"descriptor as returned by :func:`os.open` or :func:`pipe`.  To read a \"file "
"object\" returned by the built-in function :func:`open` or by :func:`popen` "
"or :func:`fdopen`, or :data:`sys.stdin`, use its :meth:`~file.read` or :meth:"
"`~file.readline` methods."
msgstr ""

#: ../Doc/library/os.rst:826
msgid ""
"Return the process group associated with the terminal given by *fd* (an open "
"file descriptor as returned by :func:`os.open`)."
msgstr ""

#: ../Doc/library/os.rst:834
msgid ""
"Set the process group associated with the terminal given by *fd* (an open "
"file descriptor as returned by :func:`os.open`) to *pg*."
msgstr ""

#: ../Doc/library/os.rst:842
msgid ""
"Return a string which specifies the terminal device associated with file "
"descriptor *fd*.  If *fd* is not associated with a terminal device, an "
"exception is raised."
msgstr ""

# d50621c4308542619d0dd15cdc82dcb6
#: ../Doc/library/os.rst:851
msgid ""
"Write the string *str* to file descriptor *fd*. Return the number of bytes "
"actually written."
msgstr ""

#: ../Doc/library/os.rst:858
msgid ""
"This function is intended for low-level I/O and must be applied to a file "
"descriptor as returned by :func:`os.open` or :func:`pipe`.  To write a "
"\"file object\" returned by the built-in function :func:`open` or by :func:"
"`popen` or :func:`fdopen`, or :data:`sys.stdout` or :data:`sys.stderr`, use "
"its :meth:`~file.write` method."
msgstr ""

#: ../Doc/library/os.rst:868
msgid "``open()`` flag constants"
msgstr ""

#: ../Doc/library/os.rst:870
msgid ""
"The following constants are options for the *flags* parameter to the :func:"
"`~os.open` function.  They can be combined using the bitwise OR operator ``|"
"``.  Some of them are not available on all platforms.  For descriptions of "
"their availability and use, consult the :manpage:`open(2)` manual page on "
"Unix or `the MSDN <http://msdn.microsoft.com/en-us/library/z0kc8e3z.aspx>`_ "
"on Windows."
msgstr ""

#: ../Doc/library/os.rst:885
msgid "These constants are available on Unix and Windows."
msgstr ""

#: ../Doc/library/os.rst:897
msgid "These constants are only available on Unix."
msgstr ""

#: ../Doc/library/os.rst:908
msgid "These constants are only available on Windows."
msgstr ""

#: ../Doc/library/os.rst:917
msgid ""
"These constants are GNU extensions and not present if they are not defined "
"by the C library."
msgstr ""

#: ../Doc/library/os.rst:924
msgid "Files and Directories"
msgstr ""

#: ../Doc/library/os.rst:928
msgid ""
"Use the real uid/gid to test for access to *path*.  Note that most "
"operations will use the effective uid/gid, therefore this routine can be "
"used in a suid/sgid environment to test if the invoking user has the "
"specified access to *path*.  *mode* should be :const:`F_OK` to test the "
"existence of *path*, or it can be the inclusive OR of one or more of :const:"
"`R_OK`, :const:`W_OK`, and :const:`X_OK` to test permissions.  Return :const:"
"`True` if access is allowed, :const:`False` if not. See the Unix man page :"
"manpage:`access(2)` for more information."
msgstr ""

# 4f2000bfa70844f2bbfa755d715aea18
#: ../Doc/library/os.rst:941
msgid ""
"Using :func:`access` to check if a user is authorized to e.g. open a file "
"before actually doing so using :func:`open` creates a security hole, because "
"the user might exploit the short time interval between checking and opening "
"the file to manipulate it. It's preferable to use :term:`EAFP` techniques. "
"For example::"
msgstr ""

# 7ad506f73a2e42cd9f7dbd91009e885d
#: ../Doc/library/os.rst:952
msgid "is better written as::"
msgstr ""

#: ../Doc/library/os.rst:967
msgid ""
"I/O operations may fail even when :func:`access` indicates that they would "
"succeed, particularly for operations on network filesystems which may have "
"permissions semantics beyond the usual POSIX permission-bit model."
msgstr ""

#: ../Doc/library/os.rst:974
msgid ""
"Value to pass as the *mode* parameter of :func:`access` to test the "
"existence of *path*."
msgstr ""

#: ../Doc/library/os.rst:980
msgid ""
"Value to include in the *mode* parameter of :func:`access` to test the "
"readability of *path*."
msgstr ""

#: ../Doc/library/os.rst:986
msgid ""
"Value to include in the *mode* parameter of :func:`access` to test the "
"writability of *path*."
msgstr ""

#: ../Doc/library/os.rst:992
msgid ""
"Value to include in the *mode* parameter of :func:`access` to determine if "
"*path* can be executed."
msgstr ""

#: ../Doc/library/os.rst:1000
msgid "Change the current working directory to *path*."
msgstr ""

#: ../Doc/library/os.rst:1007
msgid ""
"Change the current working directory to the directory represented by the "
"file descriptor *fd*.  The descriptor must refer to an opened directory, not "
"an open file."
msgstr ""

#: ../Doc/library/os.rst:1018
msgid "Return a string representing the current working directory."
msgstr ""

# 285d98a99bf34ce5ae0fe766221e4f77
#: ../Doc/library/os.rst:1025
msgid "Return a Unicode object representing the current working directory."
msgstr ""

#: ../Doc/library/os.rst:1034
msgid ""
"Set the flags of *path* to the numeric *flags*. *flags* may take a "
"combination (bitwise OR) of the following values (as defined in the :mod:"
"`stat` module):"
msgstr ""

# ae0add4f9a4c4c4086ce7e2414b6a199
#: ../Doc/library/os.rst:1037
msgid ":data:`stat.UF_NODUMP`"
msgstr ""

# 7b90031c64cf4633967f0e6fcc79de4e
#: ../Doc/library/os.rst:1038
msgid ":data:`stat.UF_IMMUTABLE`"
msgstr ""

# aaa81ecf88664178b180f86bba4ed023
#: ../Doc/library/os.rst:1039
msgid ":data:`stat.UF_APPEND`"
msgstr ""

# 0bfd6add9b01496dbd96531869a216a4
#: ../Doc/library/os.rst:1040
msgid ":data:`stat.UF_OPAQUE`"
msgstr ""

# 34272cc849e845a4a9dfe9cb3f7b20f1
#: ../Doc/library/os.rst:1041
msgid ":data:`stat.UF_NOUNLINK`"
msgstr ""

# a04abbe26afe453da43ab71937195edd
#: ../Doc/library/os.rst:1042
msgid ":data:`stat.UF_COMPRESSED`"
msgstr ""

# bc953bfd3ed94690924a9b3309c4e349
#: ../Doc/library/os.rst:1043
msgid ":data:`stat.UF_HIDDEN`"
msgstr ""

# 613e858cb6294d35958407794e94e9af
#: ../Doc/library/os.rst:1044
msgid ":data:`stat.SF_ARCHIVED`"
msgstr ""

# 7073fafc9e4f4f54aee2dd1b382a3ecc
#: ../Doc/library/os.rst:1045
msgid ":data:`stat.SF_IMMUTABLE`"
msgstr ""

# 21735c1d04004c9fb5e290acbdfc32d9
#: ../Doc/library/os.rst:1046
msgid ":data:`stat.SF_APPEND`"
msgstr ""

# b22ebc9576134bc08237d115d5b1fe4c
#: ../Doc/library/os.rst:1047
msgid ":data:`stat.SF_NOUNLINK`"
msgstr ""

# 2e66729b13a945ee85e1b4237bf30076
#: ../Doc/library/os.rst:1048
msgid ":data:`stat.SF_SNAPSHOT`"
msgstr ""

#: ../Doc/library/os.rst:1057
msgid ""
"Change the root directory of the current process to *path*. Availability: "
"Unix."
msgstr ""

#: ../Doc/library/os.rst:1065
msgid ""
"Change the mode of *path* to the numeric *mode*. *mode* may take one of the "
"following values (as defined in the :mod:`stat` module) or bitwise ORed "
"combinations of them:"
msgstr ""

#: ../Doc/library/os.rst:1070
msgid ":data:`stat.S_ISUID`"
msgstr ""

#: ../Doc/library/os.rst:1071
msgid ":data:`stat.S_ISGID`"
msgstr ""

#: ../Doc/library/os.rst:1072
msgid ":data:`stat.S_ENFMT`"
msgstr ""

#: ../Doc/library/os.rst:1073
msgid ":data:`stat.S_ISVTX`"
msgstr ""

#: ../Doc/library/os.rst:1074
msgid ":data:`stat.S_IREAD`"
msgstr ""

#: ../Doc/library/os.rst:1075
msgid ":data:`stat.S_IWRITE`"
msgstr ""

#: ../Doc/library/os.rst:1076
msgid ":data:`stat.S_IEXEC`"
msgstr ""

#: ../Doc/library/os.rst:1077
msgid ":data:`stat.S_IRWXU`"
msgstr ""

#: ../Doc/library/os.rst:1078
msgid ":data:`stat.S_IRUSR`"
msgstr ""

#: ../Doc/library/os.rst:1079
msgid ":data:`stat.S_IWUSR`"
msgstr ""

#: ../Doc/library/os.rst:1080
msgid ":data:`stat.S_IXUSR`"
msgstr ""

#: ../Doc/library/os.rst:1081
msgid ":data:`stat.S_IRWXG`"
msgstr ""

#: ../Doc/library/os.rst:1082
msgid ":data:`stat.S_IRGRP`"
msgstr ""

#: ../Doc/library/os.rst:1083
msgid ":data:`stat.S_IWGRP`"
msgstr ""

#: ../Doc/library/os.rst:1084
msgid ":data:`stat.S_IXGRP`"
msgstr ""

#: ../Doc/library/os.rst:1085
msgid ":data:`stat.S_IRWXO`"
msgstr ""

#: ../Doc/library/os.rst:1086
msgid ":data:`stat.S_IROTH`"
msgstr ""

#: ../Doc/library/os.rst:1087
msgid ":data:`stat.S_IWOTH`"
msgstr ""

#: ../Doc/library/os.rst:1088
msgid ":data:`stat.S_IXOTH`"
msgstr ""

#: ../Doc/library/os.rst:1094
msgid ""
"Although Windows supports :func:`chmod`, you can only  set the file's read-"
"only flag with it (via the ``stat.S_IWRITE``  and ``stat.S_IREAD`` constants "
"or a corresponding integer value).  All other bits are ignored."
msgstr ""

#: ../Doc/library/os.rst:1102
msgid ""
"Change the owner and group id of *path* to the numeric *uid* and *gid*. To "
"leave one of the ids unchanged, set it to -1."
msgstr ""

#: ../Doc/library/os.rst:1110
msgid ""
"Set the flags of *path* to the numeric *flags*, like :func:`chflags`, but do "
"not follow symbolic links."
msgstr ""

#: ../Doc/library/os.rst:1120
msgid ""
"Change the mode of *path* to the numeric *mode*. If path is a symlink, this "
"affects the symlink rather than the target. See the docs for :func:`chmod` "
"for possible values of *mode*."
msgstr ""

#: ../Doc/library/os.rst:1131
msgid ""
"Change the owner and group id of *path* to the numeric *uid* and *gid*. This "
"function will not follow symbolic links."
msgstr ""

#: ../Doc/library/os.rst:1141
msgid "Create a hard link pointing to *source* named *link_name*."
msgstr ""

#: ../Doc/library/os.rst:1148
msgid ""
"Return a list containing the names of the entries in the directory given by "
"*path*.  The list is in arbitrary order.  It does not include the special "
"entries ``'.'`` and ``'..'`` even if they are present in the directory."
msgstr ""

# d8c84f55190341f2b36b889a3570d68c
#: ../Doc/library/os.rst:1163
msgid ""
"Perform the equivalent of an :c:func:`lstat` system call on the given path. "
"Similar to :func:`~os.stat`, but does not follow symbolic links.  On "
"platforms that do not support symbolic links, this is an alias for :func:"
"`~os.stat`."
msgstr ""

# 718e5324ddee4b159d0ea9eb1f6f06e3
#: ../Doc/library/os.rst:1171
msgid ""
"Create a FIFO (a named pipe) named *path* with numeric mode *mode*.  The "
"default *mode* is ``0666`` (octal).  The current umask value is first masked "
"out from the mode."
msgstr ""

#: ../Doc/library/os.rst:1177
msgid ""
"FIFOs are pipes that can be accessed like regular files.  FIFOs exist until "
"they are deleted (for example with :func:`os.unlink`). Generally, FIFOs are "
"used as rendezvous between \"client\" and \"server\" type processes: the "
"server opens the FIFO for reading, and the client opens it for writing.  "
"Note that :func:`mkfifo` doesn't open the FIFO --- it just creates the "
"rendezvous point."
msgstr ""

# e1bb9b3d64fe4ccbb3dda9c1d6f2cf9f
#: ../Doc/library/os.rst:1186
msgid ""
"Create a filesystem node (file, device special file or named pipe) named "
"*filename*. *mode* specifies both the permissions to use and the type of "
"node to be created, being combined (bitwise OR) with one of ``stat."
"S_IFREG``, ``stat.S_IFCHR``, ``stat.S_IFBLK``, and ``stat.S_IFIFO`` (those "
"constants are available in :mod:`stat`). For ``stat.S_IFCHR`` and ``stat."
"S_IFBLK``, *device* defines the newly created device special file (probably "
"using :func:`os.makedev`), otherwise it is ignored."
msgstr ""

# 47256d4b2cfd4052a6896682a2a63fcb
#: ../Doc/library/os.rst:1200
msgid ""
"Extract the device major number from a raw device number (usually the :attr:"
"`st_dev` or :attr:`st_rdev` field from :c:type:`stat`)."
msgstr ""

# 4cab2d7884e24fee9450ad394b314db9
#: ../Doc/library/os.rst:1208
msgid ""
"Extract the device minor number from a raw device number (usually the :attr:"
"`st_dev` or :attr:`st_rdev` field from :c:type:`stat`)."
msgstr ""

#: ../Doc/library/os.rst:1216
msgid "Compose a raw device number from the major and minor device numbers."
msgstr ""

# 3ac700d130de4df3b553e23aa1a61624
#: ../Doc/library/os.rst:1223
msgid ""
"Create a directory named *path* with numeric mode *mode*. The default *mode* "
"is ``0777`` (octal).  On some systems, *mode* is ignored.  Where it is used, "
"the current umask value is first masked out.  If the directory already "
"exists, :exc:`OSError` is raised."
msgstr ""

#: ../Doc/library/os.rst:1228
msgid ""
"It is also possible to create temporary directories; see the :mod:`tempfile` "
"module's :func:`tempfile.mkdtemp` function."
msgstr ""

# 2395979049b04ae38e08a4d5f33dd3ef
#: ../Doc/library/os.rst:1240
msgid ""
"Recursive directory creation function.  Like :func:`mkdir`, but makes all "
"intermediate-level directories needed to contain the leaf directory.  Raises "
"an :exc:`error` exception if the leaf directory already exists or cannot be "
"created.  The default *mode* is ``0777`` (octal).  On some systems, *mode* "
"is ignored. Where it is used, the current umask value is first masked out."
msgstr ""

#: ../Doc/library/os.rst:1248
msgid ""
":func:`makedirs` will become confused if the path elements to create "
"include :data:`os.pardir`."
msgstr ""

#: ../Doc/library/os.rst:1259
msgid ""
"Return system configuration information relevant to a named file. *name* "
"specifies the configuration value to retrieve; it may be a string which is "
"the name of a defined system value; these names are specified in a number of "
"standards (POSIX.1, Unix 95, Unix 98, and others).  Some platforms define "
"additional names as well.  The names known to the host operating system are "
"given in the ``pathconf_names`` dictionary.  For configuration variables not "
"included in that mapping, passing an integer for *name* is also accepted."
msgstr ""

#: ../Doc/library/os.rst:1277
msgid ""
"Dictionary mapping names accepted by :func:`pathconf` and :func:`fpathconf` "
"to the integer values defined for those names by the host operating system.  "
"This can be used to determine the set of names known to the system. "
"Availability: Unix."
msgstr ""

#: ../Doc/library/os.rst:1285
msgid ""
"Return a string representing the path to which the symbolic link points.  "
"The result may be either an absolute or relative pathname; if it is "
"relative, it may be converted to an absolute pathname using ``os.path.join"
"(os.path.dirname(path), result)``."
msgstr ""

#: ../Doc/library/os.rst:1298
msgid ""
"Remove (delete) the file *path*.  If *path* is a directory, :exc:`OSError` "
"is raised; see :func:`rmdir` below to remove a directory.  This is identical "
"to the :func:`unlink` function documented below.  On Windows, attempting to "
"remove a file that is in use causes an exception to be raised; on Unix, the "
"directory entry is removed but the storage allocated to the file is not made "
"available until the original file is no longer in use."
msgstr ""

#: ../Doc/library/os.rst:1312
msgid ""
"Remove directories recursively.  Works like :func:`rmdir` except that, if "
"the leaf directory is successfully removed, :func:`removedirs`  tries to "
"successively remove every parent directory mentioned in  *path* until an "
"error is raised (which is ignored, because it generally means that a parent "
"directory is not empty). For example, ``os.removedirs('foo/bar/baz')`` will "
"first remove the directory ``'foo/bar/baz'``, and then remove ``'foo/bar'`` "
"and ``'foo'`` if they are empty. Raises :exc:`OSError` if the leaf directory "
"could not be successfully removed."
msgstr ""

#: ../Doc/library/os.rst:1326
msgid ""
"Rename the file or directory *src* to *dst*.  If *dst* is a directory, :exc:"
"`OSError` will be raised.  On Unix, if *dst* exists and is a file, it will "
"be replaced silently if the user has permission.  The operation may fail on "
"some Unix flavors if *src* and *dst* are on different filesystems.  If "
"successful, the renaming will be an atomic operation (this is a POSIX "
"requirement).  On Windows, if *dst* already exists, :exc:`OSError` will be "
"raised even if it is a file; there may be no way to implement an atomic "
"rename when *dst* names an existing file."
msgstr ""

#: ../Doc/library/os.rst:1340
msgid ""
"Recursive directory or file renaming function. Works like :func:`rename`, "
"except creation of any intermediate directories needed to make the new "
"pathname good is attempted first. After the rename, directories "
"corresponding to rightmost path segments of the old name will be pruned away "
"using :func:`removedirs`."
msgstr ""

#: ../Doc/library/os.rst:1349
msgid ""
"This function can fail with the new directory structure made if you lack "
"permissions needed to remove the leaf directory or file."
msgstr ""

#: ../Doc/library/os.rst:1355
msgid ""
"Remove (delete) the directory *path*.  Only works when the directory is "
"empty, otherwise, :exc:`OSError` is raised.  In order to remove whole "
"directory trees, :func:`shutil.rmtree` can be used."
msgstr ""

# 7f1c058cb2474253aa6277f65d71440d
#: ../Doc/library/os.rst:1364
msgid ""
"Perform the equivalent of a :c:func:`stat` system call on the given path. "
"(This function follows symlinks; to stat a symlink use :func:`lstat`.)"
msgstr ""

# 9355e0d381b34ee5a98fab096a63e599
#: ../Doc/library/os.rst:1367
msgid ""
"The return value is an object whose attributes correspond to the members of "
"the :c:type:`stat` structure, namely:"
msgstr ""

# fa8952c864b34dfb8da3fac0cfa5d271
#: ../Doc/library/os.rst:1370
msgid ":attr:`st_mode` - protection bits,"
msgstr ""

# cc9bb7e5b21a4d5b8c161ddf574d1f01
#: ../Doc/library/os.rst:1371
msgid ":attr:`st_ino` - inode number,"
msgstr ""

# ea0b100cdfa141d488a2b3f08e7e9ff0
#: ../Doc/library/os.rst:1372
msgid ":attr:`st_dev` - device,"
msgstr ""

# 7b984e02a7134497a9c7197ee49e7009
#: ../Doc/library/os.rst:1373
msgid ":attr:`st_nlink` - number of hard links,"
msgstr ""

# 760c800467f240c0a9dd766cc37639ee
#: ../Doc/library/os.rst:1374
msgid ":attr:`st_uid` - user id of owner,"
msgstr ""

# 404e174032bc40f2a67595ea99951430
#: ../Doc/library/os.rst:1375
msgid ":attr:`st_gid` - group id of owner,"
msgstr ""

# 70f9fe92f33d4760b75c23b476806f3f
#: ../Doc/library/os.rst:1376
msgid ":attr:`st_size` - size of file, in bytes,"
msgstr ""

# 8230ee68c1fe4266afe61195579b557b
#: ../Doc/library/os.rst:1377
msgid ":attr:`st_atime` - time of most recent access,"
msgstr ""

# 9334ad6e81da4ba49a789e7efe1b0a12
#: ../Doc/library/os.rst:1378
msgid ":attr:`st_mtime` - time of most recent content modification,"
msgstr ""

# 39e992aabe8a490ea706cd5f26dd911c
#: ../Doc/library/os.rst:1379
msgid ""
":attr:`st_ctime` - platform dependent; time of most recent metadata change "
"on Unix, or the time of creation on Windows)"
msgstr ""

# 4e67be90409745638922bb19cafa711a
#: ../Doc/library/os.rst:1388
msgid ""
"On some Unix systems (such as Linux), the following attributes may also be "
"available:"
msgstr ""

# 5a4219356a254d5e9e57f1b7181688ec
#: ../Doc/library/os.rst:1391
msgid ":attr:`st_blocks` - number of blocks allocated for file"
msgstr ""

# 8afa16aa8c81407197ccabcd1a2150d4
#: ../Doc/library/os.rst:1392
msgid ":attr:`st_blksize` - filesystem blocksize"
msgstr ""

# 5d0533acac9f41e1b396e947ca113603
#: ../Doc/library/os.rst:1393
msgid ":attr:`st_rdev` - type of device if an inode device"
msgstr ""

# 5e643341a7fd417e8b8cea16a5b40990
#: ../Doc/library/os.rst:1394
msgid ":attr:`st_flags` - user defined flags for file"
msgstr ""

# bf49ad8f35c244a981871e12b81c6792
#: ../Doc/library/os.rst:1396
msgid ""
"On other Unix systems (such as FreeBSD), the following attributes may be "
"available (but may be only filled out if root tries to use them):"
msgstr ""

# de05b479aadd423787f236e20c6fdcc4
#: ../Doc/library/os.rst:1399
msgid ":attr:`st_gen` - file generation number"
msgstr ""

# 3148ad3ba8af4f80bcd76b4bda04a5c9
#: ../Doc/library/os.rst:1400
msgid ":attr:`st_birthtime` - time of file creation"
msgstr ""

# cd57923b270b4ac588fa137f1659321e
#: ../Doc/library/os.rst:1402
msgid "On Mac OS systems, the following attributes may also be available:"
msgstr ""

# a530189cd143461ab13bb30f8b740366
#: ../Doc/library/os.rst:1404
msgid ":attr:`st_rsize`"
msgstr ""

# 1485d35ea62f4ee381ac595bdbc58de6
#: ../Doc/library/os.rst:1405
msgid ":attr:`st_creator`"
msgstr ""

# 55130cb9f81744a7875008fe6fdb21fa
#: ../Doc/library/os.rst:1406
msgid ":attr:`st_type`"
msgstr ""

# a6aae47232b7422186f9eb40fd8bcec0
#: ../Doc/library/os.rst:1408
msgid "On RISCOS systems, the following attributes are also available:"
msgstr ""

# 581a51f19d354703b448ac4d457013d5
#: ../Doc/library/os.rst:1410
msgid ":attr:`st_ftype` (file type)"
msgstr ""

# 006b9f969f2f472ead788c1920192659
#: ../Doc/library/os.rst:1411
msgid ":attr:`st_attrs` (attributes)"
msgstr ""

# 0655b1602fa0486a98d858b665905587
#: ../Doc/library/os.rst:1412
msgid ":attr:`st_obtype` (object type)."
msgstr ""

# 360b38da40214889abe864af7328fcde
#: ../Doc/library/os.rst:1416
msgid ""
"The exact meaning and resolution of the :attr:`st_atime`, :attr:`st_mtime`, "
"and :attr:`st_ctime` attributes depend on the operating system and the file "
"system. For example, on Windows systems using the FAT or FAT32 file "
"systems, :attr:`st_mtime` has 2-second resolution, and :attr:`st_atime` has "
"only 1-day resolution.  See your operating system documentation for details."
msgstr ""

# 1426173c951749f8aff79050da903943
#: ../Doc/library/os.rst:1423
msgid ""
"For backward compatibility, the return value of :func:`~os.stat` is also "
"accessible as a tuple of at least 10 integers giving the most important (and "
"portable) members of the :c:type:`stat` structure, in the order :attr:"
"`st_mode`, :attr:`st_ino`, :attr:`st_dev`, :attr:`st_nlink`, :attr:"
"`st_uid`, :attr:`st_gid`, :attr:`st_size`, :attr:`st_atime`, :attr:"
"`st_mtime`, :attr:`st_ctime`. More items may be added at the end by some "
"implementations."
msgstr ""

# c79515cd002f489fb88e974700fe9d8e
#: ../Doc/library/os.rst:1432
msgid ""
"The standard module :mod:`stat` defines functions and constants that are "
"useful for extracting information from a :c:type:`stat` structure. (On "
"Windows, some items are filled with dummy values.)"
msgstr ""

# 68116b8f64c7416baa24cac93bc54f17
#: ../Doc/library/os.rst:1456
msgid ""
"Determine whether :class:`stat_result` represents time stamps as float "
"objects. If *newvalue* is ``True``, future calls to :func:`~os.stat` return "
"floats, if it is ``False``, future calls return ints. If *newvalue* is "
"omitted, return the current setting."
msgstr ""

#: ../Doc/library/os.rst:1461
msgid ""
"For compatibility with older Python versions, accessing :class:`stat_result` "
"as a tuple always returns integers."
msgstr ""

#: ../Doc/library/os.rst:1469
msgid ""
"The resolution of the timestamps (that is the smallest possible fraction) "
"depends on the system. Some systems only support second resolution; on these "
"systems, the fraction will always be zero."
msgstr ""

#: ../Doc/library/os.rst:1473
msgid ""
"It is recommended that this setting is only changed at program startup time "
"in the *__main__* module; libraries should never change this setting. If an "
"application uses a library that works incorrectly if floating point time "
"stamps are processed, this application should turn the feature off until the "
"library has been corrected."
msgstr ""

# 2eefc6cac5a14c9e8ffcea050be7be06
#: ../Doc/library/os.rst:1482
msgid ""
"Perform a :c:func:`statvfs` system call on the given path.  The return value "
"is an object whose attributes describe the filesystem on the given path, and "
"correspond to the members of the :c:type:`statvfs` structure, namely: :attr:"
"`f_bsize`, :attr:`f_frsize`, :attr:`f_blocks`, :attr:`f_bfree`, :attr:"
"`f_bavail`, :attr:`f_files`, :attr:`f_ffree`, :attr:`f_favail`, :attr:"
"`f_flag`, :attr:`f_namemax`."
msgstr ""

# fd22276c76f84f259b90ad617331a0f9
#: ../Doc/library/os.rst:1491
msgid ""
"For backward compatibility, the return value is also accessible as a tuple "
"whose values correspond to the attributes, in the order given above. The "
"standard module :mod:`statvfs` defines constants that are useful for "
"extracting information from a :c:type:`statvfs` structure when accessing it "
"as a sequence; this remains useful when writing code that needs to work with "
"versions of Python that don't support accessing the fields as attributes."
msgstr ""

#: ../Doc/library/os.rst:1506
msgid "Create a symbolic link pointing to *source* named *link_name*."
msgstr ""

# 9f017f25f7a449ee84ff797c37dca218
#: ../Doc/library/os.rst:1513
msgid ""
"Return a unique path name that is reasonable for creating a temporary file. "
"This will be an absolute path that names a potential directory entry in the "
"directory *dir* or a common location for temporary files if *dir* is omitted "
"or ``None``.  If given and not ``None``, *prefix* is used to provide a short "
"prefix to the filename.  Applications are responsible for properly creating "
"and managing files created using paths returned by :func:`tempnam`; no "
"automatic cleanup is provided. On Unix, the environment variable :envvar:"
"`TMPDIR` overrides *dir*, while on Windows :envvar:`TMP` is used.  The "
"specific behavior of this function depends on the C library implementation; "
"some aspects are underspecified in system documentation."
msgstr ""

# b0f41483382e467ab449781b6b6dc65c
#: ../Doc/library/os.rst:1526
msgid ""
"Use of :func:`tempnam` is vulnerable to symlink attacks; consider using :"
"func:`tmpfile` (section :ref:`os-newstreams`) instead."
msgstr ""

# 23e7e4d478d24d44a30070d04afdff5a
#: ../Doc/library/os.rst:1534
msgid ""
"Return a unique path name that is reasonable for creating a temporary file. "
"This will be an absolute path that names a potential directory entry in a "
"common location for temporary files.  Applications are responsible for "
"properly creating and managing files created using paths returned by :func:"
"`tmpnam`; no automatic cleanup is provided."
msgstr ""

# ce2f906d43d8450a8b911d41ec6f7191
#: ../Doc/library/os.rst:1542
msgid ""
"Use of :func:`tmpnam` is vulnerable to symlink attacks; consider using :func:"
"`tmpfile` (section :ref:`os-newstreams`) instead."
msgstr ""

# ceae2acad8db49b48912b39d1e3e5417
#: ../Doc/library/os.rst:1545
msgid ""
"Availability: Unix, Windows.  This function probably shouldn't be used on "
"Windows, though: Microsoft's implementation of :func:`tmpnam` always creates "
"a name in the root directory of the current drive, and that's generally a "
"poor location for a temp file (depending on privileges, you may not even be "
"able to open a file using this name)."
msgstr ""

# 147de2f01e964c40b2ddfe9dffc0532f
#: ../Doc/library/os.rst:1554
msgid ""
"The maximum number of unique names that :func:`tmpnam` will generate before "
"reusing names."
msgstr ""

#: ../Doc/library/os.rst:1560
msgid ""
"Remove (delete) the file *path*.  This is the same function as :func:"
"`remove`; the :func:`unlink` name is its traditional Unix name."
msgstr ""

# 70665e1a86974fb5bb4b1145ea87e7be
#: ../Doc/library/os.rst:1569
msgid ""
"Set the access and modified times of the file specified by *path*. If "
"*times* is ``None``, then the file's access and modified times are set to "
"the current time. (The effect is similar to running the Unix program :"
"program:`touch` on the path.)  Otherwise, *times* must be a 2-tuple of "
"numbers, of the form ``(atime, mtime)`` which is used to set the access and "
"modified times, respectively. Whether a directory can be given for *path* "
"depends on whether the operating system implements directories as files (for "
"example, Windows does not).  Note that the exact times you set here may not "
"be returned by a subsequent :func:`~os.stat` call, depending on the "
"resolution with which your operating system records access and modification "
"times; see :func:`~os.stat`."
msgstr ""

#: ../Doc/library/os.rst:1592
msgid ""
"Generate the file names in a directory tree by walking the tree either top-"
"down or bottom-up. For each directory in the tree rooted at directory *top* "
"(including *top* itself), it yields a 3-tuple ``(dirpath, dirnames, "
"filenames)``."
msgstr ""

#: ../Doc/library/os.rst:1597
msgid ""
"*dirpath* is a string, the path to the directory.  *dirnames* is a list of "
"the names of the subdirectories in *dirpath* (excluding ``'.'`` and "
"``'..'``). *filenames* is a list of the names of the non-directory files in "
"*dirpath*. Note that the names in the lists contain no path components.  To "
"get a full path (which begins with *top*) to a file or directory in "
"*dirpath*, do ``os.path.join(dirpath, name)``."
msgstr ""

#: ../Doc/library/os.rst:1604
msgid ""
"If optional argument *topdown* is ``True`` or not specified, the triple for "
"a directory is generated before the triples for any of its subdirectories "
"(directories are generated top-down).  If *topdown* is ``False``, the triple "
"for a directory is generated after the triples for all of its subdirectories "
"(directories are generated bottom-up)."
msgstr ""

#: ../Doc/library/os.rst:1610
msgid ""
"When *topdown* is ``True``, the caller can modify the *dirnames* list in-"
"place (perhaps using :keyword:`del` or slice assignment), and :func:`walk` "
"will only recurse into the subdirectories whose names remain in *dirnames*; "
"this can be used to prune the search, impose a specific order of visiting, "
"or even to inform :func:`walk` about directories the caller creates or "
"renames before it resumes :func:`walk` again.  Modifying *dirnames* when "
"*topdown* is ``False`` is ineffective, because in bottom-up mode the "
"directories in *dirnames* are generated before *dirpath* itself is generated."
msgstr ""

# 66846509bffb418380cdb6de36e18869
#: ../Doc/library/os.rst:1619
msgid ""
"By default, errors from the :func:`listdir` call are ignored.  If optional "
"argument *onerror* is specified, it should be a function; it will be called "
"with one argument, an :exc:`OSError` instance.  It can report the error to "
"continue with the walk, or raise the exception to abort the walk.  Note that "
"the filename is available as the ``filename`` attribute of the exception "
"object."
msgstr ""

#: ../Doc/library/os.rst:1625
msgid ""
"By default, :func:`walk` will not walk down into symbolic links that resolve "
"to directories. Set *followlinks* to ``True`` to visit directories pointed "
"to by symlinks, on systems that support them."
msgstr ""

#: ../Doc/library/os.rst:1634
msgid ""
"Be aware that setting *followlinks* to ``True`` can lead to infinite "
"recursion if a link points to a parent directory of itself. :func:`walk` "
"does not keep track of the directories it visited already."
msgstr ""

#: ../Doc/library/os.rst:1640
msgid ""
"If you pass a relative pathname, don't change the current working directory "
"between resumptions of :func:`walk`.  :func:`walk` never changes the current "
"directory, and assumes that its caller doesn't either."
msgstr ""

#: ../Doc/library/os.rst:1644
msgid ""
"This example displays the number of bytes taken by non-directory files in "
"each directory under the starting directory, except that it doesn't look "
"under any CVS subdirectory::"
msgstr ""

#: ../Doc/library/os.rst:1657
msgid ""
"In the next example, walking the tree bottom-up is essential: :func:`rmdir` "
"doesn't allow deleting a directory before the directory is empty::"
msgstr ""

#: ../Doc/library/os.rst:1677
msgid "Process Management"
msgstr ""

#: ../Doc/library/os.rst:1679
msgid "These functions may be used to create and manage processes."
msgstr ""

# 93525e4d717d40458ce68869bb942a93
#: ../Doc/library/os.rst:1681
msgid ""
"The various :func:`exec\\*` functions take a list of arguments for the new "
"program loaded into the process.  In each case, the first of these arguments "
"is passed to the new program as its own name rather than as an argument a "
"user may have typed on a command line.  For the C programmer, this is the "
"``argv[0]`` passed to a program's :c:func:`main`.  For example, ``os.execv('/"
"bin/echo', ['foo', 'bar'])`` will only print ``bar`` on standard output; "
"``foo`` will seem to be ignored."
msgstr ""

# a3108bce018f4420887ead884a3e5c4b
#: ../Doc/library/os.rst:1692
msgid ""
"Generate a :const:`SIGABRT` signal to the current process.  On Unix, the "
"default behavior is to produce a core dump; on Windows, the process "
"immediately returns an exit code of ``3``.  Be aware that calling this "
"function will not call the Python signal handler registered for :const:"
"`SIGABRT` with :func:`signal.signal`."
msgstr ""

#: ../Doc/library/os.rst:1710
msgid ""
"These functions all execute a new program, replacing the current process; "
"they do not return.  On Unix, the new executable is loaded into the current "
"process, and will have the same process id as the caller.  Errors will be "
"reported as :exc:`OSError` exceptions."
msgstr ""

#: ../Doc/library/os.rst:1715
msgid ""
"The current process is replaced immediately. Open file objects and "
"descriptors are not flushed, so if there may be data buffered on these open "
"files, you should flush them using :func:`sys.stdout.flush` or :func:`os."
"fsync` before calling an :func:`exec\\*` function."
msgstr ""

#: ../Doc/library/os.rst:1721
msgid ""
"The \"l\" and \"v\" variants of the :func:`exec\\*` functions differ in how "
"command-line arguments are passed.  The \"l\" variants are perhaps the "
"easiest to work with if the number of parameters is fixed when the code is "
"written; the individual parameters simply become additional parameters to "
"the :func:`execl\\*` functions.  The \"v\" variants are good when the number "
"of parameters is variable, with the arguments being passed in a list or "
"tuple as the *args* parameter.  In either case, the arguments to the child "
"process should start with the name of the command being run, but this is not "
"enforced."
msgstr ""

#: ../Doc/library/os.rst:1730
msgid ""
"The variants which include a \"p\" near the end (:func:`execlp`, :func:"
"`execlpe`, :func:`execvp`, and :func:`execvpe`) will use the :envvar:`PATH` "
"environment variable to locate the program *file*.  When the environment is "
"being replaced (using one of the :func:`exec\\*e` variants, discussed in the "
"next paragraph), the new environment is used as the source of the :envvar:"
"`PATH` variable. The other variants, :func:`execl`, :func:`execle`, :func:"
"`execv`, and :func:`execve`, will not use the :envvar:`PATH` variable to "
"locate the executable; *path* must contain an appropriate absolute or "
"relative path."
msgstr ""

#: ../Doc/library/os.rst:1740
msgid ""
"For :func:`execle`, :func:`execlpe`, :func:`execve`, and :func:`execvpe` "
"(note that these all end in \"e\"), the *env* parameter must be a mapping "
"which is used to define the environment variables for the new process (these "
"are used instead of the current process' environment); the functions :func:"
"`execl`, :func:`execlp`, :func:`execv`, and :func:`execvp` all cause the new "
"process to inherit the environment of the current process."
msgstr ""

# 7c4684076e7e459889afcdd4c2f5b0b9
#: ../Doc/library/os.rst:1752
msgid ""
"Exit the process with status *n*, without calling cleanup handlers, flushing "
"stdio buffers, etc."
msgstr ""

# dc6622ae1edc4d16bbd5dbb488798613
#: ../Doc/library/os.rst:1759
msgid ""
"The standard way to exit is ``sys.exit(n)``.  :func:`_exit` should normally "
"only be used in the child process after a :func:`fork`."
msgstr ""

#: ../Doc/library/os.rst:1762
msgid ""
"The following exit codes are defined and can be used with :func:`_exit`, "
"although they are not required.  These are typically used for system "
"programs written in Python, such as a mail server's external command "
"delivery program."
msgstr ""

#: ../Doc/library/os.rst:1768
msgid ""
"Some of these may not be available on all Unix platforms, since there is "
"some variation.  These constants are defined where they are defined by the "
"underlying platform."
msgstr ""

#: ../Doc/library/os.rst:1775
msgid "Exit code that means no error occurred."
msgstr ""

#: ../Doc/library/os.rst:1784
msgid ""
"Exit code that means the command was used incorrectly, such as when the "
"wrong number of arguments are given."
msgstr ""

#: ../Doc/library/os.rst:1794
msgid "Exit code that means the input data was incorrect."
msgstr ""

#: ../Doc/library/os.rst:1803
msgid "Exit code that means an input file did not exist or was not readable."
msgstr ""

#: ../Doc/library/os.rst:1812
msgid "Exit code that means a specified user did not exist."
msgstr ""

#: ../Doc/library/os.rst:1821
msgid "Exit code that means a specified host did not exist."
msgstr ""

#: ../Doc/library/os.rst:1830
msgid "Exit code that means that a required service is unavailable."
msgstr ""

#: ../Doc/library/os.rst:1839
msgid "Exit code that means an internal software error was detected."
msgstr ""

#: ../Doc/library/os.rst:1848
msgid ""
"Exit code that means an operating system error was detected, such as the "
"inability to fork or create a pipe."
msgstr ""

#: ../Doc/library/os.rst:1858
msgid ""
"Exit code that means some system file did not exist, could not be opened, or "
"had some other kind of error."
msgstr ""

#: ../Doc/library/os.rst:1868
msgid "Exit code that means a user specified output file could not be created."
msgstr ""

#: ../Doc/library/os.rst:1877
msgid ""
"Exit code that means that an error occurred while doing I/O on some file."
msgstr ""

#: ../Doc/library/os.rst:1886
msgid ""
"Exit code that means a temporary failure occurred.  This indicates something "
"that may not really be an error, such as a network connection that couldn't "
"be made during a retryable operation."
msgstr ""

#: ../Doc/library/os.rst:1897
msgid ""
"Exit code that means that a protocol exchange was illegal, invalid, or not "
"understood."
msgstr ""

#: ../Doc/library/os.rst:1907
msgid ""
"Exit code that means that there were insufficient permissions to perform the "
"operation (but not intended for file system problems)."
msgstr ""

#: ../Doc/library/os.rst:1917
msgid "Exit code that means that some kind of configuration error occurred."
msgstr ""

#: ../Doc/library/os.rst:1926
msgid "Exit code that means something like \"an entry was not found\"."
msgstr ""

#: ../Doc/library/os.rst:1935
msgid ""
"Fork a child process.  Return ``0`` in the child and the child's process id "
"in the parent.  If an error occurs :exc:`OSError` is raised."
msgstr ""

#: ../Doc/library/os.rst:1938
msgid ""
"Note that some platforms including FreeBSD <= 6.3, Cygwin and OS/2 EMX have "
"known issues when using fork() from a thread."
msgstr ""

#: ../Doc/library/os.rst:1946
msgid ""
"Fork a child process, using a new pseudo-terminal as the child's controlling "
"terminal. Return a pair of ``(pid, fd)``, where *pid* is ``0`` in the child, "
"the new child's process id in the parent, and *fd* is the file descriptor of "
"the master end of the pseudo-terminal.  For a more portable approach, use "
"the :mod:`pty` module.  If an error occurs :exc:`OSError` is raised."
msgstr ""

#: ../Doc/library/os.rst:1961
msgid ""
"Send signal *sig* to the process *pid*.  Constants for the specific signals "
"available on the host platform are defined in the :mod:`signal` module."
msgstr ""

#: ../Doc/library/os.rst:1964
msgid ""
"Windows: The :data:`signal.CTRL_C_EVENT` and :data:`signal.CTRL_BREAK_EVENT` "
"signals are special signals which can only be sent to console processes "
"which share a common console window, e.g., some subprocesses. Any other "
"value for *sig* will cause the process to be unconditionally killed by the "
"TerminateProcess API, and the exit code will be set to *sig*. The Windows "
"version of :func:`kill` additionally takes process handles to be killed."
msgstr ""

#: ../Doc/library/os.rst:1981
msgid "Send the signal *sig* to the process group *pgid*."
msgstr ""

#: ../Doc/library/os.rst:1990
msgid ""
"Add *increment* to the process's \"niceness\".  Return the new niceness."
msgstr ""

#: ../Doc/library/os.rst:1997
msgid ""
"Lock program segments into memory.  The value of *op* (defined in ``<sys/"
"lock.h>``) determines which segments are locked."
msgstr ""

#: ../Doc/library/os.rst:2009
msgid ""
"Run child processes, returning opened pipes for communications.  These "
"functions are described in section :ref:`os-newstreams`."
msgstr ""

#: ../Doc/library/os.rst:2022
msgid "Execute the program *path* in a new process."
msgstr ""

#: ../Doc/library/os.rst:2024
msgid ""
"(Note that the :mod:`subprocess` module provides more powerful facilities "
"for spawning new processes and retrieving their results; using that module "
"is preferable to using these functions.  Check especially the :ref:"
"`subprocess-replacements` section.)"
msgstr ""

#: ../Doc/library/os.rst:2029
msgid ""
"If *mode* is :const:`P_NOWAIT`, this function returns the process id of the "
"new process; if *mode* is :const:`P_WAIT`, returns the process's exit code "
"if it exits normally, or ``-signal``, where *signal* is the signal that "
"killed the process.  On Windows, the process id will actually be the process "
"handle, so can be used with the :func:`waitpid` function."
msgstr ""

#: ../Doc/library/os.rst:2035
msgid ""
"The \"l\" and \"v\" variants of the :func:`spawn\\*` functions differ in how "
"command-line arguments are passed.  The \"l\" variants are perhaps the "
"easiest to work with if the number of parameters is fixed when the code is "
"written; the individual parameters simply become additional parameters to "
"the :func:`spawnl\\*` functions.  The \"v\" variants are good when the "
"number of parameters is variable, with the arguments being passed in a list "
"or tuple as the *args* parameter.  In either case, the arguments to the "
"child process must start with the name of the command being run."
msgstr ""

#: ../Doc/library/os.rst:2044
msgid ""
"The variants which include a second \"p\" near the end (:func:`spawnlp`, :"
"func:`spawnlpe`, :func:`spawnvp`, and :func:`spawnvpe`) will use the :envvar:"
"`PATH` environment variable to locate the program *file*.  When the "
"environment is being replaced (using one of the :func:`spawn\\*e` variants, "
"discussed in the next paragraph), the new environment is used as the source "
"of the :envvar:`PATH` variable.  The other variants, :func:`spawnl`, :func:"
"`spawnle`, :func:`spawnv`, and :func:`spawnve`, will not use the :envvar:"
"`PATH` variable to locate the executable; *path* must contain an appropriate "
"absolute or relative path."
msgstr ""

#: ../Doc/library/os.rst:2054
msgid ""
"For :func:`spawnle`, :func:`spawnlpe`, :func:`spawnve`, and :func:`spawnvpe` "
"(note that these all end in \"e\"), the *env* parameter must be a mapping "
"which is used to define the environment variables for the new process (they "
"are used instead of the current process' environment); the functions :func:"
"`spawnl`, :func:`spawnlp`, :func:`spawnv`, and :func:`spawnvp` all cause the "
"new process to inherit the environment of the current process.  Note that "
"keys and values in the *env* dictionary must be strings; invalid keys or "
"values will cause the function to fail, with a return value of ``127``."
msgstr ""

#: ../Doc/library/os.rst:2063
msgid ""
"As an example, the following calls to :func:`spawnlp` and :func:`spawnvpe` "
"are equivalent::"
msgstr ""

# 2eaa80bef06b427b8306df8e97a01491
#: ../Doc/library/os.rst:2072
msgid ""
"Availability: Unix, Windows.  :func:`spawnlp`, :func:`spawnlpe`, :func:"
"`spawnvp` and :func:`spawnvpe` are not available on Windows.  :func:"
"`spawnle` and :func:`spawnve` are not thread-safe on Windows; we advise you "
"to use the :mod:`subprocess` module instead."
msgstr ""

#: ../Doc/library/os.rst:2083
msgid ""
"Possible values for the *mode* parameter to the :func:`spawn\\*` family of "
"functions.  If either of these values is given, the :func:`spawn\\*` "
"functions will return as soon as the new process has been created, with the "
"process id as the return value."
msgstr ""

#: ../Doc/library/os.rst:2095
msgid ""
"Possible value for the *mode* parameter to the :func:`spawn\\*` family of "
"functions.  If this is given as *mode*, the :func:`spawn\\*` functions will "
"not return until the new process has run to completion and will return the "
"exit code of the process the run is successful, or ``-signal`` if a signal "
"kills the process."
msgstr ""

#: ../Doc/library/os.rst:2109
msgid ""
"Possible values for the *mode* parameter to the :func:`spawn\\*` family of "
"functions.  These are less portable than those listed above. :const:"
"`P_DETACH` is similar to :const:`P_NOWAIT`, but the new process is detached "
"from the console of the calling process. If :const:`P_OVERLAY` is used, the "
"current process will be replaced; the :func:`spawn\\*` function will not "
"return."
msgstr ""

#: ../Doc/library/os.rst:2115 ../Doc/library/os.rst:2142
#: ../Doc/library/signal.rst:83 ../Doc/library/signal.rst:93
#: ../Doc/library/sys.rst:544
msgid "Availability: Windows."
msgstr ""

#: ../Doc/library/os.rst:2122
msgid "Start a file with its associated application."
msgstr ""

#: ../Doc/library/os.rst:2124
msgid ""
"When *operation* is not specified or ``'open'``, this acts like double-"
"clicking the file in Windows Explorer, or giving the file name as an "
"argument to the :program:`start` command from the interactive command shell: "
"the file is opened with whatever application (if any) its extension is "
"associated."
msgstr ""

#: ../Doc/library/os.rst:2129
msgid ""
"When another *operation* is given, it must be a \"command verb\" that "
"specifies what should be done with the file. Common verbs documented by "
"Microsoft are ``'print'`` and  ``'edit'`` (to be used on files) as well as "
"``'explore'`` and ``'find'`` (to be used on directories)."
msgstr ""

# 7f0bce481ed34ccc87af6dadecfec3a6
#: ../Doc/library/os.rst:2134
msgid ""
":func:`startfile` returns as soon as the associated application is launched. "
"There is no option to wait for the application to close, and no way to "
"retrieve the application's exit status.  The *path* parameter is relative to "
"the current directory.  If you want to use an absolute path, make sure the "
"first character is not a slash (``'/'``); the underlying Win32 :c:func:"
"`ShellExecute` function doesn't work if it is.  Use the :func:`os.path."
"normpath` function to ensure that the path is properly encoded for Win32."
msgstr ""

# 3a5f986ccff04faba4826f46f59445e5
#: ../Doc/library/os.rst:2152
msgid ""
"Execute the command (a string) in a subshell.  This is implemented by "
"calling the Standard C function :c:func:`system`, and has the same "
"limitations. Changes to :data:`sys.stdin`, etc. are not reflected in the "
"environment of the executed command."
msgstr ""

# 238764a1c4fe4e3882c9d2abde73f531
#: ../Doc/library/os.rst:2157
msgid ""
"On Unix, the return value is the exit status of the process encoded in the "
"format specified for :func:`wait`.  Note that POSIX does not specify the "
"meaning of the return value of the C :c:func:`system` function, so the "
"return value of the Python function is system-dependent."
msgstr ""

#: ../Doc/library/os.rst:2162
msgid ""
"On Windows, the return value is that returned by the system shell after "
"running *command*, given by the Windows environment variable :envvar:"
"`COMSPEC`: on :program:`command.com` systems (Windows 95, 98 and ME) this is "
"always ``0``; on :program:`cmd.exe` systems (Windows NT, 2000 and XP) this "
"is the exit status of the command run; on systems using a non-native shell, "
"consult your shell documentation."
msgstr ""

# 0332f97c87e54a9093ddebc6dbc6d321
#: ../Doc/library/os.rst:2169
msgid ""
"The :mod:`subprocess` module provides more powerful facilities for spawning "
"new processes and retrieving their results; using that module is preferable "
"to using this function.  See the :ref:`subprocess-replacements` section in "
"the :mod:`subprocess` documentation for some helpful recipes."
msgstr ""

#: ../Doc/library/os.rst:2180
msgid ""
"Return a 5-tuple of floating point numbers indicating accumulated (processor "
"or other) times, in seconds.  The items are: user time, system time, "
"children's user time, children's system time, and elapsed real time since a "
"fixed point in the past, in that order.  See the Unix manual page :manpage:"
"`times(2)` or the corresponding Windows Platform API documentation. On "
"Windows, only the first two items are filled, the others are zero."
msgstr ""

#: ../Doc/library/os.rst:2187
msgid "Availability: Unix, Windows"
msgstr ""

#: ../Doc/library/os.rst:2192
msgid ""
"Wait for completion of a child process, and return a tuple containing its "
"pid and exit status indication: a 16-bit number, whose low byte is the "
"signal number that killed the process, and whose high byte is the exit "
"status (if the signal number is zero); the high bit of the low byte is set "
"if a core file was produced."
msgstr ""

#: ../Doc/library/os.rst:2203
msgid "The details of this function differ on Unix and Windows."
msgstr ""

#: ../Doc/library/os.rst:2205
msgid ""
"On Unix: Wait for completion of a child process given by process id *pid*, "
"and return a tuple containing its process id and exit status indication "
"(encoded as for :func:`wait`).  The semantics of the call are affected by "
"the value of the integer *options*, which should be ``0`` for normal "
"operation."
msgstr ""

#: ../Doc/library/os.rst:2210
msgid ""
"If *pid* is greater than ``0``, :func:`waitpid` requests status information "
"for that specific process.  If *pid* is ``0``, the request is for the status "
"of any child in the process group of the current process.  If *pid* is "
"``-1``, the request pertains to any child of the current process.  If *pid* "
"is less than ``-1``, status is requested for any process in the process "
"group ``-pid`` (the absolute value of *pid*)."
msgstr ""

#: ../Doc/library/os.rst:2217
msgid ""
"An :exc:`OSError` is raised with the value of errno when the syscall returns "
"-1."
msgstr ""

#: ../Doc/library/os.rst:2220
msgid ""
"On Windows: Wait for completion of a process given by process handle *pid*, "
"and return a tuple containing *pid*, and its exit status shifted left by 8 "
"bits (shifting makes cross-platform use of the function easier). A *pid* "
"less than or equal to ``0`` has no special meaning on Windows, and raises an "
"exception. The value of integer *options* has no effect. *pid* can refer to "
"any process whose id is known, not necessarily a child process. The :func:"
"`spawn` functions called with :const:`P_NOWAIT` return suitable process "
"handles."
msgstr ""

#: ../Doc/library/os.rst:2231
msgid ""
"Similar to :func:`waitpid`, except no process id argument is given and a 3-"
"element tuple containing the child's process id, exit status indication, and "
"resource usage information is returned.  Refer to :mod:`resource`.\\ :func:"
"`getrusage` for details on resource usage information.  The option argument "
"is the same as that provided to :func:`waitpid` and :func:`wait4`."
msgstr ""

#: ../Doc/library/os.rst:2244
msgid ""
"Similar to :func:`waitpid`, except a 3-element tuple, containing the child's "
"process id, exit status indication, and resource usage information is "
"returned. Refer to :mod:`resource`.\\ :func:`getrusage` for details on "
"resource usage information.  The arguments to :func:`wait4` are the same as "
"those provided to :func:`waitpid`."
msgstr ""

#: ../Doc/library/os.rst:2257
msgid ""
"The option for :func:`waitpid` to return immediately if no child process "
"status is available immediately. The function returns ``(0, 0)`` in this "
"case."
msgstr ""

#: ../Doc/library/os.rst:2265
msgid ""
"This option causes child processes to be reported if they have been "
"continued from a job control stop since their status was last reported."
msgstr ""

#: ../Doc/library/os.rst:2268
msgid "Availability: Some Unix systems."
msgstr ""

#: ../Doc/library/os.rst:2275
msgid ""
"This option causes child processes to be reported if they have been stopped "
"but their current state has not been reported since they were stopped."
msgstr ""

#: ../Doc/library/os.rst:2282
msgid ""
"The following functions take a process status code as returned by :func:"
"`system`, :func:`wait`, or :func:`waitpid` as a parameter.  They may be used "
"to determine the disposition of a process."
msgstr ""

#: ../Doc/library/os.rst:2289
msgid ""
"Return ``True`` if a core dump was generated for the process, otherwise "
"return ``False``."
msgstr ""

#: ../Doc/library/os.rst:2299
msgid ""
"Return ``True`` if the process has been continued from a job control stop, "
"otherwise return ``False``."
msgstr ""

#: ../Doc/library/os.rst:2309
msgid ""
"Return ``True`` if the process has been stopped, otherwise return ``False``."
msgstr ""

#: ../Doc/library/os.rst:2317
msgid ""
"Return ``True`` if the process exited due to a signal, otherwise return "
"``False``."
msgstr ""

#: ../Doc/library/os.rst:2325
msgid ""
"Return ``True`` if the process exited using the :manpage:`exit(2)` system "
"call, otherwise return ``False``."
msgstr ""

#: ../Doc/library/os.rst:2333
msgid ""
"If ``WIFEXITED(status)`` is true, return the integer parameter to the :"
"manpage:`exit(2)` system call.  Otherwise, the return value is meaningless."
msgstr ""

#: ../Doc/library/os.rst:2341
msgid "Return the signal which caused the process to stop."
msgstr ""

#: ../Doc/library/os.rst:2348
msgid "Return the signal which caused the process to exit."
msgstr ""

#: ../Doc/library/os.rst:2356
msgid "Miscellaneous System Information"
msgstr ""

#: ../Doc/library/os.rst:2361
msgid ""
"Return string-valued system configuration values. *name* specifies the "
"configuration value to retrieve; it may be a string which is the name of a "
"defined system value; these names are specified in a number of standards "
"(POSIX, Unix 95, Unix 98, and others).  Some platforms define additional "
"names as well. The names known to the host operating system are given as the "
"keys of the ``confstr_names`` dictionary.  For configuration variables not "
"included in that mapping, passing an integer for *name* is also accepted."
msgstr ""

#: ../Doc/library/os.rst:2369
msgid ""
"If the configuration value specified by *name* isn't defined, ``None`` is "
"returned."
msgstr ""

#: ../Doc/library/os.rst:2372
msgid ""
"If *name* is a string and is not known, :exc:`ValueError` is raised.  If a "
"specific value for *name* is not supported by the host system, even if it is "
"included in ``confstr_names``, an :exc:`OSError` is raised with :const:"
"`errno.EINVAL` for the error number."
msgstr ""

#: ../Doc/library/os.rst:2377
msgid "Availability: Unix"
msgstr ""

#: ../Doc/library/os.rst:2382
msgid ""
"Dictionary mapping names accepted by :func:`confstr` to the integer values "
"defined for those names by the host operating system. This can be used to "
"determine the set of names known to the system."
msgstr ""

#: ../Doc/library/os.rst:2391
msgid ""
"Return the number of processes in the system run queue averaged over the "
"last 1, 5, and 15 minutes or raises :exc:`OSError` if the load average was "
"unobtainable."
msgstr ""

#: ../Doc/library/os.rst:2402
msgid ""
"Return integer-valued system configuration values. If the configuration "
"value specified by *name* isn't defined, ``-1`` is returned.  The comments "
"regarding the *name* parameter for :func:`confstr` apply here as well; the "
"dictionary that provides information on the known names is given by "
"``sysconf_names``."
msgstr ""

#: ../Doc/library/os.rst:2412
msgid ""
"Dictionary mapping names accepted by :func:`sysconf` to the integer values "
"defined for those names by the host operating system. This can be used to "
"determine the set of names known to the system."
msgstr ""

#: ../Doc/library/os.rst:2418
msgid ""
"The following data values are used to support path manipulation operations.  "
"These are defined for all platforms."
msgstr ""

#: ../Doc/library/os.rst:2421
msgid ""
"Higher-level operations on pathnames are defined in the :mod:`os.path` "
"module."
msgstr ""

#: ../Doc/library/os.rst:2426
msgid ""
"The constant string used by the operating system to refer to the current "
"directory. This is ``'.'`` for Windows and POSIX. Also available via :mod:"
"`os.path`."
msgstr ""

#: ../Doc/library/os.rst:2433
msgid ""
"The constant string used by the operating system to refer to the parent "
"directory. This is ``'..'`` for Windows and POSIX. Also available via :mod:"
"`os.path`."
msgstr ""

#: ../Doc/library/os.rst:2440
msgid ""
"The character used by the operating system to separate pathname components. "
"This is ``'/'`` for POSIX and ``'\\\\'`` for Windows.  Note that knowing "
"this is not sufficient to be able to parse or concatenate pathnames --- use :"
"func:`os.path.split` and :func:`os.path.join` --- but it is occasionally "
"useful. Also available via :mod:`os.path`."
msgstr ""

#: ../Doc/library/os.rst:2449
msgid ""
"An alternative character used by the operating system to separate pathname "
"components, or ``None`` if only one separator character exists.  This is set "
"to ``'/'`` on Windows systems where ``sep`` is a backslash. Also available "
"via :mod:`os.path`."
msgstr ""

#: ../Doc/library/os.rst:2457
msgid ""
"The character which separates the base filename from the extension; for "
"example, the ``'.'`` in :file:`os.py`. Also available via :mod:`os.path`."
msgstr ""

#: ../Doc/library/os.rst:2465
msgid ""
"The character conventionally used by the operating system to separate search "
"path components (as in :envvar:`PATH`), such as ``':'`` for POSIX or ``';'`` "
"for Windows. Also available via :mod:`os.path`."
msgstr ""

#: ../Doc/library/os.rst:2472
msgid ""
"The default search path used by :func:`exec\\*p\\*` and :func:`spawn\\*p\\*` "
"if the environment doesn't have a ``'PATH'`` key. Also available via :mod:"
"`os.path`."
msgstr ""

#: ../Doc/library/os.rst:2478
msgid ""
"The string used to separate (or, rather, terminate) lines on the current "
"platform.  This may be a single character, such as ``'\\n'`` for POSIX, or "
"multiple characters, for example, ``'\\r\\n'`` for Windows. Do not use *os."
"linesep* as a line terminator when writing files opened in text mode (the "
"default); use a single ``'\\n'`` instead, on all platforms."
msgstr ""

#: ../Doc/library/os.rst:2487
msgid ""
"The file path of the null device. For example: ``'/dev/null'`` for POSIX, "
"``'nul'`` for Windows.  Also available via :mod:`os.path`."
msgstr ""

#: ../Doc/library/os.rst:2496
msgid "Miscellaneous Functions"
msgstr ""

#: ../Doc/library/os.rst:2501
msgid "Return a string of *n* random bytes suitable for cryptographic use."
msgstr ""

#: ../Doc/library/os.rst:2503
msgid ""
"This function returns random bytes from an OS-specific randomness source.  "
"The returned data should be unpredictable enough for cryptographic "
"applications, though its exact quality depends on the OS implementation.  On "
"a UNIX-like system this will query /dev/urandom, and on Windows it will use "
"CryptGenRandom. If a randomness source is not found, :exc:"
"`NotImplementedError` will be raised."
msgstr ""

#: ../Doc/library/os.path.rst:2
msgid ":mod:`os.path` --- Common pathname manipulations"
msgstr ""

# 43872afb150e4714bf6c867f38c440c9
#: ../Doc/library/os.path.rst:9
msgid ""
"This module implements some useful functions on pathnames. To read or write "
"files see :func:`open`, and for accessing the filesystem see the :mod:`os` "
"module."
msgstr ""

# 60c42907719f4e9584e054ab6d045775
#: ../Doc/library/os.path.rst:15
msgid ""
"On Windows, many of these functions do not properly support UNC pathnames. :"
"func:`splitunc` and :func:`ismount` do handle them correctly."
msgstr ""

#: ../Doc/library/os.path.rst:21
msgid ""
"Since different operating systems have different path name conventions, "
"there are several versions of this module in the standard library.  The :mod:"
"`os.path` module is always the path module suitable for the operating system "
"Python is running on, and therefore usable for local paths.  However, you "
"can also import and use the individual modules if you want to manipulate a "
"path that is *always* in one of the different formats.  They all have the "
"same interface:"
msgstr ""

#: ../Doc/library/os.path.rst:29
msgid ":mod:`posixpath` for UNIX-style paths"
msgstr ""

#: ../Doc/library/os.path.rst:30
msgid ":mod:`ntpath` for Windows paths"
msgstr ""

#: ../Doc/library/os.path.rst:31
msgid ":mod:`macpath` for old-style MacOS paths"
msgstr ""

#: ../Doc/library/os.path.rst:32
msgid ":mod:`os2emxpath` for OS/2 EMX paths"
msgstr ""

#: ../Doc/library/os.path.rst:37
msgid ""
"Return a normalized absolutized version of the pathname *path*. On most "
"platforms, this is equivalent to ``normpath(join(os.getcwd(), path))``."
msgstr ""

#: ../Doc/library/os.path.rst:45
msgid ""
"Return the base name of pathname *path*.  This is the second half of the "
"pair returned by ``split(path)``.  Note that the result of this function is "
"different from the Unix :program:`basename` program; where :program:"
"`basename` for ``'/foo/bar/'`` returns ``'bar'``, the :func:`basename` "
"function returns an empty string (``''``)."
msgstr ""

#: ../Doc/library/os.path.rst:54
msgid ""
"Return the longest path prefix (taken character-by-character) that is a "
"prefix of all paths in  *list*.  If *list* is empty, return the empty string "
"(``''``). Note that this may return invalid paths because it works a "
"character at a time."
msgstr ""

#: ../Doc/library/os.path.rst:61
msgid ""
"Return the directory name of pathname *path*.  This is the first half of the "
"pair returned by ``split(path)``."
msgstr ""

#: ../Doc/library/os.path.rst:67
msgid ""
"Return ``True`` if *path* refers to an existing path.  Returns ``False`` for "
"broken symbolic links. On some platforms, this function may return ``False`` "
"if permission is not granted to execute :func:`os.stat` on the requested "
"file, even if the *path* physically exists."
msgstr ""

#: ../Doc/library/os.path.rst:75
msgid ""
"Return ``True`` if *path* refers to an existing path. Returns ``True`` for "
"broken symbolic links.   Equivalent to :func:`exists` on platforms lacking :"
"func:`os.lstat`."
msgstr ""

#: ../Doc/library/os.path.rst:84
msgid ""
"On Unix and Windows, return the argument with an initial component of ``~`` "
"or ``~user`` replaced by that *user*'s home directory."
msgstr ""

#: ../Doc/library/os.path.rst:89
msgid ""
"On Unix, an initial ``~`` is replaced by the environment variable :envvar:"
"`HOME` if it is set; otherwise the current user's home directory is looked "
"up in the password directory through the built-in module :mod:`pwd`. An "
"initial ``~user`` is looked up directly in the password directory."
msgstr ""

#: ../Doc/library/os.path.rst:94
msgid ""
"On Windows, :envvar:`HOME` and :envvar:`USERPROFILE` will be used if set, "
"otherwise a combination of :envvar:`HOMEPATH` and :envvar:`HOMEDRIVE` will "
"be used.  An initial ``~user`` is handled by stripping the last directory "
"component from the created user path derived above."
msgstr ""

#: ../Doc/library/os.path.rst:99
msgid ""
"If the expansion fails or if the path does not begin with a tilde, the path "
"is returned unchanged."
msgstr ""

#: ../Doc/library/os.path.rst:105
msgid ""
"Return the argument with environment variables expanded.  Substrings of the "
"form ``$name`` or ``${name}`` are replaced by the value of environment "
"variable *name*.  Malformed variable names and references to non-existing "
"variables are left unchanged."
msgstr ""

#: ../Doc/library/os.path.rst:110
msgid ""
"On Windows, ``%name%`` expansions are supported in addition to ``$name`` and "
"``${name}``."
msgstr ""

#: ../Doc/library/os.path.rst:116
msgid ""
"Return the time of last access of *path*.  The return value is a number "
"giving the number of seconds since the epoch (see the  :mod:`time` module).  "
"Raise :exc:`os.error` if the file does not exist or is inaccessible."
msgstr ""

#: ../Doc/library/os.path.rst:129
msgid ""
"Return the time of last modification of *path*.  The return value is a "
"number giving the number of seconds since the epoch (see the  :mod:`time` "
"module). Raise :exc:`os.error` if the file does not exist or is inaccessible."
msgstr ""

#: ../Doc/library/os.path.rst:142
msgid ""
"Return the system's ctime which, on some systems (like Unix) is the time of "
"the last change, and, on others (like Windows), is the creation time for "
"*path*. The return value is a number giving the number of seconds since the "
"epoch (see the  :mod:`time` module).  Raise :exc:`os.error` if the file does "
"not exist or is inaccessible."
msgstr ""

#: ../Doc/library/os.path.rst:153
msgid ""
"Return the size, in bytes, of *path*.  Raise :exc:`os.error` if the file "
"does not exist or is inaccessible."
msgstr ""

#: ../Doc/library/os.path.rst:161
msgid ""
"Return ``True`` if *path* is an absolute pathname.  On Unix, that means it "
"begins with a slash, on Windows that it begins with a (back)slash after "
"chopping off a potential drive letter."
msgstr ""

#: ../Doc/library/os.path.rst:168
msgid ""
"Return ``True`` if *path* is an existing regular file.  This follows "
"symbolic links, so both :func:`islink` and :func:`isfile` can be true for "
"the same path."
msgstr ""

#: ../Doc/library/os.path.rst:174
msgid ""
"Return ``True`` if *path* is an existing directory.  This follows symbolic "
"links, so both :func:`islink` and :func:`isdir` can be true for the same "
"path."
msgstr ""

#: ../Doc/library/os.path.rst:180
msgid ""
"Return ``True`` if *path* refers to a directory entry that is a symbolic "
"link. Always ``False`` if symbolic links are not supported."
msgstr ""

#: ../Doc/library/os.path.rst:186
msgid ""
"Return ``True`` if pathname *path* is a :dfn:`mount point`: a point in a "
"file system where a different file system has been mounted.  The function "
"checks whether *path*'s parent, :file:`path/..`, is on a different device "
"than *path*, or whether :file:`path/..` and *path* point to the same i-node "
"on the same device --- this should detect mount points for all Unix and "
"POSIX variants."
msgstr ""

# 8a910296a3484915be8fe99f11cdb2d6
#: ../Doc/library/os.path.rst:195
msgid ""
"Join one or more path components intelligently.  If any component is an "
"absolute path, all previous components (on Windows, including the previous "
"drive letter, if there was one) are thrown away, and joining continues.  The "
"return value is the concatenation of *path1*, and optionally *path2*, etc., "
"with exactly one directory separator (``os.sep``) following each non-empty "
"part except the last. (This means that an empty last part will result in a "
"path that ends with a separator.)  Note that on Windows, since there is a "
"current directory for each drive, ``os.path.join(\"c:\", \"foo\")`` "
"represents a path relative to the current directory on drive :file:`C:` (:"
"file:`c:foo`), not :file:`c:\\\\foo`."
msgstr ""

# f1ad9179bec2434fb3875b2a9dafee89
#: ../Doc/library/os.path.rst:208
msgid ""
"Normalize the case of a pathname.  On Unix and Mac OS X, this returns the "
"path unchanged; on case-insensitive filesystems, it converts the path to "
"lowercase.  On Windows, it also converts forward slashes to backward slashes."
msgstr ""

# 4c72703342b14f4ea4b43a603525797b
#: ../Doc/library/os.path.rst:215
msgid ""
"Normalize a pathname.  This collapses redundant separators and up-level "
"references so that ``A//B``, ``A/B/``, ``A/./B`` and ``A/foo/../B`` all "
"become ``A/B``."
msgstr ""

# 2602c63c71a4418bb6275cf7f69ad0cb
#: ../Doc/library/os.path.rst:219
msgid ""
"It does not normalize the case (use :func:`normcase` for that).  On Windows, "
"it converts forward slashes to backward slashes. It should be understood "
"that this may change the meaning of the path if it contains symbolic links!"
msgstr ""

#: ../Doc/library/os.path.rst:226
msgid ""
"Return the canonical path of the specified filename, eliminating any "
"symbolic links encountered in the path (if they are supported by the "
"operating system)."
msgstr ""

#: ../Doc/library/os.path.rst:234
msgid ""
"Return a relative filepath to *path* either from the current directory or "
"from an optional *start* point."
msgstr ""

#: ../Doc/library/os.path.rst:237
msgid "*start* defaults to :attr:`os.curdir`."
msgstr ""

#: ../Doc/library/os.path.rst:239
msgid "Availability:  Windows, Unix."
msgstr ""

#: ../Doc/library/os.path.rst:246
msgid ""
"Return ``True`` if both pathname arguments refer to the same file or "
"directory (as indicated by device number and i-node number). Raise an "
"exception if a :func:`os.stat` call on either pathname fails."
msgstr ""

#: ../Doc/library/os.path.rst:255
msgid ""
"Return ``True`` if the file descriptors *fp1* and *fp2* refer to the same "
"file."
msgstr ""

#: ../Doc/library/os.path.rst:262
msgid ""
"Return ``True`` if the stat tuples *stat1* and *stat2* refer to the same "
"file. These structures may have been returned by :func:`fstat`, :func:"
"`lstat`, or :func:`stat`.  This function implements the underlying "
"comparison used by :func:`samefile` and :func:`sameopenfile`."
msgstr ""

# aa8a292a7d0d4b0082032f9dfd87afc0
#: ../Doc/library/os.path.rst:272
msgid ""
"Split the pathname *path* into a pair, ``(head, tail)`` where *tail* is the "
"last pathname component and *head* is everything leading up to that.  The "
"*tail* part will never contain a slash; if *path* ends in a slash, *tail* "
"will be empty.  If there is no slash in *path*, *head* will be empty.  If "
"*path* is empty, both *head* and *tail* are empty.  Trailing slashes are "
"stripped from *head* unless it is the root (one or more slashes only).  In "
"all cases, ``join(head, tail)`` returns a path to the same location as "
"*path* (but the strings may differ)."
msgstr ""

# 89c8d0940ecc472180844601241f99c9
#: ../Doc/library/os.path.rst:284
msgid ""
"Split the pathname *path* into a pair ``(drive, tail)`` where *drive* is "
"either a drive specification or the empty string.  On systems which do not "
"use drive specifications, *drive* will always be the empty string.  In all "
"cases, ``drive + tail`` will be the same as *path*."
msgstr ""

#: ../Doc/library/os.path.rst:294
msgid ""
"Split the pathname *path* into a pair ``(root, ext)``  such that ``root + "
"ext == path``, and *ext* is empty or begins with a period and contains at "
"most one period. Leading periods on the basename are  ignored; ``splitext('."
"cshrc')`` returns  ``('.cshrc', '')``."
msgstr ""

#: ../Doc/library/os.path.rst:306
msgid ""
"Split the pathname *path* into a pair ``(unc, rest)`` so that *unc* is the "
"UNC mount point (such as ``r'\\\\host\\mount'``), if present, and *rest* the "
"rest of the path (such as  ``r'\\path\\file.ext'``).  For paths containing "
"drive letters, *unc* will always be the empty string."
msgstr ""

#: ../Doc/library/os.path.rst:311
msgid "Availability:  Windows."
msgstr ""

# d8e980a5a41e485d94c18bca140b592b
#: ../Doc/library/os.path.rst:316
msgid ""
"Calls the function *visit* with arguments ``(arg, dirname, names)`` for each "
"directory in the directory tree rooted at *path* (including *path* itself, "
"if it is a directory).  The argument *dirname* specifies the visited "
"directory, the argument *names* lists the files in the directory (gotten "
"from ``os.listdir(dirname)``). The *visit* function may modify *names* to "
"influence the set of directories visited below *dirname*, e.g. to avoid "
"visiting certain parts of the tree.  (The object referred to by *names* must "
"be modified in place, using :keyword:`del` or slice assignment.)"
msgstr ""

# b8d67e54d1d04a3ebdf90060e48d8cd0
#: ../Doc/library/os.path.rst:327
msgid ""
"Symbolic links to directories are not treated as subdirectories, and that :"
"func:`walk` therefore will not visit them. To visit linked directories you "
"must identify them with ``os.path.islink(file)`` and ``os.path.isdir(file)"
"``, and invoke :func:`walk` as necessary."
msgstr ""

# 5cf6ffb822d24948b0f9fb28da91648a
#: ../Doc/library/os.path.rst:334
msgid ""
"This function is deprecated and has been removed in Python 3 in favor of :"
"func:`os.walk`."
msgstr ""

# 78261c037aff4bc29649fbc9f53a2cee
#: ../Doc/library/os.path.rst:340
msgid ""
"True if arbitrary Unicode strings can be used as file names (within "
"limitations imposed by the file system)."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:3
msgid ":mod:`ossaudiodev` --- Access to OSS-compatible audio devices"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:12
msgid ""
"This module allows you to access the OSS (Open Sound System) audio "
"interface. OSS is available for a wide range of open-source and commercial "
"Unices, and is the standard audio interface for Linux and recent versions of "
"FreeBSD."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:48
msgid "the official documentation for the OSS C API"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:50
msgid ""
"The module defines a large number of constants supplied by the OSS device "
"driver; see ``<sys/soundcard.h>`` on either Linux or FreeBSD for a listing ."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:53
msgid ":mod:`ossaudiodev` defines the following variables and functions:"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:58
msgid ""
"This exception is raised on certain errors.  The argument is a string "
"describing what went wrong."
msgstr ""

# b2a1f63b91c0444a8e84164e6d19f1b2
#: ../Doc/library/ossaudiodev.rst:61
msgid ""
"(If :mod:`ossaudiodev` receives an error from a system call such as :c:func:"
"`open`, :c:func:`write`, or :c:func:`ioctl`, it raises :exc:`IOError`. "
"Errors detected directly by :mod:`ossaudiodev` result in :exc:"
"`OSSAudioError`.)"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:65
msgid ""
"(For backwards compatibility, the exception class is also available as "
"``ossaudiodev.error``.)"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:72
msgid ""
"Open an audio device and return an OSS audio device object.  This object "
"supports many file-like methods, such as :meth:`read`, :meth:`write`, and :"
"meth:`fileno` (although there are subtle differences between conventional "
"Unix read/write semantics and those of OSS audio devices).  It also supports "
"a number of audio-specific methods; see below for the complete list of "
"methods."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:78
msgid ""
"*device* is the audio device filename to use.  If it is not specified, this "
"module first looks in the environment variable :envvar:`AUDIODEV` for a "
"device to use.  If not found, it falls back to :file:`/dev/dsp`."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:82
msgid ""
"*mode* is one of ``'r'`` for read-only (record) access, ``'w'`` for write-"
"only (playback) access and ``'rw'`` for both. Since many sound cards only "
"allow one process to have the recorder or player open at a time, it is a "
"good idea to open the device only for the activity needed.  Further, some "
"sound cards are half-duplex: they can be opened for reading or writing, but "
"not both at once."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:89
msgid ""
"Note the unusual calling syntax: the *first* argument is optional, and the "
"second is required.  This is a historical artifact for compatibility with "
"the older :mod:`linuxaudiodev` module which :mod:`ossaudiodev` supersedes."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:100
msgid ""
"Open a mixer device and return an OSS mixer device object.   *device* is the "
"mixer device filename to use.  If it is not specified, this module first "
"looks in the environment variable :envvar:`MIXERDEV` for a device to use.  "
"If not found, it falls back to :file:`/dev/mixer`."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:109 ../Doc/library/sunaudio.rst:55
msgid "Audio Device Objects"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:111
msgid ""
"Before you can write to or read from an audio device, you must call three "
"methods in the correct order:"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:114
msgid ":meth:`setfmt` to set the output format"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:116
msgid ":meth:`channels` to set the number of channels"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:118
msgid ":meth:`speed` to set the sample rate"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:120
msgid ""
"Alternately, you can use the :meth:`setparameters` method to set all three "
"audio parameters at once.  This is more convenient, but may not be as "
"flexible in all cases."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:124
msgid ""
"The audio device objects returned by :func:`.open` define the following "
"methods and (read-only) attributes:"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:130
msgid ""
"Explicitly close the audio device.  When you are done writing to or reading "
"from an audio device, you should explicitly close it.  A closed device "
"cannot be used again."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:137
msgid "Return the file descriptor associated with the device."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:142
msgid ""
"Read *size* bytes from the audio input and return them as a Python string. "
"Unlike most Unix device drivers, OSS audio devices in blocking mode (the "
"default) will block :func:`read` until the entire requested amount of data "
"is available."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:150
msgid ""
"Write the Python string *data* to the audio device and return the number of "
"bytes written.  If the audio device is in blocking mode (the default), the "
"entire string is always written (again, this is different from usual Unix "
"device semantics).  If the device is in non-blocking mode, some data may not "
"be written ---see :meth:`writeall`."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:159
msgid ""
"Write the entire Python string *data* to the audio device: waits until the "
"audio device is able to accept data, writes as much data as it will accept, "
"and repeats until *data* has been completely written. If the device is in "
"blocking mode (the default), this has the same effect as :meth:`write`; :"
"meth:`writeall` is only useful in non-blocking mode.  Has no return value, "
"since the amount of data written is always equal to the amount of data "
"supplied."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:166
msgid ""
"The following methods each map to exactly one :func:`ioctl` system call.  "
"The correspondence is obvious: for example, :meth:`setfmt` corresponds to "
"the ``SNDCTL_DSP_SETFMT`` ioctl, and :meth:`sync` to ``SNDCTL_DSP_SYNC`` "
"(this can be useful when consulting the OSS documentation).  If the "
"underlying :func:`ioctl` fails, they all raise :exc:`IOError`."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:175
msgid ""
"Put the device into non-blocking mode.  Once in non-blocking mode, there is "
"no way to return it to blocking mode."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:181
msgid ""
"Return a bitmask of the audio output formats supported by the soundcard.  "
"Some of the formats supported by OSS are:"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:187
msgid ":const:`AFMT_MU_LAW`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:187
msgid ""
"a logarithmic encoding (used by Sun ``.au`` files and :file:`/dev/audio`)"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:190
msgid ":const:`AFMT_A_LAW`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:190
msgid "a logarithmic encoding"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:192
msgid ":const:`AFMT_IMA_ADPCM`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:192
msgid ""
"a 4:1 compressed format defined by the Interactive Multimedia Association"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:195
msgid ":const:`AFMT_U8`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:195
msgid "Unsigned, 8-bit audio"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:197
msgid ":const:`AFMT_S16_LE`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:197
msgid ""
"Signed, 16-bit audio, little-endian byte order (as used by Intel processors)"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:200
msgid ":const:`AFMT_S16_BE`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:200
msgid ""
"Signed, 16-bit audio, big-endian byte order (as used by 68k, PowerPC, Sparc)"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:203
msgid ":const:`AFMT_S8`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:203
msgid "Signed, 8 bit audio"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:205
msgid ":const:`AFMT_U16_LE`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:205
msgid "Unsigned, 16-bit little-endian audio"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:207
msgid ":const:`AFMT_U16_BE`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:207
msgid "Unsigned, 16-bit big-endian audio"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:210
msgid ""
"Consult the OSS documentation for a full list of audio formats, and note "
"that most devices support only a subset of these formats.  Some older "
"devices only support :const:`AFMT_U8`; the most common format used today is :"
"const:`AFMT_S16_LE`."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:218
msgid ""
"Try to set the current audio format to *format*---see :meth:`getfmts` for a "
"list.  Returns the audio format that the device was set to, which may not be "
"the requested format.  May also be used to return the current audio format---"
"do this by passing an \"audio format\" of :const:`AFMT_QUERY`."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:226
msgid ""
"Set the number of output channels to *nchannels*.  A value of 1 indicates "
"monophonic sound, 2 stereophonic.  Some devices may have more than 2 "
"channels, and some high-end devices may not support mono. Returns the number "
"of channels the device was set to."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:234
msgid ""
"Try to set the audio sampling rate to *samplerate* samples per second.  "
"Returns the rate actually set.  Most sound devices don't support arbitrary "
"sampling rates.  Common rates are:"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:239
msgid "Rate"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:241
msgid "8000"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:241
msgid "default rate for :file:`/dev/audio`"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:243
msgid "11025"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:243
msgid "speech recording"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:245
msgid "22050"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:247
msgid "44100"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:247
msgid "CD quality audio (at 16 bits/sample and 2 channels)"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:250
msgid "96000"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:250
msgid "DVD quality audio (at 24 bits/sample)"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:256
msgid ""
"Wait until the sound device has played every byte in its buffer.  (This "
"happens implicitly when the device is closed.)  The OSS documentation "
"recommends closing and re-opening the device rather than using :meth:`sync`."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:263
msgid ""
"Immediately stop playing or recording and return the device to a state where "
"it can accept commands.  The OSS documentation recommends closing and re-"
"opening the device after calling :meth:`reset`."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:270
msgid ""
"Tell the driver that there is likely to be a pause in the output, making it "
"possible for the device to handle the pause more intelligently.  You might "
"use this after playing a spot sound effect, before waiting for user input, "
"or before doing disk I/O."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:275
msgid ""
"The following convenience methods combine several ioctls, or one ioctl and "
"some simple calculations."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:281
msgid ""
"Set the key audio sampling parameters---sample format, number of channels, "
"and sampling rate---in one method call.  *format*,  *nchannels*, and "
"*samplerate* should be as specified in the :meth:`setfmt`, :meth:`channels`, "
"and :meth:`speed`  methods.  If *strict* is true, :meth:`setparameters` "
"checks to see if each parameter was actually set to the requested value, and "
"raises :exc:`OSSAudioError` if not.  Returns a tuple (*format*, *nchannels*, "
"*samplerate*) indicating the parameter values that were actually set by the "
"device driver (i.e., the same as the return values of :meth:`setfmt`, :meth:"
"`channels`, and :meth:`speed`)."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:291
msgid "For example,  ::"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:295
msgid "is equivalent to  ::"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:304
msgid "Returns the size of the hardware buffer, in samples."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:309
msgid ""
"Returns the number of samples that are in the hardware buffer yet to be "
"played."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:314
msgid ""
"Returns the number of samples that could be queued into the hardware buffer "
"to be played without blocking."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:317
msgid "Audio device objects also support several read-only attributes:"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:322
msgid "Boolean indicating whether the device has been closed."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:327
msgid "String containing the name of the device file."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:332
msgid "The I/O mode for the file, either ``\"r\"``, ``\"rw\"``, or ``\"w\"``."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:338
msgid "Mixer Device Objects"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:340
msgid "The mixer object provides two file-like methods:"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:345
msgid ""
"This method closes the open mixer device file.  Any further attempts to use "
"the mixer after this file is closed will raise an :exc:`IOError`."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:351
msgid "Returns the file handle number of the open mixer device file."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:353
msgid "The remaining methods are specific to audio mixing:"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:358
msgid ""
"This method returns a bitmask specifying the available mixer controls "
"(\"Control\" being a specific mixable \"channel\", such as :const:"
"`SOUND_MIXER_PCM` or :const:`SOUND_MIXER_SYNTH`).  This bitmask indicates a "
"subset of all available mixer controls---the :const:`SOUND_MIXER_\\*` "
"constants defined at module level. To determine if, for example, the current "
"mixer object supports a PCM mixer, use the following Python code::"
msgstr ""

#: ../Doc/library/ossaudiodev.rst:370
msgid ""
"For most purposes, the :const:`SOUND_MIXER_VOLUME` (master volume) and :"
"const:`SOUND_MIXER_PCM` controls should suffice---but code that uses the "
"mixer should be flexible when it comes to choosing mixer controls.  On the "
"Gravis Ultrasound, for example, :const:`SOUND_MIXER_VOLUME` does not exist."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:378
msgid ""
"Returns a bitmask indicating stereo mixer controls.  If a bit is set, the "
"corresponding control is stereo; if it is unset, the control is either "
"monophonic or not supported by the mixer (use in combination with :meth:"
"`controls` to determine which)."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:383
msgid ""
"See the code example for the :meth:`controls` function for an example of "
"getting data from a bitmask."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:389
msgid ""
"Returns a bitmask specifying the mixer controls that may be used to record.  "
"See the code example for :meth:`controls` for an example of reading from a "
"bitmask."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:395
msgid ""
"Returns the volume of a given mixer control.  The returned volume is a 2-"
"tuple ``(left_volume,right_volume)``.  Volumes are specified as numbers from "
"0 (silent) to 100 (full volume).  If the control is monophonic, a 2-tuple is "
"still returned, but both volumes are the same."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:400
msgid ""
"Raises :exc:`OSSAudioError` if an invalid control was is specified, or :exc:"
"`IOError` if an unsupported control is specified."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:406
msgid ""
"Sets the volume for a given mixer control to ``(left,right)``. ``left`` and "
"``right`` must be ints and between 0 (silent) and 100 (full volume).  On "
"success, the new volume is returned as a 2-tuple. Note that this may not be "
"exactly the same as the volume specified, because of the limited resolution "
"of some soundcard's mixers."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:412
msgid ""
"Raises :exc:`OSSAudioError` if an invalid mixer control was specified, or if "
"the specified volumes were out-of-range."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:418
msgid ""
"This method returns a bitmask indicating which control(s) are currently "
"being used as a recording source."
msgstr ""

#: ../Doc/library/ossaudiodev.rst:424
msgid ""
"Call this function to specify a recording source.  Returns a bitmask "
"indicating the new recording source (or sources) if successful; raises :exc:"
"`IOError` if an invalid source was specified.  To set the current recording "
"source to the microphone input::"
msgstr ""

#: ../Doc/library/othergui.rst:4
msgid "Other Graphical User Interface Packages"
msgstr ""

# 15c33b96470d448b91c742424b8ba35b
#: ../Doc/library/othergui.rst:6
msgid ""
"Major cross-platform (Windows, Mac OS X, Unix-like) GUI toolkits are "
"available for Python:"
msgstr ""

#: ../Doc/library/othergui.rst:12
msgid ""
"is a set of bindings for the `GTK <http://www.gtk.org/>`_ widget set. It "
"provides an object oriented interface that is slightly higher level than the "
"C one. It comes with many more widgets than Tkinter provides, and has good "
"Python-specific reference documentation. There are also bindings to `GNOME "
"<http://www.gnome.org>`_.  One well known PyGTK application is `PythonCAD "
"<http://www.pythoncad.org/>`_. An online `tutorial <http://www.pygtk.org/"
"pygtk2tutorial/index.html>`_ is available."
msgstr ""

#: ../Doc/library/othergui.rst:21
msgid ""
"PyQt is a :program:`sip`\\ -wrapped binding to the Qt toolkit.  Qt is an "
"extensive C++ GUI application development framework that is available for "
"Unix, Windows and Mac OS X. :program:`sip` is a tool for generating bindings "
"for C++ libraries as Python classes, and is specifically designed for "
"Python. The *PyQt3* bindings have a book, `GUI Programming with Python: QT "
"Edition <http://www.commandprompt.com/community/pyqt/>`_ by Boudewijn Rempt. "
"The *PyQt4* bindings also have a book, `Rapid GUI Programming with Python "
"and Qt <http://www.qtrac.eu/pyqtbook.html>`_, by Mark Summerfield."
msgstr ""

#: ../Doc/library/othergui.rst:33
msgid ""
"wxPython is a cross-platform GUI toolkit for Python that is built around the "
"popular `wxWidgets <http://www.wxwidgets.org/>`_ (formerly wxWindows) C++ "
"toolkit.  It provides a native look and feel for applications on Windows, "
"Mac OS X, and Unix systems by using each platform's native widgets where "
"ever possible, (GTK+ on Unix-like systems).  In addition to an extensive set "
"of widgets, wxPython provides classes for online documentation and context "
"sensitive help, printing, HTML viewing, low-level device context drawing, "
"drag and drop, system clipboard access, an XML-based resource format and "
"more, including an ever growing library of user-contributed modules.  "
"wxPython has a book, `wxPython in Action <http://www.amazon.com/exec/obidos/"
"ASIN/1932394621>`_, by Noel Rappin and Robin Dunn."
msgstr ""

#: ../Doc/library/othergui.rst:46
msgid ""
"PyGTK, PyQt, and wxPython, all have a modern look and feel and more widgets "
"than Tkinter. In addition, there are many other GUI toolkits for Python, "
"both cross-platform, and platform-specific. See the `GUI Programming <http://"
"wiki.python.org/moin/GuiProgramming>`_ page in the Python Wiki for a much "
"more complete list, and also for links to documents where the different GUI "
"toolkits are compared."
msgstr ""

#: ../Doc/library/parser.rst:3
msgid ":mod:`parser` --- Access Python parse trees"
msgstr ""

#: ../Doc/library/parser.rst:20
msgid ""
"The :mod:`parser` module provides an interface to Python's internal parser "
"and byte-code compiler.  The primary purpose for this interface is to allow "
"Python code to edit the parse tree of a Python expression and create "
"executable code from this.  This is better than trying to parse and modify "
"an arbitrary Python code fragment as a string because parsing is performed "
"in a manner identical to the code forming the application.  It is also "
"faster."
msgstr ""

#: ../Doc/library/parser.rst:29
msgid ""
"From Python 2.5 onward, it's much more convenient to cut in at the Abstract "
"Syntax Tree (AST) generation and compilation stage, using the :mod:`ast` "
"module."
msgstr ""

# db5f30c0d3924ac69cad1571a612deb3
#: ../Doc/library/parser.rst:33
msgid ""
"The :mod:`parser` module exports the names documented here also with \"st\" "
"replaced by \"ast\"; this is a legacy from the time when there was no other "
"AST and has nothing to do with the AST found in Python 2.5.  This is also "
"the reason for the functions' keyword arguments being called *ast*, not "
"*st*. The \"ast\" functions have been removed in Python 3."
msgstr ""

#: ../Doc/library/parser.rst:39
msgid ""
"There are a few things to note about this module which are important to "
"making use of the data structures created.  This is not a tutorial on "
"editing the parse trees for Python code, but some examples of using the :mod:"
"`parser` module are presented."
msgstr ""

#: ../Doc/library/parser.rst:44
msgid ""
"Most importantly, a good understanding of the Python grammar processed by "
"the internal parser is required.  For full information on the language "
"syntax, refer to :ref:`reference-index`.  The parser itself is created from "
"a grammar specification defined in the file :file:`Grammar/Grammar` in the "
"standard Python distribution.  The parse trees stored in the ST objects "
"created by this module are the actual output from the internal parser when "
"created by the :func:`expr` or :func:`suite` functions, described below.  "
"The ST objects created by :func:`sequence2st` faithfully simulate those "
"structures.  Be aware that the values of the sequences which are considered "
"\"correct\" will vary from one version of Python to another as the formal "
"grammar for the language is revised.  However, transporting code from one "
"Python version to another as source text will always allow correct parse "
"trees to be created in the target version, with the only restriction being "
"that migrating to an older version of the interpreter will not support more "
"recent language constructs.  The parse trees are not typically compatible "
"from one version to another, whereas source code has always been forward-"
"compatible."
msgstr ""

#: ../Doc/library/parser.rst:61
msgid ""
"Each element of the sequences returned by :func:`st2list` or :func:"
"`st2tuple` has a simple form.  Sequences representing non-terminal elements "
"in the grammar always have a length greater than one.  The first element is "
"an integer which identifies a production in the grammar.  These integers are "
"given symbolic names in the C header file :file:`Include/graminit.h` and the "
"Python module :mod:`symbol`.  Each additional element of the sequence "
"represents a component of the production as recognized in the input string: "
"these are always sequences which have the same form as the parent.  An "
"important aspect of this structure which should be noted is that keywords "
"used to identify the parent node type, such as the keyword :keyword:`if` in "
"an :const:`if_stmt`, are included in the node tree without any special "
"treatment.  For example, the :keyword:`if` keyword is represented by the "
"tuple ``(1, 'if')``, where ``1`` is the numeric value associated with all :"
"const:`NAME` tokens, including variable and function names defined by the "
"user.  In an alternate form returned when line number information is "
"requested, the same token might be represented as ``(1, 'if', 12)``, where "
"the ``12`` represents the line number at which the terminal symbol was found."
msgstr ""

#: ../Doc/library/parser.rst:78
msgid ""
"Terminal elements are represented in much the same way, but without any "
"child elements and the addition of the source text which was identified.  "
"The example of the :keyword:`if` keyword above is representative.  The "
"various types of terminal symbols are defined in the C header file :file:"
"`Include/token.h` and the Python module :mod:`token`."
msgstr ""

#: ../Doc/library/parser.rst:84
msgid ""
"The ST objects are not required to support the functionality of this module, "
"but are provided for three purposes: to allow an application to amortize the "
"cost of processing complex parse trees, to provide a parse tree "
"representation which conserves memory space when compared to the Python list "
"or tuple representation, and to ease the creation of additional modules in C "
"which manipulate parse trees.  A simple \"wrapper\" class may be created in "
"Python to hide the use of ST objects."
msgstr ""

#: ../Doc/library/parser.rst:92
msgid ""
"The :mod:`parser` module defines functions for a few distinct purposes.  The "
"most important purposes are to create ST objects and to convert ST objects "
"to other representations such as parse trees and compiled code objects, but "
"there are also functions which serve to query the type of parse tree "
"represented by an ST object."
msgstr ""

#: ../Doc/library/parser.rst:102
msgid "Useful constants representing internal nodes of the parse tree."
msgstr ""

#: ../Doc/library/parser.rst:105
msgid ""
"Useful constants representing leaf nodes of the parse tree and functions for "
"testing node values."
msgstr ""

#: ../Doc/library/parser.rst:112
msgid "Creating ST Objects"
msgstr ""

#: ../Doc/library/parser.rst:114
msgid ""
"ST objects may be created from source code or from a parse tree. When "
"creating an ST object from source, different functions are used to create "
"the ``'eval'`` and ``'exec'`` forms."
msgstr ""

# 382bb640f47f45b38c2e6f5cc1c53289
#: ../Doc/library/parser.rst:121
msgid ""
"The :func:`expr` function parses the parameter *source* as if it were an "
"input to ``compile(source, 'file.py', 'eval')``.  If the parse succeeds, an "
"ST object is created to hold the internal parse tree representation, "
"otherwise an appropriate exception is raised."
msgstr ""

# f66e5dd583344aa8800d12cfc8feaa95
#: ../Doc/library/parser.rst:129
msgid ""
"The :func:`suite` function parses the parameter *source* as if it were an "
"input to ``compile(source, 'file.py', 'exec')``.  If the parse succeeds, an "
"ST object is created to hold the internal parse tree representation, "
"otherwise an appropriate exception is raised."
msgstr ""

# 78b38e896a2744b6bd8a42c28f3d932c
#: ../Doc/library/parser.rst:137
msgid ""
"This function accepts a parse tree represented as a sequence and builds an "
"internal representation if possible.  If it can validate that the tree "
"conforms to the Python grammar and all nodes are valid node types in the "
"host version of Python, an ST object is created from the internal "
"representation and returned to the called.  If there is a problem creating "
"the internal representation, or if the tree cannot be validated, a :exc:"
"`ParserError` exception is raised.  An ST object created this way should not "
"be assumed to compile correctly; normal exceptions raised by compilation may "
"still be initiated when the ST object is passed to :func:`compilest`.  This "
"may indicate problems not related to syntax (such as a :exc:`MemoryError` "
"exception), but may also be due to constructs such as the result of parsing "
"``del f(0)``, which escapes the Python parser but is checked by the bytecode "
"compiler."
msgstr ""

#: ../Doc/library/parser.rst:150
msgid ""
"Sequences representing terminal tokens may be represented as either two-"
"element lists of the form ``(1, 'name')`` or as three-element lists of the "
"form ``(1, 'name', 56)``.  If the third element is present, it is assumed to "
"be a valid line number.  The line number may be specified for any subset of "
"the terminal symbols in the input tree."
msgstr ""

#: ../Doc/library/parser.rst:159
msgid ""
"This is the same function as :func:`sequence2st`.  This entry point is "
"maintained for backward compatibility."
msgstr ""

#: ../Doc/library/parser.rst:166
msgid "Converting ST Objects"
msgstr ""

#: ../Doc/library/parser.rst:168
msgid ""
"ST objects, regardless of the input used to create them, may be converted to "
"parse trees represented as list- or tuple- trees, or may be compiled into "
"executable code objects.  Parse trees may be extracted with or without line "
"numbering information."
msgstr ""

# 3f0f9d7cf12a4ef89193b5012e725ac6
#: ../Doc/library/parser.rst:176
msgid ""
"This function accepts an ST object from the caller in *ast* and returns a "
"Python list representing the equivalent parse tree.  The resulting list "
"representation can be used for inspection or the creation of a new parse "
"tree in list form.  This function does not fail so long as memory is "
"available to build the list representation.  If the parse tree will only be "
"used for inspection, :func:`st2tuple` should be used instead to reduce "
"memory consumption and fragmentation.  When the list representation is "
"required, this function is significantly faster than retrieving a tuple "
"representation and converting that to nested lists."
msgstr ""

#: ../Doc/library/parser.rst:186
msgid ""
"If *line_info* is true, line number information will be included for all "
"terminal tokens as a third element of the list representing the token.  Note "
"that the line number provided specifies the line on which the token *ends*. "
"This information is omitted if the flag is false or omitted."
msgstr ""

# c0853b5a30414170ad04e1d384fd1a54
#: ../Doc/library/parser.rst:194
msgid ""
"This function accepts an ST object from the caller in *ast* and returns a "
"Python tuple representing the equivalent parse tree.  Other than returning a "
"tuple instead of a list, this function is identical to :func:`st2list`."
msgstr ""

#: ../Doc/library/parser.rst:198
msgid ""
"If *line_info* is true, line number information will be included for all "
"terminal tokens as a third element of the list representing the token.  This "
"information is omitted if the flag is false or omitted."
msgstr ""

# 8917d5ddcc754e369850e1c16a6e3aad
#: ../Doc/library/parser.rst:207
msgid ""
"The Python byte compiler can be invoked on an ST object to produce code "
"objects which can be used as part of an :keyword:`exec` statement or a call "
"to the built-in :func:`eval` function. This function provides the interface "
"to the compiler, passing the internal parse tree from *ast* to the parser, "
"using the source file name specified by the *filename* parameter. The "
"default value supplied for *filename* indicates that the source was an ST "
"object."
msgstr ""

#: ../Doc/library/parser.rst:214
msgid ""
"Compiling an ST object may result in exceptions related to compilation; an "
"example would be a :exc:`SyntaxError` caused by the parse tree for ``del f(0)"
"``: this statement is considered legal within the formal grammar for Python "
"but is not a legal language construct.  The :exc:`SyntaxError` raised for "
"this condition is actually generated by the Python byte-compiler normally, "
"which is why it can be raised at this point by the :mod:`parser` module.  "
"Most causes of compilation failure can be diagnosed programmatically by "
"inspection of the parse tree."
msgstr ""

#: ../Doc/library/parser.rst:227
msgid "Queries on ST Objects"
msgstr ""

#: ../Doc/library/parser.rst:229
msgid ""
"Two functions are provided which allow an application to determine if an ST "
"was created as an expression or a suite.  Neither of these functions can be "
"used to determine if an ST was created from source code via :func:`expr` or :"
"func:`suite` or from a parse tree via :func:`sequence2st`."
msgstr ""

# 4e6099b9f7f54cf1b4652163504b14d9
#: ../Doc/library/parser.rst:239
msgid ""
"When *ast* represents an ``'eval'`` form, this function returns true, "
"otherwise it returns false.  This is useful, since code objects normally "
"cannot be queried for this information using existing built-in functions.  "
"Note that the code objects created by :func:`compilest` cannot be queried "
"like this either, and are identical to those created by the built-in :func:"
"`compile` function."
msgstr ""

# 6ea8a7f9926745e4b8a149d42eb36d39
#: ../Doc/library/parser.rst:248
msgid ""
"This function mirrors :func:`isexpr` in that it reports whether an ST object "
"represents an ``'exec'`` form, commonly known as a \"suite.\"  It is not "
"safe to assume that this function is equivalent to ``not isexpr(ast)``, as "
"additional syntactic fragments may be supported in the future."
msgstr ""

#: ../Doc/library/parser.rst:257
msgid "Exceptions and Error Handling"
msgstr ""

#: ../Doc/library/parser.rst:259
msgid ""
"The parser module defines a single exception, but may also pass other built-"
"in exceptions from other portions of the Python runtime environment.  See "
"each function for information about the exceptions it can raise."
msgstr ""

# 8ab7b4e76f074aa6958cd50a3fc13ef6
#: ../Doc/library/parser.rst:266
msgid ""
"Exception raised when a failure occurs within the parser module.  This is "
"generally produced for validation failures rather than the built-in :exc:"
"`SyntaxError` raised during normal parsing. The exception argument is either "
"a string describing the reason of the failure or a tuple containing a "
"sequence causing the failure from a parse tree passed to :func:`sequence2st` "
"and an explanatory string.  Calls to :func:`sequence2st` need to be able to "
"handle either type of exception, while calls to other functions in the "
"module will only need to be aware of the simple string values."
msgstr ""

# a6f62be8ffcb42bfa5dec49aa041b23b
#: ../Doc/library/parser.rst:275
msgid ""
"Note that the functions :func:`compilest`, :func:`expr`, and :func:`suite` "
"may raise exceptions which are normally raised by the parsing and "
"compilation process.  These include the built in exceptions :exc:"
"`MemoryError`, :exc:`OverflowError`, :exc:`SyntaxError`, and :exc:"
"`SystemError`.  In these cases, these exceptions carry all the meaning "
"normally associated with them. Refer to the descriptions of each function "
"for detailed information."
msgstr ""

#: ../Doc/library/parser.rst:286
msgid "ST Objects"
msgstr ""

#: ../Doc/library/parser.rst:288
msgid ""
"Ordered and equality comparisons are supported between ST objects. Pickling "
"of ST objects (using the :mod:`pickle` module) is also supported."
msgstr ""

#: ../Doc/library/parser.rst:294
msgid ""
"The type of the objects returned by :func:`expr`, :func:`suite` and :func:"
"`sequence2st`."
msgstr ""

#: ../Doc/library/parser.rst:297
msgid "ST objects have the following methods:"
msgstr ""

#: ../Doc/library/parser.rst:302
msgid "Same as ``compilest(st, filename)``."
msgstr ""

#: ../Doc/library/parser.rst:307
msgid "Same as ``isexpr(st)``."
msgstr ""

#: ../Doc/library/parser.rst:312
msgid "Same as ``issuite(st)``."
msgstr ""

# 4c7be55e0a334a6a958ef670f4d5606c
#: ../Doc/library/parser.rst:317
msgid "Same as ``st2list(st, line_info)``."
msgstr ""

# 58c6d75a219f4d59bad6934db9371693
#: ../Doc/library/parser.rst:322
msgid "Same as ``st2tuple(st, line_info)``."
msgstr ""

# 38d5ec366132409b86a388ba953c6b78
#: ../Doc/library/parser.rst:326
msgid "Example: Emulation of :func:`compile`"
msgstr ""

#: ../Doc/library/parser.rst:328
msgid ""
"While many useful operations may take place between parsing and bytecode "
"generation, the simplest operation is to do nothing.  For this purpose, "
"using the :mod:`parser` module to produce an intermediate data structure is "
"equivalent to the code ::"
msgstr ""

#: ../Doc/library/parser.rst:338
msgid ""
"The equivalent operation using the :mod:`parser` module is somewhat longer, "
"and allows the intermediate internal parse tree to be retained as an ST "
"object::"
msgstr ""

#: ../Doc/library/parser.rst:348
msgid ""
"An application which needs both ST and code objects can package this code "
"into readily available functions::"
msgstr ""

#: ../Doc/library/pdb.rst:4
msgid ":mod:`pdb` --- The Python Debugger"
msgstr ""

#: ../Doc/library/pdb.rst:12
msgid ""
"The module :mod:`pdb` defines an interactive source code debugger for Python "
"programs.  It supports setting (conditional) breakpoints and single stepping "
"at the source line level, inspection of stack frames, source code listing, "
"and evaluation of arbitrary Python code in the context of any stack frame.  "
"It also supports post-mortem debugging and can be called under program "
"control."
msgstr ""

#: ../Doc/library/pdb.rst:23
msgid ""
"The debugger is extensible --- it is actually defined as the class :class:"
"`Pdb`. This is currently undocumented but easily understood by reading the "
"source.  The extension interface uses the modules :mod:`bdb` and :mod:`cmd`."
msgstr ""

#: ../Doc/library/pdb.rst:27
msgid ""
"The debugger's prompt is ``(Pdb)``. Typical usage to run a program under "
"control of the debugger is::"
msgstr ""

#: ../Doc/library/pdb.rst:41
msgid ""
":file:`pdb.py` can also be invoked as a script to debug other scripts.  For "
"example::"
msgstr ""

#: ../Doc/library/pdb.rst:46
msgid ""
"When invoked as a script, pdb will automatically enter post-mortem debugging "
"if the program being debugged exits abnormally. After post-mortem debugging "
"(or after normal exit of the program), pdb will restart the program. "
"Automatic restarting preserves pdb's state (such as breakpoints) and in most "
"cases is more useful than quitting the debugger upon program's exit."
msgstr ""

#: ../Doc/library/pdb.rst:55
msgid ""
"The typical usage to break into the debugger from a running program is to "
"insert ::"
msgstr ""

#: ../Doc/library/pdb.rst:60
msgid ""
"at the location you want to break into the debugger.  You can then step "
"through the code following this statement, and continue running without the "
"debugger using the ``c`` command."
msgstr ""

#: ../Doc/library/pdb.rst:64
msgid "The typical usage to inspect a crashed program is::"
msgstr ""

#: ../Doc/library/pdb.rst:82
msgid ""
"The module defines the following functions; each enters the debugger in a "
"slightly different way:"
msgstr ""

# 8a7c6b4cad834ee982cda7ef762a9046
#: ../Doc/library/pdb.rst:87
msgid ""
"Execute the *statement* (given as a string) under debugger control.  The "
"debugger prompt appears before any code is executed; you can set breakpoints "
"and type ``continue``, or you can step through the statement using ``step`` "
"or ``next`` (all these commands are explained below).  The optional "
"*globals* and *locals* arguments specify the environment in which the code "
"is executed; by default the dictionary of the module :mod:`__main__` is "
"used.  (See the explanation of the :keyword:`exec` statement or the :func:"
"`eval` built-in function.)"
msgstr ""

#: ../Doc/library/pdb.rst:99
msgid ""
"Evaluate the *expression* (given as a string) under debugger control.  When :"
"func:`runeval` returns, it returns the value of the expression.  Otherwise "
"this function is similar to :func:`run`."
msgstr ""

#: ../Doc/library/pdb.rst:106
msgid ""
"Call the *function* (a function or method object, not a string) with the "
"given arguments.  When :func:`runcall` returns, it returns whatever the "
"function call returned.  The debugger prompt appears as soon as the function "
"is entered."
msgstr ""

#: ../Doc/library/pdb.rst:113
msgid ""
"Enter the debugger at the calling stack frame.  This is useful to hard-code "
"a breakpoint at a given point in a program, even if the code is not "
"otherwise being debugged (e.g. when an assertion fails)."
msgstr ""

#: ../Doc/library/pdb.rst:120
msgid ""
"Enter post-mortem debugging of the given *traceback* object.  If no "
"*traceback* is given, it uses the one of the exception that is currently "
"being handled (an exception must be being handled if the default is to be "
"used)."
msgstr ""

#: ../Doc/library/pdb.rst:128
msgid ""
"Enter post-mortem debugging of the traceback found in :data:`sys."
"last_traceback`."
msgstr ""

# 58a66e2d88d84f7fb2b21f7643781a74
#: ../Doc/library/pdb.rst:132
msgid ""
"The ``run*`` functions and :func:`set_trace` are aliases for instantiating "
"the :class:`Pdb` class and calling the method of the same name.  If you want "
"to access further features, you have to do this yourself:"
msgstr ""

#: ../Doc/library/pdb.rst:138
msgid ":class:`Pdb` is the debugger class."
msgstr ""

#: ../Doc/library/pdb.rst:140
msgid ""
"The *completekey*, *stdin* and *stdout* arguments are passed to the "
"underlying :class:`cmd.Cmd` class; see the description there."
msgstr ""

#: ../Doc/library/pdb.rst:143
msgid ""
"The *skip* argument, if given, must be an iterable of glob-style module name "
"patterns.  The debugger will not step into frames that originate in a module "
"that matches one of these patterns. [1]_"
msgstr ""

#: ../Doc/library/pdb.rst:147
msgid "Example call to enable tracing with *skip*::"
msgstr ""

#: ../Doc/library/pdb.rst:159
msgid "See the documentation for the functions explained above."
msgstr ""

#: ../Doc/library/pdb.rst:165
msgid "Debugger Commands"
msgstr ""

#: ../Doc/library/pdb.rst:167
msgid ""
"The debugger recognizes the following commands.  Most commands can be "
"abbreviated to one or two letters; e.g. ``h(elp)`` means that either ``h`` "
"or ``help`` can be used to enter the help command (but not ``he`` or "
"``hel``, nor ``H`` or ``Help`` or ``HELP``).  Arguments to commands must be "
"separated by whitespace (spaces or tabs).  Optional arguments are enclosed "
"in square brackets (``[]``) in the command syntax; the square brackets must "
"not be typed. Alternatives in the command syntax are separated by a vertical "
"bar (``|``)."
msgstr ""

#: ../Doc/library/pdb.rst:175
msgid ""
"Entering a blank line repeats the last command entered.  Exception: if the "
"last command was a ``list`` command, the next 11 lines are listed."
msgstr ""

#: ../Doc/library/pdb.rst:178
msgid ""
"Commands that the debugger doesn't recognize are assumed to be Python "
"statements and are executed in the context of the program being debugged.  "
"Python statements can also be prefixed with an exclamation point (``!``).  "
"This is a powerful way to inspect the program being debugged; it is even "
"possible to change a variable or call a function.  When an exception occurs "
"in such a statement, the exception name is printed but the debugger's state "
"is not changed."
msgstr ""

#: ../Doc/library/pdb.rst:186
msgid ""
"Multiple commands may be entered on a single line, separated by ``;;``.  (A "
"single ``;`` is not used as it is the separator for multiple commands in a "
"line that is passed to the Python parser.) No intelligence is applied to "
"separating the commands; the input is split at the first ``;;`` pair, even "
"if it is in the middle of a quoted string."
msgstr ""

#: ../Doc/library/pdb.rst:192
msgid ""
"The debugger supports aliases.  Aliases can have parameters which allows one "
"a certain level of adaptability to the context under examination."
msgstr ""

#: ../Doc/library/pdb.rst:199
msgid ""
"If a file :file:`.pdbrc`  exists in the user's home directory or in the "
"current directory, it is read in and executed as if it had been typed at the "
"debugger prompt. This is particularly useful for aliases.  If both files "
"exist, the one in the home directory is read first and aliases defined there "
"can be overridden by the local file."
msgstr ""

#: ../Doc/library/pdb.rst:206
msgid ""
"Without argument, print the list of available commands.  With a *command* as "
"argument, print help about that command.  ``help pdb`` displays the full "
"documentation file; if the environment variable :envvar:`PAGER` is defined, "
"the file is piped through that command instead.  Since the *command* "
"argument must be an identifier, ``help exec`` must be entered to get help on "
"the ``!`` command."
msgstr ""

#: ../Doc/library/pdb.rst:214
msgid ""
"Print a stack trace, with the most recent frame at the bottom.  An arrow "
"indicates the current frame, which determines the context of most commands."
msgstr ""

# 3e70cef400c1495f8188ee960858862c
#: ../Doc/library/pdb.rst:218
msgid ""
"Move the current frame one level down in the stack trace (to a newer frame)."
msgstr ""

# 3979086c291a42309f876e11886c5f35
#: ../Doc/library/pdb.rst:221
msgid ""
"Move the current frame one level up in the stack trace (to an older frame)."
msgstr ""

#: ../Doc/library/pdb.rst:224
msgid ""
"With a *lineno* argument, set a break there in the current file.  With a "
"*function* argument, set a break at the first executable statement within "
"that function. The line number may be prefixed with a filename and a colon, "
"to specify a breakpoint in another file (probably one that hasn't been "
"loaded yet). The file is searched on ``sys.path``. Note that each breakpoint "
"is assigned a number to which all the other breakpoint commands refer."
msgstr ""

#: ../Doc/library/pdb.rst:231
msgid ""
"If a second argument is present, it is an expression which must evaluate to "
"true before the breakpoint is honored."
msgstr ""

#: ../Doc/library/pdb.rst:234
msgid ""
"Without argument, list all breaks, including for each breakpoint, the number "
"of times that breakpoint has been hit, the current ignore count, and the "
"associated condition if any."
msgstr ""

#: ../Doc/library/pdb.rst:239
msgid ""
"Temporary breakpoint, which is removed automatically when it is first hit.  "
"The arguments are the same as break."
msgstr ""

# d8dee3a5055844249540c495831ef094
#: ../Doc/library/pdb.rst:243
msgid ""
"With a *filename:lineno* argument, clear all the breakpoints at this line. "
"With a space separated list of breakpoint numbers, clear those breakpoints. "
"Without argument, clear all breaks (but first ask confirmation)."
msgstr ""

#: ../Doc/library/pdb.rst:248
msgid ""
"Disables the breakpoints given as a space separated list of breakpoint "
"numbers. Disabling a breakpoint means it cannot cause the program to stop "
"execution, but unlike clearing a breakpoint, it remains in the list of "
"breakpoints and can be (re-)enabled."
msgstr ""

#: ../Doc/library/pdb.rst:254
msgid "Enables the breakpoints specified."
msgstr ""

#: ../Doc/library/pdb.rst:257
msgid ""
"Sets the ignore count for the given breakpoint number.  If count is omitted, "
"the ignore count is set to 0.  A breakpoint becomes active when the ignore "
"count is zero.  When non-zero, the count is decremented each time the "
"breakpoint is reached and the breakpoint is not disabled and any associated "
"condition evaluates to true."
msgstr ""

#: ../Doc/library/pdb.rst:264
msgid ""
"Condition is an expression which must evaluate to true before the breakpoint "
"is honored.  If condition is absent, any existing condition is removed; i."
"e., the breakpoint is made unconditional."
msgstr ""

#: ../Doc/library/pdb.rst:269
msgid ""
"Specify a list of commands for breakpoint number *bpnumber*.  The commands "
"themselves appear on the following lines.  Type a line containing just 'end' "
"to terminate the commands. An example::"
msgstr ""

#: ../Doc/library/pdb.rst:278
msgid ""
"To remove all commands from a breakpoint, type commands and follow it "
"immediately with  end; that is, give no commands."
msgstr ""

#: ../Doc/library/pdb.rst:281
msgid ""
"With no *bpnumber* argument, commands refers to the last breakpoint set."
msgstr ""

#: ../Doc/library/pdb.rst:283
msgid ""
"You can use breakpoint commands to start your program up again. Simply use "
"the continue command, or step, or any other command that resumes execution."
msgstr ""

#: ../Doc/library/pdb.rst:286
msgid ""
"Specifying any command resuming execution (currently continue, step, next, "
"return, jump, quit and their abbreviations) terminates the command list (as "
"if that command was immediately followed by end). This is because any time "
"you resume execution (even with a simple next or step), you may encounter "
"another breakpoint--which could have its own command list, leading to "
"ambiguities about which list to execute."
msgstr ""

#: ../Doc/library/pdb.rst:293
msgid ""
"If you use the 'silent' command in the command list, the usual message about "
"stopping at a breakpoint is not printed.  This may be desirable for "
"breakpoints that are to print a specific message and then continue.  If none "
"of the other commands print anything, you see no sign that the breakpoint "
"was reached."
msgstr ""

#: ../Doc/library/pdb.rst:301
msgid ""
"Execute the current line, stop at the first possible occasion (either in a "
"function that is called or on the next line in the current function)."
msgstr ""

#: ../Doc/library/pdb.rst:305
msgid ""
"Continue execution until the next line in the current function is reached or "
"it returns.  (The difference between ``next`` and ``step`` is that ``step`` "
"stops inside a called function, while ``next`` executes called functions at "
"(nearly) full speed, only stopping at the next line in the current function.)"
msgstr ""

#: ../Doc/library/pdb.rst:311
msgid ""
"Continue execution until the line with the line number greater than the "
"current one is reached or when returning from current frame."
msgstr ""

#: ../Doc/library/pdb.rst:317
msgid "Continue execution until the current function returns."
msgstr ""

#: ../Doc/library/pdb.rst:320
msgid "Continue execution, only stop when a breakpoint is encountered."
msgstr ""

#: ../Doc/library/pdb.rst:323
msgid ""
"Set the next line that will be executed.  Only available in the bottom-most "
"frame.  This lets you jump back and execute code again, or jump forward to "
"skip code that you don't want to run."
msgstr ""

#: ../Doc/library/pdb.rst:327
msgid ""
"It should be noted that not all jumps are allowed --- for instance it is not "
"possible to jump into the middle of a :keyword:`for` loop or out of a :"
"keyword:`finally` clause."
msgstr ""

#: ../Doc/library/pdb.rst:332
msgid ""
"List source code for the current file.  Without arguments, list 11 lines "
"around the current line or continue the previous listing.  With one "
"argument, list 11 lines around at that line.  With two arguments, list the "
"given range; if the second argument is less than the first, it is "
"interpreted as a count."
msgstr ""

#: ../Doc/library/pdb.rst:338
msgid "Print the argument list of the current function."
msgstr ""

#: ../Doc/library/pdb.rst:341
msgid "Evaluate the *expression* in the current context and print its value."
msgstr ""

# f55e35d3a6ec480a8b4bb534e57fd669
#: ../Doc/library/pdb.rst:345
msgid ""
"``print`` can also be used, but is not a debugger command --- this executes "
"the Python :keyword:`print` statement."
msgstr ""

#: ../Doc/library/pdb.rst:349
msgid ""
"Like the ``p`` command, except the value of the expression is pretty-printed "
"using the :mod:`pprint` module."
msgstr ""

#: ../Doc/library/pdb.rst:353
msgid ""
"Creates an alias called *name* that executes *command*.  The command must "
"*not* be enclosed in quotes.  Replaceable parameters can be indicated by ``"
"%1``, ``%2``, and so on, while ``%*`` is replaced by all the parameters.  If "
"no command is given, the current alias for *name* is shown. If no arguments "
"are given, all aliases are listed."
msgstr ""

#: ../Doc/library/pdb.rst:359
msgid ""
"Aliases may be nested and can contain anything that can be legally typed at "
"the pdb prompt.  Note that internal pdb commands *can* be overridden by "
"aliases. Such a command is then hidden until the alias is removed.  Aliasing "
"is recursively applied to the first word of the command line; all other "
"words in the line are left alone."
msgstr ""

#: ../Doc/library/pdb.rst:365
msgid ""
"As an example, here are two useful aliases (especially when placed in the :"
"file:`.pdbrc` file)::"
msgstr ""

#: ../Doc/library/pdb.rst:374
msgid "Deletes the specified alias."
msgstr ""

#: ../Doc/library/pdb.rst:377
msgid ""
"Execute the (one-line) *statement* in the context of the current stack "
"frame. The exclamation point can be omitted unless the first word of the "
"statement resembles a debugger command. To set a global variable, you can "
"prefix the assignment command with a ``global`` command on the same line, e."
"g.::"
msgstr ""

#: ../Doc/library/pdb.rst:386
msgid ""
"Restart the debugged Python program. If an argument is supplied, it is split "
"with \"shlex\" and the result is used as the new sys.argv. History, "
"breakpoints, actions and debugger options are preserved. \"restart\" is an "
"alias for \"run\"."
msgstr ""

#: ../Doc/library/pdb.rst:393
msgid "Quit from the debugger. The program being executed is aborted."
msgstr ""

#: ../Doc/library/pdb.rst:398
msgid ""
"Whether a frame is considered to originate in a certain module is determined "
"by the ``__name__`` in the frame globals."
msgstr ""

#: ../Doc/library/persistence.rst:6
msgid "Data Persistence"
msgstr ""

# 798ebc1167664ca18e927b55ab806615
#: ../Doc/library/persistence.rst:8
msgid ""
"The modules described in this chapter support storing Python data in a "
"persistent form on disk.  The :mod:`pickle` and :mod:`marshal` modules can "
"turn many Python data types into a stream of bytes and then recreate the "
"objects from the bytes.  The various DBM-related modules support a family of "
"hash-based file formats that store a mapping of strings to other strings.  "
"The :mod:`bsddb` module also provides such disk-based string-to-string "
"mappings based on hashing, and also supports B-Tree and record-based formats."
msgstr ""

#: ../Doc/library/pickle.rst:2
msgid ":mod:`pickle` --- Python object serialization"
msgstr ""

# 76b547a0e35e417885482189fba10670
#: ../Doc/library/pickle.rst:17
msgid ""
"The :mod:`pickle` module implements a fundamental, but powerful algorithm "
"for serializing and de-serializing a Python object structure.  \"Pickling\" "
"is the process whereby a Python object hierarchy is converted into a byte "
"stream, and \"unpickling\" is the inverse operation, whereby a byte stream "
"is converted back into an object hierarchy.  Pickling (and unpickling) is "
"alternatively known as \"serialization\", \"marshalling,\" [#]_ or "
"\"flattening\", however, to avoid confusion, the terms used here are "
"\"pickling\" and \"unpickling\"."
msgstr ""

# f508efb808ea45169ebc34306813d4f2
#: ../Doc/library/pickle.rst:25
msgid ""
"This documentation describes both the :mod:`pickle` module and the :mod:"
"`cPickle` module."
msgstr ""

#: ../Doc/library/pickle.rst:30
msgid ""
"The :mod:`pickle` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unpickle data received from an "
"untrusted or unauthenticated source."
msgstr ""

#: ../Doc/library/pickle.rst:36
msgid "Relationship to other Python modules"
msgstr ""

# bed0e6e02ecc46d897ca09268b2bb3e1
#: ../Doc/library/pickle.rst:38
msgid ""
"The :mod:`pickle` module has an optimized cousin called the :mod:`cPickle` "
"module.  As its name implies, :mod:`cPickle` is written in C, so it can be "
"up to 1000 times faster than :mod:`pickle`.  However it does not support "
"subclassing of the :func:`Pickler` and :func:`Unpickler` classes, because "
"in :mod:`cPickle` these are functions, not classes.  Most applications have "
"no need for this functionality, and can benefit from the improved "
"performance of :mod:`cPickle`. Other than that, the interfaces of the two "
"modules are nearly identical; the common interface is described in this "
"manual and differences are pointed out where necessary.  In the following "
"discussions, we use the term \"pickle\" to collectively describe the :mod:"
"`pickle` and :mod:`cPickle` modules."
msgstr ""

# 1f37147429b2441da7a7a0fff80cb281
#: ../Doc/library/pickle.rst:49
msgid ""
"The data streams the two modules produce are guaranteed to be "
"interchangeable."
msgstr ""

#: ../Doc/library/pickle.rst:51
msgid ""
"Python has a more primitive serialization module called :mod:`marshal`, but "
"in general :mod:`pickle` should always be the preferred way to serialize "
"Python objects.  :mod:`marshal` exists primarily to support Python's :file:`."
"pyc` files."
msgstr ""

# df0feabcb768473c95f51fb78bb55659
#: ../Doc/library/pickle.rst:56
msgid ""
"The :mod:`pickle` module differs from :mod:`marshal` in several significant "
"ways:"
msgstr ""

#: ../Doc/library/pickle.rst:58
msgid ""
"The :mod:`pickle` module keeps track of the objects it has already "
"serialized, so that later references to the same object won't be serialized "
"again. :mod:`marshal` doesn't do this."
msgstr ""

#: ../Doc/library/pickle.rst:62
msgid ""
"This has implications both for recursive objects and object sharing.  "
"Recursive objects are objects that contain references to themselves.  These "
"are not handled by marshal, and in fact, attempting to marshal recursive "
"objects will crash your Python interpreter.  Object sharing happens when "
"there are multiple references to the same object in different places in the "
"object hierarchy being serialized.  :mod:`pickle` stores such objects only "
"once, and ensures that all other references point to the master copy.  "
"Shared objects remain shared, which can be very important for mutable "
"objects."
msgstr ""

#: ../Doc/library/pickle.rst:71
msgid ""
":mod:`marshal` cannot be used to serialize user-defined classes and their "
"instances.  :mod:`pickle` can save and restore class instances "
"transparently, however the class definition must be importable and live in "
"the same module as when the object was stored."
msgstr ""

#: ../Doc/library/pickle.rst:76
msgid ""
"The :mod:`marshal` serialization format is not guaranteed to be portable "
"across Python versions.  Because its primary job in life is to support :file:"
"`.pyc` files, the Python implementers reserve the right to change the "
"serialization format in non-backwards compatible ways should the need arise. "
"The :mod:`pickle` serialization format is guaranteed to be backwards "
"compatible across Python releases."
msgstr ""

#: ../Doc/library/pickle.rst:83
msgid ""
"Note that serialization is a more primitive notion than persistence; "
"although :mod:`pickle` reads and writes file objects, it does not handle the "
"issue of naming persistent objects, nor the (even more complicated) issue of "
"concurrent access to persistent objects.  The :mod:`pickle` module can "
"transform a complex object into a byte stream and it can transform the byte "
"stream into an object with the same internal structure.  Perhaps the most "
"obvious thing to do with these byte streams is to write them onto a file, "
"but it is also conceivable to send them across a network or store them in a "
"database.  The module :mod:`shelve` provides a simple interface to pickle "
"and unpickle objects on DBM-style database files."
msgstr ""

#: ../Doc/library/pickle.rst:96
msgid "Data stream format"
msgstr ""

#: ../Doc/library/pickle.rst:102
msgid ""
"The data format used by :mod:`pickle` is Python-specific.  This has the "
"advantage that there are no restrictions imposed by external standards such "
"as XDR (which can't represent pointer sharing); however it means that non-"
"Python programs may not be able to reconstruct pickled Python objects."
msgstr ""

# 9daaa115ac0b490d985bcb229a01749f
#: ../Doc/library/pickle.rst:107
msgid ""
"By default, the :mod:`pickle` data format uses a printable ASCII "
"representation. This is slightly more voluminous than a binary "
"representation.  The big advantage of using printable ASCII (and of some "
"other characteristics of :mod:`pickle`'s representation) is that for "
"debugging or recovery purposes it is possible for a human to read the "
"pickled file with a standard text editor."
msgstr ""

# 14c53202f36140c889f5fc4b2a4e90f0
#: ../Doc/library/pickle.rst:113
msgid ""
"There are currently 3 different protocols which can be used for pickling."
msgstr ""

# 71920358be3d400782bd7b37f2772240
#: ../Doc/library/pickle.rst:115
msgid ""
"Protocol version 0 is the original ASCII protocol and is backwards "
"compatible with earlier versions of Python."
msgstr ""

#: ../Doc/library/pickle.rst:118
msgid ""
"Protocol version 1 is the old binary format which is also compatible with "
"earlier versions of Python."
msgstr ""

#: ../Doc/library/pickle.rst:121
msgid ""
"Protocol version 2 was introduced in Python 2.3.  It provides much more "
"efficient pickling of :term:`new-style class`\\es."
msgstr ""

# be45d2b1f02d493aac7513724876951c
#: ../Doc/library/pickle.rst:124
msgid "Refer to :pep:`307` for more information."
msgstr ""

# ab91be3700a8456fbc222dc8d853b3a6
#: ../Doc/library/pickle.rst:126
msgid ""
"If a *protocol* is not specified, protocol 0 is used. If *protocol* is "
"specified as a negative value or :const:`HIGHEST_PROTOCOL`, the highest "
"protocol version available will be used."
msgstr ""

# cd6861cb12844364bcc9611a7710af78
#: ../Doc/library/pickle.rst:133
msgid ""
"A binary format, which is slightly more efficient, can be chosen by "
"specifying a *protocol* version >= 1."
msgstr ""

# 13d884242d974fa7bb9d1f9cb429f519
#: ../Doc/library/pickle.rst:138
msgid "Usage"
msgstr ""

#: ../Doc/library/pickle.rst:140
msgid ""
"To serialize an object hierarchy, you first create a pickler, then you call "
"the pickler's :meth:`dump` method.  To de-serialize a data stream, you first "
"create an unpickler, then you call the unpickler's :meth:`load` method.  "
"The :mod:`pickle` module provides the following constant:"
msgstr ""

#: ../Doc/library/pickle.rst:148
msgid ""
"The highest protocol version available.  This value can be passed as a "
"*protocol* value."
msgstr ""

# 01fbb136f609426a98985ae29afd976f
#: ../Doc/library/pickle.rst:155
msgid ""
"Be sure to always open pickle files created with protocols >= 1 in binary "
"mode. For the old ASCII-based pickle protocol 0 you can use either text mode "
"or binary mode as long as you stay consistent."
msgstr ""

# e02cad0c05e14b04b3713ee24a5cbe4a
#: ../Doc/library/pickle.rst:159
msgid ""
"A pickle file written with protocol 0 in binary mode will contain lone "
"linefeeds as line terminators and therefore will look \"funny\" when viewed "
"in Notepad or other editors which do not support this format."
msgstr ""

#: ../Doc/library/pickle.rst:163
msgid ""
"The :mod:`pickle` module provides the following functions to make the "
"pickling process more convenient:"
msgstr ""

#: ../Doc/library/pickle.rst:169
msgid ""
"Write a pickled representation of *obj* to the open file object *file*.  "
"This is equivalent to ``Pickler(file, protocol).dump(obj)``."
msgstr ""

# 9246ffc695a7463e8144b04ce82c0d60
# 72a8cfd26c714bbca6b9120d5019d5c9
# 8abf21ad7428402da45f53d43f85f5ca
#: ../Doc/library/pickle.rst:172 ../Doc/library/pickle.rst:205
#: ../Doc/library/pickle.rst:248
msgid ""
"If the *protocol* parameter is omitted, protocol 0 is used. If *protocol* is "
"specified as a negative value or :const:`HIGHEST_PROTOCOL`, the highest "
"protocol version will be used."
msgstr ""

# 383189d10c3d4268b78362ff82cf4ac5
#: ../Doc/library/pickle.rst:179
msgid ""
"*file* must have a :meth:`write` method that accepts a single string "
"argument. It can thus be a file object opened for writing, a :mod:`StringIO` "
"object, or any other custom object that meets this interface."
msgstr ""

# 0f7f63d34421413e8b22d5fea9be7222
#: ../Doc/library/pickle.rst:186
msgid ""
"Read a string from the open file object *file* and interpret it as a pickle "
"data stream, reconstructing and returning the original object hierarchy.  "
"This is equivalent to ``Unpickler(file).load()``."
msgstr ""

# 1862a7f63dea42969a6777f7bf1ef090
# a9167a0c002241d498f6347a2955881a
#: ../Doc/library/pickle.rst:190 ../Doc/library/pickle.rst:304
msgid ""
"*file* must have two methods, a :meth:`read` method that takes an integer "
"argument, and a :meth:`readline` method that requires no arguments.  Both "
"methods should return a string.  Thus *file* can be a file object opened for "
"reading, a :mod:`StringIO` object, or any other custom object that meets "
"this interface."
msgstr ""

# 8dfb55ad81af40199da783ad3d430248
#: ../Doc/library/pickle.rst:196
msgid ""
"This function automatically determines whether the data stream was written "
"in binary mode or not."
msgstr ""

# 22b5d13296994c7da77ff9fbd402e889
#: ../Doc/library/pickle.rst:202
msgid ""
"Return the pickled representation of the object as a string, instead of "
"writing it to a file."
msgstr ""

# a2fff943f9ba4fd0a48bcf1093b2814c
#: ../Doc/library/pickle.rst:215
msgid ""
"Read a pickled object hierarchy from a string.  Characters in the string "
"past the pickled object's representation are ignored."
msgstr ""

# 86718f527c5946f6bb29cb0d04aeda29
#: ../Doc/library/pickle.rst:218
msgid "The :mod:`pickle` module also defines three exceptions:"
msgstr ""

# 45cd98625e89489f9103bf8115c38676
#: ../Doc/library/pickle.rst:223
msgid ""
"A common base class for the other exceptions defined below.  This inherits "
"from :exc:`Exception`."
msgstr ""

# a91581ae4f0941c5ba9b132fdc686a6e
#: ../Doc/library/pickle.rst:229
msgid ""
"This exception is raised when an unpicklable object is passed to the :meth:"
"`dump` method."
msgstr ""

# 7108d04593994638a31e4f253d7ec426
#: ../Doc/library/pickle.rst:235
msgid ""
"This exception is raised when there is a problem unpickling an object. Note "
"that other exceptions may also be raised during unpickling, including (but "
"not necessarily limited to) :exc:`AttributeError`, :exc:`EOFError`, :exc:"
"`ImportError`, and :exc:`IndexError`."
msgstr ""

# e75848ddf02f46b99989755f0fafc3d8
#: ../Doc/library/pickle.rst:240
msgid ""
"The :mod:`pickle` module also exports two callables [#]_, :class:`Pickler` "
"and :class:`Unpickler`:"
msgstr ""

# 1431cb9ee1e5479cb57421d32b735291
#: ../Doc/library/pickle.rst:246
msgid ""
"This takes a file-like object to which it will write a pickle data stream."
msgstr ""

# 0a775ef2ece240428dda5860cc59d242
#: ../Doc/library/pickle.rst:255
msgid ""
"*file* must have a :meth:`write` method that accepts a single string "
"argument. It can thus be an open file object, a :mod:`StringIO` object, or "
"any other custom object that meets this interface."
msgstr ""

# 77cb336f23eb4a429ca5b4c33613720a
#: ../Doc/library/pickle.rst:259
msgid ":class:`Pickler` objects define one (or two) public methods:"
msgstr ""

# 1151ffecd47448248e6d800179469e45
#: ../Doc/library/pickle.rst:264
msgid ""
"Write a pickled representation of *obj* to the open file object given in the "
"constructor.  Either the binary or ASCII format will be used, depending on "
"the value of the *protocol* argument passed to the constructor."
msgstr ""

# 23202fe26db34b8ea787dfb1306bd481
#: ../Doc/library/pickle.rst:271
msgid ""
"Clears the pickler's \"memo\".  The memo is the data structure that "
"remembers which objects the pickler has already seen, so that shared or "
"recursive objects pickled by reference and not by value.  This method is "
"useful when re-using picklers."
msgstr ""

# 442075609dac4be69c277c9164cbc113
#: ../Doc/library/pickle.rst:278
msgid ""
"Prior to Python 2.3, :meth:`clear_memo` was only available on the picklers "
"created by :mod:`cPickle`.  In the :mod:`pickle` module, picklers have an "
"instance variable called :attr:`memo` which is a Python dictionary.  So to "
"clear the memo for a :mod:`pickle` module pickler, you could do the "
"following::"
msgstr ""

# ef4e2794c2ca43f4b0c9419f1d82de0f
#: ../Doc/library/pickle.rst:285
msgid ""
"Code that does not need to support older versions of Python should simply "
"use :meth:`clear_memo`."
msgstr ""

# 64efa996113949a381130cbecfc6b25f
#: ../Doc/library/pickle.rst:288
msgid ""
"It is possible to make multiple calls to the :meth:`dump` method of the "
"same :class:`Pickler` instance.  These must then be matched to the same "
"number of calls to the :meth:`load` method of the corresponding :class:"
"`Unpickler` instance.  If the same object is pickled by multiple :meth:"
"`dump` calls, the :meth:`load` will all yield references to the same object. "
"[#]_"
msgstr ""

# 749ed0e09db34a38892945033fda803b
#: ../Doc/library/pickle.rst:294
msgid ":class:`Unpickler` objects are defined as:"
msgstr ""

# b68d23e017864aa796f18ea88c8d289f
#: ../Doc/library/pickle.rst:299
msgid ""
"This takes a file-like object from which it will read a pickle data stream. "
"This class automatically determines whether the data stream was written in "
"binary mode or not, so it does not need a flag as in the :class:`Pickler` "
"factory."
msgstr ""

# ac12f658f33e48cd96fde2f2b763aa8e
#: ../Doc/library/pickle.rst:310
msgid ":class:`Unpickler` objects have one (or two) public methods:"
msgstr ""

# a56fc0e5669a4c3886b45a4ad8ea773e
#: ../Doc/library/pickle.rst:315
msgid ""
"Read a pickled object representation from the open file object given in the "
"constructor, and return the reconstituted object hierarchy specified therein."
msgstr ""

# 3b1b2fa6cba64bf989d7b66fe88b6a42
#: ../Doc/library/pickle.rst:319
msgid ""
"This method automatically determines whether the data stream was written in "
"binary mode or not."
msgstr ""

# 86ddb9a69d104717bf84d8770183514c
#: ../Doc/library/pickle.rst:325
msgid ""
"This is just like :meth:`load` except that it doesn't actually create any "
"objects.  This is useful primarily for finding what's called \"persistent ids"
"\" that may be referenced in a pickle data stream.  See section :ref:`pickle-"
"protocol` below for more details."
msgstr ""

# f4e8141c490b4c86940957decec2bf5a
#: ../Doc/library/pickle.rst:330
msgid ""
"**Note:** the :meth:`noload` method is currently only available on :class:"
"`Unpickler` objects created with the :mod:`cPickle` module. :mod:`pickle` "
"module :class:`Unpickler`\\ s do not have the :meth:`noload` method."
msgstr ""

#: ../Doc/library/pickle.rst:337
msgid "What can be pickled and unpickled?"
msgstr ""

#: ../Doc/library/pickle.rst:339
msgid "The following types can be pickled:"
msgstr ""

#: ../Doc/library/pickle.rst:341
msgid "``None``, ``True``, and ``False``"
msgstr ""

# 9fc02fca8d9644b698d45ca2382c1540
#: ../Doc/library/pickle.rst:343
msgid "integers, long integers, floating point numbers, complex numbers"
msgstr ""

# 47f0aab6370747cc83499e9012303dc6
#: ../Doc/library/pickle.rst:345
msgid "normal and Unicode strings"
msgstr ""

#: ../Doc/library/pickle.rst:347
msgid "tuples, lists, sets, and dictionaries containing only picklable objects"
msgstr ""

#: ../Doc/library/pickle.rst:349
msgid "functions defined at the top level of a module"
msgstr ""

#: ../Doc/library/pickle.rst:351
msgid "built-in functions defined at the top level of a module"
msgstr ""

#: ../Doc/library/pickle.rst:353
msgid "classes that are defined at the top level of a module"
msgstr ""

# 0e87691e514d4481ac9a6a83a42d85ee
#: ../Doc/library/pickle.rst:355
msgid ""
"instances of such classes whose :attr:`__dict__` or :meth:`__setstate__` is "
"picklable  (see section :ref:`pickle-protocol` for details)"
msgstr ""

# 60521dd74ac446599412d1fdfbe0ad03
#: ../Doc/library/pickle.rst:358
msgid ""
"Attempts to pickle unpicklable objects will raise the :exc:`PicklingError` "
"exception; when this happens, an unspecified number of bytes may have "
"already been written to the underlying file. Trying to pickle a highly "
"recursive data structure may exceed the maximum recursion depth, a :exc:"
"`RuntimeError` will be raised in this case. You can carefully raise this "
"limit with :func:`sys.setrecursionlimit`."
msgstr ""

# 970c5023988345c196dc0c61f2398d7a
#: ../Doc/library/pickle.rst:365
msgid ""
"Note that functions (built-in and user-defined) are pickled by \"fully "
"qualified\" name reference, not by value.  This means that only the function "
"name is pickled, along with the name of the module the function is defined "
"in.  Neither the function's code, nor any of its function attributes are "
"pickled.  Thus the defining module must be importable in the unpickling "
"environment, and the module must contain the named object, otherwise an "
"exception will be raised. [#]_"
msgstr ""

#: ../Doc/library/pickle.rst:372
msgid ""
"Similarly, classes are pickled by named reference, so the same restrictions "
"in the unpickling environment apply.  Note that none of the class's code or "
"data is pickled, so in the following example the class attribute ``attr`` is "
"not restored in the unpickling environment::"
msgstr ""

#: ../Doc/library/pickle.rst:382
msgid ""
"These restrictions are why picklable functions and classes must be defined "
"in the top level of a module."
msgstr ""

#: ../Doc/library/pickle.rst:385
msgid ""
"Similarly, when class instances are pickled, their class's code and data are "
"not pickled along with them.  Only the instance data are pickled.  This is "
"done on purpose, so you can fix bugs in a class or add methods to the class "
"and still load objects that were created with an earlier version of the "
"class.  If you plan to have long-lived objects that will see many versions "
"of a class, it may be worthwhile to put a version number in the objects so "
"that suitable conversions can be made by the class's :meth:`__setstate__` "
"method."
msgstr ""

# 711b01b72d0c484b98b2b6bfd105d861
#: ../Doc/library/pickle.rst:397
msgid "The pickle protocol"
msgstr ""

# 5d8590678db8492ba21e2f451a961a73
#: ../Doc/library/pickle.rst:401
msgid ""
"This section describes the \"pickling protocol\" that defines the interface "
"between the pickler/unpickler and the objects that are being serialized.  "
"This protocol provides a standard way for you to define, customize, and "
"control how your objects are serialized and de-serialized.  The description "
"in this section doesn't cover specific customizations that you can employ to "
"make the unpickling environment slightly safer from untrusted pickle data "
"streams; see section :ref:`pickle-sub` for more details."
msgstr ""

# 7bf04988cab44b0994aacb6c676ba34f
#: ../Doc/library/pickle.rst:413
msgid "Pickling and unpickling normal class instances"
msgstr ""

# 02b6c8e166be49c0abfe9287328f303f
#: ../Doc/library/pickle.rst:417
msgid ""
"When a pickled class instance is unpickled, its :meth:`__init__` method is "
"normally *not* invoked.  If it is desirable that the :meth:`__init__` method "
"be called on unpickling, an old-style class can define a method :meth:"
"`__getinitargs__`, which should return a *tuple* containing the arguments to "
"be passed to the class constructor (:meth:`__init__` for example).  The :"
"meth:`__getinitargs__` method is called at pickle time; the tuple it returns "
"is incorporated in the pickle for the instance."
msgstr ""

# 06896f64ca4243579288027de01c9f8e
#: ../Doc/library/pickle.rst:427
msgid ""
"New-style types can provide a :meth:`__getnewargs__` method that is used for "
"protocol 2.  Implementing this method is needed if the type establishes some "
"internal invariants when the instance is created, or if the memory "
"allocation is affected by the values passed to the :meth:`__new__` method "
"for the type (as it is for tuples and strings).  Instances of a :term:`new-"
"style class` ``C`` are created using ::"
msgstr ""

# 99a12fdf94e24b4d88d264ed93e00d8d
#: ../Doc/library/pickle.rst:436
msgid ""
"where *args* is the result of calling :meth:`__getnewargs__` on the original "
"object; if there is no :meth:`__getnewargs__`, an empty tuple is assumed."
msgstr ""

# e19e1f011b5b4b8199fdd0c7b2d4828b
#: ../Doc/library/pickle.rst:441
msgid ""
"Classes can further influence how their instances are pickled; if the class "
"defines the method :meth:`__getstate__`, it is called and the return state "
"is pickled as the contents for the instance, instead of the contents of the "
"instance's dictionary.  If there is no :meth:`__getstate__` method, the "
"instance's :attr:`__dict__` is pickled."
msgstr ""

# 4d004b943e964bb084a0e7f51cbaea53
#: ../Doc/library/pickle.rst:449
msgid ""
"Upon unpickling, if the class also defines the method :meth:`__setstate__`, "
"it is called with the unpickled state. [#]_ If there is no :meth:"
"`__setstate__` method, the pickled state must be a dictionary and its items "
"are assigned to the new instance's dictionary.  If a class defines both :"
"meth:`__getstate__` and :meth:`__setstate__`, the state object needn't be a "
"dictionary and these methods can do what they want. [#]_"
msgstr ""

# 8cc52627350a4ce08ca7dfb0d44783e6
#: ../Doc/library/pickle.rst:458
msgid ""
"For :term:`new-style class`\\es, if :meth:`__getstate__` returns a false "
"value, the :meth:`__setstate__` method will not be called."
msgstr ""

#: ../Doc/library/pickle.rst:463
msgid ""
"At unpickling time, some methods like :meth:`__getattr__`, :meth:"
"`__getattribute__`, or :meth:`__setattr__` may be called upon the instance.  "
"In case those methods rely on some internal invariant being true, the type "
"should implement either :meth:`__getinitargs__` or :meth:`__getnewargs__` to "
"establish such an invariant; otherwise, neither :meth:`__new__` nor :meth:"
"`__init__` will be called."
msgstr ""

# cfadda623f4346e19b2ed0baeaeebaad
#: ../Doc/library/pickle.rst:472
msgid "Pickling and unpickling extension types"
msgstr ""

# eefe5e978b804b5dbddf9650b400a25f
#: ../Doc/library/pickle.rst:476
msgid ""
"When the :class:`Pickler` encounters an object of a type it knows nothing "
"about --- such as an extension type --- it looks in two places for a hint of "
"how to pickle it.  One alternative is for the object to implement a :meth:"
"`__reduce__` method.  If provided, at pickling time :meth:`__reduce__` will "
"be called with no arguments, and it must return either a string or a tuple."
msgstr ""

# 15f03da3acd646aab3cf8285e044cd8d
#: ../Doc/library/pickle.rst:483
msgid ""
"If a string is returned, it names a global variable whose contents are "
"pickled as normal.  The string returned by :meth:`__reduce__` should be the "
"object's local name relative to its module; the pickle module searches the "
"module namespace to determine the object's module."
msgstr ""

# cc6b554e20dd425bb82b9660e15c41fa
#: ../Doc/library/pickle.rst:488
msgid ""
"When a tuple is returned, it must be between two and five elements long. "
"Optional elements can either be omitted, or ``None`` can be provided as "
"their value.  The contents of this tuple are pickled as normal and used to "
"reconstruct the object at unpickling time.  The semantics of each element "
"are:"
msgstr ""

# 2db4d242671648129c8081cd750b1017
#: ../Doc/library/pickle.rst:494
msgid ""
"A callable object that will be called to create the initial version of the "
"object.  The next element of the tuple will provide arguments for this "
"callable, and later elements provide additional state information that will "
"subsequently be used to fully reconstruct the pickled data."
msgstr ""

# b4c09ddd59da4af4b74e7ab513acc9c4
#: ../Doc/library/pickle.rst:499
msgid ""
"In the unpickling environment this object must be either a class, a callable "
"registered as a \"safe constructor\" (see below), or it must have an "
"attribute :attr:`__safe_for_unpickling__` with a true value. Otherwise, an :"
"exc:`UnpicklingError` will be raised in the unpickling environment.  Note "
"that as usual, the callable itself is pickled by name."
msgstr ""

# b279bc140fe04fa39fc304a519de5337
#: ../Doc/library/pickle.rst:505
msgid "A tuple of arguments for the callable object."
msgstr ""

# 85e6f499a15343e29a206f56186624be
#: ../Doc/library/pickle.rst:510
msgid ""
"Optionally, the object's state, which will be passed to the object's :meth:"
"`__setstate__` method as described in section :ref:`pickle-inst`.  If the "
"object has no :meth:`__setstate__` method, then, as above, the value must be "
"a dictionary and it will be added to the object's :attr:`__dict__`."
msgstr ""

# 1f35eabf41b94f7d98d1e6bf3461acf5
#: ../Doc/library/pickle.rst:515
msgid ""
"Optionally, an iterator (and not a sequence) yielding successive list "
"items.  These list items will be pickled, and appended to the object using "
"either ``obj.append(item)`` or ``obj.extend(list_of_items)``.  This is "
"primarily used for list subclasses, but may be used by other classes as long "
"as they have :meth:`append` and :meth:`extend` methods with the appropriate "
"signature.  (Whether :meth:`append` or :meth:`extend` is used depends on "
"which pickle protocol version is used as well as the number of items to "
"append, so both must be supported.)"
msgstr ""

# 8f686f4e97c043148640380c5ebceb6d
#: ../Doc/library/pickle.rst:524
msgid ""
"Optionally, an iterator (not a sequence) yielding successive dictionary "
"items, which should be tuples of the form ``(key, value)``.  These items "
"will be pickled and stored to the object using ``obj[key] = value``. This is "
"primarily used for dictionary subclasses, but may be used by other classes "
"as long as they implement :meth:`__setitem__`."
msgstr ""

# bd7e41cc06e24ee58bb29eaf9df967bd
#: ../Doc/library/pickle.rst:532
msgid ""
"It is sometimes useful to know the protocol version when implementing :meth:"
"`__reduce__`.  This can be done by implementing a method named :meth:"
"`__reduce_ex__` instead of :meth:`__reduce__`. :meth:`__reduce_ex__`, when "
"it exists, is called in preference over :meth:`__reduce__` (you may still "
"provide :meth:`__reduce__` for backwards compatibility).  The :meth:"
"`__reduce_ex__` method will be called with a single integer argument, the "
"protocol version."
msgstr ""

# c851d3d6abf049ef9f73a08f1c628306
#: ../Doc/library/pickle.rst:540
msgid ""
"The :class:`object` class implements both :meth:`__reduce__` and :meth:"
"`__reduce_ex__`; however, if a subclass overrides :meth:`__reduce__` but "
"not :meth:`__reduce_ex__`, the :meth:`__reduce_ex__` implementation detects "
"this and calls :meth:`__reduce__`."
msgstr ""

# b4eacab444554395b03d3d42ce4aa531
#: ../Doc/library/pickle.rst:545
msgid ""
"An alternative to implementing a :meth:`__reduce__` method on the object to "
"be pickled, is to register the callable with the :mod:`copy_reg` module.  "
"This module provides a way for programs to register \"reduction functions\" "
"and constructors for user-defined types.   Reduction functions have the same "
"semantics and interface as the :meth:`__reduce__` method described above, "
"except that they are called with a single argument, the object to be pickled."
msgstr ""

# 8e2c5cae28634aa2ac2e5f502eb29792
#: ../Doc/library/pickle.rst:552
msgid ""
"The registered constructor is deemed a \"safe constructor\" for purposes of "
"unpickling as described above."
msgstr ""

# 0c468605c5be4603b2a799ce45fa1c36
#: ../Doc/library/pickle.rst:557
msgid "Pickling and unpickling external objects"
msgstr ""

# aaf4e52048004d4e9ca67a5c9e26eb00
#: ../Doc/library/pickle.rst:563
msgid ""
"For the benefit of object persistence, the :mod:`pickle` module supports the "
"notion of a reference to an object outside the pickled data stream.  Such "
"objects are referenced by a \"persistent id\", which is just an arbitrary "
"string of printable ASCII characters. The resolution of such names is not "
"defined by the :mod:`pickle` module; it will delegate this resolution to "
"user defined functions on the pickler and unpickler. [#]_"
msgstr ""

# e18ac32bce8b4fa687322f3053f5addd
#: ../Doc/library/pickle.rst:570
msgid ""
"To define external persistent id resolution, you need to set the :attr:"
"`persistent_id` attribute of the pickler object and the :attr:"
"`persistent_load` attribute of the unpickler object."
msgstr ""

# 925f12ffa7da4647b8cab3f54861a329
#: ../Doc/library/pickle.rst:574
msgid ""
"To pickle objects that have an external persistent id, the pickler must have "
"a custom :func:`persistent_id` method that takes an object as an argument "
"and returns either ``None`` or the persistent id for that object.  When "
"``None`` is returned, the pickler simply pickles the object as normal.  When "
"a persistent id string is returned, the pickler will pickle that string, "
"along with a marker so that the unpickler will recognize the string as a "
"persistent id."
msgstr ""

# b29429bc982b4cd89b2ff51e74093caf
#: ../Doc/library/pickle.rst:581
msgid ""
"To unpickle external objects, the unpickler must have a custom :func:"
"`persistent_load` function that takes a persistent id string and returns the "
"referenced object."
msgstr ""

# f45beb0d906847b489a4cbf791750c0d
#: ../Doc/library/pickle.rst:585
msgid "Here's a silly example that *might* shed more light::"
msgstr ""

# 0e26f224d70a48c28bac952fb033ad58
#: ../Doc/library/pickle.rst:633
msgid ""
"In the :mod:`cPickle` module, the unpickler's :attr:`persistent_load` "
"attribute can also be set to a Python list, in which case, when the "
"unpickler reaches a persistent id, the persistent id string will simply be "
"appended to this list. This functionality exists so that a pickle data "
"stream can be \"sniffed\" for object references without actually "
"instantiating all the objects in a pickle. [#]_  Setting :attr:"
"`persistent_load` to a list is usually used in conjunction with the :meth:"
"`noload` method on the Unpickler."
msgstr ""

# 21a96a09a1c5448b8fa8a78871c5534c
#: ../Doc/library/pickle.rst:650
msgid "Subclassing Unpicklers"
msgstr ""

# 29371a14c9a641d9b112a33115c71e08
#: ../Doc/library/pickle.rst:656
msgid ""
"By default, unpickling will import any class that it finds in the pickle "
"data. You can control exactly what gets unpickled and what gets called by "
"customizing your unpickler.  Unfortunately, exactly how you do this is "
"different depending on whether you're using :mod:`pickle` or :mod:`cPickle`. "
"[#]_"
msgstr ""

# e4c0b34532204f30a0bfeaad890dd1d7
#: ../Doc/library/pickle.rst:661
msgid ""
"In the :mod:`pickle` module, you need to derive a subclass from :class:"
"`Unpickler`, overriding the :meth:`load_global` method. :meth:`load_global` "
"should read two lines from the pickle data stream where the first line will "
"the name of the module containing the class and the second line will be the "
"name of the instance's class.  It then looks up the class, possibly "
"importing the module and digging out the attribute, then it appends what it "
"finds to the unpickler's stack.  Later on, this class will be assigned to "
"the :attr:`__class__` attribute of an empty class, as a way of magically "
"creating an instance without calling its class's :meth:`__init__`. Your job "
"(should you choose to accept it), would be to have :meth:`load_global` push "
"onto the unpickler's stack, a known safe version of any class you deem safe "
"to unpickle. It is up to you to produce such a class.  Or you could raise an "
"error if you want to disallow all unpickling of instances.  If this sounds "
"like a hack, you're right.  Refer to the source code to make this work."
msgstr ""

# 8416429c7e9d459f8e8a7f31d754067e
#: ../Doc/library/pickle.rst:676
msgid ""
"Things are a little cleaner with :mod:`cPickle`, but not by much. To control "
"what gets unpickled, you can set the unpickler's :attr:`find_global` "
"attribute to a function or ``None``.  If it is ``None`` then any attempts to "
"unpickle instances will raise an :exc:`UnpicklingError`.  If it is a "
"function, then it should accept a module name and a class name, and return "
"the corresponding class object.  It is responsible for looking up the class "
"and performing any necessary imports, and it may raise an error to prevent "
"instances of the class from being unpickled."
msgstr ""

# f9725abb2ad146b28931a818ea42c66f
#: ../Doc/library/pickle.rst:685
msgid ""
"The moral of the story is that you should be really careful about the source "
"of the strings your application unpickles."
msgstr ""

# b8a7c139b31245a9b071fbeb1d6e9413
#: ../Doc/library/pickle.rst:694
msgid ""
"For the simplest code, use the :func:`dump` and :func:`load` functions.  "
"Note that a self-referencing list is pickled and restored correctly. ::"
msgstr ""

# ada9dc739b6747109b20958fd2c66052
#: ../Doc/library/pickle.rst:716
msgid ""
"The following example reads the resulting pickled data.  When reading a "
"pickle-containing file, you should open the file in binary mode because you "
"can't be sure if the ASCII or binary format was used. ::"
msgstr ""

# 17ba596649da4a52ab67c0b24c7020f7
#: ../Doc/library/pickle.rst:732
msgid ""
"Here's a larger example that shows how to modify pickling behavior for a "
"class. The :class:`TextReader` class opens a text file, and returns the line "
"number and line contents each time its :meth:`readline` method is called. If "
"a :class:`TextReader` instance is pickled, all attributes *except* the file "
"object member are saved. When the instance is unpickled, the file is "
"reopened, and reading resumes from the last location. The :meth:"
"`__setstate__` and :meth:`__getstate__` methods are used to implement this "
"behavior. ::"
msgstr ""

#: ../Doc/library/pickle.rst:772
msgid "A sample usage might be something like this::"
msgstr ""

# b3bedb9653fa42cd97ebf0417389c6fb
#: ../Doc/library/pickle.rst:785
msgid ""
"If you want to see that :mod:`pickle` works across Python processes, start "
"another Python session, before continuing.  What follows can happen from "
"either the same process or a new process. ::"
msgstr ""

#: ../Doc/library/pickle.rst:798
msgid "Pickle interface constructor registration for extension types."
msgstr ""

#: ../Doc/library/pickle.rst:801
msgid "Indexed databases of objects; uses :mod:`pickle`."
msgstr ""

#: ../Doc/library/pickle.rst:804
msgid "Shallow and deep object copying."
msgstr ""

#: ../Doc/library/pickle.rst:807
msgid "High-performance serialization of built-in types."
msgstr ""

# 06c3b8397515422fa055588b76ba97ac
#: ../Doc/library/pickle.rst:811
msgid ":mod:`cPickle` --- A faster :mod:`pickle`"
msgstr ""

# 2611ee4496c8463dbda032bc7d477717
#: ../Doc/library/pickle.rst:821
msgid ""
"The :mod:`cPickle` module supports serialization and de-serialization of "
"Python objects, providing an interface and functionality nearly identical to "
"the :mod:`pickle` module.  There are several differences, the most important "
"being performance and subclassability."
msgstr ""

# 9165d76770e147619016b41569199de1
#: ../Doc/library/pickle.rst:826
msgid ""
"First, :mod:`cPickle` can be up to 1000 times faster than :mod:`pickle` "
"because the former is implemented in C.  Second, in the :mod:`cPickle` "
"module the callables :func:`Pickler` and :func:`Unpickler` are functions, "
"not classes. This means that you cannot use them to derive custom pickling "
"and unpickling subclasses.  Most applications have no need for this "
"functionality and should benefit from the greatly improved performance of "
"the :mod:`cPickle` module."
msgstr ""

# faff8a77b1514b3bbf145074435ffdb8
#: ../Doc/library/pickle.rst:833
msgid ""
"The pickle data stream produced by :mod:`pickle` and :mod:`cPickle` are "
"identical, so it is possible to use :mod:`pickle` and :mod:`cPickle` "
"interchangeably with existing pickles. [#]_"
msgstr ""

# 64994dbf9faa40489c0bfddec1f8da2c
#: ../Doc/library/pickle.rst:837
msgid ""
"There are additional minor differences in API between :mod:`cPickle` and :"
"mod:`pickle`, however for most applications, they are interchangeable.  More "
"documentation is provided in the :mod:`pickle` module documentation, which "
"includes a list of the documented differences."
msgstr ""

#: ../Doc/library/pickle.rst:844
msgid "Don't confuse this with the :mod:`marshal` module"
msgstr ""

# 77fcd68aff0d4b95b7e197ebd76db027
#: ../Doc/library/pickle.rst:846
msgid ""
"In the :mod:`pickle` module these callables are classes, which you could "
"subclass to customize the behavior.  However, in the :mod:`cPickle` module "
"these callables are factory functions and so cannot be subclassed.  One "
"common reason to subclass is to control what objects can actually be "
"unpickled.  See section :ref:`pickle-sub` for more details."
msgstr ""

# 5134421da0bf48a49d8ae4a4a625637a
#: ../Doc/library/pickle.rst:852
msgid ""
"*Warning*: this is intended for pickling multiple objects without "
"intervening modifications to the objects or their parts.  If you modify an "
"object and then pickle it again using the same :class:`Pickler` instance, "
"the object is not pickled again --- a reference to it is pickled and the :"
"class:`Unpickler` will return the old value, not the modified one. There are "
"two problems here: (1) detecting changes, and (2) marshalling a minimal set "
"of changes.  Garbage Collection may also become a problem here."
msgstr ""

#: ../Doc/library/pickle.rst:860
msgid ""
"The exception raised will likely be an :exc:`ImportError` or an :exc:"
"`AttributeError` but it could be something else."
msgstr ""

# c5e7886e88464c6ab9c040fb54576081
#: ../Doc/library/pickle.rst:863
msgid "These methods can also be used to implement copying class instances."
msgstr ""

# 4209a446216642b5bf6417963140df01
#: ../Doc/library/pickle.rst:865
msgid ""
"This protocol is also used by the shallow and deep copying operations "
"defined in the :mod:`copy` module."
msgstr ""

# 2dcd9faf5e2647b5ac7f0af3e177daa0
#: ../Doc/library/pickle.rst:868
msgid ""
"The actual mechanism for associating these user defined functions is "
"slightly different for :mod:`pickle` and :mod:`cPickle`.  The description "
"given here works the same for both implementations.  Users of the :mod:"
"`pickle` module could also use subclassing to effect the same results, "
"overriding the :meth:`persistent_id` and :meth:`persistent_load` methods in "
"the derived classes."
msgstr ""

# f9869b2903664aeaabbc6e6b91332d78
#: ../Doc/library/pickle.rst:875
msgid ""
"We'll leave you with the image of Guido and Jim sitting around sniffing "
"pickles in their living rooms."
msgstr ""

# 366d0c73440949fe840e2fc159f9188d
#: ../Doc/library/pickle.rst:878
msgid ""
"A word of caution: the mechanisms described here use internal attributes and "
"methods, which are subject to change in future versions of Python.  We "
"intend to someday provide a common interface for controlling this behavior, "
"which will work in either :mod:`pickle` or :mod:`cPickle`."
msgstr ""

# 9875a94385854192b9c6c14f1a048b5b
#: ../Doc/library/pickle.rst:883
msgid ""
"Since the pickle data format is actually a tiny stack-oriented programming "
"language, and some freedom is taken in the encodings of certain objects, it "
"is possible that the two modules produce different data streams for the same "
"input objects.  However it is guaranteed that they will always be able to "
"read each other's data streams."
msgstr ""

#: ../Doc/library/pickletools.rst:2
msgid ":mod:`pickletools` --- Tools for pickle developers"
msgstr ""

# 8ae459280df94b9ead8e064fc87fd9ae
#: ../Doc/library/pickletools.rst:11
msgid "**Source code:** :source:`Lib/pickletools.py`"
msgstr ""

# 586d826f355841a88f7f0662edfc9121
#: ../Doc/library/pickletools.rst:15
msgid ""
"This module contains various constants relating to the intimate details of "
"the :mod:`pickle` module, some lengthy comments about the implementation, "
"and a few useful functions for analyzing pickled data.  The contents of this "
"module are useful for Python core developers who are working on the :mod:"
"`pickle` and :mod:`cPickle` implementations; ordinary users of the :mod:"
"`pickle` module probably won't find the :mod:`pickletools` module relevant."
msgstr ""

#: ../Doc/library/pickletools.rst:25
msgid ""
"Outputs a symbolic disassembly of the pickle to the file-like object *out*, "
"defaulting to ``sys.stdout``.  *pickle* can be a string or a file-like "
"object. *memo* can be a Python dictionary that will be used as the pickle's "
"memo; it can be used to perform disassemblies across multiple pickles "
"created by the same pickler. Successive levels, indicated by ``MARK`` "
"opcodes in the stream, are indented by *indentlevel* spaces."
msgstr ""

#: ../Doc/library/pickletools.rst:35
msgid ""
"Provides an :term:`iterator` over all of the opcodes in a pickle, returning "
"a sequence of ``(opcode, arg, pos)`` triples.  *opcode* is an instance of "
"an :class:`OpcodeInfo` class; *arg* is the decoded value, as a Python "
"object, of the opcode's argument; *pos* is the position at which this opcode "
"is located. *pickle* can be a string or a file-like object."
msgstr ""

#: ../Doc/library/pickletools.rst:43
msgid ""
"Returns a new equivalent pickle string after eliminating unused ``PUT`` "
"opcodes. The optimized pickle is shorter, takes less transmission time, "
"requires less storage space, and unpickles more efficiently."
msgstr ""

#: ../Doc/library/pipes.rst:2
msgid ":mod:`pipes` --- Interface to shell pipelines"
msgstr ""

# e0b920c55a1d4a82aefbefb6c8ee1134
#: ../Doc/library/pipes.rst:9
msgid "**Source code:** :source:`Lib/pipes.py`"
msgstr ""

#: ../Doc/library/pipes.rst:13
msgid ""
"The :mod:`pipes` module defines a class to abstract the concept of a "
"*pipeline* --- a sequence of converters from one file to  another."
msgstr ""

#: ../Doc/library/pipes.rst:16
msgid ""
"Because the module uses :program:`/bin/sh` command lines, a POSIX or "
"compatible shell for :func:`os.system` and :func:`os.popen` is required."
msgstr ""

#: ../Doc/library/pipes.rst:19
msgid "The :mod:`pipes` module defines the following class:"
msgstr ""

#: ../Doc/library/pipes.rst:24
msgid "An abstraction of a pipeline."
msgstr ""

#: ../Doc/library/pipes.rst:41
msgid "Template Objects"
msgstr ""

#: ../Doc/library/pipes.rst:43
msgid "Template objects following methods:"
msgstr ""

#: ../Doc/library/pipes.rst:48
msgid "Restore a pipeline template to its initial state."
msgstr ""

#: ../Doc/library/pipes.rst:53
msgid "Return a new, equivalent, pipeline template."
msgstr ""

#: ../Doc/library/pipes.rst:58
msgid ""
"If *flag* is true, turn debugging on. Otherwise, turn debugging off. When "
"debugging is on, commands to be executed are printed, and the shell is given "
"``set -x`` command to be more verbose."
msgstr ""

#: ../Doc/library/pipes.rst:65
msgid ""
"Append a new action at the end. The *cmd* variable must be a valid bourne "
"shell command. The *kind* variable consists of two letters."
msgstr ""

#: ../Doc/library/pipes.rst:68
msgid ""
"The first letter can be either of ``'-'`` (which means the command reads its "
"standard input), ``'f'`` (which means the commands reads a given file on the "
"command line) or ``'.'`` (which means the commands reads no input, and hence "
"must be first.)"
msgstr ""

#: ../Doc/library/pipes.rst:73
msgid ""
"Similarly, the second letter can be either of ``'-'`` (which means  the "
"command writes to standard output), ``'f'`` (which means the  command writes "
"a file on the command line) or ``'.'`` (which means the command does not "
"write anything, and hence must be last.)"
msgstr ""

#: ../Doc/library/pipes.rst:81
msgid ""
"Add a new action at the beginning. See :meth:`append` for explanations of "
"the arguments."
msgstr ""

#: ../Doc/library/pipes.rst:87
msgid ""
"Return a file-like object, open to *file*, but read from or written to by "
"the pipeline.  Note that only one of ``'r'``, ``'w'`` may be given."
msgstr ""

#: ../Doc/library/pipes.rst:93
msgid "Copy *infile* to *outfile* through the pipe."
msgstr ""

#: ../Doc/library/pkgutil.rst:2
msgid ":mod:`pkgutil` --- Package extension utility"
msgstr ""

# e9b8f21647464cfaa5f647027a5a3ac7
#: ../Doc/library/pkgutil.rst:9
msgid "**Source code:** :source:`Lib/pkgutil.py`"
msgstr ""

# 83325964295e42728892f5deba608bbb
#: ../Doc/library/pkgutil.rst:13
msgid ""
"This module provides utilities for the import system, in particular package "
"support."
msgstr ""

# 522d1b8ebb864757be2ec1987239643a
#: ../Doc/library/pkgutil.rst:19
msgid ""
"Extend the search path for the modules which comprise a package.  Intended "
"use is to place the following code in a package's :file:`__init__.py`::"
msgstr ""

#: ../Doc/library/pkgutil.rst:25
msgid ""
"This will add to the package's ``__path__`` all subdirectories of "
"directories on ``sys.path`` named after the package.  This is useful if one "
"wants to distribute different parts of a single logical package as multiple "
"directories."
msgstr ""

#: ../Doc/library/pkgutil.rst:30
msgid ""
"It also looks for :file:`\\*.pkg` files beginning where ``*`` matches the "
"*name* argument.  This feature is similar to :file:`\\*.pth` files (see the :"
"mod:`site` module for more information), except that it doesn't special-case "
"lines starting with ``import``.  A :file:`\\*.pkg` file is trusted at face "
"value: apart from checking for duplicates, all entries found in a :file:`\\*."
"pkg` file are added to the path, regardless of whether they exist on the "
"filesystem.  (This is a feature.)"
msgstr ""

#: ../Doc/library/pkgutil.rst:38
msgid ""
"If the input path is not a list (as is the case for frozen packages) it is "
"returned unchanged.  The input path is not modified; an extended copy is "
"returned.  Items are only appended to the copy at the end."
msgstr ""

# bb1d23fe2dd343c98bae748f41e40ed5
#: ../Doc/library/pkgutil.rst:42
msgid ""
"It is assumed that :data:`sys.path` is a sequence.  Items of :data:`sys."
"path` that are not (Unicode or 8-bit) strings referring to existing "
"directories are ignored.  Unicode items on :data:`sys.path` that cause "
"errors when used as filenames may cause this function to raise an exception "
"(in line with :func:`os.path.isdir` behavior)."
msgstr ""

# 2592b8d71e1a44b5b81a5c53cb6e3363
#: ../Doc/library/pkgutil.rst:51
msgid ":pep:`302` Importer that wraps Python's \"classic\" import algorithm."
msgstr ""

# ae59a3f5a379445c85903ff8b695831d
#: ../Doc/library/pkgutil.rst:53
msgid ""
"If *dirname* is a string, a :pep:`302` importer is created that searches "
"that directory.  If *dirname* is ``None``, a :pep:`302` importer is created "
"that searches the current :data:`sys.path`, plus any modules that are frozen "
"or built-in."
msgstr ""

# d0528e3f95d14c3092a8364c0b42e40a
#: ../Doc/library/pkgutil.rst:58
msgid ""
"Note that :class:`ImpImporter` does not currently support being used by "
"placement on :data:`sys.meta_path`."
msgstr ""

# f31d4450273f4449a161849b4bafe4a1
#: ../Doc/library/pkgutil.rst:64
msgid ":pep:`302` Loader that wraps Python's \"classic\" import algorithm."
msgstr ""

# ee71b167d1e64da485da90c24ff4b608
#: ../Doc/library/pkgutil.rst:69
msgid "Find a :pep:`302` \"loader\" object for *fullname*."
msgstr ""

# 09a5bb1e795744b6ab5d9488b739d676
#: ../Doc/library/pkgutil.rst:71
msgid ""
"If *fullname* contains dots, path must be the containing package's "
"``__path__``.  Returns ``None`` if the module cannot be found or imported. "
"This function uses :func:`iter_importers`, and is thus subject to the same "
"limitations regarding platform-specific special import locations such as the "
"Windows registry."
msgstr ""

# bea2f2fcebcb410b936877c924cee6ac
#: ../Doc/library/pkgutil.rst:80
msgid "Retrieve a :pep:`302` importer for the given *path_item*."
msgstr ""

# da26f95bed554f3ab5c76010aee753b2
#: ../Doc/library/pkgutil.rst:82
msgid ""
"The returned importer is cached in :data:`sys.path_importer_cache` if it was "
"newly created by a path hook."
msgstr ""

# fba711a5908e412fb52b949afac55172
#: ../Doc/library/pkgutil.rst:85
msgid ""
"If there is no importer, a wrapper around the basic import machinery is "
"returned.  This wrapper is never inserted into the importer cache (``None`` "
"is inserted instead)."
msgstr ""

# c7831e322f6f4f5db9d1db181e8dd5fe
#: ../Doc/library/pkgutil.rst:89
msgid ""
"The cache (or part of it) can be cleared manually if a rescan of :data:`sys."
"path_hooks` is necessary."
msgstr ""

# 69e203814c7e4947832992fb01da3991
#: ../Doc/library/pkgutil.rst:95
msgid "Get a :pep:`302` \"loader\" object for *module_or_name*."
msgstr ""

# feb3ce7803a4494594ff23d92d33ff59
#: ../Doc/library/pkgutil.rst:97
msgid ""
"If the module or package is accessible via the normal import mechanism, a "
"wrapper around the relevant part of that machinery is returned.  Returns "
"``None`` if the module cannot be found or imported.  If the named module is "
"not already imported, its containing package (if any) is imported, in order "
"to establish the package ``__path__``."
msgstr ""

# 099a5bf7af4147bab49616db0b522f6f
#: ../Doc/library/pkgutil.rst:103
msgid ""
"This function uses :func:`iter_importers`, and is thus subject to the same "
"limitations regarding platform-specific special import locations such as the "
"Windows registry."
msgstr ""

# baa603b1c1fa42978630cc9aacfedd0b
#: ../Doc/library/pkgutil.rst:110
msgid "Yield :pep:`302` importers for the given module name."
msgstr ""

# a5f3bfab81024c878f494ac34c8d83ce
#: ../Doc/library/pkgutil.rst:112
msgid ""
"If fullname contains a '.', the importers will be for the package containing "
"fullname, otherwise they will be importers for :data:`sys.meta_path`, :data:"
"`sys.path`, and Python's \"classic\" import machinery, in that order.  If "
"the named module is in a package, that package is imported as a side effect "
"of invoking this function."
msgstr ""

# d6f4400ce611419e8fe9f0358b084bcd
#: ../Doc/library/pkgutil.rst:118
msgid ""
"Non-:pep:`302` mechanisms (e.g. the Windows registry) used by the standard "
"import machinery to find files in alternative locations are partially "
"supported, but are searched *after* :data:`sys.path`.  Normally, these "
"locations are searched *before* :data:`sys.path`, preventing :data:`sys."
"path` entries from shadowing them."
msgstr ""

# f431abd881e043f2b4f494163a2bfa3b
#: ../Doc/library/pkgutil.rst:124
msgid ""
"For this to cause a visible difference in behaviour, there must be a module "
"or package name that is accessible via both :data:`sys.path` and one of the "
"non-:pep:`302` file system mechanisms.  In this case, the emulation will "
"find the former version, while the builtin import mechanism will find the "
"latter."
msgstr ""

# 624359d5e8bb40d3accfebafa2538a77
#: ../Doc/library/pkgutil.rst:129
msgid ""
"Items of the following types can be affected by this discrepancy: ``imp."
"C_EXTENSION``, ``imp.PY_SOURCE``, ``imp.PY_COMPILED``, ``imp.PKG_DIRECTORY``."
msgstr ""

# df2e75db2284436c9f3bc2217167b7df
#: ../Doc/library/pkgutil.rst:136
msgid ""
"Yields ``(module_loader, name, ispkg)`` for all submodules on *path*, or, if "
"path is ``None``, all top-level modules on ``sys.path``."
msgstr ""

# 4e37ce53140840fb8880c5c88499b91b
# 8b18e196620a487d88e9b9277c9e7bf4
#: ../Doc/library/pkgutil.rst:139 ../Doc/library/pkgutil.rst:149
msgid ""
"*path* should be either ``None`` or a list of paths to look for modules in."
msgstr ""

# 1db989b833ac4eb3968545c626b7f28c
# 107f8b9391304dcdb5d1d7cc35f89963
#: ../Doc/library/pkgutil.rst:141 ../Doc/library/pkgutil.rst:151
msgid ""
"*prefix* is a string to output on the front of every module name on output."
msgstr ""

# e8a86b6cc1fc48a1975aac59d7be22bd
#: ../Doc/library/pkgutil.rst:146
msgid ""
"Yields ``(module_loader, name, ispkg)`` for all modules recursively on "
"*path*, or, if path is ``None``, all accessible modules."
msgstr ""

# 5d6bc70f7e4444bfbb64b8388b4610fe
#: ../Doc/library/pkgutil.rst:153
msgid ""
"Note that this function must import all *packages* (*not* all modules!) on "
"the given *path*, in order to access the ``__path__`` attribute to find "
"submodules."
msgstr ""

# 1fafe864d06843a4b3e37a7ac1a88725
#: ../Doc/library/pkgutil.rst:157
msgid ""
"*onerror* is a function which gets called with one argument (the name of the "
"package which was being imported) if any exception occurs while trying to "
"import a package.  If no *onerror* function is supplied, :exc:`ImportError`"
"\\s are caught and ignored, while all other exceptions are propagated, "
"terminating the search."
msgstr ""

# 270c1b45adc344a890a21b1aaddde8f5
# 11c2c7cbe60d4df48f2071c261304adb
# 37c5cbae47084a0fb7848a7e8a2c768f
# 08b9bb923e154be29ea7e3235b904051
# 920c23ea93674f42a17faf5a2d11d942
#: ../Doc/library/pkgutil.rst:163 ../Doc/library/posixfile.rst:180
#: ../Doc/library/subprocess.rst:50 ../Doc/library/subprocess.rst:85
#: ../Doc/library/subprocess.rst:127
msgid "Examples::"
msgstr ""

#: ../Doc/library/pkgutil.rst:174
msgid "Get a resource from a package."
msgstr ""

# 8279ea6ba6724fc2b3ba54c73eaa5281
#: ../Doc/library/pkgutil.rst:176
msgid ""
"This is a wrapper for the :pep:`302` loader :func:`get_data` API.  The "
"*package* argument should be the name of a package, in standard module "
"format (``foo.bar``).  The *resource* argument should be in the form of a "
"relative filename, using ``/`` as the path separator.  The parent directory "
"name ``..`` is not allowed, and nor is a rooted name (starting with a ``/``)."
msgstr ""

#: ../Doc/library/pkgutil.rst:182
msgid ""
"The function returns a binary string that is the contents of the specified "
"resource."
msgstr ""

#: ../Doc/library/pkgutil.rst:185
msgid ""
"For packages located in the filesystem, which have already been imported, "
"this is the rough equivalent of::"
msgstr ""

# 96b7de18be1044ba86216a832e4fad4e
#: ../Doc/library/pkgutil.rst:191
msgid ""
"If the package cannot be located or loaded, or it uses a :pep:`302` loader "
"which does not support :func:`get_data`, then ``None`` is returned."
msgstr ""

#: ../Doc/library/platform.rst:2
msgid ":mod:`platform` ---  Access to underlying platform's identifying data"
msgstr ""

# 21159e2ac543479c8a85a73b8156f0de
#: ../Doc/library/platform.rst:12
msgid "**Source code:** :source:`Lib/platform.py`"
msgstr ""

#: ../Doc/library/platform.rst:18
msgid ""
"Specific platforms listed alphabetically, with Linux included in the Unix "
"section."
msgstr ""

#: ../Doc/library/platform.rst:23
msgid "Cross Platform"
msgstr ""

#: ../Doc/library/platform.rst:28
msgid ""
"Queries the given executable (defaults to the Python interpreter binary) for "
"various architecture information."
msgstr ""

#: ../Doc/library/platform.rst:31
msgid ""
"Returns a tuple ``(bits, linkage)`` which contain information about the bit "
"architecture and the linkage format used for the executable. Both values are "
"returned as strings."
msgstr ""

# fb92827fffae417a88d4848ce37626c4
#: ../Doc/library/platform.rst:35
msgid ""
"Values that cannot be determined are returned as given by the parameter "
"presets. If bits is given as ``''``, the :c:func:`sizeof(pointer)` (or :c:"
"func:`sizeof(long)` on Python version < 1.5.2) is used as indicator for the "
"supported pointer size."
msgstr ""

#: ../Doc/library/platform.rst:40
msgid ""
"The function relies on the system's :file:`file` command to do the actual "
"work. This is available on most if not all Unix  platforms and some non-Unix "
"platforms and then only if the executable points to the Python interpreter.  "
"Reasonable defaults are used when the above needs are not met."
msgstr ""

# f4bbc9ab4a98482eb94b34d16c1f81f3
#: ../Doc/library/platform.rst:47
msgid ""
"On Mac OS X (and perhaps other platforms), executable files may be universal "
"files containing multiple architectures."
msgstr ""

# d29e71f4306f47a882ad9785bfff6f17
#: ../Doc/library/platform.rst:50
msgid ""
"To get at the \"64-bitness\" of the current interpreter, it is more reliable "
"to query the :attr:`sys.maxsize` attribute::"
msgstr ""

#: ../Doc/library/platform.rst:58
msgid ""
"Returns the machine type, e.g. ``'i386'``. An empty string is returned if "
"the value cannot be determined."
msgstr ""

#: ../Doc/library/platform.rst:64
msgid ""
"Returns the computer's network name (may not be fully qualified!). An empty "
"string is returned if the value cannot be determined."
msgstr ""

#: ../Doc/library/platform.rst:70
msgid ""
"Returns a single string identifying the underlying platform with as much "
"useful information as possible."
msgstr ""

#: ../Doc/library/platform.rst:73
msgid ""
"The output is intended to be *human readable* rather than machine parseable. "
"It may look different on different platforms and this is intended."
msgstr ""

#: ../Doc/library/platform.rst:76
msgid ""
"If *aliased* is true, the function will use aliases for various platforms "
"that report system names which differ from their common names, for example "
"SunOS will be reported as Solaris.  The :func:`system_alias` function is "
"used to implement this."
msgstr ""

#: ../Doc/library/platform.rst:81
msgid ""
"Setting *terse* to true causes the function to return only the absolute "
"minimum information needed to identify the platform."
msgstr ""

#: ../Doc/library/platform.rst:87
msgid "Returns the (real) processor name, e.g. ``'amdk6'``."
msgstr ""

#: ../Doc/library/platform.rst:89
msgid ""
"An empty string is returned if the value cannot be determined. Note that "
"many platforms do not provide this information or simply return the same "
"value as for :func:`machine`.  NetBSD does this."
msgstr ""

#: ../Doc/library/platform.rst:96
msgid ""
"Returns a tuple ``(buildno, builddate)`` stating the Python build number and "
"date as strings."
msgstr ""

#: ../Doc/library/platform.rst:102
msgid "Returns a string identifying the compiler used for compiling Python."
msgstr ""

#: ../Doc/library/platform.rst:107
msgid "Returns a string identifying the Python implementation SCM branch."
msgstr ""

# 3aab8b8c7f01482eb65b3d7d6d79eef8
#: ../Doc/library/platform.rst:114
msgid ""
"Returns a string identifying the Python implementation. Possible return "
"values are: 'CPython', 'IronPython', 'Jython', 'PyPy'."
msgstr ""

#: ../Doc/library/platform.rst:122
msgid "Returns a string identifying the Python implementation SCM revision."
msgstr ""

#: ../Doc/library/platform.rst:129
msgid "Returns the Python version as string ``'major.minor.patchlevel'``"
msgstr ""

#: ../Doc/library/platform.rst:131
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to 0)."
msgstr ""

#: ../Doc/library/platform.rst:137
msgid ""
"Returns the Python version as tuple ``(major, minor, patchlevel)`` of "
"strings."
msgstr ""

#: ../Doc/library/platform.rst:139
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to ``'0'``)."
msgstr ""

#: ../Doc/library/platform.rst:145
msgid ""
"Returns the system's release, e.g. ``'2.2.0'`` or ``'NT'`` An empty string "
"is returned if the value cannot be determined."
msgstr ""

#: ../Doc/library/platform.rst:151
msgid ""
"Returns the system/OS name, e.g. ``'Linux'``, ``'Windows'``, or ``'Java'``. "
"An empty string is returned if the value cannot be determined."
msgstr ""

#: ../Doc/library/platform.rst:157
msgid ""
"Returns ``(system, release, version)`` aliased to common marketing names "
"used for some systems.  It also does some reordering of the information in "
"some cases where it would otherwise cause confusion."
msgstr ""

#: ../Doc/library/platform.rst:164
msgid ""
"Returns the system's release version, e.g. ``'#3 on degas'``. An empty "
"string is returned if the value cannot be determined."
msgstr ""

#: ../Doc/library/platform.rst:170
msgid ""
"Fairly portable uname interface. Returns a tuple of strings ``(system, node, "
"release, version, machine, processor)`` identifying the underlying platform."
msgstr ""

#: ../Doc/library/platform.rst:173
msgid ""
"Note that unlike the :func:`os.uname` function this also returns possible "
"processor information as additional tuple entry."
msgstr ""

#: ../Doc/library/platform.rst:176
msgid "Entries which cannot be determined are set to ``''``."
msgstr ""

#: ../Doc/library/platform.rst:180
msgid "Java Platform"
msgstr ""

#: ../Doc/library/platform.rst:185
msgid "Version interface for Jython."
msgstr ""

#: ../Doc/library/platform.rst:187
msgid ""
"Returns a tuple ``(release, vendor, vminfo, osinfo)`` with *vminfo* being a "
"tuple ``(vm_name, vm_release, vm_vendor)`` and *osinfo* being a tuple ``"
"(os_name, os_version, os_arch)``. Values which cannot be determined are set "
"to the defaults given as parameters (which all default to ``''``)."
msgstr ""

#: ../Doc/library/platform.rst:194
msgid "Windows Platform"
msgstr ""

# b7c1de5ba2534647973af205e9030d99
#: ../Doc/library/platform.rst:199
msgid ""
"Get additional version information from the Windows Registry and return a "
"tuple ``(version, csd, ptype)`` referring to version number, CSD level "
"(service pack) and OS type (multi/single processor)."
msgstr ""

#: ../Doc/library/platform.rst:203
msgid ""
"As a hint: *ptype* is ``'Uniprocessor Free'`` on single processor NT "
"machines and ``'Multiprocessor Free'`` on multi processor machines. The "
"*'Free'* refers to the OS version being free of debugging code. It could "
"also state *'Checked'* which means the OS version uses debugging code, i.e. "
"code that checks arguments, ranges, etc."
msgstr ""

# 9050e138f22b4e47926bf20e2b3d7028
#: ../Doc/library/platform.rst:211
msgid ""
"This function works best with Mark Hammond's :mod:`win32all` package "
"installed, but also on Python 2.3 and later (support for this was added in "
"Python 2.6). It obviously only runs on Win32 compatible platforms."
msgstr ""

#: ../Doc/library/platform.rst:218
msgid "Win95/98 specific"
msgstr ""

#: ../Doc/library/platform.rst:222
msgid ""
"Portable :func:`popen` interface.  Find a working popen implementation "
"preferring :func:`win32pipe.popen`.  On Windows NT, :func:`win32pipe.popen` "
"should work; on Windows 9x it hangs due to bugs in the MS C library."
msgstr ""

#: ../Doc/library/platform.rst:228
msgid "Mac OS Platform"
msgstr ""

#: ../Doc/library/platform.rst:233
msgid ""
"Get Mac OS version information and return it as tuple ``(release, "
"versioninfo, machine)`` with *versioninfo* being a tuple ``(version, "
"dev_stage, non_release_version)``."
msgstr ""

#: ../Doc/library/platform.rst:237
msgid ""
"Entries which cannot be determined are set to ``''``.  All tuple entries are "
"strings."
msgstr ""

#: ../Doc/library/platform.rst:242
msgid "Unix Platforms"
msgstr ""

# 2150a490549a40f5a95e643e1717cc17
#: ../Doc/library/platform.rst:247
msgid ""
"This is an old version of the functionality now provided by :func:"
"`linux_distribution`. For new code, please use the :func:"
"`linux_distribution`."
msgstr ""

# 7d0486be50284ad5944355fdd63a182f
#: ../Doc/library/platform.rst:251
msgid ""
"The only difference between the two is that ``dist()`` always returns the "
"short name of the distribution taken from the ``supported_dists`` parameter."
msgstr ""

#: ../Doc/library/platform.rst:259
msgid "Tries to determine the name of the Linux OS distribution name."
msgstr ""

#: ../Doc/library/platform.rst:261
msgid ""
"``supported_dists`` may be given to define the set of Linux distributions to "
"look for. It defaults to a list of currently supported Linux distributions "
"identified by their release file name."
msgstr ""

#: ../Doc/library/platform.rst:265
msgid ""
"If ``full_distribution_name`` is true (default), the full distribution read "
"from the OS is returned. Otherwise the short name taken from "
"``supported_dists`` is used."
msgstr ""

#: ../Doc/library/platform.rst:269
msgid ""
"Returns a tuple ``(distname,version,id)`` which defaults to the args given "
"as parameters.  ``id`` is the item in parentheses after the version number.  "
"It is usually the version codename."
msgstr ""

#: ../Doc/library/platform.rst:277
msgid ""
"Tries to determine the libc version against which the file executable "
"(defaults to the Python interpreter) is linked.  Returns a tuple of strings "
"``(lib, version)`` which default to the given parameters in case the lookup "
"fails."
msgstr ""

#: ../Doc/library/platform.rst:281
msgid ""
"Note that this function has intimate knowledge of how different libc "
"versions add symbols to the executable is probably only usable for "
"executables compiled using :program:`gcc`."
msgstr ""

#: ../Doc/library/platform.rst:285
msgid "The file is read and scanned in chunks of *chunksize* bytes."
msgstr ""

#: ../Doc/library/plistlib.rst:2
msgid ":mod:`plistlib` --- Generate and parse Mac OS X ``.plist`` files"
msgstr ""

# 06333db9fa414137a96046d6a1c8b8b6
#: ../Doc/library/plistlib.rst:18
msgid "**Source code:** :source:`Lib/plistlib.py`"
msgstr ""

#: ../Doc/library/plistlib.rst:22
msgid ""
"This module provides an interface for reading and writing the \"property list"
"\" XML files used mainly by Mac OS X."
msgstr ""

#: ../Doc/library/plistlib.rst:25
msgid ""
"The property list (``.plist``) file format is a simple XML pickle supporting "
"basic object types, like dictionaries, lists, numbers and strings.  Usually "
"the top level object is a dictionary."
msgstr ""

# 7b56fba41a064fb5ac399a1c156f6246
#: ../Doc/library/plistlib.rst:29
msgid ""
"Values can be strings, integers, floats, booleans, tuples, lists, "
"dictionaries (but only with string keys), :class:`Data` or :class:`datetime."
"datetime` objects.  String values (including dictionary keys) may be unicode "
"strings -- they will be written out as UTF-8."
msgstr ""

# e6ac2a790aa14965a16ac39d96ebfd0d
#: ../Doc/library/plistlib.rst:34
msgid ""
"The ``<data>`` plist type is supported through the :class:`Data` class.  "
"This is a thin wrapper around a Python string.  Use :class:`Data` if your "
"strings contain control characters."
msgstr ""

#: ../Doc/library/plistlib.rst:41
msgid "Apple's documentation of the file format."
msgstr ""

#: ../Doc/library/plistlib.rst:44
msgid "This module defines the following functions:"
msgstr ""

#: ../Doc/library/plistlib.rst:48
msgid ""
"Read a plist file. *pathOrFile* may either be a file name or a (readable) "
"file object.  Return the unpacked root object (which usually is a "
"dictionary)."
msgstr ""

#: ../Doc/library/plistlib.rst:52
msgid ""
"The XML data is parsed using the Expat parser from :mod:`xml.parsers.expat` "
"-- see its documentation for possible exceptions on ill-formed XML. Unknown "
"elements will simply be ignored by the plist parser."
msgstr ""

#: ../Doc/library/plistlib.rst:59
msgid ""
"Write *rootObject* to a plist file. *pathOrFile* may either be a file name "
"or a (writable) file object."
msgstr ""

#: ../Doc/library/plistlib.rst:62
msgid ""
"A :exc:`TypeError` will be raised if the object is of an unsupported type or "
"a container that contains objects of unsupported types."
msgstr ""

# 751f025d32c1440fa1e1b801befb6f5e
#: ../Doc/library/plistlib.rst:68
msgid "Read a plist from a string.  Return the root object."
msgstr ""

# 81501df827f24cfea412d58c078cc0b6
#: ../Doc/library/plistlib.rst:73
msgid "Return *rootObject* as a plist-formatted string."
msgstr ""

# c5920bd3f0cf41029591d92f664f3d73
#: ../Doc/library/plistlib.rst:79
msgid ""
"Read a plist from the resource with type *restype* from the resource fork of "
"*path*.  Availability: Mac OS X."
msgstr ""

# d08614a0aff340489a8b2b9ecf615c9d
# d503c46309b94e309034bf7b746c569b
#: ../Doc/library/plistlib.rst:84 ../Doc/library/plistlib.rst:94
msgid "In Python 3.x, this function has been removed."
msgstr ""

# 5fc7b4e4237d454b81f9cf28f43b8ed2
#: ../Doc/library/plistlib.rst:89
msgid ""
"Write *rootObject* as a resource with type *restype* to the resource fork of "
"*path*.  Availability: Mac OS X."
msgstr ""

#: ../Doc/library/plistlib.rst:98
msgid "The following class is available:"
msgstr ""

# 1e9750e3cb104f04a52adf9c4734809f
#: ../Doc/library/plistlib.rst:102
msgid ""
"Return a \"data\" wrapper object around the string *data*.  This is used in "
"functions converting from/to plists to represent the ``<data>`` type "
"available in plists."
msgstr ""

# d531957d9f2040bab489f666fd6c9992
#: ../Doc/library/plistlib.rst:106
msgid ""
"It has one attribute, :attr:`data`, that can be used to retrieve the Python "
"string stored in it."
msgstr ""

#: ../Doc/library/plistlib.rst:113
msgid "Generating a plist::"
msgstr ""

#: ../Doc/library/plistlib.rst:134
msgid "Parsing a plist::"
msgstr ""

# ea4cc9b26fbb4edf99aa3b4218ca03f9
#: ../Doc/library/popen2.rst:3
msgid ":mod:`popen2` --- Subprocesses with accessible I/O streams"
msgstr ""

# bd5245eb2d2b499eb6ab86cafd965db5
#: ../Doc/library/popen2.rst:15
msgid ""
"This module allows you to spawn processes and connect to their input/output/"
"error pipes and obtain their return codes under Unix and Windows."
msgstr ""

# 3f345bbaad9246288ed7cf683c02d749
#: ../Doc/library/popen2.rst:18
msgid ""
"The :mod:`subprocess` module provides more powerful facilities for spawning "
"new processes and retrieving their results.  Using the :mod:`subprocess` "
"module is preferable to using the :mod:`popen2` module."
msgstr ""

# 261b83833c654b66b96f8e0eec5a26bb
#: ../Doc/library/popen2.rst:22
msgid ""
"The primary interface offered by this module is a trio of factory functions. "
"For each of these, if *bufsize* is specified,  it specifies the buffer size "
"for the I/O pipes.  *mode*, if provided, should be the string ``'b'`` or "
"``'t'``; on Windows this is needed to determine whether the file objects "
"should be opened in binary or text mode.  The default value for *mode* is "
"``'t'``."
msgstr ""

# 0842e189fb9140f49a4cdd8c3b8be248
#: ../Doc/library/popen2.rst:28
msgid ""
"On Unix, *cmd* may be a sequence, in which case arguments will be passed "
"directly to the program without shell intervention (as with :func:`os."
"spawnv`). If *cmd* is a string it will be passed to the shell (as with :func:"
"`os.system`)."
msgstr ""

# fc8edc9160104834ac6e50b16dba3865
#: ../Doc/library/popen2.rst:32
msgid ""
"The only way to retrieve the return codes for the child processes is by "
"using the :meth:`poll` or :meth:`wait` methods on the :class:`Popen3` and :"
"class:`Popen4` classes; these are only available on Unix.  This information "
"is not available when using the :func:`popen2`, :func:`popen3`, and :func:"
"`popen4` functions, or the equivalent functions in the :mod:`os` module. "
"(Note that the tuples returned by the :mod:`os` module's functions are in a "
"different order from the ones returned by the :mod:`popen2` module.)"
msgstr ""

# 4fde545d0462450a9b240ae76f02622f
#: ../Doc/library/popen2.rst:43
msgid ""
"Executes *cmd* as a sub-process.  Returns the file objects ``(child_stdout, "
"child_stdin)``."
msgstr ""

# 9124dc7b2bf94a42b24271504c3dadd2
#: ../Doc/library/popen2.rst:49
msgid ""
"Executes *cmd* as a sub-process.  Returns the file objects ``(child_stdout, "
"child_stdin, child_stderr)``."
msgstr ""

# fe07c4b6d71941c5a3e25c7388cc2427
#: ../Doc/library/popen2.rst:55
msgid ""
"Executes *cmd* as a sub-process.  Returns the file objects ``"
"(child_stdout_and_stderr, child_stdin)``."
msgstr ""

# eb33a52cabf042aa89309ecdf086fd44
#: ../Doc/library/popen2.rst:60
msgid ""
"On Unix, a class defining the objects returned by the factory functions is "
"also available.  These are not used for the Windows implementation, and are "
"not available on that platform."
msgstr ""

# d2cb7057099a449dbc1c3cab994045fd
#: ../Doc/library/popen2.rst:67
msgid ""
"This class represents a child process.  Normally, :class:`Popen3` instances "
"are created using the :func:`popen2` and :func:`popen3` factory functions "
"described above."
msgstr ""

# a47057b7ffa248efb9077b170c904e36
#: ../Doc/library/popen2.rst:71
msgid ""
"If not using one of the helper functions to create :class:`Popen3` objects, "
"the parameter *cmd* is the shell command to execute in a sub-process.  The "
"*capturestderr* flag, if true, specifies that the object should capture "
"standard error output of the child process. The default is false.  If the "
"*bufsize* parameter is specified, it specifies the size of the I/O buffers "
"to/from the child process."
msgstr ""

# 8c00252e79724909b4b2caf1d6e30770
#: ../Doc/library/popen2.rst:81
msgid ""
"Similar to :class:`Popen3`, but always captures standard error into the same "
"file object as standard output.  These are typically created using :func:"
"`popen4`."
msgstr ""

# 63abae9e601e458a8f4e1cca67c939a7
#: ../Doc/library/popen2.rst:91
msgid "Popen3 and Popen4 Objects"
msgstr ""

# a1bcb2521f794f09ad514930457645e7
#: ../Doc/library/popen2.rst:93
msgid ""
"Instances of the :class:`Popen3` and :class:`Popen4` classes have the "
"following methods:"
msgstr ""

# cd6ac2cb871b4d30a61dbc0c13197bec
#: ../Doc/library/popen2.rst:99
msgid ""
"Returns ``-1`` if child process hasn't completed yet, or its status code "
"(see :meth:`wait`) otherwise."
msgstr ""

# 4120ac1cd92a44108eb5e8c2afee5f3c
#: ../Doc/library/popen2.rst:105
msgid ""
"Waits for and returns the status code of the child process.  The status code "
"encodes both the return code of the process and information about whether it "
"exited using the :c:func:`exit` system call or died due to a signal.  "
"Functions to help interpret the status code are defined in the :mod:`os` "
"module; see section :ref:`os-process` for the :func:`W\\*` family of "
"functions."
msgstr ""

#: ../Doc/library/popen2.rst:111 ../Doc/library/subprocess.rst:512
msgid "The following attributes are also available:"
msgstr ""

# c58e6081ac0a4b9a88f90c8b14f6161d
#: ../Doc/library/popen2.rst:116
msgid ""
"A file object that provides output from the child process.  For :class:"
"`Popen4` instances, this will provide both the standard output and standard "
"error streams."
msgstr ""

# cf19e696ecb848099733733913392619
#: ../Doc/library/popen2.rst:123
msgid "A file object that provides input to the child process."
msgstr ""

# 53b95d1ac1cf42058221108ba68ed8a7
#: ../Doc/library/popen2.rst:128
msgid ""
"A file object that provides error output from the child process, if "
"*capturestderr* was true for the constructor, otherwise ``None``.  This will "
"always be ``None`` for :class:`Popen4` instances."
msgstr ""

#: ../Doc/library/popen2.rst:135 ../Doc/library/subprocess.rst:543
msgid "The process ID of the child process."
msgstr ""

# 6e992bf59120489e86d78ba3021fecbf
#: ../Doc/library/popen2.rst:141
msgid "Flow Control Issues"
msgstr ""

# a54c09c6461c4ac392f658c6bc430b0e
#: ../Doc/library/popen2.rst:143
msgid ""
"Any time you are working with any form of inter-process communication, "
"control flow needs to be carefully thought out.  This remains the case with "
"the file objects provided by this module (or the :mod:`os` module "
"equivalents)."
msgstr ""

# e8e593877ab6450b97b13b181a5414aa
#: ../Doc/library/popen2.rst:147
msgid ""
"When reading output from a child process that writes a lot of data to "
"standard error while the parent is reading from the child's standard output, "
"a deadlock can occur.  A similar situation can occur with other combinations "
"of reads and writes.  The essential factors are that more than :const:"
"`_PC_PIPE_BUF` bytes are being written by one process in a blocking fashion, "
"while the other process is reading from the first process, also in a "
"blocking fashion."
msgstr ""

# 8154ad0366d64257ab06359b960d3b71
#: ../Doc/library/popen2.rst:158
msgid "There are several ways to deal with this situation."
msgstr ""

# f8897fd8d3ea4e34851d4ad79888f4ce
#: ../Doc/library/popen2.rst:160
msgid ""
"The simplest application change, in many cases, will be to follow this model "
"in the parent process::"
msgstr ""

# 2fe471fb00cb4623ac95fee85ed2b49f
#: ../Doc/library/popen2.rst:172
msgid "with code like this in the child::"
msgstr ""

# 809c52f4c16b4c4bb08a2bbbb803aa7d
#: ../Doc/library/popen2.rst:184
msgid ""
"In particular, note that ``sys.stderr`` must be closed after writing all "
"data, or :meth:`readlines` won't return.  Also note that :func:`os.close` "
"must be used, as ``sys.stderr.close()`` won't close ``stderr`` (otherwise "
"assigning to ``sys.stderr`` will silently close it, so no further errors can "
"be printed)."
msgstr ""

# 403c81fb5cb34a2a9b6c492f14141c30
#: ../Doc/library/popen2.rst:189
msgid ""
"Applications which need to support a more general approach should integrate "
"I/O over pipes with their :func:`select` loops, or use separate threads to "
"read each of the individual files provided by whichever :func:`popen\\*` "
"function or :class:`Popen\\*` class was used."
msgstr ""

#: ../Doc/library/poplib.rst:2
msgid ":mod:`poplib` --- POP3 protocol client"
msgstr ""

# 8789dcd77aca472cbddcea77a22f37e8
#: ../Doc/library/poplib.rst:11
msgid "**Source code:** :source:`Lib/poplib.py`"
msgstr ""

#: ../Doc/library/poplib.rst:15
msgid ""
"This module defines a class, :class:`POP3`, which encapsulates a connection "
"to a POP3 server and implements the protocol as defined in :rfc:`1725`.  "
"The :class:`POP3` class supports both the minimal and optional command sets. "
"Additionally, this module provides a class :class:`POP3_SSL`, which provides "
"support for connecting to POP3 servers that use SSL as an underlying "
"protocol layer."
msgstr ""

#: ../Doc/library/poplib.rst:22
msgid ""
"Note that POP3, though widely supported, is obsolescent.  The implementation "
"quality of POP3 servers varies widely, and too many are quite poor. If your "
"mailserver supports IMAP, you would be better off using the :class:`imaplib."
"IMAP4` class, as IMAP servers tend to be better implemented."
msgstr ""

#: ../Doc/library/poplib.rst:27
msgid "A single class is provided by the :mod:`poplib` module:"
msgstr ""

#: ../Doc/library/poplib.rst:32
msgid ""
"This class implements the actual POP3 protocol.  The connection is created "
"when the instance is initialized. If *port* is omitted, the standard POP3 "
"port (110) is used. The optional *timeout* parameter specifies a timeout in "
"seconds for the connection attempt (if not specified, the global default "
"timeout setting will be used)."
msgstr ""

# e2544a3e49394b569b4f392e75183c1b
#: ../Doc/library/poplib.rst:44
msgid ""
"This is a subclass of :class:`POP3` that connects to the server over an SSL "
"encrypted socket.  If *port* is not specified, 995, the standard POP3-over-"
"SSL port is used.  *keyfile* and *certfile* are also optional - they can "
"contain a PEM formatted private key and certificate chain file for the SSL "
"connection."
msgstr ""

#: ../Doc/library/poplib.rst:51
msgid "One exception is defined as an attribute of the :mod:`poplib` module:"
msgstr ""

#: ../Doc/library/poplib.rst:56
msgid ""
"Exception raised on any errors from this module (errors from :mod:`socket` "
"module are not caught). The reason for the exception is passed to the "
"constructor as a string."
msgstr ""

#: ../Doc/library/poplib.rst:64
msgid "The standard Python IMAP module."
msgstr ""

#: ../Doc/library/poplib.rst:67
msgid ""
"The FAQ for the :program:`fetchmail` POP/IMAP client collects information on "
"POP3 server variations and RFC noncompliance that may be useful if you need "
"to write an application based on the POP protocol."
msgstr ""

#: ../Doc/library/poplib.rst:75
msgid "POP3 Objects"
msgstr ""

#: ../Doc/library/poplib.rst:77
msgid ""
"All POP3 commands are represented by methods of the same name, in lower-"
"case; most return the response text sent by the server."
msgstr ""

#: ../Doc/library/poplib.rst:80
msgid "An :class:`POP3` instance has the following methods:"
msgstr ""

#: ../Doc/library/poplib.rst:94
msgid "Returns the greeting string sent by the POP3 server."
msgstr ""

#: ../Doc/library/poplib.rst:99
msgid ""
"Send user command, response should indicate that a password is required."
msgstr ""

#: ../Doc/library/poplib.rst:104
msgid ""
"Send password, response includes message count and mailbox size. Note: the "
"mailbox on the server is locked until :meth:`quit` is called."
msgstr ""

#: ../Doc/library/poplib.rst:110
msgid "Use the more secure APOP authentication to log into the POP3 server."
msgstr ""

#: ../Doc/library/poplib.rst:115
msgid ""
"Use RPOP authentication (similar to UNIX r-commands) to log into POP3 server."
msgstr ""

#: ../Doc/library/poplib.rst:120
msgid ""
"Get mailbox status.  The result is a tuple of 2 integers: ``(message count, "
"mailbox size)``."
msgstr ""

#: ../Doc/library/poplib.rst:126
msgid ""
"Request message list, result is in the form ``(response, ['mesg_num "
"octets', ...], octets)``. If *which* is set, it is the message to list."
msgstr ""

#: ../Doc/library/poplib.rst:132
msgid ""
"Retrieve whole message number *which*, and set its seen flag. Result is in "
"form ``(response, ['line', ...], octets)``."
msgstr ""

#: ../Doc/library/poplib.rst:138
msgid ""
"Flag message number *which* for deletion.  On most servers deletions are not "
"actually performed until QUIT (the major exception is Eudora QPOP, which "
"deliberately violates the RFCs by doing pending deletes on any disconnect)."
msgstr ""

#: ../Doc/library/poplib.rst:145
msgid "Remove any deletion marks for the mailbox."
msgstr ""

#: ../Doc/library/poplib.rst:150
msgid "Do nothing.  Might be used as a keep-alive."
msgstr ""

#: ../Doc/library/poplib.rst:155
msgid "Signoff:  commit changes, unlock mailbox, drop connection."
msgstr ""

#: ../Doc/library/poplib.rst:160
msgid ""
"Retrieves the message header plus *howmuch* lines of the message after the "
"header of message number *which*. Result is in form ``(response, "
"['line', ...], octets)``."
msgstr ""

#: ../Doc/library/poplib.rst:164
msgid ""
"The POP3 TOP command this method uses, unlike the RETR command, doesn't set "
"the message's seen flag; unfortunately, TOP is poorly specified in the RFCs "
"and is frequently broken in off-brand servers. Test this method by hand "
"against the POP3 servers you will use before trusting it."
msgstr ""

#: ../Doc/library/poplib.rst:172
msgid ""
"Return message digest (unique id) list. If *which* is specified, result "
"contains the unique id for that message in the form ``'response mesgnum "
"uid``, otherwise result is list ``(response, ['mesgnum uid', ...], octets)``."
msgstr ""

#: ../Doc/library/poplib.rst:176
msgid ""
"Instances of :class:`POP3_SSL` have no additional methods. The interface of "
"this subclass is identical to its parent."
msgstr ""

#: ../Doc/library/poplib.rst:183
msgid "POP3 Example"
msgstr ""

#: ../Doc/library/posix.rst:2
msgid ":mod:`posix` --- The most common POSIX system calls"
msgstr ""

#: ../Doc/library/posix.rst:9
msgid ""
"This module provides access to operating system functionality that is "
"standardized by the C Standard and the POSIX standard (a thinly disguised "
"Unix interface)."
msgstr ""

#: ../Doc/library/posix.rst:15
msgid ""
"**Do not import this module directly.**  Instead, import the module :mod:"
"`os`, which provides a *portable* version of this interface.  On Unix, the :"
"mod:`os` module provides a superset of the :mod:`posix` interface.  On non-"
"Unix operating systems the :mod:`posix` module is not available, but a "
"subset is always available through the :mod:`os` interface.  Once :mod:`os` "
"is imported, there is *no* performance penalty in using it instead of :mod:"
"`posix`.  In addition, :mod:`os` provides some additional functionality, "
"such as automatically calling :func:`putenv` when an entry in ``os.environ`` "
"is changed."
msgstr ""

#: ../Doc/library/posix.rst:24
msgid ""
"Errors are reported as exceptions; the usual exceptions are given for type "
"errors, while errors reported by the system calls raise :exc:`OSError`."
msgstr ""

#: ../Doc/library/posix.rst:31
msgid "Large File Support"
msgstr ""

# 05ac62d3279a4029a5ed8e882545ead4
#: ../Doc/library/posix.rst:39
msgid ""
"Several operating systems (including AIX, HP-UX, Irix and Solaris) provide "
"support for files that are larger than 2 GB from a C programming model "
"where :c:type:`int` and :c:type:`long` are 32-bit values. This is typically "
"accomplished by defining the relevant size and offset types as 64-bit "
"values. Such files are sometimes referred to as :dfn:`large files`."
msgstr ""

# 4201bce5a56b4b22875157d721986778
#: ../Doc/library/posix.rst:45
msgid ""
"Large file support is enabled in Python when the size of an :c:type:`off_t` "
"is larger than a :c:type:`long` and the :c:type:`long long` type is "
"available and is at least as large as an :c:type:`off_t`. Python longs are "
"then used to represent file sizes, offsets and other values that can exceed "
"the range of a Python int. It may be necessary to configure and compile "
"Python with certain compiler flags to enable this mode. For example, it is "
"enabled by default with recent versions of Irix, but with Solaris 2.6 and "
"2.7 you need to do something like::"
msgstr ""

#: ../Doc/library/posix.rst:56
msgid "On large-file-capable Linux systems, this might work::"
msgstr ""

#: ../Doc/library/posix.rst:65
msgid "Notable Module Contents"
msgstr ""

#: ../Doc/library/posix.rst:67
msgid ""
"In addition to many functions described in the :mod:`os` module "
"documentation, :mod:`posix` defines the following data item:"
msgstr ""

# c05374d6ca924a558af569b5c5c64292
#: ../Doc/library/posix.rst:72
msgid ""
"A dictionary representing the string environment at the time the interpreter "
"was started.  For example, ``environ['HOME']`` is the pathname of your home "
"directory, equivalent to ``getenv(\"HOME\")`` in C."
msgstr ""

#: ../Doc/library/posix.rst:76
msgid ""
"Modifying this dictionary does not affect the string environment passed on "
"by :func:`execv`, :func:`popen` or :func:`system`; if you need to change the "
"environment, pass ``environ`` to :func:`execve` or add variable assignments "
"and export statements to the command string for :func:`system` or :func:"
"`popen`."
msgstr ""

# b3839dd3e3804eedadc6c98a9ca56cb8
#: ../Doc/library/posix.rst:83
msgid ""
"The :mod:`os` module provides an alternate implementation of ``environ`` "
"which updates the environment on modification.  Note also that updating ``os."
"environ`` will render this dictionary obsolete.  Use of the :mod:`os` module "
"version of this is recommended over direct access to the :mod:`posix` module."
msgstr ""

# 7b1d8a15de9043b1b7b708cdcd984b37
#: ../Doc/library/posixfile.rst:2
msgid ":mod:`posixfile` --- File-like objects with locking support"
msgstr ""

# 87aa3f92088b4a3da094e0f98f796f7a
#: ../Doc/library/posixfile.rst:20
msgid ""
"This module implements some additional functionality over the built-in file "
"objects.  In particular, it implements file locking, control over the file "
"flags, and an easy interface to duplicate the file object. The module "
"defines a new file object, the posixfile object.  It has all the standard "
"file object methods and adds the methods described below.  This module only "
"works for certain flavors of Unix, since it uses :func:`fcntl.fcntl` for "
"file locking."
msgstr ""

# 117b42cc6fed4b958a4f5e1038b5654c
#: ../Doc/library/posixfile.rst:27
msgid ""
"To instantiate a posixfile object, use the :func:`posixfile.open` function.  "
"The resulting object looks and feels roughly the same as a standard file "
"object."
msgstr ""

# 4fcebccb3500498b9000ae9b8365ddaa
#: ../Doc/library/posixfile.rst:30
msgid "The :mod:`posixfile` module defines the following constants:"
msgstr ""

# f0c06886dc364a3faa7f91ac0b321278
#: ../Doc/library/posixfile.rst:35
msgid "Offset is calculated from the start of the file."
msgstr ""

# fd36a12d3f094b108d6e51ecd19147e6
#: ../Doc/library/posixfile.rst:40
msgid "Offset is calculated from the current position in the file."
msgstr ""

# 7cdb0f63d0da4d3eb6c5cefc426e3901
#: ../Doc/library/posixfile.rst:45
msgid "Offset is calculated from the end of the file."
msgstr ""

# 6d35f6fd19d84eb3be2079201d7609ed
#: ../Doc/library/posixfile.rst:47
msgid "The :mod:`posixfile` module defines the following functions:"
msgstr ""

# 8889b5e24e5146a6b6459e6dedcdf079
#: ../Doc/library/posixfile.rst:52
msgid ""
"Create a new posixfile object with the given filename and mode.  The "
"*filename*, *mode* and *bufsize* arguments are interpreted the same way as "
"by the built-in :func:`open` function."
msgstr ""

# a374a846a41449a8b3012de211d37967
#: ../Doc/library/posixfile.rst:59
msgid ""
"Create a new posixfile object with the given standard file object. The "
"resulting object has the same filename and mode as the original file object."
msgstr ""

# 1b126269713040c6b0074e312db51c35
#: ../Doc/library/posixfile.rst:62
msgid "The posixfile object defines the following additional methods:"
msgstr ""

# 8bee0ea0b92645e2a1c4b8920c721b89
#: ../Doc/library/posixfile.rst:67
msgid ""
"Lock the specified section of the file that the file object is referring to. "
"The format is explained below in a table.  The *len* argument specifies the "
"length of the section that should be locked. The default is ``0``. *start* "
"specifies the starting offset of the section, where the default is ``0``.  "
"The *whence* argument specifies where the offset is relative to. It accepts "
"one of the constants :const:`SEEK_SET`, :const:`SEEK_CUR` or :const:"
"`SEEK_END`.  The default is :const:`SEEK_SET`.  For more information about "
"the arguments refer to the :manpage:`fcntl(2)` manual page on your system."
msgstr ""

# 058b51cebb47450481ba4373016c4c10
#: ../Doc/library/posixfile.rst:79
msgid ""
"Set the specified flags for the file that the file object is referring to.  "
"The new flags are ORed with the old flags, unless specified otherwise.  The "
"format is explained below in a table.  Without the *flags* argument a string "
"indicating the current flags is returned (this is the same as the ``?`` "
"modifier).  For more information about the flags refer to the :manpage:`fcntl"
"(2)` manual page on your system."
msgstr ""

# 451993e62d3d4dad9a3f2340e9d24eba
#: ../Doc/library/posixfile.rst:89
msgid ""
"Duplicate the file object and the underlying file pointer and file "
"descriptor. The resulting object behaves as if it were newly opened."
msgstr ""

# f2918f6744af4543bdb8d7fd9152c23d
#: ../Doc/library/posixfile.rst:95
msgid ""
"Duplicate the file object and the underlying file pointer and file "
"descriptor. The new object will have the given file descriptor. Otherwise "
"the resulting object behaves as if it were newly opened."
msgstr ""

# 14e68778afab41cf97a45d6c7d01a710
#: ../Doc/library/posixfile.rst:102
msgid ""
"Return the standard file object that the posixfile object is based on.  This "
"is sometimes necessary for functions that insist on a standard file object."
msgstr ""

# c0b86eb2e1bb448abde701dc0d7c871f
#: ../Doc/library/posixfile.rst:105
msgid "All methods raise :exc:`IOError` when the request fails."
msgstr ""

# f2937d18ddfb4b0ea3fdee1b770727ba
#: ../Doc/library/posixfile.rst:107
msgid ""
"Format characters for the :meth:`lock` method have the following meaning:"
msgstr ""

# 655f1f43a4a8451a90aa7737b7b67b04
#: ../Doc/library/posixfile.rst:112
msgid "``u``"
msgstr ""

# 7a8e77cce5284fdf978e420f969d7608
#: ../Doc/library/posixfile.rst:112
msgid "unlock the specified region"
msgstr ""

# 7ba45eebabd04d9aaca8e96f2e677cf6
#: ../Doc/library/posixfile.rst:114
msgid "``r``"
msgstr ""

# f8bd1ac3649d432da7b8c0404acb4cec
#: ../Doc/library/posixfile.rst:114
msgid "request a read lock for the specified section"
msgstr ""

# 475fb6bce4d7401b8bdbf766c662035a
#: ../Doc/library/posixfile.rst:116
msgid "``w``"
msgstr ""

# bde8d49a79bf489093eb3551d1f33520
#: ../Doc/library/posixfile.rst:116
msgid "request a write lock for the specified section"
msgstr ""

# 7861ab8739dd4688ab1ff639dba0e678
# 5f502ca4b353424eb479f0a40b4e87e9
#: ../Doc/library/posixfile.rst:120 ../Doc/library/posixfile.rst:155
msgid "In addition the following modifiers can be added to the format:"
msgstr ""

# 1faac2ad5448494f976fd6f2f962623c
# 8a3d2842d6d94f09a76118ae41852164
#: ../Doc/library/posixfile.rst:123 ../Doc/library/posixfile.rst:158
msgid "Modifier"
msgstr ""

# e1b4769df74b4cd6a1a4d02afe88de71
#: ../Doc/library/posixfile.rst:125
msgid "``|``"
msgstr ""

# 955fadab21f0435a88a93d75b3447919
#: ../Doc/library/posixfile.rst:125
msgid "wait until the lock has been granted"
msgstr ""

# 189f1d773553488e854cfd29a38b5823
#: ../Doc/library/posixfile.rst:128
msgid ""
"return the first lock conflicting with the requested lock, or ``None`` if "
"there is no conflict."
msgstr ""

# 6799c03e4b9a4dba99c80d2f28da8695
#: ../Doc/library/posixfile.rst:137
msgid ""
"The lock returned is in the format ``(mode, len, start, whence, pid)`` where "
"*mode* is a character representing the type of lock ('r' or 'w').  This "
"modifier prevents a request from being granted; it is for query purposes "
"only."
msgstr ""

# b96d59d14b274631bc24c99c1efd723b
#: ../Doc/library/posixfile.rst:141
msgid ""
"Format characters for the :meth:`flags` method have the following meanings:"
msgstr ""

# efd4547cf914452695c211786df09611
#: ../Doc/library/posixfile.rst:146
msgid "``a``"
msgstr ""

# 9e9c6e9123dd4f68b63a28742bfd5b4d
#: ../Doc/library/posixfile.rst:146
msgid "append only flag"
msgstr ""

#: ../Doc/library/posixfile.rst:148 ../Doc/library/struct.rst:170
msgid "``c``"
msgstr ""

# a1b9d70b50fb4d288733624f6c132651
#: ../Doc/library/posixfile.rst:148
msgid "close on exec flag"
msgstr ""

# d06a410295264872bccb5ea666c091d1
#: ../Doc/library/posixfile.rst:150
msgid "``n``"
msgstr ""

# 469220afbbf84e3fa7e23dd4c853fcbf
#: ../Doc/library/posixfile.rst:150
msgid "no delay flag (also called non-blocking flag)"
msgstr ""

#: ../Doc/library/posixfile.rst:152 ../Doc/library/struct.rst:199
msgid "``s``"
msgstr ""

# 619e8b5ad72948e9a945be2df1b969de
#: ../Doc/library/posixfile.rst:152
msgid "synchronization flag"
msgstr ""

#: ../Doc/library/posixfile.rst:160 ../Doc/library/struct.rst:114
msgid "``!``"
msgstr ""

# 92e99d7b902042b1bfa6da48d10ee228
#: ../Doc/library/posixfile.rst:160
msgid "turn the specified flags 'off', instead of the default 'on'"
msgstr ""

#: ../Doc/library/posixfile.rst:163 ../Doc/library/struct.rst:108
msgid "``=``"
msgstr ""

# f1ba89da35bb4bd087ac2eb4b99d84f0
#: ../Doc/library/posixfile.rst:163
msgid "replace the flags, instead of the default 'OR' operation"
msgstr ""

# 538ce2247e8148a19d84f0dd5373efe0
#: ../Doc/library/posixfile.rst:166
msgid ""
"return a string in which the characters represent the flags that are set."
msgstr ""

# 0bd7068a1e944efc92e383b6cec124e9
#: ../Doc/library/posixfile.rst:174
msgid "The ``!`` and ``=`` modifiers are mutually exclusive."
msgstr ""

# 16f98846cf4e48b4af622cd482e28664
#: ../Doc/library/posixfile.rst:177
msgid ""
"This string represents the flags after they may have been altered by the "
"same call."
msgstr ""

#: ../Doc/library/pprint.rst:2
msgid ":mod:`pprint` --- Data pretty printer"
msgstr ""

# 4c1ddd3dede24807852fa918c4518df7
#: ../Doc/library/pprint.rst:9
msgid "**Source code:** :source:`Lib/pprint.py`"
msgstr ""

#: ../Doc/library/pprint.rst:13
msgid ""
"The :mod:`pprint` module provides a capability to \"pretty-print\" arbitrary "
"Python data structures in a form which can be used as input to the "
"interpreter. If the formatted structures include objects which are not "
"fundamental Python types, the representation may not be loadable.  This may "
"be the case if objects such as files, sockets, classes, or instances are "
"included, as well as many other built-in objects which are not representable "
"as Python constants."
msgstr ""

#: ../Doc/library/pprint.rst:20
msgid ""
"The formatted representation keeps objects on a single line if it can, and "
"breaks them onto multiple lines if they don't fit within the allowed width. "
"Construct :class:`PrettyPrinter` objects explicitly if you need to adjust "
"the width constraint."
msgstr ""

#: ../Doc/library/pprint.rst:34
msgid "The :mod:`pprint` module defines one class:"
msgstr ""

#: ../Doc/library/pprint.rst:41
msgid ""
"Construct a :class:`PrettyPrinter` instance.  This constructor understands "
"several keyword parameters.  An output stream may be set using the *stream* "
"keyword; the only method used on the stream object is the file protocol's :"
"meth:`write` method.  If not specified, the :class:`PrettyPrinter` adopts "
"``sys.stdout``.  Three additional parameters may be used to control the "
"formatted representation.  The keywords are *indent*, *depth*, and *width*.  "
"The amount of indentation added for each recursive level is specified by "
"*indent*; the default is one.  Other values can cause output to look a "
"little odd, but can make nesting easier to spot.  The number of levels which "
"may be printed is controlled by *depth*; if the data structure being printed "
"is too deep, the next contained level is replaced by ``...``.  By default, "
"there is no constraint on the depth of the objects being formatted.  The "
"desired output width is constrained using the *width* parameter; the default "
"is 80 characters.  If a structure cannot be formatted within the constrained "
"width, a best effort will be made."
msgstr ""

#: ../Doc/library/pprint.rst:74
msgid "The :class:`PrettyPrinter` class supports several derivative functions:"
msgstr ""

#: ../Doc/library/pprint.rst:80
msgid ""
"Return the formatted representation of *object* as a string.  *indent*, "
"*width* and *depth* will be passed to the :class:`PrettyPrinter` constructor "
"as formatting parameters."
msgstr ""

# 329991181da24841b07e235e9977faca
#: ../Doc/library/pprint.rst:90
msgid ""
"Prints the formatted representation of *object* on *stream*, followed by a "
"newline.  If *stream* is omitted, ``sys.stdout`` is used.  This may be used "
"in the interactive interpreter instead of a :keyword:`print` statement for "
"inspecting values.    *indent*, *width* and *depth* will be passed to the :"
"class:`PrettyPrinter` constructor as formatting parameters."
msgstr ""

#: ../Doc/library/pprint.rst:115
msgid ""
"Determine if the formatted representation of *object* is \"readable,\" or "
"can be used to reconstruct the value using :func:`eval`.  This always "
"returns ``False`` for recursive objects."
msgstr ""

#: ../Doc/library/pprint.rst:125
msgid "Determine if *object* requires a recursive representation."
msgstr ""

#: ../Doc/library/pprint.rst:128
msgid "One more support function is also defined:"
msgstr ""

#: ../Doc/library/pprint.rst:132
msgid ""
"Return a string representation of *object*, protected against recursive data "
"structures.  If the representation of *object* exposes a recursive entry, "
"the recursive reference will be represented as ``<Recursion on typename with "
"id=number>``.  The representation is not otherwise formatted."
msgstr ""

#: ../Doc/library/pprint.rst:144
msgid "PrettyPrinter Objects"
msgstr ""

#: ../Doc/library/pprint.rst:146
msgid ":class:`PrettyPrinter` instances have the following methods:"
msgstr ""

#: ../Doc/library/pprint.rst:151
msgid ""
"Return the formatted representation of *object*.  This takes into account "
"the options passed to the :class:`PrettyPrinter` constructor."
msgstr ""

#: ../Doc/library/pprint.rst:157
msgid ""
"Print the formatted representation of *object* on the configured stream, "
"followed by a newline."
msgstr ""

#: ../Doc/library/pprint.rst:160
msgid ""
"The following methods provide the implementations for the corresponding "
"functions of the same names.  Using these methods on an instance is slightly "
"more efficient since new :class:`PrettyPrinter` objects don't need to be "
"created."
msgstr ""

#: ../Doc/library/pprint.rst:170
msgid ""
"Determine if the formatted representation of the object is \"readable,\" or "
"can be used to reconstruct the value using :func:`eval`.  Note that this "
"returns ``False`` for recursive objects.  If the *depth* parameter of the :"
"class:`PrettyPrinter` is set and the object is deeper than allowed, this "
"returns ``False``."
msgstr ""

#: ../Doc/library/pprint.rst:179
msgid "Determine if the object requires a recursive representation."
msgstr ""

#: ../Doc/library/pprint.rst:181
msgid ""
"This method is provided as a hook to allow subclasses to modify the way "
"objects are converted to strings.  The default implementation uses the "
"internals of the :func:`saferepr` implementation."
msgstr ""

#: ../Doc/library/pprint.rst:188
msgid ""
"Returns three values: the formatted version of *object* as a string, a flag "
"indicating whether the result is readable, and a flag indicating whether "
"recursion was detected.  The first argument is the object to be presented.  "
"The second is a dictionary which contains the :func:`id` of objects that are "
"part of the current presentation context (direct and indirect containers for "
"*object* that are affecting the presentation) as the keys; if an object "
"needs to be presented which is already represented in *context*, the third "
"return value should be ``True``.  Recursive calls to the :meth:`format` "
"method should add additional entries for containers to this dictionary.  The "
"third argument, *maxlevels*, gives the requested limit to recursion; this "
"will be ``0`` if there is no requested limit.  This argument should be "
"passed unmodified to recursive calls. The fourth argument, *level*, gives "
"the current level; recursive calls should be passed a value less than that "
"of the current call."
msgstr ""

#: ../Doc/library/pprint.rst:207
msgid "pprint Example"
msgstr ""

#: ../Doc/library/pprint.rst:209
msgid ""
"This example demonstrates several uses of the :func:`pprint` function and "
"its parameters."
msgstr ""

#: ../Doc/library/profile.rst:5
msgid "The Python Profilers"
msgstr ""

# e4fa1390e1304a6eaa2cb5c6a908e0f7
#: ../Doc/library/profile.rst:12
msgid "**Source code:** :source:`Lib/profile.py` and :source:`Lib/pstats.py`"
msgstr ""

#: ../Doc/library/profile.rst:19
msgid "Introduction to the profilers"
msgstr ""

#: ../Doc/library/profile.rst:25
msgid ""
"A :dfn:`profiler` is a program that describes the run time performance of a "
"program, providing a variety of statistics.  This documentation describes "
"the profiler functionality provided in the modules :mod:`cProfile`, :mod:"
"`profile` and :mod:`pstats`.  This profiler provides :dfn:`deterministic "
"profiling` of Python programs.  It also provides a series of report "
"generation tools to allow users to rapidly examine the results of a profile "
"operation."
msgstr ""

# ae6b70a113704060a590bdf62496448d
#: ../Doc/library/profile.rst:33
msgid "The Python standard library provides three different profilers:"
msgstr ""

#: ../Doc/library/profile.rst:35
msgid ""
":mod:`cProfile` is recommended for most users; it's a C extension with "
"reasonable overhead that makes it suitable for profiling long-running "
"programs. Based on :mod:`lsprof`, contributed by Brett Rosen and Ted Czotter."
msgstr ""

# 0f31512bddb04b34afd4ad8d35826650
#: ../Doc/library/profile.rst:43
msgid ""
":mod:`profile`, a pure Python module whose interface is imitated by :mod:"
"`cProfile`.  Adds significant overhead to profiled programs. If you're "
"trying to extend the profiler in some way, the task might be easier with "
"this module."
msgstr ""

# f9736f71718f4d4b916bd330cf8ddb5d
#: ../Doc/library/profile.rst:51
msgid ""
":mod:`hotshot` was an experimental C module that focused on minimizing the "
"overhead of profiling, at the expense of longer data post-processing times.  "
"It is no longer maintained and may be dropped in a future version of Python."
msgstr ""

# 1fec4a87e706474591d7c6cdeb5efbc4
#: ../Doc/library/profile.rst:61
msgid ""
"The :mod:`profile` and :mod:`cProfile` modules export the same interface, so "
"they are mostly interchangeable; :mod:`cProfile` has a much lower overhead "
"but is newer and might not be available on all systems. :mod:`cProfile` is "
"really a compatibility layer on top of the internal :mod:`_lsprof` module.  "
"The :mod:`hotshot` module is reserved for specialized usage."
msgstr ""

#: ../Doc/library/profile.rst:72
msgid "Instant User's Manual"
msgstr ""

#: ../Doc/library/profile.rst:74
msgid ""
"This section is provided for users that \"don't want to read the manual.\" "
"It provides a very brief overview, and allows a user to rapidly perform "
"profiling on an existing application."
msgstr ""

#: ../Doc/library/profile.rst:78
msgid ""
"To profile an application with a main entry point of :func:`foo`, you would "
"add the following to your module::"
msgstr ""

#: ../Doc/library/profile.rst:84
msgid ""
"(Use :mod:`profile` instead of :mod:`cProfile` if the latter is not "
"available on your system.)"
msgstr ""

#: ../Doc/library/profile.rst:87
msgid ""
"The above action would cause :func:`foo` to be run, and a series of "
"informative lines (the profile) to be printed.  The above approach is most "
"useful when working with the interpreter.  If you would like to save the "
"results of a profile into a file for later examination, you can supply a "
"file name as the second argument to the :func:`run` function::"
msgstr ""

#: ../Doc/library/profile.rst:96
msgid ""
"The file :file:`cProfile.py` can also be invoked as a script to profile "
"another script.  For example::"
msgstr ""

#: ../Doc/library/profile.rst:101
msgid ""
":file:`cProfile.py` accepts two optional arguments on the command line::"
msgstr ""

#: ../Doc/library/profile.rst:105
msgid ""
"``-s`` only applies to standard output (``-o`` is not supplied). Look in "
"the :class:`Stats` documentation for valid sort values."
msgstr ""

#: ../Doc/library/profile.rst:108
msgid ""
"When you wish to review the profile, you should use the methods in the :mod:"
"`pstats` module.  Typically you would load the statistics data as follows::"
msgstr ""

#: ../Doc/library/profile.rst:114
msgid ""
"The class :class:`Stats` (the above code just created an instance of this "
"class) has a variety of methods for manipulating and printing the data that "
"was just read into ``p``.  When you ran :func:`cProfile.run` above, what was "
"printed was the result of three method calls::"
msgstr ""

#: ../Doc/library/profile.rst:121
msgid ""
"The first method removed the extraneous path from all the module names. The "
"second method sorted all the entries according to the standard module/line/"
"name string that is printed. The third method printed out all the "
"statistics.  You might try the following sort calls:"
msgstr ""

#: ../Doc/library/profile.rst:133
msgid ""
"The first call will actually sort the list by function name, and the second "
"call will print out the statistics.  The following are some interesting "
"calls to experiment with::"
msgstr ""

#: ../Doc/library/profile.rst:139
msgid ""
"This sorts the profile by cumulative time in a function, and then only "
"prints the ten most significant lines.  If you want to understand what "
"algorithms are taking time, the above line is what you would use."
msgstr ""

#: ../Doc/library/profile.rst:143
msgid ""
"If you were looking to see what functions were looping a lot, and taking a "
"lot of time, you would do::"
msgstr ""

#: ../Doc/library/profile.rst:148
msgid ""
"to sort according to time spent within each function, and then print the "
"statistics for the top ten functions."
msgstr ""

#: ../Doc/library/profile.rst:151
msgid "You might also try::"
msgstr ""

#: ../Doc/library/profile.rst:155
msgid ""
"This will sort all the statistics by file name, and then print out "
"statistics for only the class init methods (since they are spelled with "
"``__init__`` in them).  As one final example, you could try::"
msgstr ""

#: ../Doc/library/profile.rst:161
msgid ""
"This line sorts statistics with a primary key of time, and a secondary key "
"of cumulative time, and then prints out some of the statistics. To be "
"specific, the list is first culled down to 50% (re: ``.5``) of its original "
"size, then only lines containing ``init`` are maintained, and that sub-sub-"
"list is printed."
msgstr ""

#: ../Doc/library/profile.rst:166
msgid ""
"If you wondered what functions called the above functions, you could now "
"(``p`` is still sorted according to the last criteria) do::"
msgstr ""

#: ../Doc/library/profile.rst:171
msgid "and you would get a list of callers for each of the listed functions."
msgstr ""

#: ../Doc/library/profile.rst:173
msgid ""
"If you want more functionality, you're going to have to read the manual, or "
"guess what the following functions do::"
msgstr ""

#: ../Doc/library/profile.rst:179
msgid ""
"Invoked as a script, the :mod:`pstats` module is a statistics browser for "
"reading and examining profile dumps.  It has a simple line-oriented "
"interface (implemented using :mod:`cmd`) and interactive help."
msgstr ""

#: ../Doc/library/profile.rst:187
msgid "What Is Deterministic Profiling?"
msgstr ""

#: ../Doc/library/profile.rst:189
msgid ""
":dfn:`Deterministic profiling` is meant to reflect the fact that all "
"*function call*, *function return*, and *exception* events are monitored, "
"and precise timings are made for the intervals between these events (during "
"which time the user's code is executing).  In contrast, :dfn:`statistical "
"profiling` (which is not done by this module) randomly samples the effective "
"instruction pointer, and deduces where time is being spent.  The latter "
"technique traditionally involves less overhead (as the code does not need to "
"be instrumented), but provides only relative indications of where time is "
"being spent."
msgstr ""

#: ../Doc/library/profile.rst:198
msgid ""
"In Python, since there is an interpreter active during execution, the "
"presence of instrumented code is not required to do deterministic "
"profiling.  Python automatically provides a :dfn:`hook` (optional callback) "
"for each event.  In addition, the interpreted nature of Python tends to add "
"so much overhead to execution, that deterministic profiling tends to only "
"add small processing overhead in typical applications.  The result is that "
"deterministic profiling is not that expensive, yet provides extensive run "
"time statistics about the execution of a Python program."
msgstr ""

#: ../Doc/library/profile.rst:207
msgid ""
"Call count statistics can be used to identify bugs in code (surprising "
"counts), and to identify possible inline-expansion points (high call "
"counts).  Internal time statistics can be used to identify \"hot loops\" "
"that should be carefully optimized.  Cumulative time statistics should be "
"used to identify high level errors in the selection of algorithms.  Note "
"that the unusual handling of cumulative times in this profiler allows "
"statistics for recursive implementations of algorithms to be directly "
"compared to iterative implementations."
msgstr ""

#: ../Doc/library/profile.rst:218
msgid "Reference Manual -- :mod:`profile` and :mod:`cProfile`"
msgstr ""

#: ../Doc/library/profile.rst:224
msgid ""
"The primary entry point for the profiler is the global function :func:"
"`profile.run` (resp. :func:`cProfile.run`). It is typically used to create "
"any profile information.  The reports are formatted and printed using "
"methods of the class :class:`pstats.Stats`.  The following is a description "
"of all of these standard entry points and functions.  For a more in-depth "
"view of some of the code, consider reading the later section on Profiler "
"Extensions, which includes discussion of how to derive \"better\" profilers "
"from the classes presented, or reading the source code for these modules."
msgstr ""

# e7b214bdb04e4b33804f9ecc099c4997
#: ../Doc/library/profile.rst:236
msgid ""
"This function takes a single argument that can be passed to the :keyword:"
"`exec` statement, and an optional file name.  In all cases this routine "
"attempts to :keyword:`exec` its first argument, and gather profiling "
"statistics from the execution. If no file name is present, then this "
"function automatically prints a simple profiling report, sorted by the "
"standard name string (file/line/function-name) that is presented in each "
"line.  The following is a typical output from such a call::"
msgstr ""

#: ../Doc/library/profile.rst:253
msgid ""
"The first line indicates that 2706 calls were monitored.  Of those calls, "
"2004 were :dfn:`primitive`.  We define :dfn:`primitive` to mean that the "
"call was not induced via recursion. The next line: ``Ordered by: standard "
"name``, indicates that the text string in the far right column was used to "
"sort the output. The column headings include:"
msgstr ""

#: ../Doc/library/profile.rst:260
msgid "for the number of calls,"
msgstr ""

#: ../Doc/library/profile.rst:263
msgid ""
"for the total time spent in the given function (and excluding time made in "
"calls to sub-functions),"
msgstr ""

#: ../Doc/library/profile.rst:267
msgid "is the quotient of ``tottime`` divided by ``ncalls``"
msgstr ""

#: ../Doc/library/profile.rst:270
msgid ""
"is the total time spent in this and all subfunctions (from invocation till "
"exit). This figure is accurate *even* for recursive functions."
msgstr ""

#: ../Doc/library/profile.rst:274
msgid "is the quotient of ``cumtime`` divided by primitive calls"
msgstr ""

#: ../Doc/library/profile.rst:277
msgid "provides the respective data of each function"
msgstr ""

#: ../Doc/library/profile.rst:279
msgid ""
"When there are two numbers in the first column (for example, ``43/3``), then "
"the latter is the number of primitive calls, and the former is the actual "
"number of calls.  Note that when the function does not recurse, these two "
"values are the same, and only the single figure is printed."
msgstr ""

#: ../Doc/library/profile.rst:287
msgid ""
"This function is similar to :func:`run`, with added arguments to supply the "
"globals and locals dictionaries for the *command* string."
msgstr ""

# a62cde76cb394cd1b635030e93c74e3d
#: ../Doc/library/profile.rst:290
msgid "Analysis of the profiler data is done using the :class:`Stats` class."
msgstr ""

# 6fd29d6607934cba83ca9522b269080d
#: ../Doc/library/profile.rst:294
msgid "The :class:`Stats` class is defined in the :mod:`pstats` module."
msgstr ""

#: ../Doc/library/profile.rst:303
msgid ""
"This class constructor creates an instance of a \"statistics object\" from a "
"*filename* (or set of filenames).  :class:`Stats` objects are manipulated by "
"methods, in order to print useful reports.  You may specify an alternate "
"output stream by giving the keyword argument, ``stream``."
msgstr ""

#: ../Doc/library/profile.rst:308
msgid ""
"The file selected by the above constructor must have been created by the "
"corresponding version of :mod:`profile` or :mod:`cProfile`.  To be specific, "
"there is *no* file compatibility guaranteed with future versions of this "
"profiler, and there is no compatibility with files produced by other "
"profilers. If several files are provided, all the statistics for identical "
"functions will be coalesced, so that an overall view of several processes "
"can be considered in a single report.  If additional files need to be "
"combined with data in an existing :class:`Stats` object, the :meth:`add` "
"method can be used."
msgstr ""

#: ../Doc/library/profile.rst:326
msgid "The :class:`Stats` Class"
msgstr ""

#: ../Doc/library/profile.rst:328
msgid ":class:`Stats` objects have the following methods:"
msgstr ""

#: ../Doc/library/profile.rst:333
msgid ""
"This method for the :class:`Stats` class removes all leading path "
"information from file names.  It is very useful in reducing the size of the "
"printout to fit within (close to) 80 columns.  This method modifies the "
"object, and the stripped information is lost.  After performing a strip "
"operation, the object is considered to have its entries in a \"random\" "
"order, as it was just after object initialization and loading.  If :meth:"
"`strip_dirs` causes two function names to be indistinguishable (they are on "
"the same line of the same filename, and have the same function name), then "
"the statistics for these two entries are accumulated into a single entry."
msgstr ""

#: ../Doc/library/profile.rst:346
msgid ""
"This method of the :class:`Stats` class accumulates additional profiling "
"information into the current profiling object.  Its arguments should refer "
"to filenames created by the corresponding version of :func:`profile.run` or :"
"func:`cProfile.run`. Statistics for identically named (re: file, line, name) "
"functions are automatically accumulated into single function statistics."
msgstr ""

#: ../Doc/library/profile.rst:355
msgid ""
"Save the data loaded into the :class:`Stats` object to a file named "
"*filename*. The file is created if it does not exist, and is overwritten if "
"it already exists.  This is equivalent to the method of the same name on "
"the :class:`profile.Profile` and :class:`cProfile.Profile` classes."
msgstr ""

#: ../Doc/library/profile.rst:365
msgid ""
"This method modifies the :class:`Stats` object by sorting it according to "
"the supplied criteria.  The argument is typically a string identifying the "
"basis of a sort (example: ``'time'`` or ``'name'``)."
msgstr ""

#: ../Doc/library/profile.rst:369
msgid ""
"When more than one key is provided, then additional keys are used as "
"secondary criteria when there is equality in all keys selected before them.  "
"For example, ``sort_stats('name', 'file')`` will sort all the entries "
"according to their function name, and resolve all ties (identical function "
"names) by sorting by file name."
msgstr ""

#: ../Doc/library/profile.rst:375
msgid ""
"Abbreviations can be used for any key names, as long as the abbreviation is "
"unambiguous.  The following are the keys currently defined:"
msgstr ""

#: ../Doc/library/profile.rst:379
msgid "Valid Arg"
msgstr ""

#: ../Doc/library/profile.rst:381
msgid "``'calls'``"
msgstr ""

#: ../Doc/library/profile.rst:381
msgid "call count"
msgstr ""

#: ../Doc/library/profile.rst:383
msgid "``'cumulative'``"
msgstr ""

#: ../Doc/library/profile.rst:383
msgid "cumulative time"
msgstr ""

#: ../Doc/library/profile.rst:385
msgid "``'file'``"
msgstr ""

#: ../Doc/library/profile.rst:385 ../Doc/library/profile.rst:387
msgid "file name"
msgstr ""

#: ../Doc/library/profile.rst:387
msgid "``'module'``"
msgstr ""

#: ../Doc/library/profile.rst:389
msgid "``'pcalls'``"
msgstr ""

#: ../Doc/library/profile.rst:389
msgid "primitive call count"
msgstr ""

#: ../Doc/library/profile.rst:391
msgid "``'line'``"
msgstr ""

#: ../Doc/library/profile.rst:391
msgid "line number"
msgstr ""

#: ../Doc/library/profile.rst:393
msgid "``'name'``"
msgstr ""

#: ../Doc/library/profile.rst:393
msgid "function name"
msgstr ""

#: ../Doc/library/profile.rst:395
msgid "``'nfl'``"
msgstr ""

#: ../Doc/library/profile.rst:395
msgid "name/file/line"
msgstr ""

#: ../Doc/library/profile.rst:397
msgid "``'stdname'``"
msgstr ""

#: ../Doc/library/profile.rst:397
msgid "standard name"
msgstr ""

#: ../Doc/library/profile.rst:399
msgid "``'time'``"
msgstr ""

#: ../Doc/library/profile.rst:399
msgid "internal time"
msgstr ""

#: ../Doc/library/profile.rst:402
msgid ""
"Note that all sorts on statistics are in descending order (placing most time "
"consuming items first), where as name, file, and line number searches are in "
"ascending order (alphabetical). The subtle distinction between ``'nfl'`` and "
"``'stdname'`` is that the standard name is a sort of the name as printed, "
"which means that the embedded line numbers get compared in an odd way.  For "
"example, lines 3, 20, and 40 would (if the file names were the same) appear "
"in the string order 20, 3 and 40.  In contrast, ``'nfl'`` does a numeric "
"compare of the line numbers.  In fact, ``sort_stats('nfl')`` is the same as "
"``sort_stats('name', 'file', 'line')``."
msgstr ""

#: ../Doc/library/profile.rst:412
msgid ""
"For backward-compatibility reasons, the numeric arguments ``-1``, ``0``, "
"``1``, and ``2`` are permitted.  They are interpreted as ``'stdname'``, "
"``'calls'``, ``'time'``, and ``'cumulative'`` respectively.  If this old "
"style format (numeric) is used, only one sort key (the numeric key) will be "
"used, and additional arguments will be silently ignored."
msgstr ""

#: ../Doc/library/profile.rst:423
msgid ""
"This method for the :class:`Stats` class reverses the ordering of the basic "
"list within the object.  Note that by default ascending vs descending order "
"is properly selected based on the sort key of choice."
msgstr ""

#: ../Doc/library/profile.rst:432
msgid ""
"This method for the :class:`Stats` class prints out a report as described in "
"the :func:`profile.run` definition."
msgstr ""

#: ../Doc/library/profile.rst:435
msgid ""
"The order of the printing is based on the last :meth:`sort_stats` operation "
"done on the object (subject to caveats in :meth:`add` and :meth:"
"`strip_dirs`)."
msgstr ""

#: ../Doc/library/profile.rst:438
msgid ""
"The arguments provided (if any) can be used to limit the list down to the "
"significant entries.  Initially, the list is taken to be the complete set of "
"profiled functions.  Each restriction is either an integer (to select a "
"count of lines), or a decimal fraction between 0.0 and 1.0 inclusive (to "
"select a percentage of lines), or a regular expression (to pattern match the "
"standard name that is printed; as of Python 1.5b1, this uses the Perl-style "
"regular expression syntax defined by the :mod:`re` module).  If several "
"restrictions are provided, then they are applied sequentially.  For example::"
msgstr ""

#: ../Doc/library/profile.rst:449
msgid ""
"would first limit the printing to first 10% of list, and then only print "
"functions that were part of filename :file:`.\\*foo:`.  In contrast, the "
"command::"
msgstr ""

#: ../Doc/library/profile.rst:455
msgid ""
"would limit the list to all functions having file names :file:`.\\*foo:`, "
"and then proceed to only print the first 10% of them."
msgstr ""

#: ../Doc/library/profile.rst:461
msgid ""
"This method for the :class:`Stats` class prints a list of all functions that "
"called each function in the profiled database.  The ordering is identical to "
"that provided by :meth:`print_stats`, and the definition of the restricting "
"argument is also identical.  Each caller is reported on its own line.  The "
"format differs slightly depending on the profiler that produced the stats:"
msgstr ""

#: ../Doc/library/profile.rst:467
msgid ""
"With :mod:`profile`, a number is shown in parentheses after each caller to "
"show how many times this specific call was made.  For convenience, a second "
"non-parenthesized number repeats the cumulative time spent in the function "
"at the right."
msgstr ""

#: ../Doc/library/profile.rst:472
msgid ""
"With :mod:`cProfile`, each caller is preceded by three numbers: the number "
"of times this specific call was made, and the total and cumulative times "
"spent in the current function while it was invoked by this specific caller."
msgstr ""

#: ../Doc/library/profile.rst:479
msgid ""
"This method for the :class:`Stats` class prints a list of all function that "
"were called by the indicated function.  Aside from this reversal of "
"direction of calls (re: called vs was called by), the arguments and ordering "
"are identical to the :meth:`print_callers` method."
msgstr ""

#: ../Doc/library/profile.rst:490
msgid ""
"One limitation has to do with accuracy of timing information. There is a "
"fundamental problem with deterministic profilers involving accuracy.  The "
"most obvious restriction is that the underlying \"clock\" is only ticking at "
"a rate (typically) of about .001 seconds.  Hence no measurements will be "
"more accurate than the underlying clock.  If enough measurements are taken, "
"then the \"error\" will tend to average out. Unfortunately, removing this "
"first error induces a second source of error."
msgstr ""

#: ../Doc/library/profile.rst:498
msgid ""
"The second problem is that it \"takes a while\" from when an event is "
"dispatched until the profiler's call to get the time actually *gets* the "
"state of the clock.  Similarly, there is a certain lag when exiting the "
"profiler event handler from the time that the clock's value was obtained "
"(and then squirreled away), until the user's code is once again executing.  "
"As a result, functions that are called many times, or call many functions, "
"will typically accumulate this error. The error that accumulates in this "
"fashion is typically less than the accuracy of the clock (less than one "
"clock tick), but it *can* accumulate and become very significant."
msgstr ""

#: ../Doc/library/profile.rst:508
msgid ""
"The problem is more important with :mod:`profile` than with the lower-"
"overhead :mod:`cProfile`.  For this reason, :mod:`profile` provides a means "
"of calibrating itself for a given platform so that this error can be "
"probabilistically (on the average) removed. After the profiler is "
"calibrated, it will be more accurate (in a least square sense), but it will "
"sometimes produce negative numbers (when call counts are exceptionally low, "
"and the gods of probability work against you :-). )  Do *not* be alarmed by "
"negative numbers in the profile.  They should *only* appear if you have "
"calibrated your profiler, and the results are actually better than without "
"calibration."
msgstr ""

#: ../Doc/library/profile.rst:522
msgid "Calibration"
msgstr ""

#: ../Doc/library/profile.rst:524
msgid ""
"The profiler of the :mod:`profile` module subtracts a constant from each "
"event handling time to compensate for the overhead of calling the time "
"function, and socking away the results.  By default, the constant is 0. The "
"following procedure can be used to obtain a better constant for a given "
"platform (see discussion in section Limitations above). ::"
msgstr ""

#: ../Doc/library/profile.rst:535
msgid ""
"The method executes the number of Python calls given by the argument, "
"directly and again under the profiler, measuring the time for both. It then "
"computes the hidden overhead per profiler event, and returns that as a "
"float.  For example, on an 800 MHz Pentium running Windows 2000, and using "
"Python's time.clock() as the timer, the magical number is about 12.5e-6."
msgstr ""

#: ../Doc/library/profile.rst:541
msgid ""
"The object of this exercise is to get a fairly consistent result. If your "
"computer is *very* fast, or your timer function has poor resolution, you "
"might have to pass 100000, or even 1000000, to get consistent results."
msgstr ""

# 8fdd1a5be5484e218e76081bd34c1fd9
#: ../Doc/library/profile.rst:545
msgid ""
"When you have a consistent answer, there are three ways you can use it: [#]"
"_ ::"
msgstr ""

#: ../Doc/library/profile.rst:559
msgid ""
"If you have a choice, you are better off choosing a smaller constant, and "
"then your results will \"less often\" show up as negative in profile "
"statistics."
msgstr ""

#: ../Doc/library/profile.rst:566
msgid "Extensions --- Deriving Better Profilers"
msgstr ""

#: ../Doc/library/profile.rst:568
msgid ""
"The :class:`Profile` class of both modules, :mod:`profile` and :mod:"
"`cProfile`, were written so that derived classes could be developed to "
"extend the profiler. The details are not described here, as doing this "
"successfully requires an expert understanding of how the :class:`Profile` "
"class works internally.  Study the source code of the module carefully if "
"you want to pursue this."
msgstr ""

#: ../Doc/library/profile.rst:574
msgid ""
"If all you want to do is change how current time is determined (for example, "
"to force use of wall-clock time or elapsed process time), pass the timing "
"function you want to the :class:`Profile` class constructor::"
msgstr ""

#: ../Doc/library/profile.rst:580
msgid "The resulting profiler will then call :func:`your_time_func`."
msgstr ""

#: ../Doc/library/profile.rst:583
msgid ""
":func:`your_time_func` should return a single number, or a list of numbers "
"whose sum is the current time (like what :func:`os.times` returns).  If the "
"function returns a single time number, or the list of returned numbers has "
"length 2, then you will get an especially fast version of the dispatch "
"routine."
msgstr ""

#: ../Doc/library/profile.rst:588
msgid ""
"Be warned that you should calibrate the profiler class for the timer "
"function that you choose.  For most machines, a timer that returns a lone "
"integer value will provide the best results in terms of low overhead during "
"profiling. (:func:`os.times` is *pretty* bad, as it returns a tuple of "
"floating point values).  If you want to substitute a better timer in the "
"cleanest fashion, derive a class and hardwire a replacement dispatch method "
"that best handles your timer call, along with the appropriate calibration "
"constant."
msgstr ""

# e570fdc65ae842e39c388a3490ce704d
#: ../Doc/library/profile.rst:597
msgid ""
":func:`your_time_func` should return a single number.  If it returns plain "
"integers, you can also invoke the class constructor with a second argument "
"specifying the real duration of one unit of time.  For example, if :func:"
"`your_integer_time_func` returns times measured in thousands of seconds, you "
"would construct the :class:`Profile` instance as follows::"
msgstr ""

#: ../Doc/library/profile.rst:605
msgid ""
"As the :mod:`cProfile.Profile` class cannot be calibrated, custom timer "
"functions should be used with care and should be as fast as possible.  For "
"the best results with a custom timer, it might be necessary to hard-code it "
"in the C source of the internal :mod:`_lsprof` module."
msgstr ""

# 0e94f5fa35d94ed2a5568d7f9ec2c824
#: ../Doc/library/profile.rst:613
msgid ""
"Prior to Python 2.2, it was necessary to edit the profiler source code to "
"embed the bias as a literal number.  You still can, but that method is no "
"longer described, because no longer needed."
msgstr ""

#: ../Doc/library/pty.rst:3
msgid ":mod:`pty` --- Pseudo-terminal utilities"
msgstr ""

#: ../Doc/library/pty.rst:12
msgid ""
"The :mod:`pty` module defines operations for handling the pseudo-terminal "
"concept: starting another process and being able to write to and read from "
"its controlling terminal programmatically."
msgstr ""

#: ../Doc/library/pty.rst:16
msgid ""
"Because pseudo-terminal handling is highly platform dependent, there is code "
"to do it only for Linux. (The Linux code is supposed to work on other "
"platforms, but hasn't been tested yet.)"
msgstr ""

#: ../Doc/library/pty.rst:20
msgid "The :mod:`pty` module defines the following functions:"
msgstr ""

#: ../Doc/library/pty.rst:25
msgid ""
"Fork. Connect the child's controlling terminal to a pseudo-terminal. Return "
"value is ``(pid, fd)``. Note that the child  gets *pid* 0, and the *fd* is "
"*invalid*. The parent's return value is the *pid* of the child, and *fd* is "
"a file descriptor connected to the child's controlling terminal (and also to "
"the child's standard input and output)."
msgstr ""

#: ../Doc/library/pty.rst:34
msgid ""
"Open a new pseudo-terminal pair, using :func:`os.openpty` if possible, or "
"emulation code for generic Unix systems. Return a pair of file descriptors ``"
"(master, slave)``, for the master and the slave end, respectively."
msgstr ""

#: ../Doc/library/pty.rst:41
msgid ""
"Spawn a process, and connect its controlling terminal with the current "
"process's standard io. This is often used to baffle programs which insist on "
"reading from the controlling terminal."
msgstr ""

#: ../Doc/library/pty.rst:45
msgid ""
"The functions *master_read* and *stdin_read* should be functions which read "
"from a file descriptor. The defaults try to read 1024 bytes each time they "
"are called."
msgstr ""

#: ../Doc/library/pwd.rst:3
msgid ":mod:`pwd` --- The password database"
msgstr ""

#: ../Doc/library/pwd.rst:10
msgid ""
"This module provides access to the Unix user account and password database.  "
"It is available on all Unix versions."
msgstr ""

#: ../Doc/library/pwd.rst:13
msgid ""
"Password database entries are reported as a tuple-like object, whose "
"attributes correspond to the members of the ``passwd`` structure (Attribute "
"field below, see ``<pwd.h>``):"
msgstr ""

#: ../Doc/library/pwd.rst:20
msgid "``pw_name``"
msgstr ""

#: ../Doc/library/pwd.rst:20 ../Doc/library/spwd.rst:25
msgid "Login name"
msgstr ""

#: ../Doc/library/pwd.rst:22
msgid "``pw_passwd``"
msgstr ""

#: ../Doc/library/pwd.rst:22
msgid "Optional encrypted password"
msgstr ""

#: ../Doc/library/pwd.rst:24
msgid "``pw_uid``"
msgstr ""

#: ../Doc/library/pwd.rst:24
msgid "Numerical user ID"
msgstr ""

#: ../Doc/library/pwd.rst:26
msgid "``pw_gid``"
msgstr ""

#: ../Doc/library/pwd.rst:26
msgid "Numerical group ID"
msgstr ""

#: ../Doc/library/pwd.rst:28
msgid "``pw_gecos``"
msgstr ""

#: ../Doc/library/pwd.rst:28
msgid "User name or comment field"
msgstr ""

#: ../Doc/library/pwd.rst:30
msgid "``pw_dir``"
msgstr ""

#: ../Doc/library/pwd.rst:30
msgid "User home directory"
msgstr ""

#: ../Doc/library/pwd.rst:32 ../Doc/library/spwd.rst:40
#: ../Doc/library/time.rst:416
msgid "6"
msgstr ""

#: ../Doc/library/pwd.rst:32
msgid "``pw_shell``"
msgstr ""

#: ../Doc/library/pwd.rst:32
msgid "User command interpreter"
msgstr ""

#: ../Doc/library/pwd.rst:35
msgid ""
"The uid and gid items are integers, all others are strings. :exc:`KeyError` "
"is raised if the entry asked for cannot be found."
msgstr ""

#: ../Doc/library/pwd.rst:42
msgid ""
"In traditional Unix the field ``pw_passwd`` usually contains a password "
"encrypted with a DES derived algorithm (see module :mod:`crypt`).  However "
"most modern unices  use a so-called *shadow password* system.  On those "
"unices the *pw_passwd* field only contains an asterisk (``'*'``) or the  "
"letter ``'x'`` where the encrypted password is stored in a file :file:`/etc/"
"shadow` which is not world readable.  Whether the *pw_passwd* field contains "
"anything useful is system-dependent.  If available, the :mod:`spwd` module "
"should be used where access to the encrypted password is required."
msgstr ""

#: ../Doc/library/pwd.rst:56
msgid "Return the password database entry for the given numeric user ID."
msgstr ""

#: ../Doc/library/pwd.rst:61
msgid "Return the password database entry for the given user name."
msgstr ""

#: ../Doc/library/pwd.rst:66
msgid ""
"Return a list of all available password database entries, in arbitrary order."
msgstr ""

#: ../Doc/library/pwd.rst:72 ../Doc/library/spwd.rst:70
msgid "An interface to the group database, similar to this."
msgstr ""

#: ../Doc/library/py_compile.rst:2
msgid ":mod:`py_compile` --- Compile Python source files"
msgstr ""

# 36d178efaaa34439bd1fa1c429b3831e
#: ../Doc/library/py_compile.rst:11
msgid "**Source code:** :source:`Lib/py_compile.py`"
msgstr ""

#: ../Doc/library/py_compile.rst:15
msgid ""
"The :mod:`py_compile` module provides a function to generate a byte-code "
"file from a source file, and another function used when the module source "
"file is invoked as a script."
msgstr ""

#: ../Doc/library/py_compile.rst:19
msgid ""
"Though not often needed, this function can be useful when installing modules "
"for shared use, especially if some of the users may not have permission to "
"write the byte-code cache files in the directory containing the source code."
msgstr ""

#: ../Doc/library/py_compile.rst:26
msgid ""
"Exception raised when an error occurs while attempting to compile the file."
msgstr ""

# e2a8ac0632f5452bb2bb5e5d4952baad
#: ../Doc/library/py_compile.rst:31
msgid ""
"Compile a source file to byte-code and write out the byte-code cache  file.  "
"The source code is loaded from the file name *file*.  The  byte-code is "
"written to *cfile*, which defaults to *file* ``+`` ``'c'`` (``'o'`` if "
"optimization is enabled in the current interpreter).  If *dfile* is "
"specified, it is used as the name of the source file in error messages "
"instead of *file*.  If *doraise* is true, a :exc:`PyCompileError` is raised "
"when an error is encountered while compiling *file*. If *doraise* is false "
"(the default), an error string is written to ``sys.stderr``, but no "
"exception is raised."
msgstr ""

# be5e634c9d4e4275b21663a9d86d5668
#: ../Doc/library/py_compile.rst:43
msgid ""
"Compile several source files.  The files named in *args* (or on the command "
"line, if *args* is not specified) are compiled and the resulting bytecode is "
"cached in the normal manner.  This function does not search a directory "
"structure to locate source files; it only compiles files named explicitly. "
"If ``'-'`` is the only parameter in args, the list of files is taken from "
"standard input."
msgstr ""

#: ../Doc/library/py_compile.rst:53
msgid ""
"When this module is run as a script, the :func:`main` is used to compile all "
"the files named on the command line.  The exit status is nonzero if one of "
"the files could not be compiled."
msgstr ""

#: ../Doc/library/py_compile.rst:64
msgid "Utilities to compile all Python source files in a directory tree."
msgstr ""

#: ../Doc/library/pyclbr.rst:2
msgid ":mod:`pyclbr` --- Python class browser support"
msgstr ""

# e526c623dacf45c19453be7be85d6fd1
#: ../Doc/library/pyclbr.rst:8
msgid "**Source code:** :source:`Lib/pyclbr.py`"
msgstr ""

#: ../Doc/library/pyclbr.rst:12
msgid ""
"The :mod:`pyclbr` module can be used to determine some limited information "
"about the classes, methods and top-level functions defined in a module.  The "
"information provided is sufficient to implement a traditional three-pane "
"class browser.  The information is extracted from the source code rather "
"than by importing the module, so this module is safe to use with untrusted "
"code.  This restriction makes it impossible to use this module with modules "
"not implemented in Python, including all standard and optional extension "
"modules."
msgstr ""

#: ../Doc/library/pyclbr.rst:24
msgid ""
"Read a module and return a dictionary mapping class names to class "
"descriptor objects.  The parameter *module* should be the name of a module "
"as a string; it may be the name of a module within a package.  The *path* "
"parameter should be a sequence, and is used to augment the value of ``sys."
"path``, which is used to locate module source code."
msgstr ""

#: ../Doc/library/pyclbr.rst:33
msgid ""
"Like :func:`readmodule`, but the returned dictionary, in addition to mapping "
"class names to class descriptor objects, also maps top-level function names "
"to function descriptor objects.  Moreover, if the module being read is a "
"package, the key ``'__path__'`` in the returned dictionary has as its value "
"a list which contains the package search path."
msgstr ""

#: ../Doc/library/pyclbr.rst:44
msgid "Class Objects"
msgstr ""

# eded773e63e7480287786be11cb3687f
#: ../Doc/library/pyclbr.rst:46
msgid ""
"The :class:`Class` objects used as values in the dictionary returned by :"
"func:`readmodule` and :func:`readmodule_ex` provide the following data "
"attributes:"
msgstr ""

#: ../Doc/library/pyclbr.rst:53
msgid ""
"The name of the module defining the class described by the class descriptor."
msgstr ""

#: ../Doc/library/pyclbr.rst:58
msgid "The name of the class."
msgstr ""

#: ../Doc/library/pyclbr.rst:63
msgid ""
"A list of :class:`Class` objects which describe the immediate base classes "
"of the class being described.  Classes which are named as superclasses but "
"which are not discoverable by :func:`readmodule` are listed as a string with "
"the class name instead of as :class:`Class` objects."
msgstr ""

#: ../Doc/library/pyclbr.rst:72
msgid "A dictionary mapping method names to line numbers."
msgstr ""

#: ../Doc/library/pyclbr.rst:77
msgid "Name of the file containing the ``class`` statement defining the class."
msgstr ""

#: ../Doc/library/pyclbr.rst:82
msgid ""
"The line number of the ``class`` statement within the file named by :attr:"
"`~Class.file`."
msgstr ""

#: ../Doc/library/pyclbr.rst:89
msgid "Function Objects"
msgstr ""

# 3adf38f4ee944624be9879bb5c74de99
#: ../Doc/library/pyclbr.rst:91
msgid ""
"The :class:`Function` objects used as values in the dictionary returned by :"
"func:`readmodule_ex` provide the following attributes:"
msgstr ""

#: ../Doc/library/pyclbr.rst:97
msgid ""
"The name of the module defining the function described by the function "
"descriptor."
msgstr ""

#: ../Doc/library/pyclbr.rst:103
msgid "The name of the function."
msgstr ""

#: ../Doc/library/pyclbr.rst:108
msgid ""
"Name of the file containing the ``def`` statement defining the function."
msgstr ""

#: ../Doc/library/pyclbr.rst:113
msgid ""
"The line number of the ``def`` statement within the file named by :attr:"
"`~Function.file`."
msgstr ""

#: ../Doc/library/pydoc.rst:2
msgid ":mod:`pydoc` --- Documentation generator and online help system"
msgstr ""

# 9f202979ded045bd82e80d77e48e00ce
#: ../Doc/library/pydoc.rst:17
msgid "**Source code:** :source:`Lib/pydoc.py`"
msgstr ""

#: ../Doc/library/pydoc.rst:21
msgid ""
"The :mod:`pydoc` module automatically generates documentation from Python "
"modules.  The documentation can be presented as pages of text on the "
"console, served to a Web browser, or saved to HTML files."
msgstr ""

#: ../Doc/library/pydoc.rst:25
msgid ""
"The built-in function :func:`help` invokes the online help system in the "
"interactive interpreter, which uses :mod:`pydoc` to generate its "
"documentation as text on the console.  The same text documentation can also "
"be viewed from outside the Python interpreter by running :program:`pydoc` as "
"a script at the operating system's command prompt. For example, running ::"
msgstr ""

#: ../Doc/library/pydoc.rst:33
msgid ""
"at a shell prompt will display documentation on the :mod:`sys` module, in a "
"style similar to the manual pages shown by the Unix :program:`man` command.  "
"The argument to :program:`pydoc` can be the name of a function, module, or "
"package, or a dotted reference to a class, method, or function within a "
"module or module in a package.  If the argument to :program:`pydoc` looks "
"like a path (that is, it contains the path separator for your operating "
"system, such as a slash in Unix), and refers to an existing Python source "
"file, then documentation is produced for that file."
msgstr ""

#: ../Doc/library/pydoc.rst:44
msgid ""
"In order to find objects and their documentation, :mod:`pydoc` imports the "
"module(s) to be documented.  Therefore, any code on module level will be "
"executed on that occasion.  Use an ``if __name__ == '__main__':`` guard to "
"only execute code when a file is invoked as a script and not just imported."
msgstr ""

# 05e242a13b3348af8cca9eedc82631b0
#: ../Doc/library/pydoc.rst:49
msgid ""
"Specifying a ``-w`` flag before the argument will cause HTML documentation "
"to be written out to a file in the current directory, instead of displaying "
"text on the console."
msgstr ""

# a86f7362c3ea4f3bad2f678a28ed283a
#: ../Doc/library/pydoc.rst:53
msgid ""
"Specifying a ``-k`` flag before the argument will search the synopsis lines "
"of all available modules for the keyword given as the argument, again in a "
"manner similar to the Unix :program:`man` command.  The synopsis line of a "
"module is the first line of its documentation string."
msgstr ""

# e2d8d1d80c5b419eac8a460b044f04b1
#: ../Doc/library/pydoc.rst:58
msgid ""
"You can also use :program:`pydoc` to start an HTTP server on the local "
"machine that will serve documentation to visiting Web browsers. :program:"
"`pydoc -p 1234` will start a HTTP server on port 1234, allowing you to "
"browse the documentation at ``http://localhost:1234/`` in your preferred Web "
"browser. :program:`pydoc -g` will start the server and additionally bring up "
"a small :mod:`Tkinter`\\ -based graphical interface to help you search for "
"documentation pages."
msgstr ""

# fe16f4c3c1aa4be69e690a2af6906b92
#: ../Doc/library/pydoc.rst:66
msgid ""
"When :program:`pydoc` generates documentation, it uses the current "
"environment and path to locate modules.  Thus, invoking :program:`pydoc "
"spam` documents precisely the version of the module you would get if you "
"started the Python interpreter and typed ``import spam``."
msgstr ""

#: ../Doc/library/pydoc.rst:71
msgid ""
"Module docs for core modules are assumed to reside in http://docs.python.org/"
"library/.  This can be overridden by setting the :envvar:`PYTHONDOCS` "
"environment variable to a different URL or to a local directory containing "
"the Library Reference Manual pages."
msgstr ""

#: ../Doc/library/pyexpat.rst:3
msgid ":mod:`xml.parsers.expat` --- Fast XML parsing using Expat"
msgstr ""

#: ../Doc/library/pyexpat.rst:21
msgid ""
"The :mod:`xml.parsers.expat` module is a Python interface to the Expat non-"
"validating XML parser. The module provides a single extension type, :class:"
"`xmlparser`, that represents the current state of an XML parser.  After an :"
"class:`xmlparser` object has been created, various attributes of the object "
"can be set to handler functions.  When an XML document is then fed to the "
"parser, the handler functions are called for the character data and markup "
"in the XML document."
msgstr ""

#: ../Doc/library/pyexpat.rst:31
msgid ""
"This module uses the :mod:`pyexpat` module to provide access to the Expat "
"parser.  Direct use of the :mod:`pyexpat` module is deprecated."
msgstr ""

#: ../Doc/library/pyexpat.rst:34
msgid "This module provides one exception and one type object:"
msgstr ""

#: ../Doc/library/pyexpat.rst:39
msgid ""
"The exception raised when Expat reports an error.  See section :ref:"
"`expaterror-objects` for more information on interpreting Expat errors."
msgstr ""

#: ../Doc/library/pyexpat.rst:45
msgid "Alias for :exc:`ExpatError`."
msgstr ""

#: ../Doc/library/pyexpat.rst:50
msgid "The type of the return values from the :func:`ParserCreate` function."
msgstr ""

#: ../Doc/library/pyexpat.rst:52
msgid "The :mod:`xml.parsers.expat` module contains two functions:"
msgstr ""

#: ../Doc/library/pyexpat.rst:57
msgid "Returns an explanatory string for a given error number *errno*."
msgstr ""

#: ../Doc/library/pyexpat.rst:62
msgid ""
"Creates and returns a new :class:`xmlparser` object.   *encoding*, if "
"specified, must be a string naming the encoding  used by the XML data.  "
"Expat doesn't support as many encodings as Python does, and its repertoire "
"of encodings can't be extended; it supports UTF-8, UTF-16, ISO-8859-1 "
"(Latin1), and ASCII.  If *encoding* [1]_ is given it will override the "
"implicit or explicit encoding of the document."
msgstr ""

#: ../Doc/library/pyexpat.rst:69
msgid ""
"Expat can optionally do XML namespace processing for you, enabled by "
"providing a value for *namespace_separator*.  The value must be a one-"
"character string; a :exc:`ValueError` will be raised if the string has an "
"illegal length (``None`` is considered the same as omission).  When "
"namespace processing is enabled, element type names and attribute names that "
"belong to a namespace will be expanded.  The element name passed to the "
"element handlers :attr:`StartElementHandler` and :attr:`EndElementHandler` "
"will be the concatenation of the namespace URI, the namespace separator "
"character, and the local part of the name.  If the namespace separator is a "
"zero byte (``chr(0)``) then the namespace URI and the local part will be "
"concatenated without any separator."
msgstr ""

#: ../Doc/library/pyexpat.rst:81
msgid ""
"For example, if *namespace_separator* is set to a space character (``' '``) "
"and the following document is parsed::"
msgstr ""

#: ../Doc/library/pyexpat.rst:91
msgid ""
":attr:`StartElementHandler` will receive the following strings for each "
"element::"
msgstr ""

#: ../Doc/library/pyexpat.rst:102
msgid "Home page of the Expat project."
msgstr ""

#: ../Doc/library/pyexpat.rst:108 ../Doc/library/xml.etree.elementtree.rst:878
msgid "XMLParser Objects"
msgstr ""

#: ../Doc/library/pyexpat.rst:110
msgid ":class:`xmlparser` objects have the following methods:"
msgstr ""

#: ../Doc/library/pyexpat.rst:115
msgid ""
"Parses the contents of the string *data*, calling the appropriate handler "
"functions to process the parsed data.  *isfinal* must be true on the final "
"call to this method.  *data* can be the empty string at any time."
msgstr ""

#: ../Doc/library/pyexpat.rst:122
msgid ""
"Parse XML data reading from the object *file*.  *file* only needs to provide "
"the ``read(nbytes)`` method, returning the empty string when there's no more "
"data."
msgstr ""

#: ../Doc/library/pyexpat.rst:129
msgid ""
"Sets the base to be used for resolving relative URIs in system identifiers "
"in declarations.  Resolving relative identifiers is left to the application: "
"this value will be passed through as the *base* argument to the :func:"
"`ExternalEntityRefHandler`, :func:`NotationDeclHandler`, and :func:"
"`UnparsedEntityDeclHandler` functions."
msgstr ""

#: ../Doc/library/pyexpat.rst:138
msgid ""
"Returns a string containing the base set by a previous call to :meth:"
"`SetBase`, or ``None`` if  :meth:`SetBase` hasn't been called."
msgstr ""

#: ../Doc/library/pyexpat.rst:144
msgid ""
"Returns the input data that generated the current event as a string. The "
"data is in the encoding of the entity which contains the text. When called "
"while an event handler is not active, the return value is ``None``."
msgstr ""

# 400dd796fa504076b302f87142baa7be
#: ../Doc/library/pyexpat.rst:153
msgid ""
"Create a \"child\" parser which can be used to parse an external parsed "
"entity referred to by content parsed by the parent parser.  The *context* "
"parameter should be the string passed to the :meth:"
"`ExternalEntityRefHandler` handler function, described below. The child "
"parser is created with the :attr:`ordered_attributes`, :attr:"
"`returns_unicode` and :attr:`specified_attributes` set to the values of this "
"parser."
msgstr ""

# abdfce836481486e8736035760c85dd6
#: ../Doc/library/pyexpat.rst:162
msgid ""
"Control parsing of parameter entities (including the external DTD subset). "
"Possible *flag* values are :const:`XML_PARAM_ENTITY_PARSING_NEVER`, :const:"
"`XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE` and :const:"
"`XML_PARAM_ENTITY_PARSING_ALWAYS`.  Return true if setting the flag was "
"successful."
msgstr ""

#: ../Doc/library/pyexpat.rst:170
msgid ""
"Calling this with a true value for *flag* (the default) will cause Expat to "
"call the :attr:`ExternalEntityRefHandler` with :const:`None` for all "
"arguments to allow an alternate DTD to be loaded.  If the document does not "
"contain a document type declaration, the :attr:`ExternalEntityRefHandler` "
"will still be called, but the :attr:`StartDoctypeDeclHandler` and :attr:"
"`EndDoctypeDeclHandler` will not be called."
msgstr ""

#: ../Doc/library/pyexpat.rst:177
msgid ""
"Passing a false value for *flag* will cancel a previous call that passed a "
"true value, but otherwise has no effect."
msgstr ""

#: ../Doc/library/pyexpat.rst:180
msgid ""
"This method can only be called before the :meth:`Parse` or :meth:`ParseFile` "
"methods are called; calling it after either of those have been called "
"causes :exc:`ExpatError` to be raised with the :attr:`code` attribute set "
"to :const:`errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING`."
msgstr ""

#: ../Doc/library/pyexpat.rst:187
msgid ":class:`xmlparser` objects have the following attributes:"
msgstr ""

#: ../Doc/library/pyexpat.rst:192
msgid ""
"The size of the buffer used when :attr:`buffer_text` is true. A new buffer "
"size can be set by assigning a new integer value to this attribute. When the "
"size is changed, the buffer will be flushed."
msgstr ""

#: ../Doc/library/pyexpat.rst:204
msgid ""
"Setting this to true causes the :class:`xmlparser` object to buffer textual "
"content returned by Expat to avoid multiple calls to the :meth:"
"`CharacterDataHandler` callback whenever possible.  This can improve "
"performance substantially since Expat normally breaks character data into "
"chunks at every line ending.  This attribute is false by default, and may be "
"changed at any time."
msgstr ""

#: ../Doc/library/pyexpat.rst:216
msgid ""
"If :attr:`buffer_text` is enabled, the number of bytes stored in the buffer. "
"These bytes represent UTF-8 encoded text.  This attribute has no meaningful "
"interpretation when :attr:`buffer_text` is false."
msgstr ""

#: ../Doc/library/pyexpat.rst:225
msgid ""
"Setting this attribute to a non-zero integer causes the attributes to be "
"reported as a list rather than a dictionary.  The attributes are presented "
"in the order found in the document text.  For each attribute, two list "
"entries are presented: the attribute name and the attribute value.  (Older "
"versions of this module also used this format.)  By default, this attribute "
"is false; it may be changed at any time."
msgstr ""

# c20cc67646ec493a8e0ba555ec20e4b1
#: ../Doc/library/pyexpat.rst:237
msgid ""
"If this attribute is set to a non-zero integer, the handler functions will "
"be passed Unicode strings.  If :attr:`returns_unicode` is :const:`False`, 8-"
"bit strings containing UTF-8 encoded data will be passed to the handlers.  "
"This is :const:`True` by default when Python is built with Unicode support."
msgstr ""

#: ../Doc/library/pyexpat.rst:248
msgid ""
"If set to a non-zero integer, the parser will report only those attributes "
"which were specified in the document instance and not those which were "
"derived from attribute declarations.  Applications which set this need to be "
"especially careful to use what additional information is available from the "
"declarations as needed to comply with the standards for the behavior of XML "
"processors.  By default, this attribute is false; it may be changed at any "
"time."
msgstr ""

#: ../Doc/library/pyexpat.rst:257
msgid ""
"The following attributes contain values relating to the most recent error "
"encountered by an :class:`xmlparser` object, and will only have correct "
"values once a call to :meth:`Parse` or :meth:`ParseFile` has raised a :exc:"
"`xml.parsers.expat.ExpatError` exception."
msgstr ""

#: ../Doc/library/pyexpat.rst:265
msgid "Byte index at which an error occurred."
msgstr ""

#: ../Doc/library/pyexpat.rst:270
msgid ""
"Numeric code specifying the problem.  This value can be passed to the :func:"
"`ErrorString` function, or compared to one of the constants defined in the "
"``errors`` object."
msgstr ""

#: ../Doc/library/pyexpat.rst:277
msgid "Column number at which an error occurred."
msgstr ""

#: ../Doc/library/pyexpat.rst:282
msgid "Line number at which an error occurred."
msgstr ""

#: ../Doc/library/pyexpat.rst:284
msgid ""
"The following attributes contain values relating to the current parse "
"location in an :class:`xmlparser` object.  During a callback reporting a "
"parse event they indicate the location of the first of the sequence of "
"characters that generated the event.  When called outside of a callback, the "
"position indicated will be just past the last parse event (regardless of "
"whether there was an associated callback)."
msgstr ""

#: ../Doc/library/pyexpat.rst:296
msgid "Current byte index in the parser input."
msgstr ""

#: ../Doc/library/pyexpat.rst:301
msgid "Current column number in the parser input."
msgstr ""

#: ../Doc/library/pyexpat.rst:306
msgid "Current line number in the parser input."
msgstr ""

#: ../Doc/library/pyexpat.rst:308
msgid ""
"Here is the list of handlers that can be set.  To set a handler on an :class:"
"`xmlparser` object *o*, use ``o.handlername = func``.  *handlername* must be "
"taken from the following list, and *func* must be a callable object "
"accepting the correct number of arguments.  The arguments are all strings, "
"unless otherwise stated."
msgstr ""

# e6543be0ca9b48aab52f224b618121d2
#: ../Doc/library/pyexpat.rst:317
msgid ""
"Called when the XML declaration is parsed.  The XML declaration is the "
"(optional) declaration of the applicable version of the XML recommendation, "
"the encoding of the document text, and an optional \"standalone\" "
"declaration. *version* and *encoding* will be strings of the type dictated "
"by the :attr:`returns_unicode` attribute, and *standalone* will be ``1`` if "
"the document is declared standalone, ``0`` if it is declared not to be "
"standalone, or ``-1`` if the standalone clause was omitted. This is only "
"available with Expat version 1.95.0 or newer."
msgstr ""

#: ../Doc/library/pyexpat.rst:331
msgid ""
"Called when Expat begins parsing the document type declaration (``<!"
"DOCTYPE ...``).  The *doctypeName* is provided exactly as presented.  The "
"*systemId* and *publicId* parameters give the system and public identifiers "
"if specified, or ``None`` if omitted.  *has_internal_subset* will be true if "
"the document contains and internal document declaration subset. This "
"requires Expat version 1.2 or newer."
msgstr ""

#: ../Doc/library/pyexpat.rst:341
msgid ""
"Called when Expat is done parsing the document type declaration. This "
"requires Expat version 1.2 or newer."
msgstr ""

#: ../Doc/library/pyexpat.rst:347
msgid ""
"Called once for each element type declaration.  *name* is the name of the "
"element type, and *model* is a representation of the content model."
msgstr ""

#: ../Doc/library/pyexpat.rst:353
msgid ""
"Called for each declared attribute for an element type.  If an attribute "
"list declaration declares three attributes, this handler is called three "
"times, once for each attribute.  *elname* is the name of the element to "
"which the declaration applies and *attname* is the name of the attribute "
"declared.  The attribute type is a string passed as *type*; the possible "
"values are ``'CDATA'``, ``'ID'``, ``'IDREF'``, ... *default* gives the "
"default value for the attribute used when the attribute is not specified by "
"the document instance, or ``None`` if there is no default value "
"(``#IMPLIED`` values).  If the attribute is required to be given in the "
"document instance, *required* will be true. This requires Expat version "
"1.95.0 or newer."
msgstr ""

#: ../Doc/library/pyexpat.rst:367
msgid ""
"Called for the start of every element.  *name* is a string containing the "
"element name, and *attributes* is a dictionary mapping attribute names to "
"their values."
msgstr ""

#: ../Doc/library/pyexpat.rst:374
msgid "Called for the end of every element."
msgstr ""

#: ../Doc/library/pyexpat.rst:379
msgid "Called for every processing instruction."
msgstr ""

#: ../Doc/library/pyexpat.rst:384
msgid ""
"Called for character data.  This will be called for normal character data, "
"CDATA marked content, and ignorable whitespace.  Applications which must "
"distinguish these cases can use the :attr:`StartCdataSectionHandler`, :attr:"
"`EndCdataSectionHandler`, and :attr:`ElementDeclHandler` callbacks to "
"collect the required information."
msgstr ""

#: ../Doc/library/pyexpat.rst:393
msgid ""
"Called for unparsed (NDATA) entity declarations.  This is only present for "
"version 1.2 of the Expat library; for more recent versions, use :attr:"
"`EntityDeclHandler` instead.  (The underlying function in the Expat library "
"has been declared obsolete.)"
msgstr ""

#: ../Doc/library/pyexpat.rst:401
msgid ""
"Called for all entity declarations.  For parameter and internal entities, "
"*value* will be a string giving the declared contents of the entity; this "
"will be ``None`` for external entities.  The *notationName* parameter will "
"be ``None`` for parsed entities, and the name of the notation for unparsed "
"entities. *is_parameter_entity* will be true if the entity is a parameter "
"entity or false for general entities (most applications only need to be "
"concerned with general entities). This is only available starting with "
"version 1.95.0 of the Expat library."
msgstr ""

#: ../Doc/library/pyexpat.rst:415
msgid ""
"Called for notation declarations.  *notationName*, *base*, and *systemId*, "
"and *publicId* are strings if given.  If the public identifier is omitted, "
"*publicId* will be ``None``."
msgstr ""

#: ../Doc/library/pyexpat.rst:422
msgid ""
"Called when an element contains a namespace declaration.  Namespace "
"declarations are processed before the :attr:`StartElementHandler` is called "
"for the element on which declarations are placed."
msgstr ""

#: ../Doc/library/pyexpat.rst:429
msgid ""
"Called when the closing tag is reached for an element  that contained a "
"namespace declaration.  This is called once for each namespace declaration "
"on the element in the reverse of the order for which the :attr:"
"`StartNamespaceDeclHandler` was called to indicate the start of each "
"namespace declaration's scope.  Calls to this handler are made after the "
"corresponding :attr:`EndElementHandler` for the end of the element."
msgstr ""

#: ../Doc/library/pyexpat.rst:439
msgid ""
"Called for comments.  *data* is the text of the comment, excluding the "
"leading '``<!-``\\ ``-``' and trailing '``-``\\ ``->``'."
msgstr ""

#: ../Doc/library/pyexpat.rst:445
msgid ""
"Called at the start of a CDATA section.  This and :attr:"
"`EndCdataSectionHandler` are needed to be able to identify the syntactical "
"start and end for CDATA sections."
msgstr ""

#: ../Doc/library/pyexpat.rst:452
msgid "Called at the end of a CDATA section."
msgstr ""

#: ../Doc/library/pyexpat.rst:457
msgid ""
"Called for any characters in the XML document for which no applicable "
"handler has been specified.  This means characters that are part of a "
"construct which could be reported, but for which no handler has been "
"supplied."
msgstr ""

#: ../Doc/library/pyexpat.rst:464
msgid ""
"This is the same as the :func:`DefaultHandler`,  but doesn't inhibit "
"expansion of internal entities. The entity reference will not be passed to "
"the default handler."
msgstr ""

# ff8d65f0ad8444ae9c584740dcaf44ae
#: ../Doc/library/pyexpat.rst:471
msgid ""
"Called if the XML document hasn't been declared as being a standalone "
"document. This happens when there is an external subset or a reference to a "
"parameter entity, but the XML declaration does not set standalone to ``yes`` "
"in an XML declaration.  If this handler returns ``0``, then the parser will "
"raise an :const:`XML_ERROR_NOT_STANDALONE` error.  If this handler is not "
"set, no exception is raised by the parser for this condition."
msgstr ""

#: ../Doc/library/pyexpat.rst:481
msgid ""
"Called for references to external entities.  *base* is the current base, as "
"set by a previous call to :meth:`SetBase`.  The public and system "
"identifiers, *systemId* and *publicId*, are strings if given; if the public "
"identifier is not given, *publicId* will be ``None``.  The *context* value "
"is opaque and should only be used as described below."
msgstr ""

# 8ad9bfdf5bb34cf086012938cce88367
#: ../Doc/library/pyexpat.rst:487
msgid ""
"For external entities to be parsed, this handler must be implemented. It is "
"responsible for creating the sub-parser using ``ExternalEntityParserCreate"
"(context)``, initializing it with the appropriate callbacks, and parsing the "
"entity.  This handler should return an integer; if it returns ``0``, the "
"parser will raise an :const:`XML_ERROR_EXTERNAL_ENTITY_HANDLING` error, "
"otherwise parsing will continue."
msgstr ""

#: ../Doc/library/pyexpat.rst:495
msgid ""
"If this handler is not provided, external entities are reported by the :attr:"
"`DefaultHandler` callback, if provided."
msgstr ""

#: ../Doc/library/pyexpat.rst:502
msgid "ExpatError Exceptions"
msgstr ""

#: ../Doc/library/pyexpat.rst:507
msgid ":exc:`ExpatError` exceptions have a number of interesting attributes:"
msgstr ""

#: ../Doc/library/pyexpat.rst:512
msgid ""
"Expat's internal error number for the specific error.  This will match one "
"of the constants defined in the ``errors`` object from this module."
msgstr ""

#: ../Doc/library/pyexpat.rst:520
msgid ""
"Line number on which the error was detected.  The first line is numbered "
"``1``."
msgstr ""

#: ../Doc/library/pyexpat.rst:527
msgid ""
"Character offset into the line where the error occurred.  The first column "
"is numbered ``0``."
msgstr ""

#: ../Doc/library/pyexpat.rst:538
msgid ""
"The following program defines three handlers that just print out their "
"arguments. ::"
msgstr ""

#: ../Doc/library/pyexpat.rst:562
msgid "The output from this program is::"
msgstr ""

#: ../Doc/library/pyexpat.rst:579
msgid "Content Model Descriptions"
msgstr ""

#: ../Doc/library/pyexpat.rst:584
msgid ""
"Content modules are described using nested tuples.  Each tuple contains four "
"values: the type, the quantifier, the name, and a tuple of children.  "
"Children are simply additional content module descriptions."
msgstr ""

#: ../Doc/library/pyexpat.rst:588
msgid ""
"The values of the first two fields are constants defined in the ``model`` "
"object of the :mod:`xml.parsers.expat` module.  These constants can be "
"collected in two groups: the model type group and the quantifier group."
msgstr ""

#: ../Doc/library/pyexpat.rst:592
msgid "The constants in the model type group are:"
msgstr ""

#: ../Doc/library/pyexpat.rst:598
msgid ""
"The element named by the model name was declared to have a content model of "
"``ANY``."
msgstr ""

#: ../Doc/library/pyexpat.rst:605
msgid ""
"The named element allows a choice from a number of options; this is used for "
"content models such as ``(A | B | C)``."
msgstr ""

#: ../Doc/library/pyexpat.rst:612
msgid "Elements which are declared to be ``EMPTY`` have this model type."
msgstr ""

#: ../Doc/library/pyexpat.rst:626
msgid ""
"Models which represent a series of models which follow one after the other "
"are indicated with this model type.  This is used for models such as ``(A, "
"B, C)``."
msgstr ""

#: ../Doc/library/pyexpat.rst:629
msgid "The constants in the quantifier group are:"
msgstr ""

#: ../Doc/library/pyexpat.rst:635
msgid "No modifier is given, so it can appear exactly once, as for ``A``."
msgstr ""

#: ../Doc/library/pyexpat.rst:641
msgid "The model is optional: it can appear once or not at all, as for ``A?``."
msgstr ""

#: ../Doc/library/pyexpat.rst:647
msgid "The model must occur one or more times (like ``A+``)."
msgstr ""

#: ../Doc/library/pyexpat.rst:653
msgid "The model must occur zero or more times, as for ``A*``."
msgstr ""

#: ../Doc/library/pyexpat.rst:659
msgid "Expat error constants"
msgstr ""

#: ../Doc/library/pyexpat.rst:661
msgid ""
"The following constants are provided in the ``errors`` object of the :mod:"
"`xml.parsers.expat` module.  These constants are useful in interpreting some "
"of the attributes of the :exc:`ExpatError` exception objects raised when an "
"error has occurred."
msgstr ""

#: ../Doc/library/pyexpat.rst:666
msgid "The ``errors`` object has the following attributes:"
msgstr ""

#: ../Doc/library/pyexpat.rst:676
msgid ""
"An entity reference in an attribute value referred to an external entity "
"instead of an internal entity."
msgstr ""

#: ../Doc/library/pyexpat.rst:683
msgid ""
"A character reference referred to a character which is illegal in XML (for "
"example, character ``0``, or '``&#0;``')."
msgstr ""

#: ../Doc/library/pyexpat.rst:690
msgid ""
"An entity reference referred to an entity which was declared with a "
"notation, so cannot be parsed."
msgstr ""

#: ../Doc/library/pyexpat.rst:697
msgid "An attribute was used more than once in a start tag."
msgstr ""

#: ../Doc/library/pyexpat.rst:707
msgid ""
"Raised when an input byte could not properly be assigned to a character; for "
"example, a NUL byte (value ``0``) in a UTF-8 input stream."
msgstr ""

#: ../Doc/library/pyexpat.rst:714
msgid "Something other than whitespace occurred after the document element."
msgstr ""

#: ../Doc/library/pyexpat.rst:720
msgid ""
"An XML declaration was found somewhere other than the start of the input "
"data."
msgstr ""

#: ../Doc/library/pyexpat.rst:726
msgid ""
"The document contains no elements (XML requires all documents to contain "
"exactly one top-level element).."
msgstr ""

#: ../Doc/library/pyexpat.rst:733
msgid "Expat was not able to allocate memory internally."
msgstr ""

#: ../Doc/library/pyexpat.rst:739
msgid "A parameter entity reference was found where it was not allowed."
msgstr ""

#: ../Doc/library/pyexpat.rst:745
msgid "An incomplete character was found in the input."
msgstr ""

#: ../Doc/library/pyexpat.rst:751
msgid ""
"An entity reference contained another reference to the same entity; possibly "
"via a different name, and possibly indirectly."
msgstr ""

#: ../Doc/library/pyexpat.rst:758
msgid "Some unspecified syntax error was encountered."
msgstr ""

#: ../Doc/library/pyexpat.rst:764
msgid "An end tag did not match the innermost open start tag."
msgstr ""

#: ../Doc/library/pyexpat.rst:770
msgid ""
"Some token (such as a start tag) was not closed before the end of the stream "
"or the next token was encountered."
msgstr ""

#: ../Doc/library/pyexpat.rst:777
msgid "A reference was made to a entity which was not defined."
msgstr ""

#: ../Doc/library/pyexpat.rst:783
msgid "The document encoding is not supported by Expat."
msgstr ""

#: ../Doc/library/pyexpat.rst:789
msgid "A CDATA marked section was not closed."
msgstr ""

#: ../Doc/library/pyexpat.rst:799
msgid ""
"The parser determined that the document was not \"standalone\" though it "
"declared itself to be in the XML declaration, and the :attr:"
"`NotStandaloneHandler` was set and returned ``0``."
msgstr ""

#: ../Doc/library/pyexpat.rst:815
msgid ""
"An operation was requested that requires DTD support to be compiled in, but "
"Expat was configured without DTD support.  This should never be reported by "
"a standard build of the :mod:`xml.parsers.expat` module."
msgstr ""

#: ../Doc/library/pyexpat.rst:823
msgid ""
"A behavioral change was requested after parsing started that can only be "
"changed before parsing has started.  This is (currently) only raised by :"
"meth:`UseForeignDTD`."
msgstr ""

#: ../Doc/library/pyexpat.rst:831
msgid "An undeclared prefix was found when namespace processing was enabled."
msgstr ""

#: ../Doc/library/pyexpat.rst:837
msgid ""
"The document attempted to remove the namespace declaration associated with a "
"prefix."
msgstr ""

#: ../Doc/library/pyexpat.rst:844
msgid "A parameter entity contained incomplete markup."
msgstr ""

#: ../Doc/library/pyexpat.rst:850
msgid "The document contained no document element at all."
msgstr ""

#: ../Doc/library/pyexpat.rst:856
msgid "There was an error parsing a text declaration in an external entity."
msgstr ""

#: ../Doc/library/pyexpat.rst:862
msgid "Characters were found in the public id that are not allowed."
msgstr ""

#: ../Doc/library/pyexpat.rst:868
msgid ""
"The requested operation was made on a suspended parser, but isn't allowed.  "
"This includes attempts to provide additional input or to stop the parser."
msgstr ""

#: ../Doc/library/pyexpat.rst:875
msgid ""
"An attempt to resume the parser was made when the parser had not been "
"suspended."
msgstr ""

#: ../Doc/library/pyexpat.rst:881
msgid "This should not be reported to Python applications."
msgstr ""

#: ../Doc/library/pyexpat.rst:887
msgid ""
"The requested operation was made on a parser which was finished parsing "
"input, but isn't allowed.  This includes attempts to provide additional "
"input or to stop the parser."
msgstr ""

#: ../Doc/library/pyexpat.rst:898 ../Doc/library/xml.dom.minidom.rst:274
msgid ""
"The encoding string included in XML output should conform to the appropriate "
"standards. For example, \"UTF-8\" is valid, but \"UTF8\" is not. See http://"
"www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl and http://www.iana."
"org/assignments/character-sets ."
msgstr ""

#: ../Doc/library/python.rst:6
msgid "Python Runtime Services"
msgstr ""

#: ../Doc/library/python.rst:8
msgid ""
"The modules described in this chapter provide a wide range of services "
"related to the Python interpreter and its interaction with its environment.  "
"Here's an overview:"
msgstr ""

# fac56081a8df44dc83030921860582a1
#: ../Doc/library/queue.rst:2
msgid ":mod:`Queue` --- A synchronized queue class"
msgstr ""

# 6410d4166dd844d2a1f8707f541fd449
#: ../Doc/library/queue.rst:8
msgid ""
"The :mod:`Queue` module has been renamed to :mod:`queue` in Python 3.  The :"
"term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

# 08aa516e481b480d9e56537b2ef31b4d
#: ../Doc/library/queue.rst:12
msgid "**Source code:** :source:`Lib/Queue.py`"
msgstr ""

# f5f1b4c6d1b34036823cfe24448b7e5c
#: ../Doc/library/queue.rst:16
msgid ""
"The :mod:`Queue` module implements multi-producer, multi-consumer queues. It "
"is especially useful in threaded programming when information must be "
"exchanged safely between multiple threads.  The :class:`Queue` class in this "
"module implements all the required locking semantics.  It depends on the "
"availability of thread support in Python; see the :mod:`threading` module."
msgstr ""

# 96fe3eb3839146dc83cb2c23199fbc03
#: ../Doc/library/queue.rst:23
msgid ""
"The module implements three types of queue, which differ only in the order "
"in which the entries are retrieved.  In a FIFO queue, the first tasks added "
"are the first retrieved. In a LIFO queue, the most recently added entry is "
"the first retrieved (operating like a stack).  With a priority queue, the "
"entries are kept sorted (using the :mod:`heapq` module) and the lowest "
"valued entry is retrieved first."
msgstr ""

# 2bb1eba8d3fe41c68fb1de2b519e5cb1
#: ../Doc/library/queue.rst:30
msgid "The :mod:`Queue` module defines the following classes and exceptions:"
msgstr ""

#: ../Doc/library/queue.rst:34
msgid ""
"Constructor for a FIFO queue.  *maxsize* is an integer that sets the "
"upperbound limit on the number of items that can be placed in the queue.  "
"Insertion will block once this size has been reached, until queue items are "
"consumed.  If *maxsize* is less than or equal to zero, the queue size is "
"infinite."
msgstr ""

#: ../Doc/library/queue.rst:41
msgid ""
"Constructor for a LIFO queue.  *maxsize* is an integer that sets the "
"upperbound limit on the number of items that can be placed in the queue.  "
"Insertion will block once this size has been reached, until queue items are "
"consumed.  If *maxsize* is less than or equal to zero, the queue size is "
"infinite."
msgstr ""

#: ../Doc/library/queue.rst:50
msgid ""
"Constructor for a priority queue.  *maxsize* is an integer that sets the "
"upperbound limit on the number of items that can be placed in the queue.  "
"Insertion will block once this size has been reached, until queue items are "
"consumed.  If *maxsize* is less than or equal to zero, the queue size is "
"infinite."
msgstr ""

#: ../Doc/library/queue.rst:55
msgid ""
"The lowest valued entries are retrieved first (the lowest valued entry is "
"the one returned by ``sorted(list(entries))[0]``).  A typical pattern for "
"entries is a tuple in the form: ``(priority_number, data)``."
msgstr ""

#: ../Doc/library/queue.rst:63
msgid ""
"Exception raised when non-blocking :meth:`get` (or :meth:`get_nowait`) is "
"called on a :class:`Queue` object which is empty."
msgstr ""

#: ../Doc/library/queue.rst:69
msgid ""
"Exception raised when non-blocking :meth:`put` (or :meth:`put_nowait`) is "
"called on a :class:`Queue` object which is full."
msgstr ""

#: ../Doc/library/queue.rst:74
msgid ""
":class:`collections.deque` is an alternative implementation of unbounded "
"queues with fast atomic :func:`append` and :func:`popleft` operations that "
"do not require locking."
msgstr ""

#: ../Doc/library/queue.rst:82
msgid "Queue Objects"
msgstr ""

#: ../Doc/library/queue.rst:84
msgid ""
"Queue objects (:class:`Queue`, :class:`LifoQueue`, or :class:"
"`PriorityQueue`) provide the public methods described below."
msgstr ""

#: ../Doc/library/queue.rst:90
msgid ""
"Return the approximate size of the queue.  Note, qsize() > 0 doesn't "
"guarantee that a subsequent get() will not block, nor will qsize() < maxsize "
"guarantee that put() will not block."
msgstr ""

#: ../Doc/library/queue.rst:97
msgid ""
"Return ``True`` if the queue is empty, ``False`` otherwise.  If empty() "
"returns ``True`` it doesn't guarantee that a subsequent call to put() will "
"not block.  Similarly, if empty() returns ``False`` it doesn't guarantee "
"that a subsequent call to get() will not block."
msgstr ""

#: ../Doc/library/queue.rst:105
msgid ""
"Return ``True`` if the queue is full, ``False`` otherwise.  If full() "
"returns ``True`` it doesn't guarantee that a subsequent call to get() will "
"not block.  Similarly, if full() returns ``False`` it doesn't guarantee that "
"a subsequent call to put() will not block."
msgstr ""

#: ../Doc/library/queue.rst:113
msgid ""
"Put *item* into the queue. If optional args *block* is true and *timeout* is "
"None (the default), block if necessary until a free slot is available. If "
"*timeout* is a positive number, it blocks at most *timeout* seconds and "
"raises the :exc:`Full` exception if no free slot was available within that "
"time. Otherwise (*block* is false), put an item on the queue if a free slot "
"is immediately available, else raise the :exc:`Full` exception (*timeout* is "
"ignored in that case)."
msgstr ""

#: ../Doc/library/queue.rst:127
msgid "Equivalent to ``put(item, False)``."
msgstr ""

#: ../Doc/library/queue.rst:132
msgid ""
"Remove and return an item from the queue. If optional args *block* is true "
"and *timeout* is None (the default), block if necessary until an item is "
"available. If *timeout* is a positive number, it blocks at most *timeout* "
"seconds and raises the :exc:`Empty` exception if no item was available "
"within that time. Otherwise (*block* is false), return an item if one is "
"immediately available, else raise the :exc:`Empty` exception (*timeout* is "
"ignored in that case)."
msgstr ""

#: ../Doc/library/queue.rst:147
msgid ""
"Two methods are offered to support tracking whether enqueued tasks have been "
"fully processed by daemon consumer threads."
msgstr ""

#: ../Doc/library/queue.rst:153
msgid ""
"Indicate that a formerly enqueued task is complete.  Used by queue consumer "
"threads.  For each :meth:`get` used to fetch a task, a subsequent call to :"
"meth:`task_done` tells the queue that the processing on the task is complete."
msgstr ""

#: ../Doc/library/queue.rst:157
msgid ""
"If a :meth:`join` is currently blocking, it will resume when all items have "
"been processed (meaning that a :meth:`task_done` call was received for every "
"item that had been :meth:`put` into the queue)."
msgstr ""

#: ../Doc/library/queue.rst:169
msgid "Blocks until all items in the queue have been gotten and processed."
msgstr ""

#: ../Doc/library/queue.rst:171
msgid ""
"The count of unfinished tasks goes up whenever an item is added to the "
"queue. The count goes down whenever a consumer thread calls :meth:"
"`task_done` to indicate that the item was retrieved and all work on it is "
"complete. When the count of unfinished tasks drops to zero, :meth:`join` "
"unblocks."
msgstr ""

#: ../Doc/library/queue.rst:178
msgid "Example of how to wait for enqueued tasks to be completed::"
msgstr ""

#: ../Doc/library/quopri.rst:2
msgid ":mod:`quopri` --- Encode and decode MIME quoted-printable data"
msgstr ""

# 8b2ac9e2938b4aa5a1fc7bd9dda2edf6
#: ../Doc/library/quopri.rst:12
msgid "**Source code:** :source:`Lib/quopri.py`"
msgstr ""

#: ../Doc/library/quopri.rst:16
msgid ""
"This module performs quoted-printable transport encoding and decoding, as "
"defined in :rfc:`1521`: \"MIME (Multipurpose Internet Mail Extensions) Part "
"One: Mechanisms for Specifying and Describing the Format of Internet Message "
"Bodies\". The quoted-printable encoding is designed for data where there are "
"relatively few nonprintable characters; the base64 encoding scheme available "
"via the :mod:`base64` module is more compact if there are many such "
"characters, as when sending a graphics file."
msgstr ""

#: ../Doc/library/quopri.rst:26
msgid ""
"Decode the contents of the *input* file and write the resulting decoded "
"binary data to the *output* file. *input* and *output* must either be file "
"objects or objects that mimic the file object interface. *input* will be "
"read until ``input.readline()`` returns an empty string. If the optional "
"argument *header* is present and true, underscore will be decoded as space. "
"This is used to decode \"Q\"-encoded headers as described in :rfc:`1522`: "
"\"MIME (Multipurpose Internet Mail Extensions) Part Two: Message Header "
"Extensions for Non-ASCII Text\"."
msgstr ""

# 173d856a2a3b45c6ac3a75a088887978
#: ../Doc/library/quopri.rst:37
msgid ""
"Encode the contents of the *input* file and write the resulting quoted-"
"printable data to the *output* file. *input* and *output* must either be "
"file objects or objects that mimic the file object interface. *input* will "
"be read until ``input.readline()`` returns an empty string. *quotetabs* is a "
"flag which controls whether to encode embedded spaces and tabs; when true it "
"encodes such embedded whitespace, and when false it leaves them unencoded.  "
"Note that spaces and tabs appearing at the end of lines are always encoded, "
"as per :rfc:`1521`."
msgstr ""

#: ../Doc/library/quopri.rst:48
msgid ""
"Like :func:`decode`, except that it accepts a source string and returns the "
"corresponding decoded string."
msgstr ""

# 6081e5cfd09f4a96b24f8e75e8e6098b
#: ../Doc/library/quopri.rst:54
msgid ""
"Like :func:`encode`, except that it accepts a source string and returns the "
"corresponding encoded string.  *quotetabs* is optional (defaulting to 0), "
"and is passed straight through to :func:`encode`."
msgstr ""

# d4fdc0b31faa44f8ba7f1219df6a47b1
#: ../Doc/library/quopri.rst:62
msgid "General utilities for processing of MIME messages."
msgstr ""

#: ../Doc/library/quopri.rst:65
msgid "Encode and decode MIME base64 data"
msgstr ""

#: ../Doc/library/random.rst:2
msgid ":mod:`random` --- Generate pseudo-random numbers"
msgstr ""

# b7e1cbf5497240ce806454fb20f92a84
#: ../Doc/library/random.rst:7
msgid "**Source code:** :source:`Lib/random.py`"
msgstr ""

#: ../Doc/library/random.rst:11
msgid ""
"This module implements pseudo-random number generators for various "
"distributions."
msgstr ""

#: ../Doc/library/random.rst:14
msgid ""
"For integers, uniform selection from a range. For sequences, uniform "
"selection of a random element, a function to generate a random permutation "
"of a list in-place, and a function for random sampling without replacement."
msgstr ""

#: ../Doc/library/random.rst:18
msgid ""
"On the real line, there are functions to compute uniform, normal (Gaussian), "
"lognormal, negative exponential, gamma, and beta distributions. For "
"generating distributions of angles, the von Mises distribution is available."
msgstr ""

#: ../Doc/library/random.rst:22
msgid ""
"Almost all module functions depend on the basic function :func:`random`, "
"which generates a random float uniformly in the semi-open range [0.0, 1.0).  "
"Python uses the Mersenne Twister as the core generator.  It produces 53-bit "
"precision floats and has a period of 2\\*\\*19937-1.  The underlying "
"implementation in C is both fast and threadsafe.  The Mersenne Twister is "
"one of the most extensively tested random number generators in existence.  "
"However, being completely deterministic, it is not suitable for all "
"purposes, and is completely unsuitable for cryptographic purposes."
msgstr ""

# a6e8b23ee0664db181dd3f0acb80a5a2
#: ../Doc/library/random.rst:31
msgid ""
"The functions supplied by this module are actually bound methods of a hidden "
"instance of the :class:`random.Random` class.  You can instantiate your own "
"instances of :class:`Random` to get generators that don't share state.  This "
"is especially useful for multi-threaded programs, creating a different "
"instance of :class:`Random` for each thread, and using the :meth:`jumpahead` "
"method to make it likely that the generated sequences seen by each thread "
"don't overlap."
msgstr ""

# 077b9e3015924dc891b233e2eb444ba6
#: ../Doc/library/random.rst:38
msgid ""
"Class :class:`Random` can also be subclassed if you want to use a different "
"basic generator of your own devising: in that case, override the :meth:"
"`random`, :meth:`seed`, :meth:`getstate`, :meth:`setstate` and :meth:"
"`jumpahead` methods. Optionally, a new generator can supply a :meth:"
"`getrandbits` method --- this allows :meth:`randrange` to produce selections "
"over an arbitrarily large range."
msgstr ""

#: ../Doc/library/random.rst:47
msgid ""
"As an example of subclassing, the :mod:`random` module provides the :class:"
"`WichmannHill` class that implements an alternative generator in pure "
"Python.  The class provides a backward compatible way to reproduce results "
"from earlier versions of Python, which used the Wichmann-Hill algorithm as "
"the core generator.  Note that this Wichmann-Hill generator can no longer be "
"recommended: its period is too short by contemporary standards, and the "
"sequence generated is known to fail some stringent randomness tests.  See "
"the references below for a recent variant that repairs these flaws."
msgstr ""

#: ../Doc/library/random.rst:59
msgid ""
"The :mod:`random` module also provides the :class:`SystemRandom` class which "
"uses the system function :func:`os.urandom` to generate random numbers from "
"sources provided by the operating system."
msgstr ""

#: ../Doc/library/random.rst:63
msgid "Bookkeeping functions:"
msgstr ""

#: ../Doc/library/random.rst:68
msgid ""
"Initialize the basic random number generator. Optional argument *x* can be "
"any :term:`hashable` object. If *x* is omitted or ``None``, current system "
"time is used; current system time is also used to initialize the generator "
"when the module is first imported.  If randomness sources are provided by "
"the operating system, they are used instead of the system time (see the :"
"func:`os.urandom` function for details on availability)."
msgstr ""

#: ../Doc/library/random.rst:80
msgid ""
"Return an object capturing the current internal state of the generator.  "
"This object can be passed to :func:`setstate` to restore the state."
msgstr ""

# f2ba672b46c849e798cc22c33cabd778
#: ../Doc/library/random.rst:91
msgid ""
"*state* should have been obtained from a previous call to :func:`getstate`, "
"and :func:`setstate` restores the internal state of the generator to what it "
"was at the time :func:`getstate` was called."
msgstr ""

# 272ae30087dc4b90a51abed26bbf51e9
#: ../Doc/library/random.rst:100
msgid ""
"Change the internal state to one different from and likely far away from the "
"current state.  *n* is a non-negative integer which is used to scramble the "
"current state vector.  This is most useful in multi-threaded programs, in "
"conjunction with multiple instances of the :class:`Random` class: :meth:"
"`setstate` or :meth:`seed` can be used to force all instances into the same "
"internal state, and then :meth:`jumpahead` can be used to force the "
"instances' states far apart."
msgstr ""

# 428094954b1a452b99f3f0396d0a5a1b
#: ../Doc/library/random.rst:117
msgid ""
"Returns a python :class:`long` int with *k* random bits. This method is "
"supplied with the MersenneTwister generator and some other generators may "
"also provide it as an optional part of the API. When available, :meth:"
"`getrandbits` enables :meth:`randrange` to handle arbitrarily large ranges."
msgstr ""

#: ../Doc/library/random.rst:124
msgid "Functions for integers:"
msgstr ""

#: ../Doc/library/random.rst:130
msgid ""
"Return a randomly selected element from ``range(start, stop, step)``.  This "
"is equivalent to ``choice(range(start, stop, step))``, but doesn't actually "
"build a range object."
msgstr ""

# 76c27428def24c7e8ea30f24c32aa176
#: ../Doc/library/random.rst:139
msgid "Return a random integer *N* such that ``a <= N <= b``."
msgstr ""

#: ../Doc/library/random.rst:141
msgid "Functions for sequences:"
msgstr ""

#: ../Doc/library/random.rst:146
msgid ""
"Return a random element from the non-empty sequence *seq*. If *seq* is "
"empty, raises :exc:`IndexError`."
msgstr ""

#: ../Doc/library/random.rst:152
msgid ""
"Shuffle the sequence *x* in place. The optional argument *random* is a 0-"
"argument function returning a random float in [0.0, 1.0); by default, this "
"is the function :func:`random`."
msgstr ""

#: ../Doc/library/random.rst:156
msgid ""
"Note that for even rather small ``len(x)``, the total number of permutations "
"of *x* is larger than the period of most random number generators; this "
"implies that most permutations of a long sequence can never be generated."
msgstr ""

# b0229e970d824b1b8fade54b525144f0
#: ../Doc/library/random.rst:163
msgid ""
"Return a *k* length list of unique elements chosen from the population "
"sequence. Used for random sampling without replacement."
msgstr ""

#: ../Doc/library/random.rst:168
msgid ""
"Returns a new list containing elements from the population while leaving the "
"original population unchanged.  The resulting list is in selection order so "
"that all sub-slices will also be valid random samples.  This allows raffle "
"winners (the sample) to be partitioned into grand prize and second place "
"winners (the subslices)."
msgstr ""

#: ../Doc/library/random.rst:174
msgid ""
"Members of the population need not be :term:`hashable` or unique.  If the "
"population contains repeats, then each occurrence is a possible selection in "
"the sample."
msgstr ""

# d17ba358a36742d1a0a1cac24312c9ae
#: ../Doc/library/random.rst:177
msgid ""
"To choose a sample from a range of integers, use an :func:`xrange` object as "
"an argument.  This is especially fast and space efficient for sampling from "
"a large population:  ``sample(xrange(10000000), 60)``."
msgstr ""

#: ../Doc/library/random.rst:181
msgid ""
"The following functions generate specific real-valued distributions. "
"Function parameters are named after the corresponding variables in the "
"distribution's equation, as used in common mathematical practice; most of "
"these equations can be found in any statistics text."
msgstr ""

#: ../Doc/library/random.rst:189
msgid "Return the next random floating point number in the range [0.0, 1.0)."
msgstr ""

#: ../Doc/library/random.rst:194
msgid ""
"Return a random floating point number *N* such that ``a <= N <= b`` for ``a "
"<= b`` and ``b <= N <= a`` for ``b < a``."
msgstr ""

#: ../Doc/library/random.rst:197
msgid ""
"The end-point value ``b`` may or may not be included in the range depending "
"on floating-point rounding in the equation ``a + (b-a) * random()``."
msgstr ""

#: ../Doc/library/random.rst:203
msgid ""
"Return a random floating point number *N* such that ``low <= N <= high`` and "
"with the specified *mode* between those bounds.  The *low* and *high* bounds "
"default to zero and one.  The *mode* argument defaults to the midpoint "
"between the bounds, giving a symmetric distribution."
msgstr ""

#: ../Doc/library/random.rst:213
msgid ""
"Beta distribution.  Conditions on the parameters are ``alpha > 0`` and "
"``beta > 0``. Returned values range between 0 and 1."
msgstr ""

#: ../Doc/library/random.rst:219
msgid ""
"Exponential distribution.  *lambd* is 1.0 divided by the desired mean.  It "
"should be nonzero.  (The parameter would be called \"lambda\", but that is a "
"reserved word in Python.)  Returned values range from 0 to positive infinity "
"if *lambd* is positive, and from negative infinity to 0 if *lambd* is "
"negative."
msgstr ""

#: ../Doc/library/random.rst:228
msgid ""
"Gamma distribution.  (*Not* the gamma function!)  Conditions on the "
"parameters are ``alpha > 0`` and ``beta > 0``."
msgstr ""

# 1f248e9b7f9142f996246e2efab2d280
#: ../Doc/library/random.rst:231
msgid "The probability distribution function is::"
msgstr ""

#: ../Doc/library/random.rst:240
msgid ""
"Gaussian distribution.  *mu* is the mean, and *sigma* is the standard "
"deviation.  This is slightly faster than the :func:`normalvariate` function "
"defined below."
msgstr ""

#: ../Doc/library/random.rst:247
msgid ""
"Log normal distribution.  If you take the natural logarithm of this "
"distribution, you'll get a normal distribution with mean *mu* and standard "
"deviation *sigma*.  *mu* can have any value, and *sigma* must be greater "
"than zero."
msgstr ""

#: ../Doc/library/random.rst:255
msgid ""
"Normal distribution.  *mu* is the mean, and *sigma* is the standard "
"deviation."
msgstr ""

#: ../Doc/library/random.rst:260
msgid ""
"*mu* is the mean angle, expressed in radians between 0 and 2\\*\\ *pi*, and "
"*kappa* is the concentration parameter, which must be greater than or equal "
"to zero.  If *kappa* is equal to zero, this distribution reduces to a "
"uniform random angle over the range 0 to 2\\*\\ *pi*."
msgstr ""

#: ../Doc/library/random.rst:268
msgid "Pareto distribution.  *alpha* is the shape parameter."
msgstr ""

#: ../Doc/library/random.rst:273
msgid ""
"Weibull distribution.  *alpha* is the scale parameter and *beta* is the "
"shape parameter."
msgstr ""

#: ../Doc/library/random.rst:277
msgid "Alternative Generators:"
msgstr ""

# 0836a820b50d4ec9aa1818e4a1f16df8
#: ../Doc/library/random.rst:281
msgid ""
"Class that implements the Wichmann-Hill algorithm as the core generator. Has "
"all of the same methods as :class:`Random` plus the :meth:`whseed` method "
"described below.  Because this class is implemented in pure Python, it is "
"not threadsafe and may require locks between calls.  The period of the "
"generator is 6,953,607,871,644 which is small enough to require care that "
"two independent random sequences do not overlap."
msgstr ""

# ef130d217cc14a9483218da28d0bc65b
#: ../Doc/library/random.rst:291
msgid ""
"This is obsolete, supplied for bit-level compatibility with versions of "
"Python prior to 2.1. See :func:`seed` for details.  :func:`whseed` does not "
"guarantee that distinct integer arguments yield distinct internal states, "
"and can yield no more than about 2\\*\\*24 distinct internal states in all."
msgstr ""

# 6942931352844c1eaea318faee8e792a
#: ../Doc/library/random.rst:299
msgid ""
"Class that uses the :func:`os.urandom` function for generating random "
"numbers from sources provided by the operating system. Not available on all "
"systems. Does not rely on software state and sequences are not reproducible. "
"Accordingly, the :meth:`seed` and :meth:`jumpahead` methods have no effect "
"and are ignored. The :meth:`getstate` and :meth:`setstate` methods raise :"
"exc:`NotImplementedError` if called."
msgstr ""

#: ../Doc/library/random.rst:308
msgid "Examples of basic usage::"
msgstr ""

#: ../Doc/library/random.rst:333
msgid ""
"M. Matsumoto and T. Nishimura, \"Mersenne Twister: A 623-dimensionally "
"equidistributed uniform pseudorandom number generator\", ACM Transactions on "
"Modeling and Computer Simulation Vol. 8, No. 1, January pp.3-30 1998."
msgstr ""

# 70de0633d46e4c40b42bec400ab26171
#: ../Doc/library/random.rst:337
msgid ""
"Wichmann, B. A. & Hill, I. D., \"Algorithm AS 183: An efficient and portable "
"pseudo-random number generator\", Applied Statistics 31 (1982) 188-190."
msgstr ""

#: ../Doc/library/random.rst:340
msgid ""
"`Complementary-Multiply-with-Carry recipe <http://code.activestate.com/"
"recipes/576707/>`_ for a compatible alternative random number generator with "
"a long period and comparatively simple update operations."
msgstr ""

#: ../Doc/library/re.rst:3
msgid ":mod:`re` --- Regular expression operations"
msgstr ""

# 861f8fd5c1814b7ca419937dbf35091e
#: ../Doc/library/re.rst:11
msgid ""
"This module provides regular expression matching operations similar to those "
"found in Perl. Both patterns and strings to be searched can be Unicode "
"strings as well as 8-bit strings."
msgstr ""

#: ../Doc/library/re.rst:15
msgid ""
"Regular expressions use the backslash character (``'\\'``) to indicate "
"special forms or to allow special characters to be used without invoking "
"their special meaning.  This collides with Python's usage of the same "
"character for the same purpose in string literals; for example, to match a "
"literal backslash, one might have to write ``'\\\\\\\\'`` as the pattern "
"string, because the regular expression must be ``\\\\``, and each backslash "
"must be expressed as ``\\\\`` inside a regular Python string literal."
msgstr ""

#: ../Doc/library/re.rst:24
msgid ""
"The solution is to use Python's raw string notation for regular expression "
"patterns; backslashes are not handled in any special way in a string literal "
"prefixed with ``'r'``.  So ``r\"\\n\"`` is a two-character string containing "
"``'\\'`` and ``'n'``, while ``\"\\n\"`` is a one-character string containing "
"a newline.  Usually patterns will be expressed in Python code using this raw "
"string notation."
msgstr ""

#: ../Doc/library/re.rst:31
msgid ""
"It is important to note that most regular expression operations are "
"available as module-level functions and :class:`RegexObject` methods.  The "
"functions are shortcuts that don't require you to compile a regex object "
"first, but miss some fine-tuning parameters."
msgstr ""

#: ../Doc/library/re.rst:39
msgid ""
"Book on regular expressions by Jeffrey Friedl, published by O'Reilly.  The "
"second edition of the book no longer covers Python at all, but the first "
"edition covered writing good regular expression patterns in great detail."
msgstr ""

#: ../Doc/library/re.rst:47
msgid "Regular Expression Syntax"
msgstr ""

#: ../Doc/library/re.rst:49
msgid ""
"A regular expression (or RE) specifies a set of strings that matches it; the "
"functions in this module let you check if a particular string matches a "
"given regular expression (or if a given regular expression matches a "
"particular string, which comes down to the same thing)."
msgstr ""

#: ../Doc/library/re.rst:54
msgid ""
"Regular expressions can be concatenated to form new regular expressions; if "
"*A* and *B* are both regular expressions, then *AB* is also a regular "
"expression. In general, if a string *p* matches *A* and another string *q* "
"matches *B*, the string *pq* will match AB.  This holds unless *A* or *B* "
"contain low precedence operations; boundary conditions between *A* and *B*; "
"or have numbered group references.  Thus, complex expressions can easily be "
"constructed from simpler primitive expressions like the ones described "
"here.  For details of the theory and implementation of regular expressions, "
"consult the Friedl book referenced above, or almost any textbook about "
"compiler construction."
msgstr ""

#: ../Doc/library/re.rst:64
msgid ""
"A brief explanation of the format of regular expressions follows.  For "
"further information and a gentler presentation, consult the :ref:`regex-"
"howto`."
msgstr ""

#: ../Doc/library/re.rst:67
msgid ""
"Regular expressions can contain both special and ordinary characters. Most "
"ordinary characters, like ``'A'``, ``'a'``, or ``'0'``, are the simplest "
"regular expressions; they simply match themselves.  You can concatenate "
"ordinary characters, so ``last`` matches the string ``'last'``.  (In the "
"rest of this section, we'll write RE's in ``this special style``, usually "
"without quotes, and strings to be matched ``'in single quotes'``.)"
msgstr ""

#: ../Doc/library/re.rst:74
msgid ""
"Some characters, like ``'|'`` or ``'('``, are special. Special characters "
"either stand for classes of ordinary characters, or affect how the regular "
"expressions around them are interpreted. Regular expression pattern strings "
"may not contain null bytes, but can specify the null byte using the ``"
"\\number`` notation, e.g., ``'\\x00'``."
msgstr ""

#: ../Doc/library/re.rst:81
msgid "The special characters are:"
msgstr ""

#: ../Doc/library/re.rst:84
msgid ""
"(Dot.)  In the default mode, this matches any character except a newline.  "
"If the :const:`DOTALL` flag has been specified, this matches any character "
"including a newline."
msgstr ""

#: ../Doc/library/re.rst:89
msgid ""
"(Caret.)  Matches the start of the string, and in :const:`MULTILINE` mode "
"also matches immediately after each newline."
msgstr ""

#: ../Doc/library/re.rst:93
msgid ""
"Matches the end of the string or just before the newline at the end of the "
"string, and in :const:`MULTILINE` mode also matches before a newline.  "
"``foo`` matches both 'foo' and 'foobar', while the regular expression ``foo"
"$`` matches only 'foo'.  More interestingly, searching for ``foo.$`` in "
"``'foo1\\nfoo2\\n'`` matches 'foo2' normally, but 'foo1' in :const:"
"`MULTILINE` mode; searching for a single ``$`` in ``'foo\\n'`` will find two "
"(empty) matches: one just before the newline, and one at the end of the "
"string."
msgstr ""

#: ../Doc/library/re.rst:102
msgid ""
"Causes the resulting RE to match 0 or more repetitions of the preceding RE, "
"as many repetitions as are possible.  ``ab*`` will match 'a', 'ab', or 'a' "
"followed by any number of 'b's."
msgstr ""

#: ../Doc/library/re.rst:107
msgid ""
"Causes the resulting RE to match 1 or more repetitions of the preceding RE. "
"``ab+`` will match 'a' followed by any non-zero number of 'b's; it will not "
"match just 'a'."
msgstr ""

#: ../Doc/library/re.rst:112
msgid ""
"Causes the resulting RE to match 0 or 1 repetitions of the preceding RE. "
"``ab?`` will match either 'a' or 'ab'."
msgstr ""

#: ../Doc/library/re.rst:116
msgid ""
"The ``'*'``, ``'+'``, and ``'?'`` qualifiers are all :dfn:`greedy`; they "
"match as much text as possible.  Sometimes this behaviour isn't desired; if "
"the RE ``<.*>`` is matched against ``'<H1>title</H1>'``, it will match the "
"entire string, and not just ``'<H1>'``.  Adding ``'?'`` after the qualifier "
"makes it perform the match in :dfn:`non-greedy` or :dfn:`minimal` fashion; "
"as *few* characters as possible will be matched.  Using ``.*?`` in the "
"previous expression will match only ``'<H1>'``."
msgstr ""

#: ../Doc/library/re.rst:125
msgid ""
"Specifies that exactly *m* copies of the previous RE should be matched; "
"fewer matches cause the entire RE not to match.  For example, ``a{6}`` will "
"match exactly six ``'a'`` characters, but not five."
msgstr ""

#: ../Doc/library/re.rst:130
msgid ""
"Causes the resulting RE to match from *m* to *n* repetitions of the "
"preceding RE, attempting to match as many repetitions as possible.  For "
"example, ``a{3,5}`` will match from 3 to 5 ``'a'`` characters.  Omitting *m* "
"specifies a lower bound of zero,  and omitting *n* specifies an infinite "
"upper bound.  As an example, ``a{4,}b`` will match ``aaaab`` or a thousand "
"``'a'`` characters followed by a ``b``, but not ``aaab``. The comma may not "
"be omitted or the modifier would be confused with the previously described "
"form."
msgstr ""

#: ../Doc/library/re.rst:139
msgid ""
"Causes the resulting RE to match from *m* to *n* repetitions of the "
"preceding RE, attempting to match as *few* repetitions as possible.  This is "
"the non-greedy version of the previous qualifier.  For example, on the 6-"
"character string ``'aaaaaa'``, ``a{3,5}`` will match 5 ``'a'`` characters, "
"while ``a{3,5}?`` will only match 3 characters."
msgstr ""

#: ../Doc/library/re.rst:146
msgid ""
"Either escapes special characters (permitting you to match characters like "
"``'*'``, ``'?'``, and so forth), or signals a special sequence; special "
"sequences are discussed below."
msgstr ""

#: ../Doc/library/re.rst:150
msgid ""
"If you're not using a raw string to express the pattern, remember that "
"Python also uses the backslash as an escape sequence in string literals; if "
"the escape sequence isn't recognized by Python's parser, the backslash and "
"subsequent character are included in the resulting string.  However, if "
"Python would recognize the resulting sequence, the backslash should be "
"repeated twice.  This is complicated and hard to understand, so it's highly "
"recommended that you use raw strings for all but the simplest expressions."
msgstr ""

# f28fccaf435f4de2952ad5c9d2786f6a
#: ../Doc/library/re.rst:159
msgid "Used to indicate a set of characters.  In a set:"
msgstr ""

# 92210ae967dd48f596fd1cd6bed1017f
#: ../Doc/library/re.rst:161
msgid ""
"Characters can be listed individually, e.g. ``[amk]`` will match ``'a'``, "
"``'m'``, or ``'k'``."
msgstr ""

# 667caeb8b24a4c23b33873b794646f0d
#: ../Doc/library/re.rst:164
msgid ""
"Ranges of characters can be indicated by giving two characters and "
"separating them by a ``'-'``, for example ``[a-z]`` will match any lowercase "
"ASCII letter, ``[0-5][0-9]`` will match all the two-digits numbers from "
"``00`` to ``59``, and ``[0-9A-Fa-f]`` will match any hexadecimal digit.  If "
"``-`` is escaped (e.g. ``[a\\-z]``) or if it's placed as the first or last "
"character (e.g. ``[a-]``), it will match a literal ``'-'``."
msgstr ""

# b849595a4cf6455dbe7d0d385b3e3ddf
#: ../Doc/library/re.rst:171
msgid ""
"Special characters lose their special meaning inside sets.  For example, ``"
"[(+*)]`` will match any of the literal characters ``'('``, ``'+'``, ``'*'``, "
"or ``')'``."
msgstr ""

# 61c649bf664a474296f1ebf75efa30bc
#: ../Doc/library/re.rst:175
msgid ""
"Character classes such as ``\\w`` or ``\\S`` (defined below) are also "
"accepted inside a set, although the characters they match depends on "
"whether :const:`LOCALE` or  :const:`UNICODE` mode is in force."
msgstr ""

# e4b6cdd13f374ebcb832bf064f767d67
#: ../Doc/library/re.rst:179
msgid ""
"Characters that are not within a range can be matched by :dfn:"
"`complementing` the set.  If the first character of the set is ``'^'``, all "
"the characters that are *not* in the set will be matched.  For example, ``"
"[^5]`` will match any character except ``'5'``, and ``[^^]`` will match any "
"character except ``'^'``.  ``^`` has no special meaning if it's not the "
"first character in the set."
msgstr ""

# 04073bdbed8041809d91e2325145b39c
#: ../Doc/library/re.rst:186
msgid ""
"To match a literal ``']'`` inside a set, precede it with a backslash, or "
"place it at the beginning of the set.  For example, both ``[()[\\]{}]`` and "
"``[]()[{}]`` will both match a parenthesis."
msgstr ""

#: ../Doc/library/re.rst:191
msgid ""
"``A|B``, where A and B can be arbitrary REs, creates a regular expression "
"that will match either A or B.  An arbitrary number of REs can be separated "
"by the ``'|'`` in this way.  This can be used inside groups (see below) as "
"well.  As the target string is scanned, REs separated by ``'|'`` are tried "
"from left to right. When one pattern completely matches, that branch is "
"accepted. This means that once ``A`` matches, ``B`` will not be tested "
"further, even if it would produce a longer overall match.  In other words, "
"the ``'|'`` operator is never greedy.  To match a literal ``'|'``, use ``\\|"
"``, or enclose it inside a character class, as in ``[|]``."
msgstr ""

#: ../Doc/library/re.rst:202
msgid ""
"Matches whatever regular expression is inside the parentheses, and indicates "
"the start and end of a group; the contents of a group can be retrieved after "
"a match has been performed, and can be matched later in the string with the "
"``\\number`` special sequence, described below.  To match the literals "
"``'('`` or ``')'``, use ``\\(`` or ``\\)``, or enclose them inside a "
"character class: ``[(] [)]``."
msgstr ""

#: ../Doc/library/re.rst:209
msgid ""
"This is an extension notation (a ``'?'`` following a ``'('`` is not "
"meaningful otherwise).  The first character after the ``'?'`` determines "
"what the meaning and further syntax of the construct is. Extensions usually "
"do not create a new group; ``(?P<name>...)`` is the only exception to this "
"rule. Following are the currently supported extensions."
msgstr ""

# f25ea30f9c2d491585b6942b7ac5f949
#: ../Doc/library/re.rst:216
msgid ""
"(One or more letters from the set ``'i'``, ``'L'``, ``'m'``, ``'s'``, "
"``'u'``, ``'x'``.)  The group matches the empty string; the letters set the "
"corresponding flags: :const:`re.I` (ignore case), :const:`re.L` (locale "
"dependent), :const:`re.M` (multi-line), :const:`re.S` (dot matches all), :"
"const:`re.U` (Unicode dependent), and :const:`re.X` (verbose), for the "
"entire regular expression. (The flags are described in :ref:`contents-of-"
"module-re`.) This is useful if you wish to include the flags as part of the "
"regular expression, instead of passing a *flag* argument to the :func:`re."
"compile` function."
msgstr ""

#: ../Doc/library/re.rst:227
msgid ""
"Note that the ``(?x)`` flag changes how the expression is parsed. It should "
"be used first in the expression string, or after one or more whitespace "
"characters. If there are non-whitespace characters before the flag, the "
"results are undefined."
msgstr ""

# 56bbef938d494247adca592f57a3d01b
#: ../Doc/library/re.rst:233
msgid ""
"A non-capturing version of regular parentheses.  Matches whatever regular "
"expression is inside the parentheses, but the substring matched by the group "
"*cannot* be retrieved after performing a match or referenced later in the "
"pattern."
msgstr ""

#: ../Doc/library/re.rst:239
msgid ""
"Similar to regular parentheses, but the substring matched by the group is "
"accessible within the rest of the regular expression via the symbolic group "
"name *name*.  Group names must be valid Python identifiers, and each group "
"name must be defined only once within a regular expression.  A symbolic "
"group is also a numbered group, just as if the group were not named.  So the "
"group named ``id`` in the example below can also be referenced as the "
"numbered group ``1``."
msgstr ""

#: ../Doc/library/re.rst:247
msgid ""
"For example, if the pattern is ``(?P<id>[a-zA-Z_]\\w*)``, the group can be "
"referenced by its name in arguments to methods of match objects, such as ``m."
"group('id')`` or ``m.end('id')``, and also by name in the regular expression "
"itself (using ``(?P=id)``) and replacement text given to ``.sub()`` (using ``"
"\\g<id>``)."
msgstr ""

#: ../Doc/library/re.rst:254
msgid "Matches whatever text was matched by the earlier group named *name*."
msgstr ""

#: ../Doc/library/re.rst:257
msgid "A comment; the contents of the parentheses are simply ignored."
msgstr ""

#: ../Doc/library/re.rst:260
msgid ""
"Matches if ``...`` matches next, but doesn't consume any of the string.  "
"This is called a lookahead assertion.  For example, ``Isaac (?=Asimov)`` "
"will match ``'Isaac '`` only if it's followed by ``'Asimov'``."
msgstr ""

#: ../Doc/library/re.rst:265
msgid ""
"Matches if ``...`` doesn't match next.  This is a negative lookahead "
"assertion. For example, ``Isaac (?!Asimov)`` will match ``'Isaac '`` only if "
"it's *not* followed by ``'Asimov'``."
msgstr ""

# 532c1a04e13940b5946cf2ed61d7d8fa
#: ../Doc/library/re.rst:270
msgid ""
"Matches if the current position in the string is preceded by a match for "
"``...`` that ends at the current position.  This is called a :dfn:`positive "
"lookbehind assertion`. ``(?<=abc)def`` will find a match in ``abcdef``, "
"since the lookbehind will back up 3 characters and check if the contained "
"pattern matches. The contained pattern must only match strings of some fixed "
"length, meaning that ``abc`` or ``a|b`` are allowed, but ``a*`` and ``a{3,4}"
"`` are not.  Note that patterns which start with positive lookbehind "
"assertions will not match at the beginning of the string being searched; you "
"will most likely want to use the :func:`search` function rather than the :"
"func:`match` function:"
msgstr ""

#: ../Doc/library/re.rst:285
msgid "This example looks for a word following a hyphen:"
msgstr ""

#: ../Doc/library/re.rst:292
msgid ""
"Matches if the current position in the string is not preceded by a match for "
"``...``.  This is called a :dfn:`negative lookbehind assertion`.  Similar to "
"positive lookbehind assertions, the contained pattern must only match "
"strings of some fixed length.  Patterns which start with negative lookbehind "
"assertions may match at the beginning of the string being searched."
msgstr ""

#: ../Doc/library/re.rst:299
msgid ""
"Will try to match with ``yes-pattern`` if the group with given *id* or "
"*name* exists, and with ``no-pattern`` if it doesn't. ``no-pattern`` is "
"optional and can be omitted. For example,  ``(<)?(\\w+@\\w+(?:\\.\\w+)+)(?(1)"
">)`` is a poor email matching pattern, which will match with ``'<user@host."
"com>'`` as well as ``'user@host.com'``, but not with ``'<user@host.com'``."
msgstr ""

#: ../Doc/library/re.rst:307
msgid ""
"The special sequences consist of ``'\\'`` and a character from the list "
"below. If the ordinary character is not on the list, then the resulting RE "
"will match the second character.  For example, ``\\$`` matches the character "
"``'$'``."
msgstr ""

#: ../Doc/library/re.rst:312
msgid ""
"Matches the contents of the group of the same number.  Groups are numbered "
"starting from 1.  For example, ``(.+) \\1`` matches ``'the the'`` or ``'55 "
"55'``, but not ``'the end'`` (note the space after the group).  This special "
"sequence can only be used to match one of the first 99 groups.  If the first "
"digit of *number* is 0, or *number* is 3 octal digits long, it will not be "
"interpreted as a group match, but as the character with octal value "
"*number*. Inside the ``'['`` and ``']'`` of a character class, all numeric "
"escapes are treated as characters."
msgstr ""

#: ../Doc/library/re.rst:322
msgid "Matches only at the start of the string."
msgstr ""

# d4d44b33222f4171ba646dd3dccc1b4a
#: ../Doc/library/re.rst:325
msgid ""
"Matches the empty string, but only at the beginning or end of a word.  A "
"word is defined as a sequence of alphanumeric or underscore characters, so "
"the end of a word is indicated by whitespace or a non-alphanumeric, non-"
"underscore character. Note that formally, ``\\b`` is defined as the boundary "
"between a ``\\w`` and a ``\\W`` character (or vice versa), or between ``"
"\\w`` and the beginning/end of the string, so the precise set of characters "
"deemed to be alphanumeric depends on the values of the ``UNICODE`` and "
"``LOCALE`` flags. For example, ``r'\\bfoo\\b'`` matches ``'foo'``, "
"``'foo.'``, ``'(foo)'``, ``'bar foo baz'`` but not ``'foobar'`` or "
"``'foo3'``. Inside a character range, ``\\b`` represents the backspace "
"character, for compatibility with Python's string literals."
msgstr ""

# d350beaf259d4c3eb0dfb191a40ad2ab
#: ../Doc/library/re.rst:337
msgid ""
"Matches the empty string, but only when it is *not* at the beginning or end "
"of a word.  This means that ``r'py\\B'`` matches ``'python'``, ``'py3'``, "
"``'py2'``, but not ``'py'``, ``'py.'``, or ``'py!'``. ``\\B`` is just the "
"opposite of ``\\b``, so is also subject to the settings of ``LOCALE`` and "
"``UNICODE``."
msgstr ""

# 6e732ad2501a4a17ae6a15a00b6338f1
#: ../Doc/library/re.rst:344
msgid ""
"When the :const:`UNICODE` flag is not specified, matches any decimal digit; "
"this is equivalent to the set ``[0-9]``.  With :const:`UNICODE`, it will "
"match whatever is classified as a decimal digit in the Unicode character "
"properties database."
msgstr ""

# 9f7fcb16a0784bf0887d2be672414485
#: ../Doc/library/re.rst:350
msgid ""
"When the :const:`UNICODE` flag is not specified, matches any non-digit "
"character; this is equivalent to the set  ``[^0-9]``.  With :const:"
"`UNICODE`, it will match  anything other than character marked as digits in "
"the Unicode character  properties database."
msgstr ""

# 3196fedb0404421fa86b3fae9ccd8b90
#: ../Doc/library/re.rst:356
msgid ""
"When the :const:`UNICODE` flag is not specified, it matches any whitespace "
"character, this is equivalent to the set ``[ \\t\\n\\r\\f\\v]``. The :const:"
"`LOCALE` flag has no extra effect on matching of the space. If :const:"
"`UNICODE` is set, this will match the characters ``[ \\t\\n\\r\\f\\v]`` plus "
"whatever is classified as space in the Unicode character properties database."
msgstr ""

# 2d352333e3a544d4b53ffbaf3994355a
#: ../Doc/library/re.rst:364
msgid ""
"When the :const:`UNICODE` flags is not specified, matches any non-whitespace "
"character; this is equivalent to the set ``[^ \\t\\n\\r\\f\\v]`` The :const:"
"`LOCALE` flag has no extra effect on non-whitespace match.  If :const:"
"`UNICODE` is set, then any character not marked as space in the Unicode "
"character properties database is matched."
msgstr ""

# 948226a3ea104cfaa92114c582a56217
#: ../Doc/library/re.rst:372
msgid ""
"When the :const:`LOCALE` and :const:`UNICODE` flags are not specified, "
"matches any alphanumeric character and the underscore; this is equivalent to "
"the set ``[a-zA-Z0-9_]``.  With :const:`LOCALE`, it will match the set ``"
"[0-9_]`` plus whatever characters are defined as alphanumeric for the "
"current locale.  If :const:`UNICODE` is set, this will match the characters "
"``[0-9_]`` plus whatever is classified as alphanumeric in the Unicode "
"character properties database."
msgstr ""

# 6bafb961d5874d7ab1887d7a7c356e51
#: ../Doc/library/re.rst:380
msgid ""
"When the :const:`LOCALE` and :const:`UNICODE` flags are not specified, "
"matches any non-alphanumeric character; this is equivalent to the set ``[^a-"
"zA-Z0-9_]``. With :const:`LOCALE`, it will match any character not in the "
"set ``[0-9_]``, and not defined as alphanumeric for the current locale. If :"
"const:`UNICODE` is set, this will match anything other than ``[0-9_]`` plus "
"characters classied as not alphanumeric in the Unicode character properties "
"database."
msgstr ""

#: ../Doc/library/re.rst:388
msgid "Matches only at the end of the string."
msgstr ""

# 352c492642934ec489d54e8cc20a85fd
#: ../Doc/library/re.rst:390
msgid ""
"If both :const:`LOCALE` and :const:`UNICODE` flags are included for a "
"particular sequence, then :const:`LOCALE` flag takes effect first followed "
"by the :const:`UNICODE`."
msgstr ""

#: ../Doc/library/re.rst:394
msgid ""
"Most of the standard escapes supported by Python string literals are also "
"accepted by the regular expression parser::"
msgstr ""

# 088dd1380ab14077bc0852cb4a8c1b98
#: ../Doc/library/re.rst:401
msgid ""
"(Note that ``\\b`` is used to represent word boundaries, and means "
"\"backspace\" only inside character classes.)"
msgstr ""

#: ../Doc/library/re.rst:404
msgid ""
"Octal escapes are included in a limited form: If the first digit is a 0, or "
"if there are three octal digits, it is considered an octal escape. "
"Otherwise, it is a group reference.  As for string literals, octal escapes "
"are always at most three digits in length."
msgstr ""

#: ../Doc/library/re.rst:415
msgid ""
"The module defines several functions, constants, and an exception. Some of "
"the functions are simplified versions of the full featured methods for "
"compiled regular expressions.  Most non-trivial applications always use the "
"compiled form."
msgstr ""

#: ../Doc/library/re.rst:423
msgid ""
"Compile a regular expression pattern into a regular expression object, which "
"can be used for matching using its :func:`match` and :func:`search` methods, "
"described below."
msgstr ""

#: ../Doc/library/re.rst:427
msgid ""
"The expression's behaviour can be modified by specifying a *flags* value. "
"Values can be any of the following variables, combined using bitwise OR (the "
"``|`` operator)."
msgstr ""

#: ../Doc/library/re.rst:431
msgid "The sequence ::"
msgstr ""

#: ../Doc/library/re.rst:436
msgid "is equivalent to ::"
msgstr ""

#: ../Doc/library/re.rst:440
msgid ""
"but using :func:`re.compile` and saving the resulting regular expression "
"object for reuse is more efficient when the expression will be used several "
"times in a single program."
msgstr ""

#: ../Doc/library/re.rst:446
msgid ""
"The compiled versions of the most recent patterns passed to :func:`re."
"match`, :func:`re.search` or :func:`re.compile` are cached, so programs that "
"use only a few regular expressions at a time needn't worry about compiling "
"regular expressions."
msgstr ""

# d94e696c66cd431eb930fd26c716e207
#: ../Doc/library/re.rst:454
msgid "Display debug information about compiled expression."
msgstr ""

# 9084cc88a4cd41c3901987d69406121f
#: ../Doc/library/re.rst:460
msgid ""
"Perform case-insensitive matching; expressions like ``[A-Z]`` will match "
"lowercase letters, too.  This is not affected by the current locale."
msgstr ""

# a09f140c76f24ec881920296c7440307
#: ../Doc/library/re.rst:467
msgid ""
"Make ``\\w``, ``\\W``, ``\\b``, ``\\B``, ``\\s`` and ``\\S`` dependent on "
"the current locale."
msgstr ""

#: ../Doc/library/re.rst:474
msgid ""
"When specified, the pattern character ``'^'`` matches at the beginning of "
"the string and at the beginning of each line (immediately following each "
"newline); and the pattern character ``'$'`` matches at the end of the string "
"and at the end of each line (immediately preceding each newline).  By "
"default, ``'^'`` matches only at the beginning of the string, and ``'$'`` "
"only at the end of the string and immediately before the newline (if any) at "
"the end of the string."
msgstr ""

#: ../Doc/library/re.rst:485
msgid ""
"Make the ``'.'`` special character match any character at all, including a "
"newline; without this flag, ``'.'`` will match anything *except* a newline."
msgstr ""

# 29424699b2b84d64ae85027dfccbb39f
#: ../Doc/library/re.rst:492
msgid ""
"Make ``\\w``, ``\\W``, ``\\b``, ``\\B``, ``\\d``, ``\\D``, ``\\s`` and ``"
"\\S`` dependent on the Unicode character properties database."
msgstr ""

#: ../Doc/library/re.rst:501
msgid ""
"This flag allows you to write regular expressions that look nicer. "
"Whitespace within the pattern is ignored, except when in a character class "
"or preceded by an unescaped backslash, and, when a line contains a ``'#'`` "
"neither in a character class or preceded by an unescaped backslash, all "
"characters from the leftmost such ``'#'`` through the end of the line are "
"ignored."
msgstr ""

#: ../Doc/library/re.rst:507
msgid ""
"That means that the two following regular expression objects that match a "
"decimal number are functionally equal::"
msgstr ""

#: ../Doc/library/re.rst:518
msgid ""
"Scan through *string* looking for a location where the regular expression "
"*pattern* produces a match, and return a corresponding :class:`MatchObject` "
"instance. Return ``None`` if no position in the string matches the pattern; "
"note that this is different from finding a zero-length match at some point "
"in the string."
msgstr ""

#: ../Doc/library/re.rst:527
msgid ""
"If zero or more characters at the beginning of *string* match the regular "
"expression *pattern*, return a corresponding :class:`MatchObject` instance. "
"Return ``None`` if the string does not match the pattern; note that this is "
"different from a zero-length match."
msgstr ""

# 4ac6f78f32134946ad677e2970f2f4dc
#: ../Doc/library/re.rst:532
msgid ""
"Note that even in :const:`MULTILINE` mode, :func:`re.match` will only match "
"at the beginning of the string and not at the beginning of each line."
msgstr ""

# 39f41740a623427a85cae276fe300ae0
#: ../Doc/library/re.rst:535
msgid ""
"If you want to locate a match anywhere in *string*, use :func:`search` "
"instead (see also :ref:`search-vs-match`)."
msgstr ""

# 6e178be11d9348f5bf9879661f83d703
#: ../Doc/library/re.rst:541
msgid ""
"Split *string* by the occurrences of *pattern*.  If capturing parentheses "
"are used in *pattern*, then the text of all groups in the pattern are also "
"returned as part of the resulting list. If *maxsplit* is nonzero, at most "
"*maxsplit* splits occur, and the remainder of the string is returned as the "
"final element of the list.  (Incompatibility note: in the original Python "
"1.5 release, *maxsplit* was ignored.  This has been fixed in later releases.)"
msgstr ""

#: ../Doc/library/re.rst:557
msgid ""
"If there are capturing groups in the separator and it matches at the start "
"of the string, the result will start with an empty string.  The same holds "
"for the end of the string:"
msgstr ""

#: ../Doc/library/re.rst:564
msgid ""
"That way, separator components are always found at the same relative indices "
"within the result list (e.g., if there's one capturing group in the "
"separator, the 0th, the 2nd and so forth)."
msgstr ""

#: ../Doc/library/re.rst:568
msgid ""
"Note that *split* will never split a string on an empty pattern match. For "
"example:"
msgstr ""

#: ../Doc/library/re.rst:582
msgid ""
"Return all non-overlapping matches of *pattern* in *string*, as a list of "
"strings.  The *string* is scanned left-to-right, and matches are returned in "
"the order found.  If one or more groups are present in the pattern, return a "
"list of groups; this will be a list of tuples if the pattern has more than "
"one group.  Empty matches are included in the result unless they touch the "
"beginning of another match."
msgstr ""

#: ../Doc/library/re.rst:597
msgid ""
"Return an :term:`iterator` yielding :class:`MatchObject` instances over all "
"non-overlapping matches for the RE *pattern* in *string*.  The *string* is "
"scanned left-to-right, and matches are returned in the order found.  Empty "
"matches are included in the result unless they touch the beginning of "
"another match."
msgstr ""

# d2f18239f46f46c08f6b74e289b2d714
#: ../Doc/library/re.rst:611
msgid ""
"Return the string obtained by replacing the leftmost non-overlapping "
"occurrences of *pattern* in *string* by the replacement *repl*.  If the "
"pattern isn't found, *string* is returned unchanged.  *repl* can be a string "
"or a function; if it is a string, any backslash escapes in it are "
"processed.  That is, ``\\n`` is converted to a single newline character, ``"
"\\r`` is converted to a carriage return, and so forth.  Unknown escapes such "
"as ``\\j`` are left alone.  Backreferences, such as ``\\6``, are replaced "
"with the substring matched by group 6 in the pattern. For example:"
msgstr ""

#: ../Doc/library/re.rst:625
msgid ""
"If *repl* is a function, it is called for every non-overlapping occurrence "
"of *pattern*.  The function takes a single match object argument, and "
"returns the replacement string.  For example:"
msgstr ""

#: ../Doc/library/re.rst:637
msgid "The pattern may be a string or an RE object."
msgstr ""

#: ../Doc/library/re.rst:639
msgid ""
"The optional argument *count* is the maximum number of pattern occurrences "
"to be replaced; *count* must be a non-negative integer.  If omitted or zero, "
"all occurrences will be replaced. Empty matches for the pattern are replaced "
"only when not adjacent to a previous match, so ``sub('x*', '-', 'abc')`` "
"returns ``'-a-b-c-'``."
msgstr ""

#: ../Doc/library/re.rst:645
msgid ""
"In addition to character escapes and backreferences as described above, ``"
"\\g<name>`` will use the substring matched by the group named ``name``, as "
"defined by the ``(?P<name>...)`` syntax. ``\\g<number>`` uses the "
"corresponding group number; ``\\g<2>`` is therefore equivalent to ``\\2``, "
"but isn't ambiguous in a replacement such as ``\\g<2>0``.  ``\\20`` would be "
"interpreted as a reference to group 20, not a reference to group 2 followed "
"by the literal character ``'0'``.  The backreference ``\\g<0>`` substitutes "
"in the entire substring matched by the RE."
msgstr ""

#: ../Doc/library/re.rst:660
msgid ""
"Perform the same operation as :func:`sub`, but return a tuple ``(new_string, "
"number_of_subs_made)``."
msgstr ""

#: ../Doc/library/re.rst:669
msgid ""
"Return *string* with all non-alphanumerics backslashed; this is useful if "
"you want to match an arbitrary literal string that may have regular "
"expression metacharacters in it."
msgstr ""

# 7afde43d690141efa9c782f973c4efbf
#: ../Doc/library/re.rst:676
msgid "Clear the regular expression cache."
msgstr ""

#: ../Doc/library/re.rst:681
msgid ""
"Exception raised when a string passed to one of the functions here is not a "
"valid regular expression (for example, it might contain unmatched "
"parentheses) or when some other error occurs during compilation or "
"matching.  It is never an error if a string contains no match for a pattern."
msgstr ""

#: ../Doc/library/re.rst:690
msgid "Regular Expression Objects"
msgstr ""

#: ../Doc/library/re.rst:694
msgid ""
"The :class:`RegexObject` class supports the following methods and attributes:"
msgstr ""

#: ../Doc/library/re.rst:698
msgid ""
"Scan through *string* looking for a location where this regular expression "
"produces a match, and return a corresponding :class:`MatchObject` instance. "
"Return ``None`` if no position in the string matches the pattern; note that "
"this is different from finding a zero-length match at some point in the "
"string."
msgstr ""

#: ../Doc/library/re.rst:703
msgid ""
"The optional second parameter *pos* gives an index in the string where the "
"search is to start; it defaults to ``0``.  This is not completely equivalent "
"to slicing the string; the ``'^'`` pattern character matches at the real "
"beginning of the string and at positions just after a newline, but not "
"necessarily at the index where the search is to start."
msgstr ""

#: ../Doc/library/re.rst:709
msgid ""
"The optional parameter *endpos* limits how far the string will be searched; "
"it will be as if the string is *endpos* characters long, so only the "
"characters from *pos* to ``endpos - 1`` will be searched for a match.  If "
"*endpos* is less than *pos*, no match will be found, otherwise, if *rx* is a "
"compiled regular expression object, ``rx.search(string, 0, 50)`` is "
"equivalent to ``rx.search(string[:50], 0)``."
msgstr ""

#: ../Doc/library/re.rst:724
msgid ""
"If zero or more characters at the *beginning* of *string* match this regular "
"expression, return a corresponding :class:`MatchObject` instance.  Return "
"``None`` if the string does not match the pattern; note that this is "
"different from a zero-length match."
msgstr ""

#: ../Doc/library/re.rst:729
msgid ""
"The optional *pos* and *endpos* parameters have the same meaning as for the :"
"meth:`~RegexObject.search` method."
msgstr ""

# cd3d22b1f49641b0928a419b0a22c579
#: ../Doc/library/re.rst:737
msgid ""
"If you want to locate a match anywhere in *string*, use :meth:`~RegexObject."
"search` instead (see also :ref:`search-vs-match`)."
msgstr ""

#: ../Doc/library/re.rst:743
msgid "Identical to the :func:`split` function, using the compiled pattern."
msgstr ""

#: ../Doc/library/re.rst:748
msgid ""
"Similar to the :func:`findall` function, using the compiled pattern, but "
"also accepts optional *pos* and *endpos* parameters that limit the search "
"region like for :meth:`match`."
msgstr ""

#: ../Doc/library/re.rst:755
msgid ""
"Similar to the :func:`finditer` function, using the compiled pattern, but "
"also accepts optional *pos* and *endpos* parameters that limit the search "
"region like for :meth:`match`."
msgstr ""

#: ../Doc/library/re.rst:762
msgid "Identical to the :func:`sub` function, using the compiled pattern."
msgstr ""

#: ../Doc/library/re.rst:767
msgid "Identical to the :func:`subn` function, using the compiled pattern."
msgstr ""

# be9e5022e7284fc2a2c61bede36cb0bb
#: ../Doc/library/re.rst:772
msgid ""
"The regex matching flags.  This is a combination of the flags given to :func:"
"`.compile` and any ``(?...)`` inline flags in the pattern."
msgstr ""

#: ../Doc/library/re.rst:778
msgid "The number of capturing groups in the pattern."
msgstr ""

#: ../Doc/library/re.rst:783
msgid ""
"A dictionary mapping any symbolic group names defined by ``(?P<id>)`` to "
"group numbers.  The dictionary is empty if no symbolic groups were used in "
"the pattern."
msgstr ""

#: ../Doc/library/re.rst:790
msgid "The pattern string from which the RE object was compiled."
msgstr ""

#: ../Doc/library/re.rst:796
msgid "Match Objects"
msgstr ""

#: ../Doc/library/re.rst:800
msgid ""
"Match Objects always have a boolean value of :const:`True`, so that you can "
"test whether e.g. :func:`match` resulted in a match with a simple if "
"statement.  They support the following methods and attributes:"
msgstr ""

#: ../Doc/library/re.rst:807
msgid ""
"Return the string obtained by doing backslash substitution on the template "
"string *template*, as done by the :meth:`~RegexObject.sub` method.  Escapes "
"such as ``\\n`` are converted to the appropriate characters, and numeric "
"backreferences (``\\1``, ``\\2``) and named backreferences (``\\g<1>``, ``"
"\\g<name>``) are replaced by the contents of the corresponding group."
msgstr ""

#: ../Doc/library/re.rst:816
msgid ""
"Returns one or more subgroups of the match.  If there is a single argument, "
"the result is a single string; if there are multiple arguments, the result "
"is a tuple with one item per argument. Without arguments, *group1* defaults "
"to zero (the whole match is returned). If a *groupN* argument is zero, the "
"corresponding return value is the entire matching string; if it is in the "
"inclusive range [1..99], it is the string matching the corresponding "
"parenthesized group.  If a group number is negative or larger than the "
"number of groups defined in the pattern, an :exc:`IndexError` exception is "
"raised. If a group is contained in a part of the pattern that did not match, "
"the corresponding result is ``None``. If a group is contained in a part of "
"the pattern that matched multiple times, the last match is returned."
msgstr ""

#: ../Doc/library/re.rst:838
msgid ""
"If the regular expression uses the ``(?P<name>...)`` syntax, the *groupN* "
"arguments may also be strings identifying groups by their group name.  If a "
"string argument is not used as a group name in the pattern, an :exc:"
"`IndexError` exception is raised."
msgstr ""

#: ../Doc/library/re.rst:843
msgid "A moderately complicated example:"
msgstr ""

#: ../Doc/library/re.rst:851
msgid "Named groups can also be referred to by their index:"
msgstr ""

#: ../Doc/library/re.rst:858
msgid "If a group matches multiple times, only the last match is accessible:"
msgstr ""

#: ../Doc/library/re.rst:867
msgid ""
"Return a tuple containing all the subgroups of the match, from 1 up to "
"however many groups are in the pattern.  The *default* argument is used for "
"groups that did not participate in the match; it defaults to ``None``.  "
"(Incompatibility note: in the original Python 1.5 release, if the tuple was "
"one element long, a string would be returned instead.  In later versions "
"(from 1.5.1 on), a singleton tuple is returned in such cases.)"
msgstr ""

#: ../Doc/library/re.rst:880
msgid ""
"If we make the decimal place and everything after it optional, not all "
"groups might participate in the match.  These groups will default to "
"``None`` unless the *default* argument is given:"
msgstr ""

#: ../Doc/library/re.rst:893
msgid ""
"Return a dictionary containing all the *named* subgroups of the match, keyed "
"by the subgroup name.  The *default* argument is used for groups that did "
"not participate in the match; it defaults to ``None``.  For example:"
msgstr ""

#: ../Doc/library/re.rst:905
msgid ""
"Return the indices of the start and end of the substring matched by *group*; "
"*group* defaults to zero (meaning the whole matched substring). Return "
"``-1`` if *group* exists but did not contribute to the match.  For a match "
"object *m*, and a group *g* that did contribute to the match, the substring "
"matched by group *g* (equivalent to ``m.group(g)``) is ::"
msgstr ""

#: ../Doc/library/re.rst:913
msgid ""
"Note that ``m.start(group)`` will equal ``m.end(group)`` if *group* matched "
"a null string.  For example, after ``m = re.search('b(c?)', 'cba')``, ``m."
"start(0)`` is 1, ``m.end(0)`` is 2, ``m.start(1)`` and ``m.end(1)`` are both "
"2, and ``m.start(2)`` raises an :exc:`IndexError` exception."
msgstr ""

#: ../Doc/library/re.rst:918
msgid "An example that will remove *remove_this* from email addresses:"
msgstr ""

#: ../Doc/library/re.rst:928
msgid ""
"For :class:`MatchObject` *m*, return the 2-tuple ``(m.start(group), m.end"
"(group))``. Note that if *group* did not contribute to the match, this is ``"
"(-1, -1)``.  *group* defaults to zero, the entire match."
msgstr ""

#: ../Doc/library/re.rst:935
msgid ""
"The value of *pos* which was passed to the :meth:`~RegexObject.search` or :"
"meth:`~RegexObject.match` method of the :class:`RegexObject`.  This is the "
"index into the string at which the RE engine started looking for a match."
msgstr ""

#: ../Doc/library/re.rst:942
msgid ""
"The value of *endpos* which was passed to the :meth:`~RegexObject.search` "
"or :meth:`~RegexObject.match` method of the :class:`RegexObject`.  This is "
"the index into the string beyond which the RE engine will not go."
msgstr ""

#: ../Doc/library/re.rst:949
msgid ""
"The integer index of the last matched capturing group, or ``None`` if no "
"group was matched at all. For example, the expressions ``(a)b``, ``((a)(b))"
"``, and ``((ab))`` will have ``lastindex == 1`` if applied to the string "
"``'ab'``, while the expression ``(a)(b)`` will have ``lastindex == 2``, if "
"applied to the same string."
msgstr ""

#: ../Doc/library/re.rst:958
msgid ""
"The name of the last matched capturing group, or ``None`` if the group "
"didn't have a name, or if no group was matched at all."
msgstr ""

#: ../Doc/library/re.rst:964
msgid ""
"The regular expression object whose :meth:`~RegexObject.match` or :meth:"
"`~RegexObject.search` method produced this :class:`MatchObject` instance."
msgstr ""

#: ../Doc/library/re.rst:971
msgid ""
"The string passed to :meth:`~RegexObject.match` or :meth:`~RegexObject."
"search`."
msgstr ""

#: ../Doc/library/re.rst:980
msgid "Checking For a Pair"
msgstr ""

#: ../Doc/library/re.rst:982
msgid ""
"In this example, we'll use the following helper function to display match "
"objects a little more gracefully:"
msgstr ""

# d28ee5d02f064d8889e354413432467d
#: ../Doc/library/re.rst:992
msgid ""
"Suppose you are writing a poker program where a player's hand is represented "
"as a 5-character string with each character representing a card, \"a\" for "
"ace, \"k\" for king, \"q\" for queen, \"j\" for jack, \"t\" for 10, and "
"\"2\" through \"9\" representing the card with that value."
msgstr ""

#: ../Doc/library/re.rst:997
msgid "To see if a given string is a valid hand, one could do the following:"
msgstr ""

#: ../Doc/library/re.rst:1007
msgid ""
"That last hand, ``\"727ak\"``, contained a pair, or two of the same valued "
"cards. To match this with a regular expression, one could use backreferences "
"as such:"
msgstr ""

#: ../Doc/library/re.rst:1017
msgid ""
"To find out what card the pair consists of, one could use the :meth:"
"`~MatchObject.group` method of :class:`MatchObject` in the following manner:"
msgstr ""

#: ../Doc/library/re.rst:1038
msgid "Simulating scanf()"
msgstr ""

# 178651128e7a4b1797570f5521e2e400
#: ../Doc/library/re.rst:1042
msgid ""
"Python does not currently have an equivalent to :c:func:`scanf`.  Regular "
"expressions are generally more powerful, though also more verbose, than :c:"
"func:`scanf` format strings.  The table below offers some more-or-less "
"equivalent mappings between :c:func:`scanf` format tokens and regular "
"expressions."
msgstr ""

# 1acd4a46083d433faae63f2b3b8f85ea
#: ../Doc/library/re.rst:1049
msgid ":c:func:`scanf` Token"
msgstr ""

#: ../Doc/library/re.rst:1049
msgid "Regular Expression"
msgstr ""

#: ../Doc/library/re.rst:1051 ../Doc/library/xml.etree.elementtree.rst:319
msgid "``.``"
msgstr ""

#: ../Doc/library/re.rst:1053
msgid "``%5c``"
msgstr ""

#: ../Doc/library/re.rst:1053
msgid "``.{5}``"
msgstr ""

#: ../Doc/library/re.rst:1055
msgid "``[-+]?\\d+``"
msgstr ""

#: ../Doc/library/re.rst:1057
msgid "``%e``, ``%E``, ``%f``, ``%g``"
msgstr ""

#: ../Doc/library/re.rst:1057
msgid "``[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?``"
msgstr ""

#: ../Doc/library/re.rst:1059
msgid "``%i``"
msgstr ""

#: ../Doc/library/re.rst:1059
msgid "``[-+]?(0[xX][\\dA-Fa-f]+|0[0-7]*|\\d+)``"
msgstr ""

#: ../Doc/library/re.rst:1061
msgid "``%o``"
msgstr ""

# cd144b24ec3946d09bd203249a0a6a34
#: ../Doc/library/re.rst:1061
msgid "``[-+]?[0-7]+``"
msgstr ""

#: ../Doc/library/re.rst:1063
msgid "``%s``"
msgstr ""

#: ../Doc/library/re.rst:1063
msgid "``\\S+``"
msgstr ""

#: ../Doc/library/re.rst:1065
msgid "``%u``"
msgstr ""

#: ../Doc/library/re.rst:1065
msgid "``\\d+``"
msgstr ""

#: ../Doc/library/re.rst:1067
msgid "``%x``, ``%X``"
msgstr ""

# a9387169ef6b4d428e70bb1382e29cf3
#: ../Doc/library/re.rst:1067
msgid "``[-+]?(0[xX])?[\\dA-Fa-f]+``"
msgstr ""

#: ../Doc/library/re.rst:1070
msgid "To extract the filename and numbers from a string like ::"
msgstr ""

# d3731bd3243043d0b7b5e4c0d220a548
#: ../Doc/library/re.rst:1074
msgid "you would use a :c:func:`scanf` format like ::"
msgstr ""

#: ../Doc/library/re.rst:1078
msgid "The equivalent regular expression would be ::"
msgstr ""

#: ../Doc/library/re.rst:1086
msgid "search() vs. match()"
msgstr ""

# 94b864525084490d86d35d75b2840184
#: ../Doc/library/re.rst:1090
msgid ""
"Python offers two different primitive operations based on regular "
"expressions: :func:`re.match` checks for a match only at the beginning of "
"the string, while :func:`re.search` checks for a match anywhere in the "
"string (this is what Perl does by default)."
msgstr ""

# 2c11a51030a3476da14511021a5bc304
#: ../Doc/library/re.rst:1101
msgid ""
"Regular expressions beginning with ``'^'`` can be used with :func:`search` "
"to restrict the match at the beginning of the string::"
msgstr ""

# 529e7957e95f482c8464c6219dfd0c3c
#: ../Doc/library/re.rst:1109
msgid ""
"Note however that in :const:`MULTILINE` mode :func:`match` only matches at "
"the beginning of the string, whereas using :func:`search` with a regular "
"expression beginning with ``'^'`` will match at the beginning of each line."
msgstr ""

#: ../Doc/library/re.rst:1119
msgid "Making a Phonebook"
msgstr ""

#: ../Doc/library/re.rst:1121
msgid ""
":func:`split` splits a string into a list delimited by the passed pattern.  "
"The method is invaluable for converting textual data into data structures "
"that can be easily read and modified by Python as demonstrated in the "
"following example that creates a phonebook."
msgstr ""

#: ../Doc/library/re.rst:1126
msgid ""
"First, here is the input.  Normally it may come from a file, here we are "
"using triple-quoted string syntax:"
msgstr ""

#: ../Doc/library/re.rst:1137
msgid ""
"The entries are separated by one or more newlines. Now we convert the string "
"into a list with each nonempty line having its own entry:"
msgstr ""

#: ../Doc/library/re.rst:1150
msgid ""
"Finally, split each entry into a list with first name, last name, telephone "
"number, and address.  We use the ``maxsplit`` parameter of :func:`split` "
"because the address has spaces, our splitting pattern, in it:"
msgstr ""

#: ../Doc/library/re.rst:1163
msgid ""
"The ``:?`` pattern matches the colon after the last name, so that it does "
"not occur in the result list.  With a ``maxsplit`` of ``4``, we could "
"separate the house number from the street name:"
msgstr ""

#: ../Doc/library/re.rst:1178
msgid "Text Munging"
msgstr ""

#: ../Doc/library/re.rst:1180
msgid ""
":func:`sub` replaces every occurrence of a pattern with a string or the "
"result of a function.  This example demonstrates using :func:`sub` with a "
"function to \"munge\" text, or randomize the order of all the characters in "
"each word of a sentence except for the first and last characters::"
msgstr ""

#: ../Doc/library/re.rst:1197
msgid "Finding all Adverbs"
msgstr ""

#: ../Doc/library/re.rst:1199
msgid ""
":func:`findall` matches *all* occurrences of a pattern, not just the first "
"one as :func:`search` does.  For example, if one was a writer and wanted to "
"find all of the adverbs in some text, he or she might use :func:`findall` in "
"the following manner:"
msgstr ""

#: ../Doc/library/re.rst:1210
msgid "Finding all Adverbs and their Positions"
msgstr ""

#: ../Doc/library/re.rst:1212
msgid ""
"If one wants more information about all matches of a pattern than the "
"matched text, :func:`finditer` is useful as it provides instances of :class:"
"`MatchObject` instead of strings.  Continuing with the previous example, if "
"one was a writer who wanted to find all of the adverbs *and their positions* "
"in some text, he or she would use :func:`finditer` in the following manner:"
msgstr ""

#: ../Doc/library/re.rst:1226
msgid "Raw String Notation"
msgstr ""

#: ../Doc/library/re.rst:1228
msgid ""
"Raw string notation (``r\"text\"``) keeps regular expressions sane.  Without "
"it, every backslash (``'\\'``) in a regular expression would have to be "
"prefixed with another one to escape it.  For example, the two following "
"lines of code are functionally identical:"
msgstr ""

#: ../Doc/library/re.rst:1238
msgid ""
"When one wants to match a literal backslash, it must be escaped in the "
"regular expression.  With raw string notation, this means ``r\"\\\\\"``.  "
"Without raw string notation, one must use ``\"\\\\\\\\\"``, making the "
"following lines of code functionally identical:"
msgstr ""

#: ../Doc/library/readline.rst:2
msgid ":mod:`readline` --- GNU readline interface"
msgstr ""

# b6643a6a7f6140acb7eee82b387c55f5
#: ../Doc/library/readline.rst:10
msgid ""
"The :mod:`readline` module defines a number of functions to facilitate "
"completion and reading/writing of history files from the Python interpreter. "
"This module can be used directly or via the :mod:`rlcompleter` module.  "
"Settings made using  this module affect the behaviour of both the "
"interpreter's interactive prompt  and the prompts offered by the :func:"
"`raw_input` and :func:`input` built-in functions."
msgstr ""

#: ../Doc/library/readline.rst:19
msgid ""
"On MacOS X the :mod:`readline` module can be implemented using the "
"``libedit`` library instead of GNU readline."
msgstr ""

# 0a12b9385d2c4af0a1efdc4f855bf265
#: ../Doc/library/readline.rst:22
msgid ""
"The configuration file for ``libedit`` is different from that of GNU "
"readline. If you programmatically load configuration strings you can check "
"for the text \"libedit\" in :const:`readline.__doc__` to differentiate "
"between GNU readline and libedit."
msgstr ""

#: ../Doc/library/readline.rst:28
msgid "The :mod:`readline` module defines the following functions:"
msgstr ""

#: ../Doc/library/readline.rst:33
msgid "Parse and execute single line of a readline init file."
msgstr ""

#: ../Doc/library/readline.rst:38
msgid "Return the current contents of the line buffer."
msgstr ""

#: ../Doc/library/readline.rst:43
msgid "Insert text into the command line."
msgstr ""

#: ../Doc/library/readline.rst:48
msgid ""
"Parse a readline initialization file. The default filename is the last "
"filename used."
msgstr ""

#: ../Doc/library/readline.rst:54
msgid ""
"Load a readline history file. The default filename is :file:`~/.history`."
msgstr ""

#: ../Doc/library/readline.rst:59
msgid ""
"Save a readline history file. The default filename is :file:`~/.history`."
msgstr ""

#: ../Doc/library/readline.rst:64
msgid ""
"Clear the current history.  (Note: this function is not available if the "
"installed version of GNU readline doesn't support it.)"
msgstr ""

#: ../Doc/library/readline.rst:72
msgid ""
"Return the desired length of the history file.  Negative values imply "
"unlimited history file size."
msgstr ""

#: ../Doc/library/readline.rst:78
msgid ""
"Set the number of lines to save in the history file. :func:"
"`write_history_file` uses this value to truncate the history file when "
"saving.  Negative values imply unlimited history file size."
msgstr ""

#: ../Doc/library/readline.rst:85
msgid ""
"Return the number of lines currently in the history.  (This is different "
"from :func:`get_history_length`, which returns the maximum number of lines "
"that will be written to a history file.)"
msgstr ""

#: ../Doc/library/readline.rst:94
msgid "Return the current contents of history item at *index*."
msgstr ""

#: ../Doc/library/readline.rst:101
msgid "Remove history item specified by its position from the history."
msgstr ""

#: ../Doc/library/readline.rst:108
msgid "Replace history item specified by its position with the given line."
msgstr ""

#: ../Doc/library/readline.rst:115
msgid ""
"Change what's displayed on the screen to reflect the current contents of the "
"line buffer."
msgstr ""

#: ../Doc/library/readline.rst:123
msgid ""
"Set or remove the startup_hook function.  If *function* is specified, it "
"will be used as the new startup_hook function; if omitted or ``None``, any "
"hook function already installed is removed.  The startup_hook function is "
"called with no arguments just before readline prints the first prompt."
msgstr ""

#: ../Doc/library/readline.rst:131
msgid ""
"Set or remove the pre_input_hook function.  If *function* is specified, it "
"will be used as the new pre_input_hook function; if omitted or ``None``, any "
"hook function already installed is removed.  The pre_input_hook function is "
"called with no arguments after the first prompt has been printed and just "
"before readline starts reading input characters."
msgstr ""

#: ../Doc/library/readline.rst:140
msgid ""
"Set or remove the completer function.  If *function* is specified, it will "
"be used as the new completer function; if omitted or ``None``, any completer "
"function already installed is removed.  The completer function is called as "
"``function(text, state)``, for *state* in ``0``, ``1``, ``2``, ..., until it "
"returns a non-string value.  It should return the next possible completion "
"starting with *text*."
msgstr ""

#: ../Doc/library/readline.rst:150
msgid ""
"Get the completer function, or ``None`` if no completer function has been "
"set."
msgstr ""

#: ../Doc/library/readline.rst:157
msgid "Get the type of completion being attempted."
msgstr ""

#: ../Doc/library/readline.rst:163
msgid "Get the beginning index of the readline tab-completion scope."
msgstr ""

#: ../Doc/library/readline.rst:168
msgid "Get the ending index of the readline tab-completion scope."
msgstr ""

#: ../Doc/library/readline.rst:173
msgid "Set the readline word delimiters for tab-completion."
msgstr ""

#: ../Doc/library/readline.rst:178
msgid "Get the readline word delimiters for tab-completion."
msgstr ""

#: ../Doc/library/readline.rst:182
msgid ""
"Set or remove the completion display function.  If *function* is specified, "
"it will be used as the new completion display function; if omitted or "
"``None``, any completion display function already installed is removed.  The "
"completion display function is called as ``function(substitution, [matches], "
"longest_match_length)`` once each time matches need to be displayed."
msgstr ""

#: ../Doc/library/readline.rst:193
msgid "Append a line to the history buffer, as if it was the last line typed."
msgstr ""

#: ../Doc/library/readline.rst:198
msgid "Completion of Python identifiers at the interactive prompt."
msgstr ""

#: ../Doc/library/readline.rst:206
msgid ""
"The following example demonstrates how to use the :mod:`readline` module's "
"history reading and writing functions to automatically load and save a "
"history file named :file:`.pyhist` from the user's home directory.  The code "
"below would normally be executed automatically during interactive sessions "
"from the user's :envvar:`PYTHONSTARTUP` file. ::"
msgstr ""

#: ../Doc/library/readline.rst:223
msgid ""
"The following example extends the :class:`code.InteractiveConsole` class to "
"support history save/restore. ::"
msgstr ""

# 52dfcd0a7d184a7fb4588c2326357b97
#: ../Doc/library/repr.rst:2
msgid ":mod:`repr` --- Alternate :func:`repr` implementation"
msgstr ""

# ce0b97c00df74939af2dd1e324b1be65
#: ../Doc/library/repr.rst:9
msgid ""
"The :mod:`repr` module has been renamed to :mod:`reprlib` in Python 3.  The :"
"term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

# 6694b0b74f204d22ae02ae1c87f0bfbb
#: ../Doc/library/repr.rst:13
msgid "**Source code:** :source:`Lib/repr.py`"
msgstr ""

# 1045213cfc36443eb1f005b7e1822324
#: ../Doc/library/repr.rst:17
msgid ""
"The :mod:`repr` module provides a means for producing object representations "
"with limits on the size of the resulting strings. This is used in the Python "
"debugger and may be useful in other contexts as well."
msgstr ""

#: ../Doc/library/repr.rst:21
msgid "This module provides a class, an instance, and a function:"
msgstr ""

#: ../Doc/library/repr.rst:26
msgid ""
"Class which provides formatting services useful in implementing functions "
"similar to the built-in :func:`repr`; size limits for  different object "
"types are added to avoid the generation of representations which are "
"excessively long."
msgstr ""

#: ../Doc/library/repr.rst:33
msgid ""
"This is an instance of :class:`Repr` which is used to provide the :func:`."
"repr` function described below.  Changing the attributes of this object will "
"affect the size limits used by :func:`.repr` and the Python debugger."
msgstr ""

#: ../Doc/library/repr.rst:40
msgid ""
"This is the :meth:`~Repr.repr` method of ``aRepr``.  It returns a string "
"similar to that returned by the built-in function of the same name, but with "
"limits on most sizes."
msgstr ""

#: ../Doc/library/repr.rst:48
msgid "Repr Objects"
msgstr ""

# 87c699a8ce94411f88a51bbf9a239d71
#: ../Doc/library/repr.rst:50
msgid ""
":class:`Repr` instances provide several attributes which can be used to "
"provide size limits for the representations of different object types,  and "
"methods which format specific object types."
msgstr ""

#: ../Doc/library/repr.rst:57
msgid ""
"Depth limit on the creation of recursive representations.  The default is "
"``6``."
msgstr ""

#: ../Doc/library/repr.rst:68
msgid ""
"Limits on the number of entries represented for the named object type.  The "
"default is ``4`` for :attr:`maxdict`, ``5`` for :attr:`maxarray`, and  ``6`` "
"for the others."
msgstr ""

# 175c23e05177457895b669b3aa36eda1
#: ../Doc/library/repr.rst:78
msgid ""
"Maximum number of characters in the representation for a long integer.  "
"Digits are dropped from the middle.  The default is ``40``."
msgstr ""

#: ../Doc/library/repr.rst:84
msgid ""
"Limit on the number of characters in the representation of the string.  Note "
"that the \"normal\" representation of the string is used as the character "
"source: if escape sequences are needed in the representation, these may be "
"mangled when the representation is shortened.  The default is ``30``."
msgstr ""

#: ../Doc/library/repr.rst:92
msgid ""
"This limit is used to control the size of object types for which no specific "
"formatting method is available on the :class:`Repr` object. It is applied in "
"a similar manner as :attr:`maxstring`.  The default is ``20``."
msgstr ""

#: ../Doc/library/repr.rst:99
msgid ""
"The equivalent to the built-in :func:`repr` that uses the formatting imposed "
"by the instance."
msgstr ""

#: ../Doc/library/repr.rst:105
msgid ""
"Recursive implementation used by :meth:`.repr`.  This uses the type of *obj* "
"to determine which formatting method to call, passing it *obj* and *level*.  "
"The type-specific methods should call :meth:`repr1` to perform recursive "
"formatting, with ``level - 1`` for the value of *level* in the recursive  "
"call."
msgstr ""

#: ../Doc/library/repr.rst:114
msgid ""
"Formatting methods for specific types are implemented as methods with a name "
"based on the type name.  In the method name, **TYPE** is replaced by "
"``string.join(string.split(type(obj).__name__, '_'))``. Dispatch to these "
"methods is handled by :meth:`repr1`. Type-specific methods which need to "
"recursively format a value should call ``self.repr1(subobj, level - 1)``."
msgstr ""

#: ../Doc/library/repr.rst:124
msgid "Subclassing Repr Objects"
msgstr ""

#: ../Doc/library/repr.rst:126
msgid ""
"The use of dynamic dispatching by :meth:`Repr.repr1` allows subclasses of :"
"class:`Repr` to add support for additional built-in object types or to "
"modify the handling of types already supported. This example shows how "
"special support for file objects could be added::"
msgstr ""

#: ../Doc/library/resource.rst:3
msgid ":mod:`resource` --- Resource usage information"
msgstr ""

#: ../Doc/library/resource.rst:12
msgid ""
"This module provides basic mechanisms for measuring and controlling system "
"resources utilized by a program."
msgstr ""

#: ../Doc/library/resource.rst:15
msgid ""
"Symbolic constants are used to specify particular system resources and to "
"request usage information about either the current process or its children."
msgstr ""

#: ../Doc/library/resource.rst:18
msgid "A single exception is defined for errors:"
msgstr ""

#: ../Doc/library/resource.rst:23
msgid ""
"The functions described below may raise this error if the underlying system "
"call failures unexpectedly."
msgstr ""

#: ../Doc/library/resource.rst:28
msgid "Resource Limits"
msgstr ""

#: ../Doc/library/resource.rst:30
msgid ""
"Resources usage can be limited using the :func:`setrlimit` function "
"described below. Each resource is controlled by a pair of limits: a soft "
"limit and a hard limit. The soft limit is the current limit, and may be "
"lowered or raised by a process over time. The soft limit can never exceed "
"the hard limit. The hard limit can be lowered to any value greater than the "
"soft limit, but not raised. (Only processes with the effective UID of the "
"super-user can raise a hard limit.)"
msgstr ""

#: ../Doc/library/resource.rst:38
msgid ""
"The specific resources that can be limited are system dependent. They are "
"described in the :manpage:`getrlimit(2)` man page.  The resources listed "
"below are supported when the underlying operating system supports them; "
"resources which cannot be checked or controlled by the operating system are "
"not defined in this module for those platforms."
msgstr ""

#: ../Doc/library/resource.rst:47
msgid ""
"Returns a tuple ``(soft, hard)`` with the current soft and hard limits of "
"*resource*. Raises :exc:`ValueError` if an invalid resource is specified, "
"or :exc:`error` if the underlying system call fails unexpectedly."
msgstr ""

#: ../Doc/library/resource.rst:54
msgid ""
"Sets new limits of consumption of *resource*. The *limits* argument must be "
"a tuple ``(soft, hard)`` of two integers describing the new limits. A value "
"of ``-1`` can be used to specify the maximum possible upper limit."
msgstr ""

#: ../Doc/library/resource.rst:58
msgid ""
"Raises :exc:`ValueError` if an invalid resource is specified, if the new "
"soft limit exceeds the hard limit, or if a process tries to raise its hard "
"limit (unless the process has an effective UID of super-user).  Can also "
"raise :exc:`error` if the underlying system call fails."
msgstr ""

#: ../Doc/library/resource.rst:63
msgid ""
"These symbols define resources whose consumption can be controlled using "
"the :func:`setrlimit` and :func:`getrlimit` functions described below. The "
"values of these symbols are exactly the constants used by C programs."
msgstr ""

#: ../Doc/library/resource.rst:67
msgid ""
"The Unix man page for :manpage:`getrlimit(2)` lists the available resources. "
"Note that not all systems use the same symbol or same value to denote the "
"same resource.  This module does not attempt to mask platform differences "
"--- symbols not defined for a platform will not be available from this "
"module on that platform."
msgstr ""

#: ../Doc/library/resource.rst:76
msgid ""
"The maximum size (in bytes) of a core file that the current process can "
"create. This may result in the creation of a partial core file if a larger "
"core would be required to contain the entire process image."
msgstr ""

#: ../Doc/library/resource.rst:83
msgid ""
"The maximum amount of processor time (in seconds) that a process can use. If "
"this limit is exceeded, a :const:`SIGXCPU` signal is sent to the process. "
"(See the :mod:`signal` module documentation for information about how to "
"catch this signal and do something useful, e.g. flush open files to disk.)"
msgstr ""

#: ../Doc/library/resource.rst:91
msgid ""
"The maximum size of a file which the process may create.  This only affects "
"the stack of the main thread in a multi-threaded process."
msgstr ""

#: ../Doc/library/resource.rst:97
msgid "The maximum size (in bytes) of the process's heap."
msgstr ""

#: ../Doc/library/resource.rst:102
msgid "The maximum size (in bytes) of the call stack for the current process."
msgstr ""

#: ../Doc/library/resource.rst:107
msgid ""
"The maximum resident set size that should be made available to the process."
msgstr ""

#: ../Doc/library/resource.rst:112
msgid "The maximum number of processes the current process may create."
msgstr ""

#: ../Doc/library/resource.rst:117
msgid "The maximum number of open file descriptors for the current process."
msgstr ""

#: ../Doc/library/resource.rst:122
msgid "The BSD name for :const:`RLIMIT_NOFILE`."
msgstr ""

#: ../Doc/library/resource.rst:127
msgid "The maximum address space which may be locked in memory."
msgstr ""

#: ../Doc/library/resource.rst:132
msgid "The largest area of mapped memory which the process may occupy."
msgstr ""

#: ../Doc/library/resource.rst:137
msgid ""
"The maximum area (in bytes) of address space which may be taken by the "
"process."
msgstr ""

#: ../Doc/library/resource.rst:141
msgid "Resource Usage"
msgstr ""

#: ../Doc/library/resource.rst:143
msgid "These functions are used to retrieve resource usage information:"
msgstr ""

#: ../Doc/library/resource.rst:148
msgid ""
"This function returns an object that describes the resources consumed by "
"either the current process or its children, as specified by the *who* "
"parameter.  The *who* parameter should be specified using one of the :const:"
"`RUSAGE_\\*` constants described below."
msgstr ""

#: ../Doc/library/resource.rst:153
msgid ""
"The fields of the return value each describe how a particular system "
"resource has been used, e.g. amount of time spent running is user mode or "
"number of times the process was swapped out of main memory. Some values are "
"dependent on the clock tick internal, e.g. the amount of memory the process "
"is using."
msgstr ""

#: ../Doc/library/resource.rst:158
msgid ""
"For backward compatibility, the return value is also accessible as a tuple "
"of 16 elements."
msgstr ""

#: ../Doc/library/resource.rst:161
msgid ""
"The fields :attr:`ru_utime` and :attr:`ru_stime` of the return value are "
"floating point values representing the amount of time spent executing in "
"user mode and the amount of time spent executing in system mode, "
"respectively. The remaining values are integers. Consult the :manpage:"
"`getrusage(2)` man page for detailed information about these values. A brief "
"summary is presented here:"
msgstr ""

#: ../Doc/library/resource.rst:168
msgid "Resource"
msgstr ""

#: ../Doc/library/resource.rst:170
msgid ":attr:`ru_utime`"
msgstr ""

#: ../Doc/library/resource.rst:170
msgid "time in user mode (float)"
msgstr ""

#: ../Doc/library/resource.rst:172
msgid ":attr:`ru_stime`"
msgstr ""

#: ../Doc/library/resource.rst:172
msgid "time in system mode (float)"
msgstr ""

#: ../Doc/library/resource.rst:174
msgid ":attr:`ru_maxrss`"
msgstr ""

#: ../Doc/library/resource.rst:174
msgid "maximum resident set size"
msgstr ""

#: ../Doc/library/resource.rst:176
msgid ":attr:`ru_ixrss`"
msgstr ""

#: ../Doc/library/resource.rst:176
msgid "shared memory size"
msgstr ""

#: ../Doc/library/resource.rst:178
msgid ":attr:`ru_idrss`"
msgstr ""

#: ../Doc/library/resource.rst:178
msgid "unshared memory size"
msgstr ""

#: ../Doc/library/resource.rst:180 ../Doc/library/zipfile.rst:402
msgid "``5``"
msgstr ""

#: ../Doc/library/resource.rst:180
msgid ":attr:`ru_isrss`"
msgstr ""

#: ../Doc/library/resource.rst:180
msgid "unshared stack size"
msgstr ""

#: ../Doc/library/resource.rst:182
msgid "``6``"
msgstr ""

#: ../Doc/library/resource.rst:182
msgid ":attr:`ru_minflt`"
msgstr ""

#: ../Doc/library/resource.rst:182
msgid "page faults not requiring I/O"
msgstr ""

#: ../Doc/library/resource.rst:184
msgid "``7``"
msgstr ""

#: ../Doc/library/resource.rst:184
msgid ":attr:`ru_majflt`"
msgstr ""

#: ../Doc/library/resource.rst:184
msgid "page faults requiring I/O"
msgstr ""

#: ../Doc/library/resource.rst:186
msgid "``8``"
msgstr ""

#: ../Doc/library/resource.rst:186
msgid ":attr:`ru_nswap`"
msgstr ""

#: ../Doc/library/resource.rst:186
msgid "number of swap outs"
msgstr ""

#: ../Doc/library/resource.rst:188
msgid "``9``"
msgstr ""

#: ../Doc/library/resource.rst:188
msgid ":attr:`ru_inblock`"
msgstr ""

#: ../Doc/library/resource.rst:188
msgid "block input operations"
msgstr ""

#: ../Doc/library/resource.rst:190
msgid "``10``"
msgstr ""

#: ../Doc/library/resource.rst:190
msgid ":attr:`ru_oublock`"
msgstr ""

#: ../Doc/library/resource.rst:190
msgid "block output operations"
msgstr ""

#: ../Doc/library/resource.rst:192
msgid "``11``"
msgstr ""

#: ../Doc/library/resource.rst:192
msgid ":attr:`ru_msgsnd`"
msgstr ""

#: ../Doc/library/resource.rst:192
msgid "messages sent"
msgstr ""

#: ../Doc/library/resource.rst:194
msgid "``12``"
msgstr ""

#: ../Doc/library/resource.rst:194
msgid ":attr:`ru_msgrcv`"
msgstr ""

#: ../Doc/library/resource.rst:194
msgid "messages received"
msgstr ""

#: ../Doc/library/resource.rst:196
msgid "``13``"
msgstr ""

#: ../Doc/library/resource.rst:196
msgid ":attr:`ru_nsignals`"
msgstr ""

#: ../Doc/library/resource.rst:196
msgid "signals received"
msgstr ""

#: ../Doc/library/resource.rst:198
msgid "``14``"
msgstr ""

#: ../Doc/library/resource.rst:198
msgid ":attr:`ru_nvcsw`"
msgstr ""

#: ../Doc/library/resource.rst:198
msgid "voluntary context switches"
msgstr ""

#: ../Doc/library/resource.rst:200
msgid "``15``"
msgstr ""

#: ../Doc/library/resource.rst:200
msgid ":attr:`ru_nivcsw`"
msgstr ""

#: ../Doc/library/resource.rst:200
msgid "involuntary context switches"
msgstr ""

#: ../Doc/library/resource.rst:203
msgid ""
"This function will raise a :exc:`ValueError` if an invalid *who* parameter "
"is specified. It may also raise :exc:`error` exception in unusual "
"circumstances."
msgstr ""

#: ../Doc/library/resource.rst:212
msgid ""
"Returns the number of bytes in a system page. (This need not be the same as "
"the hardware page size.) This function is useful for determining the number "
"of bytes of memory a process is using. The third element of the tuple "
"returned by :func:`getrusage` describes memory usage in pages; multiplying "
"by page size produces number of bytes."
msgstr ""

#: ../Doc/library/resource.rst:218
msgid ""
"The following :const:`RUSAGE_\\*` symbols are passed to the :func:"
"`getrusage` function to specify which processes information should be "
"provided for."
msgstr ""

#: ../Doc/library/resource.rst:224
msgid ""
":const:`RUSAGE_SELF` should be used to request information pertaining only "
"to the process itself."
msgstr ""

#: ../Doc/library/resource.rst:230
msgid ""
"Pass to :func:`getrusage` to request resource information for child "
"processes of the calling process."
msgstr ""

#: ../Doc/library/resource.rst:236
msgid ""
"Pass to :func:`getrusage` to request resources consumed by both the current "
"process and child processes.  May not be available on all systems."
msgstr ""

# f9787b034fdf49edbc5ecfcb470808e5
#: ../Doc/library/restricted.rst:6
msgid "Restricted Execution"
msgstr ""

# fc00785ec2cb4f46982bbc94844ecd64
#: ../Doc/library/restricted.rst:10
msgid ""
"In Python 2.3 these modules have been disabled due to various known and not "
"readily fixable security holes.  The modules are still documented here to "
"help in reading old code that uses the :mod:`rexec` and :mod:`Bastion` "
"modules."
msgstr ""

# 0d0f280d90b14cc08b3f27210a8a3c30
#: ../Doc/library/restricted.rst:14
msgid ""
"*Restricted execution* is the basic framework in Python that allows for the "
"segregation of trusted and untrusted code.  The framework is based on the "
"notion that trusted Python code (a *supervisor*) can create a \"padded "
"cell' (or environment) with limited permissions, and run the untrusted code "
"within this cell.  The untrusted code cannot break out of its cell, and can "
"only interact with sensitive system resources through interfaces defined and "
"managed by the trusted code.  The term \"restricted execution\" is favored "
"over \"safe-Python\" since true safety is hard to define, and is determined "
"by the way the restricted environment is created.  Note that the restricted "
"environments can be nested, with inner cells creating subcells of lesser, "
"but never greater, privilege."
msgstr ""

# f4c7406857f147dbba77dec01b590523
#: ../Doc/library/restricted.rst:25
msgid ""
"An interesting aspect of Python's restricted execution model is that the "
"interfaces presented to untrusted code usually have the same names as those "
"presented to trusted code.  Therefore no special interfaces need to be "
"learned to write code designed to run in a restricted environment.  And "
"because the exact nature of the padded cell is determined by the supervisor, "
"different restrictions can be imposed, depending on the application.  For "
"example, it might be deemed \"safe\" for untrusted code to read any file "
"within a specified directory, but never to write a file.  In this case, the "
"supervisor may redefine the built-in :func:`open` function so that it raises "
"an exception whenever the *mode* parameter is ``'w'``.  It might also "
"perform a :c:func:`chroot`\\ -like operation on the *filename* parameter, "
"such that root is always relative to some safe \"sandbox\" area of the "
"filesystem.  In this case, the untrusted code would still see an built-in :"
"func:`open` function in its environment, with the same calling interface.  "
"The semantics would be identical too, with :exc:`IOError`\\ s being raised "
"when the supervisor determined that an unallowable parameter is being used."
msgstr ""

# f68801e1d78943abad653417218c3079
#: ../Doc/library/restricted.rst:42
msgid ""
"The Python run-time determines whether a particular code block is executing "
"in restricted execution mode based on the identity of the ``__builtins__`` "
"object in its global variables: if this is (the dictionary of) the standard :"
"mod:`__builtin__` module, the code is deemed to be unrestricted, else it is "
"deemed to be restricted."
msgstr ""

# 9dd74f27bc014bafae69499dbd791b80
#: ../Doc/library/restricted.rst:48
msgid ""
"Python code executing in restricted mode faces a number of limitations that "
"are designed to prevent it from escaping from the padded cell. For instance, "
"the function object attribute :attr:`func_globals` and the class and "
"instance object attribute :attr:`__dict__` are unavailable."
msgstr ""

# 2900a7a85f544b24ae4bebf17313a4b2
#: ../Doc/library/restricted.rst:53
msgid ""
"Two modules provide the framework for setting up restricted execution "
"environments:"
msgstr ""

# f5e58f92dd3e4c79b95e8f3d6588fdf9
#: ../Doc/library/restricted.rst:65
msgid ""
"Grail, an Internet browser written in Python, uses these modules to support "
"Python applets.  More information on the use of Python's restricted "
"execution mode in Grail is available on the Web site."
msgstr ""

# 925c2f24f67a4cc486b08a7ac0f30817
#: ../Doc/library/rexec.rst:2
msgid ":mod:`rexec` --- Restricted execution framework"
msgstr ""

# 45855e30da324849b2723201eec46d7f
#: ../Doc/library/rexec.rst:19
msgid ""
"This module contains the :class:`RExec` class, which supports :meth:"
"`r_eval`, :meth:`r_execfile`, :meth:`r_exec`, and :meth:`r_import` methods, "
"which are restricted versions of the standard Python functions :meth:"
"`eval`, :meth:`execfile` and the :keyword:`exec` and :keyword:`import` "
"statements. Code executed in this restricted environment will only have "
"access to modules and functions that are deemed safe; you can subclass :"
"class:`RExec` to add or remove capabilities as desired."
msgstr ""

# 7155328472f34877a8d2eeb5f7e82355
#: ../Doc/library/rexec.rst:29
msgid ""
"While the :mod:`rexec` module is designed to perform as described below, it "
"does have a few known vulnerabilities which could be exploited by carefully "
"written code.  Thus it should not be relied upon in situations requiring "
"\"production ready\" security.  In such situations, execution via sub-"
"processes or very careful \"cleansing\" of both code and data to be "
"processed may be necessary. Alternatively, help in patching known :mod:"
"`rexec` vulnerabilities would be welcomed."
msgstr ""

# 05bdbaa5d1b24b87828a99b4f866913e
#: ../Doc/library/rexec.rst:39
msgid ""
"The :class:`RExec` class can prevent code from performing unsafe operations "
"like reading or writing disk files, or using TCP/IP sockets.  However, it "
"does not protect against code using extremely large amounts of memory or "
"processor time."
msgstr ""

# efa5d5884f804fa3a9bc82e8ac6eb0f3
#: ../Doc/library/rexec.rst:46
msgid "Returns an instance of the :class:`RExec` class."
msgstr ""

# 572911e7dec04b93852d4fb79601b8a1
#: ../Doc/library/rexec.rst:48
msgid ""
"*hooks* is an instance of the :class:`RHooks` class or a subclass of it. If "
"it is omitted or ``None``, the default :class:`RHooks` class is "
"instantiated. Whenever the :mod:`rexec` module searches for a module (even a "
"built-in one) or reads a module's code, it doesn't actually go out to the "
"file system itself. Rather, it calls methods of an :class:`RHooks` instance "
"that was passed to or created by its constructor.  (Actually, the :class:"
"`RExec` object doesn't make these calls --- they are made by a module loader "
"object that's part of the :class:`RExec` object.  This allows another level "
"of flexibility, which can be useful when changing the mechanics of :keyword:"
"`import` within the restricted environment.)"
msgstr ""

# 710dcba348c0455d8ef4c862136cc057
#: ../Doc/library/rexec.rst:59
msgid ""
"By providing an alternate :class:`RHooks` object, we can control the file "
"system accesses made to import a module, without changing the actual "
"algorithm that controls the order in which those accesses are made.  For "
"instance, we could substitute an :class:`RHooks` object that passes all "
"filesystem requests to a file server elsewhere, via some RPC mechanism such "
"as ILU.  Grail's applet loader uses this to support importing applets from a "
"URL for a directory."
msgstr ""

# cf2937024e8c47fcb505c3e1363d3fe5
#: ../Doc/library/rexec.rst:66
msgid ""
"If *verbose* is true, additional debugging output may be sent to standard "
"output."
msgstr ""

# 507cbb90015f4f779708b07735ae9b4d
#: ../Doc/library/rexec.rst:69
msgid ""
"It is important to be aware that code running in a restricted environment "
"can still call the :func:`sys.exit` function.  To disallow restricted code "
"from exiting the interpreter, always protect calls that cause restricted "
"code to run with a :keyword:`try`/:keyword:`except` statement that catches "
"the :exc:`SystemExit` exception.  Removing the :func:`sys.exit` function "
"from the restricted environment is not sufficient --- the restricted code "
"could still use ``raise SystemExit``.  Removing :exc:`SystemExit` is not a "
"reasonable option; some library code makes use of this and would break were "
"it not available."
msgstr ""

# 479f49c9bbf84389b8b4092fa197b138
#: ../Doc/library/rexec.rst:82
msgid ""
"Grail is a Web browser written entirely in Python.  It uses the :mod:`rexec` "
"module as a foundation for supporting Python applets, and can be used as an "
"example usage of this module."
msgstr ""

# 7b4211dbcbaa41cc98fad9b7161a4063
#: ../Doc/library/rexec.rst:90
msgid "RExec Objects"
msgstr ""

# 5d90487f34a648e4a786e14b2cf1ccc8
#: ../Doc/library/rexec.rst:92
msgid ":class:`RExec` instances support the following methods:"
msgstr ""

# 90bacdd71a814a409514deefb39ae171
#: ../Doc/library/rexec.rst:97
msgid ""
"*code* must either be a string containing a Python expression, or a compiled "
"code object, which will be evaluated in the restricted environment's :mod:"
"`__main__` module.  The value of the expression or code object will be "
"returned."
msgstr ""

# e030f6af5bef4caf9edf21373944ae39
#: ../Doc/library/rexec.rst:105
msgid ""
"*code* must either be a string containing one or more lines of Python code, "
"or a compiled code object, which will be executed in the restricted "
"environment's :mod:`__main__` module."
msgstr ""

# 579b3d5f0a4f45f4ac24e1a961f4d333
#: ../Doc/library/rexec.rst:112
msgid ""
"Execute the Python code contained in the file *filename* in the restricted "
"environment's :mod:`__main__` module."
msgstr ""

# 554408019d7c464383040ad6813c3878
#: ../Doc/library/rexec.rst:115
msgid ""
"Methods whose names begin with ``s_`` are similar to the functions beginning "
"with ``r_``, but the code will be granted access to restricted versions of "
"the standard I/O streams ``sys.stdin``, ``sys.stderr``, and ``sys.stdout``."
msgstr ""

# 00f4a0ecb8444ec8804872c6b29b6a5b
#: ../Doc/library/rexec.rst:122
msgid ""
"*code* must be a string containing a Python expression, which will be "
"evaluated in the restricted environment."
msgstr ""

# 2aa32f2a5daa4c91b0f96ba7dfd41804
#: ../Doc/library/rexec.rst:128
msgid ""
"*code* must be a string containing one or more lines of Python code, which "
"will be executed in the restricted environment."
msgstr ""

# 6ce06d46ec834836883d88f0d77d6139
#: ../Doc/library/rexec.rst:134
msgid ""
"Execute the Python code contained in the file *filename* in the restricted "
"environment."
msgstr ""

# fe7eded7550e498997576761834e387e
#: ../Doc/library/rexec.rst:137
msgid ""
":class:`RExec` objects must also support various methods which will be "
"implicitly called by code executing in the restricted environment. "
"Overriding these methods in a subclass is used to change the policies "
"enforced by a restricted environment."
msgstr ""

# 15d1dacb6bd24321a9403376cbaaaa53
# 6678890cdeab4f94a44f352287d43551
#: ../Doc/library/rexec.rst:145 ../Doc/library/rexec.rst:174
msgid ""
"Import the module *modulename*, raising an :exc:`ImportError` exception if "
"the module is considered unsafe."
msgstr ""

# 2443c8909df04893860e1747b3664d8e
#: ../Doc/library/rexec.rst:151
msgid ""
"Method called when :func:`open` is called in the restricted environment.  "
"The arguments are identical to those of :func:`open`, and a file object (or "
"a class instance compatible with file objects) should be returned.  :class:"
"`RExec`'s default behaviour is allow opening any file for reading, but "
"forbidding any attempt to write a file.  See the example below for an "
"implementation of a less restrictive :meth:`r_open`."
msgstr ""

# c798233eec554002b6c42be77c9ed580
# add1b4866929434f8d848777f731e071
#: ../Doc/library/rexec.rst:161 ../Doc/library/rexec.rst:180
msgid "Reload the module object *module*, re-parsing and re-initializing it."
msgstr ""

# 2b10e70c7a9e4096b72f9851ec29198d
#: ../Doc/library/rexec.rst:166
msgid ""
"Unload the module object *module* (remove it from the restricted "
"environment's ``sys.modules`` dictionary)."
msgstr ""

# c2160970068344718d67aa47d318a7fa
#: ../Doc/library/rexec.rst:169
msgid "And their equivalents with access to restricted standard I/O streams:"
msgstr ""

# f114cde06e154aa0b22b3ed37d531b71
#: ../Doc/library/rexec.rst:185
msgid "Unload the module object *module*."
msgstr ""

# 65bc026546834a68a3fecb9aa22c090b
#: ../Doc/library/rexec.rst:193
msgid "Defining restricted environments"
msgstr ""

# f8ff0dc98d9b443d8264cb6c96994a0b
#: ../Doc/library/rexec.rst:195
msgid ""
"The :class:`RExec` class has the following class attributes, which are used "
"by the :meth:`__init__` method.  Changing them on an existing instance won't "
"have any effect; instead, create a subclass of :class:`RExec` and assign "
"them new values in the class definition. Instances of the new class will "
"then use those new values.  All these attributes are tuples of strings."
msgstr ""

# 101fabbb43a9456dbfe7016c3f5ec2fa
#: ../Doc/library/rexec.rst:204
msgid ""
"Contains the names of built-in functions which will *not* be available to "
"programs running in the restricted environment.  The value for :class:"
"`RExec` is ``('open', 'reload', '__import__')``. (This gives the exceptions, "
"because by far the majority of built-in functions are harmless.  A subclass "
"that wants to override this variable should probably start with the value "
"from the base class and concatenate additional forbidden functions --- when "
"new dangerous built-in functions are added to Python, they will also be "
"added to this module.)"
msgstr ""

# aaa56913609347f09f8d39256b2c2f44
#: ../Doc/library/rexec.rst:215
msgid ""
"Contains the names of built-in modules which can be safely imported. The "
"value for :class:`RExec` is ``('audioop', 'array', 'binascii', 'cmath', "
"'errno', 'imageop', 'marshal', 'math', 'md5', 'operator', 'parser', 'regex', "
"'select', 'sha', '_sre', 'strop', 'struct', 'time')``.  A similar remark "
"about overriding this variable applies --- use the value from the base class "
"as a starting point."
msgstr ""

# 87fa4114da254118b97c4458f81ca9f3
#: ../Doc/library/rexec.rst:224
msgid ""
"Contains the directories which will be searched when an :keyword:`import` is "
"performed in the restricted environment.   The value for :class:`RExec` is "
"the same as ``sys.path`` (at the time the module is loaded) for unrestricted "
"code."
msgstr ""

# b65b333fd6ae462ea3ed7c015648ff38
#: ../Doc/library/rexec.rst:231
msgid ""
"Contains the names of the functions in the :mod:`os` module which will be "
"available to programs running in the restricted environment.  The value for :"
"class:`RExec` is ``('error', 'fstat', 'listdir', 'lstat', 'readlink', "
"'stat', 'times', 'uname', 'getpid', 'getppid', 'getcwd', 'getuid', 'getgid', "
"'geteuid', 'getegid')``."
msgstr ""

# 746d32428ae44de3a58a8767c0c8a099
#: ../Doc/library/rexec.rst:242
msgid ""
"Contains the names of the functions and variables in the :mod:`sys` module "
"which will be available to programs running in the restricted environment.  "
"The value for :class:`RExec` is ``('ps1', 'ps2', 'copyright', 'version', "
"'platform', 'exit', 'maxint')``."
msgstr ""

# 118d659ed6ed46d5bd93506a00acfac9
#: ../Doc/library/rexec.rst:250
msgid ""
"Contains the file types from which modules are allowed to be loaded. Each "
"file type is an integer constant defined in the :mod:`imp` module. The "
"meaningful values are :const:`PY_SOURCE`, :const:`PY_COMPILED`, and :const:"
"`C_EXTENSION`. The value for :class:`RExec` is ``(C_EXTENSION, PY_SOURCE)"
"``.  Adding :const:`PY_COMPILED` in subclasses is not recommended; an "
"attacker could exit the restricted execution mode by putting a forged byte-"
"compiled file (:file:`.pyc`) anywhere in your file system, for example by "
"writing it to :file:`/tmp` or uploading it to the :file:`/incoming` "
"directory of your public FTP server."
msgstr ""

# a7f8d18d078f4ed49be356981f5d2ed5
#: ../Doc/library/rexec.rst:262
msgid "An example"
msgstr ""

# f011b86c65754ac18376aae389b91d51
#: ../Doc/library/rexec.rst:264
msgid ""
"Let us say that we want a slightly more relaxed policy than the standard :"
"class:`RExec` class.  For example, if we're willing to allow files in :file:"
"`/tmp` to be written, we can subclass the :class:`RExec` class::"
msgstr ""

# 77ef59bbf17f4efcabdc26109f729f6a
#: ../Doc/library/rexec.rst:282
msgid ""
"Notice that the above code will occasionally forbid a perfectly valid "
"filename; for example, code in the restricted environment won't be able to "
"open a file called :file:`/tmp/foo/../bar`.  To fix this, the :meth:`r_open` "
"method would have to simplify the filename to :file:`/tmp/bar`, which would "
"require splitting apart the filename and performing various operations on "
"it.  In cases where security is at stake, it may be preferable to write "
"simple code which is sometimes overly restrictive, instead of more general "
"code that is also more complex and may harbor a subtle security hole."
msgstr ""

# 66a0eaf4c21f47a6af3e09409370c37d
#: ../Doc/library/rfc822.rst:3
msgid ":mod:`rfc822` --- Parse RFC 2822 mail headers"
msgstr ""

# 72a593ffc2a14bb89fc79e1a672af3e7
#: ../Doc/library/rfc822.rst:15
msgid ""
"This module defines a class, :class:`Message`, which represents an \"email "
"message\" as defined by the Internet standard :rfc:`2822`. [#]_  Such "
"messages consist of a collection of message headers, and a message body.  "
"This module also defines a helper class :class:`AddressList` for parsing :"
"rfc:`2822` addresses.  Please refer to the RFC for information on the "
"specific syntax of :rfc:`2822` messages."
msgstr ""

# b551deea026f4d3a8b61c696401cdcbf
#: ../Doc/library/rfc822.rst:24
msgid ""
"The :mod:`mailbox` module provides classes  to read mailboxes produced by "
"various end-user mail programs."
msgstr ""

# 898d8f64ad574100bf96f4ae910827e3
#: ../Doc/library/rfc822.rst:30
msgid ""
"A :class:`Message` instance is instantiated with an input object as "
"parameter. Message relies only on the input object having a :meth:`readline` "
"method; in particular, ordinary file objects qualify.  Instantiation reads "
"headers from the input object up to a delimiter line (normally a blank line) "
"and stores them in the instance.  The message body, following the headers, "
"is not consumed."
msgstr ""

# 51c5f6111ddd41ceba0091951eea19d0
#: ../Doc/library/rfc822.rst:36
msgid ""
"This class can work with any input object that supports a :meth:`readline` "
"method.  If the input object has seek and tell capability, the :meth:"
"`rewindbody` method will work; also, illegal lines will be pushed back onto "
"the input stream.  If the input object lacks seek but has an :meth:`unread` "
"method that can push back a line of input, :class:`Message` will use that to "
"push back illegal lines.  Thus this class can be used to parse messages "
"coming from a buffered stream."
msgstr ""

# 10dc74ace4a842748ac3166e58704c12
#: ../Doc/library/rfc822.rst:44
msgid ""
"The optional *seekable* argument is provided as a workaround for certain "
"stdio libraries in which :c:func:`tell` discards buffered data before "
"discovering that the :c:func:`lseek` system call doesn't work.  For maximum "
"portability, you should set the seekable argument to zero to prevent that "
"initial :meth:`tell` when passing in an unseekable object such as a file "
"object created from a socket object."
msgstr ""

# 04aaf286c45848c9a8ba168567fbad22
#: ../Doc/library/rfc822.rst:51
msgid ""
"Input lines as read from the file may either be terminated by CR-LF or by a "
"single linefeed; a terminating CR-LF is replaced by a single linefeed before "
"the line is stored."
msgstr ""

# 494b36a6371d428ebcd4fb1d5e1984d0
#: ../Doc/library/rfc822.rst:55
msgid ""
"All header matching is done independent of upper or lower case; e.g. ``m"
"['From']``, ``m['from']`` and ``m['FROM']`` all yield the same result."
msgstr ""

# 7c8a98b0a6344c6cac8c6ab0d3f9f9c3
#: ../Doc/library/rfc822.rst:61
msgid ""
"You may instantiate the :class:`AddressList` helper class using a single "
"string parameter, a comma-separated list of :rfc:`2822` addresses to be "
"parsed.  (The parameter ``None`` yields an empty list.)"
msgstr ""

# a2bce876898c4efc818226d541a15db1
#: ../Doc/library/rfc822.rst:68
msgid ""
"Return a new string with backslashes in *str* replaced by two backslashes "
"and double quotes replaced by backslash-double quote."
msgstr ""

# 40bf5f77a939401887728c01bf984e8a
#: ../Doc/library/rfc822.rst:81
msgid ""
"Parse *address*, which should be the value of some address-containing field "
"such as :mailheader:`To` or :mailheader:`Cc`, into its constituent \"realname"
"\" and \"email address\" parts. Returns a tuple of that information, unless "
"the parse fails, in which case a 2-tuple ``(None, None)`` is returned."
msgstr ""

# b655c7d3be80495fb1f9776a0e4e6f61
#: ../Doc/library/rfc822.rst:97
msgid ""
"Attempts to parse a date according to the rules in :rfc:`2822`. however, "
"some mailers don't follow that format as specified, so :func:`parsedate` "
"tries to guess correctly in such cases.  *date* is a string containing an :"
"rfc:`2822` date, such as  ``'Mon, 20 Nov 1995 19:12:08 -0500'``.  If it "
"succeeds in parsing the date, :func:`parsedate` returns a 9-tuple that can "
"be passed directly to :func:`time.mktime`; otherwise ``None`` will be "
"returned.  Note that indexes 6, 7, and 8 of the result tuple are not usable."
msgstr ""

# 4c56a3dc3ee2465abfc25b9be0417b77
#: ../Doc/library/rfc822.rst:108
msgid ""
"Performs the same function as :func:`parsedate`, but returns either ``None`` "
"or a 10-tuple; the first 9 elements make up a tuple that can be passed "
"directly to :func:`time.mktime`, and the tenth is the offset of the date's "
"timezone from UTC (which is the official term for Greenwich Mean Time).  "
"(Note that the sign of the timezone offset is the opposite of the sign of "
"the ``time.timezone`` variable for the same timezone; the latter variable "
"follows the POSIX standard while this module follows :rfc:`2822`.)  If the "
"input string has no timezone, the last element of the tuple returned is "
"``None``.  Note that indexes 6, 7, and 8 of the result tuple are not usable."
msgstr ""

# ddd60ade7fd74a848cd44ef76fe647fa
#: ../Doc/library/rfc822.rst:121
msgid ""
"Turn a 10-tuple as returned by :func:`parsedate_tz` into a UTC timestamp.  "
"If the timezone item in the tuple is ``None``, assume local time.  Minor "
"deficiency: this first interprets the first 8 elements as a local time and "
"then compensates for the timezone difference; this may yield a slight error "
"around daylight savings time switch dates.  Not enough to worry about for "
"common use."
msgstr ""

# dc27e4cae03a4f01869a3c984476fb81
#: ../Doc/library/rfc822.rst:131
msgid ""
"Comprehensive email handling package; supersedes the :mod:`rfc822` module."
msgstr ""

# bd393b5a67a94fbd8b67f848278ab91c
#: ../Doc/library/rfc822.rst:134
msgid ""
"Classes to read various mailbox formats produced  by end-user mail programs."
msgstr ""

# 3fb093a51f0b433f9b4105ccab12628c
#: ../Doc/library/rfc822.rst:137
msgid "Subclass of :class:`rfc822.Message` that handles MIME encoded messages."
msgstr ""

# f5336909cd84499fb38a951cfafb8eae
#: ../Doc/library/rfc822.rst:145
msgid "A :class:`Message` instance has the following methods:"
msgstr ""

# 3333bf64930b4d9cb6685ea2b58c13bf
#: ../Doc/library/rfc822.rst:150
msgid ""
"Seek to the start of the message body.  This only works if the file object "
"is seekable."
msgstr ""

# e7ff7d75913446899ec45ef477cec523
#: ../Doc/library/rfc822.rst:156
msgid ""
"Returns a line's canonicalized fieldname (the dictionary key that will be "
"used to index it) if the line is a legal :rfc:`2822` header; otherwise "
"returns ``None`` (implying that parsing should stop here and the line be "
"pushed back on the input stream).  It is sometimes useful to override this "
"method in a subclass."
msgstr ""

# 0903070c378f4958925c1d8ed1519578
#: ../Doc/library/rfc822.rst:165
msgid ""
"Return true if the given line is a delimiter on which Message should stop.  "
"The delimiter line is consumed, and the file object's read location "
"positioned immediately after it.  By default this method just checks that "
"the line is blank, but you can override it in a subclass."
msgstr ""

# c53d26e5d8c14056a63f21999fcd6100
#: ../Doc/library/rfc822.rst:173
msgid ""
"Return ``True`` if the given line should be ignored entirely, just skipped. "
"By default this is a stub that always returns ``False``, but you can "
"override it in a subclass."
msgstr ""

# d1affa766414457e904901fc4e1cf878
#: ../Doc/library/rfc822.rst:180
msgid ""
"Return a list of lines consisting of all headers matching *name*, if any.  "
"Each physical line, whether it is a continuation line or not, is a separate "
"list item.  Return the empty list if no header matches *name*."
msgstr ""

# 938ddc60b6874c949205de9ba948fbc7
#: ../Doc/library/rfc822.rst:187
msgid ""
"Return a list of lines comprising the first header matching *name*, and its "
"continuation line(s), if any.  Return ``None`` if there is no header "
"matching *name*."
msgstr ""

# 1dee4caaa73a4d1294a10530197e0c0e
#: ../Doc/library/rfc822.rst:194
msgid ""
"Return a single string consisting of the text after the colon in the first "
"header matching *name*.  This includes leading whitespace, the trailing "
"linefeed, and internal linefeeds and whitespace if there any continuation "
"line(s) were present.  Return ``None`` if there is no header matching *name*."
msgstr ""

# a142b2a202dc4fd4b3da24a9cf277087
#: ../Doc/library/rfc822.rst:202
msgid ""
"Return a single string consisting of the last header matching *name*, but "
"strip leading and trailing whitespace. Internal whitespace is not stripped.  "
"The optional *default* argument can be used to specify a different default "
"to be returned when there is no header matching *name*; it defaults to "
"``None``. This is the preferred way to get parsed headers."
msgstr ""

# b7ffbb5fadd94b21a2f65eabc3e8530d
#: ../Doc/library/rfc822.rst:212
msgid ""
"An alias for :meth:`getheader`, to make the interface more compatible  with "
"regular dictionaries."
msgstr ""

# e16a3425800642e9a43e7d722f8daf32
#: ../Doc/library/rfc822.rst:218
msgid ""
"Return a pair ``(full name, email address)`` parsed from the string returned "
"by ``getheader(name)``.  If no header matching *name* exists, return ``"
"(None, None)``; otherwise both the full name and the address are (possibly "
"empty) strings."
msgstr ""

# 9de41c5a3c77486da8dc41bb1c9fde90
#: ../Doc/library/rfc822.rst:223
msgid ""
"Example: If *m*'s first :mailheader:`From` header contains the string "
"``'jack@cwi.nl (Jack Jansen)'``, then ``m.getaddr('From')`` will yield the "
"pair ``('Jack Jansen', 'jack@cwi.nl')``. If the header contained ``'Jack "
"Jansen <jack@cwi.nl>'`` instead, it would yield the exact same result."
msgstr ""

# d30bd761a6b745f984b784f702f301f9
#: ../Doc/library/rfc822.rst:231
msgid ""
"This is similar to ``getaddr(list)``, but parses a header containing a list "
"of email addresses (e.g. a :mailheader:`To` header) and returns a list of ``"
"(full name, email address)`` pairs (even if there was only one address in "
"the header). If there is no header matching *name*, return an empty list."
msgstr ""

# 5066c9afa5b74632b734f668af020a2c
#: ../Doc/library/rfc822.rst:236
msgid ""
"If multiple headers exist that match the named header (e.g. if there are "
"several :mailheader:`Cc` headers), all are parsed for addresses. Any "
"continuation lines the named headers contain are also parsed."
msgstr ""

# c73abf9c96e546bfb208e677564104a1
#: ../Doc/library/rfc822.rst:243
msgid ""
"Retrieve a header using :meth:`getheader` and parse it into a 9-tuple "
"compatible with :func:`time.mktime`; note that fields 6, 7, and 8  are not "
"usable.  If there is no header matching *name*, or it is unparsable, return "
"``None``."
msgstr ""

# f372804ef8fd4b2e82142b966f6c5c75
#: ../Doc/library/rfc822.rst:247
msgid ""
"Date parsing appears to be a black art, and not all mailers adhere to the "
"standard.  While it has been tested and found correct on a large collection "
"of email from many sources, it is still possible that this function may "
"occasionally yield an incorrect result."
msgstr ""

# 7f921cac56dd442894fb8ced154fe08c
#: ../Doc/library/rfc822.rst:255
msgid ""
"Retrieve a header using :meth:`getheader` and parse it into a 10-tuple; the "
"first 9 elements will make a tuple compatible with :func:`time.mktime`, and "
"the 10th is a number giving the offset of the date's timezone from UTC.  "
"Note that fields 6, 7, and 8  are not usable.  Similarly to :meth:`getdate`, "
"if there is no header matching *name*, or it is unparsable, return ``None``."
msgstr ""

# 14455de276f74478adfb7ab2679a0c66
#: ../Doc/library/rfc822.rst:261
msgid ""
":class:`Message` instances also support a limited mapping interface. In "
"particular: ``m[name]`` is like ``m.getheader(name)`` but raises :exc:"
"`KeyError` if there is no matching header; and ``len(m)``, ``m.get(name[, "
"default])``, ``name in m``, ``m.keys()``, ``m.values()`` ``m.items()``, and "
"``m.setdefault(name[, default])`` act as expected, with the one difference "
"that :meth:`setdefault` uses an empty string as the default value. :class:"
"`Message` instances also support the mapping writable interface ``m[name] = "
"value`` and ``del m[name]``.  :class:`Message` objects do not support the :"
"meth:`clear`, :meth:`copy`, :meth:`popitem`, or :meth:`update` methods of "
"the mapping interface.  (Support for :meth:`get` and :meth:`setdefault` was "
"only added in Python 2.2.)"
msgstr ""

# ff223f5bfdf74389a796983f1bab5a05
#: ../Doc/library/rfc822.rst:273
msgid ""
"Finally, :class:`Message` instances have some public instance variables:"
msgstr ""

# fd1d82eafec84771a88895bb2abcf501
#: ../Doc/library/rfc822.rst:278
msgid ""
"A list containing the entire set of header lines, in the order in which they "
"were read (except that setitem calls may disturb this order). Each line "
"contains a trailing newline.  The blank line terminating the headers is not "
"contained in the list."
msgstr ""

# a89e45b6e5c943c79407ab34de26e651
#: ../Doc/library/rfc822.rst:286
msgid ""
"The file or file-like object passed at instantiation time.  This can be used "
"to read the message content."
msgstr ""

# ef53c08f78314fe7951bb3d46adb9cd0
#: ../Doc/library/rfc822.rst:292
msgid ""
"The Unix ``From`` line, if the message had one, or an empty string.  This is "
"needed to regenerate the message in some contexts, such as an ``mbox``\\ -"
"style mailbox file."
msgstr ""

# 32a6f6af8fe0432a84ffe5c7b5d0b85e
#: ../Doc/library/rfc822.rst:300
msgid "AddressList Objects"
msgstr ""

# 8fd50072ecc14e26af33758d18332b05
#: ../Doc/library/rfc822.rst:302
msgid "An :class:`AddressList` instance has the following methods:"
msgstr ""

# 087fdc83f15840ca9e9790d9d9b557a1
#: ../Doc/library/rfc822.rst:307
msgid "Return the number of addresses in the address list."
msgstr ""

# c49218e0857543f882aae189cf141329
#: ../Doc/library/rfc822.rst:312
msgid ""
"Return a canonicalized string representation of the address list. Addresses "
"are rendered in \"name\" <host@domain> form, comma-separated."
msgstr ""

# 83b6ed1bbd6c499cbd15751b84a13d8d
#: ../Doc/library/rfc822.rst:318
msgid ""
"Return a new :class:`AddressList` instance that contains all addresses in "
"both :class:`AddressList` operands, with duplicates removed (set union)."
msgstr ""

# daff2749dbfa44118f59be98ee89d315
#: ../Doc/library/rfc822.rst:324
msgid ""
"In-place version of :meth:`__add__`; turns this :class:`AddressList` "
"instance into the union of itself and the right-hand instance, *alist*."
msgstr ""

# 0053d4565fdb46888136647be8215a66
#: ../Doc/library/rfc822.rst:330
msgid ""
"Return a new :class:`AddressList` instance that contains every address in "
"the left-hand :class:`AddressList` operand that is not present in the right-"
"hand address operand (set difference)."
msgstr ""

# 1c600003ab544e21865a13ed5491e632
#: ../Doc/library/rfc822.rst:337
msgid ""
"In-place version of :meth:`__sub__`, removing addresses in this list which "
"are also in *alist*."
msgstr ""

# 8e1cd7bc7a934caba5ef2589131dd062
#: ../Doc/library/rfc822.rst:340
msgid ""
"Finally, :class:`AddressList` instances have one public instance variable:"
msgstr ""

# 2cfb0c2cec464aa6a93165a4437e8f47
#: ../Doc/library/rfc822.rst:345
msgid ""
"A list of tuple string pairs, one per address.  In each member, the first is "
"the canonicalized name part, the second is the actual route-address (``'@'``"
"\\ -separated username-host.domain pair)."
msgstr ""

# 35d652cda9ad473cba6a47e4d07620b3
#: ../Doc/library/rfc822.rst:351
msgid ""
"This module originally conformed to :rfc:`822`, hence the name.  Since "
"then, :rfc:`2822` has been released as an update to :rfc:`822`.  This module "
"should be considered :rfc:`2822`\\ -conformant, especially in cases where "
"the syntax or semantics have changed since :rfc:`822`."
msgstr ""

#: ../Doc/library/rlcompleter.rst:2
msgid ":mod:`rlcompleter` --- Completion function for GNU readline"
msgstr ""

# b41c00a07ed343d585c4b3fb4372307c
#: ../Doc/library/rlcompleter.rst:8
msgid "**Source code:** :source:`Lib/rlcompleter.py`"
msgstr ""

#: ../Doc/library/rlcompleter.rst:12
msgid ""
"The :mod:`rlcompleter` module defines a completion function suitable for "
"the :mod:`readline` module by completing valid Python identifiers and "
"keywords."
msgstr ""

#: ../Doc/library/rlcompleter.rst:15
msgid ""
"When this module is imported on a Unix platform with the :mod:`readline` "
"module available, an instance of the :class:`Completer` class is "
"automatically created and its :meth:`complete` method is set as the :mod:"
"`readline` completer."
msgstr ""

#: ../Doc/library/rlcompleter.rst:30
msgid ""
"The :mod:`rlcompleter` module is designed for use with Python's interactive "
"mode.  A user can add the following lines to his or her initialization file "
"(identified by the :envvar:`PYTHONSTARTUP` environment variable) to get "
"automatic :kbd:`Tab` completion::"
msgstr ""

#: ../Doc/library/rlcompleter.rst:43
msgid ""
"On platforms without :mod:`readline`, the :class:`Completer` class defined "
"by this module can still be used for custom purposes."
msgstr ""

#: ../Doc/library/rlcompleter.rst:50
msgid "Completer Objects"
msgstr ""

#: ../Doc/library/rlcompleter.rst:52
msgid "Completer objects have the following method:"
msgstr ""

#: ../Doc/library/rlcompleter.rst:57
msgid "Return the *state*\\ th completion for *text*."
msgstr ""

# af058b15df184961967a18877f323ced
#: ../Doc/library/rlcompleter.rst:59
msgid ""
"If called for *text* that doesn't include a period character (``'.'``), it "
"will complete from names currently defined in :mod:`__main__`, :mod:"
"`__builtin__` and keywords (as defined by the :mod:`keyword` module)."
msgstr ""

#: ../Doc/library/rlcompleter.rst:63
msgid ""
"If called for a dotted name, it will try to evaluate anything without "
"obvious side-effects (functions will not be evaluated, but it can generate "
"calls to :meth:`__getattr__`) up to the last part, and find matches for the "
"rest via the :func:`dir` function.  Any exception raised during the "
"evaluation of the expression is caught, silenced and :const:`None` is "
"returned."
msgstr ""

# 7536b7cce22e4db49a1839dbeae27333
#: ../Doc/library/robotparser.rst:3
msgid ":mod:`robotparser` ---  Parser for robots.txt"
msgstr ""

# 205834e871ef46a38dbab4c930ecc2a0
#: ../Doc/library/robotparser.rst:18
msgid ""
"The :mod:`robotparser` module has been renamed :mod:`urllib.robotparser` in "
"Python 3. The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

#: ../Doc/library/robotparser.rst:23
msgid ""
"This module provides a single class, :class:`RobotFileParser`, which answers "
"questions about whether or not a particular user agent can fetch a URL on "
"the Web site that published the :file:`robots.txt` file.  For more details "
"on the structure of :file:`robots.txt` files, see http://www.robotstxt.org/"
"orig.html."
msgstr ""

#: ../Doc/library/robotparser.rst:31
msgid ""
"This class provides a set of methods to read, parse and answer questions "
"about a single :file:`robots.txt` file."
msgstr ""

#: ../Doc/library/robotparser.rst:37
msgid "Sets the URL referring to a :file:`robots.txt` file."
msgstr ""

#: ../Doc/library/robotparser.rst:42
msgid "Reads the :file:`robots.txt` URL and feeds it to the parser."
msgstr ""

#: ../Doc/library/robotparser.rst:47
msgid "Parses the lines argument."
msgstr ""

#: ../Doc/library/robotparser.rst:52
msgid ""
"Returns ``True`` if the *useragent* is allowed to fetch the *url* according "
"to the rules contained in the parsed :file:`robots.txt` file."
msgstr ""

#: ../Doc/library/robotparser.rst:59
msgid ""
"Returns the time the ``robots.txt`` file was last fetched.  This is useful "
"for long-running web spiders that need to check for new ``robots.txt`` files "
"periodically."
msgstr ""

#: ../Doc/library/robotparser.rst:66
msgid ""
"Sets the time the ``robots.txt`` file was last fetched to the current time."
msgstr ""

# a8be62d014f6429f8de66c938c034606
#: ../Doc/library/robotparser.rst:69
msgid ""
"The following example demonstrates basic use of the RobotFileParser class. ::"
msgstr ""

#: ../Doc/library/runpy.rst:2
msgid ":mod:`runpy` --- Locating and executing Python modules"
msgstr ""

# c909d0afa69e4770bdf8533868778257
#: ../Doc/library/runpy.rst:11
msgid "**Source code:** :source:`Lib/runpy.py`"
msgstr ""

#: ../Doc/library/runpy.rst:15
msgid ""
"The :mod:`runpy` module is used to locate and run Python modules without "
"importing them first. Its main use is to implement the :option:`-m` command "
"line switch that allows scripts to be located using the Python module "
"namespace rather than the filesystem."
msgstr ""

#: ../Doc/library/runpy.rst:20
msgid "The :mod:`runpy` module provides two functions:"
msgstr ""

#: ../Doc/library/runpy.rst:25
msgid ""
"Execute the code of the specified module and return the resulting module "
"globals dictionary. The module's code is first located using the standard "
"import mechanism (refer to :pep:`302` for details) and then executed in a "
"fresh module namespace."
msgstr ""

#: ../Doc/library/runpy.rst:30
msgid ""
"If the supplied module name refers to a package rather than a normal module, "
"then that package is imported and the ``__main__`` submodule within that "
"package is then executed and the resulting module globals dictionary "
"returned."
msgstr ""

#: ../Doc/library/runpy.rst:35
msgid ""
"The optional dictionary argument *init_globals* may be used to pre-populate "
"the module's globals dictionary before the code is executed. The supplied "
"dictionary will not be modified. If any of the special global variables "
"below are defined in the supplied dictionary, those definitions are "
"overridden by :func:`run_module`."
msgstr ""

#: ../Doc/library/runpy.rst:41 ../Doc/library/runpy.rst:100
msgid ""
"The special global variables ``__name__``, ``__file__``, ``__loader__`` and "
"``__package__`` are set in the globals dictionary before the module code is "
"executed (Note that this is a minimal set of variables - other variables may "
"be set implicitly as an interpreter implementation detail)."
msgstr ""

#: ../Doc/library/runpy.rst:46
msgid ""
"``__name__`` is set to *run_name* if this optional argument is not :const:"
"`None`, to ``mod_name + '.__main__'`` if the named module is a package and "
"to the *mod_name* argument otherwise."
msgstr ""

#: ../Doc/library/runpy.rst:50
msgid ""
"``__file__`` is set to the name provided by the module loader. If the loader "
"does not make filename information available, this variable is set to :const:"
"`None`."
msgstr ""

#: ../Doc/library/runpy.rst:54
msgid ""
"``__loader__`` is set to the :pep:`302` module loader used to retrieve the "
"code for the module (This loader may be a wrapper around the standard import "
"mechanism)."
msgstr ""

#: ../Doc/library/runpy.rst:58
msgid ""
"``__package__`` is set to *mod_name* if the named module is a package and to "
"``mod_name.rpartition('.')[0]`` otherwise."
msgstr ""

#: ../Doc/library/runpy.rst:61
msgid ""
"If the argument *alter_sys* is supplied and evaluates to :const:`True`, then "
"``sys.argv[0]`` is updated with the value of ``__file__`` and ``sys.modules"
"[__name__]`` is updated with a temporary module object for the module being "
"executed. Both ``sys.argv[0]`` and ``sys.modules[__name__]`` are restored to "
"their original values before the function returns."
msgstr ""

#: ../Doc/library/runpy.rst:67
msgid ""
"Note that this manipulation of :mod:`sys` is not thread-safe. Other threads "
"may see the partially initialised module, as well as the altered list of "
"arguments. It is recommended that the :mod:`sys` module be left alone when "
"invoking this function from threaded code."
msgstr ""

#: ../Doc/library/runpy.rst:80
msgid ""
"Execute the code at the named filesystem location and return the resulting "
"module globals dictionary. As with a script name supplied to the CPython "
"command line, the supplied path may refer to a Python source file, a "
"compiled bytecode file or a valid sys.path entry containing a ``__main__`` "
"module (e.g. a zipfile containing a top-level ``__main__.py`` file)."
msgstr ""

#: ../Doc/library/runpy.rst:86
msgid ""
"For a simple script, the specified code is simply executed in a fresh module "
"namespace. For a valid sys.path entry (typically a zipfile or directory), "
"the entry is first added to the beginning of ``sys.path``. The function then "
"looks for and executes a :mod:`__main__` module using the updated path. Note "
"that there is no special protection against invoking an existing :mod:"
"`__main__` entry located elsewhere on ``sys.path`` if there is no such "
"module at the specified location."
msgstr ""

#: ../Doc/library/runpy.rst:94
msgid ""
"The optional dictionary argument *init_globals* may be used to pre-populate "
"the module's globals dictionary before the code is executed. The supplied "
"dictionary will not be modified. If any of the special global variables "
"below are defined in the supplied dictionary, those definitions are "
"overridden by :func:`run_path`."
msgstr ""

#: ../Doc/library/runpy.rst:105
msgid ""
"``__name__`` is set to *run_name* if this optional argument is not :const:"
"`None` and to ``'<run_path>'`` otherwise."
msgstr ""

#: ../Doc/library/runpy.rst:108
msgid ""
"``__file__`` is set to the name provided by the module loader. If the loader "
"does not make filename information available, this variable is set to :const:"
"`None`. For a simple script, this will be set to ``file_path``."
msgstr ""

#: ../Doc/library/runpy.rst:112
msgid ""
"``__loader__`` is set to the :pep:`302` module loader used to retrieve the "
"code for the module (This loader may be a wrapper around the standard import "
"mechanism). For a simple script, this will be set to :const:`None`."
msgstr ""

#: ../Doc/library/runpy.rst:116
msgid "``__package__`` is set to ``__name__.rpartition('.')[0]``."
msgstr ""

#: ../Doc/library/runpy.rst:118
msgid ""
"A number of alterations are also made to the :mod:`sys` module. Firstly, "
"``sys.path`` may be altered as described above. ``sys.argv[0]`` is updated "
"with the value of ``file_path`` and ``sys.modules[__name__]`` is updated "
"with a temporary module object for the module being executed. All "
"modifications to items in :mod:`sys` are reverted before the function "
"returns."
msgstr ""

# 4cb9a0266f5d478da8709268f8b6cade
#: ../Doc/library/runpy.rst:125
msgid ""
"Note that, unlike :func:`run_module`, the alterations made to :mod:`sys` are "
"not optional in this function as these adjustments are essential to allowing "
"the execution of sys.path entries. As the thread-safety limitations still "
"apply, use of this function in threaded code should be either serialised "
"with the import lock or delegated to a separate process."
msgstr ""

#: ../Doc/library/runpy.rst:136 ../Doc/library/runpy.rst:139
msgid "PEP written and implemented by Nick Coghlan."
msgstr ""

#: ../Doc/library/runpy.rst:141
msgid ":ref:`using-on-general` - CPython command line details"
msgstr ""

#: ../Doc/library/sched.rst:2
msgid ":mod:`sched` --- Event scheduler"
msgstr ""

# 45e071a6b6cd45c588b8ab623cb849ba
#: ../Doc/library/sched.rst:10
msgid "**Source code:** :source:`Lib/sched.py`"
msgstr ""

#: ../Doc/library/sched.rst:14
msgid ""
"The :mod:`sched` module defines a class which implements a general purpose "
"event scheduler:"
msgstr ""

#: ../Doc/library/sched.rst:19
msgid ""
"The :class:`scheduler` class defines a generic interface to scheduling "
"events. It needs two functions to actually deal with the \"outside world\" "
"--- *timefunc* should be callable without arguments, and return  a number "
"(the \"time\", in any units whatsoever).  The *delayfunc* function should be "
"callable with one argument, compatible with the output of *timefunc*, and "
"should delay that many time units. *delayfunc* will also be called with the "
"argument ``0`` after each event is run to allow other threads an opportunity "
"to run in multi-threaded applications."
msgstr ""

#: ../Doc/library/sched.rst:47
msgid ""
"In multi-threaded environments, the :class:`scheduler` class has limitations "
"with respect to thread-safety, inability to insert a new task before the one "
"currently pending in a running scheduler, and holding up the main thread "
"until the event queue is empty.  Instead, the preferred approach is to use "
"the :class:`threading.Timer` class instead."
msgstr ""

#: ../Doc/library/sched.rst:77
msgid "Scheduler Objects"
msgstr ""

#: ../Doc/library/sched.rst:79
msgid ":class:`scheduler` instances have the following methods and attributes:"
msgstr ""

#: ../Doc/library/sched.rst:84
msgid ""
"Schedule a new event. The *time* argument should be a numeric type "
"compatible with the return value of the *timefunc* function passed  to the "
"constructor. Events scheduled for the same *time* will be executed in the "
"order of their *priority*."
msgstr ""

#: ../Doc/library/sched.rst:89
msgid ""
"Executing the event means executing ``action(*argument)``.  *argument* must "
"be a sequence holding the parameters for *action*."
msgstr ""

#: ../Doc/library/sched.rst:92
msgid ""
"Return value is an event which may be used for later cancellation of the "
"event (see :meth:`cancel`)."
msgstr ""

# 30cc4c0424774d13b2a036e3ba543a6b
#: ../Doc/library/sched.rst:98
msgid ""
"Schedule an event for *delay* more time units. Other than the relative time, "
"the other arguments, the effect and the return value are the same as those "
"for :meth:`enterabs`."
msgstr ""

#: ../Doc/library/sched.rst:105
msgid ""
"Remove the event from the queue. If *event* is not an event currently in the "
"queue, this method will raise a :exc:`ValueError`."
msgstr ""

#: ../Doc/library/sched.rst:111
msgid "Return true if the event queue is empty."
msgstr ""

#: ../Doc/library/sched.rst:116
msgid ""
"Run all scheduled events. This function will wait  (using the :func:"
"`delayfunc` function passed to the constructor) for the next event, then "
"execute it and so on until there are no more scheduled events."
msgstr ""

#: ../Doc/library/sched.rst:120
msgid ""
"Either *action* or *delayfunc* can raise an exception.  In either case, the "
"scheduler will maintain a consistent state and propagate the exception.  If "
"an exception is raised by *action*, the event will not be attempted in "
"future calls to :meth:`run`."
msgstr ""

#: ../Doc/library/sched.rst:125
msgid ""
"If a sequence of events takes longer to run than the time available before "
"the next event, the scheduler will simply fall behind.  No events will be "
"dropped; the calling code is responsible for canceling  events which are no "
"longer pertinent."
msgstr ""

#: ../Doc/library/sched.rst:132
msgid ""
"Read-only attribute returning a list of upcoming events in the order they "
"will be run.  Each event is shown as a :term:`named tuple` with the "
"following fields:  time, priority, action, argument."
msgstr ""

# 83a6670a8c834fb9bc0d5d306ca4a1a1
#: ../Doc/library/scrolledtext.rst:2
msgid ":mod:`ScrolledText` --- Scrolled Text Widget"
msgstr ""

# b9c86fe48292420b954cb2e829666e2a
#: ../Doc/library/scrolledtext.rst:10
msgid ""
"The :mod:`ScrolledText` module provides a class of the same name which "
"implements a basic text widget which has a vertical scroll bar configured to "
"do the \"right thing.\"  Using the :class:`ScrolledText` class is a lot "
"easier than setting up a text widget and scroll bar directly.  The "
"constructor is the same as that of the :class:`Tkinter.Text` class."
msgstr ""

# 69f275194df44940a128aa0826531bb6
#: ../Doc/library/scrolledtext.rst:18
msgid ""
":mod:`ScrolledText` has been renamed to :mod:`tkinter.scrolledtext` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

#: ../Doc/library/scrolledtext.rst:22
msgid ""
"The text widget and scrollbar are packed together in a :class:`Frame`, and "
"the methods of the :class:`Grid` and :class:`Pack` geometry managers are "
"acquired from the :class:`Frame` object.  This allows the :class:"
"`ScrolledText` widget to be used directly to achieve most normal geometry "
"management behavior."
msgstr ""

#: ../Doc/library/scrolledtext.rst:27
msgid ""
"Should more specific control be necessary, the following attributes are "
"available:"
msgstr ""

#: ../Doc/library/scrolledtext.rst:33
msgid "The frame which surrounds the text and scroll bar widgets."
msgstr ""

#: ../Doc/library/scrolledtext.rst:38
msgid "The scroll bar widget."
msgstr ""

#: ../Doc/library/select.rst:3
msgid ":mod:`select` --- Waiting for I/O completion"
msgstr ""

# e283ea8df0304b4299874b807fea63b1
#: ../Doc/library/select.rst:9
msgid ""
"This module provides access to the :c:func:`select` and :c:func:`poll` "
"functions available in most operating systems, :c:func:`epoll` available on "
"Linux 2.5+ and :c:func:`kqueue` available on most BSD. Note that on Windows, "
"it only works for sockets; on other operating systems, it also works for "
"other file types (in particular, on Unix, it works on pipes). It cannot be "
"used on regular files to determine whether a file has grown since it was "
"last read."
msgstr ""

# 2ad5c61037a14e66985879664350bbae
#: ../Doc/library/select.rst:22
msgid ""
"The exception raised when an error occurs.  The accompanying value is a pair "
"containing the numeric error code from :c:data:`errno` and the corresponding "
"string, as would be printed by the C function :c:func:`perror`."
msgstr ""

#: ../Doc/library/select.rst:29
msgid ""
"(Only supported on Linux 2.5.44 and newer.)  Returns an edge polling object, "
"which can be used as Edge or Level Triggered interface for I/O events; see "
"section :ref:`epoll-objects` below for the methods supported by epolling "
"objects."
msgstr ""

#: ../Doc/library/select.rst:39
msgid ""
"(Not supported by all operating systems.)  Returns a polling object, which "
"supports registering and unregistering file descriptors, and then polling "
"them for I/O events; see section :ref:`poll-objects` below for the methods "
"supported by polling objects."
msgstr ""

# f7812efb16d14786ac62c14df97e54f3
#: ../Doc/library/select.rst:47
msgid ""
"(Only supported on BSD.)  Returns a kernel queue object; see section :ref:"
"`kqueue-objects` below for the methods supported by kqueue objects."
msgstr ""

# 47b2f0b9ba70493183cba50dfe4b851d
#: ../Doc/library/select.rst:55
msgid ""
"(Only supported on BSD.)  Returns a kernel event object; see section :ref:"
"`kevent-objects` below for the methods supported by kevent objects."
msgstr ""

# da470f80beb14f91b4c3f1457d3cd8e2
#: ../Doc/library/select.rst:63
msgid ""
"This is a straightforward interface to the Unix :c:func:`select` system "
"call. The first three arguments are sequences of 'waitable objects': either "
"integers representing file descriptors or objects with a parameterless "
"method named :meth:`fileno` returning such an integer:"
msgstr ""

#: ../Doc/library/select.rst:68
msgid "*rlist*: wait until ready for reading"
msgstr ""

#: ../Doc/library/select.rst:69
msgid "*wlist*: wait until ready for writing"
msgstr ""

#: ../Doc/library/select.rst:70
msgid ""
"*xlist*: wait for an \"exceptional condition\" (see the manual page for what "
"your system considers such a condition)"
msgstr ""

#: ../Doc/library/select.rst:73
msgid ""
"Empty sequences are allowed, but acceptance of three empty sequences is "
"platform-dependent. (It is known to work on Unix but not on Windows.)  The "
"optional *timeout* argument specifies a time-out as a floating point number "
"in seconds.  When the *timeout* argument is omitted the function blocks "
"until at least one file descriptor is ready.  A time-out value of zero "
"specifies a poll and never blocks."
msgstr ""

#: ../Doc/library/select.rst:80
msgid ""
"The return value is a triple of lists of objects that are ready: subsets of "
"the first three arguments.  When the time-out is reached without a file "
"descriptor becoming ready, three empty lists are returned."
msgstr ""

#: ../Doc/library/select.rst:88
msgid ""
"Among the acceptable object types in the sequences are Python file objects "
"(e.g. ``sys.stdin``, or objects returned by :func:`open` or :func:`os."
"popen`), socket objects returned by :func:`socket.socket`.  You may also "
"define a :dfn:`wrapper` class yourself, as long as it has an appropriate :"
"meth:`fileno` method (that really returns a file descriptor, not just a "
"random integer)."
msgstr ""

# 3c1a57c5381c49038591b7b451dded01
#: ../Doc/library/select.rst:98
msgid ""
"File objects on Windows are not acceptable, but sockets are.  On Windows, "
"the underlying :c:func:`select` function is provided by the WinSock library, "
"and does not handle file descriptors that don't originate from WinSock."
msgstr ""

#: ../Doc/library/select.rst:105
msgid ""
"Files reported as ready for writing by :func:`select`, :func:`poll` or "
"similar interfaces in this module are guaranteed to not block on a write of "
"up to :const:`PIPE_BUF` bytes. This value is guaranteed by POSIX to be at "
"least 512.  Availability: Unix."
msgstr ""

#: ../Doc/library/select.rst:116
msgid "Edge and Level Trigger Polling (epoll) Objects"
msgstr ""

#: ../Doc/library/select.rst:118
msgid "http://linux.die.net/man/4/epoll"
msgstr ""

#: ../Doc/library/select.rst:120
msgid "*eventmask*"
msgstr ""

#: ../Doc/library/select.rst:125
msgid ":const:`EPOLLIN`"
msgstr ""

#: ../Doc/library/select.rst:125
msgid "Available for read"
msgstr ""

#: ../Doc/library/select.rst:127
msgid ":const:`EPOLLOUT`"
msgstr ""

#: ../Doc/library/select.rst:127
msgid "Available for write"
msgstr ""

#: ../Doc/library/select.rst:129
msgid ":const:`EPOLLPRI`"
msgstr ""

#: ../Doc/library/select.rst:129
msgid "Urgent data for read"
msgstr ""

#: ../Doc/library/select.rst:131
msgid ":const:`EPOLLERR`"
msgstr ""

#: ../Doc/library/select.rst:131
msgid "Error condition happened on the assoc. fd"
msgstr ""

#: ../Doc/library/select.rst:133
msgid ":const:`EPOLLHUP`"
msgstr ""

#: ../Doc/library/select.rst:133
msgid "Hang up happened on the assoc. fd"
msgstr ""

#: ../Doc/library/select.rst:135
msgid ":const:`EPOLLET`"
msgstr ""

#: ../Doc/library/select.rst:135
msgid "Set Edge Trigger behavior, the default is Level Trigger behavior"
msgstr ""

#: ../Doc/library/select.rst:138
msgid ":const:`EPOLLONESHOT`"
msgstr ""

#: ../Doc/library/select.rst:138
msgid ""
"Set one-shot behavior. After one event is pulled out, the fd is internally "
"disabled"
msgstr ""

#: ../Doc/library/select.rst:141
msgid ":const:`EPOLLRDNORM`"
msgstr ""

# 729a1f02a45a483b9f29e1e2d87edf34
#: ../Doc/library/select.rst:141
msgid "Equivalent to :const:`EPOLLIN`"
msgstr ""

#: ../Doc/library/select.rst:143
msgid ":const:`EPOLLRDBAND`"
msgstr ""

# c09440182ba14dc6a7f79df223f1599b
#: ../Doc/library/select.rst:143
msgid "Priority data band can be read."
msgstr ""

#: ../Doc/library/select.rst:145
msgid ":const:`EPOLLWRNORM`"
msgstr ""

# 9704f79abd72441f900b10ee815ebe3f
#: ../Doc/library/select.rst:145
msgid "Equivalent to :const:`EPOLLOUT`"
msgstr ""

#: ../Doc/library/select.rst:147
msgid ":const:`EPOLLWRBAND`"
msgstr ""

# 4bc67e5d89ae48fb9357d6c7c74c9105
#: ../Doc/library/select.rst:147
msgid "Priority data may be written."
msgstr ""

#: ../Doc/library/select.rst:149
msgid ":const:`EPOLLMSG`"
msgstr ""

# 407885654a8844ba9ea262ca1b27808f
#: ../Doc/library/select.rst:149
msgid "Ignored."
msgstr ""

#: ../Doc/library/select.rst:155
msgid "Close the control file descriptor of the epoll object."
msgstr ""

#: ../Doc/library/select.rst:160 ../Doc/library/select.rst:286
msgid "Return the file descriptor number of the control fd."
msgstr ""

#: ../Doc/library/select.rst:165
msgid "Create an epoll object from a given file descriptor."
msgstr ""

#: ../Doc/library/select.rst:170
msgid "Register a fd descriptor with the epoll object."
msgstr ""

#: ../Doc/library/select.rst:174
msgid ""
"Registering a file descriptor that's already registered raises an IOError -- "
"contrary to :ref:`poll-objects`'s register."
msgstr ""

#: ../Doc/library/select.rst:180
msgid "Modify a register file descriptor."
msgstr ""

#: ../Doc/library/select.rst:185
msgid "Remove a registered file descriptor from the epoll object."
msgstr ""

#: ../Doc/library/select.rst:190
msgid "Wait for events. timeout in seconds (float)"
msgstr ""

#: ../Doc/library/select.rst:196
msgid "Polling Objects"
msgstr ""

# ef6069f894e842aa9bc506c0bbab9461
#: ../Doc/library/select.rst:198
msgid ""
"The :c:func:`poll` system call, supported on most Unix systems, provides "
"better scalability for network servers that service many, many clients at "
"the same time. :c:func:`poll` scales better because the system call only "
"requires listing the file descriptors of interest, while :c:func:`select` "
"builds a bitmap, turns on bits for the fds of interest, and then afterward "
"the whole bitmap has to be linearly scanned again. :c:func:`select` is O"
"(highest file descriptor), while :c:func:`poll` is O(number of file "
"descriptors)."
msgstr ""

#: ../Doc/library/select.rst:209
msgid ""
"Register a file descriptor with the polling object.  Future calls to the :"
"meth:`poll` method will then check whether the file descriptor has any "
"pending I/O events.  *fd* can be either an integer, or an object with a :"
"meth:`fileno` method that returns an integer.  File objects implement :meth:"
"`fileno`, so they can also be used as the argument."
msgstr ""

#: ../Doc/library/select.rst:215
msgid ""
"*eventmask* is an optional bitmask describing the type of events you want to "
"check for, and can be a combination of the constants :const:`POLLIN`, :const:"
"`POLLPRI`, and :const:`POLLOUT`, described in the table below.  If not "
"specified, the default value used will check for all 3 types of events."
msgstr ""

#: ../Doc/library/select.rst:223
msgid ":const:`POLLIN`"
msgstr ""

#: ../Doc/library/select.rst:223
msgid "There is data to read"
msgstr ""

#: ../Doc/library/select.rst:225
msgid ":const:`POLLPRI`"
msgstr ""

#: ../Doc/library/select.rst:225
msgid "There is urgent data to read"
msgstr ""

#: ../Doc/library/select.rst:227
msgid ":const:`POLLOUT`"
msgstr ""

#: ../Doc/library/select.rst:227
msgid "Ready for output: writing will not block"
msgstr ""

#: ../Doc/library/select.rst:229
msgid ":const:`POLLERR`"
msgstr ""

#: ../Doc/library/select.rst:229
msgid "Error condition of some sort"
msgstr ""

#: ../Doc/library/select.rst:231
msgid ":const:`POLLHUP`"
msgstr ""

#: ../Doc/library/select.rst:231
msgid "Hung up"
msgstr ""

#: ../Doc/library/select.rst:233
msgid ":const:`POLLNVAL`"
msgstr ""

#: ../Doc/library/select.rst:233
msgid "Invalid request: descriptor not open"
msgstr ""

#: ../Doc/library/select.rst:236
msgid ""
"Registering a file descriptor that's already registered is not an error, and "
"has the same effect as registering the descriptor exactly once."
msgstr ""

# c5984516705641eeb26187412708d94e
#: ../Doc/library/select.rst:242
msgid ""
"Modifies an already registered fd. This has the same effect as ``register"
"(fd, eventmask)``.  Attempting to modify a file descriptor that was never "
"registered causes an :exc:`IOError` exception with errno :const:`ENOENT` to "
"be raised."
msgstr ""

#: ../Doc/library/select.rst:252
msgid ""
"Remove a file descriptor being tracked by a polling object.  Just like the :"
"meth:`register` method, *fd* can be an integer or an object with a :meth:"
"`fileno` method that returns an integer."
msgstr ""

#: ../Doc/library/select.rst:256
msgid ""
"Attempting to remove a file descriptor that was never registered causes a :"
"exc:`KeyError` exception to be raised."
msgstr ""

#: ../Doc/library/select.rst:262
msgid ""
"Polls the set of registered file descriptors, and returns a possibly-empty "
"list containing ``(fd, event)`` 2-tuples for the descriptors that have "
"events or errors to report. *fd* is the file descriptor, and *event* is a "
"bitmask with bits set for the reported events for that descriptor --- :const:"
"`POLLIN` for waiting input, :const:`POLLOUT` to indicate that the descriptor "
"can be written to, and so forth. An empty list indicates that the call timed "
"out and no file descriptors had any events to report. If *timeout* is given, "
"it specifies the length of time in milliseconds which the system will wait "
"for events before returning. If *timeout* is omitted, negative, or :const:"
"`None`, the call will block until there is an event for this poll object."
msgstr ""

#: ../Doc/library/select.rst:277
msgid "Kqueue Objects"
msgstr ""

#: ../Doc/library/select.rst:281
msgid "Close the control file descriptor of the kqueue object."
msgstr ""

#: ../Doc/library/select.rst:291
msgid "Create a kqueue object from a given file descriptor."
msgstr ""

#: ../Doc/library/select.rst:296
msgid "Low level interface to kevent"
msgstr ""

#: ../Doc/library/select.rst:298
msgid "changelist must be an iterable of kevent object or None"
msgstr ""

#: ../Doc/library/select.rst:299
msgid "max_events must be 0 or a positive integer"
msgstr ""

#: ../Doc/library/select.rst:300
msgid "timeout in seconds (floats possible)"
msgstr ""

#: ../Doc/library/select.rst:306
msgid "Kevent Objects"
msgstr ""

#: ../Doc/library/select.rst:308
msgid "http://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2"
msgstr ""

#: ../Doc/library/select.rst:312
msgid ""
"Value used to identify the event. The interpretation depends on the filter "
"but it's usually the file descriptor. In the constructor ident can either be "
"an int or an object with a fileno() function. kevent stores the integer "
"internally."
msgstr ""

#: ../Doc/library/select.rst:319
msgid "Name of the kernel filter."
msgstr ""

#: ../Doc/library/select.rst:324
msgid ":const:`KQ_FILTER_READ`"
msgstr ""

#: ../Doc/library/select.rst:324
msgid "Takes a descriptor and returns whenever there is data available to read"
msgstr ""

#: ../Doc/library/select.rst:327
msgid ":const:`KQ_FILTER_WRITE`"
msgstr ""

#: ../Doc/library/select.rst:327
msgid ""
"Takes a descriptor and returns whenever there is data available to write"
msgstr ""

#: ../Doc/library/select.rst:330
msgid ":const:`KQ_FILTER_AIO`"
msgstr ""

#: ../Doc/library/select.rst:330
msgid "AIO requests"
msgstr ""

#: ../Doc/library/select.rst:332
msgid ":const:`KQ_FILTER_VNODE`"
msgstr ""

#: ../Doc/library/select.rst:332
msgid ""
"Returns when one or more of the requested events watched in *fflag* occurs"
msgstr ""

#: ../Doc/library/select.rst:335
msgid ":const:`KQ_FILTER_PROC`"
msgstr ""

#: ../Doc/library/select.rst:335
msgid "Watch for events on a process id"
msgstr ""

#: ../Doc/library/select.rst:337
msgid ":const:`KQ_FILTER_NETDEV`"
msgstr ""

#: ../Doc/library/select.rst:337
msgid "Watch for events on a network device [not available on Mac OS X]"
msgstr ""

#: ../Doc/library/select.rst:340
msgid ":const:`KQ_FILTER_SIGNAL`"
msgstr ""

#: ../Doc/library/select.rst:340
msgid "Returns whenever the watched signal is delivered to the process"
msgstr ""

#: ../Doc/library/select.rst:343
msgid ":const:`KQ_FILTER_TIMER`"
msgstr ""

#: ../Doc/library/select.rst:343
msgid "Establishes an arbitrary timer"
msgstr ""

#: ../Doc/library/select.rst:348
msgid "Filter action."
msgstr ""

#: ../Doc/library/select.rst:353
msgid ":const:`KQ_EV_ADD`"
msgstr ""

#: ../Doc/library/select.rst:353
msgid "Adds or modifies an event"
msgstr ""

#: ../Doc/library/select.rst:355
msgid ":const:`KQ_EV_DELETE`"
msgstr ""

#: ../Doc/library/select.rst:355
msgid "Removes an event from the queue"
msgstr ""

#: ../Doc/library/select.rst:357
msgid ":const:`KQ_EV_ENABLE`"
msgstr ""

#: ../Doc/library/select.rst:357
msgid "Permitscontrol() to returns the event"
msgstr ""

#: ../Doc/library/select.rst:359
msgid ":const:`KQ_EV_DISABLE`"
msgstr ""

#: ../Doc/library/select.rst:359
msgid "Disablesevent"
msgstr ""

#: ../Doc/library/select.rst:361
msgid ":const:`KQ_EV_ONESHOT`"
msgstr ""

#: ../Doc/library/select.rst:361
msgid "Removes event after first occurrence"
msgstr ""

#: ../Doc/library/select.rst:363
msgid ":const:`KQ_EV_CLEAR`"
msgstr ""

#: ../Doc/library/select.rst:363
msgid "Reset the state after an event is retrieved"
msgstr ""

#: ../Doc/library/select.rst:365
msgid ":const:`KQ_EV_SYSFLAGS`"
msgstr ""

#: ../Doc/library/select.rst:365 ../Doc/library/select.rst:367
msgid "internal event"
msgstr ""

#: ../Doc/library/select.rst:367
msgid ":const:`KQ_EV_FLAG1`"
msgstr ""

#: ../Doc/library/select.rst:369
msgid ":const:`KQ_EV_EOF`"
msgstr ""

#: ../Doc/library/select.rst:369
msgid "Filter specific EOF condition"
msgstr ""

#: ../Doc/library/select.rst:371
msgid ":const:`KQ_EV_ERROR`"
msgstr ""

#: ../Doc/library/select.rst:371
msgid "See return values"
msgstr ""

#: ../Doc/library/select.rst:377
msgid "Filter specific flags."
msgstr ""

#: ../Doc/library/select.rst:379
msgid ":const:`KQ_FILTER_READ` and  :const:`KQ_FILTER_WRITE` filter flags:"
msgstr ""

#: ../Doc/library/select.rst:384
msgid ":const:`KQ_NOTE_LOWAT`"
msgstr ""

#: ../Doc/library/select.rst:384
msgid "low water mark of a socket buffer"
msgstr ""

#: ../Doc/library/select.rst:387
msgid ":const:`KQ_FILTER_VNODE` filter flags:"
msgstr ""

#: ../Doc/library/select.rst:392
msgid ":const:`KQ_NOTE_DELETE`"
msgstr ""

#: ../Doc/library/select.rst:392
msgid "*unlink()* was called"
msgstr ""

#: ../Doc/library/select.rst:394
msgid ":const:`KQ_NOTE_WRITE`"
msgstr ""

#: ../Doc/library/select.rst:394
msgid "a write occurred"
msgstr ""

#: ../Doc/library/select.rst:396
msgid ":const:`KQ_NOTE_EXTEND`"
msgstr ""

#: ../Doc/library/select.rst:396
msgid "the file was extended"
msgstr ""

#: ../Doc/library/select.rst:398
msgid ":const:`KQ_NOTE_ATTRIB`"
msgstr ""

#: ../Doc/library/select.rst:398
msgid "an attribute was changed"
msgstr ""

#: ../Doc/library/select.rst:400
msgid ":const:`KQ_NOTE_LINK`"
msgstr ""

#: ../Doc/library/select.rst:400
msgid "the link count has changed"
msgstr ""

#: ../Doc/library/select.rst:402
msgid ":const:`KQ_NOTE_RENAME`"
msgstr ""

#: ../Doc/library/select.rst:402
msgid "the file was renamed"
msgstr ""

#: ../Doc/library/select.rst:404
msgid ":const:`KQ_NOTE_REVOKE`"
msgstr ""

#: ../Doc/library/select.rst:404
msgid "access to the file was revoked"
msgstr ""

#: ../Doc/library/select.rst:407
msgid ":const:`KQ_FILTER_PROC` filter flags:"
msgstr ""

#: ../Doc/library/select.rst:412
msgid ":const:`KQ_NOTE_EXIT`"
msgstr ""

#: ../Doc/library/select.rst:412
msgid "the process has exited"
msgstr ""

#: ../Doc/library/select.rst:414
msgid ":const:`KQ_NOTE_FORK`"
msgstr ""

#: ../Doc/library/select.rst:414
msgid "the process has called *fork()*"
msgstr ""

#: ../Doc/library/select.rst:416
msgid ":const:`KQ_NOTE_EXEC`"
msgstr ""

#: ../Doc/library/select.rst:416
msgid "the process has executed a new process"
msgstr ""

#: ../Doc/library/select.rst:418
msgid ":const:`KQ_NOTE_PCTRLMASK`"
msgstr ""

#: ../Doc/library/select.rst:418 ../Doc/library/select.rst:420
msgid "internal filter flag"
msgstr ""

#: ../Doc/library/select.rst:420
msgid ":const:`KQ_NOTE_PDATAMASK`"
msgstr ""

#: ../Doc/library/select.rst:422
msgid ":const:`KQ_NOTE_TRACK`"
msgstr ""

#: ../Doc/library/select.rst:422
msgid "follow a process across *fork()*"
msgstr ""

#: ../Doc/library/select.rst:424
msgid ":const:`KQ_NOTE_CHILD`"
msgstr ""

#: ../Doc/library/select.rst:424
msgid "returned on the child process for *NOTE_TRACK*"
msgstr ""

#: ../Doc/library/select.rst:427
msgid ":const:`KQ_NOTE_TRACKERR`"
msgstr ""

#: ../Doc/library/select.rst:427
msgid "unable to attach to a child"
msgstr ""

#: ../Doc/library/select.rst:430
msgid ":const:`KQ_FILTER_NETDEV` filter flags (not available on Mac OS X):"
msgstr ""

#: ../Doc/library/select.rst:435
msgid ":const:`KQ_NOTE_LINKUP`"
msgstr ""

#: ../Doc/library/select.rst:435
msgid "link is up"
msgstr ""

#: ../Doc/library/select.rst:437
msgid ":const:`KQ_NOTE_LINKDOWN`"
msgstr ""

#: ../Doc/library/select.rst:437
msgid "link is down"
msgstr ""

#: ../Doc/library/select.rst:439
msgid ":const:`KQ_NOTE_LINKINV`"
msgstr ""

#: ../Doc/library/select.rst:439
msgid "link state is invalid"
msgstr ""

#: ../Doc/library/select.rst:445
msgid "Filter specific data."
msgstr ""

#: ../Doc/library/select.rst:450
msgid "User defined value."
msgstr ""

# 9bb859a35b164366b5921aa2fc663c1d
#: ../Doc/library/sets.rst:3
msgid ":mod:`sets` --- Unordered collections of unique elements"
msgstr ""

# 4d32cc0fde0f41e6a54dfb14d75ed776
#: ../Doc/library/sets.rst:19
msgid ""
"The :mod:`sets` module provides classes for constructing and manipulating "
"unordered collections of unique elements.  Common uses include membership "
"testing, removing duplicates from a sequence, and computing standard math "
"operations on sets such as intersection, union, difference, and symmetric "
"difference."
msgstr ""

#: ../Doc/library/sets.rst:25 ../Doc/library/stdtypes.rst:1718
msgid ""
"Like other collections, sets support ``x in set``, ``len(set)``, and ``for x "
"in set``.  Being an unordered collection, sets do not record element "
"position or order of insertion.  Accordingly, sets do not support indexing, "
"slicing, or other sequence-like behavior."
msgstr ""

# 2ba0eb0d201c42cc95e020fb09fe4762
#: ../Doc/library/sets.rst:30
msgid ""
"Most set applications use the :class:`Set` class which provides every set "
"method except for :meth:`__hash__`. For advanced applications requiring a "
"hash method, the :class:`ImmutableSet` class adds a :meth:`__hash__` method "
"but omits methods which alter the contents of the set. Both :class:`Set` "
"and :class:`ImmutableSet` derive from :class:`BaseSet`, an abstract class "
"useful for determining whether something is a set: ``isinstance(obj, BaseSet)"
"``."
msgstr ""

# 801f9fabee3f482292d1e408d61d7789
#: ../Doc/library/sets.rst:37
msgid ""
"The set classes are implemented using dictionaries.  Accordingly, the "
"requirements for set elements are the same as those for dictionary keys; "
"namely, that the element defines both :meth:`__eq__` and :meth:`__hash__`. "
"As a result, sets cannot contain mutable elements such as lists or "
"dictionaries. However, they can contain immutable collections such as tuples "
"or instances of :class:`ImmutableSet`.  For convenience in implementing sets "
"of sets, inner sets are automatically converted to immutable form, for "
"example, ``Set([Set(['dog'])])`` is transformed to ``Set([ImmutableSet"
"(['dog'])])``."
msgstr ""

# 72daa0c5f5f04ea6bd9f517f2762dffb
#: ../Doc/library/sets.rst:49
msgid ""
"Constructs a new empty :class:`Set` object.  If the optional *iterable* "
"parameter is supplied, updates the set with elements obtained from "
"iteration. All of the elements in *iterable* should be immutable or be "
"transformable to an immutable using the protocol described in section :ref:"
"`immutable-transforms`."
msgstr ""

# 6b282a5c771148dfb8fb1c7cb725441e
#: ../Doc/library/sets.rst:57
msgid ""
"Constructs a new empty :class:`ImmutableSet` object.  If the optional "
"*iterable* parameter is supplied, updates the set with elements obtained "
"from iteration. All of the elements in *iterable* should be immutable or be "
"transformable to an immutable using the protocol described in section :ref:"
"`immutable-transforms`."
msgstr ""

# 62f08b1421184358b90ca5558cc28c0a
#: ../Doc/library/sets.rst:62
msgid ""
"Because :class:`ImmutableSet` objects provide a :meth:`__hash__` method, "
"they can be used as set elements or as dictionary keys.  :class:"
"`ImmutableSet` objects do not have methods for adding or removing elements, "
"so all of the elements must be known when the constructor is called."
msgstr ""

# 830e2acc18594efdabbff6bc73209f3b
#: ../Doc/library/sets.rst:71
msgid "Set Objects"
msgstr ""

# a437414d620648e9acec9f06c465ec57
#: ../Doc/library/sets.rst:73
msgid ""
"Instances of :class:`Set` and :class:`ImmutableSet` both provide the "
"following operations:"
msgstr ""

# 71ed0bb3bbe74c20a2678fcafb1dd6a1
# 45b4f09a2ea34e2d9888ca70b83dbd74
#: ../Doc/library/sets.rst:77 ../Doc/library/sets.rst:147
msgid "Equivalent"
msgstr ""

#: ../Doc/library/sets.rst:79 ../Doc/library/stdtypes.rst:740
msgid "``len(s)``"
msgstr ""

# 42e084372c744be09829cfb7b5fa19e1
#: ../Doc/library/sets.rst:79
msgid "cardinality of set *s*"
msgstr ""

#: ../Doc/library/sets.rst:81 ../Doc/library/stdtypes.rst:721
msgid "``x in s``"
msgstr ""

# 497f11c9097245deba691bbca47f046e
#: ../Doc/library/sets.rst:81
msgid "test *x* for membership in *s*"
msgstr ""

#: ../Doc/library/sets.rst:83 ../Doc/library/stdtypes.rst:724
msgid "``x not in s``"
msgstr ""

# ba0256fec886447fa88283de1c396104
#: ../Doc/library/sets.rst:83
msgid "test *x* for non-membership in *s*"
msgstr ""

# 515f5e9c184e4f4ca853e108bfdb5efc
#: ../Doc/library/sets.rst:86
msgid "``s.issubset(t)``"
msgstr ""

# 316df191697e455c8d748022fbe51839
#: ../Doc/library/sets.rst:86
msgid "``s <= t``"
msgstr ""

# 54b2569aba7746c4b72e500f2edc7c6c
#: ../Doc/library/sets.rst:86
msgid "test whether every element in *s* is in *t*"
msgstr ""

# 9c6a4ab58fd1470d8e21bb4f8a6a6503
#: ../Doc/library/sets.rst:89
msgid "``s.issuperset(t)``"
msgstr ""

# bc05183d15064ac0a5280629e26aa352
#: ../Doc/library/sets.rst:89
msgid "``s >= t``"
msgstr ""

# eab5ad27abd04f49a9f206d8ac8a5ee7
#: ../Doc/library/sets.rst:89
msgid "test whether every element in *t* is in *s*"
msgstr ""

# 69b4f4dd97f546b48771df62ac37b8cc
#: ../Doc/library/sets.rst:92
msgid "``s.union(t)``"
msgstr ""

# 48da902860964a23a92609b893c03ac9
#: ../Doc/library/sets.rst:92
msgid "``s | t``"
msgstr ""

# 2c288369dc264f79a39d879c7401259e
#: ../Doc/library/sets.rst:92
msgid "new set with elements from both *s* and *t*"
msgstr ""

# 693b0db1eef0453d9f2d67cb6d9c3adf
#: ../Doc/library/sets.rst:95
msgid "``s.intersection(t)``"
msgstr ""

# 0fe6b6a924d54deba5a96db8b1b4e65d
#: ../Doc/library/sets.rst:95
msgid "``s & t``"
msgstr ""

# bfd3732b592a46138798748f99ae6de5
#: ../Doc/library/sets.rst:95
msgid "new set with elements common to *s* and *t*"
msgstr ""

# b7b05021f4a04bd6b10222e57f688b32
#: ../Doc/library/sets.rst:98
msgid "``s.difference(t)``"
msgstr ""

# bc5a3722848f44ce89596b6980c9144c
#: ../Doc/library/sets.rst:98
msgid "``s - t``"
msgstr ""

# 42d6159d9a3944318db97806624262cd
#: ../Doc/library/sets.rst:98
msgid "new set with elements in *s* but not in *t*"
msgstr ""

# 311e889243e945f1891829ae15d90dac
#: ../Doc/library/sets.rst:101
msgid "``s.symmetric_difference(t)``"
msgstr ""

# 1104b72c49814fe58ff665fe638f7b19
#: ../Doc/library/sets.rst:101
msgid "``s ^ t``"
msgstr ""

# f5e55ec95c0541f6999a7074ede3f787
#: ../Doc/library/sets.rst:101
msgid "new set with elements in either *s* or *t* but not both"
msgstr ""

# 42ebce26939a4514a0578d079a58dc38
#: ../Doc/library/sets.rst:104
msgid "``s.copy()``"
msgstr ""

# 0b34543212e0445693966ac18bfc7918
#: ../Doc/library/sets.rst:104
msgid "new set with a shallow copy of *s*"
msgstr ""

# d9f54f9068714d65aeabdda7bb51565c
#: ../Doc/library/sets.rst:108
msgid ""
"Note, the non-operator versions of :meth:`union`, :meth:`intersection`, :"
"meth:`difference`, and :meth:`symmetric_difference` will accept any iterable "
"as an argument. In contrast, their operator based counterparts require their "
"arguments to be sets.  This precludes error-prone constructions like ``Set"
"('abc') & 'cbs'`` in favor of the more readable ``Set('abc').intersection"
"('cbs')``."
msgstr ""

# c618b220185f4ac09a5d294bc91232bf
#: ../Doc/library/sets.rst:118
msgid ""
"In addition, both :class:`Set` and :class:`ImmutableSet` support set to set "
"comparisons.  Two sets are equal if and only if every element of each set is "
"contained in the other (each is a subset of the other). A set is less than "
"another set if and only if the first set is a proper subset of the second "
"set (is a subset, but is not equal). A set is greater than another set if "
"and only if the first set is a proper superset of the second set (is a "
"superset, but is not equal)."
msgstr ""

# 76d9fe63c59e4621867dade759f9f8c1
#: ../Doc/library/sets.rst:126
msgid ""
"The subset and equality comparisons do not generalize to a complete ordering "
"function.  For example, any two disjoint sets are not equal and are not "
"subsets of each other, so *all* of the following return ``False``:  ``a<b``, "
"``a==b``, or ``a>b``. Accordingly, sets do not implement the :meth:`__cmp__` "
"method."
msgstr ""

#: ../Doc/library/sets.rst:131 ../Doc/library/stdtypes.rst:1845
msgid ""
"Since sets only define partial ordering (subset relationships), the output "
"of the :meth:`list.sort` method is undefined for lists of sets."
msgstr ""

# 41d2935d42be485682389c14239ba588
#: ../Doc/library/sets.rst:134
msgid ""
"The following table lists operations available in :class:`ImmutableSet` but "
"not found in :class:`Set`:"
msgstr ""

# a5e67dbeb5e2489ca253500189e861b6
#: ../Doc/library/sets.rst:140
msgid "``hash(s)``"
msgstr ""

# ec09a7501fb646ee987de660e9dfbf86
#: ../Doc/library/sets.rst:140
msgid "returns a hash value for *s*"
msgstr ""

# 3c87e402fc44469b8bcbd7bed4bfde7b
#: ../Doc/library/sets.rst:143
msgid ""
"The following table lists operations available in :class:`Set` but not found "
"in :class:`ImmutableSet`:"
msgstr ""

# 08117a7325984a39afd785064596f674
#: ../Doc/library/sets.rst:149
msgid "``s.update(t)``"
msgstr ""

# a1cb1dcb26874666a1e267d6f829cf6b
#: ../Doc/library/sets.rst:149
msgid "*s* \\|= *t*"
msgstr ""

# 01d103aa834248dbac84355f525ef6e5
#: ../Doc/library/sets.rst:149
msgid "return set *s* with elements added from *t*"
msgstr ""

# ebbb969618924421bd8b9895dde10fa6
#: ../Doc/library/sets.rst:152
msgid "``s.intersection_update(t)``"
msgstr ""

# 931b54d64c544cd3b122d58378b1c74e
#: ../Doc/library/sets.rst:152
msgid "*s* &= *t*"
msgstr ""

# 77aca1a6f8344ac8b1301ee4b11de753
#: ../Doc/library/sets.rst:152
msgid "return set *s* keeping only elements also found in *t*"
msgstr ""

# 0854a1dca896435697ddef682a5d99e6
#: ../Doc/library/sets.rst:155
msgid "``s.difference_update(t)``"
msgstr ""

# 5795422179884a36b3652885f9f7a253
#: ../Doc/library/sets.rst:155
msgid "*s* -= *t*"
msgstr ""

# a6990103d9f74d92bf0f547e76042630
#: ../Doc/library/sets.rst:155
msgid "return set *s* after removing elements found in *t*"
msgstr ""

# dc4994a5a6a44956ad0b1838efe2255d
#: ../Doc/library/sets.rst:158
msgid "``s.symmetric_difference_update(t)``"
msgstr ""

# 48b458580cee453a920d86ec7837decd
#: ../Doc/library/sets.rst:158
msgid "*s* ^= *t*"
msgstr ""

# 39da3d09a51d4a0a9cc43f8164e1bf5c
#: ../Doc/library/sets.rst:158
msgid "return set *s* with elements from *s* or *t* but not both"
msgstr ""

# 00d4f5b0dd454338b6182bed6aef1c65
#: ../Doc/library/sets.rst:161
msgid "``s.add(x)``"
msgstr ""

# a3881e39e67c4fed981991c5e32c4294
#: ../Doc/library/sets.rst:161
msgid "add element *x* to set *s*"
msgstr ""

#: ../Doc/library/sets.rst:163 ../Doc/library/stdtypes.rst:1607
msgid "``s.remove(x)``"
msgstr ""

# d93cc197e7664861ab559bb78cd119f2
#: ../Doc/library/sets.rst:163
msgid "remove *x* from set *s*; raises :exc:`KeyError` if not present"
msgstr ""

# 40b6b5f18ad04e51996f7b07b57a74a6
#: ../Doc/library/sets.rst:166
msgid "``s.discard(x)``"
msgstr ""

# 1fa7e4a8350845af806a199562ff9d44
#: ../Doc/library/sets.rst:166
msgid "removes *x* from set *s* if present"
msgstr ""

# 0710c14d9ed0440ca9d3e9830ae1d646
#: ../Doc/library/sets.rst:169
msgid "``s.pop()``"
msgstr ""

# 94ceca8c8ab0493a9e1b2c978889be55
#: ../Doc/library/sets.rst:169
msgid ""
"remove and return an arbitrary element from *s*; raises :exc:`KeyError` if "
"empty"
msgstr ""

# a21a2a56899e426c81b2b5737a0c04f0
#: ../Doc/library/sets.rst:173
msgid "``s.clear()``"
msgstr ""

# 16167956c2234eeba34b3645214f92b9
#: ../Doc/library/sets.rst:173
msgid "remove all elements from set *s*"
msgstr ""

# 27e159ae45fb4e99ae1fa1b1cb73fe73
#: ../Doc/library/sets.rst:177
msgid ""
"Note, the non-operator versions of :meth:`update`, :meth:"
"`intersection_update`, :meth:`difference_update`, and :meth:"
"`symmetric_difference_update` will accept any iterable as an argument."
msgstr ""

# 291e17f160d24b40b42af04fca0e0a9a
#: ../Doc/library/sets.rst:184
msgid ""
"Also note, the module also includes a :meth:`union_update` method which is "
"an alias for :meth:`update`.  The method is included for backwards "
"compatibility. Programmers should prefer the :meth:`update` method because "
"it is supported by the built-in :class:`set()` and :class:`frozenset()` "
"types."
msgstr ""

# 32609bf0fd5e4680afde59ff3538f9cb
#: ../Doc/library/sets.rst:223
msgid "Protocol for automatic conversion to immutable"
msgstr ""

# 6d6a5e312b7040bfbd9f4108a6c8af2d
#: ../Doc/library/sets.rst:225
msgid ""
"Sets can only contain immutable elements.  For convenience, mutable :class:"
"`Set` objects are automatically copied to an :class:`ImmutableSet` before "
"being added as a set element."
msgstr ""

# 666aeb3328274e32bda0271a50b177b3
#: ../Doc/library/sets.rst:229
msgid ""
"The mechanism is to always add a :term:`hashable` element, or if it is not "
"hashable, the element is checked to see if it has an :meth:"
"`__as_immutable__` method which returns an immutable equivalent."
msgstr ""

# 47e9bc0e217649b19d24f969dcfba6c5
#: ../Doc/library/sets.rst:233
msgid ""
"Since :class:`Set` objects have a :meth:`__as_immutable__` method returning "
"an instance of :class:`ImmutableSet`, it is possible to construct sets of "
"sets."
msgstr ""

# c4b47f12dec64da7a31b3698a8e34b72
#: ../Doc/library/sets.rst:236
msgid ""
"A similar mechanism is needed by the :meth:`__contains__` and :meth:`remove` "
"methods which need to hash an element to check for membership in a set.  "
"Those methods check an element for hashability and, if not, check for a :"
"meth:`__as_temporarily_immutable__` method which returns the element wrapped "
"by a class that provides temporary methods for :meth:`__hash__`, :meth:"
"`__eq__`, and :meth:`__ne__`."
msgstr ""

# 8e0236ae76314722a3b556429406c6af
#: ../Doc/library/sets.rst:243
msgid ""
"The alternate mechanism spares the need to build a separate copy of the "
"original mutable object."
msgstr ""

# 27e2dd44aa014490b4308055d0808d5f
#: ../Doc/library/sets.rst:246
msgid ""
":class:`Set` objects implement the :meth:`__as_temporarily_immutable__` "
"method which returns the :class:`Set` object wrapped by a new class :class:"
"`_TemporarilyImmutableSet`."
msgstr ""

# b94dc26f57f846d8abc328cd0a027415
#: ../Doc/library/sets.rst:250
msgid ""
"The two mechanisms for adding hashability are normally invisible to the "
"user; however, a conflict can arise in a multi-threaded environment where "
"one thread is updating a set while another has temporarily wrapped it in :"
"class:`_TemporarilyImmutableSet`.  In other words, sets of mutable sets are "
"not thread-safe."
msgstr ""

# fc23ee63cb2748be8cacbe656a1f35db
#: ../Doc/library/sets.rst:260
msgid "Comparison to the built-in :class:`set` types"
msgstr ""

# 716687cf2caf47259b5cf543559bc951
#: ../Doc/library/sets.rst:262
msgid ""
"The built-in :class:`set` and :class:`frozenset` types were designed based "
"on lessons learned from the :mod:`sets` module.  The key differences are:"
msgstr ""

# 39b7cefea6c2404bab182943b016d64d
#: ../Doc/library/sets.rst:265
msgid ""
":class:`Set` and :class:`ImmutableSet` were renamed to :class:`set` and :"
"class:`frozenset`."
msgstr ""

# cbf23551338543a195a5d3255ff1b301
#: ../Doc/library/sets.rst:268
msgid ""
"There is no equivalent to :class:`BaseSet`.  Instead, use ``isinstance(x, "
"(set, frozenset))``."
msgstr ""

# 03277b50b87d46168b106023ece39a83
#: ../Doc/library/sets.rst:271
msgid ""
"The hash algorithm for the built-ins performs significantly better (fewer "
"collisions) for most datasets."
msgstr ""

# 714e23bd7dd74c78bcad763054caf32e
#: ../Doc/library/sets.rst:274
msgid "The built-in versions have more space efficient pickles."
msgstr ""

# 47dc81b23acf4659a745a59b40e1274b
#: ../Doc/library/sets.rst:276
msgid ""
"The built-in versions do not have a :meth:`union_update` method. Instead, "
"use the :meth:`update` method which is equivalent."
msgstr ""

# 26047510fc9740a780524ecad6735bef
#: ../Doc/library/sets.rst:279
msgid ""
"The built-in versions do not have a ``_repr(sorted=True)`` method. Instead, "
"use the built-in :func:`repr` and :func:`sorted` functions: ``repr(sorted(s))"
"``."
msgstr ""

# 6b7c7496ad1944128288149839c8e50b
#: ../Doc/library/sets.rst:283
msgid ""
"The built-in version does not have a protocol for automatic conversion to "
"immutable.  Many found this feature to be confusing and no one in the "
"community reported having found real uses for it."
msgstr ""

# 158bc29c01504a1287c7939cb1fc2fa4
#: ../Doc/library/sgi.rst:6
msgid "SGI IRIX Specific Services"
msgstr ""

# 5b6cf3b3f6514e22adb311a68603bed2
#: ../Doc/library/sgi.rst:8
msgid ""
"The modules described in this chapter provide interfaces to features that "
"are unique to SGI's IRIX operating system (versions 4 and 5)."
msgstr ""

# 82c03644f16c4e11af8b7ea29c2c368c
#: ../Doc/library/sgmllib.rst:2
msgid ":mod:`sgmllib` --- Simple SGML parser"
msgstr ""

# 37d763cd903641d9ac318afd40d6b8cd
#: ../Doc/library/sgmllib.rst:13
msgid ""
"This module defines a class :class:`SGMLParser` which serves as the basis "
"for parsing text files formatted in SGML (Standard Generalized Mark-up "
"Language). In fact, it does not provide a full SGML parser --- it only "
"parses SGML insofar as it is used by HTML, and the module only exists as a "
"base for the :mod:`htmllib` module.  Another HTML parser which supports "
"XHTML and offers a somewhat different interface is available in the :mod:"
"`HTMLParser` module."
msgstr ""

# 111fdcc7851741aba30f78a1a84c6687
#: ../Doc/library/sgmllib.rst:23
msgid ""
"The :class:`SGMLParser` class is instantiated without arguments. The parser "
"is hardcoded to recognize the following constructs:"
msgstr ""

# bcc5fbe33d7f48bd9a845fe8bacdc939
#: ../Doc/library/sgmllib.rst:26
msgid ""
"Opening and closing tags of the form ``<tag attr=\"value\" ...>`` and ``</"
"tag>``, respectively."
msgstr ""

# 17ee442d667e413098f236974299bc4a
#: ../Doc/library/sgmllib.rst:29
msgid "Numeric character references of the form ``&#name;``."
msgstr ""

# 31e9d325f63d4e9aa86ae377b48fa956
#: ../Doc/library/sgmllib.rst:31
msgid "Entity references of the form ``&name;``."
msgstr ""

# b440bee112a54e8196f5aa99f194effd
#: ../Doc/library/sgmllib.rst:33
msgid ""
"SGML comments of the form ``<!--text-->``.  Note that spaces, tabs, and "
"newlines are allowed between the trailing ``>`` and the immediately "
"preceding ``--``."
msgstr ""

# d0b6108d6f6642bdb282fe8477795d89
#: ../Doc/library/sgmllib.rst:37
msgid "A single exception is defined as well:"
msgstr ""

# fc10ce61a7d444d8ac45bdae9b26ed62
#: ../Doc/library/sgmllib.rst:42
msgid ""
"Exception raised by the :class:`SGMLParser` class when it encounters an "
"error while parsing."
msgstr ""

# 1667db3115314d57851e8b155a30379c
#: ../Doc/library/sgmllib.rst:47
msgid ":class:`SGMLParser` instances have the following methods:"
msgstr ""

# 83671abce02e46abadc79a0b504291e7
#: ../Doc/library/sgmllib.rst:58
msgid ""
"Stop processing tags.  Treat all following input as literal input (CDATA). "
"(This is only provided so the HTML tag ``<PLAINTEXT>`` can be implemented.)"
msgstr ""

# 5ce4083c982a4a429a88b50fe1768fbd
#: ../Doc/library/sgmllib.rst:64
msgid "Enter literal mode (CDATA mode)."
msgstr ""

#: ../Doc/library/sgmllib.rst:69
msgid ""
"Feed some text to the parser.  It is processed insofar as it consists of "
"complete elements; incomplete data is buffered until more data is fed or :"
"meth:`close` is called."
msgstr ""

# ee8ae8dc917f4c73a4651e68b0fc5d27
#: ../Doc/library/sgmllib.rst:76
msgid ""
"Force processing of all buffered data as if it were followed by an end-of-"
"file mark.  This method may be redefined by a derived class to define "
"additional processing at the end of the input, but the redefined version "
"should always call :meth:`close`."
msgstr ""

# eed686bd14b74679b39112e9ced78183
#: ../Doc/library/sgmllib.rst:92
msgid ""
"This method is called to handle start tags for which either a :meth:"
"`start_tag` or :meth:`do_tag` method has been defined.  The *tag* argument "
"is the name of the tag converted to lower case, and the *method* argument is "
"the bound method which should be used to support semantic interpretation of "
"the start tag. The *attributes* argument is a list of ``(name, value)`` "
"pairs containing the attributes found inside the tag's ``<>`` brackets."
msgstr ""

# 5bd867c28f4a4eccbae92ec52e96296a
#: ../Doc/library/sgmllib.rst:99
msgid ""
"The *name* has been translated to lower case. Double quotes and backslashes "
"in the *value* have been interpreted, as well as known character references "
"and known entity references terminated by a semicolon (normally, entity "
"references can be terminated by any non-alphanumerical character, but this "
"would break the very common case of ``<A HREF=\"url?spam=1&eggs=2\">`` when "
"``eggs`` is a valid entity name)."
msgstr ""

# 57124ec832bf4a8181437295b6e03784
#: ../Doc/library/sgmllib.rst:106
msgid ""
"For instance, for the tag ``<A HREF=\"http://www.cwi.nl/\">``, this method "
"would be called as ``unknown_starttag('a', [('href', 'http://www.cwi.nl/')])"
"``.  The base implementation simply calls *method* with *attributes* as the "
"only argument."
msgstr ""

# 283d16487d41485eb128b347d35b3def
#: ../Doc/library/sgmllib.rst:117
msgid ""
"This method is called to handle endtags for which an :meth:`end_tag` method "
"has been defined.  The *tag* argument is the name of the tag converted to "
"lower case, and the *method* argument is the bound method which should be "
"used to support semantic interpretation of the end tag.  If no :meth:"
"`end_tag` method is defined for the closing element, this handler is not "
"called.  The base implementation simply calls *method*."
msgstr ""

#: ../Doc/library/sgmllib.rst:127
msgid ""
"This method is called to process arbitrary data.  It is intended to be "
"overridden by a derived class; the base class implementation does nothing."
msgstr ""

# 4d538ccdb6dc48acbf3be553c2071a73
#: ../Doc/library/sgmllib.rst:133
msgid ""
"This method is called to process a character reference of the form ``&#ref;"
"``. The base implementation uses :meth:`convert_charref` to convert the "
"reference to a string.  If that method returns a string, it is passed to :"
"meth:`handle_data`, otherwise ``unknown_charref(ref)`` is called to handle "
"the error."
msgstr ""

# 49a3e3d055d048439a099c0323a62d18
#: ../Doc/library/sgmllib.rst:144
msgid ""
"Convert a character reference to a string, or ``None``.  *ref* is the "
"reference passed in as a string.  In the base implementation, *ref* must be "
"a decimal number in the range 0-255.  It converts the code point found using "
"the :meth:`convert_codepoint` method. If *ref* is invalid or out of range, "
"this method returns ``None``.  This method is called by the default :meth:"
"`handle_charref` implementation and by the attribute value parser."
msgstr ""

# a77a657bfbda4425b401780e5b5b77c5
#: ../Doc/library/sgmllib.rst:156
msgid ""
"Convert a codepoint to a :class:`str` value.  Encodings can be handled here "
"if appropriate, though the rest of :mod:`sgmllib` is oblivious on this "
"matter."
msgstr ""

# 828bbe87d81c4b0fb84c1620fee9c880
#: ../Doc/library/sgmllib.rst:164
msgid ""
"This method is called to process a general entity reference of the form "
"``&ref;`` where *ref* is an general entity reference.  It converts *ref* by "
"passing it to :meth:`convert_entityref`.  If a translation is returned, it "
"calls the method :meth:`handle_data` with the translation; otherwise, it "
"calls the method ``unknown_entityref(ref)``. The default :attr:`entitydefs` "
"defines translations for ``&amp;``, ``&apos``, ``&gt;``, ``&lt;``, and "
"``&quot;``."
msgstr ""

# a0f99573d2b241aa933dfbe26e44b4d4
#: ../Doc/library/sgmllib.rst:177
msgid ""
"Convert a named entity reference to a :class:`str` value, or ``None``.  The "
"resulting value will not be parsed.  *ref* will be only the name of the "
"entity. The default implementation looks for *ref* in the instance (or "
"class) variable :attr:`entitydefs` which should be a mapping from entity "
"names to corresponding translations.  If no translation is available for "
"*ref*, this method returns ``None``.  This method is called by the default :"
"meth:`handle_entityref` implementation and by the attribute value parser."
msgstr ""

# e191aa4a2cf6412586bb27c572434ac9
#: ../Doc/library/sgmllib.rst:190
msgid ""
"This method is called when a comment is encountered.  The *comment* argument "
"is a string containing the text between the ``<!--`` and ``-->`` delimiters, "
"but not the delimiters themselves.  For example, the comment ``<!--text-->`` "
"will cause this method to be called with the argument ``'text'``.  The "
"default method does nothing."
msgstr ""

# 8d925a7747c641758974127e1352c94d
#: ../Doc/library/sgmllib.rst:199
msgid ""
"Method called when an SGML declaration is read by the parser.  In practice, "
"the ``DOCTYPE`` declaration is the only thing observed in HTML, but the "
"parser does not discriminate among different (or broken) declarations.  "
"Internal subsets in a ``DOCTYPE`` declaration are not supported.  The *data* "
"parameter will be the entire contents of the declaration inside the ``<!``..."
"\\ ``>`` markup.  The default implementation does nothing."
msgstr ""

# c109df168eca407c8ec53d87f0942bd6
#: ../Doc/library/sgmllib.rst:209
msgid ""
"This method is called when an end tag is found which does not correspond to "
"any open element."
msgstr ""

# d3c9eeb756ac4a45a68eecab0e686dbb
#: ../Doc/library/sgmllib.rst:215
msgid ""
"This method is called to process an unknown start tag.  It is intended to be "
"overridden by a derived class; the base class implementation does nothing."
msgstr ""

# 786d360ba72d4bd080607f14e6a7ea49
#: ../Doc/library/sgmllib.rst:221
msgid ""
"This method is called to process an unknown end tag.  It is intended to be "
"overridden by a derived class; the base class implementation does nothing."
msgstr ""

# 7a9215da4e9b4878a50793b45fba174f
#: ../Doc/library/sgmllib.rst:227
msgid ""
"This method is called to process unresolvable numeric character references. "
"Refer to :meth:`handle_charref` to determine what is handled by default.  It "
"is intended to be overridden by a derived class; the base class "
"implementation does nothing."
msgstr ""

# 0637b5e4e03043c88e5adf50c66682c1
#: ../Doc/library/sgmllib.rst:235
msgid ""
"This method is called to process an unknown entity reference.  It is "
"intended to be overridden by a derived class; the base class implementation "
"does nothing."
msgstr ""

# ca0950fde6364f75b9029d1bdb03dcfb
#: ../Doc/library/sgmllib.rst:238
msgid ""
"Apart from overriding or extending the methods listed above, derived classes "
"may also define methods of the following form to define processing of "
"specific tags. Tag names in the input stream are case independent; the *tag* "
"occurring in method names must be in lower case:"
msgstr ""

# d2575b4a18374f9294df3b0d09b69798
#: ../Doc/library/sgmllib.rst:247
msgid ""
"This method is called to process an opening tag *tag*.  It has preference "
"over :meth:`do_tag`.  The *attributes* argument has the same meaning as "
"described for :meth:`handle_starttag` above."
msgstr ""

# 309a7ffc46274bbfb8c33aebdc002613
#: ../Doc/library/sgmllib.rst:255
msgid ""
"This method is called to process an opening tag *tag*  for which no :meth:"
"`start_tag` method is defined.   The *attributes* argument has the same "
"meaning as described for :meth:`handle_starttag` above."
msgstr ""

# a96e4ecef7654b629d4f57b9613cc811
#: ../Doc/library/sgmllib.rst:263
msgid "This method is called to process a closing tag *tag*."
msgstr ""

# 2f3031edf7634dc68a1b156d3233d795
#: ../Doc/library/sgmllib.rst:265
msgid ""
"Note that the parser maintains a stack of open elements for which no end tag "
"has been found yet.  Only tags processed by :meth:`start_tag` are pushed on "
"this stack.  Definition of an :meth:`end_tag` method is optional for these "
"tags.  For tags processed by :meth:`do_tag` or by :meth:`unknown_tag`, no :"
"meth:`end_tag` method must be defined; if defined, it will not be used.  If "
"both :meth:`start_tag` and :meth:`do_tag` methods exist for a tag, the :meth:"
"`start_tag` method takes precedence."
msgstr ""

# 11816cf02cb5402c9ef579350fe716da
#: ../Doc/library/sha.rst:3
msgid ":mod:`sha` --- SHA-1 message digest algorithm"
msgstr ""

# ae4fb3ade09449c293f2d75eb0311577
#: ../Doc/library/sha.rst:19
msgid ""
"This module implements the interface to NIST's secure hash  algorithm, known "
"as SHA-1.  SHA-1 is an improved version of the original SHA hash algorithm.  "
"It is used in the same way as the :mod:`md5` module: use :func:`new` to "
"create an sha object, then feed this object with arbitrary strings using "
"the :meth:`update` method, and at any point you can ask it for the :dfn:"
"`digest` of the concatenation of the strings fed to it so far.  SHA-1 "
"digests are 160 bits instead of MD5's 128 bits."
msgstr ""

# af3663149d10443a827c08216cdb09fd
#: ../Doc/library/sha.rst:30
msgid ""
"Return a new sha object.  If *string* is present, the method call ``update"
"(string)`` is made."
msgstr ""

# a2eefb9d61c645e9a3fcbdb042c93450
#: ../Doc/library/sha.rst:33
msgid ""
"The following values are provided as constants in the module and as "
"attributes of the sha objects returned by :func:`new`:"
msgstr ""

# 13cad16595614450bc35d101b78966d4
#: ../Doc/library/sha.rst:39
msgid ""
"Size of the blocks fed into the hash function; this is always ``1``.  This "
"size is used to allow an arbitrary string to be hashed."
msgstr ""

# 8a016f83366f495cb832780b82b6c1a3
#: ../Doc/library/sha.rst:45
msgid "The size of the resulting digest in bytes.  This is always ``20``."
msgstr ""

# 95dec218b1a1437cb1882b983731b192
#: ../Doc/library/sha.rst:47
msgid "An sha object has the same methods as md5 objects:"
msgstr ""

# daeb1d79761f4139a1d63da3142c1847
#: ../Doc/library/sha.rst:52
msgid ""
"Update the sha object with the string *arg*.  Repeated calls are equivalent "
"to a single call with the concatenation of all the arguments: ``m.update(a); "
"m.update(b)`` is equivalent to ``m.update(a+b)``."
msgstr ""

# 5ca0920602c54b3ba1bd611e8a68a2c1
#: ../Doc/library/sha.rst:59
msgid ""
"Return the digest of the strings passed to the :meth:`update` method so far. "
"This is a 20-byte string which may contain non-ASCII characters, including "
"null bytes."
msgstr ""

# 7c9dab82f2a74a6d97f894d384222309
#: ../Doc/library/sha.rst:66
msgid ""
"Like :meth:`digest` except the digest is returned as a string of length 40, "
"containing only hexadecimal digits.  This may  be used to exchange the value "
"safely in email or other non-binary environments."
msgstr ""

# 58f577e336704d38a591f35c03369671
#: ../Doc/library/sha.rst:73
msgid ""
"Return a copy (\"clone\") of the sha object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""

# 7e7c3e8694ba450e82782402dbc487d0
#: ../Doc/library/sha.rst:80
msgid ""
"The Secure Hash Algorithm is defined by NIST document FIPS PUB 180-2: "
"`Secure Hash Standard <http://csrc.nist.gov/publications/fips/fips180-2/"
"fips180-2withchangenotice.pdf>`_, published in August 2002."
msgstr ""

# 328b40628e4b445fb0857c75bb9547a9
#: ../Doc/library/sha.rst:86
msgid "Links from NIST to various information on secure hashing."
msgstr ""

#: ../Doc/library/shelve.rst:2
msgid ":mod:`shelve` --- Python object persistence"
msgstr ""

# 690dc980da464f7d8adcf2a35535ff09
#: ../Doc/library/shelve.rst:10
msgid "**Source code:** :source:`Lib/shelve.py`"
msgstr ""

#: ../Doc/library/shelve.rst:14
msgid ""
"A \"shelf\" is a persistent, dictionary-like object.  The difference with "
"\"dbm\" databases is that the values (not the keys!) in a shelf can be "
"essentially arbitrary Python objects --- anything that the :mod:`pickle` "
"module can handle. This includes most class instances, recursive data types, "
"and objects containing lots of shared  sub-objects.  The keys are ordinary "
"strings."
msgstr ""

# 696dda71ecf143cba0c8b9346250cdbc
#: ../Doc/library/shelve.rst:23
msgid ""
"Open a persistent dictionary.  The filename specified is the base filename "
"for the underlying database.  As a side-effect, an extension may be added to "
"the filename and more than one file may be created.  By default, the "
"underlying database file is opened for reading and writing.  The optional "
"*flag* parameter has the same interpretation as the *flag* parameter of :"
"func:`anydbm.open`."
msgstr ""

# 97ee80357e1a48a5ab2388edb8dccbe9
#: ../Doc/library/shelve.rst:29
msgid ""
"By default, version 0 pickles are used to serialize values.  The version of "
"the pickle protocol can be specified with the *protocol* parameter."
msgstr ""

#: ../Doc/library/shelve.rst:35
msgid ""
"Because of Python semantics, a shelf cannot know when a mutable persistent-"
"dictionary entry is modified.  By default modified objects are written "
"*only* when assigned to the shelf (see :ref:`shelve-example`).  If the "
"optional *writeback* parameter is set to *True*, all entries accessed are "
"also cached in memory, and written back on :meth:`~Shelf.sync` and :meth:"
"`~Shelf.close`; this can make it handier to mutate mutable entries in the "
"persistent dictionary, but, if many entries are accessed, it can consume "
"vast amounts of memory for the cache, and it can make the close operation "
"very slow since all accessed entries are written back (there is no way to "
"determine which accessed entries are mutable, nor which ones were actually "
"mutated)."
msgstr ""

# 5c66f6c5c6c443f594e76e40be39a460
#: ../Doc/library/shelve.rst:47
msgid ""
"Like file objects, shelve objects should be closed explicitly to ensure that "
"the persistent data is flushed to disk."
msgstr ""

# 5f665e4dee924e16bc2e586b0de13625
#: ../Doc/library/shelve.rst:50
msgid ""
"Since the :mod:`shelve` module stores objects using :mod:`pickle`, the same "
"security precautions apply.  Accordingly, you should avoid loading a shelf "
"from an untrusted source."
msgstr ""

#: ../Doc/library/shelve.rst:54
msgid ""
"Shelf objects support all methods supported by dictionaries.  This eases the "
"transition from dictionary based scripts to those requiring persistent "
"storage."
msgstr ""

#: ../Doc/library/shelve.rst:57
msgid "Two additional methods are supported:"
msgstr ""

#: ../Doc/library/shelve.rst:61
msgid ""
"Write back all entries in the cache if the shelf was opened with *writeback* "
"set to :const:`True`.  Also empty the cache and synchronize the persistent "
"dictionary on disk, if feasible.  This is called automatically when the "
"shelf is closed with :meth:`close`."
msgstr ""

#: ../Doc/library/shelve.rst:68
msgid ""
"Synchronize and close the persistent *dict* object.  Operations on a closed "
"shelf will fail with a :exc:`ValueError`."
msgstr ""

#: ../Doc/library/shelve.rst:74
msgid ""
"`Persistent dictionary recipe <http://code.activestate.com/recipes/576642/"
">`_ with widely supported storage formats and having the speed of native "
"dictionaries."
msgstr ""

#: ../Doc/library/shelve.rst:80
msgid "Restrictions"
msgstr ""

# a176ba5a8638462a976a28ebe3413c47
#: ../Doc/library/shelve.rst:87
msgid ""
"The choice of which database package will be used (such as :mod:`dbm`, :mod:"
"`gdbm` or :mod:`bsddb`) depends on which interface is available.  Therefore "
"it is not safe to open the database directly using :mod:`dbm`.  The database "
"is also (unfortunately) subject to the limitations of :mod:`dbm`, if it is "
"used --- this means that (the pickled representation of) the objects stored "
"in the database should be fairly small, and in rare cases key collisions may "
"cause the database to refuse updates."
msgstr ""

#: ../Doc/library/shelve.rst:95
msgid ""
"The :mod:`shelve` module does not support *concurrent* read/write access to "
"shelved objects.  (Multiple simultaneous read accesses are safe.)  When a "
"program has a shelf open for writing, no other program should have it open "
"for reading or writing.  Unix file locking can be used to solve this, but "
"this differs across Unix versions and requires knowledge about the database "
"implementation used."
msgstr ""

# 3ca15d2ea23644dcbebec56b15d91eb0
#: ../Doc/library/shelve.rst:105
msgid ""
"A subclass of :class:`UserDict.DictMixin` which stores pickled values in the "
"*dict* object."
msgstr ""

#: ../Doc/library/shelve.rst:108
msgid ""
"By default, version 0 pickles are used to serialize values.  The version of "
"the pickle protocol can be specified with the *protocol* parameter. See the :"
"mod:`pickle` documentation for a discussion of the pickle protocols."
msgstr ""

#: ../Doc/library/shelve.rst:115
msgid ""
"If the *writeback* parameter is ``True``, the object will hold a cache of "
"all entries accessed and write them back to the *dict* at sync and close "
"times. This allows natural operations on mutable entries, but can consume "
"much more memory and make sync and close take a long time."
msgstr ""

# 50bce3d5d2d6484d989ac23fd07bcf31
#: ../Doc/library/shelve.rst:123
msgid ""
"A subclass of :class:`Shelf` which exposes :meth:`first`, :meth:`!next`, :"
"meth:`previous`, :meth:`last` and :meth:`set_location` which are available "
"in the :mod:`bsddb` module but not in other database modules.  The *dict* "
"object passed to the constructor must support those methods.  This is "
"generally accomplished by calling one of :func:`bsddb.hashopen`, :func:"
"`bsddb.btopen` or :func:`bsddb.rnopen`.  The optional *protocol* and "
"*writeback* parameters have the same interpretation as for the :class:"
"`Shelf` class."
msgstr ""

# fc491a8f73024042b42fd57ded1a3ba6
#: ../Doc/library/shelve.rst:134
msgid ""
"A subclass of :class:`Shelf` which accepts a *filename* instead of a dict-"
"like object.  The underlying file will be opened using :func:`anydbm.open`.  "
"By default, the file will be created and opened for both read and write.  "
"The optional *flag* parameter has the same interpretation as for the :func:`."
"open` function.  The optional *protocol* and *writeback* parameters have the "
"same interpretation as for the :class:`Shelf` class."
msgstr ""

#: ../Doc/library/shelve.rst:147
msgid ""
"To summarize the interface (``key`` is a string, ``data`` is an arbitrary "
"object)::"
msgstr ""

# a41c187556a94f4093536458af07874c
#: ../Doc/library/shelve.rst:189
msgid ""
"Thin layer around the :mod:`bsddb` which provides an :func:`~dbhash.open` "
"function like the other database modules."
msgstr ""

#: ../Doc/library/shelve.rst:202
msgid "Object serialization used by :mod:`shelve`."
msgstr ""

# 334c32e44dff421891327df16cb467e4
#: ../Doc/library/shelve.rst:205
msgid "High-performance version of :mod:`pickle`."
msgstr ""

#: ../Doc/library/shlex.rst:2
msgid ":mod:`shlex` --- Simple lexical analysis"
msgstr ""

# 2890193306264054bba5d9a876d5997c
#: ../Doc/library/shlex.rst:14
msgid "**Source code:** :source:`Lib/shlex.py`"
msgstr ""

#: ../Doc/library/shlex.rst:19
msgid ""
"The :class:`shlex` class makes it easy to write lexical analyzers for simple "
"syntaxes resembling that of the Unix shell.  This will often be useful for "
"writing minilanguages, (for example, in run control files for Python "
"applications) or for parsing quoted strings."
msgstr ""

# 7565092c9469497f9102817770ab234c
#: ../Doc/library/shlex.rst:24
msgid "Prior to Python 2.7.3, this module did not support Unicode input."
msgstr ""

#: ../Doc/library/shlex.rst:26
msgid "The :mod:`shlex` module defines the following functions:"
msgstr ""

# 2b96affad5344622abe27b3cbb3681d4
#: ../Doc/library/shlex.rst:31
msgid ""
"Split the string *s* using shell-like syntax. If *comments* is :const:"
"`False` (the default), the parsing of comments in the given string will be "
"disabled (setting the :attr:`commenters` attribute of the :class:`shlex` "
"instance to the empty string).  This function operates in POSIX mode by "
"default, but uses non-POSIX mode if the *posix* argument is false."
msgstr ""

#: ../Doc/library/shlex.rst:44
msgid ""
"Since the :func:`split` function instantiates a :class:`shlex` instance, "
"passing ``None`` for *s* will read the string to split from standard input."
msgstr ""

#: ../Doc/library/shlex.rst:47
msgid "The :mod:`shlex` module defines the following class:"
msgstr ""

# da488d9acd394dda8190925829e643ca
#: ../Doc/library/shlex.rst:52
msgid ""
"A :class:`shlex` instance or subclass instance is a lexical analyzer object. "
"The initialization argument, if present, specifies where to read characters "
"from. It must be a file-/stream-like object with :meth:`read` and :meth:"
"`readline` methods, or a string (strings are accepted since Python 2.3). If "
"no argument is given, input will be taken from ``sys.stdin``.  The second "
"optional argument is a filename string, which sets the initial value of the :"
"attr:`infile` attribute.  If the *instream* argument is omitted or equal to "
"``sys.stdin``, this second argument defaults to \"stdin\".  The *posix* "
"argument was introduced in Python 2.3, and defines the operational mode.  "
"When *posix* is not true (default), the :class:`shlex` instance will operate "
"in compatibility mode.  When operating in POSIX mode, :class:`shlex` will "
"try to be as close as possible to the POSIX shell parsing rules."
msgstr ""

#: ../Doc/library/shlex.rst:69
msgid ""
"Parser for configuration files similar to the Windows :file:`.ini` files."
msgstr ""

#: ../Doc/library/shlex.rst:75
msgid "shlex Objects"
msgstr ""

#: ../Doc/library/shlex.rst:77
msgid "A :class:`shlex` instance has the following methods:"
msgstr ""

#: ../Doc/library/shlex.rst:82
msgid ""
"Return a token.  If tokens have been stacked using :meth:`push_token`, pop a "
"token off the stack.  Otherwise, read one from the input stream.  If reading "
"encounters an immediate end-of-file, :attr:`self.eof` is returned (the empty "
"string (``''``) in non-POSIX mode, and ``None`` in POSIX mode)."
msgstr ""

#: ../Doc/library/shlex.rst:90
msgid "Push the argument onto the token stack."
msgstr ""

#: ../Doc/library/shlex.rst:95
msgid ""
"Read a raw token.  Ignore the pushback stack, and do not interpret source "
"requests.  (This is not ordinarily a useful entry point, and is documented "
"here only for the sake of completeness.)"
msgstr ""

#: ../Doc/library/shlex.rst:102
msgid ""
"When :class:`shlex` detects a source request (see :attr:`source` below) this "
"method is given the following token as argument, and expected to return a "
"tuple consisting of a filename and an open file-like object."
msgstr ""

#: ../Doc/library/shlex.rst:106
msgid ""
"Normally, this method first strips any quotes off the argument.  If the "
"result is an absolute pathname, or there was no previous source request in "
"effect, or the previous source was a stream (such as ``sys.stdin``), the "
"result is left alone.  Otherwise, if the result is a relative pathname, the "
"directory part of the name of the file immediately before it on the source "
"inclusion stack is prepended (this behavior is like the way the C "
"preprocessor handles ``#include \"file.h\"``)."
msgstr ""

#: ../Doc/library/shlex.rst:114
msgid ""
"The result of the manipulations is treated as a filename, and returned as "
"the first component of the tuple, with :func:`open` called on it to yield "
"the second component. (Note: this is the reverse of the order of arguments "
"in instance initialization!)"
msgstr ""

#: ../Doc/library/shlex.rst:119
msgid ""
"This hook is exposed so that you can use it to implement directory search "
"paths, addition of file extensions, and other namespace hacks. There is no "
"corresponding 'close' hook, but a shlex instance will call the :meth:`close` "
"method of the sourced input stream when it returns EOF."
msgstr ""

#: ../Doc/library/shlex.rst:124
msgid ""
"For more explicit control of source stacking, use the :meth:`push_source` "
"and :meth:`pop_source` methods."
msgstr ""

#: ../Doc/library/shlex.rst:130
msgid ""
"Push an input source stream onto the input stack.  If the filename argument "
"is specified it will later be available for use in error messages.  This is "
"the same method used internally by the :meth:`sourcehook` method."
msgstr ""

#: ../Doc/library/shlex.rst:139
msgid ""
"Pop the last-pushed input source from the input stack. This is the same "
"method used internally when the lexer reaches EOF on a stacked input stream."
msgstr ""

#: ../Doc/library/shlex.rst:147
msgid ""
"This method generates an error message leader in the format of a Unix C "
"compiler error label; the format is ``'\"%s\", line %d: '``, where the ``"
"%s`` is replaced with the name of the current source file and the ``%d`` "
"with the current input line number (the optional arguments can be used to "
"override these)."
msgstr ""

#: ../Doc/library/shlex.rst:152
msgid ""
"This convenience is provided to encourage :mod:`shlex` users to generate "
"error messages in the standard, parseable format understood by Emacs and "
"other Unix tools."
msgstr ""

#: ../Doc/library/shlex.rst:156
msgid ""
"Instances of :class:`shlex` subclasses have some public instance variables "
"which either control lexical analysis or can be used for debugging:"
msgstr ""

#: ../Doc/library/shlex.rst:162
msgid ""
"The string of characters that are recognized as comment beginners. All "
"characters from the comment beginner to end of line are ignored. Includes "
"just ``'#'`` by default."
msgstr ""

#: ../Doc/library/shlex.rst:169
msgid ""
"The string of characters that will accumulate into multi-character tokens.  "
"By default, includes all ASCII alphanumerics and underscore."
msgstr ""

#: ../Doc/library/shlex.rst:175
msgid ""
"Characters that will be considered whitespace and skipped.  Whitespace "
"bounds tokens.  By default, includes space, tab, linefeed and carriage-"
"return."
msgstr ""

#: ../Doc/library/shlex.rst:181
msgid ""
"Characters that will be considered as escape. This will be only used in "
"POSIX mode, and includes just ``'\\'`` by default."
msgstr ""

#: ../Doc/library/shlex.rst:189
msgid ""
"Characters that will be considered string quotes.  The token accumulates "
"until the same quote is encountered again (thus, different quote types "
"protect each other as in the shell.)  By default, includes ASCII single and "
"double quotes."
msgstr ""

#: ../Doc/library/shlex.rst:196
msgid ""
"Characters in :attr:`quotes` that will interpret escape characters defined "
"in :attr:`escape`.  This is only used in POSIX mode, and includes just "
"``'\"'`` by default."
msgstr ""

#: ../Doc/library/shlex.rst:205
msgid ""
"If ``True``, tokens will only be split in whitespaces. This is useful, for "
"example, for parsing command lines with :class:`shlex`, getting tokens in a "
"similar way to shell arguments."
msgstr ""

#: ../Doc/library/shlex.rst:214
msgid ""
"The name of the current input file, as initially set at class instantiation "
"time or stacked by later source requests.  It may be useful to examine this "
"when constructing error messages."
msgstr ""

#: ../Doc/library/shlex.rst:221
msgid ""
"The input stream from which this :class:`shlex` instance is reading "
"characters."
msgstr ""

# e819fabea6aa4135b9ff2ec79b182d2e
#: ../Doc/library/shlex.rst:226
msgid ""
"This attribute is ``None`` by default.  If you assign a string to it, that "
"string will be recognized as a lexical-level inclusion request similar to "
"the ``source`` keyword in various shells.  That is, the immediately "
"following token will opened as a filename and input taken from that stream "
"until EOF, at which point the :meth:`close` method of that stream will be "
"called and the input source will again become the original input stream. "
"Source requests may be stacked any number of levels deep."
msgstr ""

# 52197bf3ea244fca82279759789af5c7
#: ../Doc/library/shlex.rst:237
msgid ""
"If this attribute is numeric and ``1`` or more, a :class:`shlex` instance "
"will print verbose progress output on its behavior.  If you need to use "
"this, you can read the module source code to learn the details."
msgstr ""

#: ../Doc/library/shlex.rst:244
msgid "Source line number (count of newlines seen so far plus one)."
msgstr ""

#: ../Doc/library/shlex.rst:249
msgid ""
"The token buffer.  It may be useful to examine this when catching exceptions."
msgstr ""

#: ../Doc/library/shlex.rst:254
msgid ""
"Token used to determine end of file. This will be set to the empty string "
"(``''``), in non-POSIX mode, and to ``None`` in POSIX mode."
msgstr ""

#: ../Doc/library/shlex.rst:263
msgid "Parsing Rules"
msgstr ""

#: ../Doc/library/shlex.rst:265
msgid ""
"When operating in non-POSIX mode, :class:`shlex` will try to obey to the "
"following rules."
msgstr ""

#: ../Doc/library/shlex.rst:268
msgid ""
"Quote characters are not recognized within words (``Do\"Not\"Separate`` is "
"parsed as the single word ``Do\"Not\"Separate``);"
msgstr ""

#: ../Doc/library/shlex.rst:271
msgid "Escape characters are not recognized;"
msgstr ""

#: ../Doc/library/shlex.rst:273
msgid ""
"Enclosing characters in quotes preserve the literal value of all characters "
"within the quotes;"
msgstr ""

#: ../Doc/library/shlex.rst:276
msgid ""
"Closing quotes separate words (``\"Do\"Separate`` is parsed as ``\"Do\"`` "
"and ``Separate``);"
msgstr ""

#: ../Doc/library/shlex.rst:279
msgid ""
"If :attr:`whitespace_split` is ``False``, any character not declared to be a "
"word character, whitespace, or a quote will be returned as a single-"
"character token. If it is ``True``, :class:`shlex` will only split words in "
"whitespaces;"
msgstr ""

#: ../Doc/library/shlex.rst:283
msgid "EOF is signaled with an empty string (``''``);"
msgstr ""

#: ../Doc/library/shlex.rst:285
msgid "It's not possible to parse empty strings, even if quoted."
msgstr ""

#: ../Doc/library/shlex.rst:287
msgid ""
"When operating in POSIX mode, :class:`shlex` will try to obey to the "
"following parsing rules."
msgstr ""

#: ../Doc/library/shlex.rst:290
msgid ""
"Quotes are stripped out, and do not separate words (``\"Do\"Not\"Separate"
"\"`` is parsed as the single word ``DoNotSeparate``);"
msgstr ""

#: ../Doc/library/shlex.rst:293
msgid ""
"Non-quoted escape characters (e.g. ``'\\'``) preserve the literal value of "
"the next character that follows;"
msgstr ""

#: ../Doc/library/shlex.rst:296
msgid ""
"Enclosing characters in quotes which are not part of :attr:`escapedquotes` "
"(e.g. ``\"'\"``) preserve the literal value of all characters within the "
"quotes;"
msgstr ""

#: ../Doc/library/shlex.rst:299
msgid ""
"Enclosing characters in quotes which are part of :attr:`escapedquotes` (e.g. "
"``'\"'``) preserves the literal value of all characters within the quotes, "
"with the exception of the characters mentioned in :attr:`escape`. The escape "
"characters retain its special meaning only when followed by the quote in "
"use, or the escape character itself. Otherwise the escape character will be "
"considered a normal character."
msgstr ""

#: ../Doc/library/shlex.rst:306
msgid "EOF is signaled with a :const:`None` value;"
msgstr ""

#: ../Doc/library/shlex.rst:308
msgid "Quoted empty strings (``''``) are allowed;"
msgstr ""

#: ../Doc/library/shutil.rst:2
msgid ":mod:`shutil` --- High-level file operations"
msgstr ""

# 13c790b2417c4dc0928d7aa1121a7400
#: ../Doc/library/shutil.rst:13
msgid "**Source code:** :source:`Lib/shutil.py`"
msgstr ""

#: ../Doc/library/shutil.rst:17
msgid ""
"The :mod:`shutil` module offers a number of high-level operations on files "
"and collections of files.  In particular, functions are provided  which "
"support file copying and removal. For operations on individual files, see "
"also the :mod:`os` module."
msgstr ""

# c7f52a6e96f440cdb5221a88f99a05d7
#: ../Doc/library/shutil.rst:24
msgid ""
"Even the higher-level file copying functions (:func:`shutil.copy`, :func:"
"`shutil.copy2`) can't copy all file metadata."
msgstr ""

#: ../Doc/library/shutil.rst:27
msgid ""
"On POSIX platforms, this means that file owner and group are lost as well as "
"ACLs.  On Mac OS, the resource fork and other metadata are not used. This "
"means that resources will be lost and file type and creator codes will not "
"be correct. On Windows, file owners, ACLs and alternate data streams are not "
"copied."
msgstr ""

#: ../Doc/library/shutil.rst:37
msgid "Directory and files operations"
msgstr ""

#: ../Doc/library/shutil.rst:41
msgid ""
"Copy the contents of the file-like object *fsrc* to the file-like object "
"*fdst*. The integer *length*, if given, is the buffer size. In particular, a "
"negative *length* value means to copy the data without looping over the "
"source data in chunks; by default the data is read in chunks to avoid "
"uncontrolled memory consumption. Note that if the current file position of "
"the *fsrc* object is not 0, only the contents from the current file position "
"to the end of the file will be copied."
msgstr ""

# 7e5061bc4f654db09a76b93f1e40aa00
#: ../Doc/library/shutil.rst:52
msgid ""
"Copy the contents (no metadata) of the file named *src* to a file named "
"*dst*.  *dst* must be the complete target file name; look at :func:`shutil."
"copy` for a copy that accepts a target directory path.  If *src* and *dst* "
"are the same files, :exc:`Error` is raised. The destination location must be "
"writable; otherwise,  an :exc:`IOError` exception will be raised. If *dst* "
"already exists, it will be replaced.   Special files such as character or "
"block devices and pipes cannot be copied with this function.  *src* and "
"*dst* are path names given as strings."
msgstr ""

#: ../Doc/library/shutil.rst:64
msgid ""
"Copy the permission bits from *src* to *dst*.  The file contents, owner, and "
"group are unaffected.  *src* and *dst* are path names given as strings."
msgstr ""

#: ../Doc/library/shutil.rst:70
msgid ""
"Copy the permission bits, last access time, last modification time, and "
"flags from *src* to *dst*.  The file contents, owner, and group are "
"unaffected.  *src* and *dst* are path names given as strings."
msgstr ""

#: ../Doc/library/shutil.rst:77
msgid ""
"Copy the file *src* to the file or directory *dst*.  If *dst* is a "
"directory, a file with the same basename as *src*  is created (or "
"overwritten) in the directory specified.  Permission bits are copied.  *src* "
"and *dst* are path names given as strings."
msgstr ""

# 5430001c41c24d25adeaf9e5c905c0a3
#: ../Doc/library/shutil.rst:85
msgid ""
"Similar to :func:`shutil.copy`, but metadata is copied as well -- in fact, "
"this is just :func:`shutil.copy` followed by :func:`copystat`.  This is "
"similar to the Unix command :program:`cp -p`."
msgstr ""

#: ../Doc/library/shutil.rst:92
msgid ""
"This factory function creates a function that can be used as a callable for :"
"func:`copytree`\\'s *ignore* argument, ignoring files and directories that "
"match one of the glob-style *patterns* provided.  See the example below."
msgstr ""

# 0a46ba672efc43c6b0d5de35ee3b6a57
#: ../Doc/library/shutil.rst:101
msgid ""
"Recursively copy an entire directory tree rooted at *src*.  The destination "
"directory, named by *dst*, must not already exist; it will be created as "
"well as missing parent directories.  Permissions and times of directories "
"are copied with :func:`copystat`, individual files are copied using :func:"
"`shutil.copy2`."
msgstr ""

# 6dd5a52e45bf4ff782f31881589cf4bf
#: ../Doc/library/shutil.rst:107
msgid ""
"If *symlinks* is true, symbolic links in the source tree are represented as "
"symbolic links in the new tree, but the metadata of the original links is "
"NOT copied; if false or omitted, the contents and metadata of the linked "
"files are copied to the new tree."
msgstr ""

#: ../Doc/library/shutil.rst:112
msgid ""
"If *ignore* is given, it must be a callable that will receive as its "
"arguments the directory being visited by :func:`copytree`, and a list of its "
"contents, as returned by :func:`os.listdir`.  Since :func:`copytree` is "
"called recursively, the *ignore* callable will be called once for each "
"directory that is copied.  The callable must return a sequence of directory "
"and file names relative to the current directory (i.e. a subset of the items "
"in its second argument); these names will then be ignored in the copy "
"process.  :func:`ignore_patterns` can be used to create such a callable that "
"ignores names based on glob-style patterns."
msgstr ""

#: ../Doc/library/shutil.rst:122
msgid ""
"If exception(s) occur, an :exc:`Error` is raised with a list of reasons."
msgstr ""

# 66a8fabe2fbe4fa3a4af38369f4e61c1
#: ../Doc/library/shutil.rst:124
msgid ""
"The source code for this should be considered an example rather than the "
"ultimate tool."
msgstr ""

#: ../Doc/library/shutil.rst:143
msgid ""
"Delete an entire directory tree; *path* must point to a directory (but not a "
"symbolic link to a directory).  If *ignore_errors* is true, errors resulting "
"from failed removals will be ignored; if false or omitted, such errors are "
"handled by calling a handler specified by *onerror* or, if that is omitted, "
"they raise an exception."
msgstr ""

#: ../Doc/library/shutil.rst:149
msgid ""
"If *onerror* is provided, it must be a callable that accepts three "
"parameters: *function*, *path*, and *excinfo*. The first parameter, "
"*function*, is the function which raised the exception; it will be :func:`os."
"path.islink`, :func:`os.listdir`, :func:`os.remove` or :func:`os.rmdir`.  "
"The second parameter, *path*, will be the path name passed to *function*.  "
"The third parameter, *excinfo*, will be the exception information return by :"
"func:`sys.exc_info`.  Exceptions raised by *onerror* will not be caught."
msgstr ""

# 11fdc96e9fc54cf782433e854d83e043
#: ../Doc/library/shutil.rst:165
msgid ""
"Recursively move a file or directory (*src*) to another location (*dst*)."
msgstr ""

# 9159a63127374d158fe05eaa26afcf9c
#: ../Doc/library/shutil.rst:167
msgid ""
"If the destination is a directory or a symlink to a directory, then *src* is "
"moved inside that directory."
msgstr ""

# b96ff72f7eb84d6bb766bb482cd73126
#: ../Doc/library/shutil.rst:170
msgid ""
"The destination directory must not already exist.  If the destination "
"already exists but is not a directory, it may be overwritten depending on :"
"func:`os.rename` semantics."
msgstr ""

# ff4961b3f7244a32aadbaf8351e88b58
#: ../Doc/library/shutil.rst:174
msgid ""
"If the destination is on the current filesystem, then :func:`os.rename` is "
"used.  Otherwise, *src* is copied (using :func:`shutil.copy2`) to *dst* and "
"then removed."
msgstr ""

# e56633a07f9043698d5bf4f450271499
#: ../Doc/library/shutil.rst:183
msgid ""
"This exception collects exceptions that are raised during a multi-file "
"operation. For :func:`copytree`, the exception argument is a list of 3-"
"tuples (*srcname*, *dstname*, *exception*)."
msgstr ""

#: ../Doc/library/shutil.rst:193
msgid "copytree example"
msgstr ""

#: ../Doc/library/shutil.rst:195
msgid ""
"This example is the implementation of the :func:`copytree` function, "
"described above, with the docstring omitted.  It demonstrates many of the "
"other functions provided by this module. ::"
msgstr ""

#: ../Doc/library/shutil.rst:238
msgid "Another example that uses the :func:`ignore_patterns` helper::"
msgstr ""

#: ../Doc/library/shutil.rst:244
msgid ""
"This will copy everything except ``.pyc`` files and files or directories "
"whose name starts with ``tmp``."
msgstr ""

#: ../Doc/library/shutil.rst:247
msgid "Another example that uses the *ignore* argument to add a logging call::"
msgstr ""

# 172e584b1c1d43f0a9f8b4c2bb74f257
#: ../Doc/library/shutil.rst:262
msgid "Archiving operations"
msgstr ""

# 3edcdecee81a4134a9ef0ac80c17ff70
#: ../Doc/library/shutil.rst:264
msgid ""
"High-level utilities to create and read compressed and archived files are "
"also provided.  They rely on the :mod:`zipfile` and :mod:`tarfile` modules."
msgstr ""

# 3fc066137cb64616bc95cf12ba939e60
#: ../Doc/library/shutil.rst:269
msgid "Create an archive file (eg. zip or tar) and returns its name."
msgstr ""

# 30a158cbba994ecb8a3441388b329041
#: ../Doc/library/shutil.rst:271
msgid ""
"*base_name* is the name of the file to create, including the path, minus any "
"format-specific extension. *format* is the archive format: one of \"zip\", "
"\"tar\", \"bztar\" or \"gztar\"."
msgstr ""

# a72bd14cd7ba41ad964b3817f2fd9228
#: ../Doc/library/shutil.rst:275
msgid ""
"*root_dir* is a directory that will be the root directory of the archive; "
"ie. we typically chdir into *root_dir* before creating the archive."
msgstr ""

# 551d47809d4d4dcc86dc44dae07a4f15
#: ../Doc/library/shutil.rst:279
msgid ""
"*base_dir* is the directory where we start archiving from; ie. *base_dir* "
"will be the common prefix of all files and directories in the archive."
msgstr ""

#: ../Doc/library/shutil.rst:283
msgid "*root_dir* and *base_dir* both default to the current directory."
msgstr ""

#: ../Doc/library/shutil.rst:285
msgid ""
"*owner* and *group* are used when creating a tar archive. By default, uses "
"the current owner and group."
msgstr ""

# a51cff5d3a494b209a322bff8104b8e0
#: ../Doc/library/shutil.rst:288
msgid ""
"*logger* must be an object compatible with :pep:`282`, usually an instance "
"of :class:`logging.Logger`."
msgstr ""

# a1a751254a16437d9a385923a517d67c
#: ../Doc/library/shutil.rst:296
msgid ""
"Return a list of supported formats for archiving. Each element of the "
"returned sequence is a tuple ``(name, description)``"
msgstr ""

#: ../Doc/library/shutil.rst:299
msgid "By default :mod:`shutil` provides these formats:"
msgstr ""

#: ../Doc/library/shutil.rst:301
msgid "*gztar*: gzip'ed tar-file"
msgstr ""

# 1099adcc19bb4171954321d6d8797b3e
#: ../Doc/library/shutil.rst:302
msgid "*bztar*: bzip2'ed tar-file"
msgstr ""

#: ../Doc/library/shutil.rst:303
msgid "*tar*: uncompressed tar file"
msgstr ""

#: ../Doc/library/shutil.rst:304
msgid "*zip*: ZIP file"
msgstr ""

#: ../Doc/library/shutil.rst:306
msgid ""
"You can register new formats or provide your own archiver for any existing "
"formats, by using :func:`register_archive_format`."
msgstr ""

# a5ad481900854785aa3b0cd767b9b315
#: ../Doc/library/shutil.rst:314
msgid ""
"Register an archiver for the format *name*. *function* is a callable that "
"will be used to invoke the archiver."
msgstr ""

#: ../Doc/library/shutil.rst:317
msgid ""
"If given, *extra_args* is a sequence of ``(name, value)`` that will be used "
"as extra keywords arguments when the archiver callable is used."
msgstr ""

#: ../Doc/library/shutil.rst:320
msgid ""
"*description* is used by :func:`get_archive_formats` which returns the list "
"of archivers. Defaults to an empty list."
msgstr ""

#: ../Doc/library/shutil.rst:328
msgid "Remove the archive format *name* from the list of supported formats."
msgstr ""

#: ../Doc/library/shutil.rst:336
msgid "Archiving example"
msgstr ""

#: ../Doc/library/shutil.rst:338
msgid ""
"In this example, we create a gzip'ed tar-file archive containing all files "
"found in the :file:`.ssh` directory of the user::"
msgstr ""

#: ../Doc/library/shutil.rst:348
msgid "The resulting archive contains::"
msgstr ""

#: ../Doc/library/signal.rst:3
msgid ":mod:`signal` --- Set handlers for asynchronous events"
msgstr ""

#: ../Doc/library/signal.rst:9
msgid ""
"This module provides mechanisms to use signal handlers in Python. Some "
"general rules for working with signals and their handlers:"
msgstr ""

#: ../Doc/library/signal.rst:12
msgid ""
"A handler for a particular signal, once set, remains installed until it is "
"explicitly reset (Python emulates the BSD style interface regardless of the "
"underlying implementation), with the exception of the handler for :const:"
"`SIGCHLD`, which follows the underlying implementation."
msgstr ""

#: ../Doc/library/signal.rst:17
msgid ""
"There is no way to \"block\" signals temporarily from critical sections "
"(since this is not supported by all Unix flavors)."
msgstr ""

#: ../Doc/library/signal.rst:20
msgid ""
"Although Python signal handlers are called asynchronously as far as the "
"Python user is concerned, they can only occur between the \"atomic\" "
"instructions of the Python interpreter.  This means that signals arriving "
"during long calculations implemented purely in C (such as regular expression "
"matches on large bodies of text) may be delayed for an arbitrary amount of "
"time."
msgstr ""

#: ../Doc/library/signal.rst:26
msgid ""
"When a signal arrives during an I/O operation, it is possible that the I/O "
"operation raises an exception after the signal handler returns. This is "
"dependent on the underlying Unix system's semantics regarding interrupted "
"system calls."
msgstr ""

#: ../Doc/library/signal.rst:31
msgid ""
"Because the C signal handler always returns, it makes little sense to catch "
"synchronous errors like :const:`SIGFPE` or :const:`SIGSEGV`."
msgstr ""

#: ../Doc/library/signal.rst:34
msgid ""
"Python installs a small number of signal handlers by default: :const:"
"`SIGPIPE` is ignored (so write errors on pipes and sockets can be reported "
"as ordinary Python exceptions) and :const:`SIGINT` is translated into a :exc:"
"`KeyboardInterrupt` exception.  All of these can be overridden."
msgstr ""

#: ../Doc/library/signal.rst:39
msgid ""
"Some care must be taken if both signals and threads are used in the same "
"program.  The fundamental thing to remember in using signals and threads "
"simultaneously is: always perform :func:`signal` operations in the main "
"thread of execution.  Any thread can perform an :func:`alarm`, :func:"
"`getsignal`, :func:`pause`, :func:`setitimer` or :func:`getitimer`; only the "
"main thread can set a new signal handler, and the main thread will be the "
"only one to receive signals (this is enforced by the Python :mod:`signal` "
"module, even if the underlying thread implementation supports sending "
"signals to individual threads).  This means that signals can't be used as a "
"means of inter-thread communication.  Use locks instead."
msgstr ""

#: ../Doc/library/signal.rst:50
msgid "The variables defined in the :mod:`signal` module are:"
msgstr ""

#: ../Doc/library/signal.rst:55
msgid ""
"This is one of two standard signal handling options; it will simply perform "
"the default function for the signal.  For example, on most systems the "
"default action for :const:`SIGQUIT` is to dump core and exit, while the "
"default action for :const:`SIGCHLD` is to simply ignore it."
msgstr ""

#: ../Doc/library/signal.rst:63
msgid ""
"This is another standard signal handler, which will simply ignore the given "
"signal."
msgstr ""

# 6dfd00f1a667451ba14424c5f26452ac
#: ../Doc/library/signal.rst:69
msgid ""
"All the signal numbers are defined symbolically.  For example, the hangup "
"signal is defined as :const:`signal.SIGHUP`; the variable names are "
"identical to the names used in C programs, as found in ``<signal.h>``. The "
"Unix man page for ':c:func:`signal`' lists the existing signals (on some "
"systems this is :manpage:`signal(2)`, on others the list is in :manpage:"
"`signal(7)`). Note that not all systems define the same set of signal names; "
"only those names defined by the system are defined by this module."
msgstr ""

# 41959efba489473cafd4d34767fad576
#: ../Doc/library/signal.rst:80
msgid ""
"The signal corresponding to the CTRL+C keystroke event. This signal can only "
"be used with :func:`os.kill`."
msgstr ""

# 864d2889be834089b0981b169cbc5c7f
#: ../Doc/library/signal.rst:90
msgid ""
"The signal corresponding to the CTRL+BREAK keystroke event. This signal can "
"only be used with :func:`os.kill`."
msgstr ""

#: ../Doc/library/signal.rst:100
msgid "One more than the number of the highest signal number."
msgstr ""

#: ../Doc/library/signal.rst:105
msgid ""
"Decrements interval timer in real time, and delivers :const:`SIGALRM` upon "
"expiration."
msgstr ""

#: ../Doc/library/signal.rst:110
msgid ""
"Decrements interval timer only when the process is executing, and delivers "
"SIGVTALRM upon expiration."
msgstr ""

#: ../Doc/library/signal.rst:116
msgid ""
"Decrements interval timer both when the process executes and when the system "
"is executing on behalf of the process. Coupled with ITIMER_VIRTUAL, this "
"timer is usually used to profile the time spent by the application in user "
"and kernel space. SIGPROF is delivered upon expiration."
msgstr ""

#: ../Doc/library/signal.rst:122
msgid "The :mod:`signal` module defines one exception:"
msgstr ""

#: ../Doc/library/signal.rst:126
msgid ""
"Raised to signal an error from the underlying :func:`setitimer` or :func:"
"`getitimer` implementation. Expect this error if an invalid interval timer "
"or a negative time is passed to :func:`setitimer`. This error is a subtype "
"of :exc:`IOError`."
msgstr ""

#: ../Doc/library/signal.rst:132
msgid "The :mod:`signal` module defines the following functions:"
msgstr ""

#: ../Doc/library/signal.rst:137
msgid ""
"If *time* is non-zero, this function requests that a :const:`SIGALRM` signal "
"be sent to the process in *time* seconds. Any previously scheduled alarm is "
"canceled (only one alarm can be scheduled at any time).  The returned value "
"is then the number of seconds before any previously set alarm was to have "
"been delivered. If *time* is zero, no alarm is scheduled, and any scheduled "
"alarm is canceled.  If the return value is zero, no alarm is currently "
"scheduled.  (See the Unix man page :manpage:`alarm(2)`.) Availability: Unix."
msgstr ""

#: ../Doc/library/signal.rst:148
msgid ""
"Return the current signal handler for the signal *signalnum*. The returned "
"value may be a callable Python object, or one of the special values :const:"
"`signal.SIG_IGN`, :const:`signal.SIG_DFL` or :const:`None`.  Here, :const:"
"`signal.SIG_IGN` means that the signal was previously ignored, :const:"
"`signal.SIG_DFL` means that the default way of handling the signal was "
"previously in use, and ``None`` means that the previous signal handler was "
"not installed from Python."
msgstr ""

#: ../Doc/library/signal.rst:159
msgid ""
"Cause the process to sleep until a signal is received; the appropriate "
"handler will then be called.  Returns nothing.  Not on Windows. (See the "
"Unix man page :manpage:`signal(2)`.)"
msgstr ""

#: ../Doc/library/signal.rst:166
msgid ""
"Sets given interval timer (one of :const:`signal.ITIMER_REAL`, :const:"
"`signal.ITIMER_VIRTUAL` or :const:`signal.ITIMER_PROF`) specified by *which* "
"to fire after *seconds* (float is accepted, different from :func:`alarm`) "
"and after that every *interval* seconds. The interval timer specified by "
"*which* can be cleared by setting seconds to zero."
msgstr ""

#: ../Doc/library/signal.rst:172
msgid ""
"When an interval timer fires, a signal is sent to the process. The signal "
"sent is dependent on the timer being used; :const:`signal.ITIMER_REAL` will "
"deliver :const:`SIGALRM`, :const:`signal.ITIMER_VIRTUAL` sends :const:"
"`SIGVTALRM`, and :const:`signal.ITIMER_PROF` will deliver :const:`SIGPROF`."
msgstr ""

#: ../Doc/library/signal.rst:178
msgid "The old values are returned as a tuple: (delay, interval)."
msgstr ""

#: ../Doc/library/signal.rst:180
msgid ""
"Attempting to pass an invalid interval timer will cause an :exc:"
"`ItimerError`.  Availability: Unix."
msgstr ""

#: ../Doc/library/signal.rst:188
msgid ""
"Returns current value of a given interval timer specified by *which*. "
"Availability: Unix."
msgstr ""

#: ../Doc/library/signal.rst:196
msgid ""
"Set the wakeup fd to *fd*.  When a signal is received, a ``'\\0'`` byte is "
"written to the fd.  This can be used by a library to wakeup a poll or select "
"call, allowing the signal to be fully processed."
msgstr ""

#: ../Doc/library/signal.rst:200
msgid ""
"The old wakeup fd is returned.  *fd* must be non-blocking.  It is up to the "
"library to remove any bytes before calling poll or select again."
msgstr ""

#: ../Doc/library/signal.rst:203 ../Doc/library/signal.rst:232
msgid ""
"When threads are enabled, this function can only be called from the main "
"thread; attempting to call it from other threads will cause a :exc:"
"`ValueError` exception to be raised."
msgstr ""

#: ../Doc/library/signal.rst:212
msgid ""
"Change system call restart behaviour: if *flag* is :const:`False`, system "
"calls will be restarted when interrupted by signal *signalnum*, otherwise "
"system calls will be interrupted.  Returns nothing.  Availability: Unix (see "
"the man page :manpage:`siginterrupt(3)` for further information)."
msgstr ""

# 3c5f604ca5a64d7da848818b2a619db5
#: ../Doc/library/signal.rst:217
msgid ""
"Note that installing a signal handler with :func:`signal` will reset the "
"restart behaviour to interruptible by implicitly calling :c:func:"
"`siginterrupt` with a true *flag* value for the given signal."
msgstr ""

#: ../Doc/library/signal.rst:226
msgid ""
"Set the handler for signal *signalnum* to the function *handler*.  *handler* "
"can be a callable Python object taking two arguments (see below), or one of "
"the special values :const:`signal.SIG_IGN` or :const:`signal.SIG_DFL`.  The "
"previous signal handler will be returned (see the description of :func:"
"`getsignal` above).  (See the Unix man page :manpage:`signal(2)`.)"
msgstr ""

#: ../Doc/library/signal.rst:236
msgid ""
"The *handler* is called with two arguments: the signal number and the "
"current stack frame (``None`` or a frame object; for a description of frame "
"objects, see the :ref:`description in the type hierarchy <frame-objects>` or "
"see the attribute descriptions in the :mod:`inspect` module)."
msgstr ""

# 944845e42f904b2d987c1e8c6cd1b130
#: ../Doc/library/signal.rst:241
msgid ""
"On Windows, :func:`signal` can only be called with :const:`SIGABRT`, :const:"
"`SIGFPE`, :const:`SIGILL`, :const:`SIGINT`, :const:`SIGSEGV`, or :const:"
"`SIGTERM`. A :exc:`ValueError` will be raised in any other case."
msgstr ""

#: ../Doc/library/signal.rst:251
msgid ""
"Here is a minimal example program. It uses the :func:`alarm` function to "
"limit the time spent waiting to open a file; this is useful if the file is "
"for a serial device that may not be turned on, which would normally cause "
"the :func:`os.open` to hang indefinitely.  The solution is to set a 5-second "
"alarm before opening the file; if the operation takes too long, the alarm "
"signal will be sent, and the handler raises an exception. ::"
msgstr ""

# cd4fcbd566f84f02b9009f1f541731ac
#: ../Doc/library/simplehttpserver.rst:3
msgid ":mod:`SimpleHTTPServer` --- Simple HTTP request handler"
msgstr ""

# f20bc425bbe444e4b8eb2cc4c74581e4
#: ../Doc/library/simplehttpserver.rst:10
msgid ""
"The :mod:`SimpleHTTPServer` module has been merged into :mod:`http.server` "
"in Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# 5846c73227514c9fba1f01def52034c1
#: ../Doc/library/simplehttpserver.rst:15
msgid ""
"The :mod:`SimpleHTTPServer` module defines a single class, :class:"
"`SimpleHTTPRequestHandler`, which is interface-compatible with :class:"
"`BaseHTTPServer.BaseHTTPRequestHandler`."
msgstr ""

# a3953feee2164c3ba66614274dfae92c
#: ../Doc/library/simplehttpserver.rst:19
msgid "The :mod:`SimpleHTTPServer` module defines the following class:"
msgstr ""

#: ../Doc/library/simplehttpserver.rst:24
msgid ""
"This class serves files from the current directory and below, directly "
"mapping the directory structure to HTTP requests."
msgstr ""

# 91acbb853318485f94c30db3598396c7
#: ../Doc/library/simplehttpserver.rst:27
msgid ""
"A lot of the work, such as parsing the request, is done by the base class :"
"class:`BaseHTTPServer.BaseHTTPRequestHandler`.  This class implements the :"
"func:`do_GET` and :func:`do_HEAD` functions."
msgstr ""

#: ../Doc/library/simplehttpserver.rst:31
msgid ""
"The following are defined as class-level attributes of :class:"
"`SimpleHTTPRequestHandler`:"
msgstr ""

#: ../Doc/library/simplehttpserver.rst:37
msgid ""
"This will be ``\"SimpleHTTP/\" + __version__``, where ``__version__`` is "
"defined at the module level."
msgstr ""

#: ../Doc/library/simplehttpserver.rst:43
msgid ""
"A dictionary mapping suffixes into MIME types. The default is signified by "
"an empty string, and is considered to be ``application/octet-stream``. The "
"mapping is used case-insensitively, and so should contain only lower-cased "
"keys."
msgstr ""

#: ../Doc/library/simplehttpserver.rst:48
msgid ""
"The :class:`SimpleHTTPRequestHandler` class defines the following methods:"
msgstr ""

#: ../Doc/library/simplehttpserver.rst:53
msgid ""
"This method serves the ``'HEAD'`` request type: it sends the headers it "
"would send for the equivalent ``GET`` request. See the :meth:`do_GET` method "
"for a more complete explanation of the possible headers."
msgstr ""

#: ../Doc/library/simplehttpserver.rst:60
msgid ""
"The request is mapped to a local file by interpreting the request as a path "
"relative to the current working directory."
msgstr ""

#: ../Doc/library/simplehttpserver.rst:63
msgid ""
"If the request was mapped to a directory, the directory is checked for a "
"file named ``index.html`` or ``index.htm`` (in that order). If found, the "
"file's contents are returned; otherwise a directory listing is generated by "
"calling the :meth:`list_directory` method. This method uses :func:`os."
"listdir` to scan the directory, and returns a ``404`` error response if the :"
"func:`listdir` fails."
msgstr ""

#: ../Doc/library/simplehttpserver.rst:70
msgid ""
"If the request was mapped to a file, it is opened and the contents are "
"returned.  Any :exc:`IOError` exception in opening the requested file is "
"mapped to a ``404``, ``'File not found'`` error. Otherwise, the content type "
"is guessed by calling the :meth:`guess_type` method, which in turn uses the "
"*extensions_map* variable."
msgstr ""

#: ../Doc/library/simplehttpserver.rst:76
msgid ""
"A ``'Content-type:'`` header with the guessed content type is output, "
"followed by a ``'Content-Length:'`` header with the file's size and a "
"``'Last-Modified:'`` header with the file's modification time."
msgstr ""

#: ../Doc/library/simplehttpserver.rst:80
msgid ""
"Then follows a blank line signifying the end of the headers, and then the "
"contents of the file are output. If the file's MIME type starts with ``text/"
"`` the file is opened in text mode; otherwise binary mode is used."
msgstr ""

# 78c23be050cc40178d6f52b4d3425a46
#: ../Doc/library/simplehttpserver.rst:84
msgid ""
"The :func:`test` function in the :mod:`SimpleHTTPServer` module is an "
"example which creates a server using the :class:`SimpleHTTPRequestHandler` "
"as the Handler."
msgstr ""

# ea1afc4d36a9479ba269ca5d90decec1
#: ../Doc/library/simplehttpserver.rst:92
msgid ""
"The :mod:`SimpleHTTPServer` module can be used in the following manner in "
"order to set up a very basic web server serving files relative to the "
"current directory. ::"
msgstr ""

# 3485185fee39424db3193a7df1f813bb
#: ../Doc/library/simplehttpserver.rst:108
msgid ""
"The :mod:`SimpleHTTPServer` module can also be invoked directly using the :"
"option:`-m` switch of the interpreter with a ``port number`` argument. "
"Similar to the previous example, this serves the files relative to the "
"current directory. ::"
msgstr ""

# 7c5edd0ba4fc41cb8cb23e6f644e46d1
#: ../Doc/library/simplexmlrpcserver.rst:2
msgid ":mod:`SimpleXMLRPCServer` --- Basic XML-RPC server"
msgstr ""

# 8b7d4d42002a4b5db27a92b23c2727d2
#: ../Doc/library/simplexmlrpcserver.rst:10
msgid ""
"The :mod:`SimpleXMLRPCServer` module has been merged into :mod:`xmlrpc."
"server` in Python 3.  The :term:`2to3` tool will automatically adapt imports "
"when converting your sources to Python 3."
msgstr ""

# 2d2e2cfbd6594539be3be3f37686d050
#: ../Doc/library/simplexmlrpcserver.rst:17
msgid "**Source code:** :source:`Lib/SimpleXMLRPCServer.py`"
msgstr ""

# 3bf9bded2e4b4071a36c89c6bfbfdcb7
#: ../Doc/library/simplexmlrpcserver.rst:21
msgid ""
"The :mod:`SimpleXMLRPCServer` module provides a basic server framework for "
"XML-RPC servers written in Python.  Servers can either be free standing, "
"using :class:`SimpleXMLRPCServer`, or embedded in a CGI environment, using :"
"class:`CGIXMLRPCRequestHandler`."
msgstr ""

# ee6e965929674c24999f2a2068b70e75
#: ../Doc/library/simplexmlrpcserver.rst:29
msgid ""
"Create a new server instance.  This class provides methods for registration "
"of functions that can be called by the XML-RPC protocol.  The "
"*requestHandler* parameter should be a factory for request handler "
"instances; it defaults to :class:`SimpleXMLRPCRequestHandler`.  The *addr* "
"and *requestHandler* parameters are passed to the :class:`SocketServer."
"TCPServer` constructor.  If *logRequests* is true (the default), requests "
"will be logged; setting this parameter to false will turn off logging.   The "
"*allow_none* and *encoding* parameters are passed on to  :mod:`xmlrpclib` "
"and control the XML-RPC responses that will be returned from the server. The "
"*bind_and_activate* parameter controls whether :meth:`server_bind` and :meth:"
"`server_activate` are called immediately by the constructor; it defaults to "
"true. Setting it to false allows code to manipulate the "
"*allow_reuse_address* class variable before the address is bound."
msgstr ""

# 3d626e0d9d9848fcbeac72c5fa848331
#: ../Doc/library/simplexmlrpcserver.rst:51
msgid ""
"Create a new instance to handle XML-RPC requests in a CGI environment.  The "
"*allow_none* and *encoding* parameters are passed on to  :mod:`xmlrpclib` "
"and control the XML-RPC responses that will be returned  from the server."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:63
msgid ""
"Create a new request handler instance.  This request handler supports "
"``POST`` requests and modifies logging so that the *logRequests* parameter "
"to the :class:`SimpleXMLRPCServer` constructor parameter is honored."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:71
msgid "SimpleXMLRPCServer Objects"
msgstr ""

# 71a8e14e30654771a1da4f4f7c250647
#: ../Doc/library/simplexmlrpcserver.rst:73
msgid ""
"The :class:`SimpleXMLRPCServer` class is based on :class:`SocketServer."
"TCPServer` and provides a means of creating simple, stand alone XML-RPC "
"servers."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:80
msgid ""
"Register a function that can respond to XML-RPC requests.  If *name* is "
"given, it will be the method name associated with *function*, otherwise "
"``function.__name__`` will be used.  *name* can be either a normal or "
"Unicode string, and may contain characters not legal in Python identifiers, "
"including the period character."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:89
msgid ""
"Register an object which is used to expose method names which have not been "
"registered using :meth:`register_function`.  If *instance* contains a :meth:"
"`_dispatch` method, it is called with the requested method name and the "
"parameters from the request.  Its API is ``def _dispatch(self, method, "
"params)`` (note that *params* does not represent a variable argument list).  "
"If it calls an underlying function to perform its task, that function is "
"called as ``func(*params)``, expanding the parameter list. The return value "
"from :meth:`_dispatch` is returned to the client as the result.  If "
"*instance* does not have a :meth:`_dispatch` method, it is searched for an "
"attribute matching the name of the requested method."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:100
msgid ""
"If the optional *allow_dotted_names* argument is true and the instance does "
"not have a :meth:`_dispatch` method, then if the requested method name "
"contains periods, each component of the method name is searched for "
"individually, with the effect that a simple hierarchical search is "
"performed.  The value found from this search is then called with the "
"parameters from the request, and the return value is passed back to the "
"client."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:109
msgid ""
"Enabling the *allow_dotted_names* option allows intruders to access your "
"module's global variables and may allow intruders to execute arbitrary code "
"on your machine.  Only use this option on a secure, closed network."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:120
msgid ""
"Registers the XML-RPC introspection functions ``system.listMethods``, "
"``system.methodHelp`` and ``system.methodSignature``."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:128
msgid "Registers the XML-RPC multicall function system.multicall."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:133
msgid ""
"An attribute value that must be a tuple listing valid path portions of the "
"URL for receiving XML-RPC requests.  Requests posted to other paths will "
"result in a 404 \"no such page\" HTTP error.  If this tuple is empty, all "
"paths will be considered valid. The default value is ``('/', '/RPC2')``."
msgstr ""

# bb82205654a94eda95363a084d069569
#: ../Doc/library/simplexmlrpcserver.rst:142
msgid ""
"If this attribute is not ``None``, responses larger than this value will be "
"encoded using the *gzip* transfer encoding, if permitted by the client.  The "
"default is ``1400`` which corresponds roughly to a single TCP packet."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:152
msgid "SimpleXMLRPCServer Example"
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:153
msgid "Server code::"
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:187
msgid ""
"The following client code will call the methods made available by the "
"preceding server::"
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:202
msgid "CGIXMLRPCRequestHandler"
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:204
msgid ""
"The :class:`CGIXMLRPCRequestHandler` class can be used to  handle XML-RPC "
"requests sent to Python CGI scripts."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:210
msgid ""
"Register a function that can respond to XML-RPC requests. If  *name* is "
"given, it will be the method name associated with  function, otherwise "
"*function.__name__* will be used. *name* can be either a normal or Unicode "
"string, and may contain  characters not legal in Python identifiers, "
"including the period character."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:219
msgid ""
"Register an object which is used to expose method names  which have not been "
"registered using :meth:`register_function`. If  instance contains a :meth:"
"`_dispatch` method, it is called with the  requested method name and the "
"parameters from the  request; the return value is returned to the client as "
"the result. If instance does not have a :meth:`_dispatch` method, it is "
"searched for an attribute matching the name of the requested method; if  the "
"requested method name contains periods, each  component of the method name "
"is searched for individually,  with the effect that a simple hierarchical "
"search is performed. The value found from this search is then called with "
"the  parameters from the request, and the return value is passed  back to "
"the client."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:233
msgid ""
"Register the XML-RPC introspection functions  ``system.listMethods``, "
"``system.methodHelp`` and  ``system.methodSignature``."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:239
msgid "Register the XML-RPC multicall function ``system.multicall``."
msgstr ""

#: ../Doc/library/simplexmlrpcserver.rst:244
msgid ""
"Handle a XML-RPC request. If *request_text* is given, it  should be the POST "
"data provided by the HTTP server,  otherwise the contents of stdin will be "
"used."
msgstr ""

#: ../Doc/library/site.rst:2
msgid ":mod:`site` --- Site-specific configuration hook"
msgstr ""

# f42c6e7222104833826118411168af80
#: ../Doc/library/site.rst:7
msgid "**Source code:** :source:`Lib/site.py`"
msgstr ""

#: ../Doc/library/site.rst:13
msgid ""
"**This module is automatically imported during initialization.** The "
"automatic import can be suppressed using the interpreter's :option:`-S` "
"option."
msgstr ""

# 896e36bf5f21411daf1194913430c100
#: ../Doc/library/site.rst:18
msgid ""
"Importing this module will append site-specific paths to the module search "
"path and add a few builtins."
msgstr ""

#: ../Doc/library/site.rst:25
msgid ""
"It starts by constructing up to four directories from a head and a tail "
"part. For the head part, it uses ``sys.prefix`` and ``sys.exec_prefix``; "
"empty heads are skipped.  For the tail part, it uses the empty string and "
"then :file:`lib/site-packages` (on Windows) or :file:`lib/python|version|/"
"site-packages` and then :file:`lib/site-python` (on Unix and Macintosh).  "
"For each of the distinct head-tail combinations, it sees if it refers to an "
"existing directory, and if so, adds it to ``sys.path`` and also inspects the "
"newly added path for configuration files."
msgstr ""

# 2b34d17f592740cf904eeec52247d3a1
#: ../Doc/library/site.rst:34
msgid ""
"A path configuration file is a file whose name has the form :file:`{name}."
"pth` and exists in one of the four directories mentioned above; its contents "
"are additional items (one per line) to be added to ``sys.path``.  Non-"
"existing items are never added to ``sys.path``, and no check is made that "
"the item refers to a directory rather than a file.  No item is added to "
"``sys.path`` more than once.  Blank lines and lines beginning with ``#`` are "
"skipped.  Lines starting with ``import`` (followed by space or tab) are "
"executed."
msgstr ""

# f89d555c1a0e4e7b93e83906205a9feb
#: ../Doc/library/site.rst:49
msgid ""
"For example, suppose ``sys.prefix`` and ``sys.exec_prefix`` are set to :file:"
"`/usr/local`.  The Python X.Y library is then installed in :file:`/usr/local/"
"lib/python{X.Y}`.  Suppose this has a subdirectory :file:`/usr/local/lib/"
"python{X.Y}/site-packages` with three subsubdirectories, :file:`foo`, :file:"
"`bar` and :file:`spam`, and two path configuration files, :file:`foo.pth` "
"and :file:`bar.pth`.  Assume :file:`foo.pth` contains the following::"
msgstr ""

#: ../Doc/library/site.rst:63
msgid "and :file:`bar.pth` contains::"
msgstr ""

#: ../Doc/library/site.rst:69
msgid ""
"Then the following version-specific directories are added to ``sys.path``, "
"in this order::"
msgstr ""

#: ../Doc/library/site.rst:75
msgid ""
"Note that :file:`bletch` is omitted because it doesn't exist; the :file:"
"`bar` directory precedes the :file:`foo` directory because :file:`bar.pth` "
"comes alphabetically before :file:`foo.pth`; and :file:`spam` is omitted "
"because it is not mentioned in either path configuration file."
msgstr ""

# b0728236606c407b846014c301a95837
#: ../Doc/library/site.rst:82
msgid ""
"After these path manipulations, an attempt is made to import a module named :"
"mod:`sitecustomize`, which can perform arbitrary site-specific "
"customizations. It is typically created by a system administrator in the "
"site-packages directory.  If this import fails with an :exc:`ImportError` "
"exception, it is silently ignored."
msgstr ""

# 73f43d9fc72149eb945a69d8a3c718fc
#: ../Doc/library/site.rst:90
msgid ""
"After this, an attempt is made to import a module named :mod:"
"`usercustomize`, which can perform arbitrary user-specific customizations, "
"if :data:`ENABLE_USER_SITE` is true.  This file is intended to be created in "
"the user site-packages directory (see below), which is part of ``sys.path`` "
"unless disabled by :option:`-s`.  An :exc:`ImportError` will be silently "
"ignored."
msgstr ""

# 6e3ab0c8e5a34e298d291bb76bb01d38
#: ../Doc/library/site.rst:96
msgid ""
"Note that for some non-Unix systems, ``sys.prefix`` and ``sys.exec_prefix`` "
"are empty, and the path manipulations are skipped; however the import of :"
"mod:`sitecustomize` and :mod:`usercustomize` is still attempted."
msgstr ""

# 003bf3e44554481dbca4b43e69ee6a40
#: ../Doc/library/site.rst:103
msgid "A list of prefixes for site-packages directories."
msgstr ""

# 4b8461a933e4439e933809189ea29741
#: ../Doc/library/site.rst:110
msgid ""
"Flag showing the status of the user site-packages directory.  ``True`` means "
"that it is enabled and was added to ``sys.path``.  ``False`` means that it "
"was disabled by user request (with :option:`-s` or :envvar:"
"`PYTHONNOUSERSITE`).  ``None`` means it was disabled for security reasons "
"(mismatch between user or group id and effective id) or by an administrator."
msgstr ""

# c86f0af70dfe466cbc3c2c301b44ae04
#: ../Doc/library/site.rst:122
msgid ""
"Path to the user site-packages for the running Python.  Can be ``None`` if :"
"func:`getusersitepackages` hasn't been called yet.  Default value is :file:"
"`~/.local/lib/python{X.Y}/site-packages` for UNIX and non-framework Mac OS X "
"builds, :file:`~/Library/Python/{X.Y}/lib/python/site-packages` for Mac "
"framework builds, and :file:`{%APPDATA%}\\\\Python\\\\Python{XY}\\\\site-"
"packages` on Windows.  This directory is a site directory, which means that :"
"file:`.pth` files in it will be processed."
msgstr ""

# be9843f9a8d940beb01e27be69af39f6
#: ../Doc/library/site.rst:135
msgid ""
"Path to the base directory for the user site-packages.  Can be ``None`` if :"
"func:`getuserbase` hasn't been called yet.  Default value is :file:`~/."
"local` for UNIX and Mac OS X non-framework builds, :file:`~/Library/Python/"
"{X.Y}` for Mac framework builds, and :file:`{%APPDATA%}\\\\Python` for "
"Windows.  This value is used by Distutils to compute the installation "
"directories for scripts, data files, Python modules, etc. for the :ref:`user "
"installation scheme <inst-alt-install-user>`.  See also :envvar:"
"`PYTHONUSERBASE`."
msgstr ""

# 2011ff7de7b94522b024c466424dbc78
#: ../Doc/library/site.rst:149
msgid ""
"Add a directory to sys.path and process its :file:`.pth` files.  Typically "
"used in :mod:`sitecustomize` or :mod:`usercustomize` (see above)."
msgstr ""

# d25a63f417d04a79a6022f591886440b
#: ../Doc/library/site.rst:155
msgid ""
"Return a list containing all global site-packages directories (and possibly "
"site-python)."
msgstr ""

# 29702ff5ef574573a36c0ca385113368
#: ../Doc/library/site.rst:163
msgid ""
"Return the path of the user base directory, :data:`USER_BASE`.  If it is not "
"initialized yet, this function will also set it, respecting :envvar:"
"`PYTHONUSERBASE`."
msgstr ""

# dea93c9f05414071ac656c13730a4bef
#: ../Doc/library/site.rst:172
msgid ""
"Return the path of the user-specific site-packages directory, :data:"
"`USER_SITE`.  If it is not initialized yet, this function will also set it, "
"respecting :envvar:`PYTHONNOUSERSITE` and :data:`USER_BASE`."
msgstr ""

# c3196b4c4d3046969e4245ecdf3ff149
#: ../Doc/library/site.rst:179
msgid ""
"The :mod:`site` module also provides a way to get the user directories from "
"the command line:"
msgstr ""

# e0856725d82b45358e84bf386f2c6b34
#: ../Doc/library/site.rst:189
msgid ""
"If it is called without arguments, it will print the contents of :data:`sys."
"path` on the standard output, followed by the value of :data:`USER_BASE` and "
"whether the directory exists, then the same thing for :data:`USER_SITE`, and "
"finally the value of :data:`ENABLE_USER_SITE`."
msgstr ""

# 281710419b324c66af87018d574def34
#: ../Doc/library/site.rst:196
msgid "Print the path to the user base directory."
msgstr ""

# ac9790eca3bc45cb80039760281f5f96
#: ../Doc/library/site.rst:200
msgid "Print the path to the user site-packages directory."
msgstr ""

# f7cc7fb354464c9ab3dcaddc852d2343
#: ../Doc/library/site.rst:202
msgid ""
"If both options are given, user base and user site will be printed (always "
"in this order), separated by :data:`os.pathsep`."
msgstr ""

# b065b00dbc52442b9ec6ecd0ab6531fc
#: ../Doc/library/site.rst:205
msgid ""
"If any option is given, the script will exit with one of these values: ``O`` "
"if the user site-packages directory is enabled, ``1`` if it was disabled by "
"the user, ``2`` if it is disabled for security reasons or by an "
"administrator, and a value greater than 2 if there is an error."
msgstr ""

# 3197f07745f549bba8dca306bff6de87
#: ../Doc/library/site.rst:212
msgid ":pep:`370` -- Per user site-packages directory"
msgstr ""

#: ../Doc/library/smtpd.rst:2
msgid ":mod:`smtpd` --- SMTP Server"
msgstr ""

# a272b407374c48c49cf5b1198e695274
#: ../Doc/library/smtpd.rst:10
msgid "**Source code:** :source:`Lib/smtpd.py`"
msgstr ""

#: ../Doc/library/smtpd.rst:14
msgid ""
"This module offers several classes to implement SMTP servers.  One is a "
"generic do-nothing implementation, which can be overridden, while the other "
"two offer specific mail-sending strategies."
msgstr ""

#: ../Doc/library/smtpd.rst:20
msgid "SMTPServer Objects"
msgstr ""

#: ../Doc/library/smtpd.rst:25
msgid ""
"Create a new :class:`SMTPServer` object, which binds to local address "
"*localaddr*.  It will treat *remoteaddr* as an upstream SMTP relayer.  It "
"inherits from :class:`asyncore.dispatcher`, and so will insert itself into :"
"mod:`asyncore`'s event loop on instantiation."
msgstr ""

#: ../Doc/library/smtpd.rst:33
msgid ""
"Raise :exc:`NotImplementedError` exception. Override this in subclasses to "
"do something useful with this message. Whatever was passed in the "
"constructor as *remoteaddr* will be available as the :attr:`_remoteaddr` "
"attribute. *peer* is the remote host's address, *mailfrom* is the envelope "
"originator, *rcpttos* are the envelope recipients and *data* is a string "
"containing the contents of the e-mail (which should be in :rfc:`2822` "
"format)."
msgstr ""

#: ../Doc/library/smtpd.rst:43
msgid "DebuggingServer Objects"
msgstr ""

#: ../Doc/library/smtpd.rst:48
msgid ""
"Create a new debugging server.  Arguments are as per :class:`SMTPServer`. "
"Messages will be discarded, and printed on stdout."
msgstr ""

#: ../Doc/library/smtpd.rst:53
msgid "PureProxy Objects"
msgstr ""

#: ../Doc/library/smtpd.rst:58
msgid ""
"Create a new pure proxy server. Arguments are as per :class:`SMTPServer`. "
"Everything will be relayed to *remoteaddr*.  Note that running this has a "
"good chance to make you into an open relay, so please be careful."
msgstr ""

#: ../Doc/library/smtpd.rst:64
msgid "MailmanProxy Objects"
msgstr ""

#: ../Doc/library/smtpd.rst:69
msgid ""
"Create a new pure proxy server. Arguments are as per :class:`SMTPServer`. "
"Everything will be relayed to *remoteaddr*, unless local mailman "
"configurations knows about an address, in which case it will be handled via "
"mailman.  Note that running this has a good chance to make you into an open "
"relay, so please be careful."
msgstr ""

#: ../Doc/library/smtplib.rst:2
msgid ":mod:`smtplib` --- SMTP protocol client"
msgstr ""

# 2d47923056d1424c89b7f3d3836e3e55
#: ../Doc/library/smtplib.rst:13
msgid "**Source code:** :source:`Lib/smtplib.py`"
msgstr ""

#: ../Doc/library/smtplib.rst:17
msgid ""
"The :mod:`smtplib` module defines an SMTP client session object that can be "
"used to send mail to any Internet machine with an SMTP or ESMTP listener "
"daemon.  For details of SMTP and ESMTP operation, consult :rfc:`821` (Simple "
"Mail Transfer Protocol) and :rfc:`1869` (SMTP Service Extensions)."
msgstr ""

#: ../Doc/library/smtplib.rst:25
msgid ""
"A :class:`SMTP` instance encapsulates an SMTP connection.  It has methods "
"that support a full repertoire of SMTP and ESMTP operations. If the optional "
"host and port parameters are given, the SMTP :meth:`connect` method is "
"called with those parameters during initialization.  An :exc:"
"`SMTPConnectError` is raised if the specified host doesn't respond "
"correctly. The optional *timeout* parameter specifies a timeout in seconds "
"for blocking operations like the connection attempt (if not specified, the "
"global default timeout setting will be used)."
msgstr ""

#: ../Doc/library/smtplib.rst:34
msgid ""
"For normal use, you should only require the initialization/connect, :meth:"
"`sendmail`, and :meth:`quit` methods.  An example is included below."
msgstr ""

# 5b13c35363114c15b2041c07675bc728
#: ../Doc/library/smtplib.rst:43
msgid ""
"A :class:`SMTP_SSL` instance behaves exactly the same as instances of :class:"
"`SMTP`. :class:`SMTP_SSL` should be used for situations where SSL is "
"required from the beginning of the connection and using :meth:`starttls` is "
"not appropriate. If *host* is not specified, the local host is used. If "
"*port* is omitted, the standard SMTP-over-SSL port (465) is used. *keyfile* "
"and *certfile* are also optional, and can contain a PEM formatted private "
"key and certificate chain file for the SSL connection. The optional "
"*timeout* parameter specifies a timeout in seconds for blocking operations "
"like the connection attempt (if not specified, the global default timeout "
"setting will be used)."
msgstr ""

#: ../Doc/library/smtplib.rst:59
msgid ""
"The LMTP protocol, which is very similar to ESMTP, is heavily based on the "
"standard SMTP client. It's common to use Unix sockets for LMTP, so our :meth:"
"`connect` method must support that as well as a regular host:port server. To "
"specify a Unix socket, you must use an absolute path for *host*, starting "
"with a '/'."
msgstr ""

#: ../Doc/library/smtplib.rst:64
msgid ""
"Authentication is supported, using the regular SMTP mechanism. When using a "
"Unix socket, LMTP generally don't support or require any authentication, but "
"your mileage might vary."
msgstr ""

#: ../Doc/library/smtplib.rst:70
msgid "A nice selection of exceptions is defined as well:"
msgstr ""

#: ../Doc/library/smtplib.rst:75
msgid "Base exception class for all exceptions raised by this module."
msgstr ""

#: ../Doc/library/smtplib.rst:80
msgid ""
"This exception is raised when the server unexpectedly disconnects, or when "
"an attempt is made to use the :class:`SMTP` instance before connecting it to "
"a server."
msgstr ""

#: ../Doc/library/smtplib.rst:87
msgid ""
"Base class for all exceptions that include an SMTP error code. These "
"exceptions are generated in some instances when the SMTP server returns an "
"error code.  The error code is stored in the :attr:`smtp_code` attribute of "
"the error, and the :attr:`smtp_error` attribute is set to the error message."
msgstr ""

#: ../Doc/library/smtplib.rst:95
msgid ""
"Sender address refused.  In addition to the attributes set by on all :exc:"
"`SMTPResponseException` exceptions, this sets 'sender' to the string that "
"the SMTP server refused."
msgstr ""

#: ../Doc/library/smtplib.rst:102
msgid ""
"All recipient addresses refused.  The errors for each recipient are "
"accessible through the attribute :attr:`recipients`, which is a dictionary "
"of exactly the same sort as :meth:`SMTP.sendmail` returns."
msgstr ""

#: ../Doc/library/smtplib.rst:109
msgid "The SMTP server refused to accept the message data."
msgstr ""

#: ../Doc/library/smtplib.rst:114
msgid "Error occurred during establishment of a connection  with the server."
msgstr ""

#: ../Doc/library/smtplib.rst:119
msgid "The server refused our ``HELO`` message."
msgstr ""

#: ../Doc/library/smtplib.rst:124
msgid ""
"SMTP authentication went wrong.  Most probably the server didn't accept the "
"username/password combination provided."
msgstr ""

#: ../Doc/library/smtplib.rst:131
msgid ""
"Protocol definition for SMTP.  This document covers the model, operating "
"procedure, and protocol details for SMTP."
msgstr ""

#: ../Doc/library/smtplib.rst:135
msgid ""
"Definition of the ESMTP extensions for SMTP.  This describes a framework for "
"extending SMTP with new commands, supporting dynamic discovery of the "
"commands provided by the server, and defines a few additional commands."
msgstr ""

#: ../Doc/library/smtplib.rst:143
msgid "SMTP Objects"
msgstr ""

#: ../Doc/library/smtplib.rst:145
msgid "An :class:`SMTP` instance has the following methods:"
msgstr ""

#: ../Doc/library/smtplib.rst:150
msgid ""
"Set the debug output level.  A true value for *level* results in debug "
"messages for connection and for all messages sent to and received from the "
"server."
msgstr ""

#: ../Doc/library/smtplib.rst:156
msgid ""
"Connect to a host on a given port.  The defaults are to connect to the local "
"host at the standard SMTP port (25). If the hostname ends with a colon "
"(``':'``) followed by a number, that suffix will be stripped off and the "
"number interpreted as the port number to use. This method is automatically "
"invoked by the constructor if a host is specified during instantiation."
msgstr ""

# 32beb750a9f143acb08cb4c987ff461f
#: ../Doc/library/smtplib.rst:165
msgid ""
"Send a command *cmd* to the server.  The optional argument *argstring* is "
"simply concatenated to the command, separated by a space."
msgstr ""

#: ../Doc/library/smtplib.rst:168
msgid ""
"This returns a 2-tuple composed of a numeric response code and the actual "
"response line (multiline responses are joined into one long line.)"
msgstr ""

#: ../Doc/library/smtplib.rst:171
msgid ""
"In normal operation it should not be necessary to call this method "
"explicitly. It is used to implement other methods and may be useful for "
"testing private extensions."
msgstr ""

#: ../Doc/library/smtplib.rst:175
msgid ""
"If the connection to the server is lost while waiting for the reply, :exc:"
"`SMTPServerDisconnected` will be raised."
msgstr ""

#: ../Doc/library/smtplib.rst:181
msgid ""
"Identify yourself to the SMTP server using ``HELO``.  The hostname argument "
"defaults to the fully qualified domain name of the local host. The message "
"returned by the server is stored as the :attr:`helo_resp` attribute of the "
"object."
msgstr ""

#: ../Doc/library/smtplib.rst:186
msgid ""
"In normal operation it should not be necessary to call this method "
"explicitly. It will be implicitly called by the :meth:`sendmail` when "
"necessary."
msgstr ""

#: ../Doc/library/smtplib.rst:192
msgid ""
"Identify yourself to an ESMTP server using ``EHLO``.  The hostname argument "
"defaults to the fully qualified domain name of the local host.  Examine the "
"response for ESMTP option and store them for use by :meth:`has_extn`. Also "
"sets several informational attributes: the message returned by the server is "
"stored as the :attr:`ehlo_resp` attribute, :attr:`does_esmtp` is set to true "
"or false depending on whether the server supports ESMTP, and :attr:"
"`esmtp_features` will be a dictionary containing the names of the SMTP "
"service extensions this server supports, and their parameters (if any)."
msgstr ""

#: ../Doc/library/smtplib.rst:202
msgid ""
"Unless you wish to use :meth:`has_extn` before sending mail, it should not "
"be necessary to call this method explicitly.  It will be implicitly called "
"by :meth:`sendmail` when necessary."
msgstr ""

#: ../Doc/library/smtplib.rst:208
msgid ""
"This method call :meth:`ehlo` and or :meth:`helo` if there has been no "
"previous ``EHLO`` or ``HELO`` command this session.  It tries ESMTP ``EHLO`` "
"first."
msgstr ""

#: ../Doc/library/smtplib.rst:213 ../Doc/library/smtplib.rst:244
#: ../Doc/library/smtplib.rst:268 ../Doc/library/smtplib.rst:318
msgid "The server didn't reply properly to the ``HELO`` greeting."
msgstr ""

#: ../Doc/library/smtplib.rst:219
msgid ""
"Return :const:`True` if *name* is in the set of SMTP service extensions "
"returned by the server, :const:`False` otherwise. Case is ignored."
msgstr ""

#: ../Doc/library/smtplib.rst:225
msgid ""
"Check the validity of an address on this server using SMTP ``VRFY``. Returns "
"a tuple consisting of code 250 and a full :rfc:`822` address (including "
"human name) if the user address is valid. Otherwise returns an SMTP error "
"code of 400 or greater and an error string."
msgstr ""

#: ../Doc/library/smtplib.rst:232
msgid "Many sites disable SMTP ``VRFY`` in order to foil spammers."
msgstr ""

#: ../Doc/library/smtplib.rst:237
msgid ""
"Log in on an SMTP server that requires authentication. The arguments are the "
"username and the password to authenticate with. If there has been no "
"previous ``EHLO`` or ``HELO`` command this session, this method tries ESMTP "
"``EHLO`` first. This method will return normally if the authentication was "
"successful, or may raise the following exceptions:"
msgstr ""

#: ../Doc/library/smtplib.rst:247
msgid "The server didn't accept the username/password combination."
msgstr ""

#: ../Doc/library/smtplib.rst:250
msgid "No suitable authentication method was found."
msgstr ""

#: ../Doc/library/smtplib.rst:255
msgid ""
"Put the SMTP connection in TLS (Transport Layer Security) mode.  All SMTP "
"commands that follow will be encrypted.  You should then call :meth:`ehlo` "
"again."
msgstr ""

#: ../Doc/library/smtplib.rst:259
msgid ""
"If *keyfile* and *certfile* are provided, these are passed to the :mod:"
"`socket` module's :func:`ssl` function."
msgstr ""

#: ../Doc/library/smtplib.rst:262
msgid ""
"If there has been no previous ``EHLO`` or ``HELO`` command this session, "
"this method tries ESMTP ``EHLO`` first."
msgstr ""

#: ../Doc/library/smtplib.rst:271
msgid "The server does not support the STARTTLS extension."
msgstr ""

#: ../Doc/library/smtplib.rst:276
msgid "SSL/TLS support is not available to your Python interpreter."
msgstr ""

#: ../Doc/library/smtplib.rst:281
msgid ""
"Send mail.  The required arguments are an :rfc:`822` from-address string, a "
"list of :rfc:`822` to-address strings (a bare string will be treated as a "
"list with 1 address), and a message string.  The caller may pass a list of "
"ESMTP options (such as ``8bitmime``) to be used in ``MAIL FROM`` commands as "
"*mail_options*. ESMTP options (such as ``DSN`` commands) that should be used "
"with all ``RCPT`` commands can be passed as *rcpt_options*.  (If you need to "
"use different ESMTP options to different recipients you have to use the low-"
"level methods such as :meth:`mail`, :meth:`rcpt` and :meth:`data` to send "
"the message.)"
msgstr ""

#: ../Doc/library/smtplib.rst:292
msgid ""
"The *from_addr* and *to_addrs* parameters are used to construct the message "
"envelope used by the transport agents. The :class:`SMTP` does not modify the "
"message headers in any way."
msgstr ""

#: ../Doc/library/smtplib.rst:296
msgid ""
"If there has been no previous ``EHLO`` or ``HELO`` command this session, "
"this method tries ESMTP ``EHLO`` first. If the server does ESMTP, message "
"size and each of the specified options will be passed to it (if the option "
"is in the feature set the server advertises).  If ``EHLO`` fails, ``HELO`` "
"will be tried and ESMTP options suppressed."
msgstr ""

# e918cb6d93df431590af9fb6b945bbd9
#: ../Doc/library/smtplib.rst:302
msgid ""
"This method will return normally if the mail is accepted for at least one "
"recipient. Otherwise it will raise an exception.  That is, if this method "
"does not raise an exception, then someone should get your mail. If this "
"method does not raise an exception, it returns a dictionary, with one entry "
"for each recipient that was refused.  Each entry contains a tuple of the "
"SMTP error code and the accompanying error message sent by the server."
msgstr ""

#: ../Doc/library/smtplib.rst:309
msgid "This method may raise the following exceptions:"
msgstr ""

#: ../Doc/library/smtplib.rst:312
msgid ""
"All recipients were refused.  Nobody got the mail.  The :attr:`recipients` "
"attribute of the exception object is a dictionary with information about the "
"refused recipients (like the one returned when at least one recipient was "
"accepted)."
msgstr ""

#: ../Doc/library/smtplib.rst:321
msgid "The server didn't accept the *from_addr*."
msgstr ""

#: ../Doc/library/smtplib.rst:324
msgid ""
"The server replied with an unexpected error code (other than a refusal of a "
"recipient)."
msgstr ""

#: ../Doc/library/smtplib.rst:327
msgid ""
"Unless otherwise noted, the connection will be open even after an exception "
"is raised."
msgstr ""

#: ../Doc/library/smtplib.rst:333
msgid ""
"Terminate the SMTP session and close the connection.  Return the result of "
"the SMTP ``QUIT`` command."
msgstr ""

#: ../Doc/library/smtplib.rst:340
msgid ""
"Low-level methods corresponding to the standard SMTP/ESMTP commands "
"``HELP``, ``RSET``, ``NOOP``, ``MAIL``, ``RCPT``, and ``DATA`` are also "
"supported. Normally these do not need to be called directly, so they are not "
"documented here.  For details, consult the module code."
msgstr ""

#: ../Doc/library/smtplib.rst:349
msgid "SMTP Example"
msgstr ""

#: ../Doc/library/smtplib.rst:351
msgid ""
"This example prompts the user for addresses needed in the message envelope "
"('To' and 'From' addresses), and the message to be delivered.  Note that the "
"headers to be included with the message must be included in the message as "
"entered; this example doesn't do any processing of the :rfc:`822` headers.  "
"In particular, the 'To' and 'From' addresses must be included in the message "
"headers explicitly. ::"
msgstr ""

#: ../Doc/library/smtplib.rst:387
msgid ""
"In general, you will want to use the :mod:`email` package's features to "
"construct an email message, which you can then convert to a string and send "
"via :meth:`sendmail`; see :ref:`email-examples`."
msgstr ""

#: ../Doc/library/sndhdr.rst:2
msgid ":mod:`sndhdr` --- Determine type of sound file"
msgstr ""

# 99720a4d8ad74a8db6e69dd67ee8db41
#: ../Doc/library/sndhdr.rst:13
msgid "**Source code:** :source:`Lib/sndhdr.py`"
msgstr ""

#: ../Doc/library/sndhdr.rst:17
msgid ""
"The :mod:`sndhdr` provides utility functions which attempt to determine the "
"type of sound data which is in a file.  When these functions are able to "
"determine what type of sound data is stored in a file, they return a tuple ``"
"(type, sampling_rate, channels, frames, bits_per_sample)``.  The value for "
"*type* indicates the data type and will be one of the strings ``'aifc'``, "
"``'aiff'``, ``'au'``, ``'hcom'``, ``'sndr'``, ``'sndt'``, ``'voc'``, "
"``'wav'``, ``'8svx'``, ``'sb'``, ``'ub'``, or ``'ul'``.  The *sampling_rate* "
"will be either the actual value or ``0`` if unknown or difficult to decode.  "
"Similarly, *channels* will be either the number of channels or ``0`` if it "
"cannot be determined or if the value is difficult to decode.  The value for "
"*frames* will be either the number of frames or ``-1``.  The last item in "
"the tuple, *bits_per_sample*, will either be the sample size in bits or "
"``'A'`` for A-LAW or ``'U'`` for u-LAW."
msgstr ""

#: ../Doc/library/sndhdr.rst:33
msgid ""
"Determines the type of sound data stored in the file *filename* using :func:"
"`whathdr`.  If it succeeds, returns a tuple as described above, otherwise "
"``None`` is returned."
msgstr ""

#: ../Doc/library/sndhdr.rst:40
msgid ""
"Determines the type of sound data stored in a file based on the file  "
"header. The name of the file is given by *filename*.  This function returns "
"a tuple as described above on success, or ``None``."
msgstr ""

#: ../Doc/library/socket.rst:2
msgid ":mod:`socket` --- Low-level networking interface"
msgstr ""

# 0716534e57724ac6b44ea14c0fa68880
#: ../Doc/library/socket.rst:8
msgid ""
"This module provides access to the BSD *socket* interface. It is available "
"on all modern Unix systems, Windows, Mac OS X, BeOS, OS/2, and probably "
"additional platforms."
msgstr ""

#: ../Doc/library/socket.rst:14
msgid ""
"Some behavior may be platform dependent, since calls are made to the "
"operating system socket APIs."
msgstr ""

#: ../Doc/library/socket.rst:17
msgid ""
"For an introduction to socket programming (in C), see the following papers: "
"An Introductory 4.3BSD Interprocess Communication Tutorial, by Stuart "
"Sechrest and An Advanced 4.3BSD Interprocess Communication Tutorial, by "
"Samuel J.  Leffler et al, both in the UNIX Programmer's Manual, "
"Supplementary Documents 1 (sections PS1:7 and PS1:8).  The platform-specific "
"reference material for the various socket-related system calls are also a "
"valuable source of information on the details of socket semantics.  For "
"Unix, refer to the manual pages; for Windows, see the WinSock (or Winsock 2) "
"specification. For IPv6-ready APIs, readers may want to refer to :rfc:`3493` "
"titled Basic Socket Interface Extensions for IPv6."
msgstr ""

#: ../Doc/library/socket.rst:29
msgid ""
"The Python interface is a straightforward transliteration of the Unix system "
"call and library interface for sockets to Python's object-oriented style: "
"the :func:`socket` function returns a :dfn:`socket object` whose methods "
"implement the various socket system calls.  Parameter types are somewhat "
"higher-level than in the C interface: as with :meth:`read` and :meth:`write` "
"operations on Python files, buffer allocation on receive operations is "
"automatic, and buffer length is implicit on send operations."
msgstr ""

# 2afdabb94e7345d38f5c4a5b6f148d51
#: ../Doc/library/socket.rst:37
msgid ""
"Socket addresses are represented as follows: A single string is used for "
"the :const:`AF_UNIX` address family. A pair ``(host, port)`` is used for "
"the :const:`AF_INET` address family, where *host* is a string representing "
"either a hostname in Internet domain notation like ``'daring.cwi.nl'`` or an "
"IPv4 address like ``'100.50.200.5'``, and *port* is an integer. For :const:"
"`AF_INET6` address family, a four-tuple ``(host, port, flowinfo, scopeid)`` "
"is used, where *flowinfo* and *scopeid* represents ``sin6_flowinfo`` and "
"``sin6_scope_id`` member in :const:`struct sockaddr_in6` in C. For :mod:"
"`socket` module methods, *flowinfo* and *scopeid* can be omitted just for "
"backward compatibility. Note, however, omission of *scopeid* can cause "
"problems in manipulating scoped IPv6 addresses. Other address families are "
"currently not supported. The address format required by a particular socket "
"object is automatically selected based on the address family specified when "
"the socket object was created."
msgstr ""

#: ../Doc/library/socket.rst:52
msgid ""
"For IPv4 addresses, two special forms are accepted instead of a host "
"address: the empty string represents :const:`INADDR_ANY`, and the string "
"``'<broadcast>'`` represents :const:`INADDR_BROADCAST`. The behavior is not "
"available for IPv6 for backward compatibility, therefore, you may want to "
"avoid these if you intend to support IPv6 with your Python programs."
msgstr ""

#: ../Doc/library/socket.rst:58
msgid ""
"If you use a hostname in the *host* portion of IPv4/v6 socket address, the "
"program may show a nondeterministic behavior, as Python uses the first "
"address returned from the DNS resolution.  The socket address will be "
"resolved differently into an actual IPv4/v6 address, depending on the "
"results from DNS resolution and/or the host configuration.  For "
"deterministic behavior use a numeric address in *host* portion."
msgstr ""

# 1c52afc4439b4bafae92aa37e6589875
#: ../Doc/library/socket.rst:75
msgid ""
"*addr_type* is one of :const;`TIPC_ADDR_NAMESEQ`, :const:`TIPC_ADDR_NAME`, "
"or :const:`TIPC_ADDR_ID`."
msgstr ""

# 62c01b5688df4706976056de9752548d
#: ../Doc/library/socket.rst:77
msgid ""
"*scope* is one of :const:`TIPC_ZONE_SCOPE`, :const:`TIPC_CLUSTER_SCOPE`, "
"and :const:`TIPC_NODE_SCOPE`."
msgstr ""

# c3914cfc373148d7b3b6ba1e94142900
#: ../Doc/library/socket.rst:79
msgid ""
"If *addr_type* is :const:`TIPC_ADDR_NAME`, then *v1* is the server type, "
"*v2* is the port identifier, and *v3* should be 0."
msgstr ""

# c51510e7eed94a78bf08162132ece8cf
#: ../Doc/library/socket.rst:82
msgid ""
"If *addr_type* is :const:`TIPC_ADDR_NAMESEQ`, then *v1* is the server type, "
"*v2* is the lower port number, and *v3* is the upper port number."
msgstr ""

# c3c4d6fdca6e4cc4b6e7217b6f4d2c28
#: ../Doc/library/socket.rst:85
msgid ""
"If *addr_type* is :const:`TIPC_ADDR_ID`, then *v1* is the node, *v2* is the "
"reference, and *v3* should be set to 0."
msgstr ""

#: ../Doc/library/socket.rst:89
msgid ""
"All errors raise exceptions.  The normal exceptions for invalid argument "
"types and out-of-memory conditions can be raised; errors related to socket "
"or address semantics raise the error :exc:`socket.error`."
msgstr ""

#: ../Doc/library/socket.rst:93
msgid ""
"Non-blocking mode is supported through :meth:`~socket.setblocking`.  A "
"generalization of this based on timeouts is supported through :meth:`~socket."
"settimeout`."
msgstr ""

#: ../Doc/library/socket.rst:97
msgid "The module :mod:`socket` exports the following constants and functions:"
msgstr ""

#: ../Doc/library/socket.rst:104
msgid ""
"This exception is raised for socket-related errors. The accompanying value "
"is either a string telling what went wrong or a pair ``(errno, string)`` "
"representing an error returned by a system call, similar to the value "
"accompanying :exc:`os.error`. See the module :mod:`errno`, which contains "
"names for the error codes defined by the underlying operating system."
msgstr ""

#: ../Doc/library/socket.rst:116
msgid ""
"This exception is raised for address-related errors, i.e. for functions that "
"use *h_errno* in the C API, including :func:`gethostbyname_ex` and :func:"
"`gethostbyaddr`."
msgstr ""

# 94b43cd3daf64eec87bf633c2c34c7e6
#: ../Doc/library/socket.rst:120
msgid ""
"The accompanying value is a pair ``(h_errno, string)`` representing an error "
"returned by a library call. *string* represents the description of "
"*h_errno*, as returned by the :c:func:`hstrerror` C function."
msgstr ""

# f8fd59aeff29463d8cc82900d3e16144
#: ../Doc/library/socket.rst:127
msgid ""
"This exception is raised for address-related errors, for :func:`getaddrinfo` "
"and :func:`getnameinfo`. The accompanying value is a pair ``(error, string)"
"`` representing an error returned by a library call. *string* represents the "
"description of *error*, as returned by the :c:func:`gai_strerror` C "
"function. The *error* value will match one of the :const:`EAI_\\*` constants "
"defined in this module."
msgstr ""

#: ../Doc/library/socket.rst:137
msgid ""
"This exception is raised when a timeout occurs on a socket which has had "
"timeouts enabled via a prior call to :meth:`settimeout`.  The accompanying "
"value is a string whose value is currently always \"timed out\"."
msgstr ""

#: ../Doc/library/socket.rst:148
msgid ""
"These constants represent the address (and protocol) families, used for the "
"first argument to :func:`socket`.  If the :const:`AF_UNIX` constant is not "
"defined then this protocol is unsupported."
msgstr ""

#: ../Doc/library/socket.rst:159
msgid ""
"These constants represent the socket types, used for the second argument to :"
"func:`socket`. (Only :const:`SOCK_STREAM` and :const:`SOCK_DGRAM` appear to "
"be generally useful.)"
msgstr ""

#: ../Doc/library/socket.rst:178
msgid ""
"Many constants of these forms, documented in the Unix documentation on "
"sockets and/or the IP protocol, are also defined in the socket module. They "
"are generally used in arguments to the :meth:`setsockopt` and :meth:"
"`getsockopt` methods of socket objects.  In most cases, only those symbols "
"that are defined in the Unix header files are defined; for a few symbols, "
"default values are provided."
msgstr ""

#: ../Doc/library/socket.rst:188
msgid ""
"Constants for Windows' WSAIoctl(). The constants are used as arguments to "
"the :meth:`ioctl` method of socket objects."
msgstr ""

#: ../Doc/library/socket.rst:195
msgid ""
"TIPC related constants, matching the ones exported by the C socket API. See "
"the TIPC documentation for more information."
msgstr ""

#: ../Doc/library/socket.rst:202
msgid ""
"This constant contains a boolean value which indicates if IPv6 is supported "
"on this platform."
msgstr ""

# 217e500c68c1436b857b170219591d0a
#: ../Doc/library/socket.rst:210
msgid ""
"Connect to a TCP service listening on the Internet *address* (a 2-tuple ``"
"(host, port)``), and return the socket object.  This is a higher-level "
"function than :meth:`socket.connect`: if *host* is a non-numeric hostname, "
"it will try to resolve it for both :data:`AF_INET` and :data:`AF_INET6`, and "
"then try to connect to all possible addresses in turn until a connection "
"succeeds.  This makes it easy to write clients that are compatible to both "
"IPv4 and IPv6."
msgstr ""

# fbdca1b906b048aa88f01259893fedf0
#: ../Doc/library/socket.rst:218
msgid ""
"Passing the optional *timeout* parameter will set the timeout on the socket "
"instance before attempting to connect.  If no *timeout* is supplied, the "
"global default timeout setting returned by :func:`getdefaulttimeout` is used."
msgstr ""

#: ../Doc/library/socket.rst:223
msgid ""
"If supplied, *source_address* must be a 2-tuple ``(host, port)`` for the "
"socket to bind to as its source address before connecting.  If host or port "
"are '' or 0 respectively the OS default behavior will be used."
msgstr ""

#: ../Doc/library/socket.rst:235
msgid ""
"Translate the *host*/*port* argument into a sequence of 5-tuples that "
"contain all the necessary arguments for creating a socket connected to that "
"service. *host* is a domain name, a string representation of an IPv4/v6 "
"address or ``None``. *port* is a string service name such as ``'http'``, a "
"numeric port number or ``None``.  By passing ``None`` as the value of *host* "
"and *port*, you can pass ``NULL`` to the underlying C API."
msgstr ""

#: ../Doc/library/socket.rst:242
msgid ""
"The *family*, *socktype* and *proto* arguments can be optionally specified "
"in order to narrow the list of addresses returned.  Passing zero as a value "
"for each of these arguments selects the full range of results. The *flags* "
"argument can be one or several of the ``AI_*`` constants, and will influence "
"how results are computed and returned. For example, :const:`AI_NUMERICHOST` "
"will disable domain name resolution and will raise an error if *host* is a "
"domain name."
msgstr ""

#: ../Doc/library/socket.rst:250
msgid "The function returns a list of 5-tuples with the following structure:"
msgstr ""

#: ../Doc/library/socket.rst:252
msgid "``(family, socktype, proto, canonname, sockaddr)``"
msgstr ""

#: ../Doc/library/socket.rst:254
msgid ""
"In these tuples, *family*, *socktype*, *proto* are all integers and are "
"meant to be passed to the :func:`socket` function.  *canonname* will be a "
"string representing the canonical name of the *host* if :const:"
"`AI_CANONNAME` is part of the *flags* argument; else *canonname* will be "
"empty.  *sockaddr* is a tuple describing a socket address, whose format "
"depends on the returned *family* (a ``(address, port)`` 2-tuple for :const:"
"`AF_INET`, a ``(address, port, flow info, scope id)`` 4-tuple for :const:"
"`AF_INET6`), and is meant to be passed to the :meth:`socket.connect` method."
msgstr ""

#: ../Doc/library/socket.rst:264
msgid ""
"The following example fetches address information for a hypothetical TCP "
"connection to ``www.python.org`` on port 80 (results may differ on your "
"system if IPv6 isn't enabled)::"
msgstr ""

#: ../Doc/library/socket.rst:277
msgid ""
"Return a fully qualified domain name for *name*. If *name* is omitted or "
"empty, it is interpreted as the local host.  To find the fully qualified "
"name, the hostname returned by :func:`gethostbyaddr` is checked, followed by "
"aliases for the host, if available.  The first name which includes a period "
"is selected.  In case no fully qualified domain name is available, the "
"hostname as returned by :func:`gethostname` is returned."
msgstr ""

#: ../Doc/library/socket.rst:289
msgid ""
"Translate a host name to IPv4 address format.  The IPv4 address is returned "
"as a string, such as  ``'100.50.200.5'``.  If the host name is an IPv4 "
"address itself it is returned unchanged.  See :func:`gethostbyname_ex` for a "
"more complete interface. :func:`gethostbyname` does not support IPv6 name "
"resolution, and :func:`getaddrinfo` should be used instead for IPv4/v6 dual "
"stack support."
msgstr ""

#: ../Doc/library/socket.rst:298
msgid ""
"Translate a host name to IPv4 address format, extended interface. Return a "
"triple ``(hostname, aliaslist, ipaddrlist)`` where *hostname* is the primary "
"host name responding to the given *ip_address*, *aliaslist* is a (possibly "
"empty) list of alternative host names for the same address, and *ipaddrlist* "
"is a list of IPv4 addresses for the same interface on the same host (often "
"but not always a single address). :func:`gethostbyname_ex` does not support "
"IPv6 name resolution, and :func:`getaddrinfo` should be used instead for "
"IPv4/v6 dual stack support."
msgstr ""

#: ../Doc/library/socket.rst:310
msgid ""
"Return a string containing the hostname of the machine where  the Python "
"interpreter is currently executing."
msgstr ""

#: ../Doc/library/socket.rst:313
msgid ""
"If you want to know the current machine's IP address, you may want to use "
"``gethostbyname(gethostname())``. This operation assumes that there is a "
"valid address-to-host mapping for the host, and the assumption does not "
"always hold."
msgstr ""

#: ../Doc/library/socket.rst:318
msgid ""
"Note: :func:`gethostname` doesn't always return the fully qualified domain "
"name; use ``getfqdn()`` (see above)."
msgstr ""

#: ../Doc/library/socket.rst:324
msgid ""
"Return a triple ``(hostname, aliaslist, ipaddrlist)`` where *hostname* is "
"the primary host name responding to the given *ip_address*, *aliaslist* is a "
"(possibly empty) list of alternative host names for the same address, and "
"*ipaddrlist* is a list of IPv4/v6 addresses for the same interface on the "
"same host (most likely containing only a single address). To find the fully "
"qualified domain name, use the function :func:`getfqdn`. :func:"
"`gethostbyaddr` supports both IPv4 and IPv6."
msgstr ""

#: ../Doc/library/socket.rst:335
msgid ""
"Translate a socket address *sockaddr* into a 2-tuple ``(host, port)``. "
"Depending on the settings of *flags*, the result can contain a fully-"
"qualified domain name or numeric address representation in *host*.  "
"Similarly, *port* can contain a string port name or a numeric port number."
msgstr ""

#: ../Doc/library/socket.rst:345
msgid ""
"Translate an Internet protocol name (for example, ``'icmp'``) to a constant "
"suitable for passing as the (optional) third argument to the :func:`socket` "
"function.  This is usually only needed for sockets opened in \"raw\" mode (:"
"const:`SOCK_RAW`); for the normal socket modes, the correct protocol is "
"chosen automatically if the protocol is omitted or zero."
msgstr ""

#: ../Doc/library/socket.rst:354
msgid ""
"Translate an Internet service name and protocol name to a port number for "
"that service.  The optional protocol name, if given, should be ``'tcp'`` or "
"``'udp'``, otherwise any protocol will match."
msgstr ""

#: ../Doc/library/socket.rst:361
msgid ""
"Translate an Internet port number and protocol name to a service name for "
"that service.  The optional protocol name, if given, should be ``'tcp'`` or "
"``'udp'``, otherwise any protocol will match."
msgstr ""

#: ../Doc/library/socket.rst:368
msgid ""
"Create a new socket using the given address family, socket type and protocol "
"number.  The address family should be :const:`AF_INET` (the default), :const:"
"`AF_INET6` or :const:`AF_UNIX`.  The socket type should be :const:"
"`SOCK_STREAM` (the default), :const:`SOCK_DGRAM` or perhaps one of the other "
"``SOCK_`` constants.  The protocol number is usually zero and may be omitted "
"in that case."
msgstr ""

#: ../Doc/library/socket.rst:378
msgid ""
"Build a pair of connected socket objects using the given address family, "
"socket type, and protocol number.  Address family, socket type, and protocol "
"number are as for the :func:`socket` function above. The default family is :"
"const:`AF_UNIX` if defined on the platform; otherwise, the default is :const:"
"`AF_INET`. Availability: Unix."
msgstr ""

#: ../Doc/library/socket.rst:389
msgid ""
"Duplicate the file descriptor *fd* (an integer as returned by a file "
"object's :meth:`fileno` method) and build a socket object from the result.  "
"Address family, socket type and protocol number are as for the :func:"
"`socket` function above. The file descriptor should refer to a socket, but "
"this is not checked --- subsequent operations on the object may fail if the "
"file descriptor is invalid. This function is rarely needed, but can be used "
"to get or set socket options on a socket passed to a program as standard "
"input or output (such as a server started by the Unix inet daemon).  The "
"socket is assumed to be in blocking mode. Availability: Unix."
msgstr ""

#: ../Doc/library/socket.rst:402
msgid ""
"Convert 32-bit positive integers from network to host byte order.  On "
"machines where the host byte order is the same as network byte order, this "
"is a no-op; otherwise, it performs a 4-byte swap operation."
msgstr ""

#: ../Doc/library/socket.rst:409
msgid ""
"Convert 16-bit positive integers from network to host byte order.  On "
"machines where the host byte order is the same as network byte order, this "
"is a no-op; otherwise, it performs a 2-byte swap operation."
msgstr ""

#: ../Doc/library/socket.rst:416
msgid ""
"Convert 32-bit positive integers from host to network byte order.  On "
"machines where the host byte order is the same as network byte order, this "
"is a no-op; otherwise, it performs a 4-byte swap operation."
msgstr ""

#: ../Doc/library/socket.rst:423
msgid ""
"Convert 16-bit positive integers from host to network byte order.  On "
"machines where the host byte order is the same as network byte order, this "
"is a no-op; otherwise, it performs a 2-byte swap operation."
msgstr ""

# 0df7d9e33b9f49dd84e3a65128750924
#: ../Doc/library/socket.rst:430
msgid ""
"Convert an IPv4 address from dotted-quad string format (for example, "
"'123.45.67.89') to 32-bit packed binary format, as a string four characters "
"in length.  This is useful when conversing with a program that uses the "
"standard C library and needs objects of type :c:type:`struct in_addr`, which "
"is the C type for the 32-bit packed binary this function returns."
msgstr ""

#: ../Doc/library/socket.rst:436
msgid ""
":func:`inet_aton` also accepts strings with less than three dots; see the "
"Unix manual page :manpage:`inet(3)` for details."
msgstr ""

# 5a7d5d85b68940bbbd866bc870a24215
#: ../Doc/library/socket.rst:439
msgid ""
"If the IPv4 address string passed to this function is invalid, :exc:`socket."
"error` will be raised. Note that exactly what is valid depends on the "
"underlying C implementation of :c:func:`inet_aton`."
msgstr ""

#: ../Doc/library/socket.rst:443
msgid ""
":func:`inet_aton` does not support IPv6, and :func:`inet_pton` should be "
"used instead for IPv4/v6 dual stack support."
msgstr ""

# 415cefa1ec4e434295687a58c7bdaace
#: ../Doc/library/socket.rst:449
msgid ""
"Convert a 32-bit packed IPv4 address (a string four characters in length) to "
"its standard dotted-quad string representation (for example, "
"'123.45.67.89').  This is useful when conversing with a program that uses "
"the standard C library and needs objects of type :c:type:`struct in_addr`, "
"which is the C type for the 32-bit packed binary data this function takes as "
"an argument."
msgstr ""

# 08d31242877c43a7b061e6f68f7ec727
#: ../Doc/library/socket.rst:455
msgid ""
"If the string passed to this function is not exactly 4 bytes in length, :exc:"
"`socket.error` will be raised. :func:`inet_ntoa` does not support IPv6, and :"
"func:`inet_ntop` should be used instead for IPv4/v6 dual stack support."
msgstr ""

# 9ffe0b7da2e74badac9bed67374c2e72
#: ../Doc/library/socket.rst:462
msgid ""
"Convert an IP address from its family-specific string format to a packed, "
"binary format. :func:`inet_pton` is useful when a library or network "
"protocol calls for an object of type :c:type:`struct in_addr` (similar to :"
"func:`inet_aton`) or :c:type:`struct in6_addr`."
msgstr ""

# d36893f1143c44e382fa8fa1f5762a34
#: ../Doc/library/socket.rst:467
msgid ""
"Supported values for *address_family* are currently :const:`AF_INET` and :"
"const:`AF_INET6`. If the IP address string *ip_string* is invalid, :exc:"
"`socket.error` will be raised. Note that exactly what is valid depends on "
"both the value of *address_family* and the underlying implementation of :c:"
"func:`inet_pton`."
msgstr ""

#: ../Doc/library/socket.rst:473 ../Doc/library/socket.rst:491
msgid "Availability: Unix (maybe not all platforms)."
msgstr ""

# 23207aef4d69484f9e10b696b6320755
#: ../Doc/library/socket.rst:480
msgid ""
"Convert a packed IP address (a string of some number of characters) to its "
"standard, family-specific string representation (for example, ``'7.10.0.5'`` "
"or ``'5aef:2b::8'``) :func:`inet_ntop` is useful when a library or network "
"protocol returns an object of type :c:type:`struct in_addr` (similar to :"
"func:`inet_ntoa`) or :c:type:`struct in6_addr`."
msgstr ""

#: ../Doc/library/socket.rst:486
msgid ""
"Supported values for *address_family* are currently :const:`AF_INET` and :"
"const:`AF_INET6`. If the string *packed_ip* is not the correct length for "
"the specified address family, :exc:`ValueError` will be raised.  A :exc:"
"`socket.error` is raised for errors from the call to :func:`inet_ntop`."
msgstr ""

# 1335c7e38ca048ec9ba8efb622fb576e
#: ../Doc/library/socket.rst:498
msgid ""
"Return the default timeout in seconds (float) for new socket objects. A "
"value of ``None`` indicates that new socket objects have no timeout. When "
"the socket module is first imported, the default is ``None``."
msgstr ""

# 52781128ba3045cf8b409386c24a203c
#: ../Doc/library/socket.rst:507
msgid ""
"Set the default timeout in seconds (float) for new socket objects. A value "
"of ``None`` indicates that new socket objects have no timeout. When the "
"socket module is first imported, the default is ``None``."
msgstr ""

#: ../Doc/library/socket.rst:516
msgid ""
"This is a Python type object that represents the socket object type. It is "
"the same as ``type(socket(...))``."
msgstr ""

#: ../Doc/library/socket.rst:523
msgid "Classes that simplify writing network servers."
msgstr ""

# 18e53e8036bf4f88b2dcfee25acd9124
#: ../Doc/library/socket.rst:526
msgid "A TLS/SSL wrapper for socket objects."
msgstr ""

#: ../Doc/library/socket.rst:532
msgid "Socket Objects"
msgstr ""

#: ../Doc/library/socket.rst:534
msgid ""
"Socket objects have the following methods.  Except for :meth:`makefile` "
"these correspond to Unix system calls applicable to sockets."
msgstr ""

#: ../Doc/library/socket.rst:540
msgid ""
"Accept a connection. The socket must be bound to an address and listening "
"for connections. The return value is a pair ``(conn, address)`` where *conn* "
"is a *new* socket object usable to send and receive data on the connection, "
"and *address* is the address bound to the socket on the other end of the "
"connection."
msgstr ""

#: ../Doc/library/socket.rst:548
msgid ""
"Bind the socket to *address*.  The socket must not already be bound. (The "
"format of *address* depends on the address family --- see above.)"
msgstr ""

# a74812c904264c0499618d1a18e42be8
# c5d7117e5d69423fb3d3583157162f49
#: ../Doc/library/socket.rst:553 ../Doc/library/socket.rst:578
msgid ""
"This method has historically accepted a pair of parameters for :const:"
"`AF_INET` addresses instead of only a tuple.  This was never intentional and "
"is no longer available in Python 2.0 and later."
msgstr ""

#: ../Doc/library/socket.rst:560
msgid ""
"Close the socket.  All future operations on the socket object will fail. The "
"remote end will receive no more data (after queued data is flushed). Sockets "
"are automatically closed when they are garbage-collected."
msgstr ""

# cf54f44af2044115a2c3eb8807d443b5
#: ../Doc/library/socket.rst:565
msgid ""
":meth:`close()` releases the resource associated with a connection but does "
"not necessarily close the connection immediately.  If you want to close the "
"connection in a timely fashion, call :meth:`shutdown()` before :meth:`close()"
"`."
msgstr ""

#: ../Doc/library/socket.rst:573
msgid ""
"Connect to a remote socket at *address*. (The format of *address* depends on "
"the address family --- see above.)"
msgstr ""

# 1283c7ac84894b55b0b02a3272de24d8
#: ../Doc/library/socket.rst:585
msgid ""
"Like ``connect(address)``, but return an error indicator instead of raising "
"an exception for errors returned by the C-level :c:func:`connect` call "
"(other problems, such as \"host not found,\" can still raise exceptions).  "
"The error indicator is ``0`` if the operation succeeded, otherwise the value "
"of the :c:data:`errno` variable.  This is useful to support, for example, "
"asynchronous connects."
msgstr ""

# f740d513f3494e49b1b172304e08c85d
#: ../Doc/library/socket.rst:594
msgid ""
"This method has historically accepted a pair of parameters for :const:"
"`AF_INET` addresses instead of only a tuple. This was never intentional and "
"is no longer available in Python 2.0 and later."
msgstr ""

#: ../Doc/library/socket.rst:601
msgid ""
"Return the socket's file descriptor (a small integer).  This is useful with :"
"func:`select.select`."
msgstr ""

#: ../Doc/library/socket.rst:604
msgid ""
"Under Windows the small integer returned by this method cannot be used where "
"a file descriptor can be used (such as :func:`os.fdopen`).  Unix does not "
"have this limitation."
msgstr ""

#: ../Doc/library/socket.rst:611
msgid ""
"Return the remote address to which the socket is connected.  This is useful "
"to find out the port number of a remote IPv4/v6 socket, for instance. (The "
"format of the address returned depends on the address family --- see "
"above.)  On some systems this function is not supported."
msgstr ""

#: ../Doc/library/socket.rst:619
msgid ""
"Return the socket's own address.  This is useful to find out the port number "
"of an IPv4/v6 socket, for instance. (The format of the address returned "
"depends on the address family --- see above.)"
msgstr ""

# 05d512843abf424ebfdcbfaeaebb947f
#: ../Doc/library/socket.rst:626
msgid ""
"Return the value of the given socket option (see the Unix man page :manpage:"
"`getsockopt(2)`).  The needed symbolic constants (:const:`SO_\\*` etc.) are "
"defined in this module.  If *buflen* is absent, an integer option is assumed "
"and its integer value is returned by the function.  If *buflen* is present, "
"it specifies the maximum length of the buffer used to receive the option in, "
"and this buffer is returned as a string.  It is up to the caller to decode "
"the contents of the buffer (see the optional built-in module :mod:`struct` "
"for a way to decode C structures encoded as strings)."
msgstr ""

#: ../Doc/library/socket.rst:640
msgid ""
"The :meth:`ioctl` method is a limited interface to the WSAIoctl system "
"interface.  Please refer to the `Win32 documentation <http://msdn.microsoft."
"com/en-us/library/ms741621%28VS.85%29.aspx>`_ for more information."
msgstr ""

#: ../Doc/library/socket.rst:645
msgid ""
"On other platforms, the generic :func:`fcntl.fcntl` and :func:`fcntl.ioctl` "
"functions may be used; they accept a socket object as their first argument."
msgstr ""

# 4c977f1180a7446a8c386bd0e0a2113c
#: ../Doc/library/socket.rst:653
msgid ""
"Listen for connections made to the socket.  The *backlog* argument specifies "
"the maximum number of queued connections and should be at least 0; the "
"maximum value is system-dependent (usually 5), the minimum value is forced "
"to 0."
msgstr ""

# f5792ef4a700453e92324e5b5fd0c2fc
#: ../Doc/library/socket.rst:662
msgid ""
"Return a :dfn:`file object` associated with the socket.  (File objects are "
"described in :ref:`bltin-file-objects`.) The file object references a :c:"
"func:`dup`\\ ped version of the socket file descriptor, so the file object "
"and socket object may be closed or garbage-collected independently. The "
"socket must be in blocking mode (it can not have a timeout). The optional "
"*mode* and *bufsize* arguments are interpreted the same way as by the built-"
"in :func:`file` function."
msgstr ""

# ce70f6fc08da47dfa006989a3cf7e047
#: ../Doc/library/socket.rst:672
msgid ""
"On Windows, the file-like object created by :meth:`makefile` cannot be used "
"where a file object with a file descriptor is expected, such as the stream "
"arguments of :meth:`subprocess.Popen`."
msgstr ""

# b2c4a85d59214905ad74203b2c51de8e
#: ../Doc/library/socket.rst:679
msgid ""
"Receive data from the socket.  The return value is a string representing the "
"data received.  The maximum amount of data to be received at once is "
"specified by *bufsize*.  See the Unix manual page :manpage:`recv(2)` for the "
"meaning of the optional argument *flags*; it defaults to zero."
msgstr ""

#: ../Doc/library/socket.rst:686
msgid ""
"For best match with hardware and network realities, the value of  *bufsize* "
"should be a relatively small power of 2, for example, 4096."
msgstr ""

# 0359bbd40d6d4bde93f36dc214931942
#: ../Doc/library/socket.rst:692
msgid ""
"Receive data from the socket.  The return value is a pair ``(string, address)"
"`` where *string* is a string representing the data received and *address* "
"is the address of the socket sending the data.  See the Unix manual page :"
"manpage:`recv(2)` for the meaning of the optional argument *flags*; it "
"defaults to zero. (The format of *address* depends on the address family --- "
"see above.)"
msgstr ""

# 39e0bd75ca08446bb56c0fb636c13dcb
#: ../Doc/library/socket.rst:701
msgid ""
"Receive data from the socket, writing it into *buffer* instead of  creating "
"a new string.  The return value is a pair ``(nbytes, address)`` where "
"*nbytes* is the number of bytes received and *address* is the address of the "
"socket sending the data.  See the Unix manual page :manpage:`recv(2)` for "
"the meaning of the optional argument *flags*; it defaults to zero.  (The "
"format of *address* depends on the address family --- see above.)"
msgstr ""

# a0269dbd38b34fd4bc2c124a5ab1e580
#: ../Doc/library/socket.rst:713
msgid ""
"Receive up to *nbytes* bytes from the socket, storing the data into a buffer "
"rather than creating a new string.  If *nbytes* is not specified (or 0), "
"receive up to the size available in the given buffer.  Returns the number of "
"bytes received.  See the Unix manual page :manpage:`recv(2)` for the meaning "
"of the optional argument *flags*; it defaults to zero."
msgstr ""

# 1e9ad6ea62e64033bcd3d6051bfa1ac9
#: ../Doc/library/socket.rst:724
msgid ""
"Send data to the socket.  The socket must be connected to a remote socket.  "
"The optional *flags* argument has the same meaning as for :meth:`recv` "
"above. Returns the number of bytes sent. Applications are responsible for "
"checking that all data has been sent; if only some of the data was "
"transmitted, the application needs to attempt delivery of the remaining "
"data. For further information on this concept, consult the :ref:`socket-"
"howto`."
msgstr ""

# d5089e65192546788ed0020d4137307c
#: ../Doc/library/socket.rst:734
msgid ""
"Send data to the socket.  The socket must be connected to a remote socket.  "
"The optional *flags* argument has the same meaning as for :meth:`recv` "
"above. Unlike :meth:`send`, this method continues to send data from *string* "
"until either all data has been sent or an error occurs.  ``None`` is "
"returned on success.  On error, an exception is raised, and there is no way "
"to determine how much data, if any, was successfully sent."
msgstr ""

#: ../Doc/library/socket.rst:745
msgid ""
"Send data to the socket.  The socket should not be connected to a remote "
"socket, since the destination socket is specified by *address*.  The "
"optional *flags* argument has the same meaning as for :meth:`recv` above.  "
"Return the number of bytes sent. (The format of *address* depends on the "
"address family --- see above.)"
msgstr ""

#: ../Doc/library/socket.rst:754
msgid ""
"Set blocking or non-blocking mode of the socket: if *flag* is 0, the socket "
"is set to non-blocking, else to blocking mode.  Initially all sockets are in "
"blocking mode.  In non-blocking mode, if a :meth:`recv` call doesn't find "
"any data, or if a :meth:`send` call can't immediately dispose of the data, "
"a :exc:`error` exception is raised; in blocking mode, the calls block until "
"they can proceed. ``s.setblocking(0)`` is equivalent to ``s.settimeout(0.0)"
"``; ``s.setblocking(1)`` is equivalent to ``s.settimeout(None)``."
msgstr ""

#: ../Doc/library/socket.rst:765
msgid ""
"Set a timeout on blocking socket operations.  The *value* argument can be a "
"nonnegative float expressing seconds, or ``None``. If a float is given, "
"subsequent socket operations will raise a :exc:`timeout` exception if the "
"timeout period *value* has elapsed before the operation has completed.  "
"Setting a timeout of ``None`` disables timeouts on socket operations. ``s."
"settimeout(0.0)`` is equivalent to ``s.setblocking(0)``; ``s.settimeout(None)"
"`` is equivalent to ``s.setblocking(1)``."
msgstr ""

# 3fe40f2310094247a2a2e91002d5b342
#: ../Doc/library/socket.rst:778
msgid ""
"Return the timeout in seconds (float) associated with socket operations, or "
"``None`` if no timeout is set.  This reflects the last call to :meth:"
"`setblocking` or :meth:`settimeout`."
msgstr ""

#: ../Doc/library/socket.rst:784
msgid ""
"Some notes on socket blocking and timeouts: A socket object can be in one of "
"three modes: blocking, non-blocking, or timeout.  Sockets are always created "
"in blocking mode.  In blocking mode, operations block until complete or the "
"system returns an error (such as connection timed out).  In non-blocking "
"mode, operations fail (with an error that is unfortunately system-dependent) "
"if they cannot be completed immediately.  In timeout mode, operations fail "
"if they cannot be completed within the timeout specified for the socket or "
"if the system returns an error.  The :meth:`~socket.setblocking` method is "
"simply a shorthand for certain :meth:`~socket.settimeout` calls."
msgstr ""

#: ../Doc/library/socket.rst:794
msgid ""
"Timeout mode internally sets the socket in non-blocking mode.  The blocking "
"and timeout modes are shared between file descriptors and socket objects "
"that refer to the same network endpoint.  A consequence of this is that file "
"objects returned by the :meth:`~socket.makefile` method must only be used "
"when the socket is in blocking mode; in timeout or non-blocking mode file "
"operations that cannot be completed immediately will fail."
msgstr ""

#: ../Doc/library/socket.rst:801
msgid ""
"Note that the :meth:`~socket.connect` operation is subject to the timeout "
"setting, and in general it is recommended to call :meth:`~socket.settimeout` "
"before calling :meth:`~socket.connect` or pass a timeout parameter to :meth:"
"`create_connection`.  The system network stack may return a connection "
"timeout error of its own regardless of any Python socket timeout setting."
msgstr ""

# b63d335eeb8a40f4b2f2ae9577ba8fe0
#: ../Doc/library/socket.rst:812
msgid ""
"Set the value of the given socket option (see the Unix manual page :manpage:"
"`setsockopt(2)`).  The needed symbolic constants are defined in the :mod:"
"`socket` module (:const:`SO_\\*` etc.).  The value can be an integer or a "
"string representing a buffer.  In the latter case it is up to the caller to "
"ensure that the string contains the proper bits (see the optional built-in "
"module :mod:`struct` for a way to encode C structures as strings)."
msgstr ""

# 51e14c6e41244f15b5ee11712f378b1d
#: ../Doc/library/socket.rst:822
msgid ""
"Shut down one or both halves of the connection.  If *how* is :const:"
"`SHUT_RD`, further receives are disallowed.  If *how* is :const:`SHUT_WR`, "
"further sends are disallowed.  If *how* is :const:`SHUT_RDWR`, further sends "
"and receives are disallowed.  Depending on the platform, shutting down one "
"half of the connection can also close the opposite half (e.g. on Mac OS X, "
"``shutdown(SHUT_WR)`` does not allow further reads on the other end of the "
"connection)."
msgstr ""

#: ../Doc/library/socket.rst:829
msgid ""
"Note that there are no methods :meth:`read` or :meth:`write`; use :meth:"
"`~socket.recv` and :meth:`~socket.send` without *flags* argument instead."
msgstr ""

#: ../Doc/library/socket.rst:832
msgid ""
"Socket objects also have these (read-only) attributes that correspond to the "
"values given to the :class:`socket` constructor."
msgstr ""

#: ../Doc/library/socket.rst:838
msgid "The socket family."
msgstr ""

#: ../Doc/library/socket.rst:845
msgid "The socket type."
msgstr ""

#: ../Doc/library/socket.rst:852
msgid "The socket protocol."
msgstr ""

# 1925bd9e81b74a5da583d3201da37be6
#: ../Doc/library/socket.rst:862
msgid ""
"Here are four minimal example programs using the TCP/IP protocol: a server "
"that echoes all data that it receives back (servicing only one client), and "
"a client using it.  Note that a server must perform the sequence :func:"
"`socket`, :meth:`~socket.bind`, :meth:`~socket.listen`, :meth:`~socket."
"accept` (possibly repeating the :meth:`~socket.accept` to service more than "
"one client), while a client only needs the sequence :func:`socket`, :meth:"
"`~socket.connect`.  Also note that the server does not :meth:`~socket."
"sendall`/:meth:`~socket.recv` on the socket it is listening on but on the "
"new socket returned by :meth:`~socket.accept`."
msgstr ""

#: ../Doc/library/socket.rst:872
msgid "The first two examples support IPv4 only. ::"
msgstr ""

#: ../Doc/library/socket.rst:904
msgid ""
"The next two examples are identical to the above two, but support both IPv4 "
"and IPv6. The server side will listen to the first address family available "
"(it should listen to both instead). On most of IPv6-ready systems, IPv6 will "
"take precedence and the server may not accept IPv4 traffic. The client side "
"will try to connect to the all addresses returned as a result of the name "
"resolution, and sends traffic to the first one connected successfully. ::"
msgstr ""

#: ../Doc/library/socket.rst:977
msgid ""
"The last example shows how to write a very simple network sniffer with raw "
"sockets on Windows. The example requires administrator privileges to modify "
"the interface::"
msgstr ""

# 9bed06e7f4de463caf4970fdbb47d85b
#: ../Doc/library/socket.rst:1003
msgid ""
"Running an example several times with too small delay between executions, "
"could lead to this error::"
msgstr ""

# acaada7cf53649178845dae10e2d0872
#: ../Doc/library/socket.rst:1008
msgid ""
"This is because the previous execution has left the socket in a "
"``TIME_WAIT`` state, and can't be immediately reused."
msgstr ""

# 79135c22351744fdbb201f5e407fa674
#: ../Doc/library/socket.rst:1011
msgid ""
"There is a :mod:`socket` flag to set, in order to prevent this, :data:"
"`socket.SO_REUSEADDR`::"
msgstr ""

# c8853dffbce44b49b6d0f82c57f5a605
#: ../Doc/library/socket.rst:1018
msgid ""
"the :data:`SO_REUSEADDR` flag tells the kernel to reuse a local socket in "
"``TIME_WAIT`` state, without waiting for its natural timeout to expire."
msgstr ""

# 40c63ad9ecca42beb8ead06a47b9947a
#: ../Doc/library/socketserver.rst:2
msgid ":mod:`SocketServer` --- A framework for network servers"
msgstr ""

# 6366c90aee3e4cb0b901996455b1478f
#: ../Doc/library/socketserver.rst:9
msgid ""
"The :mod:`SocketServer` module has been renamed to :mod:`socketserver` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# 7a5fe90e7c2042afbd42c3d3f4487c5f
#: ../Doc/library/socketserver.rst:13
msgid "**Source code:** :source:`Lib/SocketServer.py`"
msgstr ""

# 6bd0457590434f868c0d23ebe456188d
#: ../Doc/library/socketserver.rst:17
msgid ""
"The :mod:`SocketServer` module simplifies the task of writing network "
"servers."
msgstr ""

#: ../Doc/library/socketserver.rst:19
msgid ""
"There are four basic server classes: :class:`TCPServer` uses the Internet "
"TCP protocol, which provides for continuous streams of data between the "
"client and server.  :class:`UDPServer` uses datagrams, which are discrete "
"packets of information that may arrive out of order or be lost while in "
"transit.  The more infrequently used :class:`UnixStreamServer` and :class:"
"`UnixDatagramServer` classes are similar, but use Unix domain sockets; "
"they're not available on non-Unix platforms.  For more details on network "
"programming, consult a book such as W. Richard Steven's UNIX Network "
"Programming or Ralph Davis's Win32 Network Programming."
msgstr ""

#: ../Doc/library/socketserver.rst:30
msgid ""
"These four classes process requests :dfn:`synchronously`; each request must "
"be completed before the next request can be started.  This isn't suitable if "
"each request takes a long time to complete, because it requires a lot of "
"computation, or because it returns a lot of data which the client is slow to "
"process.  The solution is to create a separate process or thread to handle "
"each request; the :class:`ForkingMixIn` and :class:`ThreadingMixIn` mix-in "
"classes can be used to support asynchronous behaviour."
msgstr ""

#: ../Doc/library/socketserver.rst:38
msgid ""
"Creating a server requires several steps.  First, you must create a request "
"handler class by subclassing the :class:`BaseRequestHandler` class and "
"overriding its :meth:`handle` method; this method will process incoming "
"requests.  Second, you must instantiate one of the server classes, passing "
"it the server's address and the request handler class.  Finally, call the :"
"meth:`handle_request` or :meth:`serve_forever` method of the server object "
"to process one or many requests."
msgstr ""

#: ../Doc/library/socketserver.rst:46
msgid ""
"When inheriting from :class:`ThreadingMixIn` for threaded connection "
"behavior, you should explicitly declare how you want your threads to behave "
"on an abrupt shutdown. The :class:`ThreadingMixIn` class defines an "
"attribute *daemon_threads*, which indicates whether or not the server should "
"wait for thread termination. You should set the flag explicitly if you would "
"like threads to behave autonomously; the default is :const:`False`, meaning "
"that Python will not exit until all threads created by :class:"
"`ThreadingMixIn` have exited."
msgstr ""

#: ../Doc/library/socketserver.rst:54
msgid ""
"Server classes have the same external methods and attributes, no matter what "
"network protocol they use."
msgstr ""

#: ../Doc/library/socketserver.rst:59
msgid "Server Creation Notes"
msgstr ""

#: ../Doc/library/socketserver.rst:61
msgid ""
"There are five classes in an inheritance diagram, four of which represent "
"synchronous servers of four types::"
msgstr ""

#: ../Doc/library/socketserver.rst:78
msgid ""
"Note that :class:`UnixDatagramServer` derives from :class:`UDPServer`, not "
"from :class:`UnixStreamServer` --- the only difference between an IP and a "
"Unix stream server is the address family, which is simply repeated in both "
"Unix server classes."
msgstr ""

#: ../Doc/library/socketserver.rst:83
msgid ""
"Forking and threading versions of each type of server can be created using "
"the :class:`ForkingMixIn` and :class:`ThreadingMixIn` mix-in classes.  For "
"instance, a threading UDP server class is created as follows::"
msgstr ""

# e9d0a14fd34b41f3a6c93f5b9b6a4176
#: ../Doc/library/socketserver.rst:89
msgid ""
"The mix-in class must come first, since it overrides a method defined in :"
"class:`UDPServer`.  Setting the various attributes also change the behavior "
"of the underlying server mechanism."
msgstr ""

#: ../Doc/library/socketserver.rst:93
msgid ""
"To implement a service, you must derive a class from :class:"
"`BaseRequestHandler` and redefine its :meth:`handle` method.  You can then "
"run various versions of the service by combining one of the server classes "
"with your request handler class.  The request handler class must be "
"different for datagram or stream services.  This can be hidden by using the "
"handler subclasses :class:`StreamRequestHandler` or :class:"
"`DatagramRequestHandler`."
msgstr ""

#: ../Doc/library/socketserver.rst:100
msgid ""
"Of course, you still have to use your head!  For instance, it makes no sense "
"to use a forking server if the service contains state in memory that can be "
"modified by different requests, since the modifications in the child process "
"would never reach the initial state kept in the parent process and passed to "
"each child.  In this case, you can use a threading server, but you will "
"probably have to use locks to protect the integrity of the shared data."
msgstr ""

#: ../Doc/library/socketserver.rst:107
msgid ""
"On the other hand, if you are building an HTTP server where all data is "
"stored externally (for instance, in the file system), a synchronous class "
"will essentially render the service \"deaf\" while one request is being "
"handled -- which may be for a very long time if a client is slow to receive "
"all the data it has requested.  Here a threading or forking server is "
"appropriate."
msgstr ""

#: ../Doc/library/socketserver.rst:113
msgid ""
"In some cases, it may be appropriate to process part of a request "
"synchronously, but to finish processing in a forked child depending on the "
"request data.  This can be implemented by using a synchronous server and "
"doing an explicit fork in the request handler class :meth:`handle` method."
msgstr ""

#: ../Doc/library/socketserver.rst:118
msgid ""
"Another approach to handling multiple simultaneous requests in an "
"environment that supports neither threads nor :func:`fork` (or where these "
"are too expensive or inappropriate for the service) is to maintain an "
"explicit table of partially finished requests and to use :func:`select` to "
"decide which request to work on next (or whether to handle a new incoming "
"request).  This is particularly important for stream services where each "
"client can potentially be connected for a long time (if threads or "
"subprocesses cannot be used). See :mod:`asyncore` for another way to manage "
"this."
msgstr ""

#: ../Doc/library/socketserver.rst:132
msgid "Server Objects"
msgstr ""

#: ../Doc/library/socketserver.rst:136
msgid ""
"This is the superclass of all Server objects in the module.  It defines the "
"interface, given below, but does not implement most of the methods, which is "
"done in subclasses."
msgstr ""

#: ../Doc/library/socketserver.rst:143
msgid ""
"Return an integer file descriptor for the socket on which the server is "
"listening.  This function is most commonly passed to :func:`select.select`, "
"to allow monitoring multiple servers in the same process."
msgstr ""

#: ../Doc/library/socketserver.rst:150
msgid ""
"Process a single request.  This function calls the following methods in "
"order: :meth:`get_request`, :meth:`verify_request`, and :meth:"
"`process_request`.  If the user-provided :meth:`handle` method of the "
"handler class raises an exception, the server's :meth:`handle_error` method "
"will be called.  If no request is received within :attr:`self.timeout` "
"seconds, :meth:`handle_timeout` will be called and :meth:`handle_request` "
"will return."
msgstr ""

# 2b66cc3f1c2243aab0c5f4c367777e8a
#: ../Doc/library/socketserver.rst:161
msgid ""
"Handle requests until an explicit :meth:`shutdown` request. Poll for "
"shutdown every *poll_interval* seconds. Ignores :attr:`self.timeout`. If you "
"need to do periodic tasks, do them in another thread."
msgstr ""

# 00e6a9bbc990495092bb5891c55daef8
#: ../Doc/library/socketserver.rst:168
msgid "Tell the :meth:`serve_forever` loop to stop and wait until it does."
msgstr ""

#: ../Doc/library/socketserver.rst:175
msgid ""
"The family of protocols to which the server's socket belongs. Common "
"examples are :const:`socket.AF_INET` and :const:`socket.AF_UNIX`."
msgstr ""

#: ../Doc/library/socketserver.rst:181
msgid ""
"The user-provided request handler class; an instance of this class is "
"created for each request."
msgstr ""

#: ../Doc/library/socketserver.rst:187
msgid ""
"The address on which the server is listening.  The format of addresses "
"varies depending on the protocol family; see the documentation for the "
"socket module for details.  For Internet protocols, this is a tuple "
"containing a string giving the address, and an integer port number: ``"
"('127.0.0.1', 80)``, for example."
msgstr ""

#: ../Doc/library/socketserver.rst:195
msgid ""
"The socket object on which the server will listen for incoming requests."
msgstr ""

#: ../Doc/library/socketserver.rst:198
msgid "The server classes support the following class variables:"
msgstr ""

#: ../Doc/library/socketserver.rst:204
msgid ""
"Whether the server will allow the reuse of an address. This defaults to :"
"const:`False`, and can be set in subclasses to change the policy."
msgstr ""

#: ../Doc/library/socketserver.rst:210
msgid ""
"The size of the request queue.  If it takes a long time to process a single "
"request, any requests that arrive while the server is busy are placed into a "
"queue, up to :attr:`request_queue_size` requests.  Once the queue is full, "
"further requests from clients will get a \"Connection denied\" error.  The "
"default value is usually 5, but this can be overridden by subclasses."
msgstr ""

#: ../Doc/library/socketserver.rst:219
msgid ""
"The type of socket used by the server; :const:`socket.SOCK_STREAM` and :"
"const:`socket.SOCK_DGRAM` are two common values."
msgstr ""

#: ../Doc/library/socketserver.rst:225
msgid ""
"Timeout duration, measured in seconds, or :const:`None` if no timeout is "
"desired.  If :meth:`handle_request` receives no incoming requests within the "
"timeout period, the :meth:`handle_timeout` method is called."
msgstr ""

#: ../Doc/library/socketserver.rst:230
msgid ""
"There are various server methods that can be overridden by subclasses of "
"base server classes like :class:`TCPServer`; these methods aren't useful to "
"external users of the server object."
msgstr ""

#: ../Doc/library/socketserver.rst:239
msgid ""
"Actually processes the request by instantiating :attr:`RequestHandlerClass` "
"and calling its :meth:`handle` method."
msgstr ""

#: ../Doc/library/socketserver.rst:245
msgid ""
"Must accept a request from the socket, and return a 2-tuple containing the "
"*new* socket object to be used to communicate with the client, and the "
"client's address."
msgstr ""

#: ../Doc/library/socketserver.rst:252
msgid ""
"This function is called if the :attr:`RequestHandlerClass`'s :meth:`handle` "
"method raises an exception.  The default action is to print the traceback to "
"standard output and continue handling further requests."
msgstr ""

#: ../Doc/library/socketserver.rst:259
msgid ""
"This function is called when the :attr:`timeout` attribute has been set to a "
"value other than :const:`None` and the timeout period has passed with no "
"requests being received.  The default action for forking servers is to "
"collect the status of any child processes that have exited, while in "
"threading servers this method does nothing."
msgstr ""

#: ../Doc/library/socketserver.rst:268
msgid ""
"Calls :meth:`finish_request` to create an instance of the :attr:"
"`RequestHandlerClass`.  If desired, this function can create a new process "
"or thread to handle the request; the :class:`ForkingMixIn` and :class:"
"`ThreadingMixIn` classes do this."
msgstr ""

#: ../Doc/library/socketserver.rst:280
msgid ""
"Called by the server's constructor to activate the server.  The default "
"behavior just :meth:`listen`\\ s to the server's socket. May be overridden."
msgstr ""

#: ../Doc/library/socketserver.rst:286
msgid ""
"Called by the server's constructor to bind the socket to the desired "
"address. May be overridden."
msgstr ""

#: ../Doc/library/socketserver.rst:292
msgid ""
"Must return a Boolean value; if the value is :const:`True`, the request will "
"be processed, and if it's :const:`False`, the request will be denied. This "
"function can be overridden to implement access controls for a server. The "
"default implementation always returns :const:`True`."
msgstr ""

#: ../Doc/library/socketserver.rst:299
msgid "RequestHandler Objects"
msgstr ""

#: ../Doc/library/socketserver.rst:301
msgid ""
"The request handler class must define a new :meth:`handle` method, and can "
"override any of the following methods.  A new instance is created for each "
"request."
msgstr ""

#: ../Doc/library/socketserver.rst:308
msgid ""
"Called after the :meth:`handle` method to perform any clean-up actions "
"required.  The default implementation does nothing.  If :meth:`setup` or :"
"meth:`handle` raise an exception, this function will not be called."
msgstr ""

#: ../Doc/library/socketserver.rst:315
msgid ""
"This function must do all the work required to service a request.  The "
"default implementation does nothing.  Several instance attributes are "
"available to it; the request is available as :attr:`self.request`; the "
"client address as :attr:`self.client_address`; and the server instance as :"
"attr:`self.server`, in case it needs access to per-server information."
msgstr ""

#: ../Doc/library/socketserver.rst:321
msgid ""
"The type of :attr:`self.request` is different for datagram or stream "
"services.  For stream services, :attr:`self.request` is a socket object; for "
"datagram services, :attr:`self.request` is a pair of string and socket. "
"However, this can be hidden by using the request handler subclasses :class:"
"`StreamRequestHandler` or :class:`DatagramRequestHandler`, which override "
"the :meth:`setup` and :meth:`finish` methods, and provide :attr:`self.rfile` "
"and :attr:`self.wfile` attributes.  :attr:`self.rfile` and :attr:`self."
"wfile` can be read or written, respectively, to get the request data or "
"return data to the client."
msgstr ""

#: ../Doc/library/socketserver.rst:334
msgid ""
"Called before the :meth:`handle` method to perform any initialization "
"actions required.  The default implementation does nothing."
msgstr ""

# bb68c0bbddcb4fd192801e91aa30d1a3
#: ../Doc/library/socketserver.rst:342
msgid ":class:`SocketServer.TCPServer` Example"
msgstr ""

#: ../Doc/library/socketserver.rst:344 ../Doc/library/socketserver.rst:444
msgid "This is the server side::"
msgstr ""

#: ../Doc/library/socketserver.rst:375
msgid ""
"An alternative request handler class that makes use of streams (file-like "
"objects that simplify communication by providing the standard file "
"interface)::"
msgstr ""

# 0c3322f8ba964f679f2e5cc6321ecfc7
#: ../Doc/library/socketserver.rst:390
msgid ""
"The difference is that the ``readline()`` call in the second handler will "
"call ``recv()`` multiple times until it encounters a newline character, "
"while the single ``recv()`` call in the first handler will just return what "
"has been sent from the client in one ``sendall()`` call."
msgstr ""

#: ../Doc/library/socketserver.rst:396 ../Doc/library/socketserver.rst:468
msgid "This is the client side::"
msgstr ""

#: ../Doc/library/socketserver.rst:421
msgid "The output of the example should look something like this:"
msgstr ""

#: ../Doc/library/socketserver.rst:423
msgid "Server::"
msgstr ""

#: ../Doc/library/socketserver.rst:431
msgid "Client::"
msgstr ""

# c026f21c968d4741aaf63b207a2a3b8a
#: ../Doc/library/socketserver.rst:442
msgid ":class:`SocketServer.UDPServer` Example"
msgstr ""

#: ../Doc/library/socketserver.rst:487
msgid ""
"The output of the example should look exactly like for the TCP server "
"example."
msgstr ""

#: ../Doc/library/socketserver.rst:491
msgid "Asynchronous Mixins"
msgstr ""

#: ../Doc/library/socketserver.rst:493
msgid ""
"To build asynchronous handlers, use the :class:`ThreadingMixIn` and :class:"
"`ForkingMixIn` classes."
msgstr ""

#: ../Doc/library/socketserver.rst:496
msgid "An example for the :class:`ThreadingMixIn` class::"
msgstr ""

#: ../Doc/library/socketserver.rst:545
msgid "The output of the example should look something like this::"
msgstr ""

#: ../Doc/library/socketserver.rst:554
msgid ""
"The :class:`ForkingMixIn` class is used in the same way, except that the "
"server will spawn a new process for each request."
msgstr ""

#: ../Doc/library/someos.rst:6
msgid "Optional Operating System Services"
msgstr ""

# 6297ceb4ce9d40028e99e1a8c5fbdc72
#: ../Doc/library/someos.rst:8
msgid ""
"The modules described in this chapter provide interfaces to operating system "
"features that are available on selected operating systems only. The "
"interfaces are generally modeled after the Unix or C interfaces but they are "
"available on some other systems as well (e.g. Windows or NT).  Here's an "
"overview:"
msgstr ""

#: ../Doc/library/spwd.rst:3
msgid ":mod:`spwd` --- The shadow password database"
msgstr ""

#: ../Doc/library/spwd.rst:12
msgid ""
"This module provides access to the Unix shadow password database. It is "
"available on various Unix versions."
msgstr ""

#: ../Doc/library/spwd.rst:15
msgid ""
"You must have enough privileges to access the shadow password database (this "
"usually means you have to be root)."
msgstr ""

#: ../Doc/library/spwd.rst:18
msgid ""
"Shadow password database entries are reported as a tuple-like object, whose "
"attributes correspond to the members of the ``spwd`` structure (Attribute "
"field below, see ``<shadow.h>``):"
msgstr ""

#: ../Doc/library/spwd.rst:25
msgid "``sp_nam``"
msgstr ""

#: ../Doc/library/spwd.rst:27
msgid "``sp_pwd``"
msgstr ""

#: ../Doc/library/spwd.rst:27
msgid "Encrypted password"
msgstr ""

#: ../Doc/library/spwd.rst:29
msgid "``sp_lstchg``"
msgstr ""

#: ../Doc/library/spwd.rst:29
msgid "Date of last change"
msgstr ""

#: ../Doc/library/spwd.rst:31
msgid "``sp_min``"
msgstr ""

#: ../Doc/library/spwd.rst:31
msgid "Minimal number of days between changes"
msgstr ""

#: ../Doc/library/spwd.rst:34
msgid "``sp_max``"
msgstr ""

#: ../Doc/library/spwd.rst:34
msgid "Maximum number of days between changes"
msgstr ""

#: ../Doc/library/spwd.rst:37
msgid "``sp_warn``"
msgstr ""

#: ../Doc/library/spwd.rst:37
msgid "Number of days before password expires to warn user about it"
msgstr ""

#: ../Doc/library/spwd.rst:40
msgid "``sp_inact``"
msgstr ""

#: ../Doc/library/spwd.rst:40
msgid "Number of days after password expires until account is blocked"
msgstr ""

#: ../Doc/library/spwd.rst:44 ../Doc/library/time.rst:418
msgid "7"
msgstr ""

#: ../Doc/library/spwd.rst:44
msgid "``sp_expire``"
msgstr ""

#: ../Doc/library/spwd.rst:44
msgid "Number of days since 1970-01-01 until account is disabled"
msgstr ""

#: ../Doc/library/spwd.rst:47
msgid "``sp_flag``"
msgstr ""

#: ../Doc/library/spwd.rst:47
msgid "Reserved"
msgstr ""

#: ../Doc/library/spwd.rst:50
msgid ""
"The sp_nam and sp_pwd items are strings, all others are integers. :exc:"
"`KeyError` is raised if the entry asked for cannot be found."
msgstr ""

#: ../Doc/library/spwd.rst:58
msgid "Return the shadow password database entry for the given user name."
msgstr ""

#: ../Doc/library/spwd.rst:63
msgid ""
"Return a list of all available shadow password database entries, in "
"arbitrary order."
msgstr ""

#: ../Doc/library/spwd.rst:73
msgid "An interface to the normal password database, similar to this."
msgstr ""

#: ../Doc/library/sqlite3.rst:2
msgid ":mod:`sqlite3` --- DB-API 2.0 interface for SQLite databases"
msgstr ""

#: ../Doc/library/sqlite3.rst:11
msgid ""
"SQLite is a C library that provides a lightweight disk-based database that "
"doesn't require a separate server process and allows accessing the database "
"using a nonstandard variant of the SQL query language. Some applications can "
"use SQLite for internal data storage.  It's also possible to prototype an "
"application using SQLite and then port the code to a larger database such as "
"PostgreSQL or Oracle."
msgstr ""

# 4ec4f1bb92cb4f91a0096c3a782c5437
#: ../Doc/library/sqlite3.rst:18
msgid ""
"The sqlite3 module was written by Gerhard Häring.  It provides a SQL "
"interface compliant with the DB-API 2.0 specification described by :pep:"
"`249`."
msgstr ""

# 566af72a724a470696780994d3828b9b
#: ../Doc/library/sqlite3.rst:21
msgid ""
"To use the module, you must first create a :class:`Connection` object that "
"represents the database.  Here the data will be stored in the :file:`example."
"db` file::"
msgstr ""

#: ../Doc/library/sqlite3.rst:28
msgid ""
"You can also supply the special name ``:memory:`` to create a database in "
"RAM."
msgstr ""

#: ../Doc/library/sqlite3.rst:30
msgid ""
"Once you have a :class:`Connection`, you can create a :class:`Cursor`  "
"object and call its :meth:`~Cursor.execute` method to perform SQL commands::"
msgstr ""

# 18ee87399a4b4fe58c7946d63c04263b
#: ../Doc/library/sqlite3.rst:48
msgid ""
"The data you've saved is persistent and is available in subsequent sessions::"
msgstr ""

# d592fdc871c34a4bb6bbdf3575d6bdd8
#: ../Doc/library/sqlite3.rst:54
msgid ""
"Usually your SQL operations will need to use values from Python variables.  "
"You shouldn't assemble your query using Python's string operations because "
"doing so is insecure; it makes your program vulnerable to an SQL injection "
"attack (see http://xkcd.com/327/ for humorous example of what can go wrong)."
msgstr ""

#: ../Doc/library/sqlite3.rst:59
msgid ""
"Instead, use the DB-API's parameter substitution.  Put ``?`` as a "
"placeholder wherever you want to use a value, and then provide a tuple of "
"values as the second argument to the cursor's :meth:`~Cursor.execute` "
"method.  (Other database modules may use a different placeholder, such as ``"
"%s`` or ``:1``.) For example::"
msgstr ""

#: ../Doc/library/sqlite3.rst:81
msgid ""
"To retrieve data after executing a SELECT statement, you can either treat "
"the cursor as an :term:`iterator`, call the cursor's :meth:`~Cursor."
"fetchone` method to retrieve a single matching row, or call :meth:`~Cursor."
"fetchall` to get a list of the matching rows."
msgstr ""

#: ../Doc/library/sqlite3.rst:86
msgid "This example uses the iterator form::"
msgstr ""

#: ../Doc/library/sqlite3.rst:100
msgid ""
"The pysqlite web page -- sqlite3 is developed externally under the name "
"\"pysqlite\"."
msgstr ""

#: ../Doc/library/sqlite3.rst:104
msgid ""
"The SQLite web page; the documentation describes the syntax and the "
"available data types for the supported SQL dialect."
msgstr ""

# 3a891bd50a644038bb2a94de5bff2c34
#: ../Doc/library/sqlite3.rst:108
msgid "Tutorial, reference and examples for learning SQL syntax."
msgstr ""

#: ../Doc/library/sqlite3.rst:111
msgid "PEP written by Marc-André Lemburg."
msgstr ""

#: ../Doc/library/sqlite3.rst:117
msgid "Module functions and constants"
msgstr ""

#: ../Doc/library/sqlite3.rst:122 ../Doc/library/sqlite3.rst:135
msgid ""
"This constant is meant to be used with the *detect_types* parameter of the :"
"func:`connect` function."
msgstr ""

#: ../Doc/library/sqlite3.rst:125
msgid ""
"Setting it makes the :mod:`sqlite3` module parse the declared type for each "
"column it returns.  It will parse out the first word of the declared type, "
"i. e.  for \"integer primary key\", it will parse out \"integer\", or for "
"\"number(10)\" it will parse out \"number\". Then for that column, it will "
"look into the converters dictionary and use the converter function "
"registered for that type there."
msgstr ""

#: ../Doc/library/sqlite3.rst:138
msgid ""
"Setting this makes the SQLite interface parse the column name for each "
"column it returns.  It will look for a string formed [mytype] in there, and "
"then decide that 'mytype' is the type of the column. It will try to find an "
"entry of 'mytype' in the converters dictionary and then use the converter "
"function found there to return the value. The column name found in :attr:"
"`Cursor.description` is only the first word of the column name, i.  e. if "
"you use something like ``'as \"x [datetime]\"'`` in your SQL, then we will "
"parse out everything until the first blank for the column name: the column "
"name would simply be \"x\"."
msgstr ""

#: ../Doc/library/sqlite3.rst:150
msgid ""
"Opens a connection to the SQLite database file *database*. You can use ``\":"
"memory:\"`` to open a database connection to a database that resides in RAM "
"instead of on disk."
msgstr ""

#: ../Doc/library/sqlite3.rst:154
msgid ""
"When a database is accessed by multiple connections, and one of the "
"processes modifies the database, the SQLite database is locked until that "
"transaction is committed. The *timeout* parameter specifies how long the "
"connection should wait for the lock to go away until raising an exception. "
"The default for the timeout parameter is 5.0 (five seconds)."
msgstr ""

#: ../Doc/library/sqlite3.rst:160
msgid ""
"For the *isolation_level* parameter, please see the :attr:`Connection."
"isolation_level` property of :class:`Connection` objects."
msgstr ""

#: ../Doc/library/sqlite3.rst:163
msgid ""
"SQLite natively supports only the types TEXT, INTEGER, FLOAT, BLOB and NULL. "
"If you want to use other types you must add support for them yourself. The "
"*detect_types* parameter and the using custom **converters** registered with "
"the module-level :func:`register_converter` function allow you to easily do "
"that."
msgstr ""

#: ../Doc/library/sqlite3.rst:168
msgid ""
"*detect_types* defaults to 0 (i. e. off, no type detection), you can set it "
"to any combination of :const:`PARSE_DECLTYPES` and :const:`PARSE_COLNAMES` "
"to turn type detection on."
msgstr ""

#: ../Doc/library/sqlite3.rst:172
msgid ""
"By default, the :mod:`sqlite3` module uses its :class:`Connection` class for "
"the connect call.  You can, however, subclass the :class:`Connection` class "
"and make :func:`connect` use your class instead by providing your class for "
"the *factory* parameter."
msgstr ""

#: ../Doc/library/sqlite3.rst:177
msgid "Consult the section :ref:`sqlite3-types` of this manual for details."
msgstr ""

#: ../Doc/library/sqlite3.rst:179
msgid ""
"The :mod:`sqlite3` module internally uses a statement cache to avoid SQL "
"parsing overhead. If you want to explicitly set the number of statements "
"that are cached for the connection, you can set the *cached_statements* "
"parameter. The currently implemented default is to cache 100 statements."
msgstr ""

#: ../Doc/library/sqlite3.rst:187
msgid ""
"Registers a callable to convert a bytestring from the database into a custom "
"Python type. The callable will be invoked for all database values that are "
"of the type *typename*. Confer the parameter *detect_types* of the :func:"
"`connect` function for how the type detection works. Note that the case of "
"*typename* and the name of the type in your query must match!"
msgstr ""

# 4004cf95e23a48acb7fac00a6bcfa5fa
#: ../Doc/library/sqlite3.rst:196
msgid ""
"Registers a callable to convert the custom Python type *type* into one of "
"SQLite's supported types. The callable *callable* accepts as single "
"parameter the Python value, and must return a value of the following types: "
"int, long, float, str (UTF-8 encoded), unicode or buffer."
msgstr ""

#: ../Doc/library/sqlite3.rst:204
msgid ""
"Returns :const:`True` if the string *sql* contains one or more complete SQL "
"statements terminated by semicolons. It does not verify that the SQL is "
"syntactically correct, only that there are no unclosed string literals and "
"the statement is terminated by a semicolon."
msgstr ""

#: ../Doc/library/sqlite3.rst:209
msgid ""
"This can be used to build a shell for SQLite, as in the following example:"
msgstr ""

#: ../Doc/library/sqlite3.rst:217
msgid ""
"By default you will not get any tracebacks in user-defined functions, "
"aggregates, converters, authorizer callbacks etc. If you want to debug them, "
"you can call this function with *flag* as True. Afterwards, you will get "
"tracebacks from callbacks on ``sys.stderr``. Use :const:`False` to disable "
"the feature again."
msgstr ""

#: ../Doc/library/sqlite3.rst:231
msgid "A SQLite database connection has the following attributes and methods:"
msgstr ""

#: ../Doc/library/sqlite3.rst:235
msgid ""
"Get or set the current isolation level. :const:`None` for autocommit mode or "
"one of \"DEFERRED\", \"IMMEDIATE\" or \"EXCLUSIVE\". See section :ref:"
"`sqlite3-controlling-transactions` for a more detailed explanation."
msgstr ""

#: ../Doc/library/sqlite3.rst:242
msgid ""
"The cursor method accepts a single optional parameter *cursorClass*. If "
"supplied, this must be a custom cursor class that extends :class:`sqlite3."
"Cursor`."
msgstr ""

# 34c9c8ec497643ff9911da95e99ac63a
#: ../Doc/library/sqlite3.rst:248
msgid ""
"This method commits the current transaction. If you don't call this method, "
"anything you did since the last call to ``commit()`` is not visible from "
"other database connections. If you wonder why you don't see the data you've "
"written to the database, please check you didn't forget to call this method."
msgstr ""

#: ../Doc/library/sqlite3.rst:255
msgid ""
"This method rolls back any changes to the database since the last call to :"
"meth:`commit`."
msgstr ""

#: ../Doc/library/sqlite3.rst:260
msgid ""
"This closes the database connection. Note that this does not automatically "
"call :meth:`commit`. If you just close your database connection without "
"calling :meth:`commit` first, your changes will be lost!"
msgstr ""

# 780cd2e2fc7746a3ae8acdbf0729f563
#: ../Doc/library/sqlite3.rst:266
msgid ""
"This is a nonstandard shortcut that creates an intermediate cursor object by "
"calling the cursor method, then calls the cursor's :meth:`execute <Cursor."
"execute>` method with the parameters given."
msgstr ""

# 50fe067f8bd94f6d99a2b92ad88b9ad7
#: ../Doc/library/sqlite3.rst:273
msgid ""
"This is a nonstandard shortcut that creates an intermediate cursor object by "
"calling the cursor method, then calls the cursor's :meth:`executemany "
"<Cursor.executemany>` method with the parameters given."
msgstr ""

# c2d98088aec04573bfc5966de2bf61b4
#: ../Doc/library/sqlite3.rst:279
msgid ""
"This is a nonstandard shortcut that creates an intermediate cursor object by "
"calling the cursor method, then calls the cursor's :meth:`executescript "
"<Cursor.executescript>` method with the parameters given."
msgstr ""

#: ../Doc/library/sqlite3.rst:286
msgid ""
"Creates a user-defined function that you can later use from within SQL "
"statements under the function name *name*. *num_params* is the number of "
"parameters the function accepts, and *func* is a Python callable that is "
"called as the SQL function."
msgstr ""

# 179262131cd540a4926774ac0008fa14
#: ../Doc/library/sqlite3.rst:291
msgid ""
"The function can return any of the types supported by SQLite: unicode, str, "
"int, long, float, buffer and None."
msgstr ""

#: ../Doc/library/sqlite3.rst:301
msgid "Creates a user-defined aggregate function."
msgstr ""

#: ../Doc/library/sqlite3.rst:303
msgid ""
"The aggregate class must implement a ``step`` method, which accepts the "
"number of parameters *num_params*, and a ``finalize`` method which will "
"return the final result of the aggregate."
msgstr ""

# 496e1954edf64512bf57dcde38445108
#: ../Doc/library/sqlite3.rst:307
msgid ""
"The ``finalize`` method can return any of the types supported by SQLite: "
"unicode, str, int, long, float, buffer and None."
msgstr ""

#: ../Doc/library/sqlite3.rst:317
msgid ""
"Creates a collation with the specified *name* and *callable*. The callable "
"will be passed two string arguments. It should return -1 if the first is "
"ordered lower than the second, 0 if they are ordered equal and 1 if the "
"first is ordered higher than the second.  Note that this controls sorting "
"(ORDER BY in SQL) so your comparisons don't affect other SQL operations."
msgstr ""

#: ../Doc/library/sqlite3.rst:323
msgid ""
"Note that the callable will get its parameters as Python bytestrings, which "
"will normally be encoded in UTF-8."
msgstr ""

#: ../Doc/library/sqlite3.rst:326
msgid ""
"The following example shows a custom collation that sorts \"the wrong way\":"
msgstr ""

#: ../Doc/library/sqlite3.rst:330
msgid ""
"To remove a collation, call ``create_collation`` with None as callable::"
msgstr ""

#: ../Doc/library/sqlite3.rst:337
msgid ""
"You can call this method from a different thread to abort any queries that "
"might be executing on the connection. The query will then abort and the "
"caller will get an exception."
msgstr ""

#: ../Doc/library/sqlite3.rst:344
msgid ""
"This routine registers a callback. The callback is invoked for each attempt "
"to access a column of a table in the database. The callback should return :"
"const:`SQLITE_OK` if access is allowed, :const:`SQLITE_DENY` if the entire "
"SQL statement should be aborted with an error and :const:`SQLITE_IGNORE` if "
"the column should be treated as a NULL value. These constants are available "
"in the :mod:`sqlite3` module."
msgstr ""

#: ../Doc/library/sqlite3.rst:351
msgid ""
"The first argument to the callback signifies what kind of operation is to be "
"authorized. The second and third argument will be arguments or :const:`None` "
"depending on the first argument. The 4th argument is the name of the "
"database (\"main\", \"temp\", etc.) if applicable. The 5th argument is the "
"name of the inner-most trigger or view that is responsible for the access "
"attempt or :const:`None` if this access attempt is directly from input SQL "
"code."
msgstr ""

#: ../Doc/library/sqlite3.rst:358
msgid ""
"Please consult the SQLite documentation about the possible values for the "
"first argument and the meaning of the second and third argument depending on "
"the first one. All necessary constants are available in the :mod:`sqlite3` "
"module."
msgstr ""

#: ../Doc/library/sqlite3.rst:365
msgid ""
"This routine registers a callback. The callback is invoked for every *n* "
"instructions of the SQLite virtual machine. This is useful if you want to "
"get called from SQLite during long-running operations, for example to update "
"a GUI."
msgstr ""

#: ../Doc/library/sqlite3.rst:370
msgid ""
"If you want to clear any previously installed progress handler, call the "
"method with :const:`None` for *handler*."
msgstr ""

# 8a358f6f9898494fb5b42816551487f5
#: ../Doc/library/sqlite3.rst:378
msgid ""
"This routine allows/disallows the SQLite engine to load SQLite extensions "
"from shared libraries.  SQLite extensions can define new functions, "
"aggregates or whole new virtual table implementations.  One well-known "
"extension is the fulltext-search extension distributed with SQLite."
msgstr ""

# d87aa5bfdf804d888c37bcecb35b80ba
# 9fae1b9d14104b7ba08780ec08a11e6a
#: ../Doc/library/sqlite3.rst:383 ../Doc/library/sqlite3.rst:395
msgid "Loadable extensions are disabled by default. See [#f1]_."
msgstr ""

# 692cb62d0594401691182ae3208b8956
#: ../Doc/library/sqlite3.rst:391
msgid ""
"This routine loads a SQLite extension from a shared library.  You have to "
"enable extension loading with :meth:`enable_load_extension` before you can "
"use this routine."
msgstr ""

#: ../Doc/library/sqlite3.rst:401
msgid ""
"You can change this attribute to a callable that accepts the cursor and the "
"original row as a tuple and will return the real result row.  This way, you "
"can implement more advanced ways of returning results, such  as returning an "
"object that can also access columns by name."
msgstr ""

#: ../Doc/library/sqlite3.rst:410
msgid ""
"If returning a tuple doesn't suffice and you want name-based access to "
"columns, you should consider setting :attr:`row_factory` to the highly-"
"optimized :class:`sqlite3.Row` type. :class:`Row` provides both index-based "
"and case-insensitive name-based access to columns with almost no memory "
"overhead. It will probably be better than your own custom dictionary-based "
"approach or even a db_row based solution."
msgstr ""

# c5523ad78fd64197b5717b529e6dad5b
#: ../Doc/library/sqlite3.rst:422
msgid ""
"Using this attribute you can control what objects are returned for the "
"``TEXT`` data type. By default, this attribute is set to :class:`unicode` "
"and the :mod:`sqlite3` module will return Unicode objects for ``TEXT``. If "
"you want to return bytestrings instead, you can set it to :class:`str`."
msgstr ""

# 03dcf287807d4c58b39f46b1d5d6feb3
#: ../Doc/library/sqlite3.rst:427
msgid ""
"For efficiency reasons, there's also a way to return Unicode objects only "
"for non-ASCII data, and bytestrings otherwise. To activate it, set this "
"attribute to :const:`sqlite3.OptimizedUnicode`."
msgstr ""

#: ../Doc/library/sqlite3.rst:431
msgid ""
"You can also set it to any other callable that accepts a single bytestring "
"parameter and returns the resulting object."
msgstr ""

#: ../Doc/library/sqlite3.rst:434
msgid "See the following example code for illustration:"
msgstr ""

#: ../Doc/library/sqlite3.rst:441
msgid ""
"Returns the total number of database rows that have been modified, inserted, "
"or deleted since the database connection was opened."
msgstr ""

#: ../Doc/library/sqlite3.rst:447
msgid ""
"Returns an iterator to dump the database in an SQL text format.  Useful when "
"saving an in-memory database for later restoration.  This function provides "
"the same capabilities as the :kbd:`.dump` command in the :program:`sqlite3` "
"shell."
msgstr ""

#: ../Doc/library/sqlite3.rst:468
msgid "Cursor Objects"
msgstr ""

# c47ce25f1a7c4367ae74d2fb3dde46aa
#: ../Doc/library/sqlite3.rst:472
msgid "A :class:`Cursor` instance has the following attributes and methods."
msgstr ""

# 913dced45d9e43c288ac9a53d1241ee7
#: ../Doc/library/sqlite3.rst:476
msgid ""
"Executes an SQL statement. The SQL statement may be parameterized (i. e. "
"placeholders instead of SQL literals). The :mod:`sqlite3` module supports "
"two kinds of placeholders: question marks (qmark style) and named "
"placeholders (named style)."
msgstr ""

# d2666e9d1eaf48cdac98f191782fc08e
#: ../Doc/library/sqlite3.rst:481
msgid "Here's an example of both styles:"
msgstr ""

#: ../Doc/library/sqlite3.rst:485
msgid ""
":meth:`execute` will only execute a single SQL statement. If you try to "
"execute more than one statement with it, it will raise a Warning. Use :meth:"
"`executescript` if you want to execute multiple SQL statements with one call."
msgstr ""

#: ../Doc/library/sqlite3.rst:493
msgid ""
"Executes an SQL command against all parameter sequences or mappings found in "
"the sequence *sql*.  The :mod:`sqlite3` module also allows using an :term:"
"`iterator` yielding parameters instead of a sequence."
msgstr ""

#: ../Doc/library/sqlite3.rst:499
msgid "Here's a shorter example using a :term:`generator`:"
msgstr ""

#: ../Doc/library/sqlite3.rst:506
msgid ""
"This is a nonstandard convenience method for executing multiple SQL "
"statements at once. It issues a ``COMMIT`` statement first, then executes "
"the SQL script it gets as a parameter."
msgstr ""

# 4c4d0800dfa045b48d83ace1d48b7419
#: ../Doc/library/sqlite3.rst:510
msgid "*sql_script* can be a bytestring or a Unicode string."
msgstr ""

#: ../Doc/library/sqlite3.rst:519
msgid ""
"Fetches the next row of a query result set, returning a single sequence, or :"
"const:`None` when no more data is available."
msgstr ""

#: ../Doc/library/sqlite3.rst:525
msgid ""
"Fetches the next set of rows of a query result, returning a list.  An empty "
"list is returned when no more rows are available."
msgstr ""

#: ../Doc/library/sqlite3.rst:528
msgid ""
"The number of rows to fetch per call is specified by the *size* parameter. "
"If it is not given, the cursor's arraysize determines the number of rows to "
"be fetched. The method should try to fetch as many rows as indicated by the "
"size parameter. If this is not possible due to the specified number of rows "
"not being available, fewer rows may be returned."
msgstr ""

#: ../Doc/library/sqlite3.rst:534
msgid ""
"Note there are performance considerations involved with the *size* "
"parameter. For optimal performance, it is usually best to use the arraysize "
"attribute. If the *size* parameter is used, then it is best for it to retain "
"the same value from one :meth:`fetchmany` call to the next."
msgstr ""

#: ../Doc/library/sqlite3.rst:541
msgid ""
"Fetches all (remaining) rows of a query result, returning a list.  Note that "
"the cursor's arraysize attribute can affect the performance of this "
"operation. An empty list is returned when no rows are available."
msgstr ""

#: ../Doc/library/sqlite3.rst:548
msgid ""
"Although the :class:`Cursor` class of the :mod:`sqlite3` module implements "
"this attribute, the database engine's own support for the determination of "
"\"rows affected\"/\"rows selected\" is quirky."
msgstr ""

#: ../Doc/library/sqlite3.rst:552
msgid ""
"For :meth:`executemany` statements, the number of modifications are summed "
"up into :attr:`rowcount`."
msgstr ""

# 1759e207f08c4f0bbea223f4c96d14ef
#: ../Doc/library/sqlite3.rst:555
msgid ""
"As required by the Python DB API Spec, the :attr:`rowcount` attribute \"is "
"-1 in case no ``executeXX()`` has been performed on the cursor or the "
"rowcount of the last operation is not determinable by the interface\". This "
"includes ``SELECT`` statements because we cannot determine the number of "
"rows a query produced until all rows were fetched."
msgstr ""

# 28ba7a6d5b0145b4be419006d62fc675
#: ../Doc/library/sqlite3.rst:561
msgid ""
"With SQLite versions before 3.6.5, :attr:`rowcount` is set to 0 if you make "
"a ``DELETE FROM table`` without any condition."
msgstr ""

#: ../Doc/library/sqlite3.rst:566
msgid ""
"This read-only attribute provides the rowid of the last modified row. It is "
"only set if you issued a ``INSERT`` statement using the :meth:`execute` "
"method. For operations other than ``INSERT`` or when :meth:`executemany` is "
"called, :attr:`lastrowid` is set to :const:`None`."
msgstr ""

#: ../Doc/library/sqlite3.rst:573
msgid ""
"This read-only attribute provides the column names of the last query. To "
"remain compatible with the Python DB API, it returns a 7-tuple for each "
"column where the last six items of each tuple are :const:`None`."
msgstr ""

#: ../Doc/library/sqlite3.rst:577
msgid "It is set for ``SELECT`` statements without any matching rows as well."
msgstr ""

#: ../Doc/library/sqlite3.rst:582
msgid "Row Objects"
msgstr ""

#: ../Doc/library/sqlite3.rst:586
msgid ""
"A :class:`Row` instance serves as a highly optimized :attr:`~Connection."
"row_factory` for :class:`Connection` objects. It tries to mimic a tuple in "
"most of its features."
msgstr ""

#: ../Doc/library/sqlite3.rst:590
msgid ""
"It supports mapping access by column name and index, iteration, "
"representation, equality testing and :func:`len`."
msgstr ""

#: ../Doc/library/sqlite3.rst:593
msgid ""
"If two :class:`Row` objects have exactly the same columns and their members "
"are equal, they compare equal."
msgstr ""

#: ../Doc/library/sqlite3.rst:601
msgid ""
"This method returns a tuple of column names. Immediately after a query, it "
"is the first member of each tuple in :attr:`Cursor.description`."
msgstr ""

#: ../Doc/library/sqlite3.rst:606
msgid "Let's assume we initialize a table as in the example given above::"
msgstr ""

#: ../Doc/library/sqlite3.rst:618
msgid "Now we plug :class:`Row` in::"
msgstr ""

#: ../Doc/library/sqlite3.rst:650
msgid "SQLite and Python types"
msgstr ""

#: ../Doc/library/sqlite3.rst:656
msgid ""
"SQLite natively supports the following types: ``NULL``, ``INTEGER``, "
"``REAL``, ``TEXT``, ``BLOB``."
msgstr ""

#: ../Doc/library/sqlite3.rst:659
msgid ""
"The following Python types can thus be sent to SQLite without any problem:"
msgstr ""

#: ../Doc/library/sqlite3.rst:662 ../Doc/library/sqlite3.rst:682
msgid "SQLite type"
msgstr ""

#: ../Doc/library/sqlite3.rst:664 ../Doc/library/sqlite3.rst:684
#: ../Doc/library/urlparse.rst:108 ../Doc/library/urlparse.rst:110
#: ../Doc/library/urlparse.rst:112 ../Doc/library/urlparse.rst:114
#: ../Doc/library/urlparse.rst:209 ../Doc/library/urlparse.rst:211
#: ../Doc/library/urlparse.rst:213 ../Doc/library/urlparse.rst:215
msgid ":const:`None`"
msgstr ""

#: ../Doc/library/sqlite3.rst:664 ../Doc/library/sqlite3.rst:684
msgid "``NULL``"
msgstr ""

#: ../Doc/library/sqlite3.rst:666
msgid ":class:`int`"
msgstr ""

#: ../Doc/library/sqlite3.rst:666 ../Doc/library/sqlite3.rst:668
#: ../Doc/library/sqlite3.rst:686
msgid "``INTEGER``"
msgstr ""

# 92681621960d43328316fe2560689999
#: ../Doc/library/sqlite3.rst:668
msgid ":class:`long`"
msgstr ""

#: ../Doc/library/sqlite3.rst:670 ../Doc/library/sqlite3.rst:689
msgid ":class:`float`"
msgstr ""

#: ../Doc/library/sqlite3.rst:670 ../Doc/library/sqlite3.rst:689
msgid "``REAL``"
msgstr ""

# af6c7e2e931d448e965510cd03b4f328
#: ../Doc/library/sqlite3.rst:672
msgid ":class:`str` (UTF8-encoded)"
msgstr ""

#: ../Doc/library/sqlite3.rst:672 ../Doc/library/sqlite3.rst:674
#: ../Doc/library/sqlite3.rst:691
msgid "``TEXT``"
msgstr ""

# 4ea5dd241b944d479cc189b651e6881d
#: ../Doc/library/sqlite3.rst:674
msgid ":class:`unicode`"
msgstr ""

# e67a6473544a48919e3bfcace3810040
# 2f2f7eb3f4634b4baf436bb8aa0b89c4
#: ../Doc/library/sqlite3.rst:676 ../Doc/library/sqlite3.rst:694
msgid ":class:`buffer`"
msgstr ""

#: ../Doc/library/sqlite3.rst:676 ../Doc/library/sqlite3.rst:694
msgid "``BLOB``"
msgstr ""

#: ../Doc/library/sqlite3.rst:679
msgid "This is how SQLite types are converted to Python types by default:"
msgstr ""

# 2179a4ab072f41b6a62528fb3b2852d9
#: ../Doc/library/sqlite3.rst:686
msgid ":class:`int` or :class:`long`, depending on size"
msgstr ""

# 3d79810516644b27b2d65e4033f5de90
#: ../Doc/library/sqlite3.rst:691
msgid ""
"depends on :attr:`~Connection.text_factory`, :class:`unicode` by default"
msgstr ""

#: ../Doc/library/sqlite3.rst:697
msgid ""
"The type system of the :mod:`sqlite3` module is extensible in two ways: you "
"can store additional Python types in a SQLite database via object "
"adaptation, and you can let the :mod:`sqlite3` module convert SQLite types "
"to different Python types via converters."
msgstr ""

#: ../Doc/library/sqlite3.rst:704
msgid "Using adapters to store additional Python types in SQLite databases"
msgstr ""

# dea1c7db32044e29b62a8bc3109282a4
#: ../Doc/library/sqlite3.rst:706
msgid ""
"As described before, SQLite supports only a limited set of types natively. "
"To use other Python types with SQLite, you must **adapt** them to one of the "
"sqlite3 module's supported types for SQLite: one of NoneType, int, long, "
"float, str, unicode, buffer."
msgstr ""

#: ../Doc/library/sqlite3.rst:711
msgid ""
"The :mod:`sqlite3` module uses Python object adaptation, as described in :"
"pep:`246` for this.  The protocol to use is :class:`PrepareProtocol`."
msgstr ""

#: ../Doc/library/sqlite3.rst:714
msgid ""
"There are two ways to enable the :mod:`sqlite3` module to adapt a custom "
"Python type to one of the supported ones."
msgstr ""

#: ../Doc/library/sqlite3.rst:719
msgid "Letting your object adapt itself"
msgstr ""

#: ../Doc/library/sqlite3.rst:721
msgid ""
"This is a good approach if you write the class yourself. Let's suppose you "
"have a class like this::"
msgstr ""

#: ../Doc/library/sqlite3.rst:728
msgid ""
"Now you want to store the point in a single SQLite column.  First you'll "
"have to choose one of the supported types first to be used for representing "
"the point. Let's just use str and separate the coordinates using a "
"semicolon. Then you need to give your class a method ``__conform__(self, "
"protocol)`` which must return the converted value. The parameter *protocol* "
"will be :class:`PrepareProtocol`."
msgstr ""

#: ../Doc/library/sqlite3.rst:738
msgid "Registering an adapter callable"
msgstr ""

#: ../Doc/library/sqlite3.rst:740
msgid ""
"The other possibility is to create a function that converts the type to the "
"string representation and register the function with :meth:"
"`register_adapter`."
msgstr ""

# fee3f35b2fda459db8bd3263f55f3d3f
#: ../Doc/library/sqlite3.rst:745
msgid ""
"The type/class to adapt must be a :term:`new-style class`, i. e. it must "
"have :class:`object` as one of its bases."
msgstr ""

#: ../Doc/library/sqlite3.rst:750
msgid ""
"The :mod:`sqlite3` module has two default adapters for Python's built-in :"
"class:`datetime.date` and :class:`datetime.datetime` types.  Now let's "
"suppose we want to store :class:`datetime.datetime` objects not in ISO "
"representation, but as a Unix timestamp."
msgstr ""

#: ../Doc/library/sqlite3.rst:759
msgid "Converting SQLite values to custom Python types"
msgstr ""

#: ../Doc/library/sqlite3.rst:761
msgid ""
"Writing an adapter lets you send custom Python types to SQLite. But to make "
"it really useful we need to make the Python to SQLite to Python roundtrip "
"work."
msgstr ""

#: ../Doc/library/sqlite3.rst:764
msgid "Enter converters."
msgstr ""

#: ../Doc/library/sqlite3.rst:766
msgid ""
"Let's go back to the :class:`Point` class. We stored the x and y coordinates "
"separated via semicolons as strings in SQLite."
msgstr ""

#: ../Doc/library/sqlite3.rst:769
msgid ""
"First, we'll define a converter function that accepts the string as a "
"parameter and constructs a :class:`Point` object from it."
msgstr ""

#: ../Doc/library/sqlite3.rst:774
msgid ""
"Converter functions **always** get called with a string, no matter under "
"which data type you sent the value to SQLite."
msgstr ""

#: ../Doc/library/sqlite3.rst:783
msgid ""
"Now you need to make the :mod:`sqlite3` module know that what you select "
"from the database is actually a point. There are two ways of doing this:"
msgstr ""

#: ../Doc/library/sqlite3.rst:786
msgid "Implicitly via the declared type"
msgstr ""

#: ../Doc/library/sqlite3.rst:788
msgid "Explicitly via the column name"
msgstr ""

#: ../Doc/library/sqlite3.rst:790
msgid ""
"Both ways are described in section :ref:`sqlite3-module-contents`, in the "
"entries for the constants :const:`PARSE_DECLTYPES` and :const:"
"`PARSE_COLNAMES`."
msgstr ""

#: ../Doc/library/sqlite3.rst:793
msgid "The following example illustrates both approaches."
msgstr ""

#: ../Doc/library/sqlite3.rst:799
msgid "Default adapters and converters"
msgstr ""

#: ../Doc/library/sqlite3.rst:801
msgid ""
"There are default adapters for the date and datetime types in the datetime "
"module. They will be sent as ISO dates/ISO timestamps to SQLite."
msgstr ""

#: ../Doc/library/sqlite3.rst:804
msgid ""
"The default converters are registered under the name \"date\" for :class:"
"`datetime.date` and under the name \"timestamp\" for :class:`datetime."
"datetime`."
msgstr ""

#: ../Doc/library/sqlite3.rst:808
msgid ""
"This way, you can use date/timestamps from Python without any additional "
"fiddling in most cases. The format of the adapters is also compatible with "
"the experimental SQLite date/time functions."
msgstr ""

#: ../Doc/library/sqlite3.rst:812
msgid "The following example demonstrates this."
msgstr ""

#: ../Doc/library/sqlite3.rst:820
msgid "Controlling Transactions"
msgstr ""

#: ../Doc/library/sqlite3.rst:822
msgid ""
"By default, the :mod:`sqlite3` module opens transactions implicitly before a "
"Data Modification Language (DML)  statement (i.e. ``INSERT``/``UPDATE``/"
"``DELETE``/``REPLACE``), and commits transactions implicitly before a non-"
"DML, non-query statement (i. e. anything other than ``SELECT`` or the "
"aforementioned)."
msgstr ""

# a425766a1d07411ba2b7889d6b124c4b
#: ../Doc/library/sqlite3.rst:828
msgid ""
"So if you are within a transaction and issue a command like ``CREATE "
"TABLE ...``, ``VACUUM``, ``PRAGMA``, the :mod:`sqlite3` module will commit "
"implicitly before executing that command. There are two reasons for doing "
"that. The first is that some of these commands don't work within "
"transactions. The other reason is that sqlite3 needs to keep track of the "
"transaction state (if a transaction is active or not)."
msgstr ""

#: ../Doc/library/sqlite3.rst:835
msgid ""
"You can control which kind of ``BEGIN`` statements sqlite3 implicitly "
"executes (or none at all) via the *isolation_level* parameter to the :func:"
"`connect` call, or via the :attr:`isolation_level` property of connections."
msgstr ""

#: ../Doc/library/sqlite3.rst:839
msgid ""
"If you want **autocommit mode**, then set :attr:`isolation_level` to None."
msgstr ""

#: ../Doc/library/sqlite3.rst:841
msgid ""
"Otherwise leave it at its default, which will result in a plain \"BEGIN\" "
"statement, or set it to one of SQLite's supported isolation levels: "
"\"DEFERRED\", \"IMMEDIATE\" or \"EXCLUSIVE\"."
msgstr ""

#: ../Doc/library/sqlite3.rst:848
msgid "Using :mod:`sqlite3` efficiently"
msgstr ""

#: ../Doc/library/sqlite3.rst:852
msgid "Using shortcut methods"
msgstr ""

#: ../Doc/library/sqlite3.rst:854
msgid ""
"Using the nonstandard :meth:`execute`, :meth:`executemany` and :meth:"
"`executescript` methods of the :class:`Connection` object, your code can be "
"written more concisely because you don't have to create the (often "
"superfluous) :class:`Cursor` objects explicitly. Instead, the :class:"
"`Cursor` objects are created implicitly and these shortcut methods return "
"the cursor objects. This way, you can execute a ``SELECT`` statement and "
"iterate over it directly using only a single call on the :class:`Connection` "
"object."
msgstr ""

#: ../Doc/library/sqlite3.rst:866
msgid "Accessing columns by name instead of by index"
msgstr ""

#: ../Doc/library/sqlite3.rst:868
msgid ""
"One useful feature of the :mod:`sqlite3` module is the built-in :class:"
"`sqlite3.Row` class designed to be used as a row factory."
msgstr ""

#: ../Doc/library/sqlite3.rst:871
msgid ""
"Rows wrapped with this class can be accessed both by index (like tuples) and "
"case-insensitively by name:"
msgstr ""

#: ../Doc/library/sqlite3.rst:878
msgid "Using the connection as a context manager"
msgstr ""

#: ../Doc/library/sqlite3.rst:882
msgid ""
"Connection objects can be used as context managers that automatically commit "
"or rollback transactions.  In the event of an exception, the transaction is "
"rolled back; otherwise, the transaction is committed:"
msgstr ""

# 9514fabe3e1947c4abbd8e41d1779d35
#: ../Doc/library/sqlite3.rst:891
msgid "Common issues"
msgstr ""

# b92229092e264247bdd8ff2c8db9fc7f
#: ../Doc/library/sqlite3.rst:894
msgid "Multithreading"
msgstr ""

# d6395be62a624525b99ef85400e21203
#: ../Doc/library/sqlite3.rst:896
msgid ""
"Older SQLite versions had issues with sharing connections between threads. "
"That's why the Python module disallows sharing connections and cursors "
"between threads. If you still try to do so, you will get an exception at "
"runtime."
msgstr ""

# 1116dee094444761bfb8bfbabdfa426d
#: ../Doc/library/sqlite3.rst:900
msgid ""
"The only exception is calling the :meth:`~Connection.interrupt` method, "
"which only makes sense to call from a different thread."
msgstr ""

# 873b606e5d234cff9746e8d487f50b63
#: ../Doc/library/sqlite3.rst:905
msgid ""
"The sqlite3 module is not built with loadable extension support by default, "
"because some platforms (notably Mac OS X) have SQLite libraries which are "
"compiled without this feature. To get loadable extension support, you must "
"modify setup.py and remove the line that sets SQLITE_OMIT_LOAD_EXTENSION."
msgstr ""

# c3c5564d23e14714bd250453bb43abb4
#: ../Doc/library/ssl.rst:2
msgid ":mod:`ssl` --- TLS/SSL wrapper for socket objects"
msgstr ""

# a4143367618a433b880e47fab0545b13
#: ../Doc/library/ssl.rst:17
msgid "**Source code:** :source:`Lib/ssl.py`"
msgstr ""

#: ../Doc/library/ssl.rst:21
msgid ""
"This module provides access to Transport Layer Security (often known as "
"\"Secure Sockets Layer\") encryption and peer authentication facilities for "
"network sockets, both client-side and server-side.  This module uses the "
"OpenSSL library. It is available on all modern Unix systems, Windows, Mac OS "
"X, and probably additional platforms, as long as OpenSSL is installed on "
"that platform."
msgstr ""

#: ../Doc/library/ssl.rst:29
msgid ""
"Some behavior may be platform dependent, since calls are made to the "
"operating system socket APIs.  The installed version of OpenSSL may also "
"cause variations in behavior."
msgstr ""

#: ../Doc/library/ssl.rst:33
msgid ""
"This section documents the objects and functions in the ``ssl`` module; for "
"more general information about TLS, SSL, and certificates, the reader is "
"referred to the documents in the \"See Also\" section at the bottom."
msgstr ""

#: ../Doc/library/ssl.rst:37
msgid ""
"This module provides a class, :class:`ssl.SSLSocket`, which is derived from "
"the :class:`socket.socket` type, and provides a socket-like wrapper that "
"also encrypts and decrypts the data going over the socket with SSL.  It "
"supports additional :meth:`read` and :meth:`write` methods, along with a "
"method, :meth:`getpeercert`, to retrieve the certificate of the other side "
"of the connection, and a method, :meth:`cipher`, to retrieve the cipher "
"being used for the secure connection."
msgstr ""

#: ../Doc/library/ssl.rst:46
msgid "Functions, Constants, and Exceptions"
msgstr ""

#: ../Doc/library/ssl.rst:50
msgid ""
"Raised to signal an error from the underlying SSL implementation.  This "
"signifies some problem in the higher-level encryption and authentication "
"layer that's superimposed on the underlying network connection.  This error "
"is a subtype of :exc:`socket.error`, which in turn is a subtype of :exc:"
"`IOError`."
msgstr ""

#: ../Doc/library/ssl.rst:58
msgid ""
"Takes an instance ``sock`` of :class:`socket.socket`, and returns an "
"instance of :class:`ssl.SSLSocket`, a subtype of :class:`socket.socket`, "
"which wraps the underlying socket in an SSL context.  For client-side "
"sockets, the context construction is lazy; if the underlying socket isn't "
"connected yet, the context construction will be performed after :meth:"
"`connect` is called on the socket.  For server-side sockets, if the socket "
"has no remote peer, it is assumed to be a listening socket, and the server-"
"side SSL wrapping is automatically performed on client connections accepted "
"via the :meth:`accept` method.  :func:`wrap_socket` may raise :exc:"
"`SSLError`."
msgstr ""

#: ../Doc/library/ssl.rst:68
msgid ""
"The ``keyfile`` and ``certfile`` parameters specify optional files which "
"contain a certificate to be used to identify the local side of the "
"connection.  See the discussion of :ref:`ssl-certificates` for more "
"information on how the certificate is stored in the ``certfile``."
msgstr ""

# 4269375f8b3c44f39a8e7ab41b677d89
#: ../Doc/library/ssl.rst:73
msgid ""
"Often the private key is stored in the same file as the certificate; in this "
"case, only the ``certfile`` parameter need be passed.  If the private key is "
"stored in a separate file, both parameters must be used.  If the private key "
"is stored in the ``certfile``, it should come before the first certificate "
"in the certificate chain::"
msgstr ""

#: ../Doc/library/ssl.rst:86
msgid ""
"The parameter ``server_side`` is a boolean which identifies whether server-"
"side or client-side behavior is desired from this socket."
msgstr ""

#: ../Doc/library/ssl.rst:89
msgid ""
"The parameter ``cert_reqs`` specifies whether a certificate is required from "
"the other side of the connection, and whether it will be validated if "
"provided.  It must be one of the three values :const:`CERT_NONE` "
"(certificates ignored), :const:`CERT_OPTIONAL` (not required, but validated "
"if provided), or :const:`CERT_REQUIRED` (required and validated).  If the "
"value of this parameter is not :const:`CERT_NONE`, then the ``ca_certs`` "
"parameter must point to a file of CA certificates."
msgstr ""

#: ../Doc/library/ssl.rst:97
msgid ""
"The ``ca_certs`` file contains a set of concatenated \"certification "
"authority\" certificates, which are used to validate certificates passed "
"from the other end of the connection.  See the discussion of :ref:`ssl-"
"certificates` for more information about how to arrange the certificates in "
"this file."
msgstr ""

# 366e4d988ee5493e9ccc22e4356e556c
#: ../Doc/library/ssl.rst:103
msgid ""
"The parameter ``ssl_version`` specifies which version of the SSL protocol to "
"use.  Typically, the server chooses a particular protocol version, and the "
"client must adapt to the server's choice.  Most of the versions are not "
"interoperable with the other versions.  If not specified, the default is :"
"data:`PROTOCOL_SSLv23`; it provides the most compatibility with other "
"versions."
msgstr ""

#: ../Doc/library/ssl.rst:110
msgid ""
"Here's a table showing which versions in a client (down the side) can "
"connect to which versions in a server (along the top):"
msgstr ""

#: ../Doc/library/ssl.rst:116
msgid "*client* / **server**"
msgstr ""

#: ../Doc/library/ssl.rst:116
msgid "**SSLv2**"
msgstr ""

#: ../Doc/library/ssl.rst:116
msgid "**SSLv3**"
msgstr ""

#: ../Doc/library/ssl.rst:116
msgid "**SSLv23**"
msgstr ""

#: ../Doc/library/ssl.rst:116
msgid "**TLSv1**"
msgstr ""

#: ../Doc/library/ssl.rst:118
msgid "*SSLv2*"
msgstr ""

#: ../Doc/library/ssl.rst:118 ../Doc/library/ssl.rst:119
#: ../Doc/library/ssl.rst:120 ../Doc/library/ssl.rst:121
msgid "yes"
msgstr ""

#: ../Doc/library/ssl.rst:118 ../Doc/library/ssl.rst:119
#: ../Doc/library/ssl.rst:120 ../Doc/library/ssl.rst:121
msgid "no"
msgstr ""

#: ../Doc/library/ssl.rst:119
msgid "*SSLv3*"
msgstr ""

#: ../Doc/library/ssl.rst:120
msgid "*SSLv23*"
msgstr ""

#: ../Doc/library/ssl.rst:121
msgid "*TLSv1*"
msgstr ""

#: ../Doc/library/ssl.rst:126
msgid ""
"Which connections succeed will vary depending on the version of OpenSSL.  "
"For instance, in some older versions of OpenSSL (such as 0.9.7l on OS X "
"10.4), an SSLv2 client could not connect to an SSLv23 server.  Another "
"example: beginning with OpenSSL 1.0.0, an SSLv23 client will not actually "
"attempt SSLv2 connections unless you explicitly enable SSLv2 ciphers; for "
"example, you might specify ``\"ALL\"`` or ``\"SSLv2\"`` as the *ciphers* "
"parameter to enable them."
msgstr ""

#: ../Doc/library/ssl.rst:135
msgid ""
"The *ciphers* parameter sets the available ciphers for this SSL object. It "
"should be a string in the `OpenSSL cipher list format <http://www.openssl."
"org/docs/apps/ciphers.html#CIPHER_LIST_FORMAT>`_."
msgstr ""

#: ../Doc/library/ssl.rst:139
msgid ""
"The parameter ``do_handshake_on_connect`` specifies whether to do the SSL "
"handshake automatically after doing a :meth:`socket.connect`, or whether the "
"application program will call it explicitly, by invoking the :meth:"
"`SSLSocket.do_handshake` method.  Calling :meth:`SSLSocket.do_handshake` "
"explicitly gives the program control over the blocking behavior of the "
"socket I/O involved in the handshake."
msgstr ""

#: ../Doc/library/ssl.rst:146
msgid ""
"The parameter ``suppress_ragged_eofs`` specifies how the :meth:`SSLSocket."
"read` method should signal unexpected EOF from the other end of the "
"connection.  If specified as :const:`True` (the default), it returns a "
"normal EOF in response to unexpected EOF errors raised from the underlying "
"socket; if :const:`False`, it will raise the exceptions back to the caller."
msgstr ""

#: ../Doc/library/ssl.rst:157
msgid ""
"Returns True if the SSL pseudo-random number generator has been seeded with "
"'enough' randomness, and False otherwise.  You can use :func:`ssl.RAND_egd` "
"and :func:`ssl.RAND_add` to increase the randomness of the pseudo-random "
"number generator."
msgstr ""

#: ../Doc/library/ssl.rst:164
msgid ""
"If you are running an entropy-gathering daemon (EGD) somewhere, and ``path`` "
"is the pathname of a socket connection open to it, this will read 256 bytes "
"of randomness from the socket, and add it to the SSL pseudo-random number "
"generator to increase the security of generated secret keys.  This is "
"typically only necessary on systems without better sources of randomness."
msgstr ""

#: ../Doc/library/ssl.rst:170
msgid ""
"See http://egd.sourceforge.net/ or http://prngd.sourceforge.net/ for sources "
"of entropy-gathering daemons."
msgstr ""

#: ../Doc/library/ssl.rst:175
msgid ""
"Mixes the given ``bytes`` into the SSL pseudo-random number generator.  The "
"parameter ``entropy`` (a float) is a lower bound on the entropy contained in "
"string (so you can always use :const:`0.0`).  See :rfc:`1750` for more "
"information on sources of entropy."
msgstr ""

#: ../Doc/library/ssl.rst:182
msgid ""
"Returns a floating-point value containing a normal seconds-after-the-epoch "
"time value, given the time-string representing the \"notBefore\" or "
"\"notAfter\" date from a certificate."
msgstr ""

#: ../Doc/library/ssl.rst:198
msgid ""
"Given the address ``addr`` of an SSL-protected server, as a (*hostname*, "
"*port-number*) pair, fetches the server's certificate, and returns it as a "
"PEM-encoded string.  If ``ssl_version`` is specified, uses that version of "
"the SSL protocol to attempt to connect to the server.  If ``ca_certs`` is "
"specified, it should be a file containing a list of root certificates, the "
"same format as used for the same parameter in :func:`wrap_socket`.  The call "
"will attempt to validate the server certificate against that set of root "
"certificates, and will fail if the validation attempt fails."
msgstr ""

#: ../Doc/library/ssl.rst:209
msgid ""
"Given a certificate as a DER-encoded blob of bytes, returns a PEM-encoded "
"string version of the same certificate."
msgstr ""

#: ../Doc/library/ssl.rst:214
msgid ""
"Given a certificate as an ASCII PEM string, returns a DER-encoded sequence "
"of bytes for that same certificate."
msgstr ""

# cd8dd1d53fa045e68ca1aaedba946558
#: ../Doc/library/ssl.rst:219
msgid ""
"Value to pass to the ``cert_reqs`` parameter to :func:`sslobject` when no "
"certificates will be required or validated from the other side of the socket "
"connection."
msgstr ""

# f76f8781670043eeaed2d5ae66ddebe0
#: ../Doc/library/ssl.rst:225
msgid ""
"Value to pass to the ``cert_reqs`` parameter to :func:`sslobject` when no "
"certificates will be required from the other side of the socket connection, "
"but if they are provided, will be validated.  Note that use of this setting "
"requires a valid certificate validation file also be passed as a value of "
"the ``ca_certs`` parameter."
msgstr ""

# 18ba5b9ac577494490b739e679409f94
#: ../Doc/library/ssl.rst:233
msgid ""
"Value to pass to the ``cert_reqs`` parameter to :func:`sslobject` when "
"certificates will be required from the other side of the socket connection. "
"Note that use of this setting requires a valid certificate validation file "
"also be passed as a value of the ``ca_certs`` parameter."
msgstr ""

#: ../Doc/library/ssl.rst:240
msgid "Selects SSL version 2 as the channel encryption protocol."
msgstr ""

# 328cab548b5f41299369438195069f5b
#: ../Doc/library/ssl.rst:242
msgid ""
"This protocol is not available if OpenSSL is compiled with OPENSSL_NO_SSL2 "
"flag."
msgstr ""

#: ../Doc/library/ssl.rst:247
msgid "SSL version 2 is insecure.  Its use is highly discouraged."
msgstr ""

#: ../Doc/library/ssl.rst:251
msgid ""
"Selects SSL version 2 or 3 as the channel encryption protocol.  This is a "
"setting to use with servers for maximum compatibility with the other end of "
"an SSL connection, but it may cause the specific ciphers chosen for the "
"encryption to be of fairly low quality."
msgstr ""

#: ../Doc/library/ssl.rst:258
msgid ""
"Selects SSL version 3 as the channel encryption protocol.  For clients, this "
"is the maximally compatible SSL variant."
msgstr ""

#: ../Doc/library/ssl.rst:263
msgid ""
"Selects TLS version 1 as the channel encryption protocol.  This is the most "
"modern version, and probably the best choice for maximum protection, if both "
"sides can speak it."
msgstr ""

#: ../Doc/library/ssl.rst:269
msgid "The version string of the OpenSSL library loaded by the interpreter::"
msgstr ""

#: ../Doc/library/ssl.rst:278
msgid ""
"A tuple of five integers representing version information about the OpenSSL "
"library::"
msgstr ""

#: ../Doc/library/ssl.rst:288
msgid "The raw version number of the OpenSSL library, as a single integer::"
msgstr ""

# 7f569ca7bb5b41b2a5aedb31015f84e6
#: ../Doc/library/ssl.rst:299
msgid "SSLSocket Objects"
msgstr ""

# 003b9493ab344a758efa392cfe5b2f7c
#: ../Doc/library/ssl.rst:303
msgid ""
"Reads up to ``nbytes`` bytes from the SSL-encrypted channel and returns them."
msgstr ""

#: ../Doc/library/ssl.rst:307
msgid ""
"Writes the ``data`` to the other side of the connection, using the SSL "
"channel to encrypt.  Returns the number of bytes written."
msgstr ""

#: ../Doc/library/ssl.rst:312
msgid ""
"If there is no certificate for the peer on the other end of the connection, "
"returns ``None``."
msgstr ""

#: ../Doc/library/ssl.rst:315
msgid ""
"If the parameter ``binary_form`` is :const:`False`, and a certificate was "
"received from the peer, this method returns a :class:`dict` instance.  If "
"the certificate was not validated, the dict is empty.  If the certificate "
"was validated, it returns a dict with the keys ``subject`` (the principal "
"for which the certificate was issued), and ``notAfter`` (the time after "
"which the certificate should not be trusted).  The certificate was already "
"validated, so the ``notBefore`` and ``issuer`` fields are not returned.  If "
"a certificate contains an instance of the *Subject Alternative Name* "
"extension (see :rfc:`3280`), there will also be a ``subjectAltName`` key in "
"the dictionary."
msgstr ""

#: ../Doc/library/ssl.rst:326
msgid ""
"The \"subject\" field is a tuple containing the sequence of relative "
"distinguished names (RDNs) given in the certificate's data structure for the "
"principal, and each RDN is a sequence of name-value pairs::"
msgstr ""

#: ../Doc/library/ssl.rst:338
msgid ""
"If the ``binary_form`` parameter is :const:`True`, and a certificate was "
"provided, this method returns the DER-encoded form of the entire certificate "
"as a sequence of bytes, or :const:`None` if the peer did not provide a "
"certificate.  This return value is independent of validation; if validation "
"was required (:const:`CERT_OPTIONAL` or :const:`CERT_REQUIRED`), it will "
"have been validated, but if :const:`CERT_NONE` was used to establish the "
"connection, the certificate, if present, will not have been validated."
msgstr ""

#: ../Doc/library/ssl.rst:348
msgid ""
"Returns a three-value tuple containing the name of the cipher being used, "
"the version of the SSL protocol that defines its use, and the number of "
"secret bits being used.  If no connection has been established, returns "
"``None``."
msgstr ""

# 476eb57b761e400f8e73bd94750e9457
#: ../Doc/library/ssl.rst:354
msgid ""
"Perform a TLS/SSL handshake.  If this is used with a non-blocking socket, it "
"may raise :exc:`SSLError` with an ``arg[0]`` of :const:`SSL_ERROR_WANT_READ` "
"or :const:`SSL_ERROR_WANT_WRITE`, in which case it must be called again "
"until it completes successfully.  For example, to simulate the behavior of a "
"blocking socket, one might write::"
msgstr ""

# 9252c522cbf24a99b3a379ac25e7630d
#: ../Doc/library/ssl.rst:374
msgid ""
"Performs the SSL shutdown handshake, which removes the TLS layer from the "
"underlying socket, and returns the underlying socket object.  This can be "
"used to go from encrypted operation over a connection to unencrypted.  The "
"socket instance returned should always be used for further communication "
"with the other side of the connection, rather than the original socket "
"instance (which may not function properly after the unwrap)."
msgstr ""

#: ../Doc/library/ssl.rst:388
msgid "Certificates"
msgstr ""

#: ../Doc/library/ssl.rst:390
msgid ""
"Certificates in general are part of a public-key / private-key system.  In "
"this system, each *principal*, (which may be a machine, or a person, or an "
"organization) is assigned a unique two-part encryption key.  One part of the "
"key is public, and is called the *public key*; the other part is kept "
"secret, and is called the *private key*.  The two parts are related, in that "
"if you encrypt a message with one of the parts, you can decrypt it with the "
"other part, and **only** with the other part."
msgstr ""

#: ../Doc/library/ssl.rst:398
msgid ""
"A certificate contains information about two principals.  It contains the "
"name of a *subject*, and the subject's public key.  It also contains a "
"statement by a second principal, the *issuer*, that the subject is who he "
"claims to be, and that this is indeed the subject's public key.  The "
"issuer's statement is signed with the issuer's private key, which only the "
"issuer knows.  However, anyone can verify the issuer's statement by finding "
"the issuer's public key, decrypting the statement with it, and comparing it "
"to the other information in the certificate. The certificate also contains "
"information about the time period over which it is valid.  This is expressed "
"as two fields, called \"notBefore\" and \"notAfter\"."
msgstr ""

#: ../Doc/library/ssl.rst:408
msgid ""
"In the Python use of certificates, a client or server can use a certificate "
"to prove who they are.  The other side of a network connection can also be "
"required to produce a certificate, and that certificate can be validated to "
"the satisfaction of the client or server that requires such validation.  The "
"connection attempt can be set to raise an exception if the validation fails. "
"Validation is done automatically, by the underlying OpenSSL framework; the "
"application need not concern itself with its mechanics.  But the application "
"does usually need to provide sets of certificates to allow this process to "
"take place."
msgstr ""

#: ../Doc/library/ssl.rst:418
msgid ""
"Python uses files to contain certificates.  They should be formatted as \"PEM"
"\" (see :rfc:`1422`), which is a base-64 encoded form wrapped with a header "
"line and a footer line::"
msgstr ""

#: ../Doc/library/ssl.rst:426
msgid ""
"The Python files which contain certificates can contain a sequence of "
"certificates, sometimes called a *certificate chain*.  This chain should "
"start with the specific certificate for the principal who \"is\" the client "
"or server, and then the certificate for the issuer of that certificate, and "
"then the certificate for the issuer of *that* certificate, and so on up the "
"chain till you get to a certificate which is *self-signed*, that is, a "
"certificate which has the same subject and issuer, sometimes called a *root "
"certificate*.  The certificates should just be concatenated together in the "
"certificate file.  For example, suppose we had a three certificate chain, "
"from our server certificate to the certificate of the certification "
"authority that signed our server certificate, to the root certificate of the "
"agency which issued the certification authority's certificate::"
msgstr ""

# 46fdd2e30d384081978f27d3dd9f2f3a
#: ../Doc/library/ssl.rst:449
msgid ""
"If you are going to require validation of the other side of the connection's "
"certificate, you need to provide a \"CA certs\" file, filled with the "
"certificate chains for each issuer you are willing to trust.  Again, this "
"file just contains these chains concatenated together.  For validation, "
"Python will use the first chain it finds in the file which matches."
msgstr ""

# eefb9583aa72464c9ae38cd591d09b6f
#: ../Doc/library/ssl.rst:455
msgid ""
"Some \"standard\" root certificates are available from various certification "
"authorities: `CACert.org <http://www.cacert.org/index.php?id=3>`_, `Thawte "
"<http://www.thawte.com/roots/>`_, `Verisign <http://www.verisign.com/support/"
"roots.html>`_, `Positive SSL <http://www.PositiveSSL.com/ssl-certificate-"
"support/cert_installation/UTN-USERFirst-Hardware.crt>`_ (used by python."
"org), `Equifax and GeoTrust <http://www.geotrust.com/resources/"
"root_certificates/index.asp>`_."
msgstr ""

#: ../Doc/library/ssl.rst:463
msgid ""
"In general, if you are using SSL3 or TLS1, you don't need to put the full "
"chain in your \"CA certs\" file; you only need the root certificates, and "
"the remote peer is supposed to furnish the other certificates necessary to "
"chain from its certificate to a root certificate.  See :rfc:`4158` for more "
"discussion of the way in which certification chains can be built."
msgstr ""

#: ../Doc/library/ssl.rst:469
msgid ""
"If you are going to create a server that provides SSL-encrypted connection "
"services, you will need to acquire a certificate for that service.  There "
"are many ways of acquiring appropriate certificates, such as buying one from "
"a certification authority.  Another common practice is to generate a self-"
"signed certificate.  The simplest way to do this is with the OpenSSL "
"package, using something like the following::"
msgstr ""

#: ../Doc/library/ssl.rst:498
msgid ""
"The disadvantage of a self-signed certificate is that it is its own root "
"certificate, and no one else will have it in their cache of known (and "
"trusted) root certificates."
msgstr ""

#: ../Doc/library/ssl.rst:507
msgid "Testing for SSL support"
msgstr ""

#: ../Doc/library/ssl.rst:509
msgid ""
"To test for the presence of SSL support in a Python installation, user code "
"should use the following idiom::"
msgstr ""

#: ../Doc/library/ssl.rst:520
msgid "Client-side operation"
msgstr ""

#: ../Doc/library/ssl.rst:522
msgid ""
"This example connects to an SSL server, prints the server's address and "
"certificate, sends some bytes, and reads part of the response::"
msgstr ""

#: ../Doc/library/ssl.rst:551
msgid ""
"As of September 6, 2007, the certificate printed by this program looked like "
"this::"
msgstr ""

#: ../Doc/library/ssl.rst:570
msgid "which is a fairly poorly-formed ``subject`` field."
msgstr ""

#: ../Doc/library/ssl.rst:573
msgid "Server-side operation"
msgstr ""

# ad6acb010422470a9678bdf8deec697b
#: ../Doc/library/ssl.rst:575
msgid ""
"For server operation, typically you'd need to have a server certificate, and "
"private key, each in a file.  You'd open a socket, bind it to a port, call :"
"meth:`listen` on it, then start waiting for clients to connect::"
msgstr ""

# aa034f5b3d7c4e8aab9ae31e5b87535b
#: ../Doc/library/ssl.rst:585
msgid ""
"When one did, you'd call :meth:`accept` on the socket to get the new socket "
"from the other end, and use :func:`wrap_socket` to create a server-side SSL "
"context for it::"
msgstr ""

# 3dc6b9f0fb5a476da24538a8435a224e
#: ../Doc/library/ssl.rst:602
msgid ""
"Then you'd read data from the ``connstream`` and do something with it till "
"you are finished with the client (or the client is finished with you)::"
msgstr ""

# 4489839d69844e19b2283591ce934e2e
#: ../Doc/library/ssl.rst:616
msgid "And go back to listening for new client connections."
msgstr ""

#: ../Doc/library/ssl.rst:622
msgid "Documentation of underlying :mod:`socket` class"
msgstr ""

# bebba01097ba40a98e90ca45299c1c3e
#: ../Doc/library/ssl.rst:625
msgid "Debby Koren"
msgstr ""

#: ../Doc/library/ssl.rst:628
msgid "Steve Kent"
msgstr ""

#: ../Doc/library/ssl.rst:631
msgid "D. Eastlake et. al."
msgstr ""

#: ../Doc/library/ssl.rst:634
msgid "Housley et. al."
msgstr ""

#: ../Doc/library/stat.rst:2
msgid ":mod:`stat` --- Interpreting :func:`stat` results"
msgstr ""

# e7f4ab56e76f481db954a7e6386c43ca
#: ../Doc/library/stat.rst:8
msgid "**Source code:** :source:`Lib/stat.py`"
msgstr ""

# 68baef6f37894096913d0f6a148a27d5
#: ../Doc/library/stat.rst:12
msgid ""
"The :mod:`stat` module defines constants and functions for interpreting the "
"results of :func:`os.stat`, :func:`os.fstat` and :func:`os.lstat` (if they "
"exist).  For complete details about the :c:func:`stat`, :c:func:`fstat` and :"
"c:func:`lstat` calls, consult the documentation for your system."
msgstr ""

#: ../Doc/library/stat.rst:17
msgid ""
"The :mod:`stat` module defines the following functions to test for specific "
"file types:"
msgstr ""

#: ../Doc/library/stat.rst:23
msgid "Return non-zero if the mode is from a directory."
msgstr ""

#: ../Doc/library/stat.rst:28
msgid "Return non-zero if the mode is from a character special device file."
msgstr ""

#: ../Doc/library/stat.rst:33
msgid "Return non-zero if the mode is from a block special device file."
msgstr ""

#: ../Doc/library/stat.rst:38
msgid "Return non-zero if the mode is from a regular file."
msgstr ""

#: ../Doc/library/stat.rst:43
msgid "Return non-zero if the mode is from a FIFO (named pipe)."
msgstr ""

#: ../Doc/library/stat.rst:48
msgid "Return non-zero if the mode is from a symbolic link."
msgstr ""

#: ../Doc/library/stat.rst:53
msgid "Return non-zero if the mode is from a socket."
msgstr ""

#: ../Doc/library/stat.rst:55
msgid ""
"Two additional functions are defined for more general manipulation of the "
"file's mode:"
msgstr ""

#: ../Doc/library/stat.rst:61
msgid ""
"Return the portion of the file's mode that can be set by :func:`os.chmod`\\ "
"---that is, the file's permission bits, plus the sticky bit, set-group-id, "
"and set-user-id bits (on systems that support them)."
msgstr ""

#: ../Doc/library/stat.rst:68
msgid ""
"Return the portion of the file's mode that describes the file type (used by "
"the :func:`S_IS\\*` functions above)."
msgstr ""

# 413692682be04f76bbb38f9f368859d1
#: ../Doc/library/stat.rst:71
msgid ""
"Normally, you would use the :func:`os.path.is\\*` functions for testing the "
"type of a file; the functions here are useful when you are doing multiple "
"tests of the same file and wish to avoid the overhead of the :c:func:`stat` "
"system call for each test.  These are also useful when checking for "
"information about a file that isn't handled by :mod:`os.path`, like the "
"tests for block and character devices."
msgstr ""

#: ../Doc/library/stat.rst:106
msgid ""
"All the variables below are simply symbolic indexes into the 10-tuple "
"returned by :func:`os.stat`, :func:`os.fstat` or :func:`os.lstat`."
msgstr ""

#: ../Doc/library/stat.rst:112
msgid "Inode protection mode."
msgstr ""

#: ../Doc/library/stat.rst:117
msgid "Inode number."
msgstr ""

#: ../Doc/library/stat.rst:122
msgid "Device inode resides on."
msgstr ""

#: ../Doc/library/stat.rst:127
msgid "Number of links to the inode."
msgstr ""

#: ../Doc/library/stat.rst:132
msgid "User id of the owner."
msgstr ""

#: ../Doc/library/stat.rst:137
msgid "Group id of the owner."
msgstr ""

#: ../Doc/library/stat.rst:142
msgid ""
"Size in bytes of a plain file; amount of data waiting on some special files."
msgstr ""

#: ../Doc/library/stat.rst:147
msgid "Time of last access."
msgstr ""

#: ../Doc/library/stat.rst:152 ../Doc/library/tarfile.rst:533
msgid "Time of last modification."
msgstr ""

#: ../Doc/library/stat.rst:157
msgid ""
"The \"ctime\" as reported by the operating system.  On some systems (like "
"Unix) is the time of the last metadata change, and, on others (like "
"Windows), is the creation time (see platform documentation for details)."
msgstr ""

#: ../Doc/library/stat.rst:161
msgid ""
"The interpretation of \"file size\" changes according to the file type.  For "
"plain files this is the size of the file in bytes.  For FIFOs and sockets "
"under most flavors of Unix (including Linux in particular), the \"size\" is "
"the number of bytes waiting to be read at the time of the call to :func:`os."
"stat`, :func:`os.fstat`, or :func:`os.lstat`; this can sometimes be useful, "
"especially for polling one of these special files after a non-blocking "
"open.  The meaning of the size field for other character and block devices "
"varies more, depending on the implementation of the underlying system call."
msgstr ""

#: ../Doc/library/stat.rst:170
msgid "The variables below define the flags used in the :data:`ST_MODE` field."
msgstr ""

#: ../Doc/library/stat.rst:172
msgid ""
"Use of the functions above is more portable than use of the first set of "
"flags:"
msgstr ""

#: ../Doc/library/stat.rst:176
msgid "Bit mask for the file type bit fields."
msgstr ""

#: ../Doc/library/stat.rst:180
msgid "Socket."
msgstr ""

#: ../Doc/library/stat.rst:184
msgid "Symbolic link."
msgstr ""

#: ../Doc/library/stat.rst:188
msgid "Regular file."
msgstr ""

#: ../Doc/library/stat.rst:192
msgid "Block device."
msgstr ""

#: ../Doc/library/stat.rst:196
msgid "Directory."
msgstr ""

#: ../Doc/library/stat.rst:200
msgid "Character device."
msgstr ""

#: ../Doc/library/stat.rst:204
msgid "FIFO."
msgstr ""

#: ../Doc/library/stat.rst:206
msgid ""
"The following flags can also be used in the *mode* argument of :func:`os."
"chmod`:"
msgstr ""

#: ../Doc/library/stat.rst:210
msgid "Set UID bit."
msgstr ""

#: ../Doc/library/stat.rst:214
msgid ""
"Set-group-ID bit.  This bit has several special uses.  For a directory it "
"indicates that BSD semantics is to be used for that directory: files created "
"there inherit their group ID from the directory, not from the effective "
"group ID of the creating process, and directories created there will also "
"get the :data:`S_ISGID` bit set.  For a file that does not have the group "
"execution bit (:data:`S_IXGRP`) set, the set-group-ID bit indicates "
"mandatory file/record locking (see also :data:`S_ENFMT`)."
msgstr ""

#: ../Doc/library/stat.rst:225
msgid ""
"Sticky bit.  When this bit is set on a directory it means that a file in "
"that directory can be renamed or deleted only by the owner of the file, by "
"the owner of the directory, or by a privileged process."
msgstr ""

#: ../Doc/library/stat.rst:231
msgid "Mask for file owner permissions."
msgstr ""

#: ../Doc/library/stat.rst:235
msgid "Owner has read permission."
msgstr ""

#: ../Doc/library/stat.rst:239
msgid "Owner has write permission."
msgstr ""

#: ../Doc/library/stat.rst:243
msgid "Owner has execute permission."
msgstr ""

#: ../Doc/library/stat.rst:247
msgid "Mask for group permissions."
msgstr ""

#: ../Doc/library/stat.rst:251
msgid "Group has read permission."
msgstr ""

#: ../Doc/library/stat.rst:255
msgid "Group has write permission."
msgstr ""

#: ../Doc/library/stat.rst:259
msgid "Group has execute permission."
msgstr ""

#: ../Doc/library/stat.rst:263
msgid "Mask for permissions for others (not in group)."
msgstr ""

#: ../Doc/library/stat.rst:267
msgid "Others have read permission."
msgstr ""

#: ../Doc/library/stat.rst:271
msgid "Others have write permission."
msgstr ""

#: ../Doc/library/stat.rst:275
msgid "Others have execute permission."
msgstr ""

#: ../Doc/library/stat.rst:279
msgid ""
"System V file locking enforcement.  This flag is shared with :data:"
"`S_ISGID`: file/record locking is enforced on files that do not have the "
"group execution bit (:data:`S_IXGRP`) set."
msgstr ""

#: ../Doc/library/stat.rst:285
msgid "Unix V7 synonym for :data:`S_IRUSR`."
msgstr ""

#: ../Doc/library/stat.rst:289
msgid "Unix V7 synonym for :data:`S_IWUSR`."
msgstr ""

#: ../Doc/library/stat.rst:293
msgid "Unix V7 synonym for :data:`S_IXUSR`."
msgstr ""

# eaa3edb6b7e84d789d86b1a9635f9977
#: ../Doc/library/stat.rst:295
msgid ""
"The following flags can be used in the *flags* argument of :func:`os."
"chflags`:"
msgstr ""

# 740d7540712d4ba6921667466118fd7f
#: ../Doc/library/stat.rst:299
msgid "Do not dump the file."
msgstr ""

# 80e594b9e97843869ea3d2815b1929a3
# 50d4b7788afe48a4add78100c7023f50
#: ../Doc/library/stat.rst:303 ../Doc/library/stat.rst:331
msgid "The file may not be changed."
msgstr ""

# 29dfd76e1e34418eb19540fd8880ef88
# 7e6fcdc351fe4c0686790d649b7ad70f
#: ../Doc/library/stat.rst:307 ../Doc/library/stat.rst:335
msgid "The file may only be appended to."
msgstr ""

# 5fa23c0b1d86476a973ae0d2ad81bf06
#: ../Doc/library/stat.rst:311
msgid "The directory is opaque when viewed through a union stack."
msgstr ""

# ba40c0e2900046e388d22811b22545ee
# 292ee1d75f2646529854278945d8830a
#: ../Doc/library/stat.rst:315 ../Doc/library/stat.rst:339
msgid "The file may not be renamed or deleted."
msgstr ""

# 947c182b7c6e445eade28207e98b0d84
#: ../Doc/library/stat.rst:319
msgid "The file is stored compressed (Mac OS X 10.6+)."
msgstr ""

# 5589dfe5e59e4ffc94e16ebf3fad24de
#: ../Doc/library/stat.rst:323
msgid "The file should not be displayed in a GUI (Mac OS X 10.5+)."
msgstr ""

# 80934b40be114526835c5c40239ea733
#: ../Doc/library/stat.rst:327
msgid "The file may be archived."
msgstr ""

# 7220df38015e4245b0f0bc9062b4874d
#: ../Doc/library/stat.rst:343
msgid "The file is a snapshot file."
msgstr ""

# d891ed2795b543c38d30bbacfaec66e1
#: ../Doc/library/stat.rst:345
msgid ""
"See the \\*BSD or Mac OS systems man page :manpage:`chflags(2)` for more "
"information."
msgstr ""

# ed5a14c33cf341f7a6219c5331a8f0b0
#: ../Doc/library/statvfs.rst:2
msgid ":mod:`statvfs` --- Constants used with :func:`os.statvfs`"
msgstr ""

# ff1fb6c9f7b245a491d1219b442599fe
#: ../Doc/library/statvfs.rst:15
msgid ""
"The :mod:`statvfs` module defines constants so interpreting the result if :"
"func:`os.statvfs`, which returns a tuple, can be made without remembering "
"\"magic numbers.\"  Each of the constants defined in this module is the "
"*index* of the entry in the tuple returned by :func:`os.statvfs` that "
"contains the specified information."
msgstr ""

# d813c448ac4946c89b63d9781bf8ee3b
#: ../Doc/library/statvfs.rst:24
msgid "Preferred file system block size."
msgstr ""

# a4baa29e0a8243909812609774d1e4fe
#: ../Doc/library/statvfs.rst:29
msgid "Fundamental file system block size."
msgstr ""

# 8394bf835aae4ff3811eb9d0710a06c3
#: ../Doc/library/statvfs.rst:34
msgid "Total number of blocks in the filesystem."
msgstr ""

# d93cfe7964e242ca8e01a7067a9c66d7
#: ../Doc/library/statvfs.rst:39
msgid "Total number of free blocks."
msgstr ""

# b17492b7b57b48de8ba93046a43ead9d
#: ../Doc/library/statvfs.rst:44
msgid "Free blocks available to non-super user."
msgstr ""

# a5edf2044eeb405ba1fd1a408980fd89
#: ../Doc/library/statvfs.rst:49
msgid "Total number of file nodes."
msgstr ""

# de1089ab3a3f4aaf817d315254f9b265
#: ../Doc/library/statvfs.rst:54
msgid "Total number of free file nodes."
msgstr ""

# 147f9a7a8349408db5675cdabc0cf7d6
#: ../Doc/library/statvfs.rst:59
msgid "Free nodes available to non-super user."
msgstr ""

# b3fabd7d95084489a47dc3aa68a5fcb4
#: ../Doc/library/statvfs.rst:64
msgid "Flags. System dependent: see :c:func:`statvfs` man page."
msgstr ""

# 4b4f8a55b7a24c80a9d206ac064d70cb
#: ../Doc/library/statvfs.rst:69
msgid "Maximum file name length."
msgstr ""

#: ../Doc/library/stdtypes.rst:8
msgid "Built-in Types"
msgstr ""

#: ../Doc/library/stdtypes.rst:10
msgid ""
"The following sections describe the standard types that are built into the "
"interpreter."
msgstr ""

# 863df4666a77474ab184c4df035b8e9f
#: ../Doc/library/stdtypes.rst:15
msgid ""
"Historically (until release 2.2), Python's built-in types have differed from "
"user-defined types because it was not possible to use the built-in types as "
"the basis for object-oriented inheritance. This limitation no longer exists."
msgstr ""

# be61072843384a34839930fa57f2620a
#: ../Doc/library/stdtypes.rst:22
msgid ""
"The principal built-in types are numerics, sequences, mappings, files, "
"classes, instances and exceptions."
msgstr ""

#: ../Doc/library/stdtypes.rst:27
msgid ""
"Some operations are supported by several object types; in particular, "
"practically all objects can be compared, tested for truth value, and "
"converted to a string (with the :func:`repr` function or the slightly "
"different :func:`str` function).  The latter function is implicitly used "
"when an object is written by the :func:`print` function."
msgstr ""

#: ../Doc/library/stdtypes.rst:37
msgid "Truth Value Testing"
msgstr ""

#: ../Doc/library/stdtypes.rst:46
msgid ""
"Any object can be tested for truth value, for use in an :keyword:`if` or :"
"keyword:`while` condition or as operand of the Boolean operations below. The "
"following values are considered false:"
msgstr ""

#: ../Doc/library/stdtypes.rst:56
msgid "``False``"
msgstr ""

# 33c7f2c51ca040ca8c9d6e29cd90fd98
#: ../Doc/library/stdtypes.rst:58
msgid "zero of any numeric type, for example, ``0``, ``0L``, ``0.0``, ``0j``."
msgstr ""

#: ../Doc/library/stdtypes.rst:60
msgid "any empty sequence, for example, ``''``, ``()``, ``[]``."
msgstr ""

#: ../Doc/library/stdtypes.rst:62
msgid "any empty mapping, for example, ``{}``."
msgstr ""

# a0eafb23a93a47ffa6c54167681bac35
#: ../Doc/library/stdtypes.rst:64
msgid ""
"instances of user-defined classes, if the class defines a :meth:"
"`__nonzero__` or :meth:`__len__` method, when that method returns the "
"integer zero or :class:`bool` value ``False``. [1]_"
msgstr ""

#: ../Doc/library/stdtypes.rst:70
msgid ""
"All other values are considered true --- so objects of many types are always "
"true."
msgstr ""

#: ../Doc/library/stdtypes.rst:79
msgid ""
"Operations and built-in functions that have a Boolean result always return "
"``0`` or ``False`` for false and ``1`` or ``True`` for true, unless "
"otherwise stated. (Important exception: the Boolean operations ``or`` and "
"``and`` always return one of their operands.)"
msgstr ""

#: ../Doc/library/stdtypes.rst:88
msgid "Boolean Operations --- :keyword:`and`, :keyword:`or`, :keyword:`not`"
msgstr ""

#: ../Doc/library/stdtypes.rst:92
msgid "These are the Boolean operations, ordered by ascending priority:"
msgstr ""

#: ../Doc/library/stdtypes.rst:97
msgid "``x or y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:97
msgid "if *x* is false, then *y*, else *x*"
msgstr ""

#: ../Doc/library/stdtypes.rst:100
msgid "``x and y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:100
msgid "if *x* is false, then *x*, else *y*"
msgstr ""

#: ../Doc/library/stdtypes.rst:103
msgid "``not x``"
msgstr ""

#: ../Doc/library/stdtypes.rst:103
msgid "if *x* is false, then ``True``, else ``False``"
msgstr ""

#: ../Doc/library/stdtypes.rst:115
msgid ""
"This is a short-circuit operator, so it only evaluates the second argument "
"if the first one is :const:`False`."
msgstr ""

#: ../Doc/library/stdtypes.rst:119
msgid ""
"This is a short-circuit operator, so it only evaluates the second argument "
"if the first one is :const:`True`."
msgstr ""

#: ../Doc/library/stdtypes.rst:123
msgid ""
"``not`` has a lower priority than non-Boolean operators, so ``not a == b`` "
"is interpreted as ``not (a == b)``, and ``a == not b`` is a syntax error."
msgstr ""

#: ../Doc/library/stdtypes.rst:130
msgid "Comparisons"
msgstr ""

# 601b86e05b4643079993d939541021fc
#: ../Doc/library/stdtypes.rst:144
msgid ""
"Comparison operations are supported by all objects.  They all have the same "
"priority (which is higher than that of the Boolean operations). Comparisons "
"can be chained arbitrarily; for example, ``x < y <= z`` is equivalent to ``x "
"< y and y <= z``, except that *y* is evaluated only once (but in both cases "
"*z* is not evaluated at all when ``x < y`` is found to be false)."
msgstr ""

#: ../Doc/library/stdtypes.rst:150
msgid "This table summarizes the comparison operations:"
msgstr ""

#: ../Doc/library/stdtypes.rst:155 ../Doc/library/struct.rst:110
msgid "``<``"
msgstr ""

#: ../Doc/library/stdtypes.rst:155
msgid "strictly less than"
msgstr ""

#: ../Doc/library/stdtypes.rst:157
msgid "``<=``"
msgstr ""

#: ../Doc/library/stdtypes.rst:157
msgid "less than or equal"
msgstr ""

#: ../Doc/library/stdtypes.rst:159 ../Doc/library/struct.rst:112
msgid "``>``"
msgstr ""

#: ../Doc/library/stdtypes.rst:159
msgid "strictly greater than"
msgstr ""

#: ../Doc/library/stdtypes.rst:161
msgid "``>=``"
msgstr ""

#: ../Doc/library/stdtypes.rst:161
msgid "greater than or equal"
msgstr ""

#: ../Doc/library/stdtypes.rst:163
msgid "``==``"
msgstr ""

#: ../Doc/library/stdtypes.rst:163
msgid "equal"
msgstr ""

#: ../Doc/library/stdtypes.rst:165
msgid "``!=``"
msgstr ""

#: ../Doc/library/stdtypes.rst:165
msgid "not equal"
msgstr ""

#: ../Doc/library/stdtypes.rst:167
msgid "``is``"
msgstr ""

#: ../Doc/library/stdtypes.rst:167
msgid "object identity"
msgstr ""

#: ../Doc/library/stdtypes.rst:169
msgid "``is not``"
msgstr ""

#: ../Doc/library/stdtypes.rst:169
msgid "negated object identity"
msgstr ""

# b044b6e7daf143f6ad6ce5d69790ff3f
#: ../Doc/library/stdtypes.rst:175
msgid ""
"``!=`` can also be written ``<>``, but this is an obsolete usage kept for "
"backwards compatibility only. New code should always use ``!=``."
msgstr ""

# 52d399c1f4e34dffb5e563f26a75cf56
#: ../Doc/library/stdtypes.rst:183
msgid ""
"Objects of different types, except different numeric types and different "
"string types, never compare equal; such objects are ordered consistently but "
"arbitrarily (so that sorting a heterogeneous array yields a consistent "
"result). Furthermore, some types (for example, file objects) support only a "
"degenerate notion of comparison where any two objects of that type are "
"unequal.  Again, such objects are ordered arbitrarily but consistently. The "
"``<``, ``<=``, ``>`` and ``>=`` operators will raise a :exc:`TypeError` "
"exception when any operand is a complex number."
msgstr ""

# c4cafbe794054a38ba28f54b8b7b723c
#: ../Doc/library/stdtypes.rst:194
msgid ""
"Instances of a class normally compare as non-equal unless the class defines "
"the :meth:`__cmp__` method.  Refer to :ref:`customization`) for information "
"on the use of this method to effect object comparisons."
msgstr ""

# a2fb4a695ac248d59298a6388a03d8a9
#: ../Doc/library/stdtypes.rst:200
msgid ""
"Objects of different types except numbers are ordered by their type names; "
"objects of the same types that don't support proper comparison are ordered "
"by their address."
msgstr ""

#: ../Doc/library/stdtypes.rst:208
msgid ""
"Two more operations with the same syntactic priority, ``in`` and ``not in``, "
"are supported only by sequence types (below)."
msgstr ""

# c2f62519de394c4491782fd43756abaa
#: ../Doc/library/stdtypes.rst:215
msgid ""
"Numeric Types --- :class:`int`, :class:`float`, :class:`long`, :class:"
"`complex`"
msgstr ""

# 991ef74f866647d5a21493b137ebb06f
#: ../Doc/library/stdtypes.rst:226
msgid ""
"There are four distinct numeric types: :dfn:`plain integers`, :dfn:`long "
"integers`, :dfn:`floating point numbers`, and :dfn:`complex numbers`. In "
"addition, Booleans are a subtype of plain integers. Plain integers (also "
"just called :dfn:`integers`) are implemented using :c:type:`long` in C, "
"which gives them at least 32 bits of precision (``sys.maxint`` is always set "
"to the maximum plain integer value for the current platform, the minimum "
"value is ``-sys.maxint - 1``).  Long integers have unlimited precision.  "
"Floating point numbers are usually implemented using :c:type:`double` in C; "
"information about the precision and internal representation of floating "
"point numbers for the machine on which your program is running is available "
"in :data:`sys.float_info`.  Complex numbers have a real and imaginary part, "
"which are each a floating point number.  To extract these parts from a "
"complex number *z*, use ``z.real`` and ``z.imag``. (The standard library "
"includes additional numeric types, :mod:`fractions` that hold rationals, "
"and :mod:`decimal` that hold floating-point numbers with user-definable "
"precision.)"
msgstr ""

# f73cd01b7df048979c95ca81b363b1e2
#: ../Doc/library/stdtypes.rst:251
msgid ""
"Numbers are created by numeric literals or as the result of built-in "
"functions and operators.  Unadorned integer literals (including binary, hex, "
"and octal numbers) yield plain integers unless the value they denote is too "
"large to be represented as a plain integer, in which case they yield a long "
"integer. Integer literals with an ``'L'`` or ``'l'`` suffix yield long "
"integers (``'L'`` is preferred because ``1l`` looks too much like eleven!).  "
"Numeric literals containing a decimal point or an exponent sign yield "
"floating point numbers. Appending ``'j'`` or ``'J'`` to a numeric literal "
"yields a complex number with a zero real part. A complex numeric literal is "
"the sum of a real and an imaginary part."
msgstr ""

# 932e2a9d37784ad4ab6d33273cb6dfa5
#: ../Doc/library/stdtypes.rst:276
msgid ""
"Python fully supports mixed arithmetic: when a binary arithmetic operator "
"has operands of different numeric types, the operand with the \"narrower\" "
"type is widened to that of the other, where plain integer is narrower than "
"long integer is narrower than floating point is narrower than complex. "
"Comparisons between numbers of mixed type use the same rule. [2]_ The "
"constructors :func:`int`, :func:`long`, :func:`float`, and :func:`complex` "
"can be used to produce numbers of a specific type."
msgstr ""

# 39d7a8d529b34317b090ff2a0ecb8b70
#: ../Doc/library/stdtypes.rst:284
msgid ""
"All built-in numeric types support the following operations. See :ref:"
"`power` and later sections for the operators' priorities."
msgstr ""

#: ../Doc/library/stdtypes.rst:290
msgid "``x + y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:290
msgid "sum of *x* and *y*"
msgstr ""

#: ../Doc/library/stdtypes.rst:292
msgid "``x - y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:292
msgid "difference of *x* and *y*"
msgstr ""

#: ../Doc/library/stdtypes.rst:294
msgid "``x * y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:294
msgid "product of *x* and *y*"
msgstr ""

#: ../Doc/library/stdtypes.rst:296
msgid "``x / y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:296
msgid "quotient of *x* and *y*"
msgstr ""

#: ../Doc/library/stdtypes.rst:298
msgid "``x // y``"
msgstr ""

# 14b39f05555245cfad7774f8042f81fe
#: ../Doc/library/stdtypes.rst:298
msgid "(floored) quotient of *x* and *y*"
msgstr ""

# e453bc45aec34c1d83b1721f07591ef2
#: ../Doc/library/stdtypes.rst:298
msgid "(4)(5)"
msgstr ""

#: ../Doc/library/stdtypes.rst:301
msgid "``x % y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:301
msgid "remainder of ``x / y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:303
msgid "``-x``"
msgstr ""

#: ../Doc/library/stdtypes.rst:303
msgid "*x* negated"
msgstr ""

#: ../Doc/library/stdtypes.rst:305
msgid "``+x``"
msgstr ""

#: ../Doc/library/stdtypes.rst:305
msgid "*x* unchanged"
msgstr ""

#: ../Doc/library/stdtypes.rst:307
msgid "``abs(x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:307
msgid "absolute value or magnitude of *x*"
msgstr ""

#: ../Doc/library/stdtypes.rst:310
msgid "``int(x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:310
msgid "*x* converted to integer"
msgstr ""

# 81c3b5cb4f514b2d9c71e3803175ca97
#: ../Doc/library/stdtypes.rst:312
msgid "``long(x)``"
msgstr ""

# f6fcfd6ed99d45ec8067ec7ff1ee1efd
#: ../Doc/library/stdtypes.rst:312
msgid "*x* converted to long integer"
msgstr ""

#: ../Doc/library/stdtypes.rst:314
msgid "``float(x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:314
msgid "*x* converted to floating point"
msgstr ""

#: ../Doc/library/stdtypes.rst:314 ../Doc/library/stdtypes.rst:727
#: ../Doc/library/stdtypes.rst:1457 ../Doc/library/stdtypes.rst:1604
msgid "\\(6)"
msgstr ""

# 0a92d5cc86524b40a989fa054cc21316
#: ../Doc/library/stdtypes.rst:316
msgid "``complex(re,im)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:316
msgid ""
"a complex number with real part *re*, imaginary part *im*. *im* defaults to "
"zero."
msgstr ""

#: ../Doc/library/stdtypes.rst:320
msgid "``c.conjugate()``"
msgstr ""

# 26205828779d442c80402b4d6074cedd
#: ../Doc/library/stdtypes.rst:320
msgid "conjugate of the complex number *c*. (Identity on real numbers)"
msgstr ""

#: ../Doc/library/stdtypes.rst:323
msgid "``divmod(x, y)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:323
msgid "the pair ``(x // y, x % y)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:323 ../Doc/library/stdtypes.rst:735
msgid "(3)(4)"
msgstr ""

#: ../Doc/library/stdtypes.rst:325
msgid "``pow(x, y)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:325 ../Doc/library/stdtypes.rst:327
msgid "*x* to the power *y*"
msgstr ""

# 85a84a15f5dc4937aff9cecdd852b481
#: ../Doc/library/stdtypes.rst:325
msgid "(3)(7)"
msgstr ""

#: ../Doc/library/stdtypes.rst:327
msgid "``x ** y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:327 ../Doc/library/stdtypes.rst:1429
#: ../Doc/library/stdtypes.rst:1609
msgid "\\(7)"
msgstr ""

# c0c948d43ce74c6890eb089f83b172e4
#: ../Doc/library/stdtypes.rst:341
msgid ""
"For (plain or long) integer division, the result is an integer. The result "
"is always rounded towards minus infinity: 1/2 is 0, (-1)/2 is -1, 1/(-2) is "
"-1, and (-1)/(-2) is 0.  Note that the result is a long integer if either "
"operand is a long integer, regardless of the numeric value."
msgstr ""

# 396067a95ea74fa4aa1e34bbd575dc61
#: ../Doc/library/stdtypes.rst:354
msgid ""
"Conversion from floats using :func:`int` or :func:`long` truncates toward "
"zero like the related function, :func:`math.trunc`.  Use the function :func:"
"`math.floor` to round downward and :func:`math.ceil` to round upward."
msgstr ""

# d4dfe0929b4e4bd18a34357ea68fd4b5
#: ../Doc/library/stdtypes.rst:360
msgid "See :ref:`built-in-funcs` for a full description."
msgstr ""

# 9a930ed7dcec419597918f4e8102ead7
#: ../Doc/library/stdtypes.rst:369
msgid ""
"Also referred to as integer division.  The resultant value is a whole "
"integer, though the result's type is not necessarily int."
msgstr ""

#: ../Doc/library/stdtypes.rst:373
msgid ""
"float also accepts the strings \"nan\" and \"inf\" with an optional prefix "
"\"+\" or \"-\" for Not a Number (NaN) and positive or negative infinity."
msgstr ""

#: ../Doc/library/stdtypes.rst:379
msgid ""
"Python defines ``pow(0, 0)`` and ``0 ** 0`` to be ``1``, as is common for "
"programming languages."
msgstr ""

# 34af80fa63f4460daa45e0a7f64d8822
#: ../Doc/library/stdtypes.rst:382
msgid ""
"All :class:`numbers.Real` types (:class:`int`, :class:`long`, and :class:"
"`float`) also include the following operations:"
msgstr ""

#: ../Doc/library/stdtypes.rst:388
msgid "``math.trunc(x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:388
msgid "*x* truncated to Integral"
msgstr ""

#: ../Doc/library/stdtypes.rst:390
msgid "``round(x[, n])``"
msgstr ""

#: ../Doc/library/stdtypes.rst:390
msgid ""
"*x* rounded to n digits, rounding half to even. If n is omitted, it defaults "
"to 0."
msgstr ""

#: ../Doc/library/stdtypes.rst:394
msgid "``math.floor(x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:394
msgid "the greatest integral float <= *x*"
msgstr ""

#: ../Doc/library/stdtypes.rst:396
msgid "``math.ceil(x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:396
msgid "the least integral float >= *x*"
msgstr ""

# cf9abd2de5624233a5cda25354eccb50
#: ../Doc/library/stdtypes.rst:405
msgid "Bitwise Operations on Integer Types"
msgstr ""

# 2a5649bb57904b6ab1f38bb4efd638db
#: ../Doc/library/stdtypes.rst:417
msgid ""
"Bitwise operations only make sense for integers.  Negative numbers are "
"treated as their 2's complement value (this assumes a sufficiently large "
"number of bits that no overflow occurs during the operation)."
msgstr ""

#: ../Doc/library/stdtypes.rst:421
msgid ""
"The priorities of the binary bitwise operations are all lower than the "
"numeric operations and higher than the comparisons; the unary operation "
"``~`` has the same priority as the other unary numeric operations (``+`` and "
"``-``)."
msgstr ""

# df8cbf1ab2844660a0a646756d84d1ff
#: ../Doc/library/stdtypes.rst:425
msgid ""
"This table lists the bitwise operations sorted in ascending priority "
"(operations in the same box have the same priority):"
msgstr ""

#: ../Doc/library/stdtypes.rst:431
msgid "``x | y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:431
msgid "bitwise :dfn:`or` of *x* and *y*"
msgstr ""

#: ../Doc/library/stdtypes.rst:434
msgid "``x ^ y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:434
msgid "bitwise :dfn:`exclusive or` of *x* and *y*"
msgstr ""

#: ../Doc/library/stdtypes.rst:437
msgid "``x & y``"
msgstr ""

#: ../Doc/library/stdtypes.rst:437
msgid "bitwise :dfn:`and` of *x* and *y*"
msgstr ""

#: ../Doc/library/stdtypes.rst:440
msgid "``x << n``"
msgstr ""

#: ../Doc/library/stdtypes.rst:440
msgid "*x* shifted left by *n* bits"
msgstr ""

#: ../Doc/library/stdtypes.rst:440
msgid "(1)(2)"
msgstr ""

#: ../Doc/library/stdtypes.rst:442
msgid "``x >> n``"
msgstr ""

#: ../Doc/library/stdtypes.rst:442
msgid "*x* shifted right by *n* bits"
msgstr ""

#: ../Doc/library/stdtypes.rst:442
msgid "(1)(3)"
msgstr ""

#: ../Doc/library/stdtypes.rst:444
msgid "``~x``"
msgstr ""

#: ../Doc/library/stdtypes.rst:444
msgid "the bits of *x* inverted"
msgstr ""

#: ../Doc/library/stdtypes.rst:450
msgid ""
"Negative shift counts are illegal and cause a :exc:`ValueError` to be raised."
msgstr ""

# 3c832cf8cb924fd388f83f03564166b5
#: ../Doc/library/stdtypes.rst:453
msgid ""
"A left shift by *n* bits is equivalent to multiplication by ``pow(2, n)``.  "
"A long integer is returned if the result exceeds the range of plain integers."
msgstr ""

# 11fccaf0ffbb4e93ae8ffd9796e6aec2
#: ../Doc/library/stdtypes.rst:457
msgid "A right shift by *n* bits is equivalent to division by ``pow(2, n)``."
msgstr ""

#: ../Doc/library/stdtypes.rst:461
msgid "Additional Methods on Integer Types"
msgstr ""

# 9e47cf60d9a148a5ba575795b3bdae22
#: ../Doc/library/stdtypes.rst:463
msgid ""
"The integer types implement the :class:`numbers.Integral` :term:`abstract "
"base class`. In addition, they provide one more method:"
msgstr ""

#: ../Doc/library/stdtypes.rst:469
msgid ""
"Return the number of bits necessary to represent an integer in binary, "
"excluding the sign and leading zeros::"
msgstr ""

#: ../Doc/library/stdtypes.rst:478
msgid ""
"More precisely, if ``x`` is nonzero, then ``x.bit_length()`` is the unique "
"positive integer ``k`` such that ``2**(k-1) <= abs(x) < 2**k``. "
"Equivalently, when ``abs(x)`` is small enough to have a correctly rounded "
"logarithm, then ``k = 1 + int(log(abs(x), 2))``. If ``x`` is zero, then ``x."
"bit_length()`` returns ``0``."
msgstr ""

#: ../Doc/library/stdtypes.rst:495
msgid "Additional Methods on Float"
msgstr ""

# 4fecaa2855b94ef0a4faa44d56b0e769
#: ../Doc/library/stdtypes.rst:497
msgid ""
"The float type implements the :class:`numbers.Real` :term:`abstract base "
"class`. float also has the following additional methods."
msgstr ""

#: ../Doc/library/stdtypes.rst:502
msgid ""
"Return a pair of integers whose ratio is exactly equal to the original float "
"and with a positive denominator.  Raises :exc:`OverflowError` on infinities "
"and a :exc:`ValueError` on NaNs."
msgstr ""

# 96a0efcbccea4894a077f08a05cf9606
#: ../Doc/library/stdtypes.rst:511
msgid ""
"Return ``True`` if the float instance is finite with integral value, and "
"``False`` otherwise::"
msgstr ""

#: ../Doc/library/stdtypes.rst:521
msgid ""
"Two methods support conversion to and from hexadecimal strings.  Since "
"Python's floats are stored internally as binary numbers, converting a float "
"to or from a *decimal* string usually involves a small rounding error.  In "
"contrast, hexadecimal strings allow exact representation and specification "
"of floating-point numbers.  This can be useful when debugging, and in "
"numerical work."
msgstr ""

#: ../Doc/library/stdtypes.rst:532
msgid ""
"Return a representation of a floating-point number as a hexadecimal string.  "
"For finite floating-point numbers, this representation will always include a "
"leading ``0x`` and a trailing ``p`` and exponent."
msgstr ""

#: ../Doc/library/stdtypes.rst:542
msgid ""
"Class method to return the float represented by a hexadecimal string *s*.  "
"The string *s* may have leading and trailing whitespace."
msgstr ""

#: ../Doc/library/stdtypes.rst:549
msgid ""
"Note that :meth:`float.hex` is an instance method, while :meth:`float."
"fromhex` is a class method."
msgstr ""

#: ../Doc/library/stdtypes.rst:552
msgid "A hexadecimal string takes the form::"
msgstr ""

#: ../Doc/library/stdtypes.rst:556
msgid ""
"where the optional ``sign`` may by either ``+`` or ``-``, ``integer`` and "
"``fraction`` are strings of hexadecimal digits, and ``exponent`` is a "
"decimal integer with an optional leading sign.  Case is not significant, and "
"there must be at least one hexadecimal digit in either the integer or the "
"fraction.  This syntax is similar to the syntax specified in section 6.4.4.2 "
"of the C99 standard, and also to the syntax used in Java 1.5 onwards.  In "
"particular, the output of :meth:`float.hex` is usable as a hexadecimal "
"floating-point literal in C or Java code, and hexadecimal strings produced "
"by C's ``%a`` format character or Java's ``Double.toHexString`` are accepted "
"by :meth:`float.fromhex`."
msgstr ""

#: ../Doc/library/stdtypes.rst:569
msgid ""
"Note that the exponent is written in decimal rather than hexadecimal, and "
"that it gives the power of 2 by which to multiply the coefficient. For "
"example, the hexadecimal string ``0x3.a7p10`` represents the floating-point "
"number ``(3 + 10./16 + 7./16**2) * 2.0**10``, or ``3740.0``::"
msgstr ""

#: ../Doc/library/stdtypes.rst:579
msgid ""
"Applying the reverse conversion to ``3740.0`` gives a different hexadecimal "
"string representing the same number::"
msgstr ""

#: ../Doc/library/stdtypes.rst:589
msgid "Iterator Types"
msgstr ""

#: ../Doc/library/stdtypes.rst:599
msgid ""
"Python supports a concept of iteration over containers.  This is implemented "
"using two distinct methods; these are used to allow user-defined classes to "
"support iteration.  Sequences, described below in more detail, always "
"support the iteration methods."
msgstr ""

#: ../Doc/library/stdtypes.rst:604
msgid ""
"One method needs to be defined for container objects to provide iteration "
"support:"
msgstr ""

#: ../Doc/library/stdtypes.rst:611
msgid ""
"Return an iterator object.  The object is required to support the iterator "
"protocol described below.  If a container supports different types of "
"iteration, additional methods can be provided to specifically request "
"iterators for those iteration types.  (An example of an object supporting "
"multiple forms of iteration would be a tree structure which supports both "
"breadth-first and depth-first traversal.)  This method corresponds to the :"
"attr:`tp_iter` slot of the type structure for Python objects in the Python/C "
"API."
msgstr ""

#: ../Doc/library/stdtypes.rst:620
msgid ""
"The iterator objects themselves are required to support the following two "
"methods, which together form the :dfn:`iterator protocol`:"
msgstr ""

#: ../Doc/library/stdtypes.rst:626
msgid ""
"Return the iterator object itself.  This is required to allow both "
"containers and iterators to be used with the :keyword:`for` and :keyword:"
"`in` statements. This method corresponds to the :attr:`tp_iter` slot of the "
"type structure for Python objects in the Python/C API."
msgstr ""

#: ../Doc/library/stdtypes.rst:634
msgid ""
"Return the next item from the container.  If there are no further items, "
"raise the :exc:`StopIteration` exception.  This method corresponds to the :"
"attr:`tp_iternext` slot of the type structure for Python objects in the "
"Python/C API."
msgstr ""

#: ../Doc/library/stdtypes.rst:639
msgid ""
"Python defines several iterator objects to support iteration over general "
"and specific sequence types, dictionaries, and other more specialized "
"forms.  The specific types are not important beyond their implementation of "
"the iterator protocol."
msgstr ""

# b7932b576ecd4981a4138376484fd7aa
#: ../Doc/library/stdtypes.rst:644
msgid ""
"The intention of the protocol is that once an iterator's :meth:`next` method "
"raises :exc:`StopIteration`, it will continue to do so on subsequent calls. "
"Implementations that do not obey this property are deemed broken.  (This "
"constraint was added in Python 2.3; in Python 2.2, various iterators are "
"broken according to this rule.)"
msgstr ""

#: ../Doc/library/stdtypes.rst:654
msgid "Generator Types"
msgstr ""

# a404de54b4d140daa895b0959c294467
#: ../Doc/library/stdtypes.rst:656
msgid ""
"Python's :term:`generator`\\s provide a convenient way to implement the "
"iterator protocol.  If a container object's :meth:`__iter__` method is "
"implemented as a generator, it will automatically return an iterator object "
"(technically, a generator object) supplying the :meth:`__iter__` and :meth:"
"`next` methods.  More information about generators can be found in :ref:`the "
"documentation for the yield expression <yieldexpr>`."
msgstr ""

# 0cb85871d0b74e798f91e45492fa8b5d
#: ../Doc/library/stdtypes.rst:667
msgid ""
"Sequence Types --- :class:`str`, :class:`unicode`, :class:`list`, :class:"
"`tuple`, :class:`bytearray`, :class:`buffer`, :class:`xrange`"
msgstr ""

# 7af1a2290b3a46e29334bb10d6cc89a5
#: ../Doc/library/stdtypes.rst:669
msgid ""
"There are seven sequence types: strings, Unicode strings, lists, tuples, "
"bytearrays, buffers, and xrange objects."
msgstr ""

# 5b3b7efa336c4d6e80d96fec2dc05a04
#: ../Doc/library/stdtypes.rst:672
msgid ""
"For other containers see the built in :class:`dict` and :class:`set` "
"classes, and the :mod:`collections` module."
msgstr ""

# ada76b22d142479a87710a076fd8c5f1
#: ../Doc/library/stdtypes.rst:686
msgid ""
"String literals are written in single or double quotes: ``'xyzzy'``, ``"
"\"frobozz\"``.  See :ref:`strings` for more about string literals. Unicode "
"strings are much like strings, but are specified in the syntax using a "
"preceding ``'u'`` character: ``u'abc'``, ``u\"def\"``. In addition to the "
"functionality described here, there are also string-specific methods "
"described in the :ref:`string-methods` section. Lists are constructed with "
"square brackets, separating items with commas: ``[a, b, c]``. Tuples are "
"constructed by the comma operator (not within square brackets), with or "
"without enclosing parentheses, but an empty tuple must have the enclosing "
"parentheses, such as ``a, b, c`` or ``()``.  A single item tuple must have a "
"trailing comma, such as ``(d,)``."
msgstr ""

# 0b0f5664cf8d4b05838acf1119479b70
#: ../Doc/library/stdtypes.rst:698
msgid ""
"Bytearray objects are created with the built-in function :func:`bytearray`."
msgstr ""

# 84eafaf3216d4a98b4d2af50e74b8e43
#: ../Doc/library/stdtypes.rst:700
msgid ""
"Buffer objects are not directly supported by Python syntax, but can be "
"created by calling the built-in function :func:`buffer`.  They don't support "
"concatenation or repetition."
msgstr ""

# 99bd00086fa848ab856564d36f62cae1
#: ../Doc/library/stdtypes.rst:704
msgid ""
"Objects of type xrange are similar to buffers in that there is no specific "
"syntax to create them, but they are created using the :func:`xrange` "
"function.  They don't support slicing, concatenation or repetition, and "
"using ``in``, ``not in``, :func:`min` or :func:`max` on them is inefficient."
msgstr ""

# e7de51dddacf41aab58fb1369ddf2734
#: ../Doc/library/stdtypes.rst:709
msgid ""
"Most sequence types support the following operations.  The ``in`` and ``not "
"in`` operations have the same priorities as the comparison operations.  The "
"``+`` and ``*`` operations have the same priority as the corresponding "
"numeric operations. [3]_ Additional methods are provided for :ref:`typesseq-"
"mutable`."
msgstr ""

#: ../Doc/library/stdtypes.rst:714
msgid ""
"This table lists the sequence operations sorted in ascending priority "
"(operations in the same box have the same priority).  In the table, *s* and "
"*t* are sequences of the same type; *n*, *i* and *j* are integers:"
msgstr ""

#: ../Doc/library/stdtypes.rst:721
msgid "``True`` if an item of *s* is equal to *x*, else ``False``"
msgstr ""

#: ../Doc/library/stdtypes.rst:724
msgid "``False`` if an item of *s* is equal to *x*, else ``True``"
msgstr ""

#: ../Doc/library/stdtypes.rst:727
msgid "``s + t``"
msgstr ""

#: ../Doc/library/stdtypes.rst:727
msgid "the concatenation of *s* and *t*"
msgstr ""

#: ../Doc/library/stdtypes.rst:730
msgid "``s * n, n * s``"
msgstr ""

#: ../Doc/library/stdtypes.rst:730
msgid "*n* shallow copies of *s* concatenated"
msgstr ""

#: ../Doc/library/stdtypes.rst:733
msgid "``s[i]``"
msgstr ""

# 4cab0e44ad1b4b54b5a141cf72a3a67c
#: ../Doc/library/stdtypes.rst:733
msgid "*i*\\ th item of *s*, origin 0"
msgstr ""

#: ../Doc/library/stdtypes.rst:735
msgid "``s[i:j]``"
msgstr ""

#: ../Doc/library/stdtypes.rst:735
msgid "slice of *s* from *i* to *j*"
msgstr ""

#: ../Doc/library/stdtypes.rst:737
msgid "``s[i:j:k]``"
msgstr ""

#: ../Doc/library/stdtypes.rst:737
msgid "slice of *s* from *i* to *j* with step *k*"
msgstr ""

#: ../Doc/library/stdtypes.rst:737
msgid "(3)(5)"
msgstr ""

#: ../Doc/library/stdtypes.rst:740
msgid "length of *s*"
msgstr ""

#: ../Doc/library/stdtypes.rst:742
msgid "``min(s)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:742
msgid "smallest item of *s*"
msgstr ""

#: ../Doc/library/stdtypes.rst:744
msgid "``max(s)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:744
msgid "largest item of *s*"
msgstr ""

# d8f049ef2705412480e48d7fb3f9f5e9
#: ../Doc/library/stdtypes.rst:746
msgid "``s.index(i)``"
msgstr ""

# b1987c15543e4b3e97a63a557c00fc2b
#: ../Doc/library/stdtypes.rst:746
msgid "index of the first occurence of *i* in *s*"
msgstr ""

# 5c48e4a01e704bca8d60167101457814
#: ../Doc/library/stdtypes.rst:749
msgid "``s.count(i)``"
msgstr ""

# 5d7da085090d428aa85f9fb1873a2c76
#: ../Doc/library/stdtypes.rst:749
msgid "total number of occurences of *i* in *s*"
msgstr ""

# e57cea5d997a4e8187883d5dc2f1a7da
#: ../Doc/library/stdtypes.rst:753
msgid ""
"Sequence types also support comparisons. In particular, tuples and lists are "
"compared lexicographically by comparing corresponding elements. This means "
"that to compare equal, every element must compare equal and the two "
"sequences must be of the same type and have the same length. (For full "
"details see :ref:`comparisons` in the language reference.)"
msgstr ""

# 281d196fe0314b13af96f5d8675dfd0d
#: ../Doc/library/stdtypes.rst:776
msgid ""
"When *s* is a string or Unicode string object the ``in`` and ``not in`` "
"operations act like a substring test.  In Python versions before 2.3, *x* "
"had to be a string of length 1. In Python 2.3 and beyond, *x* may be a "
"string of any length."
msgstr ""

#: ../Doc/library/stdtypes.rst:782
msgid ""
"Values of *n* less than ``0`` are treated as ``0`` (which yields an empty "
"sequence of the same type as *s*).  Note also that the copies are shallow; "
"nested structures are not copied.  This often haunts new Python programmers; "
"consider:"
msgstr ""

#: ../Doc/library/stdtypes.rst:794
msgid ""
"What has happened is that ``[[]]`` is a one-element list containing an empty "
"list, so all three elements of ``[[]] * 3`` are (pointers to) this single "
"empty list.  Modifying any of the elements of ``lists`` modifies this single "
"list. You can create a list of different lists this way:"
msgstr ""

#: ../Doc/library/stdtypes.rst:807
msgid ""
"If *i* or *j* is negative, the index is relative to the end of the string: "
"``len(s) + i`` or ``len(s) + j`` is substituted.  But note that ``-0`` is "
"still ``0``."
msgstr ""

#: ../Doc/library/stdtypes.rst:812
msgid ""
"The slice of *s* from *i* to *j* is defined as the sequence of items with "
"index *k* such that ``i <= k < j``.  If *i* or *j* is greater than ``len(s)"
"``, use ``len(s)``.  If *i* is omitted or ``None``, use ``0``.  If *j* is "
"omitted or ``None``, use ``len(s)``.  If *i* is greater than or equal to "
"*j*, the slice is empty."
msgstr ""

#: ../Doc/library/stdtypes.rst:819
msgid ""
"The slice of *s* from *i* to *j* with step *k* is defined as the sequence of "
"items with index  ``x = i + n*k`` such that ``0 <= n < (j-i)/k``.  In other "
"words, the indices are ``i``, ``i+k``, ``i+2*k``, ``i+3*k`` and so on, "
"stopping when *j* is reached (but never including *j*).  If *i* or *j* is "
"greater than ``len(s)``, use ``len(s)``.  If *i* or *j* are omitted or "
"``None``, they become \"end\" values (which end depends on the sign of "
"*k*).  Note, *k* cannot be zero. If *k* is ``None``, it is treated like "
"``1``."
msgstr ""

#: ../Doc/library/stdtypes.rst:830
msgid ""
"If *s* and *t* are both strings, some Python implementations such as CPython "
"can usually perform an in-place optimization for assignments of the form ``s "
"= s + t`` or ``s += t``.  When applicable, this optimization makes quadratic "
"run-time much less likely.  This optimization is both version and "
"implementation dependent.  For performance sensitive code, it is preferable "
"to use the :meth:`str.join` method which assures consistent linear "
"concatenation performance across versions and implementations."
msgstr ""

#: ../Doc/library/stdtypes.rst:845
msgid "String Methods"
msgstr ""

# 706bed667bdc4892bed6e31cb950bdd8
#: ../Doc/library/stdtypes.rst:849
msgid ""
"Below are listed the string methods which both 8-bit strings and Unicode "
"objects support.  Some of them are also available on :class:`bytearray` "
"objects."
msgstr ""

# dbf273d154984eb7874cca9625d2c16b
#: ../Doc/library/stdtypes.rst:853
msgid ""
"In addition, Python's strings support the sequence type methods described in "
"the :ref:`typesseq` section. To output formatted strings use template "
"strings or the ``%`` operator described in the :ref:`string-formatting` "
"section. Also, see the :mod:`re` module for string functions based on "
"regular expressions."
msgstr ""

# 426cca6ca9f54be2a132d07c12086c23
#: ../Doc/library/stdtypes.rst:861
msgid ""
"Return a copy of the string with its first character capitalized and the "
"rest lowercased."
msgstr ""

# bc85e794e8d84ffea376a828c183481f
# 264ccfaa6e20450b90fb16d79d4f6dbd
# d825f444d3f84d19bae60a5e1a715ccd
# d670d7fda1794deb9b05a6c3e71c27db
# 62494529e2bf4b7799bf7f7d52369f5d
# d72889d93acd4f449cc46b876ba530bd
# af849b45d334462a8b1d5f5a99d89ffb
# 26ac511b3dbb4187a69a1da2f54d3d6f
# db817e7617f14188958110487ffaac4b
# 10f001c66b304f88b8dd77b95e6a4a9c
# afe291bc58da4fccb7a97526fe057692
# 44520710c5a7492995cb94a39828ce0a
#: ../Doc/library/stdtypes.rst:864 ../Doc/library/stdtypes.rst:989
#: ../Doc/library/stdtypes.rst:997 ../Doc/library/stdtypes.rst:1005
#: ../Doc/library/stdtypes.rst:1013 ../Doc/library/stdtypes.rst:1021
#: ../Doc/library/stdtypes.rst:1030 ../Doc/library/stdtypes.rst:1038
#: ../Doc/library/stdtypes.rst:1063 ../Doc/library/stdtypes.rst:1236
#: ../Doc/library/stdtypes.rst:1264 ../Doc/library/stdtypes.rst:1301
msgid "For 8-bit strings, this method is locale-dependent."
msgstr ""

#: ../Doc/library/stdtypes.rst:869
msgid ""
"Return centered in a string of length *width*. Padding is done using the "
"specified *fillchar* (default is a space)."
msgstr ""

#: ../Doc/library/stdtypes.rst:878
msgid ""
"Return the number of non-overlapping occurrences of substring *sub* in the "
"range [*start*, *end*].  Optional arguments *start* and *end* are "
"interpreted as in slice notation."
msgstr ""

# 480f9b234a85428b86fbd64e06be9c03
#: ../Doc/library/stdtypes.rst:885
msgid ""
"Decodes the string using the codec registered for *encoding*. *encoding* "
"defaults to the default string encoding.  *errors* may be given to set a "
"different error handling scheme.  The default is ``'strict'``, meaning that "
"encoding errors raise :exc:`UnicodeError`.  Other possible values are "
"``'ignore'``, ``'replace'`` and any other name registered via :func:`codecs."
"register_error`, see section :ref:`codec-base-classes`."
msgstr ""

# 392f6d16e86b4d509ae4c384292ba0b0
#: ../Doc/library/stdtypes.rst:902
msgid ""
"Return an encoded version of the string.  Default encoding is the current "
"default string encoding.  *errors* may be given to set a different error "
"handling scheme.  The default for *errors* is ``'strict'``, meaning that "
"encoding errors raise a :exc:`UnicodeError`.  Other possible values are "
"``'ignore'``, ``'replace'``, ``'xmlcharrefreplace'``, ``'backslashreplace'`` "
"and any other name registered via :func:`codecs.register_error`, see "
"section :ref:`codec-base-classes`. For a list of possible encodings, see "
"section :ref:`standard-encodings`."
msgstr ""

#: ../Doc/library/stdtypes.rst:922
msgid ""
"Return ``True`` if the string ends with the specified *suffix*, otherwise "
"return ``False``.  *suffix* can also be a tuple of suffixes to look for.  "
"With optional *start*, test beginning at that position.  With optional "
"*end*, stop comparing at that position."
msgstr ""

#: ../Doc/library/stdtypes.rst:933
msgid ""
"Return a copy of the string where all tab characters are replaced by one or "
"more spaces, depending on the current column and the given tab size.  The "
"column number is reset to zero after each newline occurring in the string. "
"If *tabsize* is not given, a tab size of ``8`` characters is assumed.  This "
"doesn't understand other non-printing characters or escape sequences."
msgstr ""

#: ../Doc/library/stdtypes.rst:942
msgid ""
"Return the lowest index in the string where substring *sub* is found, such "
"that *sub* is contained in the slice ``s[start:end]``.  Optional arguments "
"*start* and *end* are interpreted as in slice notation.  Return ``-1`` if "
"*sub* is not found."
msgstr ""

# 2845be755dd94207b86bd9a34f1cd6b2
#: ../Doc/library/stdtypes.rst:949
msgid ""
"The :meth:`~str.find` method should be used only if you need to know the "
"position of *sub*.  To check if *sub* is a substring or not, use the :"
"keyword:`in` operator::"
msgstr ""

#: ../Doc/library/stdtypes.rst:959
msgid ""
"Perform a string formatting operation.  The string on which this method is "
"called can contain literal text or replacement fields delimited by braces ``"
"{}``.  Each replacement field contains either the numeric index of a "
"positional argument, or the name of a keyword argument.  Returns a copy of "
"the string where each replacement field is replaced with the string value of "
"the corresponding argument."
msgstr ""

#: ../Doc/library/stdtypes.rst:969
msgid ""
"See :ref:`formatstrings` for a description of the various formatting options "
"that can be specified in format strings."
msgstr ""

# 3f631fe2d1734637af370b8db0c75502
#: ../Doc/library/stdtypes.rst:972
msgid ""
"This method of string formatting is the new standard in Python 3, and should "
"be preferred to the ``%`` formatting described in :ref:`string-formatting` "
"in new code."
msgstr ""

#: ../Doc/library/stdtypes.rst:981
msgid ""
"Like :meth:`find`, but raise :exc:`ValueError` when the substring is not "
"found."
msgstr ""

#: ../Doc/library/stdtypes.rst:986
msgid ""
"Return true if all characters in the string are alphanumeric and there is at "
"least one character, false otherwise."
msgstr ""

#: ../Doc/library/stdtypes.rst:994
msgid ""
"Return true if all characters in the string are alphabetic and there is at "
"least one character, false otherwise."
msgstr ""

#: ../Doc/library/stdtypes.rst:1002
msgid ""
"Return true if all characters in the string are digits and there is at least "
"one character, false otherwise."
msgstr ""

# 9439ecd71ec24267b7a1e69faa8ee3cb
#: ../Doc/library/stdtypes.rst:1010
msgid ""
"Return true if all cased characters [4]_ in the string are lowercase and "
"there is at least one cased character, false otherwise."
msgstr ""

#: ../Doc/library/stdtypes.rst:1018
msgid ""
"Return true if there are only whitespace characters in the string and there "
"is at least one character, false otherwise."
msgstr ""

#: ../Doc/library/stdtypes.rst:1026
msgid ""
"Return true if the string is a titlecased string and there is at least one "
"character, for example uppercase characters may only follow uncased "
"characters and lowercase characters only cased ones.  Return false otherwise."
msgstr ""

# 840c6780a9ae410ba1090c7ae4861355
#: ../Doc/library/stdtypes.rst:1035
msgid ""
"Return true if all cased characters [4]_ in the string are uppercase and "
"there is at least one cased character, false otherwise."
msgstr ""

# 9338bd9a02b14f248df80b8ce55f6eba
#: ../Doc/library/stdtypes.rst:1043
msgid ""
"Return a string which is the concatenation of the strings in the :term:"
"`iterable` *iterable*.  The separator between elements is the string "
"providing this method."
msgstr ""

# eb321e31656e46a192ebd950877ffd56
#: ../Doc/library/stdtypes.rst:1050
msgid ""
"Return the string left justified in a string of length *width*. Padding is "
"done using the specified *fillchar* (default is a space).  The original "
"string is returned if *width* is less than or equal to ``len(s)``."
msgstr ""

# b48282a2092a47288f663e240df986ea
#: ../Doc/library/stdtypes.rst:1060
msgid ""
"Return a copy of the string with all the cased characters [4]_ converted to "
"lowercase."
msgstr ""

#: ../Doc/library/stdtypes.rst:1068
msgid ""
"Return a copy of the string with leading characters removed.  The *chars* "
"argument is a string specifying the set of characters to be removed.  If "
"omitted or ``None``, the *chars* argument defaults to removing whitespace.  "
"The *chars* argument is not a prefix; rather, all combinations of its values "
"are stripped:"
msgstr ""

#: ../Doc/library/stdtypes.rst:1084
msgid ""
"Split the string at the first occurrence of *sep*, and return a 3-tuple "
"containing the part before the separator, the separator itself, and the part "
"after the separator.  If the separator is not found, return a 3-tuple "
"containing the string itself, followed by two empty strings."
msgstr ""

#: ../Doc/library/stdtypes.rst:1094
msgid ""
"Return a copy of the string with all occurrences of substring *old* replaced "
"by *new*.  If the optional argument *count* is given, only the first *count* "
"occurrences are replaced."
msgstr ""

#: ../Doc/library/stdtypes.rst:1101
msgid ""
"Return the highest index in the string where substring *sub* is found, such "
"that *sub* is contained within ``s[start:end]``.  Optional arguments *start* "
"and *end* are interpreted as in slice notation.  Return ``-1`` on failure."
msgstr ""

#: ../Doc/library/stdtypes.rst:1108
msgid ""
"Like :meth:`rfind` but raises :exc:`ValueError` when the substring *sub* is "
"not found."
msgstr ""

# 33d4f4262d6f4f2e8e703d85ab2f9517
#: ../Doc/library/stdtypes.rst:1114
msgid ""
"Return the string right justified in a string of length *width*. Padding is "
"done using the specified *fillchar* (default is a space). The original "
"string is returned if *width* is less than or equal to ``len(s)``."
msgstr ""

#: ../Doc/library/stdtypes.rst:1124
msgid ""
"Split the string at the last occurrence of *sep*, and return a 3-tuple "
"containing the part before the separator, the separator itself, and the part "
"after the separator.  If the separator is not found, return a 3-tuple "
"containing two empty strings, followed by the string itself."
msgstr ""

#: ../Doc/library/stdtypes.rst:1134
msgid ""
"Return a list of the words in the string, using *sep* as the delimiter "
"string. If *maxsplit* is given, at most *maxsplit* splits are done, the "
"*rightmost* ones.  If *sep* is not specified or ``None``, any whitespace "
"string is a separator.  Except for splitting from the right, :meth:`rsplit` "
"behaves like :meth:`split` which is described in detail below."
msgstr ""

#: ../Doc/library/stdtypes.rst:1145
msgid ""
"Return a copy of the string with trailing characters removed.  The *chars* "
"argument is a string specifying the set of characters to be removed.  If "
"omitted or ``None``, the *chars* argument defaults to removing whitespace.  "
"The *chars* argument is not a suffix; rather, all combinations of its values "
"are stripped:"
msgstr ""

# c299b9a255f74190906840c806715f3a
#: ../Doc/library/stdtypes.rst:1161
msgid ""
"Return a list of the words in the string, using *sep* as the delimiter "
"string.  If *maxsplit* is given, at most *maxsplit* splits are done (thus, "
"the list will have at most ``maxsplit+1`` elements).  If *maxsplit* is not "
"specified or ``-1``, then there is no limit on the number of splits (all "
"possible splits are made)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1167
msgid ""
"If *sep* is given, consecutive delimiters are not grouped together and are "
"deemed to delimit empty strings (for example, ``'1,,2'.split(',')`` returns "
"``['1', '', '2']``).  The *sep* argument may consist of multiple characters "
"(for example, ``'1<>2<>3'.split('<>')`` returns ``['1', '2', '3']``). "
"Splitting an empty string with a specified separator returns ``['']``."
msgstr ""

#: ../Doc/library/stdtypes.rst:1173
msgid ""
"If *sep* is not specified or is ``None``, a different splitting algorithm is "
"applied: runs of consecutive whitespace are regarded as a single separator, "
"and the result will contain no empty strings at the start or end if the "
"string has leading or trailing whitespace.  Consequently, splitting an empty "
"string or a string consisting of just whitespace with a ``None`` separator "
"returns ``[]``."
msgstr ""

#: ../Doc/library/stdtypes.rst:1180
msgid ""
"For example, ``' 1  2   3  '.split()`` returns ``['1', '2', '3']``, and ``'  "
"1  2   3  '.split(None, 1)`` returns ``['1', '2   3  ']``."
msgstr ""

# d687f820e5a44efa8328f23d88d4704e
#: ../Doc/library/stdtypes.rst:1189
msgid ""
"Return a list of the lines in the string, breaking at line boundaries. This "
"method uses the :term:`universal newlines` approach to splitting lines. Line "
"breaks are not included in the resulting list unless *keepends* is given and "
"true."
msgstr ""

# d044e9a3f03844d0b92104c289187102
#: ../Doc/library/stdtypes.rst:1194
msgid ""
"For example, ``'ab c\\n\\nde fg\\rkl\\r\\n'.splitlines()`` returns ``['ab "
"c', '', 'de fg', 'kl']``, while the same call with ``splitlines(True)`` "
"returns ``['ab c\\n', '\\n', 'de fg\\r', 'kl\\r\\n']``."
msgstr ""

# 4817d640d315488a86d6c351cff55a21
#: ../Doc/library/stdtypes.rst:1198
msgid ""
"Unlike :meth:`~str.split` when a delimiter string *sep* is given, this "
"method returns an empty list for the empty string, and a terminal line break "
"does not result in an extra line."
msgstr ""

#: ../Doc/library/stdtypes.rst:1205
msgid ""
"Return ``True`` if string starts with the *prefix*, otherwise return "
"``False``. *prefix* can also be a tuple of prefixes to look for.  With "
"optional *start*, test string beginning at that position.  With optional "
"*end*, stop comparing string at that position."
msgstr ""

#: ../Doc/library/stdtypes.rst:1216
msgid ""
"Return a copy of the string with the leading and trailing characters "
"removed. The *chars* argument is a string specifying the set of characters "
"to be removed. If omitted or ``None``, the *chars* argument defaults to "
"removing whitespace. The *chars* argument is not a prefix or suffix; rather, "
"all combinations of its values are stripped:"
msgstr ""

#: ../Doc/library/stdtypes.rst:1233
msgid ""
"Return a copy of the string with uppercase characters converted to lowercase "
"and vice versa."
msgstr ""

#: ../Doc/library/stdtypes.rst:1241
msgid ""
"Return a titlecased version of the string where words start with an "
"uppercase character and the remaining characters are lowercase."
msgstr ""

#: ../Doc/library/stdtypes.rst:1244
msgid ""
"The algorithm uses a simple language-independent definition of a word as "
"groups of consecutive letters.  The definition works in many contexts but it "
"means that apostrophes in contractions and possessives form word boundaries, "
"which may not be the desired result::"
msgstr ""

#: ../Doc/library/stdtypes.rst:1252
msgid ""
"A workaround for apostrophes can be constructed using regular expressions::"
msgstr ""

# fb9064bbc4484b5e92d58aa34624b3db
#: ../Doc/library/stdtypes.rst:1269
msgid ""
"Return a copy of the string where all characters occurring in the optional "
"argument *deletechars* are removed, and the remaining characters have been "
"mapped through the given translation table, which must be a string of length "
"256."
msgstr ""

#: ../Doc/library/stdtypes.rst:1274
msgid ""
"You can use the :func:`~string.maketrans` helper function in the :mod:"
"`string` module to create a translation table. For string objects, set the "
"*table* argument to ``None`` for translations that only delete characters:"
msgstr ""

# 652d7f122d3546f19152541bd559d87b
#: ../Doc/library/stdtypes.rst:1284
msgid ""
"For Unicode objects, the :meth:`translate` method does not accept the "
"optional *deletechars* argument.  Instead, it returns a copy of the *s* "
"where all characters have been mapped through the given translation table "
"which must be a mapping of Unicode ordinals to Unicode ordinals, Unicode "
"strings or ``None``. Unmapped characters are left untouched. Characters "
"mapped to ``None`` are deleted.  Note, a more flexible approach is to create "
"a custom character mapping codec using the :mod:`codecs` module (see :mod:"
"`encodings.cp1251` for an example)."
msgstr ""

# 2e48aee968824de2867c478ec3338cdd
#: ../Doc/library/stdtypes.rst:1296
msgid ""
"Return a copy of the string with all the cased characters [4]_ converted to "
"uppercase.  Note that ``str.upper().isupper()`` might be ``False`` if ``s`` "
"contains uncased characters or if the Unicode category of the resulting "
"character(s) is not \"Lu\" (Letter, uppercase), but e.g. \"Lt\" (Letter, "
"titlecase)."
msgstr ""

# 39fc8be3d29e46ccb412eec90c890603
#: ../Doc/library/stdtypes.rst:1306
msgid ""
"Return the numeric string left filled with zeros in a string of length "
"*width*.  A sign prefix is handled correctly.  The original string is "
"returned if *width* is less than or equal to ``len(s)``."
msgstr ""

# 564eb4c2f8d54f85bea05f417e4d580f
#: ../Doc/library/stdtypes.rst:1313
msgid "The following methods are present only on unicode objects:"
msgstr ""

# 500c759fd67a4711b0b4fa255d7d7385
#: ../Doc/library/stdtypes.rst:1317
msgid ""
"Return ``True`` if there are only numeric characters in S, ``False`` "
"otherwise. Numeric characters include digit characters, and all characters "
"that have the Unicode numeric value property, e.g. U+2155, VULGAR FRACTION "
"ONE FIFTH."
msgstr ""

# 7a1323ba0a134be389f5c416ac689210
#: ../Doc/library/stdtypes.rst:1324
msgid ""
"Return ``True`` if there are only decimal characters in S, ``False`` "
"otherwise. Decimal characters include digit characters, and all characters "
"that can be used to form decimal-radix numbers, e.g. U+0660, ARABIC-INDIC "
"DIGIT ZERO."
msgstr ""

# 2cf3085c368d43b790c5d0b8d7da8338
#: ../Doc/library/stdtypes.rst:1333
msgid "String Formatting Operations"
msgstr ""

# 2ec215f6e27b4921a068b16040bfba88
#: ../Doc/library/stdtypes.rst:1345
msgid ""
"String and Unicode objects have one unique built-in operation: the ``%`` "
"operator (modulo).  This is also known as the string *formatting* or "
"*interpolation* operator.  Given ``format % values`` (where *format* is a "
"string or Unicode object), ``%`` conversion specifications in *format* are "
"replaced with zero or more elements of *values*.  The effect is similar to "
"the using :c:func:`sprintf` in the C language.  If *format* is a Unicode "
"object, or if any of the objects being converted using the ``%s`` conversion "
"are Unicode objects, the result will also be a Unicode object."
msgstr ""

# fc644a2d50a74f568948553e05c38f66
#: ../Doc/library/stdtypes.rst:1354
msgid ""
"If *format* requires a single argument, *values* may be a single non-tuple "
"object. [5]_  Otherwise, *values* must be a tuple with exactly the number of "
"items specified by the format string, or a single mapping object (for "
"example, a dictionary)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1359
msgid ""
"A conversion specifier contains two or more characters and has the following "
"components, which must occur in this order:"
msgstr ""

#: ../Doc/library/stdtypes.rst:1362
msgid "The ``'%'`` character, which marks the start of the specifier."
msgstr ""

#: ../Doc/library/stdtypes.rst:1364
msgid ""
"Mapping key (optional), consisting of a parenthesised sequence of characters "
"(for example, ``(somename)``)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1367
msgid ""
"Conversion flags (optional), which affect the result of some conversion "
"types."
msgstr ""

#: ../Doc/library/stdtypes.rst:1370
msgid ""
"Minimum field width (optional).  If specified as an ``'*'`` (asterisk), the "
"actual width is read from the next element of the tuple in *values*, and the "
"object to convert comes after the minimum field width and optional precision."
msgstr ""

#: ../Doc/library/stdtypes.rst:1374
msgid ""
"Precision (optional), given as a ``'.'`` (dot) followed by the precision.  "
"If specified as ``'*'`` (an asterisk), the actual width is read from the "
"next element of the tuple in *values*, and the value to convert comes after "
"the precision."
msgstr ""

#: ../Doc/library/stdtypes.rst:1379
msgid "Length modifier (optional)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1381
msgid "Conversion type."
msgstr ""

#: ../Doc/library/stdtypes.rst:1383
msgid ""
"When the right argument is a dictionary (or other mapping type), then the "
"formats in the string *must* include a parenthesised mapping key into that "
"dictionary inserted immediately after the ``'%'`` character. The mapping key "
"selects the value to be formatted from the mapping.  For example:"
msgstr ""

#: ../Doc/library/stdtypes.rst:1392
msgid ""
"In this case no ``*`` specifiers may occur in a format (since they require a "
"sequential parameter list)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1395
msgid "The conversion flag characters are:"
msgstr ""

#: ../Doc/library/stdtypes.rst:1400
msgid "``'#'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1400
msgid ""
"The value conversion will use the \"alternate form\" (where defined below)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1403
msgid "``'0'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1403
msgid "The conversion will be zero padded for numeric values."
msgstr ""

#: ../Doc/library/stdtypes.rst:1405 ../Doc/library/string.rst:372
msgid "``'-'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1405
msgid ""
"The converted value is left adjusted (overrides the ``'0'`` conversion if "
"both are given)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1408
msgid "``' '``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1408
msgid ""
"(a space) A blank should be left before a positive number (or empty string) "
"produced by a signed conversion."
msgstr ""

#: ../Doc/library/stdtypes.rst:1411
msgid ""
"A sign character (``'+'`` or ``'-'``) will precede the conversion (overrides "
"a \"space\" flag)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1415
msgid ""
"A length modifier (``h``, ``l``, or ``L``) may be present, but is ignored as "
"it is not necessary for Python -- so e.g. ``%ld`` is identical to ``%d``."
msgstr ""

#: ../Doc/library/stdtypes.rst:1418
msgid "The conversion types are:"
msgstr ""

#: ../Doc/library/stdtypes.rst:1421
msgid "Conversion"
msgstr ""

#: ../Doc/library/stdtypes.rst:1423 ../Doc/library/stdtypes.rst:1425
msgid "Signed integer decimal."
msgstr ""

#: ../Doc/library/stdtypes.rst:1427 ../Doc/library/string.rst:429
msgid "``'o'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1427
msgid "Signed octal value."
msgstr ""

#: ../Doc/library/stdtypes.rst:1429
msgid "Obsolete type -- it is identical to ``'d'``."
msgstr ""

#: ../Doc/library/stdtypes.rst:1431 ../Doc/library/string.rst:431
msgid "``'x'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1431
msgid "Signed hexadecimal (lowercase)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1433 ../Doc/library/string.rst:434
msgid "``'X'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1433
msgid "Signed hexadecimal (uppercase)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1435 ../Doc/library/string.rst:454
msgid "``'e'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1435
msgid "Floating point exponential format (lowercase)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1437 ../Doc/library/string.rst:457
msgid "``'E'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1437
msgid "Floating point exponential format (uppercase)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1439 ../Doc/library/stdtypes.rst:1441
msgid "Floating point decimal format."
msgstr ""

#: ../Doc/library/stdtypes.rst:1441 ../Doc/library/string.rst:463
msgid "``'F'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1443 ../Doc/library/string.rst:465
msgid "``'g'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1443
msgid ""
"Floating point format. Uses lowercase exponential format if exponent is less "
"than -4 or not less than precision, decimal format otherwise."
msgstr ""

#: ../Doc/library/stdtypes.rst:1447 ../Doc/library/string.rst:489
msgid "``'G'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1447
msgid ""
"Floating point format. Uses uppercase exponential format if exponent is less "
"than -4 or not less than precision, decimal format otherwise."
msgstr ""

#: ../Doc/library/stdtypes.rst:1451
msgid "Single character (accepts integer or single character string)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1454
msgid "String (converts any Python object using :func:`repr`)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1457
msgid "String (converts any Python object using :func:`str`)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1460 ../Doc/library/string.rst:497
msgid "``'%'``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1460
msgid "No argument is converted, results in a ``'%'`` character in the result."
msgstr ""

#: ../Doc/library/stdtypes.rst:1467
msgid ""
"The alternate form causes a leading zero (``'0'``) to be inserted between "
"left-hand padding and the formatting of the number if the leading character "
"of the result is not already a zero."
msgstr ""

#: ../Doc/library/stdtypes.rst:1472
msgid ""
"The alternate form causes a leading ``'0x'`` or ``'0X'`` (depending on "
"whether the ``'x'`` or ``'X'`` format was used) to be inserted between left-"
"hand padding and the formatting of the number if the leading character of "
"the result is not already a zero."
msgstr ""

#: ../Doc/library/stdtypes.rst:1478
msgid ""
"The alternate form causes the result to always contain a decimal point, even "
"if no digits follow it."
msgstr ""

#: ../Doc/library/stdtypes.rst:1481
msgid ""
"The precision determines the number of digits after the decimal point and "
"defaults to 6."
msgstr ""

#: ../Doc/library/stdtypes.rst:1485
msgid ""
"The alternate form causes the result to always contain a decimal point, and "
"trailing zeroes are not removed as they would otherwise be."
msgstr ""

#: ../Doc/library/stdtypes.rst:1488
msgid ""
"The precision determines the number of significant digits before and after "
"the decimal point and defaults to 6."
msgstr ""

# bb66ecbc1d314d5ba1643a549763a52a
#: ../Doc/library/stdtypes.rst:1492
msgid "The ``%r`` conversion was added in Python 2.0."
msgstr ""

#: ../Doc/library/stdtypes.rst:1494 ../Doc/library/stdtypes.rst:1500
msgid "The precision determines the maximal number of characters used."
msgstr ""

# b798ba6692b64a8b9e85a98e2ff79d7e
#: ../Doc/library/stdtypes.rst:1497
msgid ""
"If the object or format provided is a :class:`unicode` string, the resulting "
"string will also be :class:`unicode`."
msgstr ""

#: ../Doc/library/stdtypes.rst:1503
msgid "See :pep:`237`."
msgstr ""

#: ../Doc/library/stdtypes.rst:1505
msgid ""
"Since Python strings have an explicit length, ``%s`` conversions do not "
"assume that ``'\\0'`` is the end of the string."
msgstr ""

#: ../Doc/library/stdtypes.rst:1518
msgid ""
"Additional string operations are defined in standard modules :mod:`string` "
"and :mod:`re`."
msgstr ""

# e28ffc65bb794498ace549b121c16b21
#: ../Doc/library/stdtypes.rst:1525
msgid "XRange Type"
msgstr ""

# 204c3015948d45f0ba11632f288c5a94
#: ../Doc/library/stdtypes.rst:1529
msgid ""
"The :class:`xrange` type is an immutable sequence which is commonly used for "
"looping.  The advantage of the :class:`xrange` type is that an :class:"
"`xrange` object will always take the same amount of memory, no matter the "
"size of the range it represents.  There are no consistent performance "
"advantages."
msgstr ""

# ca27780c1b3d4767ba7600aca88b229c
#: ../Doc/library/stdtypes.rst:1534
msgid ""
"XRange objects have very little behavior: they only support indexing, "
"iteration, and the :func:`len` function."
msgstr ""

#: ../Doc/library/stdtypes.rst:1541
msgid "Mutable Sequence Types"
msgstr ""

# ffcaac2ae5cb40e48c56311e62f32537
#: ../Doc/library/stdtypes.rst:1547
msgid ""
"List and :class:`bytearray` objects support additional operations that allow "
"in-place modification of the object. Other mutable sequence types (when "
"added to the language) should also support these operations. Strings and "
"tuples are immutable sequence types: such objects cannot be modified once "
"created. The following operations are defined on mutable sequence types "
"(where *x* is an arbitrary object):"
msgstr ""

#: ../Doc/library/stdtypes.rst:1574
msgid "``s[i] = x``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1574
msgid "item *i* of *s* is replaced by *x*"
msgstr ""

#: ../Doc/library/stdtypes.rst:1577
msgid "``s[i:j] = t``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1577
msgid ""
"slice of *s* from *i* to *j* is replaced by the contents of the iterable *t*"
msgstr ""

#: ../Doc/library/stdtypes.rst:1581
msgid "``del s[i:j]``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1581
msgid "same as ``s[i:j] = []``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1583
msgid "``s[i:j:k] = t``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1583
msgid "the elements of ``s[i:j:k]`` are replaced by those of *t*"
msgstr ""

#: ../Doc/library/stdtypes.rst:1586
msgid "``del s[i:j:k]``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1586
msgid "removes the elements of ``s[i:j:k]`` from the list"
msgstr ""

#: ../Doc/library/stdtypes.rst:1589
msgid "``s.append(x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1589
msgid "same as ``s[len(s):len(s)] = [x]``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1592
msgid "``s.extend(x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1592
msgid "same as ``s[len(s):len(s)] = x``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1595
msgid "``s.count(x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1595
msgid "return number of *i*'s for which ``s[i] == x``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1598
msgid "``s.index(x[, i[, j]])``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1598
msgid "return smallest *k* such that ``s[k] == x`` and ``i <= k < j``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1602
msgid "``s.insert(i, x)``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1602
msgid "same as ``s[i:i] = [x]``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1604
msgid "``s.pop([i])``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1604
msgid "same as ``x = s[i]; del s[i]; return x``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1607
msgid "same as ``del s[s.index(x)]``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1609
msgid "``s.reverse()``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1609
msgid "reverses the items of *s* in place"
msgstr ""

# ac8933add39845af93a3f5a8c32470b7
#: ../Doc/library/stdtypes.rst:1612
msgid "``s.sort([cmp[, key[, reverse]]])``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1612
msgid "sort the items of *s* in place"
msgstr ""

# d3d0670a9a64459dae69c77576da7058
#: ../Doc/library/stdtypes.rst:1612
msgid "(7)(8)(9)(10)"
msgstr ""

# cd53a75421ed47788c352a1ab1b2e26b
#: ../Doc/library/stdtypes.rst:1619
msgid "*t* must have the same length as the slice it is  replacing."
msgstr ""

# f2379e47847a4fb98d180423709d78ec
#: ../Doc/library/stdtypes.rst:1622
msgid ""
"The C implementation of Python has historically accepted multiple parameters "
"and implicitly joined them into a tuple; this no longer works in Python "
"2.0.  Use of this misfeature has been deprecated since Python 1.4."
msgstr ""

#: ../Doc/library/stdtypes.rst:1627
msgid "*x* can be any iterable object."
msgstr ""

# c331f0309161437f8d5612cb74da9821
#: ../Doc/library/stdtypes.rst:1630
msgid ""
"Raises :exc:`ValueError` when *x* is not found in *s*. When a negative index "
"is passed as the second or third parameter to the :meth:`index` method, the "
"list length is added, as for slice indices.  If it is still negative, it is "
"truncated to zero, as for slice indices."
msgstr ""

# 4176a9a453a7480bb7b6310136ef51da
#: ../Doc/library/stdtypes.rst:1640
msgid ""
"When a negative index is passed as the first parameter to the :meth:`insert` "
"method, the list length is added, as for slice indices.  If it is still "
"negative, it is truncated to zero, as for slice indices."
msgstr ""

# 9e2f78ee9b4a4682a7d1215402ff59e4
#: ../Doc/library/stdtypes.rst:1648
msgid ""
"The :meth:`pop` method is only supported by the list and array types.  The "
"optional argument *i* defaults to ``-1``, so that by default the last item "
"is removed and returned."
msgstr ""

# 2608f6e27a944ab4bbc869a019e4c2c0
#: ../Doc/library/stdtypes.rst:1653
msgid ""
"The :meth:`sort` and :meth:`reverse` methods modify the list in place for "
"economy of space when sorting or reversing a large list.  To remind you that "
"they operate by side effect, they don't return the sorted or reversed list."
msgstr ""

# 52222b5e887e432b88f8fddb113947f4
#: ../Doc/library/stdtypes.rst:1658
msgid ""
"The :meth:`sort` method takes optional arguments for controlling the "
"comparisons."
msgstr ""

# 341451aaf2e647f1be0dec5020a7334a
#: ../Doc/library/stdtypes.rst:1661
msgid ""
"*cmp* specifies a custom comparison function of two arguments (list items) "
"which should return a negative, zero or positive number depending on whether "
"the first argument is considered smaller than, equal to, or larger than the "
"second argument: ``cmp=lambda x,y: cmp(x.lower(), y.lower())``.  The default "
"value is ``None``."
msgstr ""

# db5b337a89984928bd57f351b46b6665
#: ../Doc/library/stdtypes.rst:1667
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each list element: ``key=str.lower``.  The default value "
"is ``None``."
msgstr ""

# f2d280c3be954501812151a966aa953a
#: ../Doc/library/stdtypes.rst:1686
msgid ""
"Starting with Python 2.3, the :meth:`sort` method is guaranteed to be "
"stable.  A sort is stable if it guarantees not to change the relative order "
"of elements that compare equal --- this is helpful for sorting in multiple "
"passes (for example, sort by department, then by salary grade)."
msgstr ""

# ecb62cfa96e449b88e735947a6b75a07
#: ../Doc/library/stdtypes.rst:1694
msgid ""
"While a list is being sorted, the effect of attempting to mutate, or even "
"inspect, the list is undefined.  The C implementation of Python 2.3 and "
"newer makes the list appear empty for the duration, and raises :exc:"
"`ValueError` if it can detect that the list has been mutated during a sort."
msgstr ""

#: ../Doc/library/stdtypes.rst:1704
msgid "Set Types --- :class:`set`, :class:`frozenset`"
msgstr ""

#: ../Doc/library/stdtypes.rst:1708
msgid ""
"A :dfn:`set` object is an unordered collection of distinct :term:`hashable` "
"objects. Common uses include membership testing, removing duplicates from a "
"sequence, and computing mathematical operations such as intersection, union, "
"difference, and symmetric difference. (For other containers see the built "
"in :class:`dict`, :class:`list`, and :class:`tuple` classes, and the :mod:"
"`collections` module.)"
msgstr ""

#: ../Doc/library/stdtypes.rst:1723
msgid ""
"There are currently two built-in set types, :class:`set` and :class:"
"`frozenset`. The :class:`set` type is mutable --- the contents can be "
"changed using methods like :meth:`add` and :meth:`remove`.  Since it is "
"mutable, it has no hash value and cannot be used as either a dictionary key "
"or as an element of another set. The :class:`frozenset` type is immutable "
"and :term:`hashable` --- its contents cannot be altered after it is created; "
"it can therefore be used as a dictionary key or as an element of another set."
msgstr ""

# e820c1b44a9840aa9cebbb6c819665a8
#: ../Doc/library/stdtypes.rst:1731
msgid ""
"As of Python 2.7, non-empty sets (not frozensets) can be created by placing "
"a comma-separated list of elements within braces, for example: ``{'jack', "
"'sjoerd'}``, in addition to the :class:`set` constructor."
msgstr ""

#: ../Doc/library/stdtypes.rst:1735
msgid "The constructors for both classes work the same:"
msgstr ""

#: ../Doc/library/stdtypes.rst:1740
msgid ""
"Return a new set or frozenset object whose elements are taken from "
"*iterable*.  The elements of a set must be hashable.  To represent sets of "
"sets, the inner sets must be :class:`frozenset` objects.  If *iterable* is "
"not specified, a new empty set is returned."
msgstr ""

#: ../Doc/library/stdtypes.rst:1745
msgid ""
"Instances of :class:`set` and :class:`frozenset` provide the following "
"operations:"
msgstr ""

#: ../Doc/library/stdtypes.rst:1750
msgid "Return the cardinality of set *s*."
msgstr ""

#: ../Doc/library/stdtypes.rst:1754
msgid "Test *x* for membership in *s*."
msgstr ""

#: ../Doc/library/stdtypes.rst:1758
msgid "Test *x* for non-membership in *s*."
msgstr ""

#: ../Doc/library/stdtypes.rst:1762
msgid ""
"Return True if the set has no elements in common with *other*.  Sets are "
"disjoint if and only if their intersection is the empty set."
msgstr ""

#: ../Doc/library/stdtypes.rst:1770
msgid "Test whether every element in the set is in *other*."
msgstr ""

#: ../Doc/library/stdtypes.rst:1774
msgid ""
"Test whether the set is a true subset of *other*, that is, ``set <= other "
"and set != other``."
msgstr ""

#: ../Doc/library/stdtypes.rst:1780
msgid "Test whether every element in *other* is in the set."
msgstr ""

#: ../Doc/library/stdtypes.rst:1784
msgid ""
"Test whether the set is a true superset of *other*, that is, ``set >= other "
"and set != other``."
msgstr ""

#: ../Doc/library/stdtypes.rst:1790
msgid "Return a new set with elements from the set and all others."
msgstr ""

#: ../Doc/library/stdtypes.rst:1798
msgid "Return a new set with elements common to the set and all others."
msgstr ""

#: ../Doc/library/stdtypes.rst:1806
msgid "Return a new set with elements in the set that are not in the others."
msgstr ""

#: ../Doc/library/stdtypes.rst:1814
msgid ""
"Return a new set with elements in either the set or *other* but not both."
msgstr ""

#: ../Doc/library/stdtypes.rst:1818
msgid "Return a new set with a shallow copy of *s*."
msgstr ""

#: ../Doc/library/stdtypes.rst:1821
msgid ""
"Note, the non-operator versions of :meth:`union`, :meth:`intersection`, :"
"meth:`difference`, and :meth:`symmetric_difference`, :meth:`issubset`, and :"
"meth:`issuperset` methods will accept any iterable as an argument.  In "
"contrast, their operator based counterparts require their arguments to be "
"sets.  This precludes error-prone constructions like ``set('abc') & 'cbs'`` "
"in favor of the more readable ``set('abc').intersection('cbs')``."
msgstr ""

#: ../Doc/library/stdtypes.rst:1828
msgid ""
"Both :class:`set` and :class:`frozenset` support set to set comparisons. Two "
"sets are equal if and only if every element of each set is contained in the "
"other (each is a subset of the other). A set is less than another set if and "
"only if the first set is a proper subset of the second set (is a subset, but "
"is not equal). A set is greater than another set if and only if the first "
"set is a proper superset of the second set (is a superset, but is not equal)."
msgstr ""

#: ../Doc/library/stdtypes.rst:1835
msgid ""
"Instances of :class:`set` are compared to instances of :class:`frozenset` "
"based on their members.  For example, ``set('abc') == frozenset('abc')`` "
"returns ``True`` and so does ``set('abc') in set([frozenset('abc')])``."
msgstr ""

# 6bb920b194014c8ab381c4ac34b1913f
#: ../Doc/library/stdtypes.rst:1839
msgid ""
"The subset and equality comparisons do not generalize to a complete ordering "
"function.  For example, any two disjoint sets are not equal and are not "
"subsets of each other, so *all* of the following return ``False``: ``a<b``, "
"``a==b``, or ``a>b``. Accordingly, sets do not implement the :meth:`__cmp__` "
"method."
msgstr ""

#: ../Doc/library/stdtypes.rst:1848
msgid "Set elements, like dictionary keys, must be :term:`hashable`."
msgstr ""

#: ../Doc/library/stdtypes.rst:1850
msgid ""
"Binary operations that mix :class:`set` instances with :class:`frozenset` "
"return the type of the first operand.  For example: ``frozenset('ab') | set"
"('bc')`` returns an instance of :class:`frozenset`."
msgstr ""

#: ../Doc/library/stdtypes.rst:1854
msgid ""
"The following table lists operations available for :class:`set` that do not "
"apply to immutable instances of :class:`frozenset`:"
msgstr ""

#: ../Doc/library/stdtypes.rst:1860
msgid "Update the set, adding elements from all others."
msgstr ""

#: ../Doc/library/stdtypes.rst:1868
msgid "Update the set, keeping only elements found in it and all others."
msgstr ""

#: ../Doc/library/stdtypes.rst:1876
msgid "Update the set, removing elements found in others."
msgstr ""

#: ../Doc/library/stdtypes.rst:1884
msgid ""
"Update the set, keeping only elements found in either set, but not in both."
msgstr ""

#: ../Doc/library/stdtypes.rst:1888
msgid "Add element *elem* to the set."
msgstr ""

#: ../Doc/library/stdtypes.rst:1892
msgid ""
"Remove element *elem* from the set.  Raises :exc:`KeyError` if *elem* is not "
"contained in the set."
msgstr ""

#: ../Doc/library/stdtypes.rst:1897
msgid "Remove element *elem* from the set if it is present."
msgstr ""

#: ../Doc/library/stdtypes.rst:1901
msgid ""
"Remove and return an arbitrary element from the set.  Raises :exc:`KeyError` "
"if the set is empty."
msgstr ""

#: ../Doc/library/stdtypes.rst:1906
msgid "Remove all elements from the set."
msgstr ""

#: ../Doc/library/stdtypes.rst:1909
msgid ""
"Note, the non-operator versions of the :meth:`update`, :meth:"
"`intersection_update`, :meth:`difference_update`, and :meth:"
"`symmetric_difference_update` methods will accept any iterable as an "
"argument."
msgstr ""

#: ../Doc/library/stdtypes.rst:1914
msgid ""
"Note, the *elem* argument to the :meth:`__contains__`, :meth:`remove`, and :"
"meth:`discard` methods may be a set.  To support searching for an equivalent "
"frozenset, the *elem* set is temporarily mutated during the search and then "
"restored.  During the search, the *elem* set should not be read or mutated "
"since it does not have a meaningful value."
msgstr ""

# 6bf9495f42a14810aab2cb262a330c32
#: ../Doc/library/stdtypes.rst:1924
msgid "Differences between the :mod:`sets` module and the built-in set types."
msgstr ""

#: ../Doc/library/stdtypes.rst:1930
msgid "Mapping Types --- :class:`dict`"
msgstr ""

#: ../Doc/library/stdtypes.rst:1940
msgid ""
"A :dfn:`mapping` object maps :term:`hashable` values to arbitrary objects. "
"Mappings are mutable objects.  There is currently only one standard mapping "
"type, the :dfn:`dictionary`.  (For other containers see the built in :class:"
"`list`, :class:`set`, and :class:`tuple` classes, and the :mod:`collections` "
"module.)"
msgstr ""

#: ../Doc/library/stdtypes.rst:1946
msgid ""
"A dictionary's keys are *almost* arbitrary values.  Values that are not :"
"term:`hashable`, that is, values containing lists, dictionaries or other "
"mutable types (that are compared by value rather than by object identity) "
"may not be used as keys.  Numeric types used for keys obey the normal rules "
"for numeric comparison: if two numbers compare equal (such as ``1`` and "
"``1.0``) then they can be used interchangeably to index the same dictionary "
"entry.  (Note however, that since computers store floating-point numbers as "
"approximations it is usually unwise to use them as dictionary keys.)"
msgstr ""

#: ../Doc/library/stdtypes.rst:1955
msgid ""
"Dictionaries can be created by placing a comma-separated list of ``key: "
"value`` pairs within braces, for example: ``{'jack': 4098, 'sjoerd': 4127}`` "
"or ``{4098: 'jack', 4127: 'sjoerd'}``, or by the :class:`dict` constructor."
msgstr ""

# 4033afb265404282bcc76b33ddd8dc04
#: ../Doc/library/stdtypes.rst:1961
msgid ""
"Return a new dictionary initialized from an optional positional argument or "
"from a set of keyword arguments. If no arguments are given, return a new "
"empty dictionary. If the positional argument *arg* is a mapping object, "
"return a dictionary mapping the same keys to the same values as does the "
"mapping object. Otherwise the positional argument must be a sequence, a "
"container that supports iteration, or an iterator object.  The elements of "
"the argument must each also be of one of those kinds, and each must in turn "
"contain exactly two objects. The first is used as a key in the new "
"dictionary, and the second as the key's value.  If a given key is seen more "
"than once, the last value associated with it is retained in the new "
"dictionary."
msgstr ""

# 168288d8ecb14da0821a1db192e1af40
#: ../Doc/library/stdtypes.rst:1972
msgid ""
"If keyword arguments are given, the keywords themselves with their "
"associated values are added as items to the dictionary. If a key is "
"specified both in the positional argument and as a keyword argument, the "
"value associated with the keyword is retained in the dictionary. For "
"example, these all return a dictionary equal to ``{\"one\": 1, \"two\": 2}``:"
msgstr ""

# 52de43508ef54b2b8a710495fa6f33e8
#: ../Doc/library/stdtypes.rst:1978
msgid "``dict(one=1, two=2)``"
msgstr ""

# d965f307b6de47a3bf71519e1e41ddb1
#: ../Doc/library/stdtypes.rst:1979
msgid "``dict({'one': 1, 'two': 2})``"
msgstr ""

# d36215f408b24565b577f23513f7e5ff
#: ../Doc/library/stdtypes.rst:1980
msgid "``dict(zip(('one', 'two'), (1, 2)))``"
msgstr ""

# 225b04bc85c849f9b7097be160dbb679
#: ../Doc/library/stdtypes.rst:1981
msgid "``dict([['two', 2], ['one', 1]])``"
msgstr ""

#: ../Doc/library/stdtypes.rst:1983
msgid ""
"The first example only works for keys that are valid Python identifiers; the "
"others work with any valid keys."
msgstr ""

#: ../Doc/library/stdtypes.rst:1992
msgid ""
"These are the operations that dictionaries support (and therefore, custom "
"mapping types should support too):"
msgstr ""

#: ../Doc/library/stdtypes.rst:1997
msgid "Return the number of items in the dictionary *d*."
msgstr ""

#: ../Doc/library/stdtypes.rst:2001
msgid ""
"Return the item of *d* with key *key*.  Raises a :exc:`KeyError` if *key* is "
"not in the map."
msgstr ""

#: ../Doc/library/stdtypes.rst:2017
msgid "Set ``d[key]`` to *value*."
msgstr ""

#: ../Doc/library/stdtypes.rst:2021
msgid ""
"Remove ``d[key]`` from *d*.  Raises a :exc:`KeyError` if *key* is not in the "
"map."
msgstr ""

#: ../Doc/library/stdtypes.rst:2026
msgid "Return ``True`` if *d* has a key *key*, else ``False``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2032
msgid "Equivalent to ``not key in d``."
msgstr ""

# aafd86c2c3fc431f89da27ec4fe24278
#: ../Doc/library/stdtypes.rst:2038
msgid ""
"Return an iterator over the keys of the dictionary.  This is a shortcut for :"
"meth:`iterkeys`."
msgstr ""

#: ../Doc/library/stdtypes.rst:2043
msgid "Remove all items from the dictionary."
msgstr ""

#: ../Doc/library/stdtypes.rst:2047
msgid "Return a shallow copy of the dictionary."
msgstr ""

#: ../Doc/library/stdtypes.rst:2051
msgid "Create a new dictionary with keys from *seq* and values set to *value*."
msgstr ""

# 1fa040ed4814437fa0aa0f03755749d4
#: ../Doc/library/stdtypes.rst:2053
msgid ""
":func:`fromkeys` is a class method that returns a new dictionary. *value* "
"defaults to ``None``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2060
msgid ""
"Return the value for *key* if *key* is in the dictionary, else *default*. If "
"*default* is not given, it defaults to ``None``, so that this method never "
"raises a :exc:`KeyError`."
msgstr ""

# bdfa4f001d9f4798a6c72fc1c57b0239
#: ../Doc/library/stdtypes.rst:2066
msgid ""
"Test for the presence of *key* in the dictionary.  :meth:`has_key` is "
"deprecated in favor of ``key in d``."
msgstr ""

# 5f9600c7ca4a4d22b07feda9fc364027
#: ../Doc/library/stdtypes.rst:2071
msgid "Return a copy of the dictionary's list of ``(key, value)`` pairs."
msgstr ""

# afa6ba68ee33470ca54f56cd6ef3377f
#: ../Doc/library/stdtypes.rst:2075
msgid ""
"Keys and values are listed in an arbitrary order which is non-random, varies "
"across Python implementations, and depends on the dictionary's history of "
"insertions and deletions."
msgstr ""

# de32668c400740e0a19f03fd9ba9e9ff
#: ../Doc/library/stdtypes.rst:2079
msgid ""
"If :meth:`items`, :meth:`keys`, :meth:`values`, :meth:`iteritems`, :meth:"
"`iterkeys`, and :meth:`itervalues` are called with no intervening "
"modifications to the dictionary, the lists will directly correspond.  This "
"allows the creation of ``(value, key)`` pairs using :func:`zip`: ``pairs = "
"zip(d.values(), d.keys())``.  The same relationship holds for the :meth:"
"`iterkeys` and :meth:`itervalues` methods: ``pairs = zip(d.itervalues(), d."
"iterkeys())`` provides the same value for ``pairs``. Another way to create "
"the same list is ``pairs = [(v, k) for (k, v) in d.iteritems()]``."
msgstr ""

# f0c32115d4d34f829869b3144d43df3c
#: ../Doc/library/stdtypes.rst:2091
msgid ""
"Return an iterator over the dictionary's ``(key, value)`` pairs.  See the "
"note for :meth:`dict.items`."
msgstr ""

# 8f30a1923e9f47108455045b90b8d783
#: ../Doc/library/stdtypes.rst:2094
msgid ""
"Using :meth:`iteritems` while adding or deleting entries in the dictionary "
"may raise a :exc:`RuntimeError` or fail to iterate over all entries."
msgstr ""

# 3b3b7a138ea04024924ebcfad250da96
#: ../Doc/library/stdtypes.rst:2101
msgid ""
"Return an iterator over the dictionary's keys.  See the note for :meth:`dict."
"items`."
msgstr ""

# 34cf0f061da240248317b111218ed8ee
#: ../Doc/library/stdtypes.rst:2104
msgid ""
"Using :meth:`iterkeys` while adding or deleting entries in the dictionary "
"may raise a :exc:`RuntimeError` or fail to iterate over all entries."
msgstr ""

# 23b6b8d65bf446248d4273e18a9ae4b3
#: ../Doc/library/stdtypes.rst:2111
msgid ""
"Return an iterator over the dictionary's values.  See the note for :meth:"
"`dict.items`."
msgstr ""

# bbfcce8bc9bd49228486cc2b1a2ffd16
#: ../Doc/library/stdtypes.rst:2114
msgid ""
"Using :meth:`itervalues` while adding or deleting entries in the dictionary "
"may raise a :exc:`RuntimeError` or fail to iterate over all entries."
msgstr ""

# 386296befc7046c48374bf3f31636490
#: ../Doc/library/stdtypes.rst:2122
msgid ""
"Return a copy of the dictionary's list of keys.  See the note for :meth:"
"`dict.items`."
msgstr ""

#: ../Doc/library/stdtypes.rst:2127
msgid ""
"If *key* is in the dictionary, remove it and return its value, else return "
"*default*.  If *default* is not given and *key* is not in the dictionary, a :"
"exc:`KeyError` is raised."
msgstr ""

#: ../Doc/library/stdtypes.rst:2135
msgid ""
"Remove and return an arbitrary ``(key, value)`` pair from the dictionary."
msgstr ""

# 0bda67d1f677411e98dc85a57d1fe380
#: ../Doc/library/stdtypes.rst:2137
msgid ""
":func:`popitem` is useful to destructively iterate over a dictionary, as "
"often used in set algorithms.  If the dictionary is empty, calling :func:"
"`popitem` raises a :exc:`KeyError`."
msgstr ""

#: ../Doc/library/stdtypes.rst:2143
msgid ""
"If *key* is in the dictionary, return its value.  If not, insert *key* with "
"a value of *default* and return *default*.  *default* defaults to ``None``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2149
msgid ""
"Update the dictionary with the key/value pairs from *other*, overwriting "
"existing keys.  Return ``None``."
msgstr ""

# 4327df1cb2d04067b428422cf77024a2
#: ../Doc/library/stdtypes.rst:2152
msgid ""
":func:`update` accepts either another dictionary object or an iterable of "
"key/value pairs (as tuples or other iterables of length two).  If keyword "
"arguments are specified, the dictionary is then updated with those key/value "
"pairs: ``d.update(red=1, blue=2)``."
msgstr ""

# 96a8220cc4c548f691c18a5b5c5ca0a4
#: ../Doc/library/stdtypes.rst:2163
msgid ""
"Return a copy of the dictionary's list of values.  See the note for :meth:"
"`dict.items`."
msgstr ""

#: ../Doc/library/stdtypes.rst:2168
msgid ""
"Return a new view of the dictionary's items (``(key, value)`` pairs).  See "
"below for documentation of view objects."
msgstr ""

#: ../Doc/library/stdtypes.rst:2175
msgid ""
"Return a new view of the dictionary's keys.  See below for documentation of "
"view objects."
msgstr ""

#: ../Doc/library/stdtypes.rst:2182
msgid ""
"Return a new view of the dictionary's values.  See below for documentation "
"of view objects."
msgstr ""

#: ../Doc/library/stdtypes.rst:2191
msgid "Dictionary view objects"
msgstr ""

# 3c7e09e15fbf4cd0a0e5bbb4870a13eb
#: ../Doc/library/stdtypes.rst:2193
msgid ""
"The objects returned by :meth:`dict.viewkeys`, :meth:`dict.viewvalues` and :"
"meth:`dict.viewitems` are *view objects*.  They provide a dynamic view on "
"the dictionary's entries, which means that when the dictionary changes, the "
"view reflects these changes."
msgstr ""

#: ../Doc/library/stdtypes.rst:2198
msgid ""
"Dictionary views can be iterated over to yield their respective data, and "
"support membership tests:"
msgstr ""

#: ../Doc/library/stdtypes.rst:2203
msgid "Return the number of entries in the dictionary."
msgstr ""

#: ../Doc/library/stdtypes.rst:2207
msgid ""
"Return an iterator over the keys, values or items (represented as tuples of "
"``(key, value)``) in the dictionary."
msgstr ""

#: ../Doc/library/stdtypes.rst:2210
msgid ""
"Keys and values are iterated over in an arbitrary order which is non-random, "
"varies across Python implementations, and depends on the dictionary's "
"history of insertions and deletions. If keys, values and items views are "
"iterated over with no intervening modifications to the dictionary, the order "
"of items will directly correspond.  This allows the creation of ``(value, "
"key)`` pairs using :func:`zip`: ``pairs = zip(d.values(), d.keys())``.  "
"Another way to create the same list is ``pairs = [(v, k) for (k, v) in d."
"items()]``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2218
msgid ""
"Iterating views while adding or deleting entries in the dictionary may raise "
"a :exc:`RuntimeError` or fail to iterate over all entries."
msgstr ""

#: ../Doc/library/stdtypes.rst:2223
msgid ""
"Return ``True`` if *x* is in the underlying dictionary's keys, values or "
"items (in the latter case, *x* should be a ``(key, value)`` tuple)."
msgstr ""

#: ../Doc/library/stdtypes.rst:2227
msgid ""
"Keys views are set-like since their entries are unique and hashable.  If all "
"values are hashable, so that (key, value) pairs are unique and hashable, "
"then the items view is also set-like.  (Values views are not treated as set-"
"like since the entries are generally not unique.)  Then these set operations "
"are available (\"other\" refers either to another view or a set):"
msgstr ""

#: ../Doc/library/stdtypes.rst:2235
msgid ""
"Return the intersection of the dictview and the other object as a new set."
msgstr ""

#: ../Doc/library/stdtypes.rst:2239
msgid "Return the union of the dictview and the other object as a new set."
msgstr ""

#: ../Doc/library/stdtypes.rst:2243
msgid ""
"Return the difference between the dictview and the other object (all "
"elements in *dictview* that aren't in *other*) as a new set."
msgstr ""

#: ../Doc/library/stdtypes.rst:2248
msgid ""
"Return the symmetric difference (all elements either in *dictview* or "
"*other*, but not in both) of the dictview and the other object as a new set."
msgstr ""

#: ../Doc/library/stdtypes.rst:2252
msgid "An example of dictionary view usage::"
msgstr ""

# 8da226b4263f4d69b534d032970ba378
#: ../Doc/library/stdtypes.rst:2285
msgid "File Objects"
msgstr ""

# ba7c62ef76f74bae9afde0af7351e1f3
#: ../Doc/library/stdtypes.rst:2293
msgid ""
"File objects are implemented using C's ``stdio`` package and can be created "
"with the built-in :func:`open` function.  File objects are also returned by "
"some other built-in functions and methods, such as :func:`os.popen` and :"
"func:`os.fdopen` and the :meth:`makefile` method of socket objects. "
"Temporary files can be created using the :mod:`tempfile` module, and high-"
"level file operations such as copying, moving, and deleting files and "
"directories can be achieved with the :mod:`shutil` module."
msgstr ""

# 992f0501ab5f490eae12969239f12630
#: ../Doc/library/stdtypes.rst:2302
msgid ""
"When a file operation fails for an I/O-related reason, the exception :exc:"
"`IOError` is raised.  This includes situations where the operation is not "
"defined for some reason, like :meth:`seek` on a tty device or writing a file "
"opened for reading."
msgstr ""

# fabf9d3196ea4386beedda97c9327156
#: ../Doc/library/stdtypes.rst:2307
msgid "Files have the following methods:"
msgstr ""

# 334e86b65aa841f0856c86caa0c8e68a
#: ../Doc/library/stdtypes.rst:2312
msgid ""
"Close the file.  A closed file cannot be read or written any more. Any "
"operation which requires that the file be open will raise a :exc:"
"`ValueError` after the file has been closed.  Calling :meth:`close` more "
"than once is allowed."
msgstr ""

# cada4387db0c4aa4a7b72c05aa0e2a03
#: ../Doc/library/stdtypes.rst:2316
msgid ""
"As of Python 2.5, you can avoid having to call this method explicitly if you "
"use the :keyword:`with` statement.  For example, the following code will "
"automatically close *f* when the :keyword:`with` block is exited::"
msgstr ""

# 300ae9e4b4b84ea7860e9fa33f5e8553
#: ../Doc/library/stdtypes.rst:2326
msgid ""
"In older versions of Python, you would have needed to do this to get the "
"same effect::"
msgstr ""

# 7cb8180d916b4cd2807d64cee1a4aa6b
#: ../Doc/library/stdtypes.rst:2338
msgid ""
"Not all \"file-like\" types in Python support use as a context manager for "
"the :keyword:`with` statement.  If your code is intended to work with any "
"file-like object, you can use the function :func:`contextlib.closing` "
"instead of using the object directly."
msgstr ""

# 9a2224a1971f481b93175fb9fab9f4bb
#: ../Doc/library/stdtypes.rst:2346
msgid ""
"Flush the internal buffer, like ``stdio``'s :c:func:`fflush`.  This may be a "
"no-op on some file-like objects."
msgstr ""

# bff8cb9dd2d34a2d868037e3b094cab0
#: ../Doc/library/stdtypes.rst:2351
msgid ""
":meth:`flush` does not necessarily write the file's data to disk.  Use :meth:"
"`flush` followed by :func:`os.fsync` to ensure this behavior."
msgstr ""

# 9e87d4c8129842bc8326e50979604043
#: ../Doc/library/stdtypes.rst:2361
msgid ""
"Return the integer \"file descriptor\" that is used by the underlying "
"implementation to request I/O operations from the operating system.  This "
"can be useful for other, lower level interfaces that use file descriptors, "
"such as the :mod:`fcntl` module or :func:`os.read` and friends."
msgstr ""

# 99a2ffef8890401e8c21c2219cafc618
#: ../Doc/library/stdtypes.rst:2368
msgid ""
"File-like objects which do not have a real file descriptor should *not* "
"provide this method!"
msgstr ""

# d216f217e9d34ddfbe494096d519c35d
#: ../Doc/library/stdtypes.rst:2374
msgid ""
"Return ``True`` if the file is connected to a tty(-like) device, else "
"``False``."
msgstr ""

# 30a98e53d69b4214a5043e7143628d23
#: ../Doc/library/stdtypes.rst:2378
msgid ""
"If a file-like object is not associated with a real file, this method should "
"*not* be implemented."
msgstr ""

# e0a53e286c314082baa5aed240e75e8c
#: ../Doc/library/stdtypes.rst:2384
msgid ""
"A file object is its own iterator, for example ``iter(f)`` returns *f* "
"(unless *f* is closed).  When a file is used as an iterator, typically in a :"
"keyword:`for` loop (for example, ``for line in f: print line``), the :meth:"
"`~file.next` method is called repeatedly.  This method returns the next "
"input line, or raises :exc:`StopIteration` when EOF is hit when the file is "
"open for reading (behavior is undefined when the file is open for writing).  "
"In order to make a :keyword:`for` loop the most efficient way of looping "
"over the lines of a file (a very common operation), the :meth:`~file.next` "
"method uses a hidden read-ahead buffer.  As a consequence of using a read-"
"ahead buffer, combining :meth:`~file.next` with other file methods (like :"
"meth:`~file.readline`) does not work right.  However, using :meth:`seek` to "
"reposition the file to an absolute position will flush the read-ahead buffer."
msgstr ""

# 4230f9a417684fd189568f4ee90507a6
#: ../Doc/library/stdtypes.rst:2402
msgid ""
"Read at most *size* bytes from the file (less if the read hits EOF before "
"obtaining *size* bytes).  If the *size* argument is negative or omitted, "
"read all data until EOF is reached.  The bytes are returned as a string "
"object.  An empty string is returned when EOF is encountered immediately.  "
"(For certain files, like ttys, it makes sense to continue reading after an "
"EOF is hit.)  Note that this method may call the underlying C function :c:"
"func:`fread` more than once in an effort to acquire as close to *size* bytes "
"as possible. Also note that when in non-blocking mode, less data than was "
"requested may be returned, even if no *size* parameter was given."
msgstr ""

# 0974b9ea10c34a9682c578e2083d793c
#: ../Doc/library/stdtypes.rst:2413
msgid ""
"This function is simply a wrapper for the underlying :c:func:`fread` C "
"function, and will behave the same in corner cases, such as whether the EOF "
"value is cached."
msgstr ""

# e60be9b1e5ac4bbb83fb348ef4363be2
#: ../Doc/library/stdtypes.rst:2420
msgid ""
"Read one entire line from the file.  A trailing newline character is kept in "
"the string (but may be absent when a file ends with an incomplete line). [6]"
"_ If the *size* argument is present and non-negative, it is a maximum byte "
"count (including the trailing newline) and an incomplete line may be "
"returned. When *size* is not 0, an empty string is returned *only* when EOF "
"is encountered immediately."
msgstr ""

# 702db3750be643a0a5a062e5ca5e52a9
#: ../Doc/library/stdtypes.rst:2429
msgid ""
"Unlike ``stdio``'s :c:func:`fgets`, the returned string contains null "
"characters (``'\\0'``) if they occurred in the input."
msgstr ""

# 123934262e9f45f885b8738e50996d58
#: ../Doc/library/stdtypes.rst:2435
msgid ""
"Read until EOF using :meth:`~file.readline` and return a list containing the "
"lines thus read.  If the optional *sizehint* argument is present, instead of "
"reading up to EOF, whole lines totalling approximately *sizehint* bytes "
"(possibly after rounding up to an internal buffer size) are read.  Objects "
"implementing a file-like interface may choose to ignore *sizehint* if it "
"cannot be implemented, or cannot be implemented efficiently."
msgstr ""

# e0bb6949508b44848891660d648d3753
#: ../Doc/library/stdtypes.rst:2445
msgid "This method returns the same thing as ``iter(f)``."
msgstr ""

# c783eafad1c64a328ca6263a553b3b3e
#: ../Doc/library/stdtypes.rst:2455
msgid ""
"Set the file's current position, like ``stdio``'s :c:func:`fseek`. The "
"*whence* argument is optional and defaults to  ``os.SEEK_SET`` or ``0`` "
"(absolute file positioning); other values are ``os.SEEK_CUR`` or ``1`` (seek "
"relative to the current position) and ``os.SEEK_END`` or ``2``  (seek "
"relative to the file's end).  There is no return value."
msgstr ""

# 6a6b323c63144fd2b947b07538fe3026
#: ../Doc/library/stdtypes.rst:2461
msgid ""
"For example, ``f.seek(2, os.SEEK_CUR)`` advances the position by two and ``f."
"seek(-3, os.SEEK_END)`` sets the position to the third to last."
msgstr ""

# 5d7cc70a234543caadad67259f58aab3
#: ../Doc/library/stdtypes.rst:2464
msgid ""
"Note that if the file is opened for appending (mode ``'a'`` or ``'a+'``), "
"any :meth:`seek` operations will be undone at the next write.  If the file "
"is only opened for writing in append mode (mode ``'a'``), this method is "
"essentially a no-op, but it remains useful for files opened in append mode "
"with reading enabled (mode ``'a+'``).  If the file is opened in text mode "
"(without ``'b'``), only offsets returned by :meth:`tell` are legal.  Use of "
"other offsets causes undefined behavior."
msgstr ""

# f6fbb3232e1642c7a53dc6f68a23a34a
#: ../Doc/library/stdtypes.rst:2472
msgid "Note that not all file objects are seekable."
msgstr ""

# ddfd8e4adc9d4bd293f39606af3f710c
#: ../Doc/library/stdtypes.rst:2480
msgid "Return the file's current position, like ``stdio``'s :c:func:`ftell`."
msgstr ""

# d605f93bc2f04313aacd17c0b166dac5
#: ../Doc/library/stdtypes.rst:2484
msgid ""
"On Windows, :meth:`tell` can return illegal values (after an :c:func:"
"`fgets`) when reading files with Unix-style line-endings. Use binary mode "
"(``'rb'``) to circumvent this problem."
msgstr ""

# 28363360a6964507b25ec455940c3057
#: ../Doc/library/stdtypes.rst:2491
msgid ""
"Truncate the file's size.  If the optional *size* argument is present, the "
"file is truncated to (at most) that size.  The size defaults to the current "
"position. The current file position is not changed.  Note that if a "
"specified size exceeds the file's current size, the result is platform-"
"dependent:  possibilities include that the file may remain unchanged, "
"increase to the specified size as if zero-filled, or increase to the "
"specified size with undefined new content. Availability:  Windows, many Unix "
"variants."
msgstr ""

# 22bfc95ba7fa4ec58f7e4116da88a997
#: ../Doc/library/stdtypes.rst:2502
msgid ""
"Write a string to the file.  There is no return value.  Due to buffering, "
"the string may not actually show up in the file until the :meth:`flush` or :"
"meth:`close` method is called."
msgstr ""

# 0596e36eba334651acc522012b613026
#: ../Doc/library/stdtypes.rst:2509
msgid ""
"Write a sequence of strings to the file.  The sequence can be any iterable "
"object producing strings, typically a list of strings. There is no return "
"value. (The name is intended to match :meth:`readlines`; :meth:`writelines` "
"does not add line separators.)"
msgstr ""

# db4412fd802c41bb80d300d4e7a166e8
#: ../Doc/library/stdtypes.rst:2514
msgid ""
"Files support the iterator protocol.  Each iteration returns the same result "
"as :meth:`~file.readline`, and iteration ends when the :meth:`~file."
"readline` method returns an empty string."
msgstr ""

# 795b06b3bb874bdca1eba796ab7008c8
#: ../Doc/library/stdtypes.rst:2518
msgid ""
"File objects also offer a number of other interesting attributes. These are "
"not required for file-like objects, but should be implemented if they make "
"sense for the particular object."
msgstr ""

# 9a479f48108944bea4e8e0fe63fd4169
#: ../Doc/library/stdtypes.rst:2525
msgid ""
"bool indicating the current state of the file object.  This is a read-only "
"attribute; the :meth:`close` method changes the value. It may not be "
"available on all file-like objects."
msgstr ""

# 36a4618d13fe422e944e05cdb1b07caa
#: ../Doc/library/stdtypes.rst:2532
msgid ""
"The encoding that this file uses. When Unicode strings are written to a "
"file, they will be converted to byte strings using this encoding. In "
"addition, when the file is connected to a terminal, the attribute gives the "
"encoding that the terminal is likely to use (that  information might be "
"incorrect if the user has misconfigured the  terminal). The attribute is "
"read-only and may not be present on all file-like objects. It may also be "
"``None``, in which case the file uses the system default encoding for "
"converting Unicode strings."
msgstr ""

# 54b726abcbd541719a0ce04a15b0f3c2
#: ../Doc/library/stdtypes.rst:2545
msgid "The Unicode error handler used along with the encoding."
msgstr ""

# 9278e9adf28044d4bd94a7f9dd7a9e66
#: ../Doc/library/stdtypes.rst:2552
msgid ""
"The I/O mode for the file.  If the file was created using the :func:`open` "
"built-in function, this will be the value of the *mode* parameter.  This is "
"a read-only attribute and may not be present on all file-like objects."
msgstr ""

# c6e6f7ac72bb4b6bbdd0642977d42a24
#: ../Doc/library/stdtypes.rst:2559
msgid ""
"If the file object was created using :func:`open`, the name of the file. "
"Otherwise, some string that indicates the source of the file object, of the "
"form ``<...>``.  This is a read-only attribute and may not be present on all "
"file-like objects."
msgstr ""

# dd6e650910f4401db565d34f47ae38bc
#: ../Doc/library/stdtypes.rst:2570
msgid ""
"If Python was built with :term:`universal newlines` enabled (the default) "
"this read-only attribute exists, and for files opened in universal newline "
"read mode it keeps track of the types of newlines encountered while reading "
"the file. The values it can take are ``'\\r'``, ``'\\n'``, ``'\\r\\n'``, "
"``None`` (unknown, no newlines read yet) or a tuple containing all the "
"newline types seen, to indicate that multiple newline conventions were "
"encountered. For files not opened in universal newlines read mode the value "
"of this attribute will be ``None``."
msgstr ""

# 72dc217569454e0badb0c788eb36d8d5
#: ../Doc/library/stdtypes.rst:2582
msgid ""
"Boolean that indicates whether a space character needs to be printed before "
"another value when using the :keyword:`print` statement. Classes that are "
"trying to simulate a file object should also have a writable :attr:"
"`softspace` attribute, which should be initialized to zero.  This will be "
"automatic for most classes implemented in Python (care may be needed for "
"objects that override attribute access); types implemented in C will have to "
"provide a writable :attr:`softspace` attribute."
msgstr ""

# 640a3b1350e84f5fb69db52795ab030c
#: ../Doc/library/stdtypes.rst:2592
msgid ""
"This attribute is not used to control the :keyword:`print` statement, but to "
"allow the implementation of :keyword:`print` to keep track of its internal "
"state."
msgstr ""

#: ../Doc/library/stdtypes.rst:2600
msgid "memoryview type"
msgstr ""

#: ../Doc/library/stdtypes.rst:2604
msgid ""
":class:`memoryview` objects allow Python code to access the internal data of "
"an object that supports the buffer protocol without copying.  Memory is "
"generally interpreted as simple bytes."
msgstr ""

# 8eb7102c272341fa80e819b1a53f320e
#: ../Doc/library/stdtypes.rst:2610
msgid ""
"Create a :class:`memoryview` that references *obj*.  *obj* must support the "
"buffer protocol.  Built-in objects that support the buffer protocol include :"
"class:`str` and :class:`bytearray` (but not :class:`unicode`)."
msgstr ""

# bc49f31451ba45ed9d8abf507c6efc1b
#: ../Doc/library/stdtypes.rst:2614
msgid ""
"A :class:`memoryview` has the notion of an *element*, which is the atomic "
"memory unit handled by the originating object *obj*.  For many simple types "
"such as :class:`str` and :class:`bytearray`, an element is a single byte, "
"but other third-party types may expose larger elements."
msgstr ""

# ef320e40d52641968822ddc376d967f4
#: ../Doc/library/stdtypes.rst:2619
msgid ""
"``len(view)`` returns the total number of elements in the memoryview, "
"*view*.  The :class:`~memoryview.itemsize` attribute will give you the "
"number of bytes in a single element."
msgstr ""

# f1b39f2030cf48e5b4098aff78ad96a6
#: ../Doc/library/stdtypes.rst:2623
msgid ""
"A :class:`memoryview` supports slicing to expose its data.  Taking a single "
"index will return a single element as a :class:`str` object.  Full slicing "
"will result in a subview::"
msgstr ""

# a1eaa4b1d7ae423ea882e18b6ce46ad9
#: ../Doc/library/stdtypes.rst:2637
msgid ""
"If the object the memoryview is over supports changing its data, the "
"memoryview supports slice assignment::"
msgstr ""

#: ../Doc/library/stdtypes.rst:2655
msgid "Notice how the size of the memoryview object cannot be changed."
msgstr ""

#: ../Doc/library/stdtypes.rst:2657
msgid ":class:`memoryview` has two methods:"
msgstr ""

# 77558c77cc2b433796223d6dcc28da2d
#: ../Doc/library/stdtypes.rst:2661
msgid ""
"Return the data in the buffer as a bytestring (an object of class :class:"
"`str`). ::"
msgstr ""

#: ../Doc/library/stdtypes.rst:2670
msgid "Return the data in the buffer as a list of integers. ::"
msgstr ""

#: ../Doc/library/stdtypes.rst:2675
msgid "There are also several readonly attributes available:"
msgstr ""

#: ../Doc/library/stdtypes.rst:2679
msgid ""
"A string containing the format (in :mod:`struct` module style) for each "
"element in the view.  This defaults to ``'B'``, a simple bytestring."
msgstr ""

#: ../Doc/library/stdtypes.rst:2684
msgid "The size in bytes of each element of the memoryview."
msgstr ""

#: ../Doc/library/stdtypes.rst:2688
msgid ""
"A tuple of integers the length of :attr:`ndim` giving the shape of the "
"memory as a N-dimensional array."
msgstr ""

#: ../Doc/library/stdtypes.rst:2693
msgid ""
"An integer indicating how many dimensions of a multi-dimensional array the "
"memory represents."
msgstr ""

#: ../Doc/library/stdtypes.rst:2698
msgid ""
"A tuple of integers the length of :attr:`ndim` giving the size in bytes to "
"access each element for each dimension of the array."
msgstr ""

# 1505b7fc80264abbb1a91ba64718931d
#: ../Doc/library/stdtypes.rst:2703
msgid "A bool indicating whether the memory is read only."
msgstr ""

#: ../Doc/library/stdtypes.rst:2711
msgid "Context Manager Types"
msgstr ""

#: ../Doc/library/stdtypes.rst:2720
msgid ""
"Python's :keyword:`with` statement supports the concept of a runtime context "
"defined by a context manager.  This is implemented using two separate "
"methods that allow user-defined classes to define a runtime context that is "
"entered before the statement body is executed and exited when the statement "
"ends."
msgstr ""

#: ../Doc/library/stdtypes.rst:2725
msgid ""
"The :dfn:`context management protocol` consists of a pair of methods that "
"need to be provided for a context manager object to define a runtime context:"
msgstr ""

#: ../Doc/library/stdtypes.rst:2731
msgid ""
"Enter the runtime context and return either this object or another object "
"related to the runtime context. The value returned by this method is bound "
"to the identifier in the :keyword:`as` clause of :keyword:`with` statements "
"using this context manager."
msgstr ""

#: ../Doc/library/stdtypes.rst:2736
msgid ""
"An example of a context manager that returns itself is a file object. File "
"objects return themselves from __enter__() to allow :func:`open` to be used "
"as the context expression in a :keyword:`with` statement."
msgstr ""

#: ../Doc/library/stdtypes.rst:2740
msgid ""
"An example of a context manager that returns a related object is the one "
"returned by :func:`decimal.localcontext`. These managers set the active "
"decimal context to a copy of the original decimal context and then return "
"the copy. This allows changes to be made to the current decimal context in "
"the body of the :keyword:`with` statement without affecting code outside "
"the :keyword:`with` statement."
msgstr ""

#: ../Doc/library/stdtypes.rst:2750
msgid ""
"Exit the runtime context and return a Boolean flag indicating if any "
"exception that occurred should be suppressed. If an exception occurred while "
"executing the body of the :keyword:`with` statement, the arguments contain "
"the exception type, value and traceback information. Otherwise, all three "
"arguments are ``None``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2755
msgid ""
"Returning a true value from this method will cause the :keyword:`with` "
"statement to suppress the exception and continue execution with the "
"statement immediately following the :keyword:`with` statement. Otherwise the "
"exception continues propagating after this method has finished executing. "
"Exceptions that occur during execution of this method will replace any "
"exception that occurred in the body of the :keyword:`with` statement."
msgstr ""

#: ../Doc/library/stdtypes.rst:2762
msgid ""
"The exception passed in should never be reraised explicitly - instead, this "
"method should return a false value to indicate that the method completed "
"successfully and does not want to suppress the raised exception. This allows "
"context management code (such as ``contextlib.nested``) to easily detect "
"whether or not an :meth:`__exit__` method has actually failed."
msgstr ""

#: ../Doc/library/stdtypes.rst:2768
msgid ""
"Python defines several context managers to support easy thread "
"synchronisation, prompt closure of files or other objects, and simpler "
"manipulation of the active decimal arithmetic context. The specific types "
"are not treated specially beyond their implementation of the context "
"management protocol. See the :mod:`contextlib` module for some examples."
msgstr ""

#: ../Doc/library/stdtypes.rst:2774
msgid ""
"Python's :term:`generator`\\s and the ``contextlib.contextmanager`` :term:"
"`decorator` provide a convenient way to implement these protocols.  If a "
"generator function is decorated with the ``contextlib.contextmanager`` "
"decorator, it will return a context manager implementing the necessary :meth:"
"`__enter__` and :meth:`__exit__` methods, rather than the iterator produced "
"by an undecorated generator function."
msgstr ""

#: ../Doc/library/stdtypes.rst:2781
msgid ""
"Note that there is no specific slot for any of these methods in the type "
"structure for Python objects in the Python/C API. Extension types wanting to "
"define these methods must provide them as a normal Python accessible method. "
"Compared to the overhead of setting up the runtime context, the overhead of "
"a single class dictionary lookup is negligible."
msgstr ""

#: ../Doc/library/stdtypes.rst:2791
msgid "Other Built-in Types"
msgstr ""

#: ../Doc/library/stdtypes.rst:2793
msgid ""
"The interpreter supports several other kinds of objects. Most of these "
"support only one or two operations."
msgstr ""

#: ../Doc/library/stdtypes.rst:2800
msgid "Modules"
msgstr ""

#: ../Doc/library/stdtypes.rst:2802
msgid ""
"The only special operation on a module is attribute access: ``m.name``, "
"where *m* is a module and *name* accesses a name defined in *m*'s symbol "
"table. Module attributes can be assigned to.  (Note that the :keyword:"
"`import` statement is not, strictly speaking, an operation on a module "
"object; ``import foo`` does not require a module object named *foo* to "
"exist, rather it requires an (external) *definition* for a module named "
"*foo* somewhere.)"
msgstr ""

# ce36b9d784874868bdde303eae2f7e41
#: ../Doc/library/stdtypes.rst:2809
msgid ""
"A special attribute of every module is :attr:`__dict__`. This is the "
"dictionary containing the module's symbol table. Modifying this dictionary "
"will actually change the module's symbol table, but direct assignment to "
"the :attr:`__dict__` attribute is not possible (you can write ``m.__dict__"
"['a'] = 1``, which defines ``m.a`` to be ``1``, but you can't write ``m."
"__dict__ = {}``).  Modifying :attr:`__dict__` directly is not recommended."
msgstr ""

#: ../Doc/library/stdtypes.rst:2816
msgid ""
"Modules built into the interpreter are written like this: ``<module "
"'sys' (built-in)>``.  If loaded from a file, they are written as ``<module "
"'os' from '/usr/local/lib/pythonX.Y/os.pyc'>``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2824
msgid "Classes and Class Instances"
msgstr ""

#: ../Doc/library/stdtypes.rst:2826
msgid "See :ref:`objects` and :ref:`class` for these."
msgstr ""

#: ../Doc/library/stdtypes.rst:2834
msgid ""
"Function objects are created by function definitions.  The only operation on "
"a function object is to call it: ``func(argument-list)``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2837
msgid ""
"There are really two flavors of function objects: built-in functions and "
"user-defined functions.  Both support the same operation (to call the "
"function), but the implementation is different, hence the different object "
"types."
msgstr ""

#: ../Doc/library/stdtypes.rst:2841
msgid "See :ref:`function` for more information."
msgstr ""

#: ../Doc/library/stdtypes.rst:2847
msgid "Methods"
msgstr ""

#: ../Doc/library/stdtypes.rst:2851
msgid ""
"Methods are functions that are called using the attribute notation. There "
"are two flavors: built-in methods (such as :meth:`append` on lists) and "
"class instance methods.  Built-in methods are described with the types that "
"support them."
msgstr ""

# 1500c4bf4c2e43d7aa2d00208750d7a4
#: ../Doc/library/stdtypes.rst:2856
msgid ""
"The implementation adds two special read-only attributes to class instance "
"methods: ``m.im_self`` is the object on which the method operates, and ``m."
"im_func`` is the function implementing the method.  Calling ``m(arg-1, "
"arg-2, ..., arg-n)`` is completely equivalent to calling ``m.im_func(m."
"im_self, arg-1, arg-2, ..., arg-n)``."
msgstr ""

# dcac587d0184424397ef1a56421cc166
#: ../Doc/library/stdtypes.rst:2862
msgid ""
"Class instance methods are either *bound* or *unbound*, referring to whether "
"the method was accessed through an instance or a class, respectively.  When "
"a method is unbound, its ``im_self`` attribute will be ``None`` and if "
"called, an explicit ``self`` object must be passed as the first argument.  "
"In this case, ``self`` must be an instance of the unbound method's class (or "
"a subclass of that class), otherwise a :exc:`TypeError` is raised."
msgstr ""

# fcf6192d7a5b448585acdbd0e713bbb6
#: ../Doc/library/stdtypes.rst:2869
msgid ""
"Like function objects, methods objects support getting arbitrary attributes. "
"However, since method attributes are actually stored on the underlying "
"function object (``meth.im_func``), setting method attributes on either "
"bound or unbound methods is disallowed.  Attempting to set a method "
"attribute results in a :exc:`TypeError` being raised.  In order to set a "
"method attribute, you need to explicitly set it on the underlying function "
"object::"
msgstr ""

#: ../Doc/library/stdtypes.rst:2883 ../Doc/library/stdtypes.rst:2911
msgid "See :ref:`types` for more information."
msgstr ""

#: ../Doc/library/stdtypes.rst:2889
msgid "Code Objects"
msgstr ""

# 809befe0357b4c48969ebf6e134ad38e
#: ../Doc/library/stdtypes.rst:2897
msgid ""
"Code objects are used by the implementation to represent \"pseudo-compiled\" "
"executable Python code such as a function body. They differ from function "
"objects because they don't contain a reference to their global execution "
"environment.  Code objects are returned by the built-in :func:`compile` "
"function and can be extracted from function objects through their :attr:"
"`func_code` attribute. See also the :mod:`code` module."
msgstr ""

# 572b3d763f484ca6bdc9b23fd27aef9a
#: ../Doc/library/stdtypes.rst:2908
msgid ""
"A code object can be executed or evaluated by passing it (instead of a "
"source string) to the :keyword:`exec` statement or the built-in :func:`eval` "
"function."
msgstr ""

#: ../Doc/library/stdtypes.rst:2917
msgid "Type Objects"
msgstr ""

#: ../Doc/library/stdtypes.rst:2923
msgid ""
"Type objects represent the various object types.  An object's type is "
"accessed by the built-in function :func:`type`.  There are no special "
"operations on types.  The standard module :mod:`types` defines names for all "
"standard built-in types."
msgstr ""

# 530331401f3342f5a2262c5669d33df0
#: ../Doc/library/stdtypes.rst:2928
msgid "Types are written like this: ``<type 'int'>``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2934
msgid "The Null Object"
msgstr ""

#: ../Doc/library/stdtypes.rst:2936
msgid ""
"This object is returned by functions that don't explicitly return a value.  "
"It supports no special operations.  There is exactly one null object, named "
"``None`` (a built-in name)."
msgstr ""

#: ../Doc/library/stdtypes.rst:2940
msgid "It is written as ``None``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2946
msgid "The Ellipsis Object"
msgstr ""

# adda6c496f5041e58201d98b0415a532
#: ../Doc/library/stdtypes.rst:2948
msgid ""
"This object is used by extended slice notation (see :ref:`slicings`).  It "
"supports no special operations.  There is exactly one ellipsis object, "
"named :const:`Ellipsis` (a built-in name)."
msgstr ""

# 4e44b455fb6d483d9572dbfd06c6e842
#: ../Doc/library/stdtypes.rst:2952
msgid ""
"It is written as ``Ellipsis``.  When in a subscript, it can also be written "
"as ``...``, for example ``seq[...]``."
msgstr ""

# 7993e89ddef84bfcae3f68a6ddaef810
#: ../Doc/library/stdtypes.rst:2957
msgid "The NotImplemented Object"
msgstr ""

# bec2e72147d74a85a42f29d305758674
#: ../Doc/library/stdtypes.rst:2959
msgid ""
"This object is returned from comparisons and binary operations when they are "
"asked to operate on types they don't support. See :ref:`comparisons` for "
"more information."
msgstr ""

# 772d3164c5784b3bbb4262856658bef9
#: ../Doc/library/stdtypes.rst:2963
msgid "It is written as ``NotImplemented``."
msgstr ""

#: ../Doc/library/stdtypes.rst:2967
msgid "Boolean Values"
msgstr ""

# e8eacb6e02eb481dbbd49bc0fa5ff148
#: ../Doc/library/stdtypes.rst:2969
msgid ""
"Boolean values are the two constant objects ``False`` and ``True``.  They "
"are used to represent truth values (although other values can also be "
"considered false or true).  In numeric contexts (for example when used as "
"the argument to an arithmetic operator), they behave like the integers 0 and "
"1, respectively. The built-in function :func:`bool` can be used to convert "
"any value to a Boolean, if the value can be interpreted as a truth value "
"(see section :ref:`truth` above)."
msgstr ""

#: ../Doc/library/stdtypes.rst:2982
msgid "They are written as ``False`` and ``True``, respectively."
msgstr ""

#: ../Doc/library/stdtypes.rst:2988
msgid "Internal Objects"
msgstr ""

#: ../Doc/library/stdtypes.rst:2990
msgid ""
"See :ref:`types` for this information.  It describes stack frame objects, "
"traceback objects, and slice objects."
msgstr ""

#: ../Doc/library/stdtypes.rst:2997
msgid "Special Attributes"
msgstr ""

#: ../Doc/library/stdtypes.rst:2999
msgid ""
"The implementation adds a few special read-only attributes to several object "
"types, where they are relevant.  Some of these are not reported by the :func:"
"`dir` built-in function."
msgstr ""

#: ../Doc/library/stdtypes.rst:3006
msgid ""
"A dictionary or other mapping object used to store an object's (writable) "
"attributes."
msgstr ""

#: ../Doc/library/stdtypes.rst:3026
msgid "The class to which a class instance belongs."
msgstr ""

#: ../Doc/library/stdtypes.rst:3031
msgid "The tuple of base classes of a class object."
msgstr ""

#: ../Doc/library/stdtypes.rst:3036
msgid "The name of the class or type."
msgstr ""

#: ../Doc/library/stdtypes.rst:3039
msgid ""
"The following attributes are only supported by :term:`new-style class`\\ es."
msgstr ""

#: ../Doc/library/stdtypes.rst:3043
msgid ""
"This attribute is a tuple of classes that are considered when looking for "
"base classes during method resolution."
msgstr ""

#: ../Doc/library/stdtypes.rst:3049
msgid ""
"This method can be overridden by a metaclass to customize the method "
"resolution order for its instances.  It is called at class instantiation, "
"and its result is stored in :attr:`__mro__`."
msgstr ""

#: ../Doc/library/stdtypes.rst:3056
msgid ""
"Each new-style class keeps a list of weak references to its immediate "
"subclasses.  This method returns a list of all those references still alive. "
"Example::"
msgstr ""

#: ../Doc/library/stdtypes.rst:3066
msgid ""
"Additional information on these special methods may be found in the Python "
"Reference Manual (:ref:`customization`)."
msgstr ""

#: ../Doc/library/stdtypes.rst:3069
msgid ""
"As a consequence, the list ``[1, 2]`` is considered equal to ``[1.0, 2.0]``, "
"and similarly for tuples."
msgstr ""

#: ../Doc/library/stdtypes.rst:3072
msgid "They must have since the parser can't tell the type of the operands."
msgstr ""

# c78fbb4f30da41ebb24e1a0055cf9dda
#: ../Doc/library/stdtypes.rst:3074
msgid ""
"Cased characters are those with general category property being one of \"Lu"
"\" (Letter, uppercase), \"Ll\" (Letter, lowercase), or \"Lt\" (Letter, "
"titlecase)."
msgstr ""

#: ../Doc/library/stdtypes.rst:3077
msgid ""
"To format only a tuple you should therefore provide a singleton tuple whose "
"only element is the tuple to be formatted."
msgstr ""

# 2c56d5adec0c411db7004507cb4f46bd
#: ../Doc/library/stdtypes.rst:3080
msgid ""
"The advantage of leaving the newline on is that returning an empty string is "
"then an unambiguous EOF indication.  It is also possible (in cases where it "
"might matter, for example, if you want to make an exact copy of a file while "
"scanning its lines) to tell whether the last line of a file ended in a "
"newline or not (yes this happens!)."
msgstr ""

#: ../Doc/library/string.rst:2
msgid ":mod:`string` --- Common string operations"
msgstr ""

# d79ef69423c04500a1a77bb3b023b87f
#: ../Doc/library/string.rst:10
msgid "**Source code:** :source:`Lib/string.py`"
msgstr ""

# 46444ca9b5c54ea3ae39e1bec1f33fe8
#: ../Doc/library/string.rst:14
msgid ""
"The :mod:`string` module contains a number of useful constants and classes, "
"as well as some deprecated legacy functions that are also available as "
"methods on strings. In addition, Python's built-in string classes support "
"the sequence type methods described in the :ref:`typesseq` section, and also "
"the string-specific methods described in the :ref:`string-methods` section. "
"To output formatted strings use template strings or the ``%`` operator "
"described in the :ref:`string-formatting` section. Also, see the :mod:`re` "
"module for string functions based on regular expressions."
msgstr ""

#: ../Doc/library/string.rst:25
msgid "String constants"
msgstr ""

#: ../Doc/library/string.rst:32
msgid ""
"The concatenation of the :const:`ascii_lowercase` and :const:"
"`ascii_uppercase` constants described below.  This value is not locale-"
"dependent."
msgstr ""

#: ../Doc/library/string.rst:38
msgid ""
"The lowercase letters ``'abcdefghijklmnopqrstuvwxyz'``.  This value is not "
"locale-dependent and will not change."
msgstr ""

#: ../Doc/library/string.rst:44
msgid ""
"The uppercase letters ``'ABCDEFGHIJKLMNOPQRSTUVWXYZ'``.  This value is not "
"locale-dependent and will not change."
msgstr ""

#: ../Doc/library/string.rst:50
msgid "The string ``'0123456789'``."
msgstr ""

#: ../Doc/library/string.rst:55
msgid "The string ``'0123456789abcdefABCDEF'``."
msgstr ""

# 18a33e4983fb432f83471745acc1bf9c
#: ../Doc/library/string.rst:60
msgid ""
"The concatenation of the strings :const:`lowercase` and :const:`uppercase` "
"described below.  The specific value is locale-dependent, and will be "
"updated when :func:`locale.setlocale` is called."
msgstr ""

# 041c6a7f2e864158b2f8fd0e3659cdb0
#: ../Doc/library/string.rst:67
msgid ""
"A string containing all the characters that are considered lowercase "
"letters. On most systems this is the string "
"``'abcdefghijklmnopqrstuvwxyz'``.  The specific value is locale-dependent, "
"and will be updated when :func:`locale.setlocale` is called."
msgstr ""

#: ../Doc/library/string.rst:75
msgid "The string ``'01234567'``."
msgstr ""

#: ../Doc/library/string.rst:80
msgid ""
"String of ASCII characters which are considered punctuation characters in "
"the ``C`` locale."
msgstr ""

# 030e10ea407e4c2ca3c6a24769adf4a3
#: ../Doc/library/string.rst:86
msgid ""
"String of characters which are considered printable.  This is a combination "
"of :const:`digits`, :const:`letters`, :const:`punctuation`, and :const:"
"`whitespace`."
msgstr ""

# 5ce9da87774f404393f5153c9f063d7d
#: ../Doc/library/string.rst:93
msgid ""
"A string containing all the characters that are considered uppercase "
"letters. On most systems this is the string "
"``'ABCDEFGHIJKLMNOPQRSTUVWXYZ'``.  The specific value is locale-dependent, "
"and will be updated when :func:`locale.setlocale` is called."
msgstr ""

# 2d902cdacebb40e18fa18b5bbda28080
#: ../Doc/library/string.rst:101
msgid ""
"A string containing all characters that are considered whitespace. On most "
"systems this includes the characters space, tab, linefeed, return, formfeed, "
"and vertical tab."
msgstr ""

# 4247602833ed4414929db42dcf8405cb
#: ../Doc/library/string.rst:113
msgid ""
"The built-in str and unicode classes provide the ability to do complex "
"variable substitutions and value formatting via the :meth:`str.format` "
"method described in :pep:`3101`.  The :class:`Formatter` class in the :mod:"
"`string` module allows you to create and customize your own string "
"formatting behaviors using the same implementation as the built-in :meth:"
"`format` method."
msgstr ""

#: ../Doc/library/string.rst:122
msgid "The :class:`Formatter` class has the following public methods:"
msgstr ""

# cc3e1bdf99c44d37b3c1d75a7fe216bb
#: ../Doc/library/string.rst:126
msgid ""
":meth:`format` is the primary API method.  It takes a format string and an "
"arbitrary set of positional and keyword arguments. :meth:`format` is just a "
"wrapper that calls :meth:`vformat`."
msgstr ""

# 00c24350331a496da46d8da2a4d925d8
#: ../Doc/library/string.rst:132
msgid ""
"This function does the actual work of formatting.  It is exposed as a "
"separate function for cases where you want to pass in a predefined "
"dictionary of arguments, rather than unpacking and repacking the dictionary "
"as individual arguments using the ``*args`` and ``**kwds`` syntax.  :meth:"
"`vformat` does the work of breaking up the format string into character data "
"and replacement fields.  It calls the various methods described below."
msgstr ""

#: ../Doc/library/string.rst:140
msgid ""
"In addition, the :class:`Formatter` defines a number of methods that are "
"intended to be replaced by subclasses:"
msgstr ""

# 28b8c3ffa3f94b758e62373379013d87
#: ../Doc/library/string.rst:145
msgid ""
"Loop over the format_string and return an iterable of tuples "
"(*literal_text*, *field_name*, *format_spec*, *conversion*).  This is used "
"by :meth:`vformat` to break the string into either literal text, or "
"replacement fields."
msgstr ""

#: ../Doc/library/string.rst:150
msgid ""
"The values in the tuple conceptually represent a span of literal text "
"followed by a single replacement field.  If there is no literal text (which "
"can happen if two replacement fields occur consecutively), then "
"*literal_text* will be a zero-length string.  If there is no replacement "
"field, then the values of *field_name*, *format_spec* and *conversion* will "
"be ``None``."
msgstr ""

#: ../Doc/library/string.rst:159
msgid ""
"Given *field_name* as returned by :meth:`parse` (see above), convert it to "
"an object to be formatted.  Returns a tuple (obj, used_key).  The default "
"version takes strings of the form defined in :pep:`3101`, such as \"0"
"[name]\" or \"label.title\".  *args* and *kwargs* are as passed in to :meth:"
"`vformat`.  The return value *used_key* has the same meaning as the *key* "
"parameter to :meth:`get_value`."
msgstr ""

#: ../Doc/library/string.rst:168
msgid ""
"Retrieve a given field value.  The *key* argument will be either an integer "
"or a string.  If it is an integer, it represents the index of the positional "
"argument in *args*; if it is a string, then it represents a named argument "
"in *kwargs*."
msgstr ""

#: ../Doc/library/string.rst:173
msgid ""
"The *args* parameter is set to the list of positional arguments to :meth:"
"`vformat`, and the *kwargs* parameter is set to the dictionary of keyword "
"arguments."
msgstr ""

#: ../Doc/library/string.rst:177
msgid ""
"For compound field names, these functions are only called for the first "
"component of the field name; Subsequent components are handled through "
"normal attribute and indexing operations."
msgstr ""

#: ../Doc/library/string.rst:181
msgid ""
"So for example, the field expression '0.name' would cause :meth:`get_value` "
"to be called with a *key* argument of 0.  The ``name`` attribute will be "
"looked up after :meth:`get_value` returns by calling the built-in :func:"
"`getattr` function."
msgstr ""

#: ../Doc/library/string.rst:186
msgid ""
"If the index or keyword refers to an item that does not exist, then an :exc:"
"`IndexError` or :exc:`KeyError` should be raised."
msgstr ""

# b7dcc5327fc24c68ae53995888f6287e
#: ../Doc/library/string.rst:191
msgid ""
"Implement checking for unused arguments if desired.  The arguments to this "
"function is the set of all argument keys that were actually referred to in "
"the format string (integers for positional arguments, and strings for named "
"arguments), and a reference to the *args* and *kwargs* that was passed to "
"vformat.  The set of unused args can be calculated from these parameters.  :"
"meth:`check_unused_args` is assumed to raise an exception if the check fails."
msgstr ""

#: ../Doc/library/string.rst:201
msgid ""
":meth:`format_field` simply calls the global :func:`format` built-in.  The "
"method is provided so that subclasses can override it."
msgstr ""

# 66eefbbb355b45f0a9646eeb448125ab
#: ../Doc/library/string.rst:206
msgid ""
"Converts the value (returned by :meth:`get_field`) given a conversion type "
"(as in the tuple returned by the :meth:`parse` method).  The default version "
"understands 's' (str), 'r' (repr) and 'a' (ascii) conversion types."
msgstr ""

#: ../Doc/library/string.rst:215
msgid "Format String Syntax"
msgstr ""

# ad51669008024d49834c3ac26fc07402
#: ../Doc/library/string.rst:217
msgid ""
"The :meth:`str.format` method and the :class:`Formatter` class share the "
"same syntax for format strings (although in the case of :class:`Formatter`, "
"subclasses can define their own format string syntax)."
msgstr ""

#: ../Doc/library/string.rst:221
msgid ""
"Format strings contain \"replacement fields\" surrounded by curly braces ``{}"
"``. Anything that is not contained in braces is considered literal text, "
"which is copied unchanged to the output.  If you need to include a brace "
"character in the literal text, it can be escaped by doubling: ``{{`` and ``}}"
"``."
msgstr ""

#: ../Doc/library/string.rst:226
msgid "The grammar for a replacement field is as follows:"
msgstr ""

#: ../Doc/library/string.rst:238
msgid ""
"In less formal terms, the replacement field can start with a *field_name* "
"that specifies the object whose value is to be formatted and inserted into "
"the output instead of the replacement field. The *field_name* is optionally "
"followed by a  *conversion* field, which is preceded by an exclamation point "
"``'!'``, and a *format_spec*, which is preceded by a colon ``':'``.  These "
"specify a non-default format for the replacement value."
msgstr ""

# 8c0be215ef894965a0c34ecf83967f38
#: ../Doc/library/string.rst:245
msgid "See also the :ref:`formatspec` section."
msgstr ""

# a83e80d1f8b946ef850232700c6858e9
#: ../Doc/library/string.rst:247
msgid ""
"The *field_name* itself begins with an *arg_name* that is either a number or "
"a keyword.  If it's a number, it refers to a positional argument, and if "
"it's a keyword, it refers to a named keyword argument.  If the numerical "
"arg_names in a format string are 0, 1, 2, ... in sequence, they can all be "
"omitted (not just some) and the numbers 0, 1, 2, ... will be automatically "
"inserted in that order. Because *arg_name* is not quote-delimited, it is not "
"possible to specify arbitrary dictionary keys (e.g., the strings ``'10'`` or "
"``':-]'``) within a format string. The *arg_name* can be followed by any "
"number of index or attribute expressions. An expression of the form ``'."
"name'`` selects the named attribute using :func:`getattr`, while an "
"expression of the form ``'[index]'`` does an index lookup using :func:"
"`__getitem__`."
msgstr ""

#: ../Doc/library/string.rst:263
msgid "Some simple format string examples::"
msgstr ""

#: ../Doc/library/string.rst:272
msgid ""
"The *conversion* field causes a type coercion before formatting.  Normally, "
"the job of formatting a value is done by the :meth:`__format__` method of "
"the value itself.  However, in some cases it is desirable to force a type to "
"be formatted as a string, overriding its own definition of formatting.  By "
"converting the value to a string before calling :meth:`__format__`, the "
"normal formatting logic is bypassed."
msgstr ""

# 57e7c3bc95ff47baae8a854148c3f546
#: ../Doc/library/string.rst:279
msgid ""
"Two conversion flags are currently supported: ``'!s'`` which calls :func:"
"`str` on the value, and ``'!r'`` which calls :func:`repr`."
msgstr ""

#: ../Doc/library/string.rst:282
msgid "Some examples::"
msgstr ""

#: ../Doc/library/string.rst:287
msgid ""
"The *format_spec* field contains a specification of how the value should be "
"presented, including such details as field width, alignment, padding, "
"decimal precision and so on.  Each value type can define its own "
"\"formatting mini-language\" or interpretation of the *format_spec*."
msgstr ""

#: ../Doc/library/string.rst:292
msgid ""
"Most built-in types support a common formatting mini-language, which is "
"described in the next section."
msgstr ""

#: ../Doc/library/string.rst:295
msgid ""
"A *format_spec* field can also include nested replacement fields within it. "
"These nested replacement fields can contain only a field name; conversion "
"flags and format specifications are not allowed.  The replacement fields "
"within the format_spec are substituted before the *format_spec* string is "
"interpreted. This allows the formatting of a value to be dynamically "
"specified."
msgstr ""

# a0899cc3e75e419e8da6889ba3c75427
#: ../Doc/library/string.rst:301
msgid "See the :ref:`formatexamples` section for some examples."
msgstr ""

#: ../Doc/library/string.rst:307
msgid "Format Specification Mini-Language"
msgstr ""

# 44ddb5af380a4985b6a7a0facd954789
#: ../Doc/library/string.rst:309
msgid ""
"\"Format specifications\" are used within replacement fields contained "
"within a format string to define how individual values are presented (see :"
"ref:`formatstrings`).  They can also be passed directly to the built-in :"
"func:`format` function.  Each formattable type may define how the format "
"specification is to be interpreted."
msgstr ""

#: ../Doc/library/string.rst:315
msgid ""
"Most built-in types implement the following options for format "
"specifications, although some of the formatting options are only supported "
"by the numeric types."
msgstr ""

#: ../Doc/library/string.rst:318
msgid ""
"A general convention is that an empty format string (``\"\"``) produces the "
"same result as if you had called :func:`str` on the value. A non-empty "
"format string typically modifies the result."
msgstr ""

#: ../Doc/library/string.rst:322
msgid "The general form of a *standard format specifier* is:"
msgstr ""

# e856c93022784de7baf2260515f797ee
#: ../Doc/library/string.rst:333
msgid ""
"The *fill* character can be any character other than '{' or '}'.  The "
"presence of a fill character is signaled by the character following it, "
"which must be one of the alignment options.  If the second character of "
"*format_spec* is not a valid alignment option, then it is assumed that both "
"the fill character and the alignment option are absent."
msgstr ""

#: ../Doc/library/string.rst:339
msgid "The meaning of the various alignment options is as follows:"
msgstr ""

#: ../Doc/library/string.rst:344
msgid "``'<'``"
msgstr ""

# bed9f0aa64f443e99af9e2a091f3a553
#: ../Doc/library/string.rst:344
msgid ""
"Forces the field to be left-aligned within the available space (this is the "
"default for most objects)."
msgstr ""

#: ../Doc/library/string.rst:347
msgid "``'>'``"
msgstr ""

# 4dd57a449cd145e1913b50d3443a3e14
#: ../Doc/library/string.rst:347
msgid ""
"Forces the field to be right-aligned within the available space (this is the "
"default for numbers)."
msgstr ""

#: ../Doc/library/string.rst:350
msgid "``'='``"
msgstr ""

#: ../Doc/library/string.rst:350
msgid ""
"Forces the padding to be placed after the sign (if any) but before the "
"digits.  This is used for printing fields in the form '+000000120'. This "
"alignment option is only valid for numeric types."
msgstr ""

#: ../Doc/library/string.rst:355
msgid "``'^'``"
msgstr ""

#: ../Doc/library/string.rst:355
msgid "Forces the field to be centered within the available space."
msgstr ""

#: ../Doc/library/string.rst:359
msgid ""
"Note that unless a minimum field width is defined, the field width will "
"always be the same size as the data to fill it, so that the alignment option "
"has no meaning in this case."
msgstr ""

#: ../Doc/library/string.rst:363
msgid ""
"The *sign* option is only valid for number types, and can be one of the "
"following:"
msgstr ""

#: ../Doc/library/string.rst:369
msgid ""
"indicates that a sign should be used for both positive as well as negative "
"numbers."
msgstr ""

#: ../Doc/library/string.rst:372
msgid ""
"indicates that a sign should be used only for negative numbers (this is the "
"default behavior)."
msgstr ""

#: ../Doc/library/string.rst:375
msgid "space"
msgstr ""

#: ../Doc/library/string.rst:375
msgid ""
"indicates that a leading space should be used on positive numbers, and a "
"minus sign on negative numbers."
msgstr ""

#: ../Doc/library/string.rst:379
msgid ""
"The ``'#'`` option is only valid for integers, and only for binary, octal, "
"or hexadecimal output.  If present, it specifies that the output will be "
"prefixed by ``'0b'``, ``'0o'``, or ``'0x'``, respectively."
msgstr ""

#: ../Doc/library/string.rst:383
msgid ""
"The ``','`` option signals the use of a comma for a thousands separator. For "
"a locale aware separator, use the ``'n'`` integer presentation type instead."
msgstr ""

#: ../Doc/library/string.rst:390
msgid ""
"*width* is a decimal integer defining the minimum field width.  If not "
"specified, then the field width will be determined by the content."
msgstr ""

# b3206392c9104be69f8061cd8eb81458
#: ../Doc/library/string.rst:393
msgid ""
"Preceding the *width* field by a zero (``'0'``) character enables sign-aware "
"zero-padding for numeric types.  This is equivalent to a *fill* character of "
"``'0'`` with an *alignment* type of ``'='``."
msgstr ""

#: ../Doc/library/string.rst:397
msgid ""
"The *precision* is a decimal number indicating how many digits should be "
"displayed after the decimal point for a floating point value formatted with "
"``'f'`` and ``'F'``, or before and after the decimal point for a floating "
"point value formatted with ``'g'`` or ``'G'``.  For non-number types the "
"field indicates the maximum field size - in other words, how many characters "
"will be used from the field content. The *precision* is not allowed for "
"integer values."
msgstr ""

#: ../Doc/library/string.rst:404
msgid "Finally, the *type* determines how the data should be presented."
msgstr ""

#: ../Doc/library/string.rst:406
msgid "The available string presentation types are:"
msgstr ""

#: ../Doc/library/string.rst:411
msgid "String format. This is the default type for strings and may be omitted."
msgstr ""

#: ../Doc/library/string.rst:414
msgid "The same as ``'s'``."
msgstr ""

#: ../Doc/library/string.rst:417
msgid "The available integer presentation types are:"
msgstr ""

#: ../Doc/library/string.rst:422
msgid "Binary format. Outputs the number in base 2."
msgstr ""

#: ../Doc/library/string.rst:424
msgid ""
"Character. Converts the integer to the corresponding unicode character "
"before printing."
msgstr ""

#: ../Doc/library/string.rst:427
msgid "Decimal Integer. Outputs the number in base 10."
msgstr ""

#: ../Doc/library/string.rst:429
msgid "Octal format. Outputs the number in base 8."
msgstr ""

#: ../Doc/library/string.rst:431
msgid ""
"Hex format. Outputs the number in base 16, using lower- case letters for the "
"digits above 9."
msgstr ""

#: ../Doc/library/string.rst:434
msgid ""
"Hex format. Outputs the number in base 16, using upper- case letters for the "
"digits above 9."
msgstr ""

#: ../Doc/library/string.rst:437
msgid ""
"Number. This is the same as ``'d'``, except that it uses the current locale "
"setting to insert the appropriate number separator characters."
msgstr ""

#: ../Doc/library/string.rst:441
msgid "The same as ``'d'``."
msgstr ""

#: ../Doc/library/string.rst:444
msgid ""
"In addition to the above presentation types, integers can be formatted with "
"the floating point presentation types listed below (except ``'n'`` and "
"None). When doing so, :func:`float` is used to convert the integer to a "
"floating point number before formatting."
msgstr ""

#: ../Doc/library/string.rst:449
msgid ""
"The available presentation types for floating point and decimal values are:"
msgstr ""

#: ../Doc/library/string.rst:454
msgid ""
"Exponent notation. Prints the number in scientific notation using the letter "
"'e' to indicate the exponent."
msgstr ""

#: ../Doc/library/string.rst:457
msgid ""
"Exponent notation. Same as ``'e'`` except it uses an upper case 'E' as the "
"separator character."
msgstr ""

#: ../Doc/library/string.rst:460
msgid "Fixed point. Displays the number as a fixed-point number."
msgstr ""

# e69b658e64134abb82833ebbf61edbd1
#: ../Doc/library/string.rst:463
msgid "Fixed point. Same as ``'f'``."
msgstr ""

#: ../Doc/library/string.rst:465
msgid ""
"General format.  For a given precision ``p >= 1``, this rounds the number to "
"``p`` significant digits and then formats the result in either fixed-point "
"format or in scientific notation, depending on its magnitude."
msgstr ""

#: ../Doc/library/string.rst:470
msgid ""
"The precise rules are as follows: suppose that the result formatted with "
"presentation type ``'e'`` and precision ``p-1`` would have exponent "
"``exp``.  Then if ``-4 <= exp < p``, the number is formatted with "
"presentation type ``'f'`` and precision ``p-1-exp``.  Otherwise, the number "
"is formatted with presentation type ``'e'`` and precision ``p-1``. In both "
"cases insignificant trailing zeros are removed from the significand, and the "
"decimal point is also removed if there are no remaining digits following it."
msgstr ""

# 54b28db6ce2546bd8d0774b153b6141e
#: ../Doc/library/string.rst:481
msgid ""
"Positive and negative infinity, positive and negative zero, and nans, are "
"formatted as ``inf``, ``-inf``, ``0``, ``-0`` and ``nan`` respectively, "
"regardless of the precision."
msgstr ""

#: ../Doc/library/string.rst:486
msgid "A precision of ``0`` is treated as equivalent to a precision of ``1``."
msgstr ""

#: ../Doc/library/string.rst:489
msgid ""
"General format. Same as ``'g'`` except switches to ``'E'`` if the number "
"gets too large. The representations of infinity and NaN are uppercased, too."
msgstr ""

#: ../Doc/library/string.rst:493
msgid ""
"Number. This is the same as ``'g'``, except that it uses the current locale "
"setting to insert the appropriate number separator characters."
msgstr ""

#: ../Doc/library/string.rst:497
msgid ""
"Percentage. Multiplies the number by 100 and displays in fixed (``'f'``) "
"format, followed by a percent sign."
msgstr ""

# 5edd11f719994651a13215e11e1f63f2
#: ../Doc/library/string.rst:500
msgid "The same as ``'g'``."
msgstr ""

# d811f3dcbb3c45acbd4b83d13cc041e0
#: ../Doc/library/string.rst:508
msgid "Format examples"
msgstr ""

# 719cafc2e2454f819c8ad1f06b04eb95
#: ../Doc/library/string.rst:510
msgid ""
"This section contains examples of the new format syntax and comparison with "
"the old ``%``-formatting."
msgstr ""

# 1ac0e5e50fac4f6eac3b47983892e15a
#: ../Doc/library/string.rst:513
msgid ""
"In most of the cases the syntax is similar to the old ``%``-formatting, with "
"the addition of the ``{}`` and with ``:`` used instead of ``%``. For "
"example, ``'%03.2f'`` can be translated to ``'{:03.2f}'``."
msgstr ""

# c29d4f5debaa4fe4af8a33a6eff798e4
#: ../Doc/library/string.rst:517
msgid ""
"The new format syntax also supports new and different options, shown in the "
"follow examples."
msgstr ""

# 0f1a42fcf2944bc29c89f76b61a8f84b
#: ../Doc/library/string.rst:520
msgid "Accessing arguments by position::"
msgstr ""

# cb4d67bda91741519da290a1a9ccf8a8
#: ../Doc/library/string.rst:533
msgid "Accessing arguments by name::"
msgstr ""

# 811c12b8201c4fbb9c4d4b6c210bfa86
#: ../Doc/library/string.rst:541
msgid "Accessing arguments' attributes::"
msgstr ""

# 62c5f795e9de49c39664ef61d90e340e
#: ../Doc/library/string.rst:557
msgid "Accessing arguments' items::"
msgstr ""

# 985de59365ea483199793628071b85ef
#: ../Doc/library/string.rst:563
msgid "Replacing ``%s`` and ``%r``::"
msgstr ""

# a4ef25b06d6d4415bcbd3044b69fdf8d
#: ../Doc/library/string.rst:568
msgid "Aligning the text and specifying a width::"
msgstr ""

# a16dcc27ee26435b9e8ac84ad1403e5d
#: ../Doc/library/string.rst:579
msgid "Replacing ``%+f``, ``%-f``, and ``% f`` and specifying a sign::"
msgstr ""

# c7bed83727d649b087566b723df1b290
#: ../Doc/library/string.rst:588
msgid ""
"Replacing ``%x`` and ``%o`` and converting the value to different bases::"
msgstr ""

# e54bf6b84dcf47249229fc5174bb2876
#: ../Doc/library/string.rst:597
msgid "Using the comma as a thousands separator::"
msgstr ""

# ca8605c708a34ee6aeca67b14ac63e8a
#: ../Doc/library/string.rst:602
msgid "Expressing a percentage::"
msgstr ""

# 602a165abda34692af01132bb0db91c8
#: ../Doc/library/string.rst:609
msgid "Using type-specific formatting::"
msgstr ""

# d2c22ab2d04e4dfc803fed3a7a028744
#: ../Doc/library/string.rst:616
msgid "Nesting arguments and more complex examples::"
msgstr ""

#: ../Doc/library/string.rst:648
msgid "Template strings"
msgstr ""

#: ../Doc/library/string.rst:652
msgid ""
"Templates provide simpler string substitutions as described in :pep:`292`. "
"Instead of the normal ``%``\\ -based substitutions, Templates support ``$``"
"\\ -based substitutions, using the following rules:"
msgstr ""

#: ../Doc/library/string.rst:656
msgid "``$$`` is an escape; it is replaced with a single ``$``."
msgstr ""

#: ../Doc/library/string.rst:658
msgid ""
"``$identifier`` names a substitution placeholder matching a mapping key of ``"
"\"identifier\"``.  By default, ``\"identifier\"`` must spell a Python "
"identifier.  The first non-identifier character after the ``$`` character "
"terminates this placeholder specification."
msgstr ""

#: ../Doc/library/string.rst:663
msgid ""
"``${identifier}`` is equivalent to ``$identifier``.  It is required when "
"valid identifier characters follow the placeholder but are not part of the "
"placeholder, such as ``\"${noun}ification\"``."
msgstr ""

#: ../Doc/library/string.rst:667
msgid ""
"Any other appearance of ``$`` in the string will result in a :exc:"
"`ValueError` being raised."
msgstr ""

#: ../Doc/library/string.rst:670
msgid ""
"The :mod:`string` module provides a :class:`Template` class that implements "
"these rules.  The methods of :class:`Template` are:"
msgstr ""

#: ../Doc/library/string.rst:676
msgid "The constructor takes a single argument which is the template string."
msgstr ""

# 603a3fbf305349e582dc30abb63e12c2
#: ../Doc/library/string.rst:681
msgid ""
"Performs the template substitution, returning a new string.  *mapping* is "
"any dictionary-like object with keys that match the placeholders in the "
"template.  Alternatively, you can provide keyword arguments, where the "
"keywords are the placeholders.  When both *mapping* and *kws* are given and "
"there are duplicates, the placeholders from *kws* take precedence."
msgstr ""

# 025cc3a949b54beea31866c8a462a0e9
#: ../Doc/library/string.rst:690
msgid ""
"Like :meth:`substitute`, except that if placeholders are missing from "
"*mapping* and *kws*, instead of raising a :exc:`KeyError` exception, the "
"original placeholder will appear in the resulting string intact.  Also, "
"unlike with :meth:`substitute`, any other appearances of the ``$`` will "
"simply return ``$`` instead of raising :exc:`ValueError`."
msgstr ""

#: ../Doc/library/string.rst:696
msgid ""
"While other exceptions may still occur, this method is called \"safe\" "
"because substitutions always tries to return a usable string instead of "
"raising an exception.  In another sense, :meth:`safe_substitute` may be "
"anything other than safe, since it will silently ignore malformed templates "
"containing dangling delimiters, unmatched braces, or placeholders that are "
"not valid Python identifiers."
msgstr ""

#: ../Doc/library/string.rst:703
msgid ":class:`Template` instances also provide one public data attribute:"
msgstr ""

#: ../Doc/library/string.rst:707
msgid ""
"This is the object passed to the constructor's *template* argument.  In "
"general, you shouldn't change it, but read-only access is not enforced."
msgstr ""

#: ../Doc/library/string.rst:710
msgid "Here is an example of how to use a Template:"
msgstr ""

#: ../Doc/library/string.rst:728
msgid ""
"Advanced usage: you can derive subclasses of :class:`Template` to customize "
"the placeholder syntax, delimiter character, or the entire regular "
"expression used to parse template strings.  To do this, you can override "
"these class attributes:"
msgstr ""

# 288fccab80174a9fad9879f4e7f8d695
#: ../Doc/library/string.rst:732
msgid ""
"*delimiter* -- This is the literal string describing a placeholder "
"introducing delimiter.  The default value is ``$``.  Note that this should "
"*not* be a regular expression, as the implementation will call :meth:`re."
"escape` on this string as needed."
msgstr ""

#: ../Doc/library/string.rst:737
msgid ""
"*idpattern* -- This is the regular expression describing the pattern for non-"
"braced placeholders (the braces will be added automatically as "
"appropriate).  The default value is the regular expression ``[_a-z][_a-z0-9]"
"*``."
msgstr ""

#: ../Doc/library/string.rst:742
msgid ""
"Alternatively, you can provide the entire regular expression pattern by "
"overriding the class attribute *pattern*.  If you do this, the value must be "
"a regular expression object with four named capturing groups.  The capturing "
"groups correspond to the rules given above, along with the invalid "
"placeholder rule:"
msgstr ""

#: ../Doc/library/string.rst:748
msgid ""
"*escaped* -- This group matches the escape sequence, e.g. ``$$``, in the "
"default pattern."
msgstr ""

#: ../Doc/library/string.rst:751
msgid ""
"*named* -- This group matches the unbraced placeholder name; it should not "
"include the delimiter in capturing group."
msgstr ""

#: ../Doc/library/string.rst:754
msgid ""
"*braced* -- This group matches the brace enclosed placeholder name; it "
"should not include either the delimiter or braces in the capturing group."
msgstr ""

#: ../Doc/library/string.rst:757
msgid ""
"*invalid* -- This group matches any other delimiter pattern (usually a "
"single delimiter), and it should appear last in the regular expression."
msgstr ""

# 9dd68c869b5e440d9b9853a3bbd40d06
#: ../Doc/library/string.rst:762
msgid "String functions"
msgstr ""

# 0a7fe9163f0148b09bff7f2aff6b2b6f
#: ../Doc/library/string.rst:764
msgid ""
"The following functions are available to operate on string and Unicode "
"objects. They are not available as string methods."
msgstr ""

#: ../Doc/library/string.rst:770
msgid ""
"Split the argument into words using :meth:`str.split`, capitalize each word "
"using :meth:`str.capitalize`, and join the capitalized words using :meth:"
"`str.join`.  If the optional second argument *sep* is absent or ``None``, "
"runs of whitespace characters are replaced by a single space and leading and "
"trailing whitespace are removed, otherwise *sep* is used to split and join "
"the words."
msgstr ""

# cf8e50c83c4c4570a11856e7032aaef3
#: ../Doc/library/string.rst:780
msgid ""
"Return a translation table suitable for passing to :func:`translate`, that "
"will map each character in *from* into the character at the same position in "
"*to*; *from* and *to* must have the same length."
msgstr ""

# 15e3a84a8a1d4d5185b3ef6fa2b150fd
#: ../Doc/library/string.rst:786
msgid ""
"Don't use strings derived from :const:`lowercase` and :const:`uppercase` as "
"arguments; in some locales, these don't have the same length.  For case "
"conversions, always use :meth:`str.lower` and :meth:`str.upper`."
msgstr ""

# a4c261c17d984912bb4f5edf63339c7d
#: ../Doc/library/string.rst:792
msgid "Deprecated string functions"
msgstr ""

# c7a006bd23984cbdaadcedd202b7ab02
#: ../Doc/library/string.rst:794
msgid ""
"The following list of functions are also defined as methods of string and "
"Unicode objects; see section :ref:`string-methods` for more information on "
"those.  You should consider these functions as deprecated, although they "
"will not be removed until Python 3.  The functions defined in this module "
"are:"
msgstr ""

# 3cdf510aa59540cd9ce79cb626537531
#: ../Doc/library/string.rst:807
msgid ""
"Convert a string to a floating point number.  The string must have the "
"standard syntax for a floating point literal in Python, optionally preceded "
"by a sign (``+`` or ``-``).  Note that this behaves identical to the built-"
"in function :func:`float` when passed a string."
msgstr ""

# f7237e80ee924ab6a23af2ef15b94930
#: ../Doc/library/string.rst:818
msgid ""
"When passing in a string, values for NaN and Infinity may be returned, "
"depending on the underlying C library.  The specific set of strings accepted "
"which cause these values to be returned depends entirely on the C library "
"and is known to vary."
msgstr ""

# 5be275cf80894d6d9cae3fb6fdac3b08
#: ../Doc/library/string.rst:831
msgid ""
"Convert string *s* to an integer in the given *base*.  The string must "
"consist of one or more digits, optionally preceded by a sign (``+`` or ``-"
"``).  The *base* defaults to 10.  If it is 0, a default base is chosen "
"depending on the leading characters of the string (after stripping the "
"sign): ``0x`` or ``0X`` means 16, ``0`` means 8, anything else means 10.  If "
"*base* is 16, a leading ``0x`` or ``0X`` is always accepted, though not "
"required.  This behaves identically to the built-in function :func:`int` "
"when passed a string.  (Also note: for a more flexible interpretation of "
"numeric literals, use the built-in function :func:`eval`.)"
msgstr ""

# 948273ae80e74f3a9684d1db1c92fd75
#: ../Doc/library/string.rst:849
msgid ""
"Convert string *s* to a long integer in the given *base*. The string must "
"consist of one or more digits, optionally preceded by a sign (``+`` or ``-"
"``). The *base* argument has the same meaning as for :func:`atoi`.  A "
"trailing ``l`` or ``L`` is not allowed, except if the base is 0.  Note that "
"when invoked without *base* or with *base* set to 10, this behaves identical "
"to the built-in function :func:`long` when passed a string."
msgstr ""

# 3832d23d5b4e49b08e7018f1eac89b5a
#: ../Doc/library/string.rst:859
msgid "Return a copy of *word* with only its first character capitalized."
msgstr ""

# 8bb13d5c5c454af28e8e7f9d8bf28936
#: ../Doc/library/string.rst:864
msgid ""
"Expand tabs in a string replacing them by one or more spaces, depending on "
"the current column and the given tab size.  The column number is reset to "
"zero after each newline occurring in the string. This doesn't understand "
"other non-printing characters or escape sequences.  The tab size defaults to "
"8."
msgstr ""

# 4a4947bc162c47898f0c3fa9c2b065a5
#: ../Doc/library/string.rst:872
msgid ""
"Return the lowest index in *s* where the substring *sub* is found such that "
"*sub* is wholly contained in ``s[start:end]``.  Return ``-1`` on failure. "
"Defaults for *start* and *end* and interpretation of negative values is the "
"same as for slices."
msgstr ""

# 658553db8e754325b1b74d97ec92dc0a
#: ../Doc/library/string.rst:880
msgid "Like :func:`find` but find the highest index."
msgstr ""

# 4188e93587f749e2a0089570cec79cb7
#: ../Doc/library/string.rst:885
msgid ""
"Like :func:`find` but raise :exc:`ValueError` when the substring is not "
"found."
msgstr ""

# c329bccbf3584461b8304c501ed9fda6
#: ../Doc/library/string.rst:890
msgid ""
"Like :func:`rfind` but raise :exc:`ValueError` when the substring is not "
"found."
msgstr ""

# 7009309b6561471db65e2e1108fa9f58
#: ../Doc/library/string.rst:895
msgid ""
"Return the number of (non-overlapping) occurrences of substring *sub* in "
"string ``s[start:end]``. Defaults for *start* and *end* and interpretation "
"of negative values are the same as for slices."
msgstr ""

# 6fe877d6867944ab911e3a3efd3baa1c
#: ../Doc/library/string.rst:902
msgid ""
"Return a copy of *s*, but with upper case letters converted to lower case."
msgstr ""

# 8f105f04bd62408cb8f67e52ef7d7537
#: ../Doc/library/string.rst:907
msgid ""
"Return a list of the words of the string *s*.  If the optional second "
"argument *sep* is absent or ``None``, the words are separated by arbitrary "
"strings of whitespace characters (space, tab, newline, return, formfeed).  "
"If the second argument *sep* is present and not ``None``, it specifies a "
"string to be used as the  word separator.  The returned list will then have "
"one more item than the number of non-overlapping occurrences of the "
"separator in the string. If *maxsplit* is given, at most *maxsplit* number "
"of splits occur, and the remainder of the string is returned as the final "
"element of the list (thus, the list will have at most ``maxsplit+1`` "
"elements).  If *maxsplit* is not specified or ``-1``, then there is no limit "
"on the number of splits (all possible splits are made)."
msgstr ""

# 3684a6a82ea1471e8413186b81335736
#: ../Doc/library/string.rst:919
msgid ""
"The behavior of split on an empty string depends on the value of *sep*. If "
"*sep* is not specified, or specified as ``None``, the result will be an "
"empty list. If *sep* is specified as any string, the result will be a list "
"containing one element which is an empty string."
msgstr ""

# c4a7c8b50fe14fc9b0509152a84522e0
#: ../Doc/library/string.rst:927
msgid ""
"Return a list of the words of the string *s*, scanning *s* from the end.  To "
"all intents and purposes, the resulting list of words is the same as "
"returned by :func:`split`, except when the optional third argument "
"*maxsplit* is explicitly specified and nonzero.  If *maxsplit* is given, at "
"most *maxsplit* number of splits -- the *rightmost* ones -- occur, and the "
"remainder of the string is returned as the first element of the list (thus, "
"the list will have at most ``maxsplit+1`` elements)."
msgstr ""

# 68168e2710c74e0298e5cdc3dc05a250
#: ../Doc/library/string.rst:940
msgid ""
"This function behaves identically to :func:`split`.  (In the past, :func:"
"`split` was only used with one argument, while :func:`splitfields` was only "
"used with two arguments.)"
msgstr ""

# 0b988e4bd6594706b01bdc936d9ac112
#: ../Doc/library/string.rst:947
msgid ""
"Concatenate a list or tuple of words with intervening occurrences of  *sep*. "
"The default value for *sep* is a single space character.  It is always true "
"that ``string.join(string.split(s, sep), sep)`` equals *s*."
msgstr ""

# 773a9166873e45ad91e07537312ab3aa
#: ../Doc/library/string.rst:954
msgid ""
"This function behaves identically to :func:`join`.  (In the past,  :func:"
"`join` was only used with one argument, while :func:`joinfields` was only "
"used with two arguments.) Note that there is no :meth:`joinfields` method on "
"string objects; use the :meth:`join` method instead."
msgstr ""

# 0782d708835743d4a9fa43acda772003
#: ../Doc/library/string.rst:962
msgid ""
"Return a copy of the string with leading characters removed.  If *chars* is "
"omitted or ``None``, whitespace characters are removed.  If given and not "
"``None``, *chars* must be a string; the characters in the string will be "
"stripped from the beginning of the string this method is called on."
msgstr ""

# 0a20234ce65e4df28d523ff248da177c
#: ../Doc/library/string.rst:974
msgid ""
"Return a copy of the string with trailing characters removed.  If *chars* is "
"omitted or ``None``, whitespace characters are removed.  If given and not "
"``None``, *chars* must be a string; the characters in the string will be "
"stripped from the end of the string this method is called on."
msgstr ""

# cb1c74dd2a9646aa9c07b01c1c08348c
#: ../Doc/library/string.rst:986
msgid ""
"Return a copy of the string with leading and trailing characters removed.  "
"If *chars* is omitted or ``None``, whitespace characters are removed.  If "
"given and not ``None``, *chars* must be a string; the characters in the "
"string will be stripped from the both ends of the string this method is "
"called on."
msgstr ""

# 2bd356b1a32c4b34a607ee25344a0bf2
#: ../Doc/library/string.rst:998
msgid ""
"Return a copy of *s*, but with lower case letters converted to upper case "
"and vice versa."
msgstr ""

# e830065221674e51954581cd65160a9d
#: ../Doc/library/string.rst:1004
msgid ""
"Delete all characters from *s* that are in *deletechars* (if  present), and "
"then translate the characters using *table*, which  must be a 256-character "
"string giving the translation for each character value, indexed by its "
"ordinal.  If *table* is ``None``, then only the character deletion step is "
"performed."
msgstr ""

# 9cb35cdbe51a4fb99e30d935fb5ba260
#: ../Doc/library/string.rst:1012
msgid ""
"Return a copy of *s*, but with lower case letters converted to upper case."
msgstr ""

# c3ad9da0230f4e6abab563459b662d06
#: ../Doc/library/string.rst:1019
msgid ""
"These functions respectively left-justify, right-justify and center a string "
"in a field of given width.  They return a string that is at least *width* "
"characters wide, created by padding the string *s* with the character "
"*fillchar* (default is a space) until the given width on the right, left or "
"both sides. The string is never truncated."
msgstr ""

# 540ca8ea40624ad7aa915f8b5c63538a
#: ../Doc/library/string.rst:1028
msgid ""
"Pad a numeric string on the left with zero digits until the given width is "
"reached.  Strings starting with a sign are handled correctly."
msgstr ""

# 22b0d53d4c1d4ddf8e91d169a0214223
#: ../Doc/library/string.rst:1034
msgid ""
"Return a copy of string *str* with all occurrences of substring *old* "
"replaced by *new*.  If the optional argument *maxreplace* is given, the "
"first *maxreplace* occurrences are replaced."
msgstr ""

# 1db20cf3541446d089a615f77fe0f8e8
#: ../Doc/library/stringio.rst:3
msgid ":mod:`StringIO` --- Read and write strings as files"
msgstr ""

# cc7a0360c5074b3a8bc148870b65f76e
#: ../Doc/library/stringio.rst:9
msgid ""
"This module implements a file-like class, :class:`StringIO`, that reads and "
"writes a string buffer (also known as *memory files*).  See the description "
"of file objects for operations (section :ref:`bltin-file-objects`). (For "
"standard strings, see :class:`str` and :class:`unicode`.)"
msgstr ""

# 84e76a73894d4e2c880a73abbf446fb1
#: ../Doc/library/stringio.rst:17
msgid ""
"When a :class:`StringIO` object is created, it can be initialized to an "
"existing string by passing the string to the constructor. If no string is "
"given, the :class:`StringIO` will start empty. In both cases, the initial "
"file position starts at zero."
msgstr ""

# 9be96c2e52bf4092a8e9c566d1fa018e
#: ../Doc/library/stringio.rst:22
msgid ""
"The :class:`StringIO` object can accept either Unicode or 8-bit strings, but "
"mixing the two may take some care.  If both are used, 8-bit strings that "
"cannot be interpreted as 7-bit ASCII (that use the 8th bit) will cause a :"
"exc:`UnicodeError` to be raised when :meth:`getvalue` is called."
msgstr ""

# 8f564753d2e44e5786ffb8b7b4d05127
#: ../Doc/library/stringio.rst:27
msgid ""
"The following methods of :class:`StringIO` objects require special mention:"
msgstr ""

# 83267eb976794689a59ccb5e5668cea9
#: ../Doc/library/stringio.rst:32
msgid ""
"Retrieve the entire contents of the \"file\" at any time before the :class:"
"`StringIO` object's :meth:`close` method is called.  See the note above for "
"information about mixing Unicode and 8-bit strings; such mixing can cause "
"this method to raise :exc:`UnicodeError`."
msgstr ""

# 51246b5d514948ea9dbf2826cba79d2c
#: ../Doc/library/stringio.rst:40
msgid ""
"Free the memory buffer.  Attempting to do further operations with a closed :"
"class:`StringIO` object will raise a :exc:`ValueError`."
msgstr ""

# 80e8586a407d48d78818869ea3500bc7
#: ../Doc/library/stringio.rst:61
msgid ":mod:`cStringIO` --- Faster version of :mod:`StringIO`"
msgstr ""

# a98d233756a64af5846fbef265246a79
#: ../Doc/library/stringio.rst:69
msgid ""
"The module :mod:`cStringIO` provides an interface similar to that of the :"
"mod:`StringIO` module.  Heavy use of :class:`StringIO.StringIO` objects can "
"be made more efficient by using the function :func:`StringIO` from this "
"module instead."
msgstr ""

# c264086fc4184db0a7ba16f84851ee6e
#: ../Doc/library/stringio.rst:77
msgid "Return a StringIO-like stream for reading or writing."
msgstr ""

# c4779223154a41a483769bda0a50038c
#: ../Doc/library/stringio.rst:79
msgid ""
"Since this is a factory function which returns objects of built-in types, "
"there's no way to build your own version using subclassing.  It's not "
"possible to set attributes on it.  Use the original :mod:`StringIO` module "
"in those cases."
msgstr ""

# 6c601eb5c1f143e698afe9a2b12abf09
#: ../Doc/library/stringio.rst:84
msgid ""
"Unlike the :mod:`StringIO` module, this module is not able to accept Unicode "
"strings that cannot be encoded as plain ASCII strings."
msgstr ""

# ff6a0f91f0044a449cf0a26320986ab3
#: ../Doc/library/stringio.rst:87
msgid ""
"Another difference from the :mod:`StringIO` module is that calling :func:"
"`StringIO` with a string parameter creates a read-only object. Unlike an "
"object created without a string parameter, it does not have write methods. "
"These objects are not generally visible.  They turn up in tracebacks as :"
"class:`StringI` and :class:`StringO`."
msgstr ""

# c08d346b098e43e08fc26daf46ac11c8
#: ../Doc/library/stringio.rst:95
msgid "The following data objects are provided as well:"
msgstr ""

# 044c6031b6e54d65b3fc22edf4c59e68
#: ../Doc/library/stringio.rst:100
msgid ""
"The type object of the objects created by calling :func:`StringIO` with a "
"string parameter."
msgstr ""

# cd83074cb5054c78a3d47e7efdf25347
#: ../Doc/library/stringio.rst:106
msgid ""
"The type object of the objects returned by calling :func:`StringIO` with no "
"parameters."
msgstr ""

# e64ab9b1935d48298c70fffd2890bf93
#: ../Doc/library/stringio.rst:109
msgid ""
"There is a C API to the module as well; refer to the module source for  more "
"information."
msgstr ""

#: ../Doc/library/stringprep.rst:3
msgid ":mod:`stringprep` --- Internet String Preparation"
msgstr ""

#: ../Doc/library/stringprep.rst:14
msgid ""
"When identifying things (such as host names) in the internet, it is often "
"necessary to compare such identifications for \"equality\". Exactly how this "
"comparison is executed may depend on the application domain, e.g. whether it "
"should be case-insensitive or not. It may be also necessary to restrict the "
"possible identifications, to allow only identifications consisting of "
"\"printable\" characters."
msgstr ""

#: ../Doc/library/stringprep.rst:21
msgid ""
":rfc:`3454` defines a procedure for \"preparing\" Unicode strings in "
"internet protocols. Before passing strings onto the wire, they are processed "
"with the preparation procedure, after which they have a certain normalized "
"form. The RFC defines a set of tables, which can be combined into profiles. "
"Each profile must define which tables it uses, and what other optional parts "
"of the ``stringprep`` procedure are part of the profile. One example of a "
"``stringprep`` profile is ``nameprep``, which is used for internationalized "
"domain names."
msgstr ""

#: ../Doc/library/stringprep.rst:29
msgid ""
"The module :mod:`stringprep` only exposes the tables from RFC 3454. As these "
"tables would be very large to represent them as dictionaries or lists, the "
"module uses the Unicode character database internally. The module source "
"code itself was generated using the ``mkstringprep.py`` utility."
msgstr ""

#: ../Doc/library/stringprep.rst:34
msgid ""
"As a result, these tables are exposed as functions, not as data structures. "
"There are two kinds of tables in the RFC: sets and mappings. For a set, :mod:"
"`stringprep` provides the \"characteristic function\", i.e. a function that "
"returns true if the parameter is part of the set. For mappings, it provides "
"the mapping function: given the key, it returns the associated value. Below "
"is a list of all functions available in the module."
msgstr ""

#: ../Doc/library/stringprep.rst:44
msgid ""
"Determine whether *code* is in tableA.1 (Unassigned code points in Unicode "
"3.2)."
msgstr ""

#: ../Doc/library/stringprep.rst:49
msgid "Determine whether *code* is in tableB.1 (Commonly mapped to nothing)."
msgstr ""

#: ../Doc/library/stringprep.rst:54
msgid ""
"Return the mapped value for *code* according to tableB.2 (Mapping for case-"
"folding used with NFKC)."
msgstr ""

#: ../Doc/library/stringprep.rst:60
msgid ""
"Return the mapped value for *code* according to tableB.3 (Mapping for case-"
"folding used with no normalization)."
msgstr ""

#: ../Doc/library/stringprep.rst:66
msgid "Determine whether *code* is in tableC.1.1  (ASCII space characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:71
msgid ""
"Determine whether *code* is in tableC.1.2  (Non-ASCII space characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:76
msgid ""
"Determine whether *code* is in tableC.1  (Space characters, union of C.1.1 "
"and C.1.2)."
msgstr ""

#: ../Doc/library/stringprep.rst:82
msgid "Determine whether *code* is in tableC.2.1  (ASCII control characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:87
msgid ""
"Determine whether *code* is in tableC.2.2  (Non-ASCII control characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:92
msgid ""
"Determine whether *code* is in tableC.2  (Control characters, union of C.2.1 "
"and C.2.2)."
msgstr ""

#: ../Doc/library/stringprep.rst:98
msgid "Determine whether *code* is in tableC.3  (Private use)."
msgstr ""

#: ../Doc/library/stringprep.rst:103
msgid "Determine whether *code* is in tableC.4  (Non-character code points)."
msgstr ""

#: ../Doc/library/stringprep.rst:108
msgid "Determine whether *code* is in tableC.5  (Surrogate codes)."
msgstr ""

#: ../Doc/library/stringprep.rst:113
msgid ""
"Determine whether *code* is in tableC.6  (Inappropriate for plain text)."
msgstr ""

#: ../Doc/library/stringprep.rst:118
msgid ""
"Determine whether *code* is in tableC.7  (Inappropriate for canonical "
"representation)."
msgstr ""

#: ../Doc/library/stringprep.rst:124
msgid ""
"Determine whether *code* is in tableC.8  (Change display properties or are "
"deprecated)."
msgstr ""

#: ../Doc/library/stringprep.rst:130
msgid "Determine whether *code* is in tableC.9  (Tagging characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:135
msgid ""
"Determine whether *code* is in tableD.1  (Characters with bidirectional "
"property \"R\" or \"AL\")."
msgstr ""

#: ../Doc/library/stringprep.rst:141
msgid ""
"Determine whether *code* is in tableD.2  (Characters with bidirectional "
"property \"L\")."
msgstr ""

#: ../Doc/library/strings.rst:6
msgid "String Services"
msgstr ""

#: ../Doc/library/strings.rst:8
msgid ""
"The modules described in this chapter provide a wide range of string "
"manipulation operations."
msgstr ""

# aad45023e05c429086983cd9ed2b667d
#: ../Doc/library/strings.rst:11
msgid ""
"In addition, Python's built-in string classes support the sequence type "
"methods described in the :ref:`typesseq` section, and also the string-"
"specific methods described in the :ref:`string-methods` section. To output "
"formatted strings use template strings or the ``%`` operator described in "
"the :ref:`string-formatting` section. Also, see the :mod:`re` module for "
"string functions based on regular expressions."
msgstr ""

# fe8a772c880440b086e4776176313705
#: ../Doc/library/struct.rst:3
msgid ":mod:`struct` --- Interpret strings as packed binary data"
msgstr ""

# 1ab33dbdaa3f494f96ada3798abfce9b
#: ../Doc/library/struct.rst:12
msgid ""
"This module performs conversions between Python values and C structs "
"represented as Python strings.  This can be used in handling binary data "
"stored in files or from network connections, among other sources.  It uses :"
"ref:`struct-format-strings` as compact descriptions of the layout of the C "
"structs and the intended conversion to/from Python values."
msgstr ""

# c4893f4be7e14d408be309361b3ee4d7
#: ../Doc/library/struct.rst:20
msgid ""
"By default, the result of packing a given C struct includes pad bytes in "
"order to maintain proper alignment for the C types involved; similarly, "
"alignment is taken into account when unpacking.  This behavior is chosen so "
"that the bytes of a packed struct correspond exactly to the layout in memory "
"of the corresponding C struct.  To handle platform-independent data formats "
"or omit implicit pad bytes, use ``standard`` size and alignment instead of "
"``native`` size and alignment: see :ref:`struct-alignment` for details."
msgstr ""

#: ../Doc/library/struct.rst:29
msgid "Functions and Exceptions"
msgstr ""

#: ../Doc/library/struct.rst:31
msgid "The module defines the following exception and functions:"
msgstr ""

#: ../Doc/library/struct.rst:36
msgid ""
"Exception raised on various occasions; argument is a string describing what "
"is wrong."
msgstr ""

# c4cecc5349b84431a1ac3144d40473be
#: ../Doc/library/struct.rst:42
msgid ""
"Return a string containing the values ``v1, v2, ...`` packed according to "
"the given format.  The arguments must match the values required by the "
"format exactly."
msgstr ""

# 184d53484d804eaa914af6472e347689
#: ../Doc/library/struct.rst:49
msgid ""
"Pack the values ``v1, v2, ...`` according to the given format, write the "
"packed bytes into the writable *buffer* starting at *offset*. Note that the "
"offset is a required argument."
msgstr ""

# 499200410b24448fb07f38dce619c5a0
#: ../Doc/library/struct.rst:58
msgid ""
"Unpack the string (presumably packed by ``pack(fmt, ...)``) according to the "
"given format.  The result is a tuple even if it contains exactly one item. "
"The string must contain exactly the amount of data required by the format "
"(``len(string)`` must equal ``calcsize(fmt)``)."
msgstr ""

# 9c397c6535274174afcc6a2dea1d205a
#: ../Doc/library/struct.rst:66
msgid ""
"Unpack the *buffer* according to the given format. The result is a tuple "
"even if it contains exactly one item. The *buffer* must contain at least the "
"amount of data required by the format (``len(buffer[offset:])`` must be at "
"least ``calcsize(fmt)``)."
msgstr ""

# 23e33d31314e4081b45137b8c9980234
#: ../Doc/library/struct.rst:76
msgid ""
"Return the size of the struct (and hence of the string) corresponding to the "
"given format."
msgstr ""

#: ../Doc/library/struct.rst:82
msgid "Format Strings"
msgstr ""

#: ../Doc/library/struct.rst:84
msgid ""
"Format strings are the mechanism used to specify the expected layout when "
"packing and unpacking data.  They are built up from :ref:`format-"
"characters`, which specify the type of data being packed/unpacked.  In "
"addition, there are special characters for controlling the :ref:`struct-"
"alignment`."
msgstr ""

#: ../Doc/library/struct.rst:93
msgid "Byte Order, Size, and Alignment"
msgstr ""

#: ../Doc/library/struct.rst:95
msgid ""
"By default, C types are represented in the machine's native format and byte "
"order, and properly aligned by skipping pad bytes if necessary (according to "
"the rules used by the C compiler)."
msgstr ""

#: ../Doc/library/struct.rst:99
msgid ""
"Alternatively, the first character of the format string can be used to "
"indicate the byte order, size and alignment of the packed data, according to "
"the following table:"
msgstr ""

#: ../Doc/library/struct.rst:104
msgid "Byte order"
msgstr ""

#: ../Doc/library/struct.rst:104
msgid "Size"
msgstr ""

#: ../Doc/library/struct.rst:104
msgid "Alignment"
msgstr ""

#: ../Doc/library/struct.rst:106
msgid "``@``"
msgstr ""

#: ../Doc/library/struct.rst:106 ../Doc/library/struct.rst:108
msgid "native"
msgstr ""

#: ../Doc/library/struct.rst:108 ../Doc/library/struct.rst:110
#: ../Doc/library/struct.rst:112 ../Doc/library/struct.rst:114
msgid "standard"
msgstr ""

#: ../Doc/library/struct.rst:108 ../Doc/library/struct.rst:110
#: ../Doc/library/struct.rst:112 ../Doc/library/struct.rst:114
msgid "none"
msgstr ""

#: ../Doc/library/struct.rst:110
msgid "little-endian"
msgstr ""

#: ../Doc/library/struct.rst:112
msgid "big-endian"
msgstr ""

#: ../Doc/library/struct.rst:114
msgid "network (= big-endian)"
msgstr ""

#: ../Doc/library/struct.rst:117
msgid "If the first character is not one of these, ``'@'`` is assumed."
msgstr ""

#: ../Doc/library/struct.rst:119
msgid ""
"Native byte order is big-endian or little-endian, depending on the host "
"system. For example, Intel x86 and AMD64 (x86-64) are little-endian; "
"Motorola 68000 and PowerPC G5 are big-endian; ARM and Intel Itanium feature "
"switchable endianness (bi-endian). Use ``sys.byteorder`` to check the "
"endianness of your system."
msgstr ""

#: ../Doc/library/struct.rst:125
msgid ""
"Native size and alignment are determined using the C compiler's ``sizeof`` "
"expression.  This is always combined with native byte order."
msgstr ""

#: ../Doc/library/struct.rst:128
msgid ""
"Standard size depends only on the format character;  see the table in the :"
"ref:`format-characters` section."
msgstr ""

#: ../Doc/library/struct.rst:131
msgid ""
"Note the difference between ``'@'`` and ``'='``: both use native byte order, "
"but the size and alignment of the latter is standardized."
msgstr ""

#: ../Doc/library/struct.rst:134
msgid ""
"The form ``'!'`` is available for those poor souls who claim they can't "
"remember whether network byte order is big-endian or little-endian."
msgstr ""

#: ../Doc/library/struct.rst:137
msgid ""
"There is no way to indicate non-native byte order (force byte-swapping); use "
"the appropriate choice of ``'<'`` or ``'>'``."
msgstr ""

#: ../Doc/library/struct.rst:142
msgid ""
"Padding is only automatically added between successive structure members. No "
"padding is added at the beginning or the end of the encoded struct."
msgstr ""

#: ../Doc/library/struct.rst:145
msgid ""
"No padding is added when using non-native size and alignment, e.g. with '<', "
"'>', '=', and '!'."
msgstr ""

#: ../Doc/library/struct.rst:148
msgid ""
"To align the end of a structure to the alignment requirement of a particular "
"type, end the format with the code for that type with a repeat count of "
"zero.  See :ref:`struct-examples`."
msgstr ""

#: ../Doc/library/struct.rst:156
msgid "Format Characters"
msgstr ""

#: ../Doc/library/struct.rst:158
msgid ""
"Format characters have the following meaning; the conversion between C and "
"Python values should be obvious given their types.  The 'Standard size' "
"column refers to the size of the packed value in bytes when using standard "
"size; that is, when the format string starts with one of ``'<'``, ``'>'``, "
"``'!'`` or ``'='``.  When using native size, the size of the packed value is "
"platform-dependent."
msgstr ""

#: ../Doc/library/struct.rst:166
msgid "Standard size"
msgstr ""

#: ../Doc/library/struct.rst:168
msgid "pad byte"
msgstr ""

#: ../Doc/library/struct.rst:168
msgid "no value"
msgstr ""

# 1288ffc1c75b4adab37848d94f909b6a
#: ../Doc/library/struct.rst:170
msgid "string of length 1"
msgstr ""

#: ../Doc/library/struct.rst:172
msgid "``b``"
msgstr ""

# 37e6d901a67249c98556b3ef0126ad57
#: ../Doc/library/struct.rst:172
msgid ":c:type:`signed char`"
msgstr ""

#: ../Doc/library/struct.rst:174
msgid "``B``"
msgstr ""

#: ../Doc/library/struct.rst:176
msgid "bool"
msgstr ""

#: ../Doc/library/struct.rst:178
msgid "``h``"
msgstr ""

#: ../Doc/library/struct.rst:180
msgid "``H``"
msgstr ""

#: ../Doc/library/struct.rst:182
msgid "``i``"
msgstr ""

#: ../Doc/library/struct.rst:184
msgid "``I``"
msgstr ""

#: ../Doc/library/struct.rst:186
msgid "``l``"
msgstr ""

#: ../Doc/library/struct.rst:188
msgid "``L``"
msgstr ""

#: ../Doc/library/struct.rst:190
msgid "``q``"
msgstr ""

# 4f3c3465e0bd4c138ea33b19ca574f53
#: ../Doc/library/struct.rst:190
msgid ":c:type:`long long`"
msgstr ""

# 47a6e923f2b7406e93b449bc11dad0ea
# 3bc948f0253a4e3e97184b49a59f32ad
#: ../Doc/library/struct.rst:190 ../Doc/library/struct.rst:192
msgid "\\(2), \\(3)"
msgstr ""

#: ../Doc/library/struct.rst:192
msgid "``Q``"
msgstr ""

# 31c3a9381d824b93921c3a6080729c46
#: ../Doc/library/struct.rst:192
msgid ":c:type:`unsigned long long`"
msgstr ""

#: ../Doc/library/struct.rst:195
msgid "``f``"
msgstr ""

#: ../Doc/library/struct.rst:197
msgid "``d``"
msgstr ""

# e9f84c90b1104bb38e46584222a84ec2
# 282d6c3ce6c44fe3a4373a6eddbd9806
#: ../Doc/library/struct.rst:199 ../Doc/library/struct.rst:201
msgid ":c:type:`char[]`"
msgstr ""

#: ../Doc/library/struct.rst:201
msgid "``p``"
msgstr ""

#: ../Doc/library/struct.rst:203
msgid "``P``"
msgstr ""

# f2d241d616e240efaee4c1d95fefcfb3
#: ../Doc/library/struct.rst:203
msgid ":c:type:`void \\*`"
msgstr ""

# 944358e465c347f6b9edf5a120a5fe3d
#: ../Doc/library/struct.rst:203
msgid "\\(5), \\(3)"
msgstr ""

# 9a5695e377f94db285ab1cc15685e8c7
#: ../Doc/library/struct.rst:209
msgid ""
"The ``'?'`` conversion code corresponds to the :c:type:`_Bool` type defined "
"by C99. If this type is not available, it is simulated using a :c:type:"
"`char`. In standard mode, it is always represented by one byte."
msgstr ""

# 1e56024e491c4b83b688df0710575b0d
#: ../Doc/library/struct.rst:216
msgid ""
"The ``'q'`` and ``'Q'`` conversion codes are available in native mode only "
"if the platform C compiler supports C :c:type:`long long`, or, on Windows, :"
"c:type:`__int64`.  They are always available in standard modes."
msgstr ""

# 4e99f96849a64b4fa500b22355b3126c
#: ../Doc/library/struct.rst:223
msgid ""
"When attempting to pack a non-integer using any of the integer conversion "
"codes, if the non-integer has a :meth:`__index__` method then that method is "
"called to convert the argument to an integer before packing.  If no :meth:"
"`__index__` method exists, or the call to :meth:`__index__` raises :exc:"
"`TypeError`, then the :meth:`__int__` method is tried.  However, the use of :"
"meth:`__int__` is deprecated, and will raise :exc:`DeprecationWarning`."
msgstr ""

#: ../Doc/library/struct.rst:239
msgid ""
"For the ``'f'`` and ``'d'`` conversion codes, the packed representation uses "
"the IEEE 754 binary32 (for ``'f'``) or binary64 (for ``'d'``) format, "
"regardless of the floating-point format used by the platform."
msgstr ""

#: ../Doc/library/struct.rst:244
msgid ""
"The ``'P'`` format character is only available for the native byte ordering "
"(selected as the default or with the ``'@'`` byte order character). The byte "
"order character ``'='`` chooses to use little- or big-endian ordering based "
"on the host system. The struct module does not interpret this as native "
"ordering, so the ``'P'`` format is not available."
msgstr ""

#: ../Doc/library/struct.rst:251
msgid ""
"A format character may be preceded by an integral repeat count.  For "
"example, the format string ``'4h'`` means exactly the same as ``'hhhh'``."
msgstr ""

#: ../Doc/library/struct.rst:254
msgid ""
"Whitespace characters between formats are ignored; a count and its format "
"must not contain whitespace though."
msgstr ""

# ea1c75d5ac80484e9e99c70812f8ed47
#: ../Doc/library/struct.rst:257
msgid ""
"For the ``'s'`` format character, the count is interpreted as the size of "
"the string, not a repeat count like for the other format characters; for "
"example, ``'10s'`` means a single 10-byte string, while ``'10c'`` means 10 "
"characters. If a count is not given, it defaults to 1.  For packing, the "
"string is truncated or padded with null bytes as appropriate to make it fit. "
"For unpacking, the resulting string always has exactly the specified number "
"of bytes.  As a special case, ``'0s'`` means a single, empty string (while "
"``'0c'`` means 0 characters)."
msgstr ""

# c71997113d084466a17b0dcac63f4f51
#: ../Doc/library/struct.rst:266
msgid ""
"The ``'p'`` format character encodes a \"Pascal string\", meaning a short "
"variable-length string stored in a *fixed number of bytes*, given by the "
"count. The first byte stored is the length of the string, or 255, whichever "
"is smaller. The bytes of the string follow.  If the string passed in to :"
"func:`pack` is too long (longer than the count minus 1), only the leading "
"``count-1`` bytes of the string are stored.  If the string is shorter than "
"``count-1``, it is padded with null bytes so that exactly count bytes in all "
"are used.  Note that for :func:`unpack`, the ``'p'`` format character "
"consumes count bytes, but that the string returned can never contain more "
"than 255 characters."
msgstr ""

# 621eb4517bba49a6afc94fa6cd1e2ca9
#: ../Doc/library/struct.rst:276
msgid ""
"For the ``'P'`` format character, the return value is a Python integer or "
"long integer, depending on the size needed to hold a pointer when it has "
"been cast to an integer type.  A *NULL* pointer will always be returned as "
"the Python integer ``0``. When packing pointer-sized values, Python integer "
"or long integer objects may be used.  For example, the Alpha and Merced "
"processors use 64-bit pointer values, meaning a Python long integer will be "
"used to hold the pointer; other platforms use 32-bit pointers and will use a "
"Python integer."
msgstr ""

#: ../Doc/library/struct.rst:284
msgid ""
"For the ``'?'`` format character, the return value is either :const:`True` "
"or :const:`False`. When packing, the truth value of the argument object is "
"used. Either 0 or 1 in the native or standard bool representation will be "
"packed, and any non-zero value will be True when unpacking."
msgstr ""

#: ../Doc/library/struct.rst:297
msgid ""
"All examples assume a native byte order, size, and alignment with a big-"
"endian machine."
msgstr ""

#: ../Doc/library/struct.rst:300
msgid "A basic example of packing/unpacking three integers::"
msgstr ""

#: ../Doc/library/struct.rst:310
msgid ""
"Unpacked fields can be named by assigning them to variables or by wrapping "
"the result in a named tuple::"
msgstr ""

#: ../Doc/library/struct.rst:321
msgid ""
"The ordering of format characters may have an impact on size since the "
"padding needed to satisfy alignment requirements is different::"
msgstr ""

#: ../Doc/library/struct.rst:333
msgid ""
"The following format ``'llh0l'`` specifies two pad bytes at the end, "
"assuming longs are aligned on 4-byte boundaries::"
msgstr ""

#: ../Doc/library/struct.rst:339
msgid ""
"This only works when native size and alignment are in effect; standard size "
"and alignment does not enforce any alignment."
msgstr ""

#: ../Doc/library/struct.rst:346
msgid "Packed binary storage of homogeneous data."
msgstr ""

#: ../Doc/library/struct.rst:349
msgid "Packing and unpacking of XDR data."
msgstr ""

#: ../Doc/library/struct.rst:355
msgid "Classes"
msgstr ""

#: ../Doc/library/struct.rst:357
msgid "The :mod:`struct` module also defines the following type:"
msgstr ""

#: ../Doc/library/struct.rst:362
msgid ""
"Return a new Struct object which writes and reads binary data according to "
"the format string *format*.  Creating a Struct object once and calling its "
"methods is more efficient than calling the :mod:`struct` functions with the "
"same format since the format string only needs to be compiled once."
msgstr ""

#: ../Doc/library/struct.rst:369
msgid "Compiled Struct objects support the following methods and attributes:"
msgstr ""

#: ../Doc/library/struct.rst:374
msgid ""
"Identical to the :func:`pack` function, using the compiled format. (``len"
"(result)`` will equal :attr:`self.size`.)"
msgstr ""

#: ../Doc/library/struct.rst:380
msgid "Identical to the :func:`pack_into` function, using the compiled format."
msgstr ""

# 1aac00ad7fbf45158b9298f12f087530
#: ../Doc/library/struct.rst:385
msgid ""
"Identical to the :func:`unpack` function, using the compiled format. (``len"
"(string)`` must equal :attr:`self.size`)."
msgstr ""

#: ../Doc/library/struct.rst:391
msgid ""
"Identical to the :func:`unpack_from` function, using the compiled format. "
"(``len(buffer[offset:])`` must be at least :attr:`self.size`)."
msgstr ""

#: ../Doc/library/struct.rst:397
msgid "The format string used to construct this Struct object."
msgstr ""

# 02d3792f59f442c29ba8fe396bd555a9
#: ../Doc/library/struct.rst:401
msgid ""
"The calculated size of the struct (and hence of the string) corresponding "
"to :attr:`format`."
msgstr ""

#: ../Doc/library/subprocess.rst:3
msgid ":mod:`subprocess` --- Subprocess management"
msgstr ""

#: ../Doc/library/subprocess.rst:13
msgid ""
"The :mod:`subprocess` module allows you to spawn new processes, connect to "
"their input/output/error pipes, and obtain their return codes.  This module "
"intends to replace several other, older modules and functions, such as::"
msgstr ""

#: ../Doc/library/subprocess.rst:23
msgid ""
"Information about how the :mod:`subprocess` module can be used to replace "
"these modules and functions can be found in the following sections."
msgstr ""

#: ../Doc/library/subprocess.rst:28
msgid ":pep:`324` -- PEP proposing the subprocess module"
msgstr ""

#: ../Doc/library/subprocess.rst:32
msgid "Using the subprocess Module"
msgstr ""

# a0f4b3c7e4b245658ba7451b0a097698
#: ../Doc/library/subprocess.rst:34
msgid ""
"The recommended approach to invoking subprocesses is to use the following "
"convenience functions for all use cases they can handle. For more advanced "
"use cases, the underlying :class:`Popen` interface can be used directly."
msgstr ""

# 9b757de2fdeb4ca7b30b8faaae30807d
#: ../Doc/library/subprocess.rst:41
msgid ""
"Run the command described by *args*.  Wait for command to complete, then "
"return the :attr:`returncode` attribute."
msgstr ""

# 01f8417006a44806a16aebc3dda6dc80
# 490cfaa9b5254f5b8a74d1861fa5f1d5
#: ../Doc/library/subprocess.rst:44 ../Doc/library/subprocess.rst:79
msgid ""
"The arguments shown above are merely the most common ones, described below "
"in :ref:`frequently-used-arguments` (hence the slightly odd notation in the "
"abbreviated signature). The full function signature is the same as that of "
"the :class:`Popen` constructor - this functions passes all supplied "
"arguments directly through to that interface."
msgstr ""

# e36b41e6d26d4677997a4ac59c2e915f
# 1a77e5fb03e44503bcdca180abeda4f1
# 16a217d3ce8e46b3972fc0d7bf247a7c
#: ../Doc/library/subprocess.rst:60 ../Doc/library/subprocess.rst:99
#: ../Doc/library/subprocess.rst:150
msgid ""
"Invoking the system shell with ``shell=True`` can be a security hazard if "
"combined with untrusted input. See the warning under :ref:`frequently-used-"
"arguments` for details."
msgstr ""

# cca9635c77c04713ba49d5df3ff26e80
# beef40833cb34e4a813741b7045e94df
#: ../Doc/library/subprocess.rst:66 ../Doc/library/subprocess.rst:105
msgid ""
"Do not use ``stdout=PIPE`` or ``stderr=PIPE`` with this function. As the "
"pipes are not being read in the current process, the child process may block "
"if it generates enough output to a pipe to fill up the OS pipe buffer."
msgstr ""

# 4b1f4ed3c94346a795b102940929d00b
#: ../Doc/library/subprocess.rst:74
msgid ""
"Run command with arguments.  Wait for command to complete. If the return "
"code was zero then return, otherwise raise :exc:`CalledProcessError`. The :"
"exc:`CalledProcessError` object will have the return code in the :attr:"
"`returncode` attribute."
msgstr ""

#: ../Doc/library/subprocess.rst:113
msgid "Run command with arguments and return its output as a byte string."
msgstr ""

# d86caadc0f5e4afb94257adb8895ec66
#: ../Doc/library/subprocess.rst:115
msgid ""
"If the return code was non-zero it raises a :exc:`CalledProcessError`. The :"
"exc:`CalledProcessError` object will have the return code in the :attr:"
"`returncode` attribute and any output in the :attr:`output` attribute."
msgstr ""

# 1aedfc885165457585374ee1aa3783ad
#: ../Doc/library/subprocess.rst:120
msgid ""
"The arguments shown above are merely the most common ones, described below "
"in :ref:`frequently-used-arguments` (hence the slightly odd notation in the "
"abbreviated signature). The full function signature is largely the same as "
"that of the :class:`Popen` constructor, except that *stdout* is not "
"permitted as it is used internally. All other supplied arguments are passed "
"directly through to the :class:`Popen` constructor."
msgstr ""

# 4964c3c007854b47b5c9a9f0fc2a3fa6
#: ../Doc/library/subprocess.rst:137
msgid ""
"To also capture standard error in the result, use ``stderr=subprocess."
"STDOUT``::"
msgstr ""

# d309e9b244c04bc48445a15e63528660
#: ../Doc/library/subprocess.rst:156
msgid ""
"Do not use ``stderr=PIPE`` with this function. As the pipe is not being read "
"in the current process, the child process may block if it generates enough "
"output to the pipe to fill up the OS pipe buffer."
msgstr ""

#: ../Doc/library/subprocess.rst:163
msgid ""
"Special value that can be used as the *stdin*, *stdout* or *stderr* argument "
"to :class:`Popen` and indicates that a pipe to the standard stream should be "
"opened."
msgstr ""

#: ../Doc/library/subprocess.rst:170
msgid ""
"Special value that can be used as the *stderr* argument to :class:`Popen` "
"and indicates that standard error should go into the same handle as standard "
"output."
msgstr ""

# 1d78d0a7b01a427b8165a1ea0aeb742c
#: ../Doc/library/subprocess.rst:177
msgid ""
"Exception raised when a process run by :func:`check_call` or :func:"
"`check_output` returns a non-zero exit status."
msgstr ""

# 1b791ef40bd54bb5bee61915e8650fc3
#: ../Doc/library/subprocess.rst:182
msgid "Exit status of the child process."
msgstr ""

# efb84b84515c43c483696e005ca27631
#: ../Doc/library/subprocess.rst:186
msgid "Command that was used to spawn the child process."
msgstr ""

# 1b737fd1fc9947adac928b64b6e42109
#: ../Doc/library/subprocess.rst:190
msgid ""
"Output of the child process if this exception is raised by :func:"
"`check_output`.  Otherwise, ``None``."
msgstr ""

# c134105f40144a0db0222b6cce868c5d
#: ../Doc/library/subprocess.rst:198
msgid "Frequently Used Arguments"
msgstr ""

# 2212b7ee698a48fa94c0a231edfa19ea
#: ../Doc/library/subprocess.rst:200
msgid ""
"To support a wide variety of use cases, the :class:`Popen` constructor (and "
"the convenience functions) accept a large number of optional arguments. For "
"most typical use cases, many of these arguments can be safely left at their "
"default values. The arguments that are most commonly needed are:"
msgstr ""

# c48d3ea3bd124a02b4e98781c556cf2b
#: ../Doc/library/subprocess.rst:205
msgid ""
"*args* is required for all calls and should be a string, or a sequence of "
"program arguments. Providing a sequence of arguments is generally preferred, "
"as it allows the module to take care of any required escaping and quoting of "
"arguments (e.g. to permit spaces in file names). If passing a single string, "
"either *shell* must be :const:`True` (see below) or else the string must "
"simply name the program to be executed without specifying any arguments."
msgstr ""

# 3ddfae2596214ca58b52788a0bbaa087
# 7e971dbfb88949ebae35bfd79bb17c98
#: ../Doc/library/subprocess.rst:213 ../Doc/library/subprocess.rst:342
msgid ""
"*stdin*, *stdout* and *stderr* specify the executed program's standard "
"input, standard output and standard error file handles, respectively.  Valid "
"values are :data:`PIPE`, an existing file descriptor (a positive integer), "
"an existing file object, and ``None``.  :data:`PIPE` indicates that a new "
"pipe to the child should be created.  With the default settings of ``None``, "
"no redirection will occur; the child's file handles will be inherited from "
"the parent.  Additionally, *stderr* can be :data:`STDOUT`, which indicates "
"that the stderr data from the child process should be captured into the same "
"file handle as for stdout."
msgstr ""

# 40dd3207db4746498d040a707908540e
#: ../Doc/library/subprocess.rst:226
msgid ""
"When *stdout* or *stderr* are pipes and *universal_newlines* is ``True`` "
"then all line endings will be converted to ``'\\n'`` as described for the :"
"term:`universal newlines` `'U'`` mode argument to :func:`open`."
msgstr ""

# 2b9e81e4cb3247c1971128cd31561389
#: ../Doc/library/subprocess.rst:230
msgid ""
"If *shell* is :const:`True`, the specified command will be executed through "
"the shell. This can be useful if you are using Python primarily for the "
"enhanced control flow it offers over most system shells and still want "
"access to other shell features such as filename wildcards, shell pipes and "
"environment variable expansion."
msgstr ""

# 16a06d4986fc4120abaf79dc52c994e2
#: ../Doc/library/subprocess.rst:238
msgid ""
"Executing shell commands that incorporate unsanitized input from an "
"untrusted source makes a program vulnerable to `shell injection <http://en."
"wikipedia.org/wiki/Shell_injection#Shell_injection>`_, a serious security "
"flaw which can result in arbitrary command execution. For this reason, the "
"use of *shell=True* is **strongly discouraged** in cases where the command "
"string is constructed from external input::"
msgstr ""

# 73fe08b5c22e4d73bf69575afcb5ea39
#: ../Doc/library/subprocess.rst:251
msgid ""
"``shell=False`` disables all shell based features, but does not suffer from "
"this vulnerability; see the Note in the :class:`Popen` constructor "
"documentation for helpful hints in getting ``shell=False`` to work."
msgstr ""

# f6abfb7ac24a4893b6194f6ef7d64ee1
#: ../Doc/library/subprocess.rst:255
msgid ""
"These options, along with all of the other options, are described in more "
"detail in the :class:`Popen` constructor documentation."
msgstr ""

# acf38369eadf455391261f842f1b6a26
#: ../Doc/library/subprocess.rst:260
msgid "Popen Constructor"
msgstr ""

# 5490b1aeadd74beba26be1147c343783
#: ../Doc/library/subprocess.rst:262
msgid ""
"The underlying process creation and management in this module is handled by "
"the :class:`Popen` class. It offers a lot of flexibility so that developers "
"are able to handle the less common cases not covered by the convenience "
"functions."
msgstr ""

#: ../Doc/library/subprocess.rst:270
msgid "Arguments are:"
msgstr ""

#: ../Doc/library/subprocess.rst:272
msgid ""
"*args* should be a string, or a sequence of program arguments.  The program "
"to execute is normally the first item in the args sequence or the string if "
"a string is given, but can be explicitly set by using the *executable* "
"argument.  When *executable* is given, the first item in the args sequence "
"is still treated by most programs as the command name, which can then be "
"different from the actual executable name.  On Unix, it becomes the display "
"name for the executing program in utilities such as :program:`ps`."
msgstr ""

# 5a6300b8de654ac6a6fce699b9705a78
#: ../Doc/library/subprocess.rst:280
msgid ""
"On Unix, with *shell=False* (default): In this case, the Popen class uses :"
"meth:`os.execvp` to execute the child program. *args* should normally be a "
"sequence.  If a string is specified for *args*, it will be used as the name "
"or path of the program to execute; this will only work if the program is "
"being given no arguments."
msgstr ""

#: ../Doc/library/subprocess.rst:288
msgid ""
":meth:`shlex.split` can be useful when determining the correct tokenization "
"for *args*, especially in complex cases::"
msgstr ""

#: ../Doc/library/subprocess.rst:299
msgid ""
"Note in particular that options (such as *-input*) and arguments (such as "
"*eggs.txt*) that are separated by whitespace in the shell go in separate "
"list elements, while arguments that need quoting or backslash escaping when "
"used in the shell (such as filenames containing spaces or the *echo* command "
"shown above) are single list elements."
msgstr ""

#: ../Doc/library/subprocess.rst:305
msgid ""
"On Unix, with *shell=True*: If args is a string, it specifies the command "
"string to execute through the shell.  This means that the string must be "
"formatted exactly as it would be when typed at the shell prompt.  This "
"includes, for example, quoting or backslash escaping filenames with spaces "
"in them.  If *args* is a sequence, the first item specifies the command "
"string, and any additional items will be treated as additional arguments to "
"the shell itself.  That is to say, *Popen* does the equivalent of::"
msgstr ""

# 34544f02c96c47a794ee91e732e93c30
#: ../Doc/library/subprocess.rst:315
msgid ""
"On Windows: the :class:`Popen` class uses CreateProcess() to execute the "
"child program, which operates on strings.  If *args* is a sequence, it will "
"be converted to a string in a manner described in :ref:`converting-argument-"
"sequence`."
msgstr ""

#: ../Doc/library/subprocess.rst:320
msgid ""
"*bufsize*, if given, has the same meaning as the corresponding argument to "
"the built-in open() function: :const:`0` means unbuffered, :const:`1` means "
"line buffered, any other positive value means use a buffer of "
"(approximately) that size.  A negative *bufsize* means to use the system "
"default, which usually means fully buffered.  The default value for "
"*bufsize* is :const:`0` (unbuffered)."
msgstr ""

#: ../Doc/library/subprocess.rst:328
msgid ""
"If you experience performance issues, it is recommended that you try to "
"enable buffering by setting *bufsize* to either -1 or a large enough "
"positive value (such as 4096)."
msgstr ""

#: ../Doc/library/subprocess.rst:332
msgid ""
"The *executable* argument specifies the program to execute. It is very "
"seldom needed: Usually, the program to execute is defined by the *args* "
"argument. If ``shell=True``, the *executable* argument specifies which shell "
"to use. On Unix, the default shell is :file:`/bin/sh`.  On Windows, the "
"default shell is specified by the :envvar:`COMSPEC` environment variable. "
"The only reason you would need to specify ``shell=True`` on Windows is where "
"the command you wish to execute is actually built in to the shell, eg "
"``dir``, ``copy``. You don't need ``shell=True`` to run a batch file, nor to "
"run a console-based executable."
msgstr ""

#: ../Doc/library/subprocess.rst:352
msgid ""
"If *preexec_fn* is set to a callable object, this object will be called in "
"the child process just before the child is executed. (Unix only)"
msgstr ""

#: ../Doc/library/subprocess.rst:355
msgid ""
"If *close_fds* is true, all file descriptors except :const:`0`, :const:`1` "
"and :const:`2` will be closed before the child process is executed. (Unix "
"only). Or, on Windows, if *close_fds* is true then no handles will be "
"inherited by the child process.  Note that on Windows, you cannot set "
"*close_fds* to true and also redirect the standard handles by setting "
"*stdin*, *stdout* or *stderr*."
msgstr ""

#: ../Doc/library/subprocess.rst:361
msgid ""
"If *shell* is :const:`True`, the specified command will be executed through "
"the shell."
msgstr ""

# 530d6c2ea6614789b709dfa008fd60c2
#: ../Doc/library/subprocess.rst:366
msgid ""
"Enabling this option can be a security hazard if combined with untrusted "
"input. See the warning under :ref:`frequently-used-arguments` for details."
msgstr ""

#: ../Doc/library/subprocess.rst:370
msgid ""
"If *cwd* is not ``None``, the child's current directory will be changed to "
"*cwd* before it is executed.  Note that this directory is not considered "
"when searching the executable, so you can't specify the program's path "
"relative to *cwd*."
msgstr ""

# b71e87dddd8f4086be3bc10b9eaf8da5
#: ../Doc/library/subprocess.rst:375
msgid ""
"If *env* is not ``None``, it must be a mapping that defines the environment "
"variables for the new process; these are used instead of inheriting the "
"current process' environment, which is the default behavior."
msgstr ""

#: ../Doc/library/subprocess.rst:381
msgid ""
"If specified, *env* must provide any variables required for the program to "
"execute.  On Windows, in order to run a `side-by-side assembly`_ the "
"specified *env* **must** include a valid :envvar:`SystemRoot`."
msgstr ""

# f5f17c4742d9424b83341a5738374b84
#: ../Doc/library/subprocess.rst:388
msgid ""
"If *universal_newlines* is ``True``, the file objects *stdout* and *stderr* "
"are opened as text files in :term:`universal newlines` mode.  Lines may be "
"terminated by any of ``'\\n'``, the Unix end-of-line convention, ``'\\r'``, "
"the old Macintosh convention or ``'\\r\\n'``, the Windows convention. All of "
"these external representations are seen as ``'\\n'`` by the Python program."
msgstr ""

# 2424be8b58694b42893329f5d7bcc356
#: ../Doc/library/subprocess.rst:396
msgid ""
"This feature is only available if Python is built with universal newline "
"support (the default).  Also, the newlines attribute of the file objects :"
"attr:`stdout`, :attr:`stdin` and :attr:`stderr` are not updated by the "
"communicate() method."
msgstr ""

# 8ba35c0e74e44d7b98e698ca02168dd0
#: ../Doc/library/subprocess.rst:401
msgid ""
"If given, *startupinfo* will be a :class:`STARTUPINFO` object, which is "
"passed to the underlying ``CreateProcess`` function. *creationflags*, if "
"given, can be :data:`CREATE_NEW_CONSOLE` or :data:"
"`CREATE_NEW_PROCESS_GROUP`. (Windows only)"
msgstr ""

# bd0469b6d6ed4bf88307e334a648a394
#: ../Doc/library/subprocess.rst:410
msgid ""
"Exceptions raised in the child process, before the new program has started "
"to execute, will be re-raised in the parent.  Additionally, the exception "
"object will have one extra attribute called :attr:`child_traceback`, which "
"is a string containing traceback information from the child's point of view."
msgstr ""

#: ../Doc/library/subprocess.rst:415
msgid ""
"The most common exception raised is :exc:`OSError`.  This occurs, for "
"example, when trying to execute a non-existent file.  Applications should "
"prepare for :exc:`OSError` exceptions."
msgstr ""

#: ../Doc/library/subprocess.rst:419
msgid ""
"A :exc:`ValueError` will be raised if :class:`Popen` is called with invalid "
"arguments."
msgstr ""

# eec948671f7c41188c14172c7b974409
#: ../Doc/library/subprocess.rst:422
msgid ""
":func:`check_call` and :func:`check_output` will raise :exc:"
"`CalledProcessError` if the called process returns a non-zero return code."
msgstr ""

#: ../Doc/library/subprocess.rst:428
msgid "Security"
msgstr ""

# 97f8f9ee77a046fc84322a309a9bf5e4
#: ../Doc/library/subprocess.rst:430
msgid ""
"Unlike some other popen functions, this implementation will never call a "
"system shell implicitly.  This means that all characters, including shell "
"metacharacters, can safely be passed to child processes. Obviously, if the "
"shell is invoked explicitly, then it is the application's responsibility to "
"ensure that all whitespace and metacharacters are quoted appropriately."
msgstr ""

#: ../Doc/library/subprocess.rst:438
msgid "Popen Objects"
msgstr ""

#: ../Doc/library/subprocess.rst:440
msgid "Instances of the :class:`Popen` class have the following methods:"
msgstr ""

#: ../Doc/library/subprocess.rst:445
msgid ""
"Check if child process has terminated.  Set and return :attr:`returncode` "
"attribute."
msgstr ""

#: ../Doc/library/subprocess.rst:451
msgid ""
"Wait for child process to terminate.  Set and return :attr:`returncode` "
"attribute."
msgstr ""

#: ../Doc/library/subprocess.rst:456
msgid ""
"This will deadlock when using ``stdout=PIPE`` and/or ``stderr=PIPE`` and the "
"child process generates enough output to a pipe such that it blocks waiting "
"for the OS pipe buffer to accept more data.  Use :meth:`communicate` to "
"avoid that."
msgstr ""

# 87ecbf356d1a4931baf22aa66383b737
#: ../Doc/library/subprocess.rst:464
msgid ""
"Interact with process: Send data to stdin.  Read data from stdout and "
"stderr, until end-of-file is reached.  Wait for process to terminate. The "
"optional *input* argument should be a string to be sent to the child "
"process, or ``None``, if no data should be sent to the child."
msgstr ""

#: ../Doc/library/subprocess.rst:469
msgid ":meth:`communicate` returns a tuple ``(stdoutdata, stderrdata)``."
msgstr ""

#: ../Doc/library/subprocess.rst:471
msgid ""
"Note that if you want to send data to the process's stdin, you need to "
"create the Popen object with ``stdin=PIPE``.  Similarly, to get anything "
"other than ``None`` in the result tuple, you need to give ``stdout=PIPE`` "
"and/or ``stderr=PIPE`` too."
msgstr ""

#: ../Doc/library/subprocess.rst:478
msgid ""
"The data read is buffered in memory, so do not use this method if the data "
"size is large or unlimited."
msgstr ""

#: ../Doc/library/subprocess.rst:484
msgid "Sends the signal *signal* to the child."
msgstr ""

# 0fd7127d59914f4c913b01e7a072734c
#: ../Doc/library/subprocess.rst:488
msgid ""
"On Windows, SIGTERM is an alias for :meth:`terminate`. CTRL_C_EVENT and "
"CTRL_BREAK_EVENT can be sent to processes started with a *creationflags* "
"parameter which includes `CREATE_NEW_PROCESS_GROUP`."
msgstr ""

# 20d3efb742424962a31ce095e1d5e75a
#: ../Doc/library/subprocess.rst:497
msgid ""
"Stop the child. On Posix OSs the method sends SIGTERM to the child. On "
"Windows the Win32 API function :c:func:`TerminateProcess` is called to stop "
"the child."
msgstr ""

#: ../Doc/library/subprocess.rst:506
msgid ""
"Kills the child. On Posix OSs the function sends SIGKILL to the child. On "
"Windows :meth:`kill` is an alias for :meth:`terminate`."
msgstr ""

# 995d3d88f10e460581ec79a165bf08dd
#: ../Doc/library/subprocess.rst:516
msgid ""
"Use :meth:`~Popen.communicate` rather than :attr:`.stdin.write <Popen."
"stdin>`, :attr:`.stdout.read <Popen.stdout>` or :attr:`.stderr.read <Popen."
"stderr>` to avoid deadlocks due to any of the other OS pipe buffers filling "
"up and blocking the child process."
msgstr ""

#: ../Doc/library/subprocess.rst:524
msgid ""
"If the *stdin* argument was :data:`PIPE`, this attribute is a file object "
"that provides input to the child process.  Otherwise, it is ``None``."
msgstr ""

#: ../Doc/library/subprocess.rst:530
msgid ""
"If the *stdout* argument was :data:`PIPE`, this attribute is a file object "
"that provides output from the child process.  Otherwise, it is ``None``."
msgstr ""

#: ../Doc/library/subprocess.rst:536
msgid ""
"If the *stderr* argument was :data:`PIPE`, this attribute is a file object "
"that provides error output from the child process.  Otherwise, it is "
"``None``."
msgstr ""

#: ../Doc/library/subprocess.rst:545
msgid ""
"Note that if you set the *shell* argument to ``True``, this is the process "
"ID of the spawned shell."
msgstr ""

#: ../Doc/library/subprocess.rst:551
msgid ""
"The child return code, set by :meth:`poll` and :meth:`wait` (and indirectly "
"by :meth:`communicate`).  A ``None`` value indicates that the process hasn't "
"terminated yet."
msgstr ""

#: ../Doc/library/subprocess.rst:555
msgid ""
"A negative value ``-N`` indicates that the child was terminated by signal "
"``N`` (Unix only)."
msgstr ""

# ca89fc8d405b4907b6024749723d917d
#: ../Doc/library/subprocess.rst:560
msgid "Windows Popen Helpers"
msgstr ""

# cb8eda1085b04ac8905804270e28ef33
#: ../Doc/library/subprocess.rst:562
msgid ""
"The :class:`STARTUPINFO` class and following constants are only available on "
"Windows."
msgstr ""

# 86592e9e701a44d3968d44bdf02af9a2
#: ../Doc/library/subprocess.rst:567
msgid ""
"Partial support of the Windows `STARTUPINFO <http://msdn.microsoft.com/en-us/"
"library/ms686331(v=vs.85).aspx>`__ structure is used for :class:`Popen` "
"creation."
msgstr ""

# 9d72326ec5a3486d9269095ecaeb8778
#: ../Doc/library/subprocess.rst:573
msgid ""
"A bit field that determines whether certain :class:`STARTUPINFO` attributes "
"are used when the process creates a window. ::"
msgstr ""

# 99b6238577bc4420889827dcc8793fb4
#: ../Doc/library/subprocess.rst:581
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is "
"the standard input handle for the process. If :data:`STARTF_USESTDHANDLES` "
"is not specified, the default for standard input is the keyboard buffer."
msgstr ""

# 6d5c68e82fc54f13a945452827216213
#: ../Doc/library/subprocess.rst:588
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is "
"the standard output handle for the process. Otherwise, this attribute is "
"ignored and the default for standard output is the console window's buffer."
msgstr ""

# ccd897dcb029400fa6b1300cdbc19e85
#: ../Doc/library/subprocess.rst:595
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is "
"the standard error handle for the process. Otherwise, this attribute is "
"ignored and the default for standard error is the console window's buffer."
msgstr ""

# e0a212bd879f42ca8682e4fd7657c926
#: ../Doc/library/subprocess.rst:601
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESHOWWINDOW`, this attribute "
"can be any of the values that can be specified in the ``nCmdShow`` parameter "
"for the `ShowWindow <http://msdn.microsoft.com/en-us/library/ms633548"
"(v=vs.85).aspx>`__ function, except for ``SW_SHOWDEFAULT``. Otherwise, this "
"attribute is ignored."
msgstr ""

# 4df4e5f3be78425395e800ba7c571bbb
#: ../Doc/library/subprocess.rst:608
msgid ""
":data:`SW_HIDE` is provided for this attribute. It is used when :class:"
"`Popen` is called with ``shell=True``."
msgstr ""

# 5aa57bb405824cdaaaee8b83f9f3787c
#: ../Doc/library/subprocess.rst:615
msgid "The :mod:`subprocess` module exposes the following constants."
msgstr ""

# 11985fdffc6c49b9a6e27b31e18aa99a
#: ../Doc/library/subprocess.rst:619
msgid ""
"The standard input device. Initially, this is the console input buffer, "
"``CONIN$``."
msgstr ""

# b772c49bbeaf4720b11c8b0de0265522
#: ../Doc/library/subprocess.rst:624
msgid ""
"The standard output device. Initially, this is the active console screen "
"buffer, ``CONOUT$``."
msgstr ""

# 5bc740b7f8c942eda307ef677f08849b
#: ../Doc/library/subprocess.rst:629
msgid ""
"The standard error device. Initially, this is the active console screen "
"buffer, ``CONOUT$``."
msgstr ""

# 521ed433b18c49b398beb1c0919918ed
#: ../Doc/library/subprocess.rst:634
msgid "Hides the window. Another window will be activated."
msgstr ""

# c4434cfdbac14e20b7a56f9560bb5c67
#: ../Doc/library/subprocess.rst:638
msgid ""
"Specifies that the :attr:`STARTUPINFO.hStdInput`, :attr:`STARTUPINFO."
"hStdOutput`, and :attr:`STARTUPINFO.hStdError` attributes contain additional "
"information."
msgstr ""

# 4f2f7539bdea4476818d372ee482ac83
#: ../Doc/library/subprocess.rst:644
msgid ""
"Specifies that the :attr:`STARTUPINFO.wShowWindow` attribute contains "
"additional information."
msgstr ""

# 5d74fce497d1422eace599030d24b660
#: ../Doc/library/subprocess.rst:649
msgid ""
"The new process has a new console, instead of inheriting its parent's "
"console (the default)."
msgstr ""

# 6644fb82819b4554b710850f43eb7fce
#: ../Doc/library/subprocess.rst:652
msgid ""
"This flag is always set when :class:`Popen` is created with ``shell=True``."
msgstr ""

# 0920161e3a1b4b0da29f161ab74d0de7
#: ../Doc/library/subprocess.rst:656
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"group will be created. This flag is necessary for using :func:`os.kill` on "
"the subprocess."
msgstr ""

# 42aa52173bb54634bd82f88cb4839054
#: ../Doc/library/subprocess.rst:660
msgid "This flag is ignored if :data:`CREATE_NEW_CONSOLE` is specified."
msgstr ""

#: ../Doc/library/subprocess.rst:666
msgid "Replacing Older Functions with the subprocess Module"
msgstr ""

# afdf6ec9f1b84e1d82b749eae11de43d
#: ../Doc/library/subprocess.rst:668
msgid ""
"In this section, \"a becomes b\" means that b can be used as a replacement "
"for a."
msgstr ""

# ce2755d86fa64be7906c74c864ccb243
#: ../Doc/library/subprocess.rst:672
msgid ""
"All \"a\" functions in this section fail (more or less) silently if the "
"executed program cannot be found; the \"b\" replacements raise :exc:"
"`OSError` instead."
msgstr ""

# 10cf18d3b5334f2bbbd57b10fb7edb3e
#: ../Doc/library/subprocess.rst:676
msgid ""
"In addition, the replacements using :func:`check_output` will fail with a :"
"exc:`CalledProcessError` if the requested operation produces a non-zero "
"return code. The output is still available as the ``output`` attribute of "
"the raised exception."
msgstr ""

# 25d0ef921be7495f81a77e0bd1866bed
#: ../Doc/library/subprocess.rst:681
msgid ""
"In the following examples, we assume that the relevant functions have "
"already been imported from the subprocess module."
msgstr ""

#: ../Doc/library/subprocess.rst:686
msgid "Replacing /bin/sh shell backquote"
msgstr ""

#: ../Doc/library/subprocess.rst:696
msgid "Replacing shell pipeline"
msgstr ""

# 1091b7d3171e46b3b59f3c1d26fb0cfc
#: ../Doc/library/subprocess.rst:707
msgid ""
"The p1.stdout.close() call after starting the p2 is important in order for "
"p1 to receive a SIGPIPE if p2 exits before p1."
msgstr ""

# 5fe7f02557d24ef19c26c5b9ec6a287d
#: ../Doc/library/subprocess.rst:710
msgid ""
"Alternatively, for trusted input, the shell's own pipeline support may still "
"be used directly::"
msgstr ""

#: ../Doc/library/subprocess.rst:719
msgid "Replacing :func:`os.system`"
msgstr ""

#: ../Doc/library/subprocess.rst:729
msgid "Calling the program through the shell is usually not required."
msgstr ""

#: ../Doc/library/subprocess.rst:731
msgid "A more realistic example would look like this::"
msgstr ""

#: ../Doc/library/subprocess.rst:744
msgid "Replacing the :func:`os.spawn <os.spawnl>` family"
msgstr ""

#: ../Doc/library/subprocess.rst:746
msgid "P_NOWAIT example::"
msgstr ""

#: ../Doc/library/subprocess.rst:752
msgid "P_WAIT example::"
msgstr ""

#: ../Doc/library/subprocess.rst:758
msgid "Vector example::"
msgstr ""

#: ../Doc/library/subprocess.rst:764
msgid "Environment example::"
msgstr ""

#: ../Doc/library/subprocess.rst:772
msgid "Replacing :func:`os.popen`, :func:`os.popen2`, :func:`os.popen3`"
msgstr ""

# 4e8e5579d3f945b5a5347a9f8bb8281c
#: ../Doc/library/subprocess.rst:815
msgid ""
"On Unix, os.popen2, os.popen3 and os.popen4 also accept a sequence as the "
"command to execute, in which case arguments will be passed directly to the "
"program without shell intervention.  This usage can be replaced as follows::"
msgstr ""

#: ../Doc/library/subprocess.rst:826
msgid "Return code handling translates as follows::"
msgstr ""

#: ../Doc/library/subprocess.rst:842
msgid "Replacing functions from the :mod:`popen2` module"
msgstr ""

# d3420dc9dcfa462ea99f8aa82dccbb8e
#: ../Doc/library/subprocess.rst:852
msgid ""
"On Unix, popen2 also accepts a sequence as the command to execute, in which "
"case arguments will be passed directly to the program without shell "
"intervention.  This usage can be replaced as follows::"
msgstr ""

#: ../Doc/library/subprocess.rst:863
msgid ""
":class:`popen2.Popen3` and :class:`popen2.Popen4` basically work as :class:"
"`subprocess.Popen`, except that:"
msgstr ""

#: ../Doc/library/subprocess.rst:866
msgid ":class:`Popen` raises an exception if the execution fails."
msgstr ""

#: ../Doc/library/subprocess.rst:868
msgid "the *capturestderr* argument is replaced with the *stderr* argument."
msgstr ""

#: ../Doc/library/subprocess.rst:870
msgid "``stdin=PIPE`` and ``stdout=PIPE`` must be specified."
msgstr ""

#: ../Doc/library/subprocess.rst:872
msgid ""
"popen2 closes all file descriptors by default, but you have to specify "
"``close_fds=True`` with :class:`Popen`."
msgstr ""

# 72836c9402884de8afcad356014f2bd8
#: ../Doc/library/subprocess.rst:882
msgid "Converting an argument sequence to a string on Windows"
msgstr ""

# e4adc7dad2794df3bdfd480b07fdc12d
#: ../Doc/library/subprocess.rst:884
msgid ""
"On Windows, an *args* sequence is converted to a string that can be parsed "
"using the following rules (which correspond to the rules used by the MS C "
"runtime):"
msgstr ""

# d25ba06141f74684910cf3705da8f8d6
#: ../Doc/library/subprocess.rst:888
msgid ""
"Arguments are delimited by white space, which is either a space or a tab."
msgstr ""

# b8fe661f07ff4e0197070a10400a935d
#: ../Doc/library/subprocess.rst:891
msgid ""
"A string surrounded by double quotation marks is interpreted as a single "
"argument, regardless of white space contained within.  A quoted string can "
"be embedded in an argument."
msgstr ""

# 97c0055433454dca802cdc6dca39b048
#: ../Doc/library/subprocess.rst:896
msgid ""
"A double quotation mark preceded by a backslash is interpreted as a literal "
"double quotation mark."
msgstr ""

# b7f729d2e9b240fca38a97314f3f5c79
#: ../Doc/library/subprocess.rst:899
msgid ""
"Backslashes are interpreted literally, unless they immediately precede a "
"double quotation mark."
msgstr ""

# 966603ca902d4e49b36f9bdf4cd37f87
#: ../Doc/library/subprocess.rst:902
msgid ""
"If backslashes immediately precede a double quotation mark, every pair of "
"backslashes is interpreted as a literal backslash.  If the number of "
"backslashes is odd, the last backslash escapes the next double quotation "
"mark as described in rule 3."
msgstr ""

# 3b0f376b480c46b2bb0a224e2c7fc876
#: ../Doc/library/sun.rst:6
msgid "SunOS Specific Services"
msgstr ""

# 63591cc4f9614d0cb0ee28cf3a40c3be
#: ../Doc/library/sun.rst:8
msgid ""
"The modules described in this chapter provide interfaces to features that "
"are unique to SunOS 5 (also known as Solaris version 2)."
msgstr ""

#: ../Doc/library/sunau.rst:2
msgid ":mod:`sunau` --- Read and write Sun AU files"
msgstr ""

# c4c0a69b64094ac398f399fe475d042c
#: ../Doc/library/sunau.rst:8
msgid "**Source code:** :source:`Lib/sunau.py`"
msgstr ""

#: ../Doc/library/sunau.rst:12
msgid ""
"The :mod:`sunau` module provides a convenient interface to the Sun AU sound "
"format.  Note that this module is interface-compatible with the modules :mod:"
"`aifc` and :mod:`wave`."
msgstr ""

#: ../Doc/library/sunau.rst:16
msgid ""
"An audio file consists of a header followed by the data.  The fields of the "
"header are:"
msgstr ""

#: ../Doc/library/sunau.rst:22
msgid "magic word"
msgstr ""

#: ../Doc/library/sunau.rst:22
msgid "The four bytes ``.snd``."
msgstr ""

#: ../Doc/library/sunau.rst:24
msgid "header size"
msgstr ""

#: ../Doc/library/sunau.rst:24
msgid "Size of the header, including info, in bytes."
msgstr ""

#: ../Doc/library/sunau.rst:26
msgid "data size"
msgstr ""

#: ../Doc/library/sunau.rst:26
msgid "Physical size of the data, in bytes."
msgstr ""

#: ../Doc/library/sunau.rst:28
msgid "encoding"
msgstr ""

#: ../Doc/library/sunau.rst:28
msgid "Indicates how the audio samples are encoded."
msgstr ""

#: ../Doc/library/sunau.rst:30
msgid "sample rate"
msgstr ""

#: ../Doc/library/sunau.rst:30
msgid "The sampling rate."
msgstr ""

#: ../Doc/library/sunau.rst:32
msgid "# of channels"
msgstr ""

#: ../Doc/library/sunau.rst:32
msgid "The number of channels in the samples."
msgstr ""

#: ../Doc/library/sunau.rst:34
msgid "info"
msgstr ""

#: ../Doc/library/sunau.rst:34
msgid ""
"ASCII string giving a description of the audio file (padded with null bytes)."
msgstr ""

#: ../Doc/library/sunau.rst:38
msgid ""
"Apart from the info field, all header fields are 4 bytes in size. They are "
"all 32-bit unsigned integers encoded in big-endian byte order."
msgstr ""

#: ../Doc/library/sunau.rst:41
msgid "The :mod:`sunau` module defines the following functions:"
msgstr ""

#: ../Doc/library/sunau.rst:46
msgid ""
"If *file* is a string, open the file by that name, otherwise treat it as a "
"seekable file-like object. *mode* can be any of"
msgstr ""

#: ../Doc/library/sunau.rst:50 ../Doc/library/wave.rst:25
msgid "Read only mode."
msgstr ""

#: ../Doc/library/sunau.rst:53 ../Doc/library/wave.rst:28
msgid "Write only mode."
msgstr ""

#: ../Doc/library/sunau.rst:55
msgid "Note that it does not allow read/write files."
msgstr ""

#: ../Doc/library/sunau.rst:57
msgid ""
"A *mode* of ``'r'`` returns a :class:`AU_read` object, while a *mode* of "
"``'w'`` or ``'wb'`` returns a :class:`AU_write` object."
msgstr ""

#: ../Doc/library/sunau.rst:63 ../Doc/library/wave.rst:45
msgid "A synonym for :func:`.open`, maintained for backwards compatibility."
msgstr ""

#: ../Doc/library/sunau.rst:66
msgid "The :mod:`sunau` module defines the following exception:"
msgstr ""

#: ../Doc/library/sunau.rst:70
msgid ""
"An error raised when something is impossible because of Sun AU specs or "
"implementation deficiency."
msgstr ""

#: ../Doc/library/sunau.rst:74
msgid "The :mod:`sunau` module defines the following data items:"
msgstr ""

#: ../Doc/library/sunau.rst:78
msgid ""
"An integer every valid Sun AU file begins with, stored in big-endian form.  "
"This is the string ``.snd`` interpreted as an integer."
msgstr ""

#: ../Doc/library/sunau.rst:89
msgid ""
"Values of the encoding field from the AU header which are supported by this "
"module."
msgstr ""

#: ../Doc/library/sunau.rst:100
msgid ""
"Additional known values of the encoding field from the AU header, but which "
"are not supported by this module."
msgstr ""

#: ../Doc/library/sunau.rst:107
msgid "AU_read Objects"
msgstr ""

#: ../Doc/library/sunau.rst:109
msgid ""
"AU_read objects, as returned by :func:`.open` above, have the following "
"methods:"
msgstr ""

#: ../Doc/library/sunau.rst:114
msgid ""
"Close the stream, and make the instance unusable. (This is  called "
"automatically on deletion.)"
msgstr ""

#: ../Doc/library/sunau.rst:120
msgid "Returns number of audio channels (1 for mone, 2 for stereo)."
msgstr ""

#: ../Doc/library/sunau.rst:125 ../Doc/library/wave.rst:75
msgid "Returns sample width in bytes."
msgstr ""

#: ../Doc/library/sunau.rst:130 ../Doc/library/wave.rst:80
msgid "Returns sampling frequency."
msgstr ""

#: ../Doc/library/sunau.rst:135 ../Doc/library/wave.rst:85
msgid "Returns number of audio frames."
msgstr ""

#: ../Doc/library/sunau.rst:140
msgid ""
"Returns compression type. Supported compression types are ``'ULAW'``, "
"``'ALAW'`` and ``'NONE'``."
msgstr ""

#: ../Doc/library/sunau.rst:146
msgid ""
"Human-readable version of :meth:`getcomptype`.  The supported types have the "
"respective names ``'CCITT G.711 u-law'``, ``'CCITT G.711 A-law'`` and ``'not "
"compressed'``."
msgstr ""

#: ../Doc/library/sunau.rst:153 ../Doc/library/wave.rst:101
msgid ""
"Returns a tuple ``(nchannels, sampwidth, framerate, nframes, comptype, "
"compname)``, equivalent to output of the :meth:`get\\*` methods."
msgstr ""

#: ../Doc/library/sunau.rst:159
msgid ""
"Reads and returns at most *n* frames of audio, as a string of bytes.  The "
"data will be returned in linear format.  If the original data is in u-LAW "
"format, it will be converted."
msgstr ""

#: ../Doc/library/sunau.rst:166 ../Doc/library/wave.rst:112
msgid "Rewind the file pointer to the beginning of the audio stream."
msgstr ""

#: ../Doc/library/sunau.rst:168 ../Doc/library/wave.rst:127
msgid ""
"The following two methods define a term \"position\" which is compatible "
"between them, and is otherwise implementation dependent."
msgstr ""

#: ../Doc/library/sunau.rst:174
msgid ""
"Set the file pointer to the specified position.  Only values returned from :"
"meth:`tell` should be used for *pos*."
msgstr ""

#: ../Doc/library/sunau.rst:180
msgid ""
"Return current file pointer position.  Note that the returned value has "
"nothing to do with the actual position in the file."
msgstr ""

#: ../Doc/library/sunau.rst:183
msgid ""
"The following two functions are defined for compatibility with the  :mod:"
"`aifc`, and don't do anything interesting."
msgstr ""

#: ../Doc/library/sunau.rst:189 ../Doc/library/wave.rst:120
msgid "Returns ``None``."
msgstr ""

#: ../Doc/library/sunau.rst:194 ../Doc/library/wave.rst:125
msgid "Raise an error."
msgstr ""

#: ../Doc/library/sunau.rst:200
msgid "AU_write Objects"
msgstr ""

#: ../Doc/library/sunau.rst:202
msgid ""
"AU_write objects, as returned by :func:`.open` above, have the following "
"methods:"
msgstr ""

#: ../Doc/library/sunau.rst:207 ../Doc/library/wave.rst:157
msgid "Set the number of channels."
msgstr ""

#: ../Doc/library/sunau.rst:212
msgid "Set the sample width (in bytes.)"
msgstr ""

#: ../Doc/library/sunau.rst:217
msgid "Set the frame rate."
msgstr ""

#: ../Doc/library/sunau.rst:222
msgid ""
"Set the number of frames. This can be later changed, when and if more  "
"frames are written."
msgstr ""

#: ../Doc/library/sunau.rst:228
msgid ""
"Set the compression type and description. Only ``'NONE'`` and ``'ULAW'`` are "
"supported on output."
msgstr ""

#: ../Doc/library/sunau.rst:234
msgid ""
"The *tuple* should be ``(nchannels, sampwidth, framerate, nframes, comptype, "
"compname)``, with values valid for the :meth:`set\\*` methods.  Set all "
"parameters."
msgstr ""

#: ../Doc/library/sunau.rst:241
msgid ""
"Return current position in the file, with the same disclaimer for the :meth:"
"`AU_read.tell` and :meth:`AU_read.setpos` methods."
msgstr ""

#: ../Doc/library/sunau.rst:247 ../Doc/library/wave.rst:197
msgid "Write audio frames, without correcting *nframes*."
msgstr ""

#: ../Doc/library/sunau.rst:252 ../Doc/library/wave.rst:202
msgid "Write audio frames and make sure *nframes* is correct."
msgstr ""

#: ../Doc/library/sunau.rst:257
msgid "Make sure *nframes* is correct, and close the file."
msgstr ""

#: ../Doc/library/sunau.rst:259
msgid "This method is called upon deletion."
msgstr ""

#: ../Doc/library/sunau.rst:261
msgid ""
"Note that it is invalid to set any parameters after calling  :meth:"
"`writeframes` or :meth:`writeframesraw`."
msgstr ""

# b5d384575edb47988512f41eb578583d
#: ../Doc/library/sunaudio.rst:3
msgid ":mod:`sunaudiodev` --- Access to Sun audio hardware"
msgstr ""

# 76654198ac6b419794caf872f7dcf7f4
#: ../Doc/library/sunaudio.rst:17
msgid ""
"This module allows you to access the Sun audio interface. The Sun audio "
"hardware is capable of recording and playing back audio data in u-LAW format "
"with a sample rate of 8K per second. A full description can be found in the :"
"manpage:`audio(7I)` manual page."
msgstr ""

# 3c118028cd8b435390485c282b82238a
#: ../Doc/library/sunaudio.rst:24
msgid ""
"The module :mod:`SUNAUDIODEV`  defines constants which may be used with this "
"module."
msgstr ""

# 17110a2eabf54b0da7ee467617e8ee2d
#: ../Doc/library/sunaudio.rst:27
msgid "This module defines the following variables and functions:"
msgstr ""

# 6a1e600087f24c268686004a208bf25c
#: ../Doc/library/sunaudio.rst:32
msgid ""
"This exception is raised on all errors. The argument is a string describing "
"what went wrong."
msgstr ""

# 3ff978db88ac488da249274e8f56208c
#: ../Doc/library/sunaudio.rst:38
msgid ""
"This function opens the audio device and returns a Sun audio device object. "
"This object can then be used to do I/O on. The *mode* parameter is one of "
"``'r'`` for record-only access, ``'w'`` for play-only access, ``'rw'`` for "
"both and ``'control'`` for access to the control device. Since only one "
"process is allowed to have the recorder or player open at the same time it "
"is a good idea to open the device only for the activity needed. See :manpage:"
"`audio(7I)` for details."
msgstr ""

# 4e15cca651224a51aaeb72bcb97f5eaf
#: ../Doc/library/sunaudio.rst:46
msgid ""
"As per the manpage, this module first looks in the environment variable "
"``AUDIODEV`` for the base audio device filename.  If not found, it falls "
"back to :file:`/dev/audio`.  The control device is calculated by appending "
"\"ctl\" to the base audio device."
msgstr ""

# ff508c69290a4572babfb2c4800892f7
#: ../Doc/library/sunaudio.rst:57
msgid ""
"The audio device objects are returned by :func:`.open` define the following "
"methods (except ``control`` objects which only provide :meth:`getinfo`, :"
"meth:`setinfo`, :meth:`fileno`, and :meth:`drain`):"
msgstr ""

# a708a2cc66124be0b2fdd9e1d15957f3
#: ../Doc/library/sunaudio.rst:64
msgid ""
"This method explicitly closes the device. It is useful in situations where "
"deleting the object does not immediately close it since there are other "
"references to it. A closed device should not be used again."
msgstr ""

# 91afb790b70545ca8690cb5f616460f6
#: ../Doc/library/sunaudio.rst:71
msgid ""
"Returns the file descriptor associated with the device.  This can be used to "
"set up ``SIGPOLL`` notification, as described below."
msgstr ""

# a912addc1f8b4e1ba761d1bb7f800125
#: ../Doc/library/sunaudio.rst:77
msgid ""
"This method waits until all pending output is processed and then returns. "
"Calling this method is often not necessary: destroying the object will "
"automatically close the audio device and this will do an implicit drain."
msgstr ""

# 95d615709b3c47d1ad00653dd9eff106
#: ../Doc/library/sunaudio.rst:84
msgid ""
"This method discards all pending output. It can be used avoid the slow "
"response to a user's stop request (due to buffering of up to one second of "
"sound)."
msgstr ""

# 7e09370719ad43bebd630d9fb07c90ad
#: ../Doc/library/sunaudio.rst:90
msgid ""
"This method retrieves status information like input and output volume, etc. "
"and returns it in the form of an audio status object. This object has no "
"methods but it contains a number of attributes describing the current device "
"status. The names and meanings of the attributes are described in ``<sun/"
"audioio.h>`` and in the :manpage:`audio(7I)` manual page.  Member names are "
"slightly different from their C counterparts: a status object is only a "
"single structure. Members of the :c:data:`play` substructure have ``o_`` "
"prepended to their name and members of the :c:data:`record` structure have "
"``i_``. So, the C member :c:data:`play.sample_rate` is accessed as :attr:"
"`o_sample_rate`, :c:data:`record.gain` as :attr:`i_gain` and :c:data:"
"`monitor_gain` plainly as :attr:`monitor_gain`."
msgstr ""

# c7ae148730874392b32a76f0150eff29
#: ../Doc/library/sunaudio.rst:105
msgid ""
"This method returns the number of samples that are buffered on the recording "
"side, i.e. the program will not block on a :func:`read` call of so many "
"samples."
msgstr ""

# 3ba91d08b6df42188e6e3b460e2c83e0
#: ../Doc/library/sunaudio.rst:111
msgid ""
"This method returns the number of samples buffered on the playback side. "
"Unfortunately, this number cannot be used to determine a number of samples "
"that can be written without blocking since the kernel output queue length "
"seems to be variable."
msgstr ""

# 43dea4c85f3644259356add1b3de11e5
#: ../Doc/library/sunaudio.rst:119
msgid ""
"This method reads *size* samples from the audio input and returns them as a "
"Python string. The function blocks until enough data is available."
msgstr ""

# c46585b28e3b49d5bab6bb6cb15fcf77
#: ../Doc/library/sunaudio.rst:125
msgid ""
"This method sets the audio device status parameters. The *status* parameter "
"is an device status object as returned by :func:`getinfo` and possibly "
"modified by the program."
msgstr ""

# 38701654776e47208fd9e52ed9417611
#: ../Doc/library/sunaudio.rst:132
msgid ""
"Write is passed a Python string containing audio samples to be played. If "
"there is enough buffer space free it will immediately return, otherwise it "
"will block."
msgstr ""

# 67616700a36d4d34a5bc13216776b313
#: ../Doc/library/sunaudio.rst:135
msgid ""
"The audio device supports asynchronous notification of various events, "
"through the SIGPOLL signal.  Here's an example of how you might enable this "
"in Python::"
msgstr ""

# 9bfeaa0ebead426b9e5b435c0e920cfd
#: ../Doc/library/sunaudio.rst:148
msgid ":mod:`SUNAUDIODEV` --- Constants used with :mod:`sunaudiodev`"
msgstr ""

# a70a16eebfce432195784c07f857077b
#: ../Doc/library/sunaudio.rst:162
msgid ""
"This is a companion module to :mod:`sunaudiodev` which defines useful "
"symbolic constants like :const:`MIN_GAIN`, :const:`MAX_GAIN`, :const:"
"`SPEAKER`, etc. The names of the constants are the same names as used in the "
"C include file ``<sun/audioio.h>``, with the leading string ``AUDIO_`` "
"stripped."
msgstr ""

#: ../Doc/library/symbol.rst:2
msgid ":mod:`symbol` --- Constants used with Python parse trees"
msgstr ""

# 92295b492125423fa16d6d2958881ce8
#: ../Doc/library/symbol.rst:8
msgid "**Source code:** :source:`Lib/symbol.py`"
msgstr ""

#: ../Doc/library/symbol.rst:12
msgid ""
"This module provides constants which represent the numeric values of "
"internal nodes of the parse tree.  Unlike most Python constants, these use "
"lower-case names.  Refer to the file :file:`Grammar/Grammar` in the Python "
"distribution for the definitions of the names in the context of the language "
"grammar.  The specific numeric values which the names map to may change "
"between Python versions."
msgstr ""

#: ../Doc/library/symbol.rst:19
msgid "This module also provides one additional data object:"
msgstr ""

#: ../Doc/library/symbol.rst:24 ../Doc/library/token.rst:24
msgid ""
"Dictionary mapping the numeric values of the constants defined in this "
"module back to name strings, allowing more human-readable representation of "
"parse trees to be generated."
msgstr ""

#: ../Doc/library/symtable.rst:2
msgid ":mod:`symtable` --- Access to the compiler's symbol tables"
msgstr ""

#: ../Doc/library/symtable.rst:11
msgid ""
"Symbol tables are generated by the compiler from AST just before bytecode is "
"generated.  The symbol table is responsible for calculating the scope of "
"every identifier in the code.  :mod:`symtable` provides an interface to "
"examine these tables."
msgstr ""

#: ../Doc/library/symtable.rst:18
msgid "Generating Symbol Tables"
msgstr ""

#: ../Doc/library/symtable.rst:22
msgid ""
"Return the toplevel :class:`SymbolTable` for the Python source *code*. "
"*filename* is the name of the file containing the code.  *compile_type* is "
"like the *mode* argument to :func:`compile`."
msgstr ""

#: ../Doc/library/symtable.rst:28
msgid "Examining Symbol Tables"
msgstr ""

#: ../Doc/library/symtable.rst:32
msgid "A namespace table for a block.  The constructor is not public."
msgstr ""

#: ../Doc/library/symtable.rst:36
msgid ""
"Return the type of the symbol table.  Possible values are ``'class'``, "
"``'module'``, and ``'function'``."
msgstr ""

#: ../Doc/library/symtable.rst:41
msgid "Return the table's identifier."
msgstr ""

#: ../Doc/library/symtable.rst:45
msgid ""
"Return the table's name.  This is the name of the class if the table is for "
"a class, the name of the function if the table is for a function, or "
"``'top'`` if the table is global (:meth:`get_type` returns ``'module'``)."
msgstr ""

#: ../Doc/library/symtable.rst:51
msgid "Return the number of the first line in the block this table represents."
msgstr ""

#: ../Doc/library/symtable.rst:55
msgid "Return ``True`` if the locals in this table can be optimized."
msgstr ""

#: ../Doc/library/symtable.rst:59
msgid "Return ``True`` if the block is a nested class or function."
msgstr ""

#: ../Doc/library/symtable.rst:63
msgid ""
"Return ``True`` if the block has nested namespaces within it.  These can be "
"obtained with :meth:`get_children`."
msgstr ""

#: ../Doc/library/symtable.rst:68
msgid "Return ``True`` if the block uses ``exec``."
msgstr ""

#: ../Doc/library/symtable.rst:72
msgid "Return ``True`` if the block uses a starred from-import."
msgstr ""

#: ../Doc/library/symtable.rst:76
msgid "Return a list of names of symbols in this table."
msgstr ""

#: ../Doc/library/symtable.rst:80
msgid "Lookup *name* in the table and return a :class:`Symbol` instance."
msgstr ""

#: ../Doc/library/symtable.rst:84
msgid "Return a list of :class:`Symbol` instances for names in the table."
msgstr ""

#: ../Doc/library/symtable.rst:88
msgid "Return a list of the nested symbol tables."
msgstr ""

#: ../Doc/library/symtable.rst:93
msgid ""
"A namespace for a function or method.  This class inherits :class:"
"`SymbolTable`."
msgstr ""

#: ../Doc/library/symtable.rst:98
msgid "Return a tuple containing names of parameters to this function."
msgstr ""

#: ../Doc/library/symtable.rst:102
msgid "Return a tuple containing names of locals in this function."
msgstr ""

#: ../Doc/library/symtable.rst:106
msgid "Return a tuple containing names of globals in this function."
msgstr ""

#: ../Doc/library/symtable.rst:110
msgid "Return a tuple containing names of free variables in this function."
msgstr ""

#: ../Doc/library/symtable.rst:115
msgid "A namespace of a class.  This class inherits :class:`SymbolTable`."
msgstr ""

#: ../Doc/library/symtable.rst:119
msgid "Return a tuple containing the names of methods declared in the class."
msgstr ""

#: ../Doc/library/symtable.rst:124
msgid ""
"An entry in a :class:`SymbolTable` corresponding to an identifier in the "
"source.  The constructor is not public."
msgstr ""

#: ../Doc/library/symtable.rst:129
msgid "Return the symbol's name."
msgstr ""

#: ../Doc/library/symtable.rst:133
msgid "Return ``True`` if the symbol is used in its block."
msgstr ""

#: ../Doc/library/symtable.rst:137
msgid "Return ``True`` if the symbol is created from an import statement."
msgstr ""

#: ../Doc/library/symtable.rst:141
msgid "Return ``True`` if the symbol is a parameter."
msgstr ""

#: ../Doc/library/symtable.rst:145
msgid "Return ``True`` if the symbol is global."
msgstr ""

#: ../Doc/library/symtable.rst:149
msgid ""
"Return ``True`` if the symbol is declared global with a global statement."
msgstr ""

#: ../Doc/library/symtable.rst:153
msgid "Return ``True`` if the symbol is local to its block."
msgstr ""

#: ../Doc/library/symtable.rst:157
msgid ""
"Return ``True`` if the symbol is referenced in its block, but not assigned "
"to."
msgstr ""

#: ../Doc/library/symtable.rst:162
msgid "Return ``True`` if the symbol is assigned to in its block."
msgstr ""

#: ../Doc/library/symtable.rst:166
msgid "Return ``True`` if name binding introduces new namespace."
msgstr ""

#: ../Doc/library/symtable.rst:168
msgid ""
"If the name is used as the target of a function or class statement, this "
"will be true."
msgstr ""

#: ../Doc/library/symtable.rst:177
msgid ""
"Note that a single name can be bound to multiple objects.  If the result is "
"``True``, the name may also be bound to other objects, like an int or list, "
"that does not introduce a new namespace."
msgstr ""

#: ../Doc/library/symtable.rst:183
msgid "Return a list of namespaces bound to this name."
msgstr ""

#: ../Doc/library/symtable.rst:187
msgid ""
"Return the namespace bound to this name.  If more than one namespace is "
"bound, a :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/sys.rst:2
msgid ":mod:`sys` --- System-specific parameters and functions"
msgstr ""

#: ../Doc/library/sys.rst:8
msgid ""
"This module provides access to some variables used or maintained by the "
"interpreter and to functions that interact strongly with the interpreter. It "
"is always available."
msgstr ""

#: ../Doc/library/sys.rst:15
msgid ""
"The list of command line arguments passed to a Python script. ``argv[0]`` is "
"the script name (it is operating system dependent whether this is a full "
"pathname or not).  If the command was executed using the :option:`-c` "
"command line option to the interpreter, ``argv[0]`` is set to the string ``'-"
"c'``.  If no script name was passed to the Python interpreter, ``argv[0]`` "
"is the empty string."
msgstr ""

#: ../Doc/library/sys.rst:21
msgid ""
"To loop over the standard input, or the list of files given on the command "
"line, see the :mod:`fileinput` module."
msgstr ""

#: ../Doc/library/sys.rst:27
msgid ""
"An indicator of the native byte order.  This will have the value ``'big'`` "
"on big-endian (most-significant byte first) platforms, and ``'little'`` on "
"little-endian (least-significant byte first) platforms."
msgstr ""

#: ../Doc/library/sys.rst:36
msgid ""
"A tuple of strings giving the names of all modules that are compiled into "
"this Python interpreter.  (This information is not available in any other "
"way --- ``modules.keys()`` only lists the imported modules.)"
msgstr ""

# 42dd914ee15642aabc081308335208f8
#: ../Doc/library/sys.rst:43
msgid ""
"Call ``func(*args)``, while tracing is enabled.  The tracing state is saved, "
"and restored afterwards.  This is intended to be called from a debugger from "
"a checkpoint, to recursively debug some other code."
msgstr ""

#: ../Doc/library/sys.rst:50
msgid "A string containing the copyright pertaining to the Python interpreter."
msgstr ""

#: ../Doc/library/sys.rst:55
msgid ""
"Clear the internal type cache. The type cache is used to speed up attribute "
"and method lookups. Use the function *only* to drop unnecessary references "
"during reference leak debugging."
msgstr ""

#: ../Doc/library/sys.rst:59 ../Doc/library/sys.rst:77
msgid ""
"This function should be used for internal and specialized purposes only."
msgstr ""

#: ../Doc/library/sys.rst:66
msgid ""
"Return a dictionary mapping each thread's identifier to the topmost stack "
"frame currently active in that thread at the time the function is called. "
"Note that functions in the :mod:`traceback` module can build the call stack "
"given such a frame."
msgstr ""

#: ../Doc/library/sys.rst:71
msgid ""
"This is most useful for debugging deadlock:  this function does not require "
"the deadlocked threads' cooperation, and such threads' call stacks are "
"frozen for as long as they remain deadlocked.  The frame returned for a non-"
"deadlocked thread may bear no relationship to that thread's current activity "
"by the time calling code examines the frame."
msgstr ""

#: ../Doc/library/sys.rst:84
msgid "Integer specifying the handle of the Python DLL. Availability: Windows."
msgstr ""

# be0febb213c44c62908cc9ad83ec08cf
#: ../Doc/library/sys.rst:89
msgid ""
"If *value* is not ``None``, this function prints it to ``sys.stdout``, and "
"saves it in ``__builtin__._``."
msgstr ""

#: ../Doc/library/sys.rst:92
msgid ""
"``sys.displayhook`` is called on the result of evaluating an :term:"
"`expression` entered in an interactive Python session.  The display of these "
"values can be customized by assigning another one-argument function to ``sys."
"displayhook``."
msgstr ""

# a0e2e2b3664b4e82bd6d24cac38fad13
#: ../Doc/library/sys.rst:99
msgid ""
"If this is true, Python won't try to write ``.pyc`` or ``.pyo`` files on the "
"import of source modules.  This value is initially set to ``True`` or "
"``False`` depending on the :option:`-B` command line option and the :envvar:"
"`PYTHONDONTWRITEBYTECODE` environment variable, but you can set it yourself "
"to control bytecode file generation."
msgstr ""

#: ../Doc/library/sys.rst:110
msgid ""
"This function prints out a given traceback and exception to ``sys.stderr``."
msgstr ""

#: ../Doc/library/sys.rst:112
msgid ""
"When an exception is raised and uncaught, the interpreter calls ``sys."
"excepthook`` with three arguments, the exception class, exception instance, "
"and a traceback object.  In an interactive session this happens just before "
"control is returned to the prompt; in a Python program this happens just "
"before the program exits.  The handling of such top-level exceptions can be "
"customized by assigning another three-argument function to ``sys."
"excepthook``."
msgstr ""

#: ../Doc/library/sys.rst:123
msgid ""
"These objects contain the original values of ``displayhook`` and "
"``excepthook`` at the start of the program.  They are saved so that "
"``displayhook`` and ``excepthook`` can be restored in case they happen to "
"get replaced with broken objects."
msgstr ""

# ac24b64b5a10487db70a7a1a9e1803f7
#: ../Doc/library/sys.rst:131
msgid ""
"This function returns a tuple of three values that give information about "
"the exception that is currently being handled.  The information returned is "
"specific both to the current thread and to the current stack frame.  If the "
"current stack frame is not handling an exception, the information is taken "
"from the calling stack frame, or its caller, and so on until a stack frame "
"is found that is handling an exception.  Here, \"handling an exception\" is "
"defined as \"executing or having executed an except clause.\"  For any stack "
"frame, only information about the most recently handled exception is "
"accessible."
msgstr ""

# ecf07c22374b4265b53f5f0fceba1b7d
#: ../Doc/library/sys.rst:142
msgid ""
"If no exception is being handled anywhere on the stack, a tuple containing "
"three ``None`` values is returned.  Otherwise, the values returned are ``"
"(type, value, traceback)``.  Their meaning is: *type* gets the exception "
"type of the exception being handled (a class object); *value* gets the "
"exception parameter (its :dfn:`associated value` or the second argument to :"
"keyword:`raise`, which is always a class instance if the exception type is a "
"class object); *traceback* gets a traceback object (see the Reference "
"Manual) which encapsulates the call stack at the point where the exception "
"originally occurred."
msgstr ""

# 32af3bd3a0b44cd5b399377fa2d2eeb8
#: ../Doc/library/sys.rst:151
msgid ""
"If :func:`exc_clear` is called, this function will return three ``None`` "
"values until either another exception is raised in the current thread or the "
"execution stack returns to a frame where another exception is being handled."
msgstr ""

# 8deb1cbb914b4535ae93f07c9fc2c823
#: ../Doc/library/sys.rst:157
msgid ""
"Assigning the *traceback* return value to a local variable in a function "
"that is handling an exception will cause a circular reference.  This will "
"prevent anything referenced by a local variable in the same function or by "
"the traceback from being garbage collected.  Since most functions don't need "
"access to the traceback, the best solution is to use something like "
"``exctype, value = sys.exc_info()[:2]`` to extract only the exception type "
"and value.  If you do need the traceback, make sure to delete it after use "
"(best done with a :keyword:`try` ... :keyword:`finally` statement) or to "
"call :func:`exc_info` in a function that does not itself handle an exception."
msgstr ""

# 85799545cc8443a8a1ed90a5e7db392e
#: ../Doc/library/sys.rst:169
msgid ""
"Beginning with Python 2.2, such cycles are automatically reclaimed when "
"garbage collection is enabled and they become unreachable, but it remains "
"more efficient to avoid creating cycles."
msgstr ""

# 011d82b48c36442f85c0d72b8144314f
#: ../Doc/library/sys.rst:176
msgid ""
"This function clears all information relating to the current or last "
"exception that occurred in the current thread.  After calling this "
"function, :func:`exc_info` will return three ``None`` values until another "
"exception is raised in the current thread or the execution stack returns to "
"a frame where another exception is being handled."
msgstr ""

# 9a72d511f79c4b75945f873645fa20ca
#: ../Doc/library/sys.rst:182
msgid ""
"This function is only needed in only a few obscure situations.  These "
"include logging and error handling systems that report information on the "
"last or current exception.  This function can also be used to try to free "
"resources and trigger object finalization, though no guarantee is made as to "
"what objects will be freed, if any."
msgstr ""

# ec982e1177bc4dbd89fb4e5e3bbc1a81
#: ../Doc/library/sys.rst:198
msgid ""
"Since they are global variables, they are not specific to the current "
"thread, so their use is not safe in a multi-threaded program.  When no "
"exception is being handled, ``exc_type`` is set to ``None`` and the other "
"two are undefined."
msgstr ""

# 7975a0173f1143ffa76233ec2853a57c
#: ../Doc/library/sys.rst:205
msgid ""
"A string giving the site-specific directory prefix where the platform-"
"dependent Python files are installed; by default, this is also ``'/usr/"
"local'``.  This can be set at build time with the ``--exec-prefix`` argument "
"to the :program:`configure` script.  Specifically, all configuration files "
"(e.g. the :file:`pyconfig.h` header file) are installed in the directory :"
"file:`{exec_prefix}/lib/python{X.Y}/config`, and shared library modules are "
"installed in :file:`{exec_prefix}/lib/python{X.Y}/lib-dynload`, where *X.Y* "
"is the version number of Python, for example ``2.7``."
msgstr ""

# 27f1142df5cd4f79853a7766c1ba19b4
#: ../Doc/library/sys.rst:217
msgid ""
"A string giving the absolute path of the executable binary for the Python "
"interpreter, on systems where this makes sense. If Python is unable to "
"retrieve the real path to its executable, :data:`sys.executable` will be an "
"empty string or ``None``."
msgstr ""

# 07ef53e91afe438eb662cd26bce352c3
#: ../Doc/library/sys.rst:225
msgid ""
"Exit from Python.  This is implemented by raising the :exc:`SystemExit` "
"exception, so cleanup actions specified by finally clauses of :keyword:`try` "
"statements are honored, and it is possible to intercept the exit attempt at "
"an outer level."
msgstr ""

# 9aff2240543d4f3bb3737ff37f3c652d
#: ../Doc/library/sys.rst:230
msgid ""
"The optional argument *arg* can be an integer giving the exit status "
"(defaulting to zero), or another type of object.  If it is an integer, zero "
"is considered \"successful termination\" and any nonzero value is considered "
"\"abnormal termination\" by shells and the like.  Most systems require it to "
"be in the range 0-127, and produce undefined results otherwise.  Some "
"systems have a convention for assigning specific meanings to specific exit "
"codes, but these are generally underdeveloped; Unix programs generally use 2 "
"for command line syntax errors and 1 for all other kind of errors.  If "
"another type of object is passed, ``None`` is equivalent to passing zero, "
"and any other object is printed to :data:`stderr` and results in an exit "
"code of 1.  In particular, ``sys.exit(\"some error message\")`` is a quick "
"way to exit a program when an error occurs."
msgstr ""

# 5660ac3ea40c4c8cae4ad24b157daf24
#: ../Doc/library/sys.rst:243
msgid ""
"Since :func:`exit` ultimately \"only\" raises an exception, it will only "
"exit the process when called from the main thread, and the exception is not "
"intercepted."
msgstr ""

# e13add876f4c4739ab9bcc78e2873e53
#: ../Doc/library/sys.rst:250
msgid ""
"This value is not actually defined by the module, but can be set by the user "
"(or by a program) to specify a clean-up action at program exit.  When set, "
"it should be a parameterless function.  This function will be called when "
"the interpreter exits.  Only one function may be installed in this way; to "
"allow multiple functions which will be called at termination, use the :mod:"
"`atexit` module."
msgstr ""

# b3aca3c5c89b4bba91fb2b5022a494f9
#: ../Doc/library/sys.rst:258
msgid ""
"The exit function is not called when the program is killed by a signal, when "
"a Python fatal internal error is detected, or when ``os._exit()`` is called."
msgstr ""

#: ../Doc/library/sys.rst:267
msgid ""
"The struct sequence *flags* exposes the status of command line flags. The "
"attributes are read only."
msgstr ""

#: ../Doc/library/sys.rst:271 ../Doc/library/sys.rst:306
msgid "attribute"
msgstr ""

#: ../Doc/library/sys.rst:271 ../Doc/library/ttk.rst:222
msgid "flag"
msgstr ""

#: ../Doc/library/sys.rst:273
msgid ":const:`debug`"
msgstr ""

# a66be41865394b139370f74774359bca
#: ../Doc/library/sys.rst:273
msgid ":option:`-d`"
msgstr ""

# d93fb323b3ac40b1aca21668836f64d8
#: ../Doc/library/sys.rst:274
msgid ":const:`py3k_warning`"
msgstr ""

# ade1754fbc0b4239a2b9dd6b2c362199
#: ../Doc/library/sys.rst:274
msgid ":option:`-3`"
msgstr ""

#: ../Doc/library/sys.rst:275
msgid ":const:`division_warning`"
msgstr ""

# 37a48499d78e420494322908913f474b
#: ../Doc/library/sys.rst:275
msgid ":option:`-Q`"
msgstr ""

# 9bdc29e9464546d2997be8d0ee63eb64
#: ../Doc/library/sys.rst:276
msgid ":const:`division_new`"
msgstr ""

# 0aebf107809a4179b214ae17270b8702
#: ../Doc/library/sys.rst:276
msgid ":option:`-Qnew <-Q>`"
msgstr ""

#: ../Doc/library/sys.rst:277
msgid ":const:`inspect`"
msgstr ""

# 17ef1d66f9204ea383458a3d3d8bbb5c
# 44e0c3ffcfc748d287ad17a9caf39cf8
#: ../Doc/library/sys.rst:277 ../Doc/library/sys.rst:278
msgid ":option:`-i`"
msgstr ""

#: ../Doc/library/sys.rst:278
msgid ":const:`interactive`"
msgstr ""

#: ../Doc/library/sys.rst:279
msgid ":const:`optimize`"
msgstr ""

# 22701ca310c44ef3880fa5df8cb9e299
#: ../Doc/library/sys.rst:279
msgid ":option:`-O` or :option:`-OO`"
msgstr ""

#: ../Doc/library/sys.rst:280
msgid ":const:`dont_write_bytecode`"
msgstr ""

# 113ebb0ad8244e66b9f24a2ac3ad67ef
#: ../Doc/library/sys.rst:280
msgid ":option:`-B`"
msgstr ""

#: ../Doc/library/sys.rst:281
msgid ":const:`no_user_site`"
msgstr ""

# 13bdecca776b45c1a0339f58dc15f268
#: ../Doc/library/sys.rst:281
msgid ":option:`-s`"
msgstr ""

#: ../Doc/library/sys.rst:282
msgid ":const:`no_site`"
msgstr ""

# 2e9424f34a6f4b15b517bf2170c7ce24
#: ../Doc/library/sys.rst:282
msgid ":option:`-S`"
msgstr ""

#: ../Doc/library/sys.rst:283
msgid ":const:`ignore_environment`"
msgstr ""

# 907c60cef21f46c89db28e4c4fbb70bb
#: ../Doc/library/sys.rst:283
msgid ":option:`-E`"
msgstr ""

# 2d3984bd7e8e45e8a78c74f975e61b0c
#: ../Doc/library/sys.rst:284
msgid ":const:`tabcheck`"
msgstr ""

# 82c1bc44d64e48e992544e81e167da5e
#: ../Doc/library/sys.rst:284
msgid ":option:`-t` or :option:`-tt <-t>`"
msgstr ""

#: ../Doc/library/sys.rst:285
msgid ":const:`verbose`"
msgstr ""

# 809c51ba1c6a46879cfb6935aab5d08c
#: ../Doc/library/sys.rst:285
msgid ":option:`-v`"
msgstr ""

# aa2792bea0f1469692a1970c0ad883e7
#: ../Doc/library/sys.rst:286
msgid ":const:`unicode`"
msgstr ""

# 2e661f1057b84a6390d67a917cd1d8be
#: ../Doc/library/sys.rst:286
msgid ":option:`-U`"
msgstr ""

#: ../Doc/library/sys.rst:287
msgid ":const:`bytes_warning`"
msgstr ""

# d6e7490b4cbb4fcf88acf276c37a42d6
#: ../Doc/library/sys.rst:287
msgid ":option:`-b`"
msgstr ""

# b5494a01225145f1af04fd39014f2b7a
#: ../Doc/library/sys.rst:288
msgid ":const:`hash_randomization`"
msgstr ""

# fdaca1dab5784ff6a158f5ce397df4ec
#: ../Doc/library/sys.rst:288
msgid ":option:`-R`"
msgstr ""

# a8641ff357ea4c129fb25ca980845d2a
#: ../Doc/library/sys.rst:298
msgid ""
"A structseq holding information about the float type. It contains low level "
"information about the precision and internal representation.  The values "
"correspond to the various floating-point constants defined in the standard "
"header file :file:`float.h` for the 'C' programming language; see section "
"5.2.4.2.2 of the 1999 ISO/IEC C standard [C99]_, 'Characteristics of "
"floating types', for details."
msgstr ""

# 15dac1ead5f34409b63f50d912bf2a58
#: ../Doc/library/sys.rst:306
msgid "float.h macro"
msgstr ""

#: ../Doc/library/sys.rst:306
msgid "explanation"
msgstr ""

#: ../Doc/library/sys.rst:308
msgid ":const:`epsilon`"
msgstr ""

# aac6046a5cfe4bf8a6b844d49c3d666d
#: ../Doc/library/sys.rst:308
msgid "DBL_EPSILON"
msgstr ""

# 1d6d4e22d1d948d884f12cabc4d84ece
#: ../Doc/library/sys.rst:308
msgid ""
"difference between 1 and the least value greater than 1 that is "
"representable as a float"
msgstr ""

#: ../Doc/library/sys.rst:311
msgid ":const:`dig`"
msgstr ""

# 6cadffa356dd49a4a55de9959485b161
#: ../Doc/library/sys.rst:311
msgid "DBL_DIG"
msgstr ""

# 711b0d3df06f4f78ac499c73080337f2
#: ../Doc/library/sys.rst:311
msgid ""
"maximum number of decimal digits that can be faithfully represented in a "
"float;  see below"
msgstr ""

#: ../Doc/library/sys.rst:314
msgid ":const:`mant_dig`"
msgstr ""

# 996586c45da24ee097a8d1670ba8e853
#: ../Doc/library/sys.rst:314
msgid "DBL_MANT_DIG"
msgstr ""

# f795f3748a2448feac99bc267e553321
#: ../Doc/library/sys.rst:314
msgid ""
"float precision: the number of base-``radix`` digits in the significand of a "
"float"
msgstr ""

#: ../Doc/library/sys.rst:317
msgid ":const:`max`"
msgstr ""

# 9735e718e6d745afb3de1222140353fb
#: ../Doc/library/sys.rst:317
msgid "DBL_MAX"
msgstr ""

#: ../Doc/library/sys.rst:317
msgid "maximum representable finite float"
msgstr ""

#: ../Doc/library/sys.rst:319
msgid ":const:`max_exp`"
msgstr ""

# ffd7d239e76c4297ae7c26fc83d4fa40
#: ../Doc/library/sys.rst:319
msgid "DBL_MAX_EXP"
msgstr ""

# 83ac50d84c9d4e278f4d053c4b0bc02c
#: ../Doc/library/sys.rst:319
msgid ""
"maximum integer e such that ``radix**(e-1)`` is a representable finite float"
msgstr ""

#: ../Doc/library/sys.rst:322
msgid ":const:`max_10_exp`"
msgstr ""

# 32b03bb4e7a2404988475b6177df5c4d
#: ../Doc/library/sys.rst:322
msgid "DBL_MAX_10_EXP"
msgstr ""

# eb06d98b779b4d9db07fc74408f3711f
#: ../Doc/library/sys.rst:322
msgid ""
"maximum integer e such that ``10**e`` is in the range of representable "
"finite floats"
msgstr ""

#: ../Doc/library/sys.rst:325
msgid ":const:`min`"
msgstr ""

# 1d65164afaca4f868f052e6bcc2840dd
#: ../Doc/library/sys.rst:325
msgid "DBL_MIN"
msgstr ""

# 1987cea3ff2941269888510aa5ff8459
#: ../Doc/library/sys.rst:325
msgid "minimum positive normalized float"
msgstr ""

#: ../Doc/library/sys.rst:327
msgid ":const:`min_exp`"
msgstr ""

# a2be9f69a2ba4db0bf80ac53f53adf27
#: ../Doc/library/sys.rst:327
msgid "DBL_MIN_EXP"
msgstr ""

# 257fa5dcf6a34e64a898f52357b6aa75
#: ../Doc/library/sys.rst:327
msgid "minimum integer e such that ``radix**(e-1)`` is a normalized float"
msgstr ""

#: ../Doc/library/sys.rst:330
msgid ":const:`min_10_exp`"
msgstr ""

# a8139082be2e4e6da08c5bef7f9dc0ea
#: ../Doc/library/sys.rst:330
msgid "DBL_MIN_10_EXP"
msgstr ""

# 4ca9e46557f2456f8e2a778337134bf2
#: ../Doc/library/sys.rst:330
msgid "minimum integer e such that ``10**e`` is a normalized float"
msgstr ""

#: ../Doc/library/sys.rst:333
msgid ":const:`radix`"
msgstr ""

# 874dbdd89eaf48a8b814e6fec353f484
#: ../Doc/library/sys.rst:333
msgid "FLT_RADIX"
msgstr ""

# f0ec5205123e4f9fba7f529c435ade01
#: ../Doc/library/sys.rst:333
msgid "radix of exponent representation"
msgstr ""

#: ../Doc/library/sys.rst:335
msgid ":const:`rounds`"
msgstr ""

# 79130375273d4359acdcbe66f22212b6
#: ../Doc/library/sys.rst:335
msgid "FLT_ROUNDS"
msgstr ""

# 59d1bae3edbc49bfa5e7242104fd81a5
#: ../Doc/library/sys.rst:335
msgid ""
"integer constant representing the rounding mode used for arithmetic "
"operations.  This reflects the value of the system FLT_ROUNDS macro at "
"interpreter startup time.  See section 5.2.4.2.2 of the C99 standard for an "
"explanation of the possible values and their meanings."
msgstr ""

# 8fa2ee9195c54d2eb3458e1487c4ab37
#: ../Doc/library/sys.rst:343
msgid ""
"The attribute :attr:`sys.float_info.dig` needs further explanation.  If "
"``s`` is any string representing a decimal number with at most :attr:`sys."
"float_info.dig` significant digits, then converting ``s`` to a float and "
"back again will recover a string representing the same decimal value::"
msgstr ""

# b04a13dcb37a42be8ddb1979d3697895
#: ../Doc/library/sys.rst:356
msgid ""
"But for strings with more than :attr:`sys.float_info.dig` significant "
"digits, this isn't always true::"
msgstr ""

# 2038a533aeb248958797635dec81eab7
#: ../Doc/library/sys.rst:367
msgid ""
"A string indicating how the :func:`repr` function behaves for floats.  If "
"the string has value ``'short'`` then for a finite float ``x``, ``repr(x)`` "
"aims to produce a short string with the property that ``float(repr(x)) == "
"x``.  This is the usual behaviour in Python 2.7 and later.  Otherwise, "
"``float_repr_style`` has value ``'legacy'`` and ``repr(x)`` behaves in the "
"same way as it did in versions of Python prior to 2.7."
msgstr ""

#: ../Doc/library/sys.rst:380
msgid ""
"Return the interpreter's \"check interval\"; see :func:`setcheckinterval`."
msgstr ""

#: ../Doc/library/sys.rst:387
msgid ""
"Return the name of the current default string encoding used by the Unicode "
"implementation."
msgstr ""

# 961327cd73734c56a54e3c581ab81af4
#: ../Doc/library/sys.rst:395
msgid ""
"Return the current value of the flags that are used for :c:func:`dlopen` "
"calls. The flag constants are defined in the :mod:`dl` and :mod:`DLFCN` "
"modules. Availability: Unix."
msgstr ""

# 52f67298e5924b308e2eb7ae63bd57ae
#: ../Doc/library/sys.rst:404
msgid ""
"Return the name of the encoding used to convert Unicode filenames into "
"system file names, or ``None`` if the system default encoding is used. The "
"result value depends on the operating system:"
msgstr ""

#: ../Doc/library/sys.rst:408
msgid "On Mac OS X, the encoding is ``'utf-8'``."
msgstr ""

# c2a0ab543b53474c91490cd3be5b52a8
#: ../Doc/library/sys.rst:410
msgid ""
"On Unix, the encoding is the user's preference according to the result of "
"nl_langinfo(CODESET), or ``None`` if the ``nl_langinfo(CODESET)`` failed."
msgstr ""

#: ../Doc/library/sys.rst:414
msgid ""
"On Windows NT+, file names are Unicode natively, so no conversion is "
"performed. :func:`getfilesystemencoding` still returns ``'mbcs'``, as this "
"is the encoding that applications should use when they explicitly want to "
"convert Unicode strings to byte strings that are equivalent when used as "
"file names."
msgstr ""

#: ../Doc/library/sys.rst:420
msgid "On Windows 9x, the encoding is ``'mbcs'``."
msgstr ""

#: ../Doc/library/sys.rst:427
msgid ""
"Return the reference count of the *object*.  The count returned is generally "
"one higher than you might expect, because it includes the (temporary) "
"reference as an argument to :func:`getrefcount`."
msgstr ""

#: ../Doc/library/sys.rst:434
msgid ""
"Return the current value of the recursion limit, the maximum depth of the "
"Python interpreter stack.  This limit prevents infinite recursion from "
"causing an overflow of the C stack and crashing Python.  It can be set by :"
"func:`setrecursionlimit`."
msgstr ""

#: ../Doc/library/sys.rst:442
msgid ""
"Return the size of an object in bytes. The object can be any type of object. "
"All built-in objects will return correct results, but this does not have to "
"hold true for third-party extensions as it is implementation specific."
msgstr ""

#: ../Doc/library/sys.rst:447
msgid ""
"If given, *default* will be returned if the object does not provide means to "
"retrieve the size.  Otherwise a :exc:`TypeError` will be raised."
msgstr ""

#: ../Doc/library/sys.rst:450
msgid ""
":func:`getsizeof` calls the object's ``__sizeof__`` method and adds an "
"additional garbage collector overhead if the object is managed by the "
"garbage collector."
msgstr ""

#: ../Doc/library/sys.rst:459
msgid ""
"Return a frame object from the call stack.  If optional integer *depth* is "
"given, return the frame object that many calls below the top of the stack.  "
"If that is deeper than the call stack, :exc:`ValueError` is raised.  The "
"default for *depth* is zero, returning the frame at the top of the call "
"stack."
msgstr ""

#: ../Doc/library/sys.rst:466
msgid ""
"This function should be used for internal and specialized purposes only. It "
"is not guaranteed to exist in all implementations of Python."
msgstr ""

#: ../Doc/library/sys.rst:476
msgid "Get the profiler function as set by :func:`setprofile`."
msgstr ""

#: ../Doc/library/sys.rst:487
msgid "Get the trace function as set by :func:`settrace`."
msgstr ""

#: ../Doc/library/sys.rst:491
msgid ""
"The :func:`gettrace` function is intended only for implementing debuggers, "
"profilers, coverage tools and the like.  Its behavior is part of the "
"implementation platform, rather than part of the language definition, and "
"thus may not be available in all Python implementations."
msgstr ""

#: ../Doc/library/sys.rst:501
msgid ""
"Return a named tuple describing the Windows version currently running.  The "
"named elements are *major*, *minor*, *build*, *platform*, *service_pack*, "
"*service_pack_minor*, *service_pack_major*, *suite_mask*, and "
"*product_type*. *service_pack* contains a string while all other values are "
"integers. The components can also be accessed by name, so ``sys."
"getwindowsversion()[0]`` is equivalent to ``sys.getwindowsversion().major``. "
"For compatibility with prior versions, only the first 5 elements are "
"retrievable by indexing."
msgstr ""

#: ../Doc/library/sys.rst:511
msgid "*platform* may be one of the following values:"
msgstr ""

#: ../Doc/library/sys.rst:514
msgid "Platform"
msgstr ""

#: ../Doc/library/sys.rst:516
msgid ":const:`0 (VER_PLATFORM_WIN32s)`"
msgstr ""

#: ../Doc/library/sys.rst:516
msgid "Win32s on Windows 3.1"
msgstr ""

#: ../Doc/library/sys.rst:518
msgid ":const:`1 (VER_PLATFORM_WIN32_WINDOWS)`"
msgstr ""

#: ../Doc/library/sys.rst:518
msgid "Windows 95/98/ME"
msgstr ""

#: ../Doc/library/sys.rst:520
msgid ":const:`2 (VER_PLATFORM_WIN32_NT)`"
msgstr ""

#: ../Doc/library/sys.rst:520
msgid "Windows NT/2000/XP/x64"
msgstr ""

#: ../Doc/library/sys.rst:522
msgid ":const:`3 (VER_PLATFORM_WIN32_CE)`"
msgstr ""

#: ../Doc/library/sys.rst:522
msgid "Windows CE"
msgstr ""

#: ../Doc/library/sys.rst:525
msgid "*product_type* may be one of the following values:"
msgstr ""

#: ../Doc/library/sys.rst:530
msgid ":const:`1 (VER_NT_WORKSTATION)`"
msgstr ""

#: ../Doc/library/sys.rst:530
msgid "The system is a workstation."
msgstr ""

#: ../Doc/library/sys.rst:532
msgid ":const:`2 (VER_NT_DOMAIN_CONTROLLER)`"
msgstr ""

#: ../Doc/library/sys.rst:532
msgid "The system is a domain controller."
msgstr ""

#: ../Doc/library/sys.rst:535
msgid ":const:`3 (VER_NT_SERVER)`"
msgstr ""

#: ../Doc/library/sys.rst:535
msgid "The system is a server, but not a domain controller."
msgstr ""

# 685b8315a4384e3bb665bd30035dcdc8
#: ../Doc/library/sys.rst:540
msgid ""
"This function wraps the Win32 :c:func:`GetVersionEx` function; see the "
"Microsoft documentation on :c:func:`OSVERSIONINFOEX` for more information "
"about these fields."
msgstr ""

#: ../Doc/library/sys.rst:554
msgid ""
"The version number encoded as a single integer.  This is guaranteed to "
"increase with each version, including proper support for non-production "
"releases.  For example, to test that the Python interpreter is at least "
"version 1.5.2, use::"
msgstr ""

#: ../Doc/library/sys.rst:565
msgid ""
"This is called ``hexversion`` since it only really looks meaningful when "
"viewed as the result of passing it to the built-in :func:`hex` function.  "
"The ``version_info`` value may be used for a more human-friendly encoding of "
"the same information."
msgstr ""

# 60b9b254d5af49a5a6d43be792865faa
#: ../Doc/library/sys.rst:570
msgid "The ``hexversion`` is a 32-bit number with the following layout:"
msgstr ""

# eca693e65c0f4a929b326acea78d8c3b
#: ../Doc/library/sys.rst:573
msgid "Bits (big endian order)"
msgstr ""

# 7e67817bb30b43e8aceb21af3acbe385
#: ../Doc/library/sys.rst:575
msgid ":const:`1-8`"
msgstr ""

# 26667231c45848d9b54efbbe8a14607e
#: ../Doc/library/sys.rst:575
msgid "``PY_MAJOR_VERSION``  (the ``2`` in ``2.1.0a3``)"
msgstr ""

# 0a0b075a20c54c77aa360c0f14586f88
#: ../Doc/library/sys.rst:578
msgid ":const:`9-16`"
msgstr ""

# 88478db958b14c8ea3b226c664329cb2
#: ../Doc/library/sys.rst:578
msgid "``PY_MINOR_VERSION``  (the ``1`` in ``2.1.0a3``)"
msgstr ""

# 122a96ef5eaa4134b59667469aa92a81
#: ../Doc/library/sys.rst:581
msgid ":const:`17-24`"
msgstr ""

# 37d525be687c48b384e0fd356219f33b
#: ../Doc/library/sys.rst:581
msgid "``PY_MICRO_VERSION``  (the ``0`` in ``2.1.0a3``)"
msgstr ""

# 357a1de0c0724c2a898ff7bcce58f80c
#: ../Doc/library/sys.rst:584
msgid ":const:`25-28`"
msgstr ""

# 6993f536d00047ef916cddd7c7883145
#: ../Doc/library/sys.rst:584
msgid ""
"``PY_RELEASE_LEVEL``  (``0xA`` for alpha, ``0xB`` for beta, ``0xC`` for "
"release candidate and ``0xF`` for final)"
msgstr ""

# 960d0cd231ce4db89b9a86b249e66f47
#: ../Doc/library/sys.rst:588
msgid ":const:`29-32`"
msgstr ""

# f283c9a73f2b4ed4b51eca82ae90ee2d
#: ../Doc/library/sys.rst:588
msgid ""
"``PY_RELEASE_SERIAL``  (the ``3`` in ``2.1.0a3``, zero for final releases)"
msgstr ""

# 760fac8c77314511824d1183442a61c7
#: ../Doc/library/sys.rst:592
msgid "Thus ``2.1.0a3`` is hexversion ``0x020100a3``."
msgstr ""

#: ../Doc/library/sys.rst:599
msgid ""
"A struct sequence that holds information about Python's internal "
"representation of integers.  The attributes are read only."
msgstr ""

#: ../Doc/library/sys.rst:605
msgid ":const:`bits_per_digit`"
msgstr ""

# d318604720f44687bd9ab09bd647a21b
#: ../Doc/library/sys.rst:605
msgid ""
"number of bits held in each digit.  Python integers are stored internally in "
"base ``2**long_info.bits_per_digit``"
msgstr ""

#: ../Doc/library/sys.rst:609
msgid ":const:`sizeof_digit`"
msgstr ""

#: ../Doc/library/sys.rst:609
msgid "size in bytes of the C type used to represent a digit"
msgstr ""

#: ../Doc/library/sys.rst:620
msgid ""
"These three variables are not always defined; they are set when an exception "
"is not handled and the interpreter prints an error message and a stack "
"traceback. Their intended use is to allow an interactive user to import a "
"debugger module and engage in post-mortem debugging without having to re-"
"execute the command that caused the error.  (Typical use is ``import pdb; "
"pdb.pm()`` to enter the post-mortem debugger; see chapter :ref:`debugger` "
"for more information.)"
msgstr ""

# 45a0f6b4c2ae4b3680f928eeda249c47
#: ../Doc/library/sys.rst:628
msgid ""
"The meaning of the variables is the same as that of the return values from :"
"func:`exc_info` above.  (Since there is only one interactive thread, thread-"
"safety is not a concern for these variables, unlike for ``exc_type`` etc.)"
msgstr ""

# b78897a1d9c04233a88f6b4c8f10a6fd
#: ../Doc/library/sys.rst:636
msgid ""
"The largest positive integer supported by Python's regular integer type.  "
"This is at least 2\\*\\*31-1.  The largest negative integer is ``-maxint-1`` "
"--- the asymmetry results from the use of 2's complement binary arithmetic."
msgstr ""

# ecbecb0a76a94614a07260396a08c6bf
#: ../Doc/library/sys.rst:642
msgid ""
"The largest positive integer supported by the platform's Py_ssize_t type, "
"and thus the maximum size lists, strings, dicts, and many other containers "
"can have."
msgstr ""

#: ../Doc/library/sys.rst:648
msgid ""
"An integer giving the largest supported code point for a Unicode character.  "
"The value of this depends on the configuration option that specifies whether "
"Unicode characters are stored as UCS-2 or UCS-4."
msgstr ""

# f3745c39133a40a29d7c77a26c1f2123
#: ../Doc/library/sys.rst:655
msgid ""
"A list of :term:`finder` objects that have their :meth:`find_module` methods "
"called to see if one of the objects can find the module to be imported. The :"
"meth:`find_module` method is called at least with the absolute name of the "
"module being imported. If the module to be imported is contained in package "
"then the parent package's :attr:`__path__` attribute is passed in as a "
"second argument. The method returns ``None`` if the module cannot be found, "
"else returns a :term:`loader`."
msgstr ""

#: ../Doc/library/sys.rst:663
msgid ""
":data:`sys.meta_path` is searched before any implicit default finders or :"
"data:`sys.path`."
msgstr ""

#: ../Doc/library/sys.rst:666
msgid "See :pep:`302` for the original specification."
msgstr ""

# f45bbbaa97564fc08744daacbb32475c
#: ../Doc/library/sys.rst:673
msgid ""
"This is a dictionary that maps module names to modules which have already "
"been loaded.  This can be manipulated to force reloading of modules and "
"other tricks. Note that removing a module from this dictionary is *not* the "
"same as calling :func:`reload` on the corresponding module object."
msgstr ""

#: ../Doc/library/sys.rst:683
msgid ""
"A list of strings that specifies the search path for modules. Initialized "
"from the environment variable :envvar:`PYTHONPATH`, plus an installation-"
"dependent default."
msgstr ""

#: ../Doc/library/sys.rst:687
msgid ""
"As initialized upon program startup, the first item of this list, ``path[0]"
"``, is the directory containing the script that was used to invoke the "
"Python interpreter.  If the script directory is not available (e.g.  if the "
"interpreter is invoked interactively or if the script is read from standard "
"input), ``path[0]`` is the empty string, which directs Python to search "
"modules in the current directory first.  Notice that the script directory is "
"inserted *before* the entries inserted as a result of :envvar:`PYTHONPATH`."
msgstr ""

#: ../Doc/library/sys.rst:695
msgid "A program is free to modify this list for its own purposes."
msgstr ""

#: ../Doc/library/sys.rst:707
msgid ""
"A list of callables that take a path argument to try to create a :term:"
"`finder` for the path. If a finder can be created, it is to be returned by "
"the callable, else raise :exc:`ImportError`."
msgstr ""

#: ../Doc/library/sys.rst:711 ../Doc/library/sys.rst:723
msgid "Originally specified in :pep:`302`."
msgstr ""

# 688ea50b6f9f440aa180f0ae51b17763
#: ../Doc/library/sys.rst:716
msgid ""
"A dictionary acting as a cache for :term:`finder` objects. The keys are "
"paths that have been passed to :data:`sys.path_hooks` and the values are the "
"finders that are found. If a path is a valid file system path but no "
"explicit finder is found on :data:`sys.path_hooks` then ``None`` is stored "
"to represent the implicit default finder should be used. If the path is not "
"an existing path then :class:`imp.NullImporter` is set."
msgstr ""

#: ../Doc/library/sys.rst:728
msgid ""
"This string contains a platform identifier that can be used to append "
"platform-specific components to :data:`sys.path`, for instance."
msgstr ""

# 6be492a5b7d84899807e90607df06a4a
#: ../Doc/library/sys.rst:731
msgid ""
"For most Unix systems, this is the lowercased OS name as returned by ``uname "
"-s`` with the first part of the version as returned by ``uname -r`` "
"appended, e.g. ``'sunos5'``, *at the time when Python was built*.  Unless "
"you want to test for a specific system version, it is therefore recommended "
"to use the following idiom::"
msgstr ""

# 68732969d4064f2aa717934a641f62b6
#: ../Doc/library/sys.rst:749
msgid "For other systems, the values are:"
msgstr ""

#: ../Doc/library/sys.rst:752
msgid "System"
msgstr ""

#: ../Doc/library/sys.rst:752
msgid ":data:`platform` value"
msgstr ""

# ac9de5e54f3f4106aabc78465051d0d1
#: ../Doc/library/sys.rst:754
msgid "Linux (2.x *and* 3.x)"
msgstr ""

# f29ad12ac65b4097bf96d3ec7baf22ec
#: ../Doc/library/sys.rst:754
msgid "``'linux2'``"
msgstr ""

#: ../Doc/library/sys.rst:755
msgid "``'win32'``"
msgstr ""

#: ../Doc/library/sys.rst:756
msgid "Windows/Cygwin"
msgstr ""

#: ../Doc/library/sys.rst:756
msgid "``'cygwin'``"
msgstr ""

#: ../Doc/library/sys.rst:757
msgid "Mac OS X"
msgstr ""

#: ../Doc/library/sys.rst:757
msgid "``'darwin'``"
msgstr ""

#: ../Doc/library/sys.rst:758
msgid "OS/2"
msgstr ""

#: ../Doc/library/sys.rst:758
msgid "``'os2'``"
msgstr ""

#: ../Doc/library/sys.rst:759
msgid "OS/2 EMX"
msgstr ""

#: ../Doc/library/sys.rst:759
msgid "``'os2emx'``"
msgstr ""

# b9043eb977e241a4a4be25786de016d2
#: ../Doc/library/sys.rst:760
msgid "RiscOS"
msgstr ""

# ae86607467a147edab81cbb635501b1e
#: ../Doc/library/sys.rst:760
msgid "``'riscos'``"
msgstr ""

# 9189996954984a928ee780cd1b7f943d
#: ../Doc/library/sys.rst:761
msgid "AtheOS"
msgstr ""

# b6d7c9d69b7d42e2883eba0a8beffdad
#: ../Doc/library/sys.rst:761
msgid "``'atheos'``"
msgstr ""

# 3bf0e8f58de54832870a94fecec4d755
#: ../Doc/library/sys.rst:773
msgid ""
"A string giving the site-specific directory prefix where the platform "
"independent Python files are installed; by default, this is the string ``'/"
"usr/local'``.  This can be set at build time with the ``--prefix`` argument "
"to the :program:`configure` script.  The main collection of Python library "
"modules is installed in the directory :file:`{prefix}/lib/python{X.Y}`` "
"while the platform independent header files (all except :file:`pyconfig.h`) "
"are stored in :file:`{prefix}/include/python{X.Y}`, where *X.Y* is the "
"version number of Python, for example ``2.7``."
msgstr ""

#: ../Doc/library/sys.rst:790
msgid ""
"Strings specifying the primary and secondary prompt of the interpreter.  "
"These are only defined if the interpreter is in interactive mode.  Their "
"initial values in this case are ``'>>> '`` and ``'... '``.  If a non-string "
"object is assigned to either variable, its :func:`str` is re-evaluated each "
"time the interpreter prepares to read a new interactive command; this can be "
"used to implement a dynamic prompt."
msgstr ""

# ac0efeaac95c435882bcd6c5a552846e
#: ../Doc/library/sys.rst:800
msgid ""
"Bool containing the status of the Python 3 warning flag. It's ``True`` when "
"Python is started with the -3 option.  (This should be considered read-only; "
"setting it to a different value doesn't have an effect on Python 3 warnings.)"
msgstr ""

#: ../Doc/library/sys.rst:810
msgid ""
"Set the interpreter's \"check interval\".  This integer value determines how "
"often the interpreter checks for periodic things such as thread switches and "
"signal handlers.  The default is ``100``, meaning the check is performed "
"every 100 Python virtual instructions. Setting it to a larger value may "
"increase performance for programs using threads.  Setting it to a value "
"``<=`` 0 checks every virtual instruction, maximizing responsiveness as well "
"as overhead."
msgstr ""

#: ../Doc/library/sys.rst:820
msgid ""
"Set the current default string encoding used by the Unicode implementation.  "
"If *name* does not match any available encoding, :exc:`LookupError` is "
"raised. This function is only intended to be used by the :mod:`site` module "
"implementation and, where needed, by :mod:`sitecustomize`.  Once used by "
"the :mod:`site` module, it is removed from the :mod:`sys` module's namespace."
msgstr ""

# 9cf191a82fc14b32b379df1dea2c3f3c
#: ../Doc/library/sys.rst:834
msgid ""
"Set the flags used by the interpreter for :c:func:`dlopen` calls, such as "
"when the interpreter loads extension modules.  Among other things, this will "
"enable a lazy resolving of symbols when importing a module, if called as "
"``sys.setdlopenflags(0)``.  To share symbols across extension modules, call "
"as ``sys.setdlopenflags(dl.RTLD_NOW | dl.RTLD_GLOBAL)``.  Symbolic names for "
"the flag modules can be either found in the :mod:`dl` module, or in the :mod:"
"`DLFCN` module. If :mod:`DLFCN` is not available, it can be generated from :"
"file:`/usr/include/dlfcn.h` using the :program:`h2py` script. Availability: "
"Unix."
msgstr ""

#: ../Doc/library/sys.rst:853
msgid ""
"Set the system's profile function, which allows you to implement a Python "
"source code profiler in Python.  See chapter :ref:`profile` for more "
"information on the Python profiler.  The system's profile function is called "
"similarly to the system's trace function (see :func:`settrace`), but it "
"isn't called for each executed line of code (only on call and return, but "
"the return event is reported even when an exception has been set).  The "
"function is thread-specific, but there is no way for the profiler to know "
"about context switches between threads, so it does not make sense to use "
"this in the presence of multiple threads. Also, its return value is not "
"used, so it can simply return ``None``."
msgstr ""

#: ../Doc/library/sys.rst:866
msgid ""
"Set the maximum depth of the Python interpreter stack to *limit*.  This "
"limit prevents infinite recursion from causing an overflow of the C stack "
"and crashing Python."
msgstr ""

#: ../Doc/library/sys.rst:870
msgid ""
"The highest possible limit is platform-dependent.  A user may need to set "
"the limit higher when she has a program that requires deep recursion and a "
"platform that supports a higher limit.  This should be done with care, "
"because a too-high limit can lead to a crash."
msgstr ""

#: ../Doc/library/sys.rst:882
msgid ""
"Set the system's trace function, which allows you to implement a Python "
"source code debugger in Python.  The function is thread-specific; for a "
"debugger to support multiple threads, it must be registered using :func:"
"`settrace` for each thread being debugged."
msgstr ""

#: ../Doc/library/sys.rst:887
msgid ""
"Trace functions should have three arguments: *frame*, *event*, and *arg*. "
"*frame* is the current stack frame.  *event* is a string: ``'call'``, "
"``'line'``, ``'return'``, ``'exception'``, ``'c_call'``, ``'c_return'``, or "
"``'c_exception'``. *arg* depends on the event type."
msgstr ""

#: ../Doc/library/sys.rst:892
msgid ""
"The trace function is invoked (with *event* set to ``'call'``) whenever a "
"new local scope is entered; it should return a reference to a local trace "
"function to be used that scope, or ``None`` if the scope shouldn't be traced."
msgstr ""

#: ../Doc/library/sys.rst:896
msgid ""
"The local trace function should return a reference to itself (or to another "
"function for further tracing in that scope), or ``None`` to turn off tracing "
"in that scope."
msgstr ""

#: ../Doc/library/sys.rst:900
msgid "The events have the following meaning:"
msgstr ""

#: ../Doc/library/sys.rst:903
msgid ""
"A function is called (or some other code block entered).  The global trace "
"function is called; *arg* is ``None``; the return value specifies the local "
"trace function."
msgstr ""

#: ../Doc/library/sys.rst:908
msgid ""
"The interpreter is about to execute a new line of code or re-execute the "
"condition of a loop.  The local trace function is called; *arg* is ``None``; "
"the return value specifies the new local trace function.  See :file:`Objects/"
"lnotab_notes.txt` for a detailed explanation of how this works."
msgstr ""

# ca2daa7d68f14a0d8b10a3729024d3df
#: ../Doc/library/sys.rst:915
msgid ""
"A function (or other code block) is about to return.  The local trace "
"function is called; *arg* is the value that will be returned, or ``None`` if "
"the event is caused by an exception being raised.  The trace function's "
"return value is ignored."
msgstr ""

#: ../Doc/library/sys.rst:921
msgid ""
"An exception has occurred.  The local trace function is called; *arg* is a "
"tuple ``(exception, value, traceback)``; the return value specifies the new "
"local trace function."
msgstr ""

#: ../Doc/library/sys.rst:926
msgid ""
"A C function is about to be called.  This may be an extension function or a "
"built-in.  *arg* is the C function object."
msgstr ""

# 6758e2bd98764251bdbf1255b875cf33
#: ../Doc/library/sys.rst:930
msgid "A C function has returned. *arg* is the C function object."
msgstr ""

# 5bf58de75d6b4c4f81e93b79dd6109c5
#: ../Doc/library/sys.rst:933
msgid "A C function has raised an exception.  *arg* is the C function object."
msgstr ""

#: ../Doc/library/sys.rst:935
msgid ""
"Note that as an exception is propagated down the chain of callers, an "
"``'exception'`` event is generated at each level."
msgstr ""

#: ../Doc/library/sys.rst:938
msgid "For more information on code and frame objects, refer to :ref:`types`."
msgstr ""

#: ../Doc/library/sys.rst:942
msgid ""
"The :func:`settrace` function is intended only for implementing debuggers, "
"profilers, coverage tools and the like.  Its behavior is part of the "
"implementation platform, rather than part of the language definition, and "
"thus may not be available in all Python implementations."
msgstr ""

# 21acc2661e4e4b0293c3acea7cdbc129
#: ../Doc/library/sys.rst:950
msgid ""
"Activate dumping of VM measurements using the Pentium timestamp counter, if "
"*on_flag* is true. Deactivate these dumps if *on_flag* is off. The function "
"is available only if Python was compiled with ``--with-tsc``. To understand "
"the output of this dump, read :file:`Python/ceval.c` in the Python sources."
msgstr ""

# 817072fdac954ea29086b288a700cbed
#: ../Doc/library/sys.rst:959
msgid ""
"This function is intimately bound to CPython implementation details and thus "
"not likely to be implemented elsewhere."
msgstr ""

# d12e6ca2c9214e82b55c144d9cad3afd
#: ../Doc/library/sys.rst:971
msgid ""
"File objects corresponding to the interpreter's standard input, output and "
"error streams.  ``stdin`` is used for all interpreter input except for "
"scripts but including calls to :func:`input` and :func:`raw_input`.  "
"``stdout`` is used for the output of :keyword:`print` and :term:`expression` "
"statements and for the prompts of :func:`input` and :func:`raw_input`. The "
"interpreter's own prompts and (almost all of) its error messages go to "
"``stderr``.  ``stdout`` and ``stderr`` needn't be built-in file objects: any "
"object is acceptable as long as it has a :meth:`write` method that takes a "
"string argument.  (Changing these objects doesn't affect the standard I/O "
"streams of processes executed by :func:`os.popen`, :func:`os.system` or the :"
"func:`exec\\*` family of functions in the :mod:`os` module.)"
msgstr ""

#: ../Doc/library/sys.rst:988
msgid ""
"These objects contain the original values of ``stdin``, ``stderr`` and "
"``stdout`` at the start of the program.  They are used during finalization, "
"and could be useful to print to the actual standard stream no matter if the "
"``sys.std*`` object has been redirected."
msgstr ""

#: ../Doc/library/sys.rst:993
msgid ""
"It can also be used to restore the actual files to known working file "
"objects in case they have been overwritten with a broken object.  However, "
"the preferred way to do this is to explicitly save the previous stream "
"before replacing it, and restore the saved object."
msgstr ""

#: ../Doc/library/sys.rst:1001
msgid ""
"A triple (repo, branch, version) representing the Subversion information of "
"the Python interpreter. *repo* is the name of the repository, ``'CPython'``. "
"*branch* is a string of one of the forms ``'trunk'``, ``'branches/name'`` or "
"``'tags/name'``. *version* is the output of ``svnversion``, if the "
"interpreter was built from a Subversion checkout; it contains the revision "
"number (range) and possibly a trailing 'M' if there were local "
"modifications. If the tree was exported (or svnversion was not available), "
"it is the revision of ``Include/patchlevel.h`` if the branch is a tag. "
"Otherwise, it is ``None``."
msgstr ""

# 046e0872428548c8aeba2fee93bbf256
#: ../Doc/library/sys.rst:1013
msgid ""
"Python is now `developed <http://docs.python.org/devguide/>`_ using "
"Mercurial.  In recent Python 2.7 bugfix releases, :data:`subversion` "
"therefore contains placeholder information.  It is removed in Python 3.3."
msgstr ""

#: ../Doc/library/sys.rst:1021
msgid ""
"When this variable is set to an integer value, it determines the maximum "
"number of levels of traceback information printed when an unhandled "
"exception occurs. The default is ``1000``.  When set to ``0`` or less, all "
"traceback information is suppressed and only the exception type and value "
"are printed."
msgstr ""

# fe88eb8cb5894fb3a1658a3a5789d8f7
#: ../Doc/library/sys.rst:1029
msgid ""
"A string containing the version number of the Python interpreter plus "
"additional information on the build number and compiler used.  This string "
"is displayed when the interactive interpreter is started.  Do not extract "
"version information out of it, rather, use :data:`version_info` and the "
"functions provided by the :mod:`platform` module."
msgstr ""

#: ../Doc/library/sys.rst:1038
msgid ""
"The C API version for this interpreter.  Programmers may find this useful "
"when debugging version conflicts between Python and extension modules."
msgstr ""

#: ../Doc/library/sys.rst:1046
msgid ""
"A tuple containing the five components of the version number: *major*, "
"*minor*, *micro*, *releaselevel*, and *serial*.  All values except "
"*releaselevel* are integers; the release level is ``'alpha'``, ``'beta'``, "
"``'candidate'``, or ``'final'``.  The ``version_info`` value corresponding "
"to the Python version 2.0 is ``(2, 0, 0, 'final', 0)``.  The components can "
"also be accessed by name, so ``sys.version_info[0]`` is equivalent to ``sys."
"version_info.major`` and so on."
msgstr ""

#: ../Doc/library/sys.rst:1061
msgid ""
"This is an implementation detail of the warnings framework; do not modify "
"this value.  Refer to the :mod:`warnings` module for more information on the "
"warnings framework."
msgstr ""

#: ../Doc/library/sys.rst:1068
msgid ""
"The version number used to form registry keys on Windows platforms. This is "
"stored as string resource 1000 in the Python DLL.  The value is normally the "
"first three characters of :const:`version`.  It is provided in the :mod:"
"`sys` module for informational purposes; modifying this value has no effect "
"on the registry keys used by Python. Availability: Windows."
msgstr ""

# 00c6f77281304f9bad2b271646ee1e8f
#: ../Doc/library/sys.rst:1075
msgid "Citations"
msgstr ""

# f13dd8d82872491b8a2c68eb1ba4d3cc
#: ../Doc/library/sys.rst:1076
msgid ""
"ISO/IEC 9899:1999.  \"Programming languages -- C.\"  A public draft of this "
"standard is available at http://www.open-std.org/jtc1/sc22/wg14/www/docs/"
"n1256.pdf ."
msgstr ""

#: ../Doc/library/sysconfig.rst:2
msgid ""
":mod:`sysconfig` --- Provide access to Python's configuration information"
msgstr ""

# 9d53a7da4a754309ac9325b88d1e2e7d
#: ../Doc/library/sysconfig.rst:13
msgid "**Source code:** :source:`Lib/sysconfig.py`"
msgstr ""

#: ../Doc/library/sysconfig.rst:17
msgid ""
"The :mod:`sysconfig` module provides access to Python's configuration "
"information like the list of installation paths and the configuration "
"variables relevant for the current platform."
msgstr ""

#: ../Doc/library/sysconfig.rst:22
msgid "Configuration variables"
msgstr ""

#: ../Doc/library/sysconfig.rst:24
msgid ""
"A Python distribution contains a :file:`Makefile` and a :file:`pyconfig.h` "
"header file that are necessary to build both the Python binary itself and "
"third-party C extensions compiled using :mod:`distutils`."
msgstr ""

#: ../Doc/library/sysconfig.rst:28
msgid ""
":mod:`sysconfig` puts all variables found in these files in a dictionary "
"that can be accessed using :func:`get_config_vars` or :func:`get_config_var`."
msgstr ""

#: ../Doc/library/sysconfig.rst:31
msgid "Notice that on Windows, it's a much smaller set."
msgstr ""

#: ../Doc/library/sysconfig.rst:35
msgid ""
"With no arguments, return a dictionary of all configuration variables "
"relevant for the current platform."
msgstr ""

#: ../Doc/library/sysconfig.rst:38
msgid ""
"With arguments, return a list of values that result from looking up each "
"argument in the configuration variable dictionary."
msgstr ""

#: ../Doc/library/sysconfig.rst:41
msgid "For each argument, if the value is not found, return ``None``."
msgstr ""

#: ../Doc/library/sysconfig.rst:46
msgid ""
"Return the value of a single variable *name*. Equivalent to ``get_config_vars"
"().get(name)``."
msgstr ""

#: ../Doc/library/sysconfig.rst:49 ../Doc/library/sysconfig.rst:141
msgid "If *name* is not found, return ``None``."
msgstr ""

#: ../Doc/library/sysconfig.rst:51
msgid "Example of usage::"
msgstr ""

#: ../Doc/library/sysconfig.rst:63
msgid "Installation paths"
msgstr ""

#: ../Doc/library/sysconfig.rst:65
msgid ""
"Python uses an installation scheme that differs depending on the platform "
"and on the installation options.  These schemes are stored in :mod:"
"`sysconfig` under unique identifiers based on the value returned by :const:"
"`os.name`."
msgstr ""

#: ../Doc/library/sysconfig.rst:69
msgid ""
"Every new component that is installed using :mod:`distutils` or a Distutils-"
"based system will follow the same scheme to copy its file in the right "
"places."
msgstr ""

#: ../Doc/library/sysconfig.rst:73
msgid "Python currently supports seven schemes:"
msgstr ""

#: ../Doc/library/sysconfig.rst:75
msgid ""
"*posix_prefix*: scheme for Posix platforms like Linux or Mac OS X.  This is "
"the default scheme used when Python or a component is installed."
msgstr ""

#: ../Doc/library/sysconfig.rst:77
msgid ""
"*posix_home*: scheme for Posix platforms used when a *home* option is used "
"upon installation.  This scheme is used when a component is installed "
"through Distutils with a specific home prefix."
msgstr ""

#: ../Doc/library/sysconfig.rst:80
msgid ""
"*posix_user*: scheme for Posix platforms used when a component is installed "
"through Distutils and the *user* option is used.  This scheme defines paths "
"located under the user home directory."
msgstr ""

#: ../Doc/library/sysconfig.rst:83
msgid "*nt*: scheme for NT platforms like Windows."
msgstr ""

#: ../Doc/library/sysconfig.rst:84
msgid "*nt_user*: scheme for NT platforms, when the *user* option is used."
msgstr ""

#: ../Doc/library/sysconfig.rst:85
msgid "*os2*: scheme for OS/2 platforms."
msgstr ""

#: ../Doc/library/sysconfig.rst:86
msgid "*os2_home*: scheme for OS/2 patforms, when the *user* option is used."
msgstr ""

#: ../Doc/library/sysconfig.rst:88
msgid ""
"Each scheme is itself composed of a series of paths and each path has a "
"unique identifier.  Python currently uses eight paths:"
msgstr ""

#: ../Doc/library/sysconfig.rst:91
msgid ""
"*stdlib*: directory containing the standard Python library files that are "
"not platform-specific."
msgstr ""

#: ../Doc/library/sysconfig.rst:93
msgid ""
"*platstdlib*: directory containing the standard Python library files that "
"are platform-specific."
msgstr ""

#: ../Doc/library/sysconfig.rst:95
msgid "*platlib*: directory for site-specific, platform-specific files."
msgstr ""

#: ../Doc/library/sysconfig.rst:96
msgid "*purelib*: directory for site-specific, non-platform-specific files."
msgstr ""

#: ../Doc/library/sysconfig.rst:97
msgid "*include*: directory for non-platform-specific header files."
msgstr ""

#: ../Doc/library/sysconfig.rst:98
msgid "*platinclude*: directory for platform-specific header files."
msgstr ""

#: ../Doc/library/sysconfig.rst:99
msgid "*scripts*: directory for script files."
msgstr ""

#: ../Doc/library/sysconfig.rst:100
msgid "*data*: directory for data files."
msgstr ""

#: ../Doc/library/sysconfig.rst:102
msgid ":mod:`sysconfig` provides some functions to determine these paths."
msgstr ""

#: ../Doc/library/sysconfig.rst:106
msgid ""
"Return a tuple containing all schemes currently supported in :mod:"
"`sysconfig`."
msgstr ""

#: ../Doc/library/sysconfig.rst:112
msgid ""
"Return a tuple containing all path names currently supported in :mod:"
"`sysconfig`."
msgstr ""

#: ../Doc/library/sysconfig.rst:118
msgid ""
"Return an installation path corresponding to the path *name*, from the "
"install scheme named *scheme*."
msgstr ""

#: ../Doc/library/sysconfig.rst:121
msgid ""
"*name* has to be a value from the list returned by :func:`get_path_names`."
msgstr ""

#: ../Doc/library/sysconfig.rst:123
msgid ""
":mod:`sysconfig` stores installation paths corresponding to each path name, "
"for each platform, with variables to be expanded.  For instance the *stdlib* "
"path for the *nt* scheme is: ``{base}/Lib``."
msgstr ""

#: ../Doc/library/sysconfig.rst:127
msgid ""
":func:`get_path` will use the variables returned by :func:`get_config_vars` "
"to expand the path.  All variables have default values for each platform so "
"one may call this function and get the default value."
msgstr ""

# 7e6e478f8a4f4e439c29f2f96a008bd1
#: ../Doc/library/sysconfig.rst:131
msgid ""
"If *scheme* is provided, it must be a value from the list returned by :func:"
"`get_scheme_names`.  Otherwise, the default scheme for the current platform "
"is used."
msgstr ""

#: ../Doc/library/sysconfig.rst:135
msgid ""
"If *vars* is provided, it must be a dictionary of variables that will update "
"the dictionary return by :func:`get_config_vars`."
msgstr ""

#: ../Doc/library/sysconfig.rst:138
msgid ""
"If *expand* is set to ``False``, the path will not be expanded using the "
"variables."
msgstr ""

#: ../Doc/library/sysconfig.rst:146
msgid ""
"Return a dictionary containing all installation paths corresponding to an "
"installation scheme. See :func:`get_path` for more information."
msgstr ""

#: ../Doc/library/sysconfig.rst:149
msgid ""
"If *scheme* is not provided, will use the default scheme for the current "
"platform."
msgstr ""

#: ../Doc/library/sysconfig.rst:152
msgid ""
"If *vars* is provided, it must be a dictionary of variables that will update "
"the dictionary used to expand the paths."
msgstr ""

#: ../Doc/library/sysconfig.rst:155
msgid "If *expand* is set to False, the paths will not be expanded."
msgstr ""

#: ../Doc/library/sysconfig.rst:157
msgid ""
"If *scheme* is not an existing scheme, :func:`get_paths` will raise a :exc:"
"`KeyError`."
msgstr ""

#: ../Doc/library/sysconfig.rst:162
msgid "Other functions"
msgstr ""

#: ../Doc/library/sysconfig.rst:166
msgid ""
"Return the ``MAJOR.MINOR`` Python version number as a string.  Similar to "
"``sys.version[:3]``."
msgstr ""

#: ../Doc/library/sysconfig.rst:172
msgid "Return a string that identifies the current platform."
msgstr ""

#: ../Doc/library/sysconfig.rst:174
msgid ""
"This is used mainly to distinguish platform-specific build directories and "
"platform-specific built distributions.  Typically includes the OS name and "
"version and the architecture (as supplied by :func:`os.uname`), although the "
"exact information included depends on the OS; e.g. for IRIX the architecture "
"isn't particularly important (IRIX only runs on SGI hardware), but for Linux "
"the kernel version isn't particularly important."
msgstr ""

#: ../Doc/library/sysconfig.rst:181
msgid "Examples of returned values:"
msgstr ""

#: ../Doc/library/sysconfig.rst:183
msgid "linux-i586"
msgstr ""

#: ../Doc/library/sysconfig.rst:184
msgid "linux-alpha (?)"
msgstr ""

#: ../Doc/library/sysconfig.rst:185
msgid "solaris-2.6-sun4u"
msgstr ""

#: ../Doc/library/sysconfig.rst:186
msgid "irix-5.3"
msgstr ""

#: ../Doc/library/sysconfig.rst:187
msgid "irix64-6.2"
msgstr ""

#: ../Doc/library/sysconfig.rst:189
msgid "Windows will return one of:"
msgstr ""

#: ../Doc/library/sysconfig.rst:191
msgid "win-amd64 (64bit Windows on AMD64 (aka x86_64, Intel64, EM64T, etc)"
msgstr ""

#: ../Doc/library/sysconfig.rst:192
msgid "win-ia64 (64bit Windows on Itanium)"
msgstr ""

#: ../Doc/library/sysconfig.rst:193
msgid "win32 (all others - specifically, sys.platform is returned)"
msgstr ""

#: ../Doc/library/sysconfig.rst:195
msgid "Mac OS X can return:"
msgstr ""

#: ../Doc/library/sysconfig.rst:197
msgid "macosx-10.6-ppc"
msgstr ""

#: ../Doc/library/sysconfig.rst:198
msgid "macosx-10.4-ppc64"
msgstr ""

#: ../Doc/library/sysconfig.rst:199
msgid "macosx-10.3-i386"
msgstr ""

#: ../Doc/library/sysconfig.rst:200
msgid "macosx-10.4-fat"
msgstr ""

#: ../Doc/library/sysconfig.rst:202
msgid ""
"For other non-POSIX platforms, currently just returns :data:`sys.platform`."
msgstr ""

#: ../Doc/library/sysconfig.rst:207
msgid ""
"Return ``True`` if the current Python installation was built from source."
msgstr ""

#: ../Doc/library/sysconfig.rst:212
msgid "Parse a :file:`config.h`\\-style file."
msgstr ""

#: ../Doc/library/sysconfig.rst:214
msgid ""
"*fp* is a file-like object pointing to the :file:`config.h`\\-like file."
msgstr ""

#: ../Doc/library/sysconfig.rst:216
msgid ""
"A dictionary containing name/value pairs is returned.  If an optional "
"dictionary is passed in as the second argument, it is used instead of a new "
"dictionary, and updated with the values read in the file."
msgstr ""

#: ../Doc/library/sysconfig.rst:223
msgid "Return the path of :file:`pyconfig.h`."
msgstr ""

#: ../Doc/library/syslog.rst:2
msgid ":mod:`syslog` --- Unix syslog library routines"
msgstr ""

#: ../Doc/library/syslog.rst:9
msgid ""
"This module provides an interface to the Unix ``syslog`` library routines. "
"Refer to the Unix manual pages for a detailed description of the ``syslog`` "
"facility."
msgstr ""

#: ../Doc/library/syslog.rst:13
msgid ""
"This module wraps the system ``syslog`` family of routines.  A pure Python "
"library that can speak to a syslog server is available in the :mod:`logging."
"handlers` module as :class:`SysLogHandler`."
msgstr ""

#: ../Doc/library/syslog.rst:23
msgid ""
"Send the string *message* to the system logger.  A trailing newline is added "
"if necessary.  Each message is tagged with a priority composed of a "
"*facility* and a *level*.  The optional *priority* argument, which defaults "
"to :const:`LOG_INFO`, determines the message priority.  If the facility is "
"not encoded in *priority* using logical-or (``LOG_INFO | LOG_USER``), the "
"value given in the :func:`openlog` call is used."
msgstr ""

#: ../Doc/library/syslog.rst:30
msgid ""
"If :func:`openlog` has not been called prior to the call to :func:`syslog`, "
"``openlog()`` will be called with no arguments."
msgstr ""

#: ../Doc/library/syslog.rst:36
msgid ""
"Logging options of subsequent :func:`syslog` calls can be set by calling :"
"func:`openlog`.  :func:`syslog` will call :func:`openlog` with no arguments "
"if the log is not currently open."
msgstr ""

# 1766f9dfbccb409daa7a679b519efc6e
#: ../Doc/library/syslog.rst:40
msgid ""
"The optional *ident* keyword argument is a string which is prepended to "
"every message, and defaults to ``sys.argv[0]`` with leading path components "
"stripped.  The optional *logoption* keyword argument (default is 0) is a bit "
"field -- see below for possible values to combine.  The optional *facility* "
"keyword argument (default is :const:`LOG_USER`) sets the default facility "
"for messages which do not have a facility explicitly encoded."
msgstr ""

#: ../Doc/library/syslog.rst:50
msgid ""
"Reset the syslog module values and call the system library ``closelog()``."
msgstr ""

#: ../Doc/library/syslog.rst:52
msgid ""
"This causes the module to behave as it does when initially imported.  For "
"example, :func:`openlog` will be called on the first :func:`syslog` call "
"(if :func:`openlog` hasn't already been called), and *ident* and other :func:"
"`openlog` parameters are reset to defaults."
msgstr ""

#: ../Doc/library/syslog.rst:60
msgid ""
"Set the priority mask to *maskpri* and return the previous mask value.  "
"Calls to :func:`syslog` with a priority level not set in *maskpri* are "
"ignored. The default is to log all priorities.  The function ``LOG_MASK(pri)"
"`` calculates the mask for the individual priority *pri*.  The function "
"``LOG_UPTO(pri)`` calculates the mask for all priorities up to and including "
"*pri*."
msgstr ""

#: ../Doc/library/syslog.rst:67
msgid "The module defines the following constants:"
msgstr ""

#: ../Doc/library/syslog.rst:70
msgid ""
":const:`LOG_EMERG`, :const:`LOG_ALERT`, :const:`LOG_CRIT`, :const:"
"`LOG_ERR`, :const:`LOG_WARNING`, :const:`LOG_NOTICE`, :const:`LOG_INFO`, :"
"const:`LOG_DEBUG`."
msgstr ""

# db86415660d74593870bb5cbbb5fb9ab
#: ../Doc/library/syslog.rst:75
msgid ""
":const:`LOG_KERN`, :const:`LOG_USER`, :const:`LOG_MAIL`, :const:"
"`LOG_DAEMON`, :const:`LOG_AUTH`, :const:`LOG_LPR`, :const:`LOG_NEWS`, :const:"
"`LOG_UUCP`, :const:`LOG_CRON`, :const:`LOG_SYSLOG` and :const:`LOG_LOCAL0` "
"to :const:`LOG_LOCAL7`."
msgstr ""

#: ../Doc/library/syslog.rst:81
msgid ""
":const:`LOG_PID`, :const:`LOG_CONS`, :const:`LOG_NDELAY`, :const:"
"`LOG_NOWAIT` and :const:`LOG_PERROR` if defined in ``<syslog.h>``."
msgstr ""

#: ../Doc/library/syslog.rst:89
msgid "Simple example"
msgstr ""

#: ../Doc/library/syslog.rst:91
msgid "A simple set of examples::"
msgstr ""

#: ../Doc/library/syslog.rst:99
msgid ""
"An example of setting some log options, these would include the process ID "
"in logged messages, and write the messages to the destination facility used "
"for mail logging::"
msgstr ""

#: ../Doc/library/tabnanny.rst:2
msgid ":mod:`tabnanny` --- Detection of ambiguous indentation"
msgstr ""

# 5e7a9d5289844c038ba409c75d4edaf8
#: ../Doc/library/tabnanny.rst:12
msgid "**Source code:** :source:`Lib/tabnanny.py`"
msgstr ""

#: ../Doc/library/tabnanny.rst:16
msgid ""
"For the time being this module is intended to be called as a script. However "
"it is possible to import it into an IDE and use the function :func:`check` "
"described below."
msgstr ""

#: ../Doc/library/tabnanny.rst:22
msgid ""
"The API provided by this module is likely to change in future releases; such "
"changes may not be backward compatible."
msgstr ""

# 1e9602d9d84e4592b701498143782377
#: ../Doc/library/tabnanny.rst:28
msgid ""
"If *file_or_dir* is a directory and not a symbolic link, then recursively "
"descend the directory tree named by *file_or_dir*, checking all :file:`.py` "
"files along the way.  If *file_or_dir* is an ordinary Python source file, it "
"is checked for whitespace related problems.  The diagnostic messages are "
"written to standard output using the print statement."
msgstr ""

#: ../Doc/library/tabnanny.rst:37
msgid ""
"Flag indicating whether to print verbose messages. This is incremented by "
"the ``-v`` option if called as a script."
msgstr ""

#: ../Doc/library/tabnanny.rst:43
msgid ""
"Flag indicating whether to print only the filenames of files containing "
"whitespace related problems.  This is set to true by the ``-q`` option if "
"called as a script."
msgstr ""

#: ../Doc/library/tabnanny.rst:50
msgid ""
"Raised by :func:`tokeneater` if detecting an ambiguous indent. Captured and "
"handled in :func:`check`."
msgstr ""

#: ../Doc/library/tabnanny.rst:56
msgid ""
"This function is used by :func:`check` as a callback parameter to the "
"function :func:`tokenize.tokenize`."
msgstr ""

#: ../Doc/library/tabnanny.rst:66
msgid "Lexical scanner for Python source code."
msgstr ""

#: ../Doc/library/tarfile.rst:2
msgid ":mod:`tarfile` --- Read and write tar archive files"
msgstr ""

# fd9ab70cfae8440795727c6d0d789395
#: ../Doc/library/tarfile.rst:13
msgid "**Source code:** :source:`Lib/tarfile.py`"
msgstr ""

# 773839b22d7346589f0cbac3fad23d8b
#: ../Doc/library/tarfile.rst:17
msgid ""
"The :mod:`tarfile` module makes it possible to read and write tar archives, "
"including those using gzip or bz2 compression. Use the :mod:`zipfile` module "
"to read or write :file:`.zip` files, or the higher-level functions in :ref:"
"`shutil <archiving-operations>`."
msgstr ""

#: ../Doc/library/tarfile.rst:22
msgid "Some facts and figures:"
msgstr ""

#: ../Doc/library/tarfile.rst:24
msgid "reads and writes :mod:`gzip` and :mod:`bz2` compressed archives."
msgstr ""

#: ../Doc/library/tarfile.rst:26
msgid "read/write support for the POSIX.1-1988 (ustar) format."
msgstr ""

#: ../Doc/library/tarfile.rst:28
msgid ""
"read/write support for the GNU tar format including *longname* and "
"*longlink* extensions, read-only support for the *sparse* extension."
msgstr ""

#: ../Doc/library/tarfile.rst:31
msgid "read/write support for the POSIX.1-2001 (pax) format."
msgstr ""

#: ../Doc/library/tarfile.rst:35
msgid ""
"handles directories, regular files, hardlinks, symbolic links, fifos, "
"character devices and block devices and is able to acquire and restore file "
"information like timestamp, access permissions and owner."
msgstr ""

#: ../Doc/library/tarfile.rst:42
msgid ""
"Return a :class:`TarFile` object for the pathname *name*. For detailed "
"information on :class:`TarFile` objects and the keyword arguments that are "
"allowed, see :ref:`tarfile-objects`."
msgstr ""

#: ../Doc/library/tarfile.rst:46
msgid ""
"*mode* has to be a string of the form ``'filemode[:compression]'``, it "
"defaults to ``'r'``. Here is a full list of mode combinations:"
msgstr ""

#: ../Doc/library/tarfile.rst:50 ../Doc/library/ttk.rst:581
msgid "mode"
msgstr ""

#: ../Doc/library/tarfile.rst:52
msgid "``'r' or 'r:*'``"
msgstr ""

#: ../Doc/library/tarfile.rst:52
msgid "Open for reading with transparent compression (recommended)."
msgstr ""

#: ../Doc/library/tarfile.rst:55
msgid "``'r:'``"
msgstr ""

#: ../Doc/library/tarfile.rst:55
msgid "Open for reading exclusively without compression."
msgstr ""

#: ../Doc/library/tarfile.rst:58
msgid "``'r:gz'``"
msgstr ""

#: ../Doc/library/tarfile.rst:58
msgid "Open for reading with gzip compression."
msgstr ""

#: ../Doc/library/tarfile.rst:60
msgid "``'r:bz2'``"
msgstr ""

#: ../Doc/library/tarfile.rst:60
msgid "Open for reading with bzip2 compression."
msgstr ""

#: ../Doc/library/tarfile.rst:62
msgid "``'a' or 'a:'``"
msgstr ""

#: ../Doc/library/tarfile.rst:62
msgid ""
"Open for appending with no compression. The file is created if it does not "
"exist."
msgstr ""

#: ../Doc/library/tarfile.rst:65
msgid "``'w' or 'w:'``"
msgstr ""

#: ../Doc/library/tarfile.rst:65
msgid "Open for uncompressed writing."
msgstr ""

#: ../Doc/library/tarfile.rst:67
msgid "``'w:gz'``"
msgstr ""

#: ../Doc/library/tarfile.rst:67
msgid "Open for gzip compressed writing."
msgstr ""

#: ../Doc/library/tarfile.rst:69
msgid "``'w:bz2'``"
msgstr ""

#: ../Doc/library/tarfile.rst:69
msgid "Open for bzip2 compressed writing."
msgstr ""

#: ../Doc/library/tarfile.rst:72
msgid ""
"Note that ``'a:gz'`` or ``'a:bz2'`` is not possible. If *mode* is not "
"suitable to open a certain (compressed) file for reading, :exc:`ReadError` "
"is raised. Use *mode* ``'r'`` to avoid this.  If a compression method is not "
"supported, :exc:`CompressionError` is raised."
msgstr ""

#: ../Doc/library/tarfile.rst:77
msgid ""
"If *fileobj* is specified, it is used as an alternative to a file object "
"opened for *name*. It is supposed to be at position 0."
msgstr ""

#: ../Doc/library/tarfile.rst:80
msgid ""
"For special purposes, there is a second format for *mode*: ``'filemode|"
"[compression]'``.  :func:`tarfile.open` will return a :class:`TarFile` "
"object that processes its data as a stream of blocks.  No random seeking "
"will be done on the file. If given, *fileobj* may be any object that has a :"
"meth:`read` or :meth:`write` method (depending on the *mode*). *bufsize* "
"specifies the blocksize and defaults to ``20 * 512`` bytes. Use this variant "
"in combination with e.g. ``sys.stdin``, a socket file object or a tape "
"device. However, such a :class:`TarFile` object is limited in that it does "
"not allow to be accessed randomly, see :ref:`tar-examples`.  The currently "
"possible modes:"
msgstr ""

#: ../Doc/library/tarfile.rst:92 ../Doc/library/turtle.rst:1716
msgid "Mode"
msgstr ""

#: ../Doc/library/tarfile.rst:94
msgid "``'r|*'``"
msgstr ""

#: ../Doc/library/tarfile.rst:94
msgid "Open a *stream* of tar blocks for reading with transparent compression."
msgstr ""

#: ../Doc/library/tarfile.rst:97
msgid "``'r|'``"
msgstr ""

#: ../Doc/library/tarfile.rst:97
msgid "Open a *stream* of uncompressed tar blocks for reading."
msgstr ""

#: ../Doc/library/tarfile.rst:100
msgid "``'r|gz'``"
msgstr ""

#: ../Doc/library/tarfile.rst:100
msgid "Open a gzip compressed *stream* for reading."
msgstr ""

#: ../Doc/library/tarfile.rst:103
msgid "``'r|bz2'``"
msgstr ""

#: ../Doc/library/tarfile.rst:103
msgid "Open a bzip2 compressed *stream* for reading."
msgstr ""

#: ../Doc/library/tarfile.rst:106
msgid "``'w|'``"
msgstr ""

#: ../Doc/library/tarfile.rst:106
msgid "Open an uncompressed *stream* for writing."
msgstr ""

#: ../Doc/library/tarfile.rst:108
msgid "``'w|gz'``"
msgstr ""

#: ../Doc/library/tarfile.rst:108
msgid "Open an gzip compressed *stream* for writing."
msgstr ""

#: ../Doc/library/tarfile.rst:111
msgid "``'w|bz2'``"
msgstr ""

#: ../Doc/library/tarfile.rst:111
msgid "Open an bzip2 compressed *stream* for writing."
msgstr ""

#: ../Doc/library/tarfile.rst:118
msgid ""
"Class for reading and writing tar archives. Do not use this class directly, "
"better use :func:`tarfile.open` instead. See :ref:`tarfile-objects`."
msgstr ""

#: ../Doc/library/tarfile.rst:124
msgid ""
"Return :const:`True` if *name* is a tar archive file, that the :mod:"
"`tarfile` module can read."
msgstr ""

# 89f6d2643ffd4d58ab0bbd8febc7459e
#: ../Doc/library/tarfile.rst:130
msgid ""
"Class for limited access to tar archives with a :mod:`zipfile`\\ -like "
"interface. Please consult the documentation of the :mod:`zipfile` module for "
"more details. *compression* must be one of the following constants:"
msgstr ""

# 8df8d324145f4e6d8c90229bf5e3d0a6
#: ../Doc/library/tarfile.rst:137
msgid "Constant for an uncompressed tar archive."
msgstr ""

# b3b8ba144f2c4f2c9e51ead0cf7b1bbd
#: ../Doc/library/tarfile.rst:142
msgid "Constant for a :mod:`gzip` compressed tar archive."
msgstr ""

#: ../Doc/library/tarfile.rst:151
msgid "Base class for all :mod:`tarfile` exceptions."
msgstr ""

#: ../Doc/library/tarfile.rst:156
msgid ""
"Is raised when a tar archive is opened, that either cannot be handled by "
"the :mod:`tarfile` module or is somehow invalid."
msgstr ""

#: ../Doc/library/tarfile.rst:162
msgid ""
"Is raised when a compression method is not supported or when the data cannot "
"be decoded properly."
msgstr ""

#: ../Doc/library/tarfile.rst:168
msgid ""
"Is raised for the limitations that are typical for stream-like :class:"
"`TarFile` objects."
msgstr ""

#: ../Doc/library/tarfile.rst:174
msgid ""
"Is raised for *non-fatal* errors when using :meth:`TarFile.extract`, but "
"only if :attr:`TarFile.errorlevel`\\ ``== 2``."
msgstr ""

#: ../Doc/library/tarfile.rst:180
msgid "Is raised by :meth:`TarInfo.frombuf` if the buffer it gets is invalid."
msgstr ""

#: ../Doc/library/tarfile.rst:185
msgid ""
"Each of the following constants defines a tar archive format that the :mod:"
"`tarfile` module is able to create. See section :ref:`tar-formats` for "
"details."
msgstr ""

#: ../Doc/library/tarfile.rst:192
msgid "POSIX.1-1988 (ustar) format."
msgstr ""

#: ../Doc/library/tarfile.rst:197
msgid "GNU tar format."
msgstr ""

#: ../Doc/library/tarfile.rst:202
msgid "POSIX.1-2001 (pax) format."
msgstr ""

#: ../Doc/library/tarfile.rst:207
msgid ""
"The default format for creating archives. This is currently :const:"
"`GNU_FORMAT`."
msgstr ""

#: ../Doc/library/tarfile.rst:210
msgid "The following variables are available on module level:"
msgstr ""

# e7fd14e99dd34315bb3d6899633c2258
#: ../Doc/library/tarfile.rst:215
msgid ""
"The default character encoding i.e. the value from either :func:`sys."
"getfilesystemencoding` or :func:`sys.getdefaultencoding`."
msgstr ""

#: ../Doc/library/tarfile.rst:222
msgid "Documentation of the :mod:`zipfile` standard module."
msgstr ""

#: ../Doc/library/tarfile.rst:225
msgid "Documentation for tar archive files, including GNU tar extensions."
msgstr ""

#: ../Doc/library/tarfile.rst:231
msgid "TarFile Objects"
msgstr ""

#: ../Doc/library/tarfile.rst:233
msgid ""
"The :class:`TarFile` object provides an interface to a tar archive. A tar "
"archive is a sequence of blocks. An archive member (a stored file) is made "
"up of a header block followed by data blocks. It is possible to store a file "
"in a tar archive several times. Each archive member is represented by a :"
"class:`TarInfo` object, see :ref:`tarinfo-objects` for details."
msgstr ""

#: ../Doc/library/tarfile.rst:239
msgid ""
"A :class:`TarFile` object can be used as a context manager in a :keyword:"
"`with` statement. It will automatically be closed when the block is "
"completed. Please note that in the event of an exception an archive opened "
"for writing will not be finalized; only the internally used file object will "
"be closed. See the :ref:`tar-examples` section for a use case."
msgstr ""

#: ../Doc/library/tarfile.rst:250
msgid ""
"All following arguments are optional and can be accessed as instance "
"attributes as well."
msgstr ""

#: ../Doc/library/tarfile.rst:253
msgid ""
"*name* is the pathname of the archive. It can be omitted if *fileobj* is "
"given. In this case, the file object's :attr:`name` attribute is used if it "
"exists."
msgstr ""

#: ../Doc/library/tarfile.rst:256
msgid ""
"*mode* is either ``'r'`` to read from an existing archive, ``'a'`` to append "
"data to an existing file or ``'w'`` to create a new file overwriting an "
"existing one."
msgstr ""

#: ../Doc/library/tarfile.rst:260
msgid ""
"If *fileobj* is given, it is used for reading or writing data. If it can be "
"determined, *mode* is overridden by *fileobj*'s mode. *fileobj* will be used "
"from position 0."
msgstr ""

#: ../Doc/library/tarfile.rst:266
msgid "*fileobj* is not closed, when :class:`TarFile` is closed."
msgstr ""

#: ../Doc/library/tarfile.rst:268
msgid ""
"*format* controls the archive format. It must be one of the constants :const:"
"`USTAR_FORMAT`, :const:`GNU_FORMAT` or :const:`PAX_FORMAT` that are defined "
"at module level."
msgstr ""

#: ../Doc/library/tarfile.rst:274
msgid ""
"The *tarinfo* argument can be used to replace the default :class:`TarInfo` "
"class with a different one."
msgstr ""

#: ../Doc/library/tarfile.rst:279
msgid ""
"If *dereference* is :const:`False`, add symbolic and hard links to the "
"archive. If it is :const:`True`, add the content of the target files to the "
"archive. This has no effect on systems that do not support symbolic links."
msgstr ""

#: ../Doc/library/tarfile.rst:283
msgid ""
"If *ignore_zeros* is :const:`False`, treat an empty block as the end of the "
"archive. If it is :const:`True`, skip empty (and invalid) blocks and try to "
"get as many members as possible. This is only useful for reading "
"concatenated or damaged archives."
msgstr ""

#: ../Doc/library/tarfile.rst:287
msgid ""
"*debug* can be set from ``0`` (no debug messages) up to ``3`` (all debug "
"messages). The messages are written to ``sys.stderr``."
msgstr ""

#: ../Doc/library/tarfile.rst:290
msgid ""
"If *errorlevel* is ``0``, all errors are ignored when using :meth:`TarFile."
"extract`. Nevertheless, they appear as error messages in the debug output, "
"when debugging is enabled.  If ``1``, all *fatal* errors are raised as :exc:"
"`OSError` or :exc:`IOError` exceptions. If ``2``, all *non-fatal* errors are "
"raised as :exc:`TarError` exceptions as well."
msgstr ""

# 549efd37a3a945068e969234792b5f02
#: ../Doc/library/tarfile.rst:296
msgid ""
"The *encoding* and *errors* arguments control the way strings are converted "
"to unicode objects and vice versa. The default settings will work for most "
"users. See section :ref:`tar-unicode` for in-depth information."
msgstr ""

# a195836d64d343c8a58b1417c0daff84
#: ../Doc/library/tarfile.rst:302
msgid ""
"The *pax_headers* argument is an optional dictionary of unicode strings "
"which will be added as a pax global header if *format* is :const:"
"`PAX_FORMAT`."
msgstr ""

#: ../Doc/library/tarfile.rst:310
msgid ""
"Alternative constructor. The :func:`tarfile.open` function is actually a "
"shortcut to this classmethod."
msgstr ""

#: ../Doc/library/tarfile.rst:316
msgid ""
"Return a :class:`TarInfo` object for member *name*. If *name* can not be "
"found in the archive, :exc:`KeyError` is raised."
msgstr ""

#: ../Doc/library/tarfile.rst:321
msgid ""
"If a member occurs more than once in the archive, its last occurrence is "
"assumed to be the most up-to-date version."
msgstr ""

#: ../Doc/library/tarfile.rst:327
msgid ""
"Return the members of the archive as a list of :class:`TarInfo` objects. The "
"list has the same order as the members in the archive."
msgstr ""

#: ../Doc/library/tarfile.rst:333
msgid ""
"Return the members as a list of their names. It has the same order as the "
"list returned by :meth:`getmembers`."
msgstr ""

#: ../Doc/library/tarfile.rst:339
msgid ""
"Print a table of contents to ``sys.stdout``. If *verbose* is :const:`False`, "
"only the names of the members are printed. If it is :const:`True`, output "
"similar to that of :program:`ls -l` is produced."
msgstr ""

#: ../Doc/library/tarfile.rst:346
msgid ""
"Return the next member of the archive as a :class:`TarInfo` object, when :"
"class:`TarFile` is opened for reading. Return :const:`None` if there is no "
"more available."
msgstr ""

#: ../Doc/library/tarfile.rst:353
msgid ""
"Extract all members from the archive to the current working directory or "
"directory *path*. If optional *members* is given, it must be a subset of the "
"list returned by :meth:`getmembers`. Directory information like owner, "
"modification time and permissions are set after all members have been "
"extracted. This is done to work around two problems: A directory's "
"modification time is reset each time a file is created in it. And, if a "
"directory's permissions do not allow writing, extracting files to it will "
"fail."
msgstr ""

#: ../Doc/library/tarfile.rst:363 ../Doc/library/zipfile.rst:226
msgid ""
"Never extract archives from untrusted sources without prior inspection. It "
"is possible that files are created outside of *path*, e.g. members that have "
"absolute filenames starting with ``\"/\"`` or filenames with two dots ``\".."
"\"``."
msgstr ""

#: ../Doc/library/tarfile.rst:373
msgid ""
"Extract a member from the archive to the current working directory, using "
"its full name. Its file information is extracted as accurately as possible. "
"*member* may be a filename or a :class:`TarInfo` object. You can specify a "
"different directory using *path*."
msgstr ""

#: ../Doc/library/tarfile.rst:380
msgid ""
"The :meth:`extract` method does not take care of several extraction issues. "
"In most cases you should consider using the :meth:`extractall` method."
msgstr ""

#: ../Doc/library/tarfile.rst:385
msgid "See the warning for :meth:`extractall`."
msgstr ""

#: ../Doc/library/tarfile.rst:390
msgid ""
"Extract a member from the archive as a file object. *member* may be a "
"filename or a :class:`TarInfo` object. If *member* is a regular file, a file-"
"like object is returned. If *member* is a link, a file-like object is "
"constructed from the link's target. If *member* is none of the above, :const:"
"`None` is returned."
msgstr ""

#: ../Doc/library/tarfile.rst:397
msgid ""
"The file-like object is read-only.  It provides the methods :meth:`read`, :"
"meth:`readline`, :meth:`readlines`, :meth:`seek`, :meth:`tell`, and :meth:"
"`close`, and also supports iteration over its lines."
msgstr ""

# 91db964af8f14e71a3ff23afb3fd55f1
#: ../Doc/library/tarfile.rst:404
msgid ""
"Add the file *name* to the archive. *name* may be any type of file "
"(directory, fifo, symbolic link, etc.). If given, *arcname* specifies an "
"alternative name for the file in the archive. Directories are added "
"recursively by default. This can be avoided by setting *recursive* to :const:"
"`False`. If *exclude* is given it must be a function that takes one filename "
"argument and returns a boolean value. Depending on this value the respective "
"file is either excluded (:const:`True`) or added (:const:`False`). If "
"*filter* is specified it must be a function that takes a :class:`TarInfo` "
"object argument and returns the changed :class:`TarInfo` object. If it "
"instead returns :const:`None` the :class:`TarInfo` object will be excluded "
"from the archive. See :ref:`tar-examples` for an example."
msgstr ""

#: ../Doc/library/tarfile.rst:431
msgid ""
"Add the :class:`TarInfo` object *tarinfo* to the archive. If *fileobj* is "
"given, ``tarinfo.size`` bytes are read from it and added to the archive.  "
"You can create :class:`TarInfo` objects using :meth:`gettarinfo`."
msgstr ""

#: ../Doc/library/tarfile.rst:437
msgid ""
"On Windows platforms, *fileobj* should always be opened with mode ``'rb'`` "
"to avoid irritation about the file size."
msgstr ""

#: ../Doc/library/tarfile.rst:443
msgid ""
"Create a :class:`TarInfo` object for either the file *name* or the file "
"object *fileobj* (using :func:`os.fstat` on its file descriptor).  You can "
"modify some of the :class:`TarInfo`'s attributes before you add it using :"
"meth:`addfile`. If given, *arcname* specifies an alternative name for the "
"file in the archive."
msgstr ""

#: ../Doc/library/tarfile.rst:451
msgid ""
"Close the :class:`TarFile`. In write mode, two finishing zero blocks are "
"appended to the archive."
msgstr ""

# c61b341d5b4c47729827c5f253b48313
#: ../Doc/library/tarfile.rst:457
msgid ""
"Setting this to :const:`True` is equivalent to setting the :attr:`format` "
"attribute to :const:`USTAR_FORMAT`, :const:`False` is equivalent to :const:"
"`GNU_FORMAT`."
msgstr ""

#: ../Doc/library/tarfile.rst:470
msgid "A dictionary containing key-value pairs of pax global headers."
msgstr ""

#: ../Doc/library/tarfile.rst:478
msgid "TarInfo Objects"
msgstr ""

#: ../Doc/library/tarfile.rst:480
msgid ""
"A :class:`TarInfo` object represents one member in a :class:`TarFile`. Aside "
"from storing all required attributes of a file (like file type, size, time, "
"permissions, owner etc.), it provides some useful methods to determine its "
"type. It does *not* contain the file's data itself."
msgstr ""

#: ../Doc/library/tarfile.rst:485
msgid ""
":class:`TarInfo` objects are returned by :class:`TarFile`'s methods :meth:"
"`getmember`, :meth:`getmembers` and :meth:`gettarinfo`."
msgstr ""

#: ../Doc/library/tarfile.rst:491
msgid "Create a :class:`TarInfo` object."
msgstr ""

#: ../Doc/library/tarfile.rst:496
msgid "Create and return a :class:`TarInfo` object from string buffer *buf*."
msgstr ""

#: ../Doc/library/tarfile.rst:504
msgid ""
"Read the next member from the :class:`TarFile` object *tarfile* and return "
"it as a :class:`TarInfo` object."
msgstr ""

#: ../Doc/library/tarfile.rst:512
msgid ""
"Create a string buffer from a :class:`TarInfo` object. For information on "
"the arguments see the constructor of the :class:`TarFile` class."
msgstr ""

#: ../Doc/library/tarfile.rst:518
msgid "A ``TarInfo`` object has the following public data attributes:"
msgstr ""

#: ../Doc/library/tarfile.rst:523
msgid "Name of the archive member."
msgstr ""

#: ../Doc/library/tarfile.rst:528
msgid "Size in bytes."
msgstr ""

#: ../Doc/library/tarfile.rst:538
msgid "Permission bits."
msgstr ""

#: ../Doc/library/tarfile.rst:543
msgid ""
"File type.  *type* is usually one of these constants: :const:`REGTYPE`, :"
"const:`AREGTYPE`, :const:`LNKTYPE`, :const:`SYMTYPE`, :const:`DIRTYPE`, :"
"const:`FIFOTYPE`, :const:`CONTTYPE`, :const:`CHRTYPE`, :const:`BLKTYPE`, :"
"const:`GNUTYPE_SPARSE`.  To determine the type of a :class:`TarInfo` object "
"more conveniently, use the ``is_*()`` methods below."
msgstr ""

#: ../Doc/library/tarfile.rst:552
msgid ""
"Name of the target file name, which is only present in :class:`TarInfo` "
"objects of type :const:`LNKTYPE` and :const:`SYMTYPE`."
msgstr ""

#: ../Doc/library/tarfile.rst:558
msgid "User ID of the user who originally stored this member."
msgstr ""

#: ../Doc/library/tarfile.rst:563
msgid "Group ID of the user who originally stored this member."
msgstr ""

#: ../Doc/library/tarfile.rst:568
msgid "User name."
msgstr ""

#: ../Doc/library/tarfile.rst:573
msgid "Group name."
msgstr ""

#: ../Doc/library/tarfile.rst:578
msgid ""
"A dictionary containing key-value pairs of an associated pax extended header."
msgstr ""

#: ../Doc/library/tarfile.rst:582
msgid "A :class:`TarInfo` object also provides some convenient query methods:"
msgstr ""

#: ../Doc/library/tarfile.rst:587
msgid "Return :const:`True` if the :class:`Tarinfo` object is a regular file."
msgstr ""

#: ../Doc/library/tarfile.rst:592
msgid "Same as :meth:`isfile`."
msgstr ""

#: ../Doc/library/tarfile.rst:597
msgid "Return :const:`True` if it is a directory."
msgstr ""

#: ../Doc/library/tarfile.rst:602
msgid "Return :const:`True` if it is a symbolic link."
msgstr ""

#: ../Doc/library/tarfile.rst:607
msgid "Return :const:`True` if it is a hard link."
msgstr ""

#: ../Doc/library/tarfile.rst:612
msgid "Return :const:`True` if it is a character device."
msgstr ""

#: ../Doc/library/tarfile.rst:617
msgid "Return :const:`True` if it is a block device."
msgstr ""

#: ../Doc/library/tarfile.rst:622
msgid "Return :const:`True` if it is a FIFO."
msgstr ""

#: ../Doc/library/tarfile.rst:627
msgid ""
"Return :const:`True` if it is one of character device, block device or FIFO."
msgstr ""

#: ../Doc/library/tarfile.rst:635
msgid "How to extract an entire tar archive to the current working directory::"
msgstr ""

#: ../Doc/library/tarfile.rst:642
msgid ""
"How to extract a subset of a tar archive with :meth:`TarFile.extractall` "
"using a generator function instead of a list::"
msgstr ""

#: ../Doc/library/tarfile.rst:657
msgid "How to create an uncompressed tar archive from a list of filenames::"
msgstr ""

#: ../Doc/library/tarfile.rst:665
msgid "The same example using the :keyword:`with` statement::"
msgstr ""

#: ../Doc/library/tarfile.rst:672
msgid ""
"How to read a gzip compressed tar archive and display some member "
"information::"
msgstr ""

#: ../Doc/library/tarfile.rst:686
msgid ""
"How to create an archive and reset the user information using the *filter* "
"parameter in :meth:`TarFile.add`::"
msgstr ""

#: ../Doc/library/tarfile.rst:702
msgid "Supported tar formats"
msgstr ""

#: ../Doc/library/tarfile.rst:704
msgid ""
"There are three tar formats that can be created with the :mod:`tarfile` "
"module:"
msgstr ""

#: ../Doc/library/tarfile.rst:706
msgid ""
"The POSIX.1-1988 ustar format (:const:`USTAR_FORMAT`). It supports filenames "
"up to a length of at best 256 characters and linknames up to 100 characters. "
"The maximum file size is 8 gigabytes. This is an old and limited but widely "
"supported format."
msgstr ""

#: ../Doc/library/tarfile.rst:711
msgid ""
"The GNU tar format (:const:`GNU_FORMAT`). It supports long filenames and "
"linknames, files bigger than 8 gigabytes and sparse files. It is the de "
"facto standard on GNU/Linux systems. :mod:`tarfile` fully supports the GNU "
"tar extensions for long names, sparse file support is read-only."
msgstr ""

#: ../Doc/library/tarfile.rst:716
msgid ""
"The POSIX.1-2001 pax format (:const:`PAX_FORMAT`). It is the most flexible "
"format with virtually no limits. It supports long filenames and linknames, "
"large files and stores pathnames in a portable way. However, not all tar "
"implementations today are able to handle pax archives properly."
msgstr ""

#: ../Doc/library/tarfile.rst:721
msgid ""
"The *pax* format is an extension to the existing *ustar* format. It uses "
"extra headers for information that cannot be stored otherwise. There are two "
"flavours of pax headers: Extended headers only affect the subsequent file "
"header, global headers are valid for the complete archive and affect all "
"following files. All the data in a pax header is encoded in *UTF-8* for "
"portability reasons."
msgstr ""

#: ../Doc/library/tarfile.rst:727
msgid ""
"There are some more variants of the tar format which can be read, but not "
"created:"
msgstr ""

#: ../Doc/library/tarfile.rst:730
msgid ""
"The ancient V7 format. This is the first tar format from Unix Seventh "
"Edition, storing only regular files and directories. Names must not be "
"longer than 100 characters, there is no user/group name information. Some "
"archives have miscalculated header checksums in case of fields with non-"
"ASCII characters."
msgstr ""

#: ../Doc/library/tarfile.rst:735
msgid ""
"The SunOS tar extended format. This format is a variant of the POSIX.1-2001 "
"pax format, but is not compatible."
msgstr ""

#: ../Doc/library/tarfile.rst:741
msgid "Unicode issues"
msgstr ""

# 02f151f7cd5c4588bbc6c2652cdb4a9c
#: ../Doc/library/tarfile.rst:743
msgid ""
"The tar format was originally conceived to make backups on tape drives with "
"the main focus on preserving file system information. Nowadays tar archives "
"are commonly used for file distribution and exchanging archives over "
"networks. One problem of the original format (that all other formats are "
"merely variants of) is that there is no concept of supporting different "
"character encodings. For example, an ordinary tar archive created on a "
"*UTF-8* system cannot be read correctly on a *Latin-1* system if it contains "
"non-ASCII characters. Names (i.e. filenames, linknames, user/group names) "
"containing these characters will appear damaged.  Unfortunately, there is no "
"way to autodetect the encoding of an archive."
msgstr ""

# 5be1f0ba8abb4ae6a45b0adebf665870
#: ../Doc/library/tarfile.rst:754
msgid ""
"The pax format was designed to solve this problem. It stores non-ASCII names "
"using the universal character encoding *UTF-8*. When a pax archive is read, "
"these *UTF-8* names are converted to the encoding of the local file system."
msgstr ""

# 04e3ef4a1f1445d9acc23469babf68e7
#: ../Doc/library/tarfile.rst:758
msgid ""
"The details of unicode conversion are controlled by the *encoding* and "
"*errors* keyword arguments of the :class:`TarFile` class."
msgstr ""

# 2dcebe36bdc049dcb88d2a6981be5825
#: ../Doc/library/tarfile.rst:761
msgid ""
"The default value for *encoding* is the local character encoding. It is "
"deduced from :func:`sys.getfilesystemencoding` and :func:`sys."
"getdefaultencoding`. In read mode, *encoding* is used exclusively to convert "
"unicode names from a pax archive to strings in the local character encoding. "
"In write mode, the use of *encoding* depends on the chosen archive format. "
"In case of :const:`PAX_FORMAT`, input names that contain non-ASCII "
"characters need to be decoded before being stored as *UTF-8* strings. The "
"other formats do not make use of *encoding* unless unicode objects are used "
"as input names. These are converted to 8-bit character strings before they "
"are added to the archive."
msgstr ""

# 9efc8e5130e8446a8fe66d048e27761e
#: ../Doc/library/tarfile.rst:771
msgid ""
"The *errors* argument defines how characters are treated that cannot be "
"converted to or from *encoding*. Possible values are listed in section :ref:"
"`codec-base-classes`. In read mode, there is an additional scheme "
"``'utf-8'`` which means that bad characters are replaced by their *UTF-8* "
"representation. This is the default scheme. In write mode the default value "
"for *errors* is ``'strict'`` to ensure that name information is not altered "
"unnoticed."
msgstr ""

#: ../Doc/library/telnetlib.rst:2
msgid ":mod:`telnetlib` --- Telnet client"
msgstr ""

# 1d986dcc536046fc97790433a7a58987
#: ../Doc/library/telnetlib.rst:11
msgid "**Source code:** :source:`Lib/telnetlib.py`"
msgstr ""

#: ../Doc/library/telnetlib.rst:15
msgid ""
"The :mod:`telnetlib` module provides a :class:`Telnet` class that implements "
"the Telnet protocol.  See :rfc:`854` for details about the protocol. In "
"addition, it provides symbolic constants for the protocol characters (see "
"below), and for the telnet options. The symbolic names of the telnet options "
"follow the definitions in ``arpa/telnet.h``, with the leading ``TELOPT_`` "
"removed. For symbolic names of options which are traditionally not included "
"in ``arpa/telnet.h``, see the module source itself."
msgstr ""

#: ../Doc/library/telnetlib.rst:23
msgid ""
"The symbolic constants for the telnet commands are: IAC, DONT, DO, WONT, "
"WILL, SE (Subnegotiation End), NOP (No Operation), DM (Data Mark), BRK "
"(Break), IP (Interrupt process), AO (Abort output), AYT (Are You There), EC "
"(Erase Character), EL (Erase Line), GA (Go Ahead), SB (Subnegotiation Begin)."
msgstr ""

#: ../Doc/library/telnetlib.rst:31
msgid ""
":class:`Telnet` represents a connection to a Telnet server. The instance is "
"initially not connected by default; the :meth:`open` method must be used to "
"establish a connection.  Alternatively, the host name and optional port "
"number can be passed to the constructor, to, in which case the connection to "
"the server will be established before the constructor returns.  The optional "
"*timeout* parameter specifies a timeout in seconds for blocking operations "
"like the connection attempt (if not specified, the global default timeout "
"setting will be used)."
msgstr ""

#: ../Doc/library/telnetlib.rst:40
msgid "Do not reopen an already connected instance."
msgstr ""

#: ../Doc/library/telnetlib.rst:42
msgid ""
"This class has many :meth:`read_\\*` methods.  Note that some of them  "
"raise :exc:`EOFError` when the end of the connection is read, because they "
"can return an empty string for other reasons.  See the individual "
"descriptions below."
msgstr ""

#: ../Doc/library/telnetlib.rst:53
msgid "Definition of the Telnet protocol."
msgstr ""

#: ../Doc/library/telnetlib.rst:59
msgid "Telnet Objects"
msgstr ""

#: ../Doc/library/telnetlib.rst:61
msgid ":class:`Telnet` instances have the following methods:"
msgstr ""

# 33a056e95ef44ece94b45541751e77a1
#: ../Doc/library/telnetlib.rst:66
msgid ""
"Read until a given string, *expected*, is encountered or until *timeout* "
"seconds have passed."
msgstr ""

# c2d482de155045e5bdb6d086c2e45bb2
#: ../Doc/library/telnetlib.rst:69
msgid ""
"When no match is found, return whatever is available instead, possibly the "
"empty string.  Raise :exc:`EOFError` if the connection is closed and no "
"cooked data is available."
msgstr ""

# 684e5f9389d941c69ea0c2a852bcb562
#: ../Doc/library/telnetlib.rst:76
msgid "Read all data until EOF; block until connection closed."
msgstr ""

# 4caa29d0f48346b4b3447775ee5879b7
#: ../Doc/library/telnetlib.rst:81
msgid ""
"Read at least one byte of cooked data unless EOF is hit. Return ``''`` if "
"EOF is hit.  Block if no data is immediately available."
msgstr ""

#: ../Doc/library/telnetlib.rst:87
msgid "Read everything that can be without blocking in I/O (eager)."
msgstr ""

# aaf82a9b459a457bac697e99ca483f3b
# 31e7dcfeff5f4ce1bfbbfc2efe9ee5d5
#: ../Doc/library/telnetlib.rst:89 ../Doc/library/telnetlib.rst:98
msgid ""
"Raise :exc:`EOFError` if connection closed and no cooked data available.  "
"Return ``''`` if no cooked data available otherwise. Do not block unless in "
"the midst of an IAC sequence."
msgstr ""

#: ../Doc/library/telnetlib.rst:96
msgid "Read readily available data."
msgstr ""

#: ../Doc/library/telnetlib.rst:105
msgid "Process and return data already in the queues (lazy)."
msgstr ""

# b71bd619cb1449b3974f4d9115ebdbda
#: ../Doc/library/telnetlib.rst:107
msgid ""
"Raise :exc:`EOFError` if connection closed and no data available. Return "
"``''`` if no cooked data available otherwise.  Do not block unless in the "
"midst of an IAC sequence."
msgstr ""

#: ../Doc/library/telnetlib.rst:114
msgid "Return any data available in the cooked queue (very lazy)."
msgstr ""

# 4056643b7bb54937b6f785334641a4ce
#: ../Doc/library/telnetlib.rst:116
msgid ""
"Raise :exc:`EOFError` if connection closed and no data available. Return "
"``''`` if no cooked data available otherwise.  This method never blocks."
msgstr ""

#: ../Doc/library/telnetlib.rst:122
msgid ""
"Return the data collected between a SB/SE pair (suboption begin/end). The "
"callback should access these data when it was invoked with a ``SE`` command. "
"This method never blocks."
msgstr ""

#: ../Doc/library/telnetlib.rst:131
msgid ""
"Connect to a host. The optional second argument is the port number, which "
"defaults to the standard Telnet port (23). The optional *timeout* parameter "
"specifies a timeout in seconds for blocking operations like the connection "
"attempt (if not specified, the global default timeout setting will be used)."
msgstr ""

#: ../Doc/library/telnetlib.rst:136
msgid "Do not try to reopen an already connected instance."
msgstr ""

#: ../Doc/library/telnetlib.rst:144
msgid ""
"Print a debug message when the debug level is ``>`` 0. If extra arguments "
"are present, they are substituted in the message using the standard string "
"formatting operator."
msgstr ""

#: ../Doc/library/telnetlib.rst:151
msgid ""
"Set the debug level.  The higher the value of *debuglevel*, the more debug "
"output you get (on ``sys.stdout``)."
msgstr ""

#: ../Doc/library/telnetlib.rst:162
msgid "Return the socket object used internally."
msgstr ""

#: ../Doc/library/telnetlib.rst:167
msgid "Return the file descriptor of the socket object used internally."
msgstr ""

# 0dfd21108723434780bc714fc4bdb3c2
#: ../Doc/library/telnetlib.rst:172
msgid ""
"Write a string to the socket, doubling any IAC characters. This can block if "
"the connection is blocked.  May raise :exc:`socket.error` if the connection "
"is closed."
msgstr ""

#: ../Doc/library/telnetlib.rst:179
msgid "Interaction function, emulates a very dumb Telnet client."
msgstr ""

#: ../Doc/library/telnetlib.rst:184
msgid "Multithreaded version of :meth:`interact`."
msgstr ""

#: ../Doc/library/telnetlib.rst:189
msgid "Read until one from a list of a regular expressions matches."
msgstr ""

# 9d6894b8a6a54c33af454c4415bc09ab
#: ../Doc/library/telnetlib.rst:191
msgid ""
"The first argument is a list of regular expressions, either compiled (:class:"
"`re.RegexObject` instances) or uncompiled (strings). The optional second "
"argument is a timeout, in seconds; the default is to block indefinitely."
msgstr ""

# bce47630b1ce4388bc770c76b1a9c6a9
#: ../Doc/library/telnetlib.rst:195
msgid ""
"Return a tuple of three items: the index in the list of the first regular "
"expression that matches; the match object returned; and the text read up "
"till and including the match."
msgstr ""

# 6d7218a88e064ff18b72de5050db1ec4
#: ../Doc/library/telnetlib.rst:199
msgid ""
"If end of file is found and no text was read, raise :exc:`EOFError`.  "
"Otherwise, when nothing matches, return ``(-1, None, text)`` where *text* is "
"the text received so far (may be the empty string if a timeout happened)."
msgstr ""

# 93ad525d9c68466b9b1f70d3a33e140b
#: ../Doc/library/telnetlib.rst:203
msgid ""
"If a regular expression ends with a greedy match (such as ``.*``) or if more "
"than one expression can match the same input, the results are non-"
"deterministic, and may depend on the I/O timing."
msgstr ""

#: ../Doc/library/telnetlib.rst:210
msgid ""
"Each time a telnet option is read on the input flow, this *callback* (if "
"set) is called with the following parameters : callback(telnet socket, "
"command (DO/DONT/WILL/WONT), option).  No other action is done afterwards by "
"telnetlib."
msgstr ""

#: ../Doc/library/telnetlib.rst:218
msgid "Telnet Example"
msgstr ""

#: ../Doc/library/tempfile.rst:2
msgid ":mod:`tempfile` --- Generate temporary files and directories"
msgstr ""

# 406c3bc3c3634bd0b51233fe23f379b0
#: ../Doc/library/tempfile.rst:15
msgid "**Source code:** :source:`Lib/tempfile.py`"
msgstr ""

# 9ec62fc0cdfa45ca8e6a2960240c80ed
#: ../Doc/library/tempfile.rst:19
msgid ""
"This module generates temporary files and directories.  It works on all "
"supported platforms."
msgstr ""

# 9be4e4eaa476408aa02333c66c8db3cf
#: ../Doc/library/tempfile.rst:22
msgid ""
"In version 2.3 of Python, this module was overhauled for enhanced security.  "
"It now provides three new functions, :func:`NamedTemporaryFile`, :func:"
"`mkstemp`, and :func:`mkdtemp`, which should eliminate all remaining need to "
"use the insecure :func:`mktemp` function.  Temporary file names created by "
"this module no longer contain the process ID; instead a string of six random "
"characters is used."
msgstr ""

#: ../Doc/library/tempfile.rst:29
msgid ""
"Also, all the user-callable functions now take additional arguments which "
"allow direct control over the location and name of temporary files.  It is "
"no longer necessary to use the global *tempdir* and *template* variables. To "
"maintain backward compatibility, the argument order is somewhat odd; it is "
"recommended to use keyword arguments for clarity."
msgstr ""

#: ../Doc/library/tempfile.rst:35
msgid "The module defines the following user-callable functions:"
msgstr ""

#: ../Doc/library/tempfile.rst:40
msgid ""
"Return a file-like object that can be used as a temporary storage area. The "
"file is created using :func:`mkstemp`. It will be destroyed as soon as it is "
"closed (including an implicit close when the object is garbage collected).  "
"Under Unix, the directory entry for the file is removed immediately after "
"the file is created.  Other platforms do not support this; your code should "
"not rely on a temporary file created using this function having or not "
"having a visible name in the file system."
msgstr ""

# 358deb3322fa40ffaac7268a066ba189
#: ../Doc/library/tempfile.rst:48
msgid ""
"The *mode* parameter defaults to ``'w+b'`` so that the file created can be "
"read and written without being closed.  Binary mode is used so that it "
"behaves consistently on all platforms without regard for the data that is "
"stored.  *bufsize* defaults to ``-1``, meaning that the operating system "
"default is used."
msgstr ""

#: ../Doc/library/tempfile.rst:54
msgid ""
"The *dir*, *prefix* and *suffix* parameters are passed to :func:`mkstemp`."
msgstr ""

#: ../Doc/library/tempfile.rst:56
msgid ""
"The returned object is a true file object on POSIX platforms.  On other "
"platforms, it is a file-like object whose :attr:`!file` attribute is the "
"underlying true file object. This file-like object can be used in a :keyword:"
"`with` statement, just like a normal file."
msgstr ""

# 2692abd1045c42ec8d652e6a4f5a6f27
#: ../Doc/library/tempfile.rst:64
msgid ""
"This function operates exactly as :func:`TemporaryFile` does, except that "
"the file is guaranteed to have a visible name in the file system (on Unix, "
"the directory entry is not unlinked).  That name can be retrieved from the :"
"attr:`name` attribute of the file object.  Whether the name can be used to "
"open the file a second time, while the named temporary file is still open, "
"varies across platforms (it can be so used on Unix; it cannot on Windows NT "
"or later).  If *delete* is true (the default), the file is deleted as soon "
"as it is closed."
msgstr ""

# 367eee4249ba431ca51bb083ba0e379f
#: ../Doc/library/tempfile.rst:73
msgid ""
"The returned object is always a file-like object whose :attr:`!file` "
"attribute is the underlying true file object. This file-like object can be "
"used in a :keyword:`with` statement, just like a normal file."
msgstr ""

#: ../Doc/library/tempfile.rst:85
msgid ""
"This function operates exactly as :func:`TemporaryFile` does, except that "
"data is spooled in memory until the file size exceeds *max_size*, or until "
"the file's :func:`fileno` method is called, at which point the contents are "
"written to disk and operation proceeds as with :func:`TemporaryFile`."
msgstr ""

#: ../Doc/library/tempfile.rst:91
msgid ""
"The resulting file has one additional method, :func:`rollover`, which causes "
"the file to roll over to an on-disk file regardless of its size."
msgstr ""

#: ../Doc/library/tempfile.rst:94
msgid ""
"The returned object is a file-like object whose :attr:`_file` attribute is "
"either a :class:`StringIO` object or a true file object, depending on "
"whether :func:`rollover` has been called. This file-like object can be used "
"in a :keyword:`with` statement, just like a normal file."
msgstr ""

#: ../Doc/library/tempfile.rst:104
msgid ""
"Creates a temporary file in the most secure manner possible.  There are no "
"race conditions in the file's creation, assuming that the platform properly "
"implements the :const:`os.O_EXCL` flag for :func:`os.open`.  The file is "
"readable and writable only by the creating user ID.  If the platform uses "
"permission bits to indicate whether a file is executable, the file is "
"executable by no one.  The file descriptor is not inherited by child "
"processes."
msgstr ""

#: ../Doc/library/tempfile.rst:112
msgid ""
"Unlike :func:`TemporaryFile`, the user of :func:`mkstemp` is responsible for "
"deleting the temporary file when done with it."
msgstr ""

#: ../Doc/library/tempfile.rst:115
msgid ""
"If *suffix* is specified, the file name will end with that suffix, otherwise "
"there will be no suffix.  :func:`mkstemp` does not put a dot between the "
"file name and the suffix; if you need one, put it at the beginning of "
"*suffix*."
msgstr ""

#: ../Doc/library/tempfile.rst:120
msgid ""
"If *prefix* is specified, the file name will begin with that prefix; "
"otherwise, a default prefix is used."
msgstr ""

#: ../Doc/library/tempfile.rst:123
msgid ""
"If *dir* is specified, the file will be created in that directory; "
"otherwise, a default directory is used.  The default directory is chosen "
"from a platform-dependent list, but the user of the application can control "
"the directory location by setting the *TMPDIR*, *TEMP* or *TMP* environment "
"variables.  There is thus no guarantee that the generated filename will have "
"any nice properties, such as not requiring quoting when passed to external "
"commands via ``os.popen()``."
msgstr ""

#: ../Doc/library/tempfile.rst:131
msgid ""
"If *text* is specified, it indicates whether to open the file in binary mode "
"(the default) or text mode.  On some platforms, this makes no difference."
msgstr ""

#: ../Doc/library/tempfile.rst:135
msgid ""
":func:`mkstemp` returns a tuple containing an OS-level handle to an open "
"file (as would be returned by :func:`os.open`) and the absolute pathname of "
"that file, in that order."
msgstr ""

#: ../Doc/library/tempfile.rst:144
msgid ""
"Creates a temporary directory in the most secure manner possible. There are "
"no race conditions in the directory's creation.  The directory is readable, "
"writable, and searchable only by the creating user ID."
msgstr ""

#: ../Doc/library/tempfile.rst:148
msgid ""
"The user of :func:`mkdtemp` is responsible for deleting the temporary "
"directory and its contents when done with it."
msgstr ""

#: ../Doc/library/tempfile.rst:151
msgid ""
"The *prefix*, *suffix*, and *dir* arguments are the same as for :func:"
"`mkstemp`."
msgstr ""

#: ../Doc/library/tempfile.rst:154
msgid ":func:`mkdtemp` returns the absolute pathname of the new directory."
msgstr ""

#: ../Doc/library/tempfile.rst:164
msgid ""
"Return an absolute pathname of a file that did not exist at the time the "
"call is made.  The *prefix*, *suffix*, and *dir* arguments are the same as "
"for :func:`mkstemp`."
msgstr ""

#: ../Doc/library/tempfile.rst:170
msgid ""
"Use of this function may introduce a security hole in your program.  By the "
"time you get around to doing anything with the file name it returns, someone "
"else may have beaten you to the punch.  :func:`mktemp` usage can be replaced "
"easily with :func:`NamedTemporaryFile`, passing it the ``delete=False`` "
"parameter::"
msgstr ""

#: ../Doc/library/tempfile.rst:187
msgid ""
"The module uses two global variables that tell it how to construct a "
"temporary name.  They are initialized at the first call to any of the "
"functions above.  The caller may change them, but this is discouraged; use "
"the appropriate function arguments, instead."
msgstr ""

#: ../Doc/library/tempfile.rst:195
msgid ""
"When set to a value other than ``None``, this variable defines the default "
"value for the *dir* argument to all the functions defined in this module."
msgstr ""

#: ../Doc/library/tempfile.rst:199
msgid ""
"If ``tempdir`` is unset or ``None`` at any call to any of the above "
"functions, Python searches a standard list of directories and sets *tempdir* "
"to the first one which the calling user can create files in. The list is:"
msgstr ""

#: ../Doc/library/tempfile.rst:204
msgid "The directory named by the :envvar:`TMPDIR` environment variable."
msgstr ""

#: ../Doc/library/tempfile.rst:206
msgid "The directory named by the :envvar:`TEMP` environment variable."
msgstr ""

#: ../Doc/library/tempfile.rst:208
msgid "The directory named by the :envvar:`TMP` environment variable."
msgstr ""

#: ../Doc/library/tempfile.rst:210
msgid "A platform-specific location:"
msgstr ""

# 320d9ce469494a018e5f1a01dcbe941a
#: ../Doc/library/tempfile.rst:212
msgid ""
"On RiscOS, the directory named by the :envvar:`Wimp$ScrapDir` environment "
"variable."
msgstr ""

#: ../Doc/library/tempfile.rst:215
msgid ""
"On Windows, the directories :file:`C:\\\\TEMP`, :file:`C:\\\\TMP`, :file:`\\"
"\\TEMP`, and :file:`\\\\TMP`, in that order."
msgstr ""

#: ../Doc/library/tempfile.rst:218
msgid ""
"On all other platforms, the directories :file:`/tmp`, :file:`/var/tmp`, and :"
"file:`/usr/tmp`, in that order."
msgstr ""

#: ../Doc/library/tempfile.rst:221
msgid "As a last resort, the current working directory."
msgstr ""

#: ../Doc/library/tempfile.rst:226
msgid ""
"Return the directory currently selected to create temporary files in. If :"
"data:`tempdir` is not ``None``, this simply returns its contents; otherwise, "
"the search described above is performed, and the result returned."
msgstr ""

# 98a0b97d99c9499db5532b9061a61d06
#: ../Doc/library/tempfile.rst:238
msgid ""
"When set to a value other than ``None``, this variable defines the prefix of "
"the final component of the filenames returned by :func:`mktemp`.  A string "
"of six random letters and digits is appended to the prefix to make the "
"filename unique. The default prefix is :file:`tmp`."
msgstr ""

# 6779c5893f174a37b17f890b92186c5d
#: ../Doc/library/tempfile.rst:243
msgid ""
"Older versions of this module used to require that ``template`` be set to "
"``None`` after a call to :func:`os.fork`; this has not been necessary since "
"version 1.5.2."
msgstr ""

# 3087c6d2533b4f039fb750ee5c46406c
#: ../Doc/library/tempfile.rst:250
msgid ""
"Return the filename prefix used to create temporary files.  This does not "
"contain the directory component.  Using this function is preferred over "
"reading the *template* variable directly."
msgstr ""

#: ../Doc/library/termios.rst:3
msgid ":mod:`termios` --- POSIX style tty control"
msgstr ""

#: ../Doc/library/termios.rst:14
msgid ""
"This module provides an interface to the POSIX calls for tty I/O control.  "
"For a complete description of these calls, see the POSIX or Unix manual "
"pages.  It is only available for those Unix versions that support POSIX "
"*termios* style tty I/O control (and then only if configured at installation "
"time)."
msgstr ""

#: ../Doc/library/termios.rst:19
msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by ``sys."
"stdin.fileno()``, or a file object, such as ``sys.stdin`` itself."
msgstr ""

#: ../Doc/library/termios.rst:23
msgid ""
"This module also defines all the constants needed to work with the functions "
"provided here; these have the same name as their counterparts in C.  Please "
"refer to your system documentation for more information on using these "
"terminal control interfaces."
msgstr ""

#: ../Doc/library/termios.rst:33
msgid ""
"Return a list containing the tty attributes for file descriptor *fd*, as "
"follows: ``[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]`` where *cc* is "
"a list of the tty special characters (each a string of length 1, except the "
"items with indices :const:`VMIN` and :const:`VTIME`, which are integers when "
"these fields are defined).  The interpretation of the flags and the speeds "
"as well as the indexing in the *cc* array must be done using the symbolic "
"constants defined in the :mod:`termios` module."
msgstr ""

#: ../Doc/library/termios.rst:44
msgid ""
"Set the tty attributes for file descriptor *fd* from the *attributes*, which "
"is a list like the one returned by :func:`tcgetattr`.  The *when* argument "
"determines when the attributes are changed: :const:`TCSANOW` to change "
"immediately, :const:`TCSADRAIN` to change after transmitting all queued "
"output, or :const:`TCSAFLUSH` to change after transmitting all queued output "
"and discarding all queued input."
msgstr ""

#: ../Doc/library/termios.rst:54
msgid ""
"Send a break on file descriptor *fd*.  A zero *duration* sends a break for "
"0.25 --0.5 seconds; a nonzero *duration* has a system dependent meaning."
msgstr ""

#: ../Doc/library/termios.rst:60
msgid ""
"Wait until all output written to file descriptor *fd* has been transmitted."
msgstr ""

#: ../Doc/library/termios.rst:65
msgid ""
"Discard queued data on file descriptor *fd*.  The *queue* selector specifies "
"which queue: :const:`TCIFLUSH` for the input queue, :const:`TCOFLUSH` for "
"the output queue, or :const:`TCIOFLUSH` for both queues."
msgstr ""

#: ../Doc/library/termios.rst:72
msgid ""
"Suspend or resume input or output on file descriptor *fd*.  The *action* "
"argument can be :const:`TCOOFF` to suspend output, :const:`TCOON` to restart "
"output, :const:`TCIOFF` to suspend input, or :const:`TCION` to restart input."
msgstr ""

#: ../Doc/library/termios.rst:80
msgid "Convenience functions for common terminal control operations."
msgstr ""

#: ../Doc/library/termios.rst:88
msgid ""
"Here's a function that prompts for a password with echoing turned off.  Note "
"the technique using a separate :func:`tcgetattr` call and a :keyword:"
"`try` ... :keyword:`finally` statement to ensure that the old tty attributes "
"are restored exactly no matter what happens::"
msgstr ""

#: ../Doc/library/test.rst:3
msgid ":mod:`test` --- Regression tests package for Python"
msgstr ""

# 53e0bc1dee44476c9b8e0920ac84a9aa
#: ../Doc/library/test.rst:10
msgid ""
"The :mod:`test` package is meant for internal use by Python only. It is "
"documented for the benefit of the core developers of Python. Any use of this "
"package outside of Python's standard library is discouraged as code "
"mentioned here can change or be removed without notice between releases of "
"Python."
msgstr ""

# cba7547b44c8475abe6c64a26e112180
#: ../Doc/library/test.rst:17
msgid ""
"The :mod:`test` package contains all regression tests for Python as well as "
"the modules :mod:`test.test_support` and :mod:`test.regrtest`. :mod:`test."
"test_support` is used to enhance your tests while :mod:`test.regrtest` "
"drives the testing suite."
msgstr ""

#: ../Doc/library/test.rst:22
msgid ""
"Each module in the :mod:`test` package whose name starts with ``test_`` is a "
"testing suite for a specific module or feature. All new tests should be "
"written using the :mod:`unittest` or :mod:`doctest` module.  Some older "
"tests are written using a \"traditional\" testing style that compares output "
"printed to ``sys.stdout``; this style of test is considered deprecated."
msgstr ""

#: ../Doc/library/test.rst:32
msgid "Writing PyUnit regression tests."
msgstr ""

#: ../Doc/library/test.rst:35
msgid "Tests embedded in documentation strings."
msgstr ""

#: ../Doc/library/test.rst:41
msgid "Writing Unit Tests for the :mod:`test` package"
msgstr ""

#: ../Doc/library/test.rst:43
msgid ""
"It is preferred that tests that use the :mod:`unittest` module follow a few "
"guidelines. One is to name the test module by starting it with ``test_`` and "
"end it with the name of the module being tested. The test methods in the "
"test module should start with ``test_`` and end with a description of what "
"the method is testing. This is needed so that the methods are recognized by "
"the test driver as test methods. Also, no documentation string for the "
"method should be included. A comment (such as ``# Tests function returns "
"only True or False``) should be used to provide documentation for test "
"methods. This is done because documentation strings get printed out if they "
"exist and thus what test is being run is not stated."
msgstr ""

#: ../Doc/library/test.rst:54
msgid "A basic boilerplate is often used::"
msgstr ""

#: ../Doc/library/test.rst:93
msgid ""
"This boilerplate code allows the testing suite to be run by :mod:`test."
"regrtest` as well as on its own as a script."
msgstr ""

#: ../Doc/library/test.rst:96
msgid ""
"The goal for regression testing is to try to break code. This leads to a few "
"guidelines to be followed:"
msgstr ""

#: ../Doc/library/test.rst:99
msgid ""
"The testing suite should exercise all classes, functions, and constants. "
"This includes not just the external API that is to be presented to the "
"outside world but also \"private\" code."
msgstr ""

#: ../Doc/library/test.rst:103
msgid ""
"Whitebox testing (examining the code being tested when the tests are being "
"written) is preferred. Blackbox testing (testing only the published user "
"interface) is not complete enough to make sure all boundary and edge cases "
"are tested."
msgstr ""

#: ../Doc/library/test.rst:108
msgid ""
"Make sure all possible values are tested including invalid ones. This makes "
"sure that not only all valid values are acceptable but also that improper "
"values are handled correctly."
msgstr ""

#: ../Doc/library/test.rst:112
msgid ""
"Exhaust as many code paths as possible. Test where branching occurs and thus "
"tailor input to make sure as many different paths through the code are taken."
msgstr ""

#: ../Doc/library/test.rst:115
msgid ""
"Add an explicit test for any bugs discovered for the tested code. This will "
"make sure that the error does not crop up again if the code is changed in "
"the future."
msgstr ""

#: ../Doc/library/test.rst:119
msgid ""
"Make sure to clean up after your tests (such as close and remove all "
"temporary files)."
msgstr ""

#: ../Doc/library/test.rst:122
msgid ""
"If a test is dependent on a specific condition of the operating system then "
"verify the condition already exists before attempting the test."
msgstr ""

#: ../Doc/library/test.rst:125
msgid ""
"Import as few modules as possible and do it as soon as possible. This "
"minimizes external dependencies of tests and also minimizes possible "
"anomalous behavior from side-effects of importing a module."
msgstr ""

#: ../Doc/library/test.rst:129
msgid ""
"Try to maximize code reuse. On occasion, tests will vary by something as "
"small as what type of input is used. Minimize code duplication by "
"subclassing a basic test class with a class that specifies the input::"
msgstr ""

#: ../Doc/library/test.rst:153
msgid "A book by Kent Beck on writing tests before code."
msgstr ""

# c15f05e546164fc0881580f595c09329
#: ../Doc/library/test.rst:159
msgid "Running tests using the command-line interface"
msgstr ""

# af35613f264340f3ac72c378d021f881
#: ../Doc/library/test.rst:161
msgid ""
"The :mod:`test.regrtest` module can be run as a script to drive Python's "
"regression test suite, thanks to the :option:`-m` option: :program:`python -"
"m test.regrtest`. Running the script by itself automatically starts running "
"all regression tests in the :mod:`test` package. It does this by finding all "
"modules in the package whose name starts with ``test_``, importing them, and "
"executing the function :func:`test_main` if present. The names of tests to "
"execute may also be passed to the script. Specifying a single regression "
"test (:program:`python -m test.regrtest test_spam`) will minimize output and "
"only print whether the test passed or failed and thus minimize output."
msgstr ""

# e75dca48040e45c6a277bcf0084c9c94
#: ../Doc/library/test.rst:171
msgid ""
"Running :mod:`test.regrtest` directly allows what resources are available "
"for tests to use to be set. You do this by using the ``-u`` command-line "
"option. Specifying ``all`` as the value for the ``-u`` option enables all "
"possible resources: :program:`python -m test -uall`. If all but one resource "
"is desired (a more common case), a comma-separated list of resources that "
"are not desired may be listed after ``all``. The command :program:`python -m "
"test.regrtest -uall,-audio,-largefile` will run :mod:`test.regrtest` with "
"all resources except the ``audio`` and ``largefile`` resources. For a list "
"of all resources and more command-line options, run :program:`python -m test."
"regrtest -h`."
msgstr ""

# 50ddc76f6e0c4df1a5627c18a86e59a4
#: ../Doc/library/test.rst:182
msgid ""
"Some other ways to execute the regression tests depend on what platform the "
"tests are being executed on. On Unix, you can run :program:`make test` at "
"the top-level directory where Python was built. On Windows, executing :"
"program:`rt.bat` from your :file:`PCBuild` directory will run all regression "
"tests."
msgstr ""

# 211417f69c644591a2ecbee8671aaef0
#: ../Doc/library/test.rst:190
msgid ":mod:`test.test_support` --- Utility functions for tests"
msgstr ""

# 00f1d748db5b4b97b50427e0b0e527b4
#: ../Doc/library/test.rst:197
msgid ""
"The :mod:`test.test_support` module has been renamed to :mod:`test.support` "
"in Python 3.x."
msgstr ""

# 15ee43a792584922ab314273ffb9b2d0
#: ../Doc/library/test.rst:200
msgid ""
"The :mod:`test.test_support` module provides support for Python's regression "
"tests."
msgstr ""

#: ../Doc/library/test.rst:203
msgid "This module defines the following exceptions:"
msgstr ""

#: ../Doc/library/test.rst:208
msgid ""
"Exception to be raised when a test fails. This is deprecated in favor of :"
"mod:`unittest`\\ -based tests and :class:`unittest.TestCase`'s assertion "
"methods."
msgstr ""

#: ../Doc/library/test.rst:215
msgid ""
"Subclass of :exc:`unittest.SkipTest`. Raised when a resource (such as a "
"network connection) is not available. Raised by the :func:`requires` "
"function."
msgstr ""

# e8d6efdca9d548eca85c90a6dac89939
#: ../Doc/library/test.rst:219
msgid "The :mod:`test.test_support` module defines the following constants:"
msgstr ""

#: ../Doc/library/test.rst:224
msgid ""
":const:`True` when verbose output is enabled. Should be checked when more "
"detailed information is desired about a running test. *verbose* is set by :"
"mod:`test.regrtest`."
msgstr ""

# 4613f83846014ef2b04dcc50759c95cc
#: ../Doc/library/test.rst:231
msgid ":const:`True` when Unicode support is available."
msgstr ""

#: ../Doc/library/test.rst:236
msgid ":const:`True` if the running interpreter is Jython."
msgstr ""

#: ../Doc/library/test.rst:241
msgid ""
"Set to a name that is safe to use as the name of a temporary file.  Any "
"temporary file that is created should be closed and unlinked (removed)."
msgstr ""

# f2e8510947f14cb9980121cd30f56bb0
#: ../Doc/library/test.rst:244
msgid "The :mod:`test.test_support` module defines the following functions:"
msgstr ""

#: ../Doc/library/test.rst:249
msgid ""
"Remove the module named *module_name* from ``sys.modules`` and delete any "
"byte-compiled files of the module."
msgstr ""

#: ../Doc/library/test.rst:255
msgid ""
"Return :const:`True` if *resource* is enabled and available. The list of "
"available resources is only set when :mod:`test.regrtest` is executing the "
"tests."
msgstr ""

#: ../Doc/library/test.rst:262
msgid ""
"Raise :exc:`ResourceDenied` if *resource* is not available. *msg* is the "
"argument to :exc:`ResourceDenied` if it is raised. Always returns :const:"
"`True` if called by a function whose ``__name__`` is ``'__main__'``. Used "
"when tests are executed by :mod:`test.regrtest`."
msgstr ""

#: ../Doc/library/test.rst:270
msgid ""
"Return the path to the file named *filename*. If no match is found "
"*filename* is returned. This does not equal a failure since it could be the "
"path to the file."
msgstr ""

#: ../Doc/library/test.rst:277
msgid ""
"Execute :class:`unittest.TestCase` subclasses passed to the function. The "
"function scans the classes for methods starting with the prefix ``test_`` "
"and executes the tests individually."
msgstr ""

#: ../Doc/library/test.rst:281
msgid ""
"It is also legal to pass strings as parameters; these should be keys in "
"``sys.modules``. Each associated module will be scanned by ``unittest."
"TestLoader.loadTestsFromModule()``. This is usually seen in the following :"
"func:`test_main` function::"
msgstr ""

#: ../Doc/library/test.rst:289
msgid "This will run all tests defined in the named module."
msgstr ""

#: ../Doc/library/test.rst:294
msgid ""
"A convenience wrapper for :func:`warnings.catch_warnings()` that makes it "
"easier to test that a warning was correctly raised.  It is approximately "
"equivalent to calling ``warnings.catch_warnings(record=True)`` with :meth:"
"`warnings.simplefilter` set to ``always`` and with the option to "
"automatically validate the results that are recorded."
msgstr ""

#: ../Doc/library/test.rst:300
msgid ""
"``check_warnings`` accepts 2-tuples of the form ``(\"message regexp\", "
"WarningCategory)`` as positional arguments. If one or more *filters* are "
"provided, or if the optional keyword argument *quiet* is :const:`False`, it "
"checks to make sure the warnings are as expected:  each specified filter "
"must match at least one of the warnings raised by the enclosed code or the "
"test fails, and if any warnings are raised that do not match any of the "
"specified filters the test fails.  To disable the first of these checks, set "
"*quiet* to :const:`True`."
msgstr ""

#: ../Doc/library/test.rst:309
msgid "If no arguments are specified, it defaults to::"
msgstr ""

#: ../Doc/library/test.rst:313
msgid "In this case all warnings are caught and no errors are raised."
msgstr ""

#: ../Doc/library/test.rst:315
msgid ""
"On entry to the context manager, a :class:`WarningRecorder` instance is "
"returned. The underlying warnings list from :func:`~warnings.catch_warnings` "
"is available via the recorder object's :attr:`warnings` attribute.  As a "
"convenience, the attributes of the object representing the most recent "
"warning can also be accessed directly through the recorder object (see "
"example below).  If no warning has been raised, then any of the attributes "
"that would otherwise be expected on an object representing a warning will "
"return :const:`None`."
msgstr ""

#: ../Doc/library/test.rst:324
msgid ""
"The recorder object also has a :meth:`reset` method, which clears the "
"warnings list."
msgstr ""

#: ../Doc/library/test.rst:327
msgid "The context manager is designed to be used like this::"
msgstr ""

#: ../Doc/library/test.rst:334
msgid ""
"In this case if either warning was not raised, or some other warning was "
"raised, :func:`check_warnings` would raise an error."
msgstr ""

#: ../Doc/library/test.rst:337
msgid ""
"When a test needs to look more deeply into the warnings, rather than just "
"checking whether or not they occurred, code like this can be used::"
msgstr ""

#: ../Doc/library/test.rst:350
msgid ""
"Here all warnings will be caught, and the test code tests the captured "
"warnings directly."
msgstr ""

# c901eca09caf49f093927eeb933d13dc
#: ../Doc/library/test.rst:360
msgid ""
"Similar to :func:`check_warnings`, but for Python 3 compatibility warnings. "
"If ``sys.py3kwarning == 1``, it checks if the warning is effectively raised. "
"If ``sys.py3kwarning == 0``, it checks that no warning is raised.  It "
"accepts 2-tuples of the form ``(\"message regexp\", WarningCategory)`` as "
"positional arguments.  When the optional keyword argument *quiet* is :const:"
"`True`, it does not fail if a filter catches nothing.  Without arguments, it "
"defaults to::"
msgstr ""

#: ../Doc/library/test.rst:375
msgid ""
"This is a context manager that runs the :keyword:`with` statement body using "
"a :class:`StringIO.StringIO` object as sys.stdout.  That object can be "
"retrieved using the ``as`` clause of the :keyword:`with` statement."
msgstr ""

#: ../Doc/library/test.rst:379 ../Doc/library/test.rst:424
msgid "Example use::"
msgstr ""

#: ../Doc/library/test.rst:390
msgid ""
"This function imports and returns the named module. Unlike a normal import, "
"this function raises :exc:`unittest.SkipTest` if the module cannot be "
"imported."
msgstr ""

#: ../Doc/library/test.rst:394 ../Doc/library/test.rst:418
msgid ""
"Module and package deprecation messages are suppressed during this import if "
"*deprecated* is :const:`True`."
msgstr ""

#: ../Doc/library/test.rst:402
msgid ""
"This function imports and returns a fresh copy of the named Python module by "
"removing the named module from ``sys.modules`` before doing the import. Note "
"that unlike :func:`reload`, the original module is not affected by this "
"operation."
msgstr ""

#: ../Doc/library/test.rst:407
msgid ""
"*fresh* is an iterable of additional module names that are also removed from "
"the ``sys.modules`` cache before doing the import."
msgstr ""

#: ../Doc/library/test.rst:410
msgid ""
"*blocked* is an iterable of module names that are replaced with :const:`0` "
"in the module cache during the import to ensure that attempts to import them "
"raise :exc:`ImportError`."
msgstr ""

#: ../Doc/library/test.rst:414
msgid ""
"The named module and any modules named in the *fresh* and *blocked* "
"parameters are saved before starting the import and then reinserted into "
"``sys.modules`` when the fresh import is complete."
msgstr ""

#: ../Doc/library/test.rst:421
msgid ""
"This function will raise :exc:`unittest.SkipTest` is the named module cannot "
"be imported."
msgstr ""

# 361f0234c0114fd3a9aa3f81f4aa0961
#: ../Doc/library/test.rst:436
msgid "The :mod:`test.test_support` module defines the following classes:"
msgstr ""

#: ../Doc/library/test.rst:440
msgid ""
"Instances are a context manager that raises :exc:`ResourceDenied` if the "
"specified exception type is raised.  Any keyword arguments are treated as "
"attribute/value pairs to be compared against any exception raised within "
"the :keyword:`with` statement.  Only if all pairs match properly against "
"attributes on the exception is :exc:`ResourceDenied` raised."
msgstr ""

#: ../Doc/library/test.rst:449
msgid ""
"Class used to temporarily set or unset environment variables.  Instances can "
"be used as a context manager and have a complete dictionary interface for "
"querying/modifying the underlying ``os.environ``. After exit from the "
"context manager all changes to environment variables done through this "
"instance will be rolled back."
msgstr ""

#: ../Doc/library/test.rst:462
msgid ""
"Temporarily set the environment variable ``envvar`` to the value of "
"``value``."
msgstr ""

#: ../Doc/library/test.rst:468
msgid "Temporarily unset the environment variable ``envvar``."
msgstr ""

#: ../Doc/library/test.rst:473
msgid ""
"Class used to record warnings for unit tests. See documentation of :func:"
"`check_warnings` above for more details."
msgstr ""

#: ../Doc/library/textwrap.rst:2
msgid ":mod:`textwrap` --- Text wrapping and filling"
msgstr ""

# f0281f1afec44d5ca57f39e74f52124f
#: ../Doc/library/textwrap.rst:11
msgid "**Source code:** :source:`Lib/textwrap.py`"
msgstr ""

#: ../Doc/library/textwrap.rst:15
msgid ""
"The :mod:`textwrap` module provides two convenience functions, :func:`wrap` "
"and :func:`fill`, as well as :class:`TextWrapper`, the class that does all "
"the work, and a utility function  :func:`dedent`.  If you're just wrapping "
"or filling one or two  text strings, the convenience functions should be "
"good enough; otherwise,  you should use an instance of :class:`TextWrapper` "
"for efficiency."
msgstr ""

#: ../Doc/library/textwrap.rst:23
msgid ""
"Wraps the single paragraph in *text* (a string) so every line is at most "
"*width* characters long.  Returns a list of output lines, without final "
"newlines."
msgstr ""

#: ../Doc/library/textwrap.rst:26
msgid ""
"Optional keyword arguments correspond to the instance attributes of :class:"
"`TextWrapper`, documented below.  *width* defaults to ``70``."
msgstr ""

# 64606b5d1629409aac03e4c1baa2b6a0
#: ../Doc/library/textwrap.rst:29
msgid ""
"See the :meth:`TextWrapper.wrap` method for additional details on how :func:"
"`wrap` behaves."
msgstr ""

#: ../Doc/library/textwrap.rst:35
msgid ""
"Wraps the single paragraph in *text*, and returns a single string containing "
"the wrapped paragraph.  :func:`fill` is shorthand for  ::"
msgstr ""

#: ../Doc/library/textwrap.rst:40
msgid ""
"In particular, :func:`fill` accepts exactly the same keyword arguments as :"
"func:`wrap`."
msgstr ""

#: ../Doc/library/textwrap.rst:43
msgid ""
"Both :func:`wrap` and :func:`fill` work by creating a :class:`TextWrapper` "
"instance and calling a single method on it.  That instance is not reused, so "
"for applications that wrap/fill many text strings, it will be more efficient "
"for you to create your own :class:`TextWrapper` object."
msgstr ""

#: ../Doc/library/textwrap.rst:48
msgid ""
"Text is preferably wrapped on whitespaces and right after the hyphens in "
"hyphenated words; only then will long words be broken if necessary, unless :"
"attr:`TextWrapper.break_long_words` is set to false."
msgstr ""

#: ../Doc/library/textwrap.rst:52
msgid ""
"An additional utility function, :func:`dedent`, is provided to remove "
"indentation from strings that have unwanted whitespace to the left of the "
"text."
msgstr ""

#: ../Doc/library/textwrap.rst:58
msgid "Remove any common leading whitespace from every line in *text*."
msgstr ""

#: ../Doc/library/textwrap.rst:60
msgid ""
"This can be used to make triple-quoted strings line up with the left edge of "
"the display, while still presenting them in the source code in indented form."
msgstr ""

# aa04d3c20fd04b22b7554f08ec536b26
#: ../Doc/library/textwrap.rst:63
msgid ""
"Note that tabs and spaces are both treated as whitespace, but they are not "
"equal: the lines ``\"  hello\"`` and ``\"\\thello\"`` are considered to have "
"no common leading whitespace.  (This behaviour is new in Python 2.5; older "
"versions of this module incorrectly expanded tabs before searching for "
"common leading whitespace.)"
msgstr ""

# a1333c50c80a4643a99809cc4df03b31
#: ../Doc/library/textwrap.rst:83
msgid ""
"The :class:`TextWrapper` constructor accepts a number of optional keyword "
"arguments.  Each argument corresponds to one instance attribute, so for "
"example ::"
msgstr ""

#: ../Doc/library/textwrap.rst:89
msgid "is the same as  ::"
msgstr ""

#: ../Doc/library/textwrap.rst:94
msgid ""
"You can re-use the same :class:`TextWrapper` object many times, and you can "
"change any of its options through direct assignment to instance attributes "
"between uses."
msgstr ""

#: ../Doc/library/textwrap.rst:98
msgid ""
"The :class:`TextWrapper` instance attributes (and keyword arguments to the "
"constructor) are as follows:"
msgstr ""

#: ../Doc/library/textwrap.rst:104
msgid ""
"(default: ``70``) The maximum length of wrapped lines.  As long as there are "
"no individual words in the input text longer than :attr:`width`, :class:"
"`TextWrapper` guarantees that no output line will be longer than :attr:"
"`width` characters."
msgstr ""

#: ../Doc/library/textwrap.rst:112
msgid ""
"(default: ``True``) If true, then all tab characters in *text* will be "
"expanded to spaces using the :meth:`expandtabs` method of *text*."
msgstr ""

# 5bc31df3068743479820c375594b8bc5
#: ../Doc/library/textwrap.rst:118
msgid ""
"(default: ``True``) If true, after tab expansion but before wrapping, the :"
"meth:`wrap` method will replace each whitespace character with a single "
"space.  The whitespace characters replaced are as follows: tab, newline, "
"vertical tab, formfeed, and carriage return (``'\\t\\n\\v\\f\\r'``)."
msgstr ""

#: ../Doc/library/textwrap.rst:126
msgid ""
"If :attr:`expand_tabs` is false and :attr:`replace_whitespace` is true, each "
"tab character will be replaced by a single space, which is *not* the same as "
"tab expansion."
msgstr ""

# b5eacbea56ba412cb964d73ce90b7e1e
#: ../Doc/library/textwrap.rst:132
msgid ""
"If :attr:`replace_whitespace` is false, newlines may appear in the middle of "
"a line and cause strange output. For this reason, text should be split into "
"paragraphs (using :meth:`str.splitlines` or similar) which are wrapped "
"separately."
msgstr ""

# 2669977f050846f28849b44d4cb023ca
#: ../Doc/library/textwrap.rst:140
msgid ""
"(default: ``True``) If true, whitespace at the beginning and ending of every "
"line (after wrapping but before indenting) is dropped. Whitespace at the "
"beginning of the paragraph, however, is not dropped if non-whitespace "
"follows it.  If whitespace being dropped takes up an entire line, the whole "
"line is dropped."
msgstr ""

# 18ee1b95f55d47b09a2a6684f31a056d
#: ../Doc/library/textwrap.rst:152
msgid ""
"(default: ``''``) String that will be prepended to the first line of wrapped "
"output.  Counts towards the length of the first line.  The empty string is "
"not indented."
msgstr ""

#: ../Doc/library/textwrap.rst:159
msgid ""
"(default: ``''``) String that will be prepended to all lines of wrapped "
"output except the first.  Counts towards the length of each line except the "
"first."
msgstr ""

#: ../Doc/library/textwrap.rst:166
msgid ""
"(default: ``False``) If true, :class:`TextWrapper` attempts to detect "
"sentence endings and ensure that sentences are always separated by exactly "
"two spaces.  This is generally desired for text in a monospaced font. "
"However, the sentence detection algorithm is imperfect: it assumes that a "
"sentence ending consists of a lowercase letter followed by one of ``'.'``, "
"``'!'``, or ``'?'``, possibly followed by one of ``'\"'`` or ``\"'\"``, "
"followed by a space.  One problem with this is algorithm is that it is "
"unable to detect the difference between \"Dr.\" in ::"
msgstr ""

#: ../Doc/library/textwrap.rst:177
msgid "and \"Spot.\" in ::"
msgstr ""

#: ../Doc/library/textwrap.rst:181
msgid ":attr:`fix_sentence_endings` is false by default."
msgstr ""

#: ../Doc/library/textwrap.rst:183
msgid ""
"Since the sentence detection algorithm relies on ``string.lowercase`` for "
"the definition of \"lowercase letter,\" and a convention of using two spaces "
"after a period to separate sentences on the same line, it is specific to "
"English-language texts."
msgstr ""

#: ../Doc/library/textwrap.rst:191
msgid ""
"(default: ``True``) If true, then words longer than :attr:`width` will be "
"broken in order to ensure that no lines are longer than :attr:`width`.  If "
"it is false, long words will not be broken, and some lines may be longer "
"than :attr:`width`.  (Long words will be put on a line by themselves, in "
"order to minimize the amount by which :attr:`width` is exceeded.)"
msgstr ""

#: ../Doc/library/textwrap.rst:200
msgid ""
"(default: ``True``) If true, wrapping will occur preferably on whitespaces "
"and right after hyphens in compound words, as it is customary in English. If "
"false, only whitespaces will be considered as potentially good places for "
"line breaks, but you need to set :attr:`break_long_words` to false if you "
"want truly insecable words.  Default behaviour in previous versions was to "
"always allow breaking hyphenated words."
msgstr ""

#: ../Doc/library/textwrap.rst:210
msgid ""
":class:`TextWrapper` also provides two public methods, analogous to the "
"module-level convenience functions:"
msgstr ""

# 60295eedb08b4fef8530fd2260636e46
#: ../Doc/library/textwrap.rst:215
msgid ""
"Wraps the single paragraph in *text* (a string) so every line is at most :"
"attr:`width` characters long.  All wrapping options are taken from instance "
"attributes of the :class:`TextWrapper` instance.  Returns a list of output "
"lines, without final newlines.  If the wrapped output has no content, the "
"returned list is empty."
msgstr ""

#: ../Doc/library/textwrap.rst:224
msgid ""
"Wraps the single paragraph in *text*, and returns a single string containing "
"the wrapped paragraph."
msgstr ""

# e1477ae524354de69d96115fb47f077b
#: ../Doc/library/thread.rst:2
msgid ":mod:`thread` --- Multiple threads of control"
msgstr ""

# cc2a41479c804aeeb5a5d98d5ae0d14a
#: ../Doc/library/thread.rst:8
msgid ""
"The :mod:`thread` module has been renamed to :mod:`_thread` in Python 3. "
"The :term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3; however, you should consider using the high-level :mod:"
"`threading` module instead."
msgstr ""

#: ../Doc/library/thread.rst:20
msgid ""
"This module provides low-level primitives for working with multiple threads "
"(also called :dfn:`light-weight processes` or :dfn:`tasks`) --- multiple "
"threads of control sharing their global data space.  For synchronization, "
"simple locks (also called :dfn:`mutexes` or :dfn:`binary semaphores`) are "
"provided. The :mod:`threading` module provides an easier to use and higher-"
"level threading API built on top of this module."
msgstr ""

# 15fb864d5582456b91df5166ba7c14d2
#: ../Doc/library/thread.rst:31
msgid ""
"The module is optional.  It is supported on Windows, Linux, SGI IRIX, "
"Solaris 2.x, as well as on systems that have a POSIX thread (a.k.a. \"pthread"
"\") implementation.  For systems lacking the :mod:`thread` module, the :mod:"
"`dummy_thread` module is available. It duplicates this module's interface "
"and can be used as a drop-in replacement."
msgstr ""

# dac9d9803eca4090b81270613fc8c4a2
#: ../Doc/library/thread.rst:37
msgid "It defines the following constant and functions:"
msgstr ""

#: ../Doc/library/thread.rst:42
msgid "Raised on thread-specific errors."
msgstr ""

#: ../Doc/library/thread.rst:47
msgid "This is the type of lock objects."
msgstr ""

#: ../Doc/library/thread.rst:52
msgid ""
"Start a new thread and return its identifier.  The thread executes the "
"function *function* with the argument list *args* (which must be a tuple).  "
"The optional *kwargs* argument specifies a dictionary of keyword arguments. "
"When the function returns, the thread silently exits.  When the function "
"terminates with an unhandled exception, a stack trace is printed and then "
"the thread exits (but other threads continue to run)."
msgstr ""

#: ../Doc/library/thread.rst:62
msgid ""
"Raise a :exc:`KeyboardInterrupt` exception in the main thread.  A subthread "
"can use this function to interrupt the main thread."
msgstr ""

#: ../Doc/library/thread.rst:70
msgid ""
"Raise the :exc:`SystemExit` exception.  When not caught, this will cause the "
"thread to exit silently."
msgstr ""

#: ../Doc/library/thread.rst:84
msgid ""
"Return a new lock object.  Methods of locks are described below.  The lock "
"is initially unlocked."
msgstr ""

#: ../Doc/library/thread.rst:90
msgid ""
"Return the 'thread identifier' of the current thread.  This is a nonzero "
"integer.  Its value has no direct meaning; it is intended as a magic cookie "
"to be used e.g. to index a dictionary of thread-specific data.  Thread "
"identifiers may be recycled when a thread exits and another thread is "
"created."
msgstr ""

# 2e1028edb12f426c81d468e6d066f820
#: ../Doc/library/thread.rst:98
msgid ""
"Return the thread stack size used when creating new threads.  The optional "
"*size* argument specifies the stack size to be used for subsequently created "
"threads, and must be 0 (use platform or configured default) or a positive "
"integer value of at least 32,768 (32kB). If changing the thread stack size "
"is unsupported, the :exc:`error` exception is raised.  If the specified "
"stack size is invalid, a :exc:`ValueError` is raised and the stack size is "
"unmodified.  32kB is currently the minimum supported stack size value to "
"guarantee sufficient stack space for the interpreter itself.  Note that some "
"platforms may have particular restrictions on values for the stack size, "
"such as requiring a minimum stack size > 32kB or requiring allocation in "
"multiples of the system memory page size - platform documentation should be "
"referred to for more information (4kB pages are common; using multiples of "
"4096 for the stack size is the suggested approach in the absence of more "
"specific information). Availability: Windows, systems with POSIX threads."
msgstr ""

#: ../Doc/library/thread.rst:116
msgid "Lock objects have the following methods:"
msgstr ""

# f0d63e121f0444fba5de77a506496bc6
#: ../Doc/library/thread.rst:121
msgid ""
"Without the optional argument, this method acquires the lock "
"unconditionally, if necessary waiting until it is released by another thread "
"(only one thread at a time can acquire a lock --- that's their reason for "
"existence).  If the integer *waitflag* argument is present, the action "
"depends on its value: if it is zero, the lock is only acquired if it can be "
"acquired immediately without waiting, while if it is nonzero, the lock is "
"acquired unconditionally as before.  The return value is ``True`` if the "
"lock is acquired successfully, ``False`` if not."
msgstr ""

#: ../Doc/library/thread.rst:132
msgid ""
"Releases the lock.  The lock must have been acquired earlier, but not "
"necessarily by the same thread."
msgstr ""

#: ../Doc/library/thread.rst:138
msgid ""
"Return the status of the lock: ``True`` if it has been acquired by some "
"thread, ``False`` if not."
msgstr ""

#: ../Doc/library/thread.rst:141
msgid ""
"In addition to these methods, lock objects can also be used via the :keyword:"
"`with` statement, e.g.::"
msgstr ""

#: ../Doc/library/thread.rst:151
msgid "**Caveats:**"
msgstr ""

#: ../Doc/library/thread.rst:155
msgid ""
"Threads interact strangely with interrupts: the :exc:`KeyboardInterrupt` "
"exception will be received by an arbitrary thread.  (When the :mod:`signal` "
"module is available, interrupts always go to the main thread.)"
msgstr ""

# d24efe1a046e4a2a8d1529748f407b26
#: ../Doc/library/thread.rst:159
msgid ""
"Calling :func:`sys.exit` or raising the :exc:`SystemExit` exception is "
"equivalent to calling :func:`thread.exit`."
msgstr ""

#: ../Doc/library/thread.rst:162
msgid ""
"Not all built-in functions that may block waiting for I/O allow other "
"threads to run.  (The most popular ones (:func:`time.sleep`, :meth:`file."
"read`, :func:`select.select`) work as expected.)"
msgstr ""

#: ../Doc/library/thread.rst:166
msgid ""
"It is not possible to interrupt the :meth:`acquire` method on a lock --- "
"the :exc:`KeyboardInterrupt` exception will happen after the lock has been "
"acquired."
msgstr ""

# 537dd5acf5ca4a49a1771444f1fa009e
#: ../Doc/library/thread.rst:171
msgid ""
"When the main thread exits, it is system defined whether the other threads "
"survive.  On SGI IRIX using the native thread implementation, they survive.  "
"On most other systems, they are killed without executing :keyword:`try` ... :"
"keyword:`finally` clauses or executing object destructors."
msgstr ""

#: ../Doc/library/thread.rst:176
msgid ""
"When the main thread exits, it does not do any of its usual cleanup (except "
"that :keyword:`try` ... :keyword:`finally` clauses are honored), and the "
"standard I/O files are not flushed."
msgstr ""

#: ../Doc/library/threading.rst:2
msgid ":mod:`threading` --- Higher-level threading interface"
msgstr ""

# a427a89ed6d143b388d3c14c494d5ab6
#: ../Doc/library/threading.rst:7
msgid "**Source code:** :source:`Lib/threading.py`"
msgstr ""

# 1022b1a52b0c4afba5f394e3eab25473
#: ../Doc/library/threading.rst:11
msgid ""
"This module constructs higher-level threading interfaces on top of the  "
"lower level :mod:`thread` module. See also the :mod:`mutex` and :mod:`Queue` "
"modules."
msgstr ""

# 9cee717d882e48ad8fa6c90356ac5b78
#: ../Doc/library/threading.rst:15
msgid ""
"The :mod:`dummy_threading` module is provided for situations where :mod:"
"`threading` cannot be used because :mod:`thread` is missing."
msgstr ""

# 0d0b8265add54d8c98ea99e3c9424b6e
#: ../Doc/library/threading.rst:20
msgid ""
"Starting with Python 2.6, this module provides :pep:`8` compliant aliases "
"and properties to replace the ``camelCase`` names that were inspired by "
"Java's threading API. This updated API is compatible with that of the :mod:"
"`multiprocessing` module. However, no schedule has been set for the "
"deprecation of the ``camelCase`` names and they remain fully supported in "
"both Python 2.x and 3.x."
msgstr ""

# d5a7477fa47a49cbb09196deeaf0c695
#: ../Doc/library/threading.rst:29
msgid ""
"Starting with Python 2.5, several Thread methods raise :exc:`RuntimeError` "
"instead of :exc:`AssertionError` if called erroneously."
msgstr ""

# 2c4d159b4126411ca94ac5b9ec8349f2
#: ../Doc/library/threading.rst:34
msgid ""
"Due to the :term:`Global Interpreter Lock`, in CPython only one thread can "
"execute Python code at once (even though certain performance-oriented "
"libraries might overcome this limitation). If you want your application to "
"make better of use of the computational resources of multi-core machines, "
"you are advised to use :mod:`multiprocessing`. However, threading is still "
"an appropriate model if you want to run multiple I/O-bound tasks "
"simultaneously."
msgstr ""

#: ../Doc/library/threading.rst:43
msgid "This module defines the following functions and objects:"
msgstr ""

#: ../Doc/library/threading.rst:48
msgid ""
"Return the number of :class:`Thread` objects currently alive.  The returned "
"count is equal to the length of the list returned by :func:`.enumerate`."
msgstr ""

#: ../Doc/library/threading.rst:55
msgid ""
"A factory function that returns a new condition variable object. A condition "
"variable allows one or more threads to wait until they are notified by "
"another thread."
msgstr ""

# 9a7fa43d37f2420f8a71b82f0d0e37a4
#: ../Doc/library/threading.rst:59
msgid "See :ref:`condition-objects`."
msgstr ""

#: ../Doc/library/threading.rst:65
msgid ""
"Return the current :class:`Thread` object, corresponding to the caller's "
"thread of control.  If the caller's thread of control was not created "
"through the :mod:`threading` module, a dummy thread object with limited "
"functionality is returned."
msgstr ""

#: ../Doc/library/threading.rst:73
msgid ""
"Return a list of all :class:`Thread` objects currently alive.  The list "
"includes daemonic threads, dummy thread objects created by :func:"
"`current_thread`, and the main thread.  It excludes terminated threads and "
"threads that have not yet been started."
msgstr ""

#: ../Doc/library/threading.rst:82
msgid ""
"A factory function that returns a new event object.  An event manages a flag "
"that can be set to true with the :meth:`~Event.set` method and reset to "
"false with the :meth:`clear` method.  The :meth:`wait` method blocks until "
"the flag is true."
msgstr ""

# 154a1b746d794cc8925e3401169035fb
#: ../Doc/library/threading.rst:87
msgid "See :ref:`event-objects`."
msgstr ""

#: ../Doc/library/threading.rst:92
msgid ""
"A class that represents thread-local data.  Thread-local data are data whose "
"values are thread specific.  To manage thread-local data, just create an "
"instance of :class:`local` (or a subclass) and store attributes on it::"
msgstr ""

#: ../Doc/library/threading.rst:99
msgid "The instance's values will be different for separate threads."
msgstr ""

#: ../Doc/library/threading.rst:101
msgid ""
"For more details and extensive examples, see the documentation string of "
"the :mod:`_threading_local` module."
msgstr ""

#: ../Doc/library/threading.rst:109
msgid ""
"A factory function that returns a new primitive lock object.  Once a thread "
"has acquired it, subsequent attempts to acquire it block, until it is "
"released; any thread may release it."
msgstr ""

# 160d0a281e6747c681de051803855f68
#: ../Doc/library/threading.rst:113
msgid "See :ref:`lock-objects`."
msgstr ""

#: ../Doc/library/threading.rst:118
msgid ""
"A factory function that returns a new reentrant lock object. A reentrant "
"lock must be released by the thread that acquired it. Once a thread has "
"acquired a reentrant lock, the same thread may acquire it again without "
"blocking; the thread must release it once for each time it has acquired it."
msgstr ""

# bdf39aee3d5d443a80634b076a76d460
#: ../Doc/library/threading.rst:123
msgid "See :ref:`rlock-objects`."
msgstr ""

#: ../Doc/library/threading.rst:129
msgid ""
"A factory function that returns a new semaphore object.  A semaphore manages "
"a counter representing the number of :meth:`release` calls minus the number "
"of :meth:`acquire` calls, plus an initial value. The :meth:`acquire` method "
"blocks if necessary until it can return without making the counter "
"negative.  If not given, *value* defaults to 1."
msgstr ""

# ee30639dc50a4db1b8c551003d90944f
#: ../Doc/library/threading.rst:135
msgid "See :ref:`semaphore-objects`."
msgstr ""

#: ../Doc/library/threading.rst:140
msgid ""
"A factory function that returns a new bounded semaphore object.  A bounded "
"semaphore checks to make sure its current value doesn't exceed its initial "
"value.  If it does, :exc:`ValueError` is raised. In most situations "
"semaphores are used to guard resources with limited capacity.  If the "
"semaphore is released too many times it's a sign of a bug.  If not given, "
"*value* defaults to 1."
msgstr ""

#: ../Doc/library/threading.rst:150
msgid ""
"A class that represents a thread of control.  This class can be safely "
"subclassed in a limited fashion."
msgstr ""

# 409c5c98b63e4486970cc50d1ea77324
#: ../Doc/library/threading.rst:153
msgid "See :ref:`thread-objects`."
msgstr ""

#: ../Doc/library/threading.rst:159
msgid ""
"A thread that executes a function after a specified interval has passed."
msgstr ""

# 53f414537aea43fbb7cccb729d7ee44e
#: ../Doc/library/threading.rst:161
msgid "See :ref:`timer-objects`."
msgstr ""

#: ../Doc/library/threading.rst:168
msgid ""
"Set a trace function for all threads started from the :mod:`threading` "
"module. The *func* will be passed to  :func:`sys.settrace` for each thread, "
"before its :meth:`run` method is called."
msgstr ""

#: ../Doc/library/threading.rst:179
msgid ""
"Set a profile function for all threads started from the :mod:`threading` "
"module. The *func* will be passed to  :func:`sys.setprofile` for each "
"thread, before its :meth:`run` method is called."
msgstr ""

#: ../Doc/library/threading.rst:188
msgid ""
"Return the thread stack size used when creating new threads.  The optional "
"*size* argument specifies the stack size to be used for subsequently created "
"threads, and must be 0 (use platform or configured default) or a positive "
"integer value of at least 32,768 (32kB). If changing the thread stack size "
"is unsupported, a :exc:`ThreadError` is raised.  If the specified stack size "
"is invalid, a :exc:`ValueError` is raised and the stack size is unmodified.  "
"32kB is currently the minimum supported stack size value to guarantee "
"sufficient stack space for the interpreter itself.  Note that some platforms "
"may have particular restrictions on values for the stack size, such as "
"requiring a minimum stack size > 32kB or requiring allocation in multiples "
"of the system memory page size - platform documentation should be referred "
"to for more information (4kB pages are common; using multiples of 4096 for "
"the stack size is the suggested approach in the absence of more specific "
"information). Availability: Windows, systems with POSIX threads."
msgstr ""

#: ../Doc/library/threading.rst:205
msgid "Detailed interfaces for the objects are documented below."
msgstr ""

#: ../Doc/library/threading.rst:207
msgid ""
"The design of this module is loosely based on Java's threading model. "
"However, where Java makes locks and condition variables basic behavior of "
"every object, they are separate objects in Python.  Python's :class:`Thread` "
"class supports a subset of the behavior of Java's Thread class; currently, "
"there are no priorities, no thread groups, and threads cannot be destroyed, "
"stopped, suspended, resumed, or interrupted.  The static methods of Java's "
"Thread class, when implemented, are mapped to module-level functions."
msgstr ""

#: ../Doc/library/threading.rst:215
msgid "All of the methods described below are executed atomically."
msgstr ""

#: ../Doc/library/threading.rst:221
msgid "Thread Objects"
msgstr ""

#: ../Doc/library/threading.rst:223
msgid ""
"This class represents an activity that is run in a separate thread of "
"control. There are two ways to specify the activity: by passing a callable "
"object to the constructor, or by overriding the :meth:`run` method in a "
"subclass.  No other methods (except for the constructor) should be "
"overridden in a subclass.  In other words,  *only*  override the :meth:"
"`__init__` and :meth:`run` methods of this class."
msgstr ""

#: ../Doc/library/threading.rst:230
msgid ""
"Once a thread object is created, its activity must be started by calling the "
"thread's :meth:`start` method.  This invokes the :meth:`run` method in a "
"separate thread of control."
msgstr ""

#: ../Doc/library/threading.rst:234
msgid ""
"Once the thread's activity is started, the thread is considered 'alive'. It "
"stops being alive when its :meth:`run` method terminates -- either normally, "
"or by raising an unhandled exception.  The :meth:`is_alive` method tests "
"whether the thread is alive."
msgstr ""

#: ../Doc/library/threading.rst:239
msgid ""
"Other threads can call a thread's :meth:`join` method.  This blocks the "
"calling thread until the thread whose :meth:`join` method is called is "
"terminated."
msgstr ""

#: ../Doc/library/threading.rst:242
msgid ""
"A thread has a name.  The name can be passed to the constructor, and read or "
"changed through the :attr:`name` attribute."
msgstr ""

#: ../Doc/library/threading.rst:245
msgid ""
"A thread can be flagged as a \"daemon thread\".  The significance of this "
"flag is that the entire Python program exits when only daemon threads are "
"left.  The initial value is inherited from the creating thread.  The flag "
"can be set through the :attr:`daemon` property."
msgstr ""

#: ../Doc/library/threading.rst:250
msgid ""
"There is a \"main thread\" object; this corresponds to the initial thread of "
"control in the Python program.  It is not a daemon thread."
msgstr ""

#: ../Doc/library/threading.rst:253
msgid ""
"There is the possibility that \"dummy thread objects\" are created. These "
"are thread objects corresponding to \"alien threads\", which are threads of "
"control started outside the threading module, such as directly from C code.  "
"Dummy thread objects have limited functionality; they are always considered "
"alive and daemonic, and cannot be :meth:`join`\\ ed.  They are never "
"deleted, since it is impossible to detect the termination of alien threads."
msgstr ""

#: ../Doc/library/threading.rst:263
msgid ""
"This constructor should always be called with keyword arguments.  Arguments "
"are:"
msgstr ""

#: ../Doc/library/threading.rst:266
msgid ""
"*group* should be ``None``; reserved for future extension when a :class:"
"`ThreadGroup` class is implemented."
msgstr ""

#: ../Doc/library/threading.rst:269
msgid ""
"*target* is the callable object to be invoked by the :meth:`run` method. "
"Defaults to ``None``, meaning nothing is called."
msgstr ""

#: ../Doc/library/threading.rst:272
msgid ""
"*name* is the thread name.  By default, a unique name is constructed of the "
"form \"Thread-*N*\" where *N* is a small decimal number."
msgstr ""

#: ../Doc/library/threading.rst:275
msgid ""
"*args* is the argument tuple for the target invocation.  Defaults to ``()``."
msgstr ""

#: ../Doc/library/threading.rst:277
msgid ""
"*kwargs* is a dictionary of keyword arguments for the target invocation. "
"Defaults to ``{}``."
msgstr ""

#: ../Doc/library/threading.rst:280
msgid ""
"If the subclass overrides the constructor, it must make sure to invoke the "
"base class constructor (``Thread.__init__()``) before doing anything else to "
"the thread."
msgstr ""

#: ../Doc/library/threading.rst:286
msgid "Start the thread's activity."
msgstr ""

#: ../Doc/library/threading.rst:288
msgid ""
"It must be called at most once per thread object.  It arranges for the "
"object's :meth:`run` method to be invoked in a separate thread of control."
msgstr ""

# ee1ffda4d7d04254bcb6f386512ba7ac
#: ../Doc/library/threading.rst:291
msgid ""
"This method will raise a :exc:`RuntimeError` if called more than once on the "
"same thread object."
msgstr ""

#: ../Doc/library/threading.rst:296
msgid "Method representing the thread's activity."
msgstr ""

#: ../Doc/library/threading.rst:298
msgid ""
"You may override this method in a subclass.  The standard :meth:`run` method "
"invokes the callable object passed to the object's constructor as the "
"*target* argument, if any, with sequential and keyword arguments taken from "
"the *args* and *kwargs* arguments, respectively."
msgstr ""

#: ../Doc/library/threading.rst:305
msgid ""
"Wait until the thread terminates. This blocks the calling thread until the "
"thread whose :meth:`join` method is called terminates -- either normally or "
"through an unhandled exception -- or until the optional timeout occurs."
msgstr ""

# 0f0774372f8e40499fa944ed74b0b6b0
#: ../Doc/library/threading.rst:309
msgid ""
"When the *timeout* argument is present and not ``None``, it should be a "
"floating point number specifying a timeout for the operation in seconds (or "
"fractions thereof). As :meth:`join` always returns ``None``, you must call :"
"meth:`isAlive` after :meth:`join` to decide whether a timeout happened -- if "
"the thread is still alive, the :meth:`join` call timed out."
msgstr ""

#: ../Doc/library/threading.rst:315
msgid ""
"When the *timeout* argument is not present or ``None``, the operation will "
"block until the thread terminates."
msgstr ""

#: ../Doc/library/threading.rst:318
msgid "A thread can be :meth:`join`\\ ed many times."
msgstr ""

#: ../Doc/library/threading.rst:320
msgid ""
":meth:`join` raises a :exc:`RuntimeError` if an attempt is made to join the "
"current thread as that would cause a deadlock. It is also an error to :meth:"
"`join` a thread before it has been started and attempts to do so raises the "
"same exception."
msgstr ""

# 46cf32958d39489c90df6666e49fdb23
#: ../Doc/library/threading.rst:328
msgid "Old API for :attr:`~Thread.name`."
msgstr ""

#: ../Doc/library/threading.rst:332
msgid ""
"A string used for identification purposes only. It has no semantics. "
"Multiple threads may be given the same name.  The initial name is set by the "
"constructor."
msgstr ""

#: ../Doc/library/threading.rst:338
msgid ""
"The 'thread identifier' of this thread or ``None`` if the thread has not "
"been started.  This is a nonzero integer.  See the :func:`thread.get_ident()"
"` function.  Thread identifiers may be recycled when a thread exits and "
"another thread is created.  The identifier is available even after the "
"thread has exited."
msgstr ""

#: ../Doc/library/threading.rst:349
msgid "Return whether the thread is alive."
msgstr ""

# 250bf28515d04f89ad8a17746c6b5f16
#: ../Doc/library/threading.rst:351
msgid ""
"This method returns ``True`` just before the :meth:`run` method starts until "
"just after the :meth:`run` method terminates.  The module function :func:`."
"enumerate` returns a list of all alive threads."
msgstr ""

# d03b89a87b2444f5b1b0f5c7e0547f1f
#: ../Doc/library/threading.rst:358
msgid "Old API for :attr:`~Thread.daemon`."
msgstr ""

#: ../Doc/library/threading.rst:362
msgid ""
"A boolean value indicating whether this thread is a daemon thread (True) or "
"not (False).  This must be set before :meth:`start` is called, otherwise :"
"exc:`RuntimeError` is raised.  Its initial value is inherited from the "
"creating thread; the main thread is not a daemon thread and therefore all "
"threads created in the main thread default to :attr:`daemon` = ``False``."
msgstr ""

#: ../Doc/library/threading.rst:369
msgid ""
"The entire Python program exits when no alive non-daemon threads are left."
msgstr ""

#: ../Doc/library/threading.rst:375
msgid "Lock Objects"
msgstr ""

# 150a364f3c924c1c920ba4ef6851583f
#: ../Doc/library/threading.rst:377
msgid ""
"A primitive lock is a synchronization primitive that is not owned by a "
"particular thread when locked.  In Python, it is currently the lowest level "
"synchronization primitive available, implemented directly by the :mod:"
"`thread` extension module."
msgstr ""

#: ../Doc/library/threading.rst:382
msgid ""
"A primitive lock is in one of two states, \"locked\" or \"unlocked\". It is "
"created in the unlocked state.  It has two basic methods, :meth:`acquire` "
"and :meth:`release`.  When the state is unlocked, :meth:`acquire` changes "
"the state to locked and returns immediately.  When the state is locked, :"
"meth:`acquire` blocks until a call to :meth:`release` in another thread "
"changes it to unlocked, then the :meth:`acquire` call resets it to locked "
"and returns.  The :meth:`release` method should only be called in the locked "
"state; it changes the state to unlocked and returns immediately. If an "
"attempt is made to release an unlocked lock, a :exc:`RuntimeError` will be "
"raised."
msgstr ""

#: ../Doc/library/threading.rst:392
msgid ""
"When more than one thread is blocked in :meth:`acquire` waiting for the "
"state to turn to unlocked, only one thread proceeds when a :meth:`release` "
"call resets the state to unlocked; which one of the waiting threads proceeds "
"is not defined, and may vary across implementations."
msgstr ""

#: ../Doc/library/threading.rst:397
msgid "All methods are executed atomically."
msgstr ""

#: ../Doc/library/threading.rst:402 ../Doc/library/threading.rst:446
msgid "Acquire a lock, blocking or non-blocking."
msgstr ""

# a5e07168ef974138b3e55da6819ebdc8
#: ../Doc/library/threading.rst:404
msgid ""
"When invoked with the *blocking* argument set to ``True`` (the default), "
"block until the lock is unlocked, then set it to locked and return ``True``."
msgstr ""

# 5a1e4981f69c4e3a956cfe04e2939f59
#: ../Doc/library/threading.rst:407
msgid ""
"When invoked with the *blocking* argument set to ``False``, do not block. If "
"a call with *blocking* set to ``True`` would block, return ``False`` "
"immediately; otherwise, set the lock to locked and return ``True``."
msgstr ""

#: ../Doc/library/threading.rst:414
msgid "Release a lock."
msgstr ""

#: ../Doc/library/threading.rst:416
msgid ""
"When the lock is locked, reset it to unlocked, and return.  If any other "
"threads are blocked waiting for the lock to become unlocked, allow exactly "
"one of them to proceed."
msgstr ""

# a84e9854bb164956a5ed99736bdee7cc
#: ../Doc/library/threading.rst:420
msgid "When invoked on an unlocked lock, a :exc:`ThreadError` is raised."
msgstr ""

#: ../Doc/library/threading.rst:422 ../Doc/library/threading.rst:476
msgid "There is no return value."
msgstr ""

#: ../Doc/library/threading.rst:428
msgid "RLock Objects"
msgstr ""

#: ../Doc/library/threading.rst:430
msgid ""
"A reentrant lock is a synchronization primitive that may be acquired "
"multiple times by the same thread.  Internally, it uses the concepts of "
"\"owning thread\" and \"recursion level\" in addition to the locked/unlocked "
"state used by primitive locks.  In the locked state, some thread owns the "
"lock; in the unlocked state, no thread owns it."
msgstr ""

#: ../Doc/library/threading.rst:436
msgid ""
"To lock the lock, a thread calls its :meth:`acquire` method; this returns "
"once the thread owns the lock.  To unlock the lock, a thread calls its :meth:"
"`release` method. :meth:`acquire`/:meth:`release` call pairs may be nested; "
"only the final :meth:`release` (the :meth:`release` of the outermost pair) "
"resets the lock to unlocked and allows another thread blocked in :meth:"
"`acquire` to proceed."
msgstr ""

#: ../Doc/library/threading.rst:448
msgid ""
"When invoked without arguments: if this thread already owns the lock, "
"increment the recursion level by one, and return immediately.  Otherwise, if "
"another thread owns the lock, block until the lock is unlocked.  Once the "
"lock is unlocked (not owned by any thread), then grab ownership, set the "
"recursion level to one, and return.  If more than one thread is blocked "
"waiting until the lock is unlocked, only one at a time will be able to grab "
"ownership of the lock. There is no return value in this case."
msgstr ""

#: ../Doc/library/threading.rst:456
msgid ""
"When invoked with the *blocking* argument set to true, do the same thing as "
"when called without arguments, and return true."
msgstr ""

#: ../Doc/library/threading.rst:459
msgid ""
"When invoked with the *blocking* argument set to false, do not block.  If a "
"call without an argument would block, return false immediately; otherwise, "
"do the same thing as when called without arguments, and return true."
msgstr ""

#: ../Doc/library/threading.rst:466
msgid ""
"Release a lock, decrementing the recursion level.  If after the decrement it "
"is zero, reset the lock to unlocked (not owned by any thread), and if any "
"other threads are blocked waiting for the lock to become unlocked, allow "
"exactly one of them to proceed.  If after the decrement the recursion level "
"is still nonzero, the lock remains locked and owned by the calling thread."
msgstr ""

#: ../Doc/library/threading.rst:472
msgid ""
"Only call this method when the calling thread owns the lock. A :exc:"
"`RuntimeError` is raised if this method is called when the lock is unlocked."
msgstr ""

#: ../Doc/library/threading.rst:482
msgid "Condition Objects"
msgstr ""

#: ../Doc/library/threading.rst:484
msgid ""
"A condition variable is always associated with some kind of lock; this can "
"be passed in or one will be created by default.  (Passing one in is useful "
"when several condition variables must share the same lock.)"
msgstr ""

# c5ff0a34f0aa4b2e8bf97e13e58b8aab
#: ../Doc/library/threading.rst:488
msgid ""
"A condition variable has :meth:`acquire` and :meth:`release` methods that "
"call the corresponding methods of the associated lock. It also has a :meth:"
"`wait` method, and :meth:`notify` and :meth:`notifyAll` methods.  These "
"three must only be called when the calling thread has acquired the lock, "
"otherwise a :exc:`RuntimeError` is raised."
msgstr ""

# f083863da1f74339ab7d77f000116c23
#: ../Doc/library/threading.rst:494
msgid ""
"The :meth:`wait` method releases the lock, and then blocks until it is "
"awakened by a :meth:`notify` or :meth:`notifyAll` call for the same "
"condition variable in another thread.  Once awakened, it re-acquires the "
"lock and returns.  It is also possible to specify a timeout."
msgstr ""

# c792346ea93e4fa5894c006cf53edb9b
#: ../Doc/library/threading.rst:499
msgid ""
"The :meth:`notify` method wakes up one of the threads waiting for the "
"condition variable, if any are waiting.  The :meth:`notifyAll` method wakes "
"up all threads waiting for the condition variable."
msgstr ""

# 4a10aefa769348a68f6b211803a83939
#: ../Doc/library/threading.rst:503
msgid ""
"Note: the :meth:`notify` and :meth:`notifyAll` methods don't release the "
"lock; this means that the thread or threads awakened will not return from "
"their :meth:`wait` call immediately, but only when the thread that called :"
"meth:`notify` or :meth:`notifyAll` finally relinquishes ownership of the "
"lock."
msgstr ""

# 49b2f6d884fd4627a5d702041e2f3d7f
#: ../Doc/library/threading.rst:508
msgid ""
"Tip: the typical programming style using condition variables uses the lock "
"to synchronize access to some shared state; threads that are interested in a "
"particular change of state call :meth:`wait` repeatedly until they see the "
"desired state, while threads that modify the state call :meth:`notify` or :"
"meth:`notifyAll` when they change the state in such a way that it could "
"possibly be a desired state for one of the waiters.  For example, the "
"following code is a generic producer-consumer situation with unlimited "
"buffer capacity::"
msgstr ""

# 5e114343de434ea989dea2de037282a6
#: ../Doc/library/threading.rst:529
msgid ""
"To choose between :meth:`notify` and :meth:`notifyAll`, consider whether one "
"state change can be interesting for only one or several waiting threads.  E."
"g. in a typical producer-consumer situation, adding one item to the buffer "
"only needs to wake up one consumer thread."
msgstr ""

#: ../Doc/library/threading.rst:537
msgid ""
"If the *lock* argument is given and not ``None``, it must be a :class:`Lock` "
"or :class:`RLock` object, and it is used as the underlying lock.  Otherwise, "
"a new :class:`RLock` object is created and used as the underlying lock."
msgstr ""

#: ../Doc/library/threading.rst:543
msgid ""
"Acquire the underlying lock. This method calls the corresponding method on "
"the underlying lock; the return value is whatever that method returns."
msgstr ""

#: ../Doc/library/threading.rst:548
msgid ""
"Release the underlying lock. This method calls the corresponding method on "
"the underlying lock; there is no return value."
msgstr ""

#: ../Doc/library/threading.rst:553
msgid ""
"Wait until notified or until a timeout occurs. If the calling thread has not "
"acquired the lock when this method is called, a :exc:`RuntimeError` is "
"raised."
msgstr ""

# 07ed15480015419681c76d0ce7319aec
#: ../Doc/library/threading.rst:556
msgid ""
"This method releases the underlying lock, and then blocks until it is "
"awakened by a :meth:`notify` or :meth:`notifyAll` call for the same "
"condition variable in another thread, or until the optional timeout occurs.  "
"Once awakened or timed out, it re-acquires the lock and returns."
msgstr ""

#: ../Doc/library/threading.rst:561
msgid ""
"When the *timeout* argument is present and not ``None``, it should be a "
"floating point number specifying a timeout for the operation in seconds (or "
"fractions thereof)."
msgstr ""

#: ../Doc/library/threading.rst:565
msgid ""
"When the underlying lock is an :class:`RLock`, it is not released using its :"
"meth:`release` method, since this may not actually unlock the lock when it "
"was acquired multiple times recursively.  Instead, an internal interface of "
"the :class:`RLock` class is used, which really unlocks it even when it has "
"been recursively acquired several times. Another internal interface is then "
"used to restore the recursion level when the lock is reacquired."
msgstr ""

# 1e073609ac4d446cb1199b0b4776c585
#: ../Doc/library/threading.rst:575
msgid ""
"By default, wake up one thread waiting on this condition, if any.  If the "
"calling thread has not acquired the lock when this method is called, a :exc:"
"`RuntimeError` is raised."
msgstr ""

# 82c0829b15d446649a84d6070930528d
#: ../Doc/library/threading.rst:579
msgid ""
"This method wakes up at most *n* of the threads waiting for the condition "
"variable; it is a no-op if no threads are waiting."
msgstr ""

# b5dca7410ed14db7a531cdd6ed3a3492
#: ../Doc/library/threading.rst:582
msgid ""
"The current implementation wakes up exactly *n* threads, if at least *n* "
"threads are waiting.  However, it's not safe to rely on this behavior. A "
"future, optimized implementation may occasionally wake up more than *n* "
"threads."
msgstr ""

# 055b6dfd962b4096805bec8057b051ac
#: ../Doc/library/threading.rst:587
msgid ""
"Note: an awakened thread does not actually return from its :meth:`wait` call "
"until it can reacquire the lock.  Since :meth:`notify` does not release the "
"lock, its caller should."
msgstr ""

#: ../Doc/library/threading.rst:594
msgid ""
"Wake up all threads waiting on this condition.  This method acts like :meth:"
"`notify`, but wakes up all waiting threads instead of one. If the calling "
"thread has not acquired the lock when this method is called, a :exc:"
"`RuntimeError` is raised."
msgstr ""

#: ../Doc/library/threading.rst:603
msgid "Semaphore Objects"
msgstr ""

#: ../Doc/library/threading.rst:605
msgid ""
"This is one of the oldest synchronization primitives in the history of "
"computer science, invented by the early Dutch computer scientist Edsger W. "
"Dijkstra (he used :meth:`P` and :meth:`V` instead of :meth:`acquire` and :"
"meth:`release`)."
msgstr ""

#: ../Doc/library/threading.rst:609
msgid ""
"A semaphore manages an internal counter which is decremented by each :meth:"
"`acquire` call and incremented by each :meth:`release` call.  The counter "
"can never go below zero; when :meth:`acquire` finds that it is zero, it "
"blocks, waiting until some other thread calls :meth:`release`."
msgstr ""

#: ../Doc/library/threading.rst:617
msgid ""
"The optional argument gives the initial *value* for the internal counter; it "
"defaults to ``1``. If the *value* given is less than 0, :exc:`ValueError` is "
"raised."
msgstr ""

#: ../Doc/library/threading.rst:623
msgid "Acquire a semaphore."
msgstr ""

# 41e14f617ffc439e84bbd85f9ad266b5
#: ../Doc/library/threading.rst:625
msgid ""
"When invoked without arguments: if the internal counter is larger than zero "
"on entry, decrement it by one and return immediately.  If it is zero on "
"entry, block, waiting until some other thread has called :meth:`release` to "
"make it larger than zero.  This is done with proper interlocking so that if "
"multiple :meth:`acquire` calls are blocked, :meth:`release` will wake "
"exactly one of them up.  The implementation may pick one at random, so the "
"order in which blocked threads are awakened should not be relied on.  There "
"is no return value in this case."
msgstr ""

# dd63c64437d44203b4bfba9072f6bb48
#: ../Doc/library/threading.rst:634
msgid ""
"When invoked with *blocking* set to true, do the same thing as when called "
"without arguments, and return true."
msgstr ""

#: ../Doc/library/threading.rst:637
msgid ""
"When invoked with *blocking* set to false, do not block.  If a call without "
"an argument would block, return false immediately; otherwise, do the same "
"thing as when called without arguments, and return true."
msgstr ""

#: ../Doc/library/threading.rst:643
msgid ""
"Release a semaphore, incrementing the internal counter by one.  When it was "
"zero on entry and another thread is waiting for it to become larger than "
"zero again, wake up that thread."
msgstr ""

#: ../Doc/library/threading.rst:651
msgid ":class:`Semaphore` Example"
msgstr ""

# a4ad27ff5b8f4009b7d7873047be9a16
#: ../Doc/library/threading.rst:653
msgid ""
"Semaphores are often used to guard resources with limited capacity, for "
"example, a database server.  In any situation where the size of the resource "
"is fixed, you should use a bounded semaphore.  Before spawning any worker "
"threads, your main thread would initialize the semaphore::"
msgstr ""

#: ../Doc/library/threading.rst:662
msgid ""
"Once spawned, worker threads call the semaphore's acquire and release "
"methods when they need to connect to the server::"
msgstr ""

#: ../Doc/library/threading.rst:671
msgid ""
"The use of a bounded semaphore reduces the chance that a programming error "
"which causes the semaphore to be released more than it's acquired will go "
"undetected."
msgstr ""

#: ../Doc/library/threading.rst:678
msgid "Event Objects"
msgstr ""

#: ../Doc/library/threading.rst:680
msgid ""
"This is one of the simplest mechanisms for communication between threads: "
"one thread signals an event and other threads wait for it."
msgstr ""

#: ../Doc/library/threading.rst:683
msgid ""
"An event object manages an internal flag that can be set to true with the :"
"meth:`~Event.set` method and reset to false with the :meth:`clear` method.  "
"The :meth:`wait` method blocks until the flag is true."
msgstr ""

#: ../Doc/library/threading.rst:690
msgid "The internal flag is initially false."
msgstr ""

#: ../Doc/library/threading.rst:695
msgid "Return true if and only if the internal flag is true."
msgstr ""

#: ../Doc/library/threading.rst:702
msgid ""
"Set the internal flag to true. All threads waiting for it to become true are "
"awakened. Threads that call :meth:`wait` once the flag is true will not "
"block at all."
msgstr ""

#: ../Doc/library/threading.rst:708
msgid ""
"Reset the internal flag to false. Subsequently, threads calling :meth:`wait` "
"will block until :meth:`.set` is called to set the internal flag to true "
"again."
msgstr ""

# 7bfd26e50d314971a32e72fad5e6512e
#: ../Doc/library/threading.rst:714
msgid ""
"Block until the internal flag is true.  If the internal flag is true on "
"entry, return immediately.  Otherwise, block until another thread calls :"
"meth:`.set` to set the flag to true, or until the optional timeout occurs."
msgstr ""

#: ../Doc/library/threading.rst:719
msgid ""
"When the timeout argument is present and not ``None``, it should be a "
"floating point number specifying a timeout for the operation in seconds (or "
"fractions thereof)."
msgstr ""

#: ../Doc/library/threading.rst:723
msgid ""
"This method returns the internal flag on exit, so it will always return "
"``True`` except if a timeout is given and the operation times out."
msgstr ""

#: ../Doc/library/threading.rst:733
msgid "Timer Objects"
msgstr ""

#: ../Doc/library/threading.rst:735
msgid ""
"This class represents an action that should be run only after a certain "
"amount of time has passed --- a timer.  :class:`Timer` is a subclass of :"
"class:`Thread` and as such also functions as an example of creating custom "
"threads."
msgstr ""

#: ../Doc/library/threading.rst:739
msgid ""
"Timers are started, as with threads, by calling their :meth:`start` method.  "
"The timer can be stopped (before its action has begun) by calling the :meth:"
"`cancel` method.  The interval the timer will wait before executing its "
"action may not be exactly the same as the interval specified by the user."
msgstr ""

#: ../Doc/library/threading.rst:755
msgid ""
"Create a timer that will run *function* with arguments *args* and  keyword "
"arguments *kwargs*, after *interval* seconds have passed."
msgstr ""

#: ../Doc/library/threading.rst:760
msgid ""
"Stop the timer, and cancel the execution of the timer's action.  This will "
"only work if the timer is still in its waiting stage."
msgstr ""

#: ../Doc/library/threading.rst:767
msgid ""
"Using locks, conditions, and semaphores in the :keyword:`with` statement"
msgstr ""

#: ../Doc/library/threading.rst:769
msgid ""
"All of the objects provided by this module that have :meth:`acquire` and :"
"meth:`release` methods can be used as context managers for a :keyword:`with` "
"statement.  The :meth:`acquire` method will be called when the block is "
"entered, and :meth:`release` will be called when the block is exited."
msgstr ""

#: ../Doc/library/threading.rst:774
msgid ""
"Currently, :class:`Lock`, :class:`RLock`, :class:`Condition`, :class:"
"`Semaphore`, and :class:`BoundedSemaphore` objects may be used as :keyword:"
"`with` statement context managers.  For example::"
msgstr ""

#: ../Doc/library/threading.rst:789
msgid "Importing in threaded code"
msgstr ""

# ca5acb9ad4094689b45afde573f6aa34
#: ../Doc/library/threading.rst:791
msgid ""
"While the import machinery is thread-safe, there are two key restrictions on "
"threaded imports due to inherent limitations in the way that thread-safety "
"is provided:"
msgstr ""

#: ../Doc/library/threading.rst:795
msgid ""
"Firstly, other than in the main module, an import should not have the side "
"effect of spawning a new thread and then waiting for that thread in any way. "
"Failing to abide by this restriction can lead to a deadlock if the spawned "
"thread directly or indirectly attempts to import a module."
msgstr ""

#: ../Doc/library/threading.rst:799
msgid ""
"Secondly, all import attempts must be completed before the interpreter "
"starts shutting itself down. This can be most easily achieved by only "
"performing imports from non-daemon threads created through the threading "
"module. Daemon threads and threads created directly with the thread module "
"will require some other form of synchronization to ensure they do not "
"attempt imports after system shutdown has commenced. Failure to abide by "
"this restriction will lead to intermittent exceptions and crashes during "
"interpreter shutdown (as the late imports attempt to access machinery which "
"is no longer in a valid state)."
msgstr ""

#: ../Doc/library/time.rst:3
msgid ":mod:`time` --- Time access and conversions"
msgstr ""

#: ../Doc/library/time.rst:9
msgid ""
"This module provides various time-related functions. For related "
"functionality, see also the :mod:`datetime` and :mod:`calendar` modules."
msgstr ""

#: ../Doc/library/time.rst:12
msgid ""
"Although this module is always available, not all functions are available on "
"all platforms.  Most of the functions defined in this module call platform C "
"library functions with the same name.  It may sometimes be helpful to "
"consult the platform documentation, because the semantics of these functions "
"varies among platforms."
msgstr ""

#: ../Doc/library/time.rst:18
msgid "An explanation of some terminology and conventions is in order."
msgstr ""

#: ../Doc/library/time.rst:22
msgid ""
"The :dfn:`epoch` is the point where the time starts.  On January 1st of that "
"year, at 0 hours, the \"time since the epoch\" is zero.  For Unix, the epoch "
"is 1970.  To find out what the epoch is, look at ``gmtime(0)``."
msgstr ""

#: ../Doc/library/time.rst:28
msgid ""
"The functions in this module do not handle dates and times before the epoch "
"or far in the future.  The cut-off point in the future is determined by the "
"C library; for Unix, it is typically in 2038."
msgstr ""

#: ../Doc/library/time.rst:38
msgid ""
"**Year 2000 (Y2K) issues**:  Python depends on the platform's C library, "
"which generally doesn't have year 2000 issues, since all dates and times are "
"represented internally as seconds since the epoch.  Functions accepting a :"
"class:`struct_time` (see below) generally require a 4-digit year.  For "
"backward compatibility, 2-digit years are supported if the module variable "
"``accept2dyear`` is a non-zero integer; this variable is initialized to "
"``1`` unless the environment variable :envvar:`PYTHONY2K` is set to a non-"
"empty string, in which case it is initialized to ``0``.  Thus, you can set :"
"envvar:`PYTHONY2K` to a non-empty string in the environment to require 4-"
"digit years for all year input.  When 2-digit years are accepted, they are "
"converted according to the POSIX or X/Open standard: values 69-99 are mapped "
"to 1969-1999, and values 0--68 are mapped to 2000--2068. Values 100--1899 "
"are always illegal. Note that this is new as of Python 1.5.2(a2); earlier "
"versions, up to Python 1.5.1 and 1.5.2a1, would add 1900 to year values "
"below 1900."
msgstr ""

#: ../Doc/library/time.rst:58
msgid ""
"UTC is Coordinated Universal Time (formerly known as Greenwich Mean Time, or "
"GMT).  The acronym UTC is not a mistake but a compromise between English and "
"French."
msgstr ""

#: ../Doc/library/time.rst:64
msgid ""
"DST is Daylight Saving Time, an adjustment of the timezone by (usually) one "
"hour during part of the year.  DST rules are magic (determined by local law) "
"and can change from year to year.  The C library has a table containing the "
"local rules (often it is read from a system file for flexibility) and is the "
"only source of True Wisdom in this respect."
msgstr ""

#: ../Doc/library/time.rst:70
msgid ""
"The precision of the various real-time functions may be less than suggested "
"by the units in which their value or argument is expressed. E.g. on most "
"Unix systems, the clock \"ticks\" only 50 or 100 times a second."
msgstr ""

# 3c3c64d92d3649418e9d933027cb63db
#: ../Doc/library/time.rst:74
msgid ""
"On the other hand, the precision of :func:`.time` and :func:`sleep` is "
"better than their Unix equivalents: times are expressed as floating point "
"numbers, :func:`.time` returns the most accurate time available (using Unix :"
"c:func:`gettimeofday` where available), and :func:`sleep` will accept a time "
"with a nonzero fraction (Unix :c:func:`select` is used to implement this, "
"where available)."
msgstr ""

# dc294779984b49488c481fc4b4a15788
#: ../Doc/library/time.rst:81
msgid ""
"The time value as returned by :func:`gmtime`, :func:`localtime`, and :func:"
"`strptime`, and accepted by :func:`asctime`, :func:`mktime` and :func:"
"`strftime`, may be considered as a sequence of 9 integers.  The return "
"values of :func:`gmtime`, :func:`localtime`, and :func:`strptime` also offer "
"attribute names for individual fields."
msgstr ""

# 8ebc36f7feb1443b93d7c0140e0662cd
#: ../Doc/library/time.rst:87
msgid "See :class:`struct_time` for a description of these objects."
msgstr ""

#: ../Doc/library/time.rst:93
msgid "Use the following functions to convert between time representations:"
msgstr ""

#: ../Doc/library/time.rst:96
msgid "From"
msgstr ""

#: ../Doc/library/time.rst:96
msgid "To"
msgstr ""

#: ../Doc/library/time.rst:96
msgid "Use"
msgstr ""

#: ../Doc/library/time.rst:98 ../Doc/library/time.rst:101
#: ../Doc/library/time.rst:104 ../Doc/library/time.rst:107
msgid "seconds since the epoch"
msgstr ""

#: ../Doc/library/time.rst:98 ../Doc/library/time.rst:104
msgid ":class:`struct_time` in UTC"
msgstr ""

#: ../Doc/library/time.rst:98
msgid ":func:`gmtime`"
msgstr ""

#: ../Doc/library/time.rst:101 ../Doc/library/time.rst:107
msgid ":class:`struct_time` in local time"
msgstr ""

#: ../Doc/library/time.rst:101
msgid ":func:`localtime`"
msgstr ""

#: ../Doc/library/time.rst:104
msgid ":func:`calendar.timegm`"
msgstr ""

#: ../Doc/library/time.rst:107
msgid ":func:`mktime`"
msgstr ""

#: ../Doc/library/time.rst:112
msgid "The module defines the following functions and data items:"
msgstr ""

#: ../Doc/library/time.rst:116
msgid ""
"Boolean value indicating whether two-digit year values will be accepted.  "
"This is true by default, but will be set to false if the environment "
"variable :envvar:`PYTHONY2K` has been set to a non-empty string.  It may "
"also be modified at run time."
msgstr ""

#: ../Doc/library/time.rst:124
msgid ""
"The offset of the local DST timezone, in seconds west of UTC, if one is "
"defined. This is negative if the local DST timezone is east of UTC (as in "
"Western Europe, including the UK).  Only use this if ``daylight`` is nonzero."
msgstr ""

#: ../Doc/library/time.rst:131
msgid ""
"Convert a tuple or :class:`struct_time` representing a time as returned by :"
"func:`gmtime` or :func:`localtime` to a 24-character string of the following "
"form: ``'Sun Jun 20 23:21:05 1993'``.  If *t* is not provided, the current "
"time as returned by :func:`localtime` is used. Locale information is not "
"used by :func:`asctime`."
msgstr ""

#: ../Doc/library/time.rst:139
msgid "Unlike the C function of the same name, there is no trailing newline."
msgstr ""

#: ../Doc/library/time.rst:152
msgid ""
"On Unix, return the current processor time as a floating point number "
"expressed in seconds.  The precision, and in fact the very definition of the "
"meaning of \"processor time\", depends on that of the C function of the same "
"name, but in any case, this is the function to use for benchmarking Python "
"or timing algorithms."
msgstr ""

# 3c9277d8e9e74dd18b73f194a633abd5
#: ../Doc/library/time.rst:157
msgid ""
"On Windows, this function returns wall-clock seconds elapsed since the first "
"call to this function, as a floating point number, based on the Win32 "
"function :c:func:`QueryPerformanceCounter`. The resolution is typically "
"better than one microsecond."
msgstr ""

# 39e3de795c43412488ccd18d4e306990
#: ../Doc/library/time.rst:165
msgid ""
"Convert a time expressed in seconds since the epoch to a string representing "
"local time. If *secs* is not provided or :const:`None`, the current time as "
"returned by :func:`.time` is used.  ``ctime(secs)`` is equivalent to "
"``asctime(localtime(secs))``. Locale information is not used by :func:"
"`ctime`."
msgstr ""

#: ../Doc/library/time.rst:179
msgid "Nonzero if a DST timezone is defined."
msgstr ""

# 0b923e67ef5f4291841df4cb38dd6ae8
#: ../Doc/library/time.rst:184
msgid ""
"Convert a time expressed in seconds since the epoch to a :class:"
"`struct_time` in UTC in which the dst flag is always zero.  If *secs* is not "
"provided or :const:`None`, the current time as returned by :func:`.time` is "
"used.  Fractions of a second are ignored.  See above for a description of "
"the :class:`struct_time` object. See :func:`calendar.timegm` for the inverse "
"of this function."
msgstr ""

# 32facc9981dc48a19bb9af0c7aa66a27
#: ../Doc/library/time.rst:200
msgid ""
"Like :func:`gmtime` but converts to local time.  If *secs* is not provided "
"or :const:`None`, the current time as returned by :func:`.time` is used.  "
"The dst flag is set to ``1`` when DST applies to the given time."
msgstr ""

# 50a86378f97c4552aa865e34ce6176d6
#: ../Doc/library/time.rst:213
msgid ""
"This is the inverse function of :func:`localtime`.  Its argument is the :"
"class:`struct_time` or full 9-tuple (since the dst flag is needed; use "
"``-1`` as the dst flag if it is unknown) which expresses the time in *local* "
"time, not UTC.  It returns a floating point number, for compatibility with :"
"func:`.time`. If the input value cannot be represented as a valid time, "
"either :exc:`OverflowError` or :exc:`ValueError` will be raised (which "
"depends on whether the invalid value is caught by Python or the underlying C "
"libraries). The earliest date for which it can generate a time is platform-"
"dependent."
msgstr ""

#: ../Doc/library/time.rst:225
msgid ""
"Suspend execution for the given number of seconds.  The argument may be a "
"floating point number to indicate a more precise sleep time. The actual "
"suspension time may be less than that requested because any caught signal "
"will terminate the :func:`sleep` following execution of that signal's "
"catching routine.  Also, the suspension time may be longer than requested by "
"an arbitrary amount because of the scheduling of other activity in the "
"system."
msgstr ""

#: ../Doc/library/time.rst:235
msgid ""
"Convert a tuple or :class:`struct_time` representing a time as returned by :"
"func:`gmtime` or :func:`localtime` to a string as specified by the *format* "
"argument.  If *t* is not provided, the current time as returned by :func:"
"`localtime` is used.  *format* must be a string.  :exc:`ValueError` is "
"raised if any field in *t* is outside of the allowed range."
msgstr ""

#: ../Doc/library/time.rst:251
msgid ""
"The following directives can be embedded in the *format* string. They are "
"shown without the optional field width and precision specification, and are "
"replaced by the indicated characters in the :func:`strftime` result:"
msgstr ""

#: ../Doc/library/time.rst:326
msgid "Time zone name (no characters if no time zone exists)."
msgstr ""

#: ../Doc/library/time.rst:335
msgid ""
"When used with the :func:`strptime` function, the ``%p`` directive only "
"affects the output hour field if the ``%I`` directive is used to parse the "
"hour."
msgstr ""

#: ../Doc/library/time.rst:339
msgid ""
"The range really is ``0`` to ``61``; this accounts for leap seconds and the "
"(very rare) double leap seconds."
msgstr ""

#: ../Doc/library/time.rst:343
msgid ""
"When used with the :func:`strptime` function, ``%U`` and ``%W`` are only "
"used in calculations when the day of the week and the year are specified."
msgstr ""

#: ../Doc/library/time.rst:346
msgid ""
"Here is an example, a format for dates compatible with that specified  in "
"the :rfc:`2822` Internet email standard.  [#]_ ::"
msgstr ""

#: ../Doc/library/time.rst:353
msgid ""
"Additional directives may be supported on certain platforms, but only the "
"ones listed here have a meaning standardized by ANSI C."
msgstr ""

#: ../Doc/library/time.rst:356
msgid ""
"On some platforms, an optional field width and precision specification can "
"immediately follow the initial ``'%'`` of a directive in the following "
"order; this is also not portable. The field width is normally 2 except for ``"
"%j`` where it is 3."
msgstr ""

# 6dc31a5c2244449587ab68e4b1272692
#: ../Doc/library/time.rst:364
msgid ""
"Parse a string representing a time according to a format.  The return  value "
"is a :class:`struct_time` as returned by :func:`gmtime` or :func:`localtime`."
msgstr ""

# f1531f6491224db1be20b4e711d7def3
#: ../Doc/library/time.rst:367
msgid ""
"The *format* parameter uses the same directives as those used by :func:"
"`strftime`; it defaults to ``\"%a %b %d %H:%M:%S %Y\"`` which matches the "
"formatting returned by :func:`ctime`. If *string* cannot be parsed according "
"to *format*, or if it has excess data after parsing, :exc:`ValueError` is "
"raised. The default values used to fill in any missing data when more "
"accurate values cannot be inferred are ``(1900, 1, 1, 0, 0, 0, 0, 1, -1)``."
msgstr ""

#: ../Doc/library/time.rst:381
msgid ""
"Support for the ``%Z`` directive is based on the values contained in "
"``tzname`` and whether ``daylight`` is true.  Because of this, it is "
"platform-specific except for recognizing UTC and GMT which are always known "
"(and are considered to be non-daylight savings timezones)."
msgstr ""

#: ../Doc/library/time.rst:386
msgid ""
"Only the directives specified in the documentation are supported.  Because "
"``strftime()`` is implemented per platform it can sometimes offer more "
"directives than those listed.  But ``strptime()`` is independent of any "
"platform and thus does not necessarily support all directives available that "
"are not documented as supported."
msgstr ""

# c21fa84468584616bfc7d4776a054a07
#: ../Doc/library/time.rst:395
msgid ""
"The type of the time value sequence returned by :func:`gmtime`, :func:"
"`localtime`, and :func:`strptime`.  It is an object with a :term:`named "
"tuple` interface: values can be accessed by index and by attribute name.  "
"The following values are present:"
msgstr ""

#: ../Doc/library/time.rst:401
msgid "Values"
msgstr ""

#: ../Doc/library/time.rst:403
msgid ":attr:`tm_year`"
msgstr ""

#: ../Doc/library/time.rst:403
msgid "(for example, 1993)"
msgstr ""

#: ../Doc/library/time.rst:405
msgid ":attr:`tm_mon`"
msgstr ""

#: ../Doc/library/time.rst:405
msgid "range [1, 12]"
msgstr ""

#: ../Doc/library/time.rst:407
msgid ":attr:`tm_mday`"
msgstr ""

#: ../Doc/library/time.rst:407
msgid "range [1, 31]"
msgstr ""

#: ../Doc/library/time.rst:409
msgid ":attr:`tm_hour`"
msgstr ""

#: ../Doc/library/time.rst:409
msgid "range [0, 23]"
msgstr ""

#: ../Doc/library/time.rst:411
msgid ":attr:`tm_min`"
msgstr ""

#: ../Doc/library/time.rst:411
msgid "range [0, 59]"
msgstr ""

#: ../Doc/library/time.rst:413
msgid ":attr:`tm_sec`"
msgstr ""

# 42bbd43794a64ff49e0232066c0ecef6
#: ../Doc/library/time.rst:413
msgid "range [0, 61]; see **(2)** in :func:`strftime` description"
msgstr ""

#: ../Doc/library/time.rst:416
msgid ":attr:`tm_wday`"
msgstr ""

#: ../Doc/library/time.rst:416
msgid "range [0, 6], Monday is 0"
msgstr ""

#: ../Doc/library/time.rst:418
msgid ":attr:`tm_yday`"
msgstr ""

#: ../Doc/library/time.rst:418
msgid "range [1, 366]"
msgstr ""

#: ../Doc/library/time.rst:420
msgid ":attr:`tm_isdst`"
msgstr ""

#: ../Doc/library/time.rst:420
msgid "0, 1 or -1; see below"
msgstr ""

# 82b9d070223c4cd0ac917468765e0ed8
#: ../Doc/library/time.rst:425
msgid ""
"Note that unlike the C structure, the month value is a range of [1, 12], not "
"[0, 11].  A year value will be handled as described under :ref:`Year 2000 "
"(Y2K) issues <time-y2kissues>` above.  A ``-1`` argument as the daylight "
"savings flag, passed to :func:`mktime` will usually result in the correct "
"daylight savings state to be filled in."
msgstr ""

#: ../Doc/library/time.rst:431
msgid ""
"When a tuple with an incorrect length is passed to a function expecting a :"
"class:`struct_time`, or having elements of the wrong type, a :exc:"
"`TypeError` is raised."
msgstr ""

# 6f88326927c7462397f59d7fe6fbcfd0
#: ../Doc/library/time.rst:438
msgid ""
"Return the time in seconds since the epoch as a floating point number. Note "
"that even though the time is always returned as a floating point number, not "
"all systems provide time with a better precision than 1 second. While this "
"function normally returns non-decreasing values, it can return a lower value "
"than a previous call if the system clock has been set back between the two "
"calls."
msgstr ""

#: ../Doc/library/time.rst:448
msgid ""
"The offset of the local (non-DST) timezone, in seconds west of UTC (negative "
"in most of Western Europe, positive in the US, zero in the UK)."
msgstr ""

#: ../Doc/library/time.rst:454
msgid ""
"A tuple of two strings: the first is the name of the local non-DST timezone, "
"the second is the name of the local DST timezone.  If no DST timezone is "
"defined, the second string should not be used."
msgstr ""

#: ../Doc/library/time.rst:461
msgid ""
"Resets the time conversion rules used by the library routines. The "
"environment variable :envvar:`TZ` specifies how this is done."
msgstr ""

#: ../Doc/library/time.rst:470
msgid ""
"Although in many cases, changing the :envvar:`TZ` environment variable may "
"affect the output of functions like :func:`localtime` without calling :func:"
"`tzset`, this behavior should not be relied on."
msgstr ""

#: ../Doc/library/time.rst:474
msgid "The :envvar:`TZ` environment variable should contain no whitespace."
msgstr ""

#: ../Doc/library/time.rst:476
msgid ""
"The standard format of the :envvar:`TZ` environment variable is (whitespace "
"added for clarity)::"
msgstr ""

#: ../Doc/library/time.rst:481
msgid "Where the components are:"
msgstr ""

#: ../Doc/library/time.rst:484
msgid ""
"Three or more alphanumerics giving the timezone abbreviations. These will be "
"propagated into time.tzname"
msgstr ""

#: ../Doc/library/time.rst:488
msgid ""
"The offset has the form: ``± hh[:mm[:ss]]``. This indicates the value added "
"the local time to arrive at UTC.  If preceded by a '-', the timezone is east "
"of the Prime Meridian; otherwise, it is west. If no offset follows dst, "
"summer time is assumed to be one hour ahead of standard time."
msgstr ""

#: ../Doc/library/time.rst:494
msgid ""
"Indicates when to change to and back from DST. The format of the start and "
"end dates are one of the following:"
msgstr ""

#: ../Doc/library/time.rst:498
msgid ""
"The Julian day *n* (1 <= *n* <= 365). Leap days are not counted, so in all "
"years February 28 is day 59 and March 1 is day 60."
msgstr ""

#: ../Doc/library/time.rst:502
msgid ""
"The zero-based Julian day (0 <= *n* <= 365). Leap days are counted, and it "
"is possible to refer to February 29."
msgstr ""

#: ../Doc/library/time.rst:506
msgid ""
"The *d*'th day (0 <= *d* <= 6) or week *n* of month *m* of the year (1 <= "
"*n* <= 5, 1 <= *m* <= 12, where week 5 means \"the last *d* day in month *m*"
"\" which may occur in either the fourth or the fifth week). Week 1 is the "
"first week in which the *d*'th day occurs. Day zero is Sunday."
msgstr ""

#: ../Doc/library/time.rst:512
msgid ""
"``time`` has the same format as ``offset`` except that no leading sign ('-' "
"or '+') is allowed. The default, if time is not given, is 02:00:00."
msgstr ""

#: ../Doc/library/time.rst:526
msgid ""
"On many Unix systems (including \\*BSD, Linux, Solaris, and Darwin), it is "
"more convenient to use the system's zoneinfo (:manpage:`tzfile(5)`)  "
"database to specify the timezone rules. To do this, set the  :envvar:`TZ` "
"environment variable to the path of the required timezone  datafile, "
"relative to the root of the systems 'zoneinfo' timezone database, usually "
"located at :file:`/usr/share/zoneinfo`. For example,  ``'US/Eastern'``, "
"``'Australia/Melbourne'``, ``'Egypt'`` or  ``'Europe/Amsterdam'``. ::"
msgstr ""

#: ../Doc/library/time.rst:547
msgid "More object-oriented interface to dates and times."
msgstr ""

#: ../Doc/library/time.rst:550
msgid ""
"Internationalization services.  The locale settings can affect the return "
"values for some of  the functions in the :mod:`time` module."
msgstr ""

#: ../Doc/library/time.rst:554
msgid ""
"General calendar-related functions.   :func:`timegm` is the inverse of :func:"
"`gmtime` from this module."
msgstr ""

# ff13a7683dfa41779026c490af71a587
#: ../Doc/library/time.rst:559
msgid ""
"The use of ``%Z`` is now deprecated, but the ``%z`` escape that expands to "
"the preferred  hour/minute offset is not supported by all ANSI C libraries. "
"Also, a strict reading of the original 1982 :rfc:`822` standard calls for a "
"two-digit year (%y rather than %Y), but practice moved to 4-digit years long "
"before the year 2000.  After that, :rfc:`822` became obsolete and the 4-"
"digit year has been first recommended by :rfc:`1123` and then mandated by :"
"rfc:`2822`."
msgstr ""

#: ../Doc/library/timeit.rst:2
msgid ":mod:`timeit` --- Measure execution time of small code snippets"
msgstr ""

# 920d711f514e4f84894b3eed98540ae2
#: ../Doc/library/timeit.rst:14
msgid "**Source code:** :source:`Lib/timeit.py`"
msgstr ""

#: ../Doc/library/timeit.rst:18
msgid ""
"This module provides a simple way to time small bits of Python code. It has "
"both command line as well as callable interfaces.  It avoids a number of "
"common traps for measuring execution times.  See also Tim Peters' "
"introduction to the \"Algorithms\" chapter in the Python Cookbook, published "
"by O'Reilly."
msgstr ""

#: ../Doc/library/timeit.rst:23
msgid "The module defines the following public class:"
msgstr ""

#: ../Doc/library/timeit.rst:28
msgid "Class for timing execution speed of small code snippets."
msgstr ""

#: ../Doc/library/timeit.rst:30
msgid ""
"The constructor takes a statement to be timed, an additional statement used "
"for setup, and a timer function.  Both statements default to ``'pass'``; the "
"timer function is platform-dependent (see the module doc string).  *stmt* "
"and *setup* may also contain multiple statements separated by ``;`` or "
"newlines, as long as they don't contain multi-line string literals."
msgstr ""

#: ../Doc/library/timeit.rst:36
msgid ""
"To measure the execution time of the first statement, use the :meth:`timeit` "
"method.  The :meth:`repeat` method is a convenience to call :meth:`timeit` "
"multiple times and return a list of results."
msgstr ""

#: ../Doc/library/timeit.rst:49
msgid "Helper to print a traceback from the timed code."
msgstr ""

#: ../Doc/library/timeit.rst:51
msgid "Typical use::"
msgstr ""

#: ../Doc/library/timeit.rst:59
msgid ""
"The advantage over the standard traceback is that source lines in the "
"compiled template will be displayed. The optional *file* argument directs "
"where the traceback is sent; it defaults to ``sys.stderr``."
msgstr ""

#: ../Doc/library/timeit.rst:66
msgid "Call :meth:`timeit` a few times."
msgstr ""

#: ../Doc/library/timeit.rst:68
msgid ""
"This is a convenience function that calls the :meth:`timeit` repeatedly, "
"returning a list of results.  The first argument specifies how many times to "
"call :meth:`timeit`.  The second argument specifies the *number* argument "
"for :func:`timeit`."
msgstr ""

#: ../Doc/library/timeit.rst:75
msgid ""
"It's tempting to calculate mean and standard deviation from the result "
"vector and report these.  However, this is not very useful.  In a typical "
"case, the lowest value gives a lower bound for how fast your machine can run "
"the given code snippet; higher values in the result vector are typically not "
"caused by variability in Python's speed, but by other processes interfering "
"with your timing accuracy.  So the :func:`min` of the result is probably the "
"only number you should be interested in.  After that, you should look at the "
"entire vector and apply common sense rather than statistics."
msgstr ""

#: ../Doc/library/timeit.rst:87
msgid ""
"Time *number* executions of the main statement. This executes the setup "
"statement once, and then returns the time it takes to execute the main "
"statement a number of times, measured in seconds as a float.  The argument "
"is the number of times through the loop, defaulting to one million.  The "
"main statement, the setup statement and the timer function to be used are "
"passed to the constructor."
msgstr ""

#: ../Doc/library/timeit.rst:95
msgid ""
"By default, :meth:`timeit` temporarily turns off :term:`garbage collection` "
"during the timing.  The advantage of this approach is that it makes "
"independent timings more comparable.  This disadvantage is that GC may be an "
"important component of the performance of the function being measured. If "
"so, GC can be re-enabled as the first statement in the *setup* string. For "
"example::"
msgstr ""

# bdfa49354d2b447ba3573d02949164ac
#: ../Doc/library/timeit.rst:104
msgid "The module also defines three convenience functions:"
msgstr ""

# b4623366b7b84fb2beb013899f917366
#: ../Doc/library/timeit.rst:109
msgid ""
"Define a default timer, in a platform specific manner. On Windows, :func:"
"`time.clock` has microsecond granularity but :func:`time.time`'s granularity "
"is 1/60th of a second; on Unix, :func:`time.clock` has 1/100th of a second "
"granularity and :func:`time.time` is much more precise.  On either "
"platform, :func:`default_timer` measures wall clock time, not the CPU time.  "
"This means that other processes running on the same computer may interfere "
"with the timing."
msgstr ""

#: ../Doc/library/timeit.rst:119
msgid ""
"Create a :class:`Timer` instance with the given statement, setup code and "
"timer function and run its :meth:`repeat` method with the given repeat count "
"and *number* executions."
msgstr ""

#: ../Doc/library/timeit.rst:128
msgid ""
"Create a :class:`Timer` instance with the given statement, setup code and "
"timer function and run its :meth:`timeit` method with *number* executions."
msgstr ""

#: ../Doc/library/timeit.rst:135
msgid "Command Line Interface"
msgstr ""

#: ../Doc/library/timeit.rst:137
msgid ""
"When called as a program from the command line, the following form is used::"
msgstr ""

# b89ac7b6997a49c5b8c5582db552aab1
#: ../Doc/library/timeit.rst:141
msgid "Where the following options are understood:"
msgstr ""

#: ../Doc/library/timeit.rst:147
msgid "how many times to execute 'statement'"
msgstr ""

#: ../Doc/library/timeit.rst:151
msgid "how many times to repeat the timer (default 3)"
msgstr ""

# 93de6af0fca740abb93a2148289b4022
#: ../Doc/library/timeit.rst:155
msgid "statement to be executed once initially (default ``pass``)"
msgstr ""

#: ../Doc/library/timeit.rst:159
msgid "use :func:`time.time` (default on all platforms but Windows)"
msgstr ""

#: ../Doc/library/timeit.rst:163
msgid "use :func:`time.clock` (default on Windows)"
msgstr ""

#: ../Doc/library/timeit.rst:167
msgid "print raw timing results; repeat for more digits precision"
msgstr ""

#: ../Doc/library/timeit.rst:171
msgid "print a short usage message and exit"
msgstr ""

#: ../Doc/library/timeit.rst:173
msgid ""
"A multi-line statement may be given by specifying each line as a separate "
"statement argument; indented lines are possible by enclosing an argument in "
"quotes and using leading spaces.  Multiple :option:`-s` options are treated "
"similarly."
msgstr ""

#: ../Doc/library/timeit.rst:178
msgid ""
"If :option:`-n` is not given, a suitable number of loops is calculated by "
"trying successive powers of 10 until the total time is at least 0.2 seconds."
msgstr ""

# c4174d0e3add472d949510c25b22ea60
#: ../Doc/library/timeit.rst:181
msgid ""
":func:`default_timer` measurations can be affected by other programs running "
"on the same machine, so the best thing to do when accurate timing is "
"necessary is to repeat the timing a few times and use the best time.  The :"
"option:`-r` option is good for this; the default of 3 repetitions is "
"probably enough in most cases.  On Unix, you can use :func:`time.clock` to "
"measure CPU time."
msgstr ""

#: ../Doc/library/timeit.rst:190
msgid ""
"There is a certain baseline overhead associated with executing a pass "
"statement. The code here doesn't try to hide it, but you should be aware of "
"it.  The baseline overhead can be measured by invoking the program without "
"arguments."
msgstr ""

#: ../Doc/library/timeit.rst:194
msgid ""
"The baseline overhead differs between Python versions!  Also, to fairly "
"compare older Python versions to Python 2.3, you may want to use Python's :"
"option:`-O` option for the older versions to avoid timing ``SET_LINENO`` "
"instructions."
msgstr ""

#: ../Doc/library/timeit.rst:202
msgid ""
"Here are two example sessions (one using the command line, one using the "
"module interface) that compare the cost of using :func:`hasattr` vs. :"
"keyword:`try`/:keyword:`except` to test for missing and present object "
"attributes. ::"
msgstr ""

#: ../Doc/library/timeit.rst:250
msgid ""
"To give the :mod:`timeit` module access to functions you define, you can "
"pass a ``setup`` parameter which contains an import statement::"
msgstr ""

# c4339b5a817945f78447cd4df0710b9c
#: ../Doc/library/tix.rst:2
msgid ":mod:`Tix` --- Extension widgets for Tk"
msgstr ""

# c305cdc026f74235a0a7aa6e0bf9e2e1
#: ../Doc/library/tix.rst:11
msgid ""
"The :mod:`Tix` (Tk Interface Extension) module provides an additional rich "
"set of widgets. Although the standard Tk library has many useful widgets, "
"they are far from complete. The :mod:`Tix` library provides most of the "
"commonly needed widgets that are missing from standard Tk: :class:`HList`, :"
"class:`ComboBox`, :class:`Control` (a.k.a. SpinBox) and an assortment of "
"scrollable widgets. :mod:`Tix` also includes many more widgets that are "
"generally useful in a wide range of applications: :class:`NoteBook`, :class:"
"`FileEntry`, :class:`PanedWindow`, etc; there are more than 40 of them."
msgstr ""

#: ../Doc/library/tix.rst:20
msgid ""
"With all these new widgets, you can introduce new interaction techniques "
"into applications, creating more useful and more intuitive user interfaces. "
"You can design your application by choosing the most appropriate widgets to "
"match the special needs of your application and users."
msgstr ""

# 27b6031f128742cc8969459e6cc72e38
#: ../Doc/library/tix.rst:27
msgid ""
":mod:`Tix` has been renamed to :mod:`tkinter.tix` in Python 3.  The :term:"
"`2to3` tool will automatically adapt imports when converting your sources to "
"Python 3."
msgstr ""

#: ../Doc/library/tix.rst:34
msgid ""
"The home page for :mod:`Tix`.  This includes links to additional "
"documentation and downloads."
msgstr ""

#: ../Doc/library/tix.rst:38
msgid "On-line version of the man pages and reference material."
msgstr ""

#: ../Doc/library/tix.rst:41
msgid "On-line version of the programmer's reference material."
msgstr ""

#: ../Doc/library/tix.rst:44
msgid ""
"Tix applications for development of Tix and Tkinter programs. Tide "
"applications work under Tk or Tkinter, and include :program:`TixInspect`, an "
"inspector to remotely modify and debug Tix/Tk/Tkinter applications."
msgstr ""

#: ../Doc/library/tix.rst:50
msgid "Using Tix"
msgstr ""

#: ../Doc/library/tix.rst:55
msgid ""
"Toplevel widget of Tix which represents mostly the main window of an "
"application. It has an associated Tcl interpreter."
msgstr ""

# 225116eb7d1b4cf28c3f7637cfc13e62
#: ../Doc/library/tix.rst:58
msgid ""
"Classes in the :mod:`Tix` module subclasses the classes in the :mod:"
"`Tkinter` module. The former imports the latter, so to use :mod:`Tix` with "
"Tkinter, all you need to do is to import one module. In general, you can "
"just import :mod:`Tix`, and replace the toplevel call to :class:`Tkinter.Tk` "
"with :class:`Tix.Tk`::"
msgstr ""

# 6ebf48824b2544ce96f742a1739961bf
#: ../Doc/library/tix.rst:68
msgid ""
"To use :mod:`Tix`, you must have the :mod:`Tix` widgets installed, usually "
"alongside your installation of the Tk widgets. To test your installation, "
"try the following::"
msgstr ""

# 905580333206462e9a0e795a1606b78d
#: ../Doc/library/tix.rst:76
msgid ""
"If this fails, you have a Tk installation problem which must be resolved "
"before proceeding. Use the environment variable :envvar:`TIX_LIBRARY` to "
"point to the installed :mod:`Tix` library directory, and make sure you have "
"the dynamic object library (:file:`tix8183.dll` or :file:`libtix8183.so`) "
"in  the same directory that contains your Tk dynamic object library (:file:"
"`tk8183.dll` or :file:`libtk8183.so`). The directory with the dynamic object "
"library should also have a file called :file:`pkgIndex.tcl` (case "
"sensitive), which contains the line::"
msgstr ""

#: ../Doc/library/tix.rst:89
msgid "Tix Widgets"
msgstr ""

# 9c40d0d772e542b284686e03264fcfa2
#: ../Doc/library/tix.rst:91
msgid ""
"`Tix <http://tix.sourceforge.net/dist/current/man/html/TixCmd/TixIntro."
"htm>`_ introduces over 40 widget classes to the :mod:`Tkinter`  repertoire.  "
"There is a demo of all the :mod:`Tix` widgets in the :file:`Demo/tix` "
"directory of the standard distribution."
msgstr ""

#: ../Doc/library/tix.rst:100
msgid "Basic Widgets"
msgstr ""

#: ../Doc/library/tix.rst:105
msgid ""
"A `Balloon <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixBalloon.htm>`_ that pops up over a widget to provide help.  When the user "
"moves the cursor inside a widget to which a Balloon widget has been bound, a "
"small pop-up window with a descriptive message will be shown on the screen."
msgstr ""

#: ../Doc/library/tix.rst:117
msgid ""
"The `ButtonBox <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixButtonBox.htm>`_ widget creates a box of buttons, such as is commonly "
"used for ``Ok Cancel``."
msgstr ""

#: ../Doc/library/tix.rst:127
msgid ""
"The `ComboBox <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixComboBox.htm>`_ widget is similar to the combo box control in MS Windows. "
"The user can select a choice by either typing in the entry subwdget or "
"selecting from the listbox subwidget."
msgstr ""

#: ../Doc/library/tix.rst:139
msgid ""
"The `Control <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixControl.htm>`_ widget is also known as the :class:`SpinBox` widget. The "
"user can adjust the value by pressing the two arrow buttons or by entering "
"the value directly into the entry. The new value will be checked against the "
"user-defined upper and lower limits."
msgstr ""

#: ../Doc/library/tix.rst:152
msgid ""
"The `LabelEntry <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixLabelEntry.htm>`_ widget packages an entry widget and a label into one "
"mega widget. It can be used be used to simplify the creation of \"entry-form"
"\" type of interface."
msgstr ""

#: ../Doc/library/tix.rst:163
msgid ""
"The `LabelFrame <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixLabelFrame.htm>`_ widget packages a frame widget and a label into one "
"mega widget.  To create widgets inside a LabelFrame widget, one creates the "
"new widgets relative to the :attr:`frame` subwidget and manage them inside "
"the :attr:`frame` subwidget."
msgstr ""

#: ../Doc/library/tix.rst:175
msgid ""
"The `Meter <http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixMeter."
"htm>`_ widget can be used to show the progress of a background job which may "
"take a long time to execute."
msgstr ""

#: ../Doc/library/tix.rst:186
msgid ""
"The `OptionMenu <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixOptionMenu.htm>`_ creates a menu button of options."
msgstr ""

#: ../Doc/library/tix.rst:196
msgid ""
"The `PopupMenu <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixPopupMenu.htm>`_ widget can be used as a replacement of the ``tk_popup`` "
"command. The advantage of the :mod:`Tix` :class:`PopupMenu` widget is it "
"requires less application code to manipulate."
msgstr ""

#: ../Doc/library/tix.rst:208
msgid ""
"The `Select <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixSelect.htm>`_ widget is a container of button subwidgets. It can be used "
"to provide radio-box or check-box style of selection options for the user."
msgstr ""

#: ../Doc/library/tix.rst:219
msgid ""
"The `StdButtonBox <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixStdButtonBox.htm>`_ widget is a group of standard buttons for Motif-like "
"dialog boxes."
msgstr ""

#: ../Doc/library/tix.rst:228
msgid "File Selectors"
msgstr ""

#: ../Doc/library/tix.rst:233
msgid ""
"The `DirList <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixDirList.htm>`_ widget displays a list view of a directory, its previous "
"directories and its sub-directories. The user can choose one of the "
"directories displayed in the list or change to another directory."
msgstr ""

#: ../Doc/library/tix.rst:245
msgid ""
"The `DirTree <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixDirTree.htm>`_ widget displays a tree view of a directory, its previous "
"directories and its sub-directories. The user can choose one of the "
"directories displayed in the list or change to another directory."
msgstr ""

#: ../Doc/library/tix.rst:257
msgid ""
"The `DirSelectDialog <http://tix.sourceforge.net/dist/current/man/html/"
"TixCmd/tixDirSelectDialog.htm>`_ widget presents the directories in the file "
"system in a dialog window.  The user can use this dialog window to navigate "
"through the file system to select the desired directory."
msgstr ""

#: ../Doc/library/tix.rst:269
msgid ""
"The :class:`DirSelectBox` is similar to the standard Motif(TM) directory-"
"selection box. It is generally used for the user to choose a directory.  "
"DirSelectBox stores the directories mostly recently selected into a ComboBox "
"widget so that they can be quickly selected again."
msgstr ""

#: ../Doc/library/tix.rst:277
msgid ""
"The `ExFileSelectBox <http://tix.sourceforge.net/dist/current/man/html/"
"TixCmd/tixExFileSelectBox.htm>`_ widget is usually embedded in a "
"tixExFileSelectDialog widget. It provides an convenient method for the user "
"to select files. The style of the :class:`ExFileSelectBox` widget is very "
"similar to the standard file dialog on MS Windows 3.1."
msgstr ""

#: ../Doc/library/tix.rst:290
msgid ""
"The `FileSelectBox <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixFileSelectBox.htm>`_ is similar to the standard Motif(TM) file-selection "
"box. It is generally used for the user to choose a file. FileSelectBox "
"stores the files mostly recently selected into a :class:`ComboBox` widget so "
"that they can be quickly selected again."
msgstr ""

#: ../Doc/library/tix.rst:303
msgid ""
"The `FileEntry <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixFileEntry.htm>`_ widget can be used to input a filename. The user can "
"type in the filename manually. Alternatively, the user can press the button "
"widget that sits next to the entry, which will bring up a file selection "
"dialog."
msgstr ""

#: ../Doc/library/tix.rst:314
msgid "Hierarchical ListBox"
msgstr ""

#: ../Doc/library/tix.rst:319
msgid ""
"The `HList <http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixHList."
"htm>`_ widget can be used to display any data that have a hierarchical "
"structure, for example, file system directory trees. The list entries are "
"indented and connected by branch lines according to their places in the "
"hierarchy."
msgstr ""

#: ../Doc/library/tix.rst:331
msgid ""
"The `CheckList <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixCheckList.htm>`_ widget displays a list of items to be selected by the "
"user. CheckList acts similarly to the Tk checkbutton or radiobutton widgets, "
"except it is capable of handling many more items than checkbuttons or "
"radiobuttons."
msgstr ""

#: ../Doc/library/tix.rst:347
msgid ""
"The `Tree <http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTree."
"htm>`_ widget can be used to display hierarchical data in a tree form. The "
"user can adjust the view of the tree by opening or closing parts of the tree."
msgstr ""

#: ../Doc/library/tix.rst:359
msgid "Tabular ListBox"
msgstr ""

#: ../Doc/library/tix.rst:364
msgid ""
"The `TList <http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTList."
"htm>`_ widget can be used to display data in a tabular format. The list "
"entries of a :class:`TList` widget are similar to the entries in the Tk "
"listbox widget.  The main differences are (1) the :class:`TList` widget can "
"display the list entries in a two dimensional format and (2) you can use "
"graphical images as well as multiple colors and fonts for the list entries."
msgstr ""

#: ../Doc/library/tix.rst:387
msgid "Manager Widgets"
msgstr ""

#: ../Doc/library/tix.rst:392
msgid ""
"The `PanedWindow <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixPanedWindow.htm>`_ widget allows the user to interactively manipulate the "
"sizes of several panes. The panes can be arranged either vertically or "
"horizontally.  The user changes the sizes of the panes by dragging the "
"resize handle between two panes."
msgstr ""

#: ../Doc/library/tix.rst:404
msgid ""
"The `ListNoteBook <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixListNoteBook.htm>`_ widget is very similar to the :class:`TixNoteBook` "
"widget: it can be used to display many windows in a limited space using a "
"notebook metaphor. The notebook is divided into a stack of pages (windows). "
"At one time only one of these pages can be shown. The user can navigate "
"through these pages by choosing the name of the desired page in the :attr:"
"`hlist` subwidget."
msgstr ""

#: ../Doc/library/tix.rst:418
msgid ""
"The `NoteBook <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixNoteBook.htm>`_ widget can be used to display many windows in a limited "
"space using a notebook metaphor. The notebook is divided into a stack of "
"pages. At one time only one of these pages can be shown. The user can "
"navigate through these pages by choosing the visual \"tabs\" at the top of "
"the NoteBook widget."
msgstr ""

#: ../Doc/library/tix.rst:440
msgid "Image Types"
msgstr ""

# 6f9f801511954eda93bd3ffb5360c232
#: ../Doc/library/tix.rst:442
msgid "The :mod:`Tix` module adds:"
msgstr ""

# fdae51500c13409792f8e991b6a70c72
#: ../Doc/library/tix.rst:444
msgid ""
"`pixmap <http://tix.sourceforge.net/dist/current/man/html/TixCmd/pixmap."
"htm>`_ capabilities to all :mod:`Tix` and :mod:`Tkinter` widgets to create "
"color images from XPM files."
msgstr ""

#: ../Doc/library/tix.rst:453
msgid ""
"`Compound <http://tix.sourceforge.net/dist/current/man/html/TixCmd/compound."
"htm>`_ image types can be used to create images that consists of multiple "
"horizontal lines; each line is composed of a series of items (texts, "
"bitmaps, images or spaces) arranged from left to right. For example, a "
"compound image can be used to display a bitmap and a text string "
"simultaneously in a Tk :class:`Button` widget."
msgstr ""

#: ../Doc/library/tix.rst:472
msgid "Miscellaneous Widgets"
msgstr ""

#: ../Doc/library/tix.rst:477
msgid ""
"The `InputOnly <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tixInputOnly.htm>`_ widgets are to accept inputs from the user, which can be "
"done with the ``bind`` command (Unix only)."
msgstr ""

#: ../Doc/library/tix.rst:484
msgid "Form Geometry Manager"
msgstr ""

# aaddfa9e808a45daa31157356a28211c
#: ../Doc/library/tix.rst:486
msgid "In addition, :mod:`Tix` augments :mod:`Tkinter` by providing:"
msgstr ""

#: ../Doc/library/tix.rst:491
msgid ""
"The `Form <http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixForm."
"htm>`_ geometry manager based on attachment rules for all Tk widgets."
msgstr ""

#: ../Doc/library/tix.rst:498
msgid "Tix Commands"
msgstr ""

#: ../Doc/library/tix.rst:503
msgid ""
"The `tix commands <http://tix.sourceforge.net/dist/current/man/html/TixCmd/"
"tix.htm>`_ provide access to miscellaneous elements of :mod:`Tix`'s internal "
"state and the :mod:`Tix` application context.  Most of the information "
"manipulated by these methods pertains to the application as a whole, or to a "
"screen or display, rather than to a particular window."
msgstr ""

#: ../Doc/library/tix.rst:510
msgid "To view the current settings, the common usage is::"
msgstr ""

#: ../Doc/library/tix.rst:519
msgid ""
"Query or modify the configuration options of the Tix application context. If "
"no option is specified, returns a dictionary all of the available options.  "
"If option is specified with no value, then the method returns a list "
"describing the one named option (this list will be identical to the "
"corresponding sublist of the value returned if no option is specified).  If "
"one or more option-value pairs are specified, then the method modifies the "
"given option(s) to have the given value(s); in this case the method returns "
"an empty string. Option may be any of the configuration options."
msgstr ""

#: ../Doc/library/tix.rst:531
msgid ""
"Returns the current value of the configuration option given by *option*. "
"Option may be any of the configuration options."
msgstr ""

#: ../Doc/library/tix.rst:537
msgid ""
"Locates a bitmap file of the name ``name.xpm`` or ``name`` in one of the "
"bitmap directories (see the :meth:`tix_addbitmapdir` method).  By using :"
"meth:`tix_getbitmap`, you can avoid hard coding the pathnames of the bitmap "
"files in your application. When successful, it returns the complete pathname "
"of the bitmap file, prefixed with the character ``@``.  The returned value "
"can be used to configure the ``bitmap`` option of the Tk and Tix widgets."
msgstr ""

#: ../Doc/library/tix.rst:547
msgid ""
"Tix maintains a list of directories under which the :meth:`tix_getimage` "
"and :meth:`tix_getbitmap` methods will search for image files.  The standard "
"bitmap directory is :file:`$TIX_LIBRARY/bitmaps`. The :meth:"
"`tix_addbitmapdir` method adds *directory* into this list. By using this "
"method, the image files of an applications can also be located using the :"
"meth:`tix_getimage` or :meth:`tix_getbitmap` method."
msgstr ""

#: ../Doc/library/tix.rst:557
msgid ""
"Returns the file selection dialog that may be shared among different calls "
"from this application.  This method will create a file selection dialog "
"widget when it is called the first time. This dialog will be returned by all "
"subsequent calls to :meth:`tix_filedialog`.  An optional dlgclass parameter "
"can be passed as a string to specified what type of file selection dialog "
"widget is desired. Possible options are ``tix``, ``FileSelectDialog`` or "
"``tixExFileSelectDialog``."
msgstr ""

#: ../Doc/library/tix.rst:567
msgid ""
"Locates an image file of the name :file:`name.xpm`, :file:`name.xbm` or :"
"file:`name.ppm` in one of the bitmap directories (see the :meth:"
"`tix_addbitmapdir` method above). If more than one file with the same name "
"(but different extensions) exist, then the image type is chosen according to "
"the depth of the X display: xbm images are chosen on monochrome displays and "
"color images are chosen on color displays. By using :meth:`tix_getimage`, "
"you can avoid hard coding the pathnames of the image files in your "
"application. When successful, this method returns the name of the newly "
"created image, which can be used to configure the ``image`` option of the Tk "
"and Tix widgets."
msgstr ""

#: ../Doc/library/tix.rst:580
msgid "Gets the options maintained by the Tix scheme mechanism."
msgstr ""

#: ../Doc/library/tix.rst:585
msgid ""
"Resets the scheme and fontset of the Tix application to *newScheme* and "
"*newFontSet*, respectively.  This affects only those widgets created after "
"this call.  Therefore, it is best to call the resetoptions method before the "
"creation of any widgets in a Tix application."
msgstr ""

#: ../Doc/library/tix.rst:590
msgid ""
"The optional parameter *newScmPrio* can be given to reset the priority level "
"of the Tk options set by the Tix schemes."
msgstr ""

#: ../Doc/library/tix.rst:593
msgid ""
"Because of the way Tk handles the X option database, after Tix has been has "
"imported and inited, it is not possible to reset the color schemes and font "
"sets using the :meth:`tix_config` method. Instead, the :meth:"
"`tix_resetoptions` method must be used."
msgstr ""

#: ../Doc/library/tk.rst:5
msgid "Graphical User Interfaces with Tk"
msgstr ""

# 4d8b8a994f7b4ce39ece47f30e7eccfa
#: ../Doc/library/tk.rst:13
msgid ""
"Tk/Tcl has long been an integral part of Python.  It provides a robust and "
"platform independent windowing toolkit, that is available to Python "
"programmers using the :mod:`Tkinter` module, and its extensions, the :mod:"
"`Tix` and the :mod:`ttk` modules."
msgstr ""

# b5591dfeb1fb4794bfe7060ba52ade3e
#: ../Doc/library/tk.rst:18
msgid ""
"The :mod:`Tkinter` module is a thin object-oriented layer on top of Tcl/Tk. "
"To use :mod:`Tkinter`, you don't need to write Tcl code, but you will need "
"to consult the Tk documentation, and occasionally the Tcl documentation. :"
"mod:`Tkinter` is a set of wrappers that implement the Tk widgets as Python "
"classes.  In addition, the internal module :mod:`_tkinter` provides a "
"threadsafe mechanism which allows Python and Tcl to interact."
msgstr ""

# cbab0004e8454da8a75bbdd1a0b5e0f5
#: ../Doc/library/tk.rst:25
msgid ""
":mod:`Tkinter`'s chief virtues are that it is fast, and that it usually "
"comes bundled with Python. Although its standard documentation is weak, good "
"material is available, which includes: references, tutorials, a book and "
"others. :mod:`Tkinter` is also famous for having an outdated look and feel, "
"which has been vastly improved in Tk 8.5. Nevertheless, there are many other "
"GUI libraries that you could be interested in. For more information about "
"alternatives, see the :ref:`other-gui-packages` section."
msgstr ""

# c6cd4d12f9484a34b63fcb22340752ae
#: ../Doc/library/tkinter.rst:2
msgid ":mod:`Tkinter` --- Python interface to Tcl/Tk"
msgstr ""

# 91b7bde1f86b47b59a0f7d7281672aab
#: ../Doc/library/tkinter.rst:9
msgid ""
"The :mod:`Tkinter` module (\"Tk interface\") is the standard Python "
"interface to the Tk GUI toolkit.  Both Tk and :mod:`Tkinter` are available "
"on most Unix platforms, as well as on Windows systems.  (Tk itself is not "
"part of Python; it is maintained at ActiveState.)"
msgstr ""

# 4691693ab3f0471fb99dd7a8232f5bad
#: ../Doc/library/tkinter.rst:16
msgid ""
":mod:`Tkinter` has been renamed to :mod:`tkinter` in Python 3.  The :term:"
"`2to3` tool will automatically adapt imports when converting your sources to "
"Python 3."
msgstr ""

#: ../Doc/library/tkinter.rst:23
msgid ""
"The Python Tkinter Topic Guide provides a great deal of information on using "
"Tk from Python and links to other sources of information on Tk."
msgstr ""

# d6833f3e605646d18874ead6b66d2804
#: ../Doc/library/tkinter.rst:27
msgid ""
"Extensive tutorial plus friendlier widget pages for some of the widgets."
msgstr ""

#: ../Doc/library/tkinter.rst:30
msgid "On-line reference material."
msgstr ""

# 72d7bedc7f544d11abdc0e4eb9ae1fe0
#: ../Doc/library/tkinter.rst:33
msgid "Online reference for tkinter supported by effbot.org."
msgstr ""

# b32b2ab2064d448386b544bbca302862
#: ../Doc/library/tkinter.rst:36
msgid "Official manual for the latest tcl/tk version."
msgstr ""

# bb6202cb9d6e43be853f21c3c7cc2948
#: ../Doc/library/tkinter.rst:39
msgid "Book by Mark Lutz, has excellent coverage of Tkinter."
msgstr ""

# ca57b183d0e8478d9d6fe27295da3c0d
#: ../Doc/library/tkinter.rst:42
msgid ""
"Book by Mark Rozerman about building attractive and modern graphical user "
"interfaces with Python and Tkinter."
msgstr ""

#: ../Doc/library/tkinter.rst:45
msgid "Fredrik Lundh's on-line reference material."
msgstr ""

#: ../Doc/library/tkinter.rst:48
msgid "The book by John Grayson (ISBN 1-884777-81-3)."
msgstr ""

#: ../Doc/library/tkinter.rst:52
msgid "Tkinter Modules"
msgstr ""

# a21a60cbb47642488a7778ac0107ccd9
#: ../Doc/library/tkinter.rst:54
msgid ""
"Most of the time, the :mod:`Tkinter` module is all you really need, but a "
"number of additional modules are available as well.  The Tk interface is "
"located in a binary module named :mod:`_tkinter`. This module contains the "
"low-level interface to Tk, and should never be used directly by application "
"programmers. It is usually a shared library (or DLL), but might in some "
"cases be statically linked with the Python interpreter."
msgstr ""

# b7955f8c73404f78b369136b2cc22ccd
#: ../Doc/library/tkinter.rst:61
msgid ""
"In addition to the Tk interface module, :mod:`Tkinter` includes a number of "
"Python modules. The two most important modules are the :mod:`Tkinter` module "
"itself, and a module called :mod:`Tkconstants`. The former automatically "
"imports the latter, so to use Tkinter, all you need to do is to import one "
"module::"
msgstr ""

#: ../Doc/library/tkinter.rst:68
msgid "Or, more often::"
msgstr ""

#: ../Doc/library/tkinter.rst:75
msgid ""
"The :class:`Tk` class is instantiated without arguments. This creates a "
"toplevel widget of Tk which usually is the main window of an application. "
"Each instance has its own associated Tcl interpreter."
msgstr ""

#: ../Doc/library/tkinter.rst:87
msgid ""
"The :func:`Tcl` function is a factory function which creates an object much "
"like that created by the :class:`Tk` class, except that it does not "
"initialize the Tk subsystem.  This is most often useful when driving the Tcl "
"interpreter in an environment where one doesn't want to create extraneous "
"toplevel windows, or where one cannot (such as Unix/Linux systems without an "
"X server).  An object created by the :func:`Tcl` object can have a Toplevel "
"window created (and the Tk subsystem initialized) by calling its :meth:"
"`loadtk` method."
msgstr ""

#: ../Doc/library/tkinter.rst:97
msgid "Other modules that provide Tk support include:"
msgstr ""

#: ../Doc/library/tkinter.rst:100
msgid "Text widget with a vertical scroll bar built in."
msgstr ""

#: ../Doc/library/tkinter.rst:103
msgid "Dialog to let the user choose a color."
msgstr ""

#: ../Doc/library/tkinter.rst:106
msgid "Base class for the dialogs defined in the other modules listed here."
msgstr ""

#: ../Doc/library/tkinter.rst:109
msgid "Common dialogs to allow the user to specify a file to open or save."
msgstr ""

#: ../Doc/library/tkinter.rst:112
msgid "Utilities to help work with fonts."
msgstr ""

#: ../Doc/library/tkinter.rst:115
msgid "Access to standard Tk dialog boxes."
msgstr ""

#: ../Doc/library/tkinter.rst:118
msgid "Basic dialogs and convenience functions."
msgstr ""

# c79600e88df54b66a23086ac02edb385
#: ../Doc/library/tkinter.rst:121
msgid ""
"Drag-and-drop support for :mod:`Tkinter`. This is experimental and should "
"become deprecated when it is replaced  with the Tk DND."
msgstr ""

#: ../Doc/library/tkinter.rst:125
msgid "Turtle graphics in a Tk window."
msgstr ""

# e4a8154bcbbb4d2e950043dc2793b452
#: ../Doc/library/tkinter.rst:127
msgid ""
"These have been renamed as well in Python 3; they were all made submodules "
"of the new ``tkinter`` package."
msgstr ""

#: ../Doc/library/tkinter.rst:132
msgid "Tkinter Life Preserver"
msgstr ""

#: ../Doc/library/tkinter.rst:137
msgid ""
"This section is not designed to be an exhaustive tutorial on either Tk or "
"Tkinter.  Rather, it is intended as a stop gap, providing some introductory "
"orientation on the system."
msgstr ""

#: ../Doc/library/tkinter.rst:141
msgid "Credits:"
msgstr ""

#: ../Doc/library/tkinter.rst:143
msgid "Tkinter was written by Steen Lumholt and Guido van Rossum."
msgstr ""

#: ../Doc/library/tkinter.rst:145
msgid "Tk was written by John Ousterhout while at Berkeley."
msgstr ""

#: ../Doc/library/tkinter.rst:147
msgid ""
"This Life Preserver was written by Matt Conway at the University of Virginia."
msgstr ""

# a73028c952ed4123a7a9f4893d08745c
#: ../Doc/library/tkinter.rst:149
msgid ""
"The html rendering, and some liberal editing, was produced from a FrameMaker "
"version by Ken Manheimer."
msgstr ""

#: ../Doc/library/tkinter.rst:152
msgid ""
"Fredrik Lundh elaborated and revised the class interface descriptions, to "
"get them current with Tk 4.2."
msgstr ""

#: ../Doc/library/tkinter.rst:155
msgid ""
"Mike Clarkson converted the documentation to LaTeX, and compiled the  User "
"Interface chapter of the reference manual."
msgstr ""

#: ../Doc/library/tkinter.rst:160
msgid "How To Use This Section"
msgstr ""

#: ../Doc/library/tkinter.rst:162
msgid ""
"This section is designed in two parts: the first half (roughly) covers "
"background material, while the second half can be taken to the keyboard as a "
"handy reference."
msgstr ""

# f16ddaf9479b44638d15564366bbc60d
#: ../Doc/library/tkinter.rst:166
msgid ""
"When trying to answer questions of the form \"how do I do blah\", it is "
"often best to find out how to do\"blah\" in straight Tk, and then convert "
"this back into the corresponding :mod:`Tkinter` call. Python programmers can "
"often guess at the correct Python command by looking at the Tk "
"documentation. This means that in order to use Tkinter, you will have to "
"know a little bit about Tk. This document can't fulfill that role, so the "
"best we can do is point you to the best documentation that exists. Here are "
"some hints:"
msgstr ""

# 4c7f0aada7ea438f95372faafb0f8297
#: ../Doc/library/tkinter.rst:174
msgid ""
"The authors strongly suggest getting a copy of the Tk man pages. "
"Specifically, the man pages in the ``mann`` directory are most useful. The "
"``man3`` man pages describe the C interface to the Tk library and thus are "
"not especially helpful for script writers."
msgstr ""

#: ../Doc/library/tkinter.rst:179
msgid ""
"Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John "
"Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and Tk "
"for the novice.  The book is not exhaustive, and for many details it defers "
"to the man pages."
msgstr ""

# 2002e1a2a92945618140cabc8c1cded9
#: ../Doc/library/tkinter.rst:184
msgid ""
":file:`Tkinter.py` is a last resort for most, but can be a good place to go "
"when nothing else makes sense."
msgstr ""

#: ../Doc/library/tkinter.rst:191
msgid "The Tk/Tcl development is largely taking place at ActiveState."
msgstr ""

#: ../Doc/library/tkinter.rst:194
msgid "The book by John Ousterhout, the inventor of Tcl ."
msgstr ""

#: ../Doc/library/tkinter.rst:197
msgid "Brent Welch's encyclopedic book."
msgstr ""

#: ../Doc/library/tkinter.rst:201
msgid "A Simple Hello World Program"
msgstr ""

#: ../Doc/library/tkinter.rst:237
msgid "A (Very) Quick Look at Tcl/Tk"
msgstr ""

#: ../Doc/library/tkinter.rst:239
msgid ""
"The class hierarchy looks complicated, but in actual practice, application "
"programmers almost always refer to the classes at the very bottom of the "
"hierarchy."
msgstr ""

#: ../Doc/library/tkinter.rst:245
msgid ""
"These classes are provided for the purposes of organizing certain functions "
"under one namespace. They aren't meant to be instantiated independently."
msgstr ""

#: ../Doc/library/tkinter.rst:248
msgid ""
"The :class:`Tk` class is meant to be instantiated only once in an "
"application. Application programmers need not instantiate one explicitly, "
"the system creates one whenever any of the other classes are instantiated."
msgstr ""

#: ../Doc/library/tkinter.rst:252
msgid ""
"The :class:`Widget` class is not meant to be instantiated, it is meant only "
"for subclassing to make \"real\" widgets (in C++, this is called an "
"'abstract class')."
msgstr ""

# a43231e52af34833a2564e1f1cffa1ca
#: ../Doc/library/tkinter.rst:256
msgid ""
"To make use of this reference material, there will be times when you will "
"need to know how to read short passages of Tk and how to identify the "
"various parts of a Tk command.   (See section :ref:`tkinter-basic-mapping` "
"for the :mod:`Tkinter` equivalents of what's below.)"
msgstr ""

#: ../Doc/library/tkinter.rst:261
msgid ""
"Tk scripts are Tcl programs.  Like all Tcl programs, Tk scripts are just "
"lists of tokens separated by spaces.  A Tk widget is just its *class*, the "
"*options* that help configure it, and the *actions* that make it do useful "
"things."
msgstr ""

#: ../Doc/library/tkinter.rst:265
msgid "To make a widget in Tk, the command is always of the form::"
msgstr ""

#: ../Doc/library/tkinter.rst:270
msgid "denotes which kind of widget to make (a button, a label, a menu...)"
msgstr ""

#: ../Doc/library/tkinter.rst:273
msgid ""
"is the new name for this widget.  All names in Tk must be unique.  To help "
"enforce this, widgets in Tk are named with *pathnames*, just like files in a "
"file system.  The top level widget, the *root*, is called ``.`` (period) and "
"children are delimited by more periods.  For example, ``.myApp.controlPanel."
"okButton`` might be the name of a widget."
msgstr ""

#: ../Doc/library/tkinter.rst:280
msgid ""
"configure the widget's appearance and in some cases, its behavior.  The "
"options come in the form of a list of flags and values. Flags are preceded "
"by a '-', like Unix shell command flags, and values are put in quotes if "
"they are more than one word."
msgstr ""

#: ../Doc/library/tkinter.rst:293
msgid ""
"Once created, the pathname to the widget becomes a new command.  This new "
"*widget command* is the programmer's handle for getting the new widget to "
"perform some *action*.  In C, you'd express this as someAction(fred, "
"someOptions), in C++, you would express this as fred.someAction"
"(someOptions), and in Tk, you say::"
msgstr ""

#: ../Doc/library/tkinter.rst:301
msgid "Note that the object name, ``.fred``, starts with a dot."
msgstr ""

#: ../Doc/library/tkinter.rst:303
msgid ""
"As you'd expect, the legal values for *someAction* will depend on the "
"widget's class: ``.fred disable`` works if fred is a button (fred gets "
"greyed out), but does not work if fred is a label (disabling of labels is "
"not supported in Tk)."
msgstr ""

#: ../Doc/library/tkinter.rst:307
msgid ""
"The legal values of *someOptions* is action dependent.  Some actions, like "
"``disable``, require no arguments, others, like a text-entry box's "
"``delete`` command, would need arguments to specify what range of text to "
"delete."
msgstr ""

#: ../Doc/library/tkinter.rst:315
msgid "Mapping Basic Tk into Tkinter"
msgstr ""

#: ../Doc/library/tkinter.rst:317
msgid "Class commands in Tk correspond to class constructors in Tkinter. ::"
msgstr ""

#: ../Doc/library/tkinter.rst:321
msgid ""
"The master of an object is implicit in the new name given to it at creation "
"time.  In Tkinter, masters are specified explicitly. ::"
msgstr ""

#: ../Doc/library/tkinter.rst:326
msgid ""
"The configuration options in Tk are given in lists of hyphened tags followed "
"by values.  In Tkinter, options are specified as keyword-arguments in the "
"instance constructor, and keyword-args for configure calls or as instance "
"indices, in dictionary style, for established instances.  See section :ref:"
"`tkinter-setting-options` on setting options. ::"
msgstr ""

# b70754c2f5574d478c5fdeff55d88849
#: ../Doc/library/tkinter.rst:336
msgid ""
"In Tk, to perform an action on a widget, use the widget name as a command, "
"and follow it with an action name, possibly with arguments (options).  In "
"Tkinter, you call methods on the class instance to invoke actions on the "
"widget.  The actions (methods) that a given widget can perform are listed in "
"the Tkinter.py module. ::"
msgstr ""

# 82151271c3fd40cf9a3109fc17552aec
#: ../Doc/library/tkinter.rst:344
msgid ""
"To give a widget to the packer (geometry manager), you call pack with "
"optional arguments.  In Tkinter, the Pack class holds all this "
"functionality, and the various forms of the pack command are implemented as "
"methods.  All widgets in :mod:`Tkinter` are subclassed from the Packer, and "
"so inherit all the packing methods. See the :mod:`Tix` module documentation "
"for additional information on the Form geometry manager. ::"
msgstr ""

#: ../Doc/library/tkinter.rst:355
msgid "How Tk and Tkinter are Related"
msgstr ""

#: ../Doc/library/tkinter.rst:357
msgid "From the top down:"
msgstr ""

# e571bf4d2d0f431c996237aed05ec7d5
#: ../Doc/library/tkinter.rst:360
msgid "A Python application makes a :mod:`Tkinter` call."
msgstr ""

# fbc9a58c53cb477c9fb4861d973b1e1b
#: ../Doc/library/tkinter.rst:363
msgid ""
"This call (say, for example, creating a button widget), is implemented in "
"the *Tkinter* module, which is written in Python.  This Python function will "
"parse the commands and the arguments and convert them into a form that makes "
"them look as if they had come from a Tk script instead of a Python script."
msgstr ""

# df595f5bb8a549dea6ce9d5518b40033
#: ../Doc/library/tkinter.rst:369
msgid ""
"These commands and their arguments will be passed to a C function in the "
"*tkinter* - note the lowercase - extension module."
msgstr ""

# 6cbf1dd957694837aab99122e30b59ee
#: ../Doc/library/tkinter.rst:373
msgid ""
"This C function is able to make calls into other C modules, including the C "
"functions that make up the Tk library.  Tk is implemented in C and some Tcl. "
"The Tcl part of the Tk widgets is used to bind certain default behaviors to "
"widgets, and is executed once at the point where the Python :mod:`Tkinter` "
"module is imported. (The user never sees this stage)."
msgstr ""

#: ../Doc/library/tkinter.rst:380
msgid "The Tk part of the Tk Widgets implement the final mapping to ..."
msgstr ""

#: ../Doc/library/tkinter.rst:383
msgid "the Xlib library to draw graphics on the screen."
msgstr ""

#: ../Doc/library/tkinter.rst:387
msgid "Handy Reference"
msgstr ""

#: ../Doc/library/tkinter.rst:393
msgid "Setting Options"
msgstr ""

#: ../Doc/library/tkinter.rst:395
msgid ""
"Options control things like the color and border width of a widget. Options "
"can be set in three ways:"
msgstr ""

#: ../Doc/library/tkinter.rst:414
msgid ""
"For a complete explanation of a given option and its behavior, see the Tk "
"man pages for the widget in question."
msgstr ""

#: ../Doc/library/tkinter.rst:417
msgid ""
"Note that the man pages list \"STANDARD OPTIONS\" and \"WIDGET SPECIFIC "
"OPTIONS\" for each widget.  The former is a list of options that are common "
"to many widgets, the latter are the options that are idiosyncratic to that "
"particular widget.  The Standard Options are documented on the :manpage:"
"`options(3)` man page."
msgstr ""

#: ../Doc/library/tkinter.rst:423
msgid ""
"No distinction between standard and widget-specific options is made in this "
"document.  Some options don't apply to some kinds of widgets. Whether a "
"given widget responds to a particular option depends on the class of the "
"widget; buttons have a ``command`` option, labels do not."
msgstr ""

#: ../Doc/library/tkinter.rst:428
msgid ""
"The options supported by a given widget are listed in that widget's man "
"page, or can be queried at runtime by calling the :meth:`config` method "
"without arguments, or by calling the :meth:`keys` method on that widget.  "
"The return value of these calls is a dictionary whose key is the name of the "
"option as a string (for example, ``'relief'``) and whose values are 5-tuples."
msgstr ""

#: ../Doc/library/tkinter.rst:434
msgid ""
"Some options, like ``bg`` are synonyms for common options with long names "
"(``bg`` is shorthand for \"background\"). Passing the ``config()`` method "
"the name of a shorthand option will return a 2-tuple, not 5-tuple. The 2-"
"tuple passed back will contain the name of the synonym and the \"real\" "
"option (such as ``('bg', 'background')``)."
msgstr ""

#: ../Doc/library/tkinter.rst:443
msgid "option name"
msgstr ""

#: ../Doc/library/tkinter.rst:443 ../Doc/library/tkinter.rst:445
msgid "``'relief'``"
msgstr ""

#: ../Doc/library/tkinter.rst:445
msgid "option name for database lookup"
msgstr ""

#: ../Doc/library/tkinter.rst:447
msgid "option class for database lookup"
msgstr ""

#: ../Doc/library/tkinter.rst:447
msgid "``'Relief'``"
msgstr ""

#: ../Doc/library/tkinter.rst:450
msgid "default value"
msgstr ""

#: ../Doc/library/tkinter.rst:450
msgid "``'raised'``"
msgstr ""

#: ../Doc/library/tkinter.rst:452
msgid "current value"
msgstr ""

#: ../Doc/library/tkinter.rst:452
msgid "``'groove'``"
msgstr ""

#: ../Doc/library/tkinter.rst:460
msgid ""
"Of course, the dictionary printed will include all the options available and "
"their values.  This is meant only as an example."
msgstr ""

#: ../Doc/library/tkinter.rst:465
msgid "The Packer"
msgstr ""

#: ../Doc/library/tkinter.rst:469
msgid ""
"The packer is one of Tk's geometry-management mechanisms.    Geometry "
"managers are used to specify the relative positioning of the positioning of "
"widgets within their container - their mutual *master*.  In contrast to the "
"more cumbersome *placer* (which is used less commonly, and we do not cover "
"here), the packer takes qualitative relationship specification - *above*, "
"*to the left of*, *filling*, etc - and works everything out to determine the "
"exact placement coordinates for you."
msgstr ""

#: ../Doc/library/tkinter.rst:477
msgid ""
"The size of any *master* widget is determined by the size of the \"slave "
"widgets\" inside.  The packer is used to control where slave widgets appear "
"inside the master into which they are packed.  You can pack widgets into "
"frames, and frames into other frames, in order to achieve the kind of layout "
"you desire. Additionally, the arrangement is dynamically adjusted to "
"accommodate incremental changes to the configuration, once it is packed."
msgstr ""

#: ../Doc/library/tkinter.rst:484
msgid ""
"Note that widgets do not appear until they have had their geometry specified "
"with a geometry manager.  It's a common early mistake to leave out the "
"geometry specification, and then be surprised when the widget is created but "
"nothing appears.  A widget will appear only after it has had, for example, "
"the packer's :meth:`pack` method applied to it."
msgstr ""

#: ../Doc/library/tkinter.rst:490
msgid ""
"The pack() method can be called with keyword-option/value pairs that control "
"where the widget is to appear within its container, and how it is to behave "
"when the main application window is resized.  Here are some examples::"
msgstr ""

#: ../Doc/library/tkinter.rst:500
msgid "Packer Options"
msgstr ""

#: ../Doc/library/tkinter.rst:502
msgid ""
"For more extensive information on the packer and the options that it can "
"take, see the man pages and page 183 of John Ousterhout's book."
msgstr ""

#: ../Doc/library/tkinter.rst:506
msgid ""
"Anchor type.  Denotes where the packer is to place each slave in its parcel."
msgstr ""

#: ../Doc/library/tkinter.rst:509
msgid "Boolean, ``0`` or ``1``."
msgstr ""

#: ../Doc/library/tkinter.rst:512
msgid "Legal values: ``'x'``, ``'y'``, ``'both'``, ``'none'``."
msgstr ""

#: ../Doc/library/tkinter.rst:515
msgid ""
"A distance - designating internal padding on each side of the slave widget."
msgstr ""

#: ../Doc/library/tkinter.rst:518
msgid ""
"A distance - designating external padding on each side of the slave widget."
msgstr ""

#: ../Doc/library/tkinter.rst:521
msgid "Legal values are: ``'left'``, ``'right'``, ``'top'``, ``'bottom'``."
msgstr ""

#: ../Doc/library/tkinter.rst:525
msgid "Coupling Widget Variables"
msgstr ""

#: ../Doc/library/tkinter.rst:527
msgid ""
"The current-value setting of some widgets (like text entry widgets) can be "
"connected directly to application variables by using special options.  These "
"options are ``variable``, ``textvariable``, ``onvalue``, ``offvalue``, and "
"``value``.  This connection works both ways: if the variable changes for any "
"reason, the widget it's connected to will be updated to reflect the new "
"value."
msgstr ""

# 00104c9b90aa47cca517156aa5dba9b4
#: ../Doc/library/tkinter.rst:533
msgid ""
"Unfortunately, in the current implementation of :mod:`Tkinter` it is not "
"possible to hand over an arbitrary Python variable to a widget through a "
"``variable`` or ``textvariable`` option.  The only kinds of variables for "
"which this works are variables that are subclassed from a class called "
"Variable, defined in the :mod:`Tkinter` module."
msgstr ""

#: ../Doc/library/tkinter.rst:539
msgid ""
"There are many useful subclasses of Variable already defined: :class:"
"`StringVar`, :class:`IntVar`, :class:`DoubleVar`, and :class:`BooleanVar`.  "
"To read the current value of such a variable, call the :meth:`get` method on "
"it, and to change its value you call the :meth:`!set` method.  If you follow "
"this protocol, the widget will always track the value of the variable, with "
"no further intervention on your part."
msgstr ""

#: ../Doc/library/tkinter.rst:575
msgid "The Window Manager"
msgstr ""

# da9334ede3a14fb7b1c7cffe5a537f87
#: ../Doc/library/tkinter.rst:579
msgid ""
"In Tk, there is a utility command, ``wm``, for interacting with the window "
"manager.  Options to the ``wm`` command allow you to control things like "
"titles, placement, icon bitmaps, and the like.  In :mod:`Tkinter`, these "
"commands have been implemented as methods on the :class:`Wm` class.  "
"Toplevel widgets are subclassed from the :class:`Wm` class, and so can call "
"the :class:`Wm` methods directly."
msgstr ""

#: ../Doc/library/tkinter.rst:586
msgid ""
"To get at the toplevel window that contains a given widget, you can often "
"just refer to the widget's master.  Of course if the widget has been packed "
"inside of a frame, the master won't represent a toplevel window.  To get at "
"the toplevel window that contains an arbitrary widget, you can call the :"
"meth:`_root` method. This method begins with an underscore to denote the "
"fact that this function is part of the implementation, and not an interface "
"to Tk functionality."
msgstr ""

#: ../Doc/library/tkinter.rst:593
msgid "Here are some examples of typical usage::"
msgstr ""

#: ../Doc/library/tkinter.rst:616
msgid "Tk Option Data Types"
msgstr ""

#: ../Doc/library/tkinter.rst:621
msgid ""
"Legal values are points of the compass: ``\"n\"``, ``\"ne\"``, ``\"e\"``, ``"
"\"se\"``, ``\"s\"``, ``\"sw\"``, ``\"w\"``, ``\"nw\"``, and also ``\"center"
"\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:625
msgid ""
"There are eight built-in, named bitmaps: ``'error'``, ``'gray25'``, "
"``'gray50'``, ``'hourglass'``, ``'info'``, ``'questhead'``, ``'question'``, "
"``'warning'``.  To specify an X bitmap filename, give the full path to the "
"file, preceded with an ``@``, as in ``\"@/usr/contrib/bitmap/gumby.bit\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:631
msgid "You can pass integers 0 or 1 or the strings ``\"yes\"`` or ``\"no\"`` ."
msgstr ""

#: ../Doc/library/tkinter.rst:634
msgid "This is any Python function that takes no arguments.  For example::"
msgstr ""

#: ../Doc/library/tkinter.rst:641
msgid ""
"Colors can be given as the names of X colors in the rgb.txt file, or as "
"strings representing RGB values in 4 bit: ``\"#RGB\"``, 8 bit: ``\"#RRGGBB"
"\"``, 12 bit\" ``\"#RRRGGGBBB\"``, or 16 bit ``\"#RRRRGGGGBBBB\"`` ranges, "
"where R,G,B here represent any legal hex digit.  See page 160 of "
"Ousterhout's book for details."
msgstr ""

#: ../Doc/library/tkinter.rst:647
msgid ""
"The standard X cursor names from :file:`cursorfont.h` can be used, without "
"the ``XC_`` prefix.  For example to get a hand cursor (:const:`XC_hand2`), "
"use the string ``\"hand2\"``.  You can also specify a bitmap and mask file "
"of your own. See page 179 of Ousterhout's book."
msgstr ""

#: ../Doc/library/tkinter.rst:653
msgid ""
"Screen distances can be specified in either pixels or absolute distances. "
"Pixels are given as numbers and absolute distances as strings, with the "
"trailing character denoting units: ``c`` for centimetres, ``i`` for inches, "
"``m`` for millimetres, ``p`` for printer's points.  For example, 3.5 inches "
"is expressed as ``\"3.5i\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:660
msgid ""
"Tk uses a list font name format, such as ``{courier 10 bold}``. Font sizes "
"with positive numbers are measured in points; sizes with negative numbers "
"are measured in pixels."
msgstr ""

#: ../Doc/library/tkinter.rst:665
msgid ""
"This is a string of the form ``widthxheight``, where width and height are "
"measured in pixels for most widgets (in characters for widgets displaying "
"text). For example: ``fred[\"geometry\"] = \"200x100\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:670
msgid ""
"Legal values are the strings: ``\"left\"``, ``\"center\"``, ``\"right\"``, "
"and ``\"fill\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:674
msgid ""
"This is a string with four space-delimited elements, each of which is a "
"legal distance (see above).  For example: ``\"2 3 4 5\"`` and ``\"3i 2i 4.5i "
"2i\"`` and ``\"3c 2c 4c 10.43c\"``  are all legal regions."
msgstr ""

#: ../Doc/library/tkinter.rst:679
msgid ""
"Determines what the border style of a widget will be.  Legal values are: ``"
"\"raised\"``, ``\"sunken\"``, ``\"flat\"``, ``\"groove\"``, and ``\"ridge"
"\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:683
msgid ""
"This is almost always the :meth:`!set` method of some scrollbar widget, but "
"can be any widget method that takes a single argument.   Refer to the file :"
"file:`Demo/tkinter/matt/canvas-with-scrollbars.py` in the Python source "
"distribution for an example."
msgstr ""

#: ../Doc/library/tkinter.rst:689
msgid "Must be one of: ``\"none\"``, ``\"char\"``, or ``\"word\"``."
msgstr ""

#: ../Doc/library/tkinter.rst:693
msgid "Bindings and Events"
msgstr ""

#: ../Doc/library/tkinter.rst:699
msgid ""
"The bind method from the widget command allows you to watch for certain "
"events and to have a callback function trigger when that event type occurs.  "
"The form of the bind method is::"
msgstr ""

#: ../Doc/library/tkinter.rst:705
msgid "where:"
msgstr ""

#: ../Doc/library/tkinter.rst:708
msgid ""
"is a string that denotes the target kind of event.  (See the bind man page "
"and page 201 of John Ousterhout's book for details)."
msgstr ""

#: ../Doc/library/tkinter.rst:712
msgid ""
"is a Python function, taking one argument, to be invoked when the event "
"occurs. An Event instance will be passed as the argument. (Functions "
"deployed this way are commonly known as *callbacks*.)"
msgstr ""

#: ../Doc/library/tkinter.rst:717
msgid ""
"is optional, either ``''`` or ``'+'``.  Passing an empty string denotes that "
"this binding is to replace any other bindings that this event is associated "
"with.  Passing a ``'+'`` means that this function is to be added to the list "
"of functions bound to this event type."
msgstr ""

# 31d060cf549f46c9a567b531bc95832d
#: ../Doc/library/tkinter.rst:729
msgid ""
"Notice how the widget field of the event is being accessed in the :meth:"
"`turnRed` callback.  This field contains the widget that caught the X "
"event.  The following table lists the other event fields you can access, and "
"how they are denoted in Tk, which can be useful when referring to the Tk man "
"pages. ::"
msgstr ""

#: ../Doc/library/tkinter.rst:748
msgid "The index Parameter"
msgstr ""

# a92f823042c743c38c7e32581681e7b7
#: ../Doc/library/tkinter.rst:750
msgid ""
"A number of widgets require\"index\" parameters to be passed.  These are "
"used to point at a specific place in a Text widget, or to particular "
"characters in an Entry widget, or to particular menu items in a Menu widget."
msgstr ""

# d032bfd44c6f4f7a8b0630e788aad13c
#: ../Doc/library/tkinter.rst:755
msgid ""
"Entry widgets have options that refer to character positions in the text "
"being displayed.  You can use these :mod:`Tkinter` functions to access these "
"special points in text widgets:"
msgstr ""

#: ../Doc/library/tkinter.rst:760
msgid "refers to the last position in the text"
msgstr ""

#: ../Doc/library/tkinter.rst:763
msgid "refers to the point where the text cursor is"
msgstr ""

#: ../Doc/library/tkinter.rst:766
msgid "indicates the beginning point of the selected text"
msgstr ""

#: ../Doc/library/tkinter.rst:769
msgid "denotes the last point of the selected text and finally"
msgstr ""

#: ../Doc/library/tkinter.rst:772
msgid ""
"refers to the character at pixel location *x*, *y* (with *y* not used in the "
"case of a text entry widget, which contains a single line of text)."
msgstr ""

#: ../Doc/library/tkinter.rst:776
msgid ""
"The index notation for Text widgets is very rich and is best described in "
"the Tk man pages."
msgstr ""

#: ../Doc/library/tkinter.rst:780
msgid ""
"Some options and methods for menus manipulate specific menu entries. Anytime "
"a menu index is needed for an option or a parameter, you may pass in:"
msgstr ""

#: ../Doc/library/tkinter.rst:783
msgid ""
"an integer which refers to the numeric position of the entry in the widget, "
"counted from the top, starting with 0;"
msgstr ""

# 7f1e268b1a8a497ebd4663ed0f4247da
#: ../Doc/library/tkinter.rst:786
msgid ""
"the string ``'active'``, which refers to the menu position that is currently "
"under the cursor;"
msgstr ""

#: ../Doc/library/tkinter.rst:789
msgid "the string ``\"last\"`` which refers to the last menu item;"
msgstr ""

#: ../Doc/library/tkinter.rst:791
msgid ""
"An integer preceded by ``@``, as in ``@6``, where the integer is interpreted "
"as a y pixel coordinate in the menu's coordinate system;"
msgstr ""

#: ../Doc/library/tkinter.rst:794
msgid ""
"the string ``\"none\"``, which indicates no menu entry at all, most often "
"used with menu.activate() to deactivate all entries, and finally,"
msgstr ""

#: ../Doc/library/tkinter.rst:797
msgid ""
"a text string that is pattern matched against the label of the menu entry, "
"as scanned from the top of the menu to the bottom.  Note that this index "
"type is considered after all the others, which means that matches for menu "
"items labelled ``last``, ``active``, or ``none`` may be interpreted as the "
"above literals, instead."
msgstr ""

#: ../Doc/library/tkinter.rst:805
msgid "Images"
msgstr ""

# 019321cd1d0c4e2fb5fa05137b1f56c3
#: ../Doc/library/tkinter.rst:807
msgid ""
"Bitmap/Pixelmap images can be created through the subclasses of :class:"
"`Tkinter.Image`:"
msgstr ""

#: ../Doc/library/tkinter.rst:810
msgid ":class:`BitmapImage` can be used for X11 bitmap data."
msgstr ""

#: ../Doc/library/tkinter.rst:812
msgid ":class:`PhotoImage` can be used for GIF and PPM/PGM color bitmaps."
msgstr ""

#: ../Doc/library/tkinter.rst:814
msgid ""
"Either type of image is created through either the ``file`` or the ``data`` "
"option (other options are available as well)."
msgstr ""

#: ../Doc/library/tkinter.rst:817
msgid ""
"The image object can then be used wherever an ``image`` option is supported "
"by some widget (e.g. labels, buttons, menus). In these cases, Tk will not "
"keep a reference to the image. When the last Python reference to the image "
"object is deleted, the image data is deleted as well, and Tk will display an "
"empty box wherever the image was used."
msgstr ""

#: ../Doc/library/token.rst:2
msgid ":mod:`token` --- Constants used with Python parse trees"
msgstr ""

# 453322c5728e44228ef8f390f15ee328
#: ../Doc/library/token.rst:8
msgid "**Source code:** :source:`Lib/token.py`"
msgstr ""

#: ../Doc/library/token.rst:12
msgid ""
"This module provides constants which represent the numeric values of leaf "
"nodes of the parse tree (terminal tokens).  Refer to the file :file:`Grammar/"
"Grammar` in the Python distribution for the definitions of the names in the "
"context of the language grammar.  The specific numeric values which the "
"names map to may change between Python versions."
msgstr ""

# a36f7fbfd8564a869e5df5ffbec47ab2
#: ../Doc/library/token.rst:18
msgid ""
"The module also provides a mapping from numeric codes to names and some "
"functions.  The functions mirror definitions in the Python C header files."
msgstr ""

#: ../Doc/library/token.rst:31
msgid "Return true for terminal token values."
msgstr ""

#: ../Doc/library/token.rst:36
msgid "Return true for non-terminal token values."
msgstr ""

#: ../Doc/library/token.rst:41
msgid "Return true if *x* is the marker indicating the end of input."
msgstr ""

# 906f7904a4a3409aa6d26be36c54a7b5
#: ../Doc/library/token.rst:44
msgid "The token constants are:"
msgstr ""

#: ../Doc/library/token.rst:106
msgid ""
"The second example for the :mod:`parser` module shows how to use the :mod:"
"`symbol` module."
msgstr ""

#: ../Doc/library/tokenize.rst:2
msgid ":mod:`tokenize` --- Tokenizer for Python source"
msgstr ""

# 88145c5909494420b3328fdd71056fde
#: ../Doc/library/tokenize.rst:9
msgid "**Source code:** :source:`Lib/tokenize.py`"
msgstr ""

#: ../Doc/library/tokenize.rst:13
msgid ""
"The :mod:`tokenize` module provides a lexical scanner for Python source "
"code, implemented in Python.  The scanner in this module returns comments as "
"tokens as well, making it useful for implementing \"pretty-printers,\" "
"including colorizers for on-screen displays."
msgstr ""

# b5804bd6d1e34bed8e9c12849dd95641
#: ../Doc/library/tokenize.rst:18
msgid ""
"To simplify token stream handling, all :ref:`operators` and :ref:"
"`delimiters` tokens are returned using the generic :data:`token.OP` token "
"type.  The exact type can be determined by checking the token ``string`` "
"field on the :term:`named tuple` returned from :func:`tokenize.tokenize` for "
"the character sequence that identifies a specific operator token."
msgstr ""

#: ../Doc/library/tokenize.rst:24
msgid "The primary entry point is a :term:`generator`:"
msgstr ""

# 6d922f5cfc76438c917e0740ff674ea1
#: ../Doc/library/tokenize.rst:28
msgid ""
"The :func:`generate_tokens` generator requires one argument, *readline*, "
"which must be a callable object which provides the same interface as the :"
"meth:`readline` method of built-in file objects (see section :ref:`bltin-"
"file-objects`).  Each call to the function should return one line of input "
"as a string. Alternately, *readline* may be a callable object that signals "
"completion by raising :exc:`StopIteration`."
msgstr ""

# a09f640a7877483ab3787c962ea0e97b
#: ../Doc/library/tokenize.rst:35
msgid ""
"The generator produces 5-tuples with these members: the token type; the "
"token string; a 2-tuple ``(srow, scol)`` of ints specifying the row and "
"column where the token begins in the source; a 2-tuple ``(erow, ecol)`` of "
"ints specifying the row and column where the token ends in the source; and "
"the line on which the token was found.  The line passed (the last tuple "
"item) is the *logical* line; continuation lines are included."
msgstr ""

# 23b22ba876dc46f883609dc57302b9d9
#: ../Doc/library/tokenize.rst:44
msgid "An older entry point is retained for backward compatibility:"
msgstr ""

# cc2389f73efa46ef8b6c4a16887ac673
#: ../Doc/library/tokenize.rst:49
msgid ""
"The :func:`tokenize` function accepts two parameters: one representing the "
"input stream, and one providing an output mechanism for :func:`tokenize`."
msgstr ""

# d86c15970700480c820025cd093ceb42
#: ../Doc/library/tokenize.rst:52
msgid ""
"The first parameter, *readline*, must be a callable object which provides "
"the same interface as the :meth:`readline` method of built-in file objects "
"(see section :ref:`bltin-file-objects`).  Each call to the function should "
"return one line of input as a string. Alternately, *readline* may be a "
"callable object that signals completion by raising :exc:`StopIteration`."
msgstr ""

# f071482a4b184aa18ff7c8f0f86d5e43
#: ../Doc/library/tokenize.rst:61
msgid ""
"The second parameter, *tokeneater*, must also be a callable object.  It is "
"called once for each token, with five arguments, corresponding to the tuples "
"generated by :func:`generate_tokens`."
msgstr ""

# 56db588ce1de42cd8939868eaa51f120
#: ../Doc/library/tokenize.rst:65
msgid ""
"All constants from the :mod:`token` module are also exported from :mod:"
"`tokenize`, as are two additional token type values that might be passed to "
"the *tokeneater* function by :func:`tokenize`:"
msgstr ""

#: ../Doc/library/tokenize.rst:72
msgid "Token value used to indicate a comment."
msgstr ""

#: ../Doc/library/tokenize.rst:77
msgid ""
"Token value used to indicate a non-terminating newline.  The NEWLINE token "
"indicates the end of a logical line of Python code; NL tokens are generated "
"when a logical line of code is continued over multiple physical lines."
msgstr ""

#: ../Doc/library/tokenize.rst:81
msgid ""
"Another function is provided to reverse the tokenization process. This is "
"useful for creating tools that tokenize a script, modify the token stream, "
"and write back the modified script."
msgstr ""

# 3c0e042afb204f86bd24d62c6c878663
#: ../Doc/library/tokenize.rst:88
msgid ""
"Converts tokens back into Python source code.  The *iterable* must return "
"sequences with at least two elements, the token type and the token string.  "
"Any additional sequence elements are ignored."
msgstr ""

#: ../Doc/library/tokenize.rst:92
msgid ""
"The reconstructed script is returned as a single string.  The result is "
"guaranteed to tokenize back to match the input so that the conversion is "
"lossless and round-trips are assured.  The guarantee applies only to the "
"token type and token string as the spacing between tokens (column positions) "
"may change."
msgstr ""

#: ../Doc/library/tokenize.rst:100
msgid ""
"Example of a script re-writer that transforms float literals into Decimal "
"objects::"
msgstr ""

#: ../Doc/library/trace.rst:2
msgid ":mod:`trace` --- Trace or track Python statement execution"
msgstr ""

# 89cb670d38fb4073b52406f9003c4be8
#: ../Doc/library/trace.rst:7
msgid "**Source code:** :source:`Lib/trace.py`"
msgstr ""

#: ../Doc/library/trace.rst:11
msgid ""
"The :mod:`trace` module allows you to trace program execution, generate "
"annotated statement coverage listings, print caller/callee relationships and "
"list functions executed during a program run.  It can be used in another "
"program or from the command line."
msgstr ""

# 3fad2885e5d0430784936004fdc9f9bc
#: ../Doc/library/trace.rst:19
msgid "Command-Line Usage"
msgstr ""

#: ../Doc/library/trace.rst:21
msgid ""
"The :mod:`trace` module can be invoked from the command line.  It can be as "
"simple as ::"
msgstr ""

# 7bedd8e71f14412690295699f3988bfb
#: ../Doc/library/trace.rst:26
msgid ""
"The above will execute :file:`somefile.py` and generate annotated listings "
"of all Python modules imported during the execution into the current "
"directory."
msgstr ""

# f44bd2dc4b26411490d11cd9f2c6ee4b
#: ../Doc/library/trace.rst:33
msgid "Display usage and exit."
msgstr ""

# fea79ffb451d44f3abd4520589469d43
#: ../Doc/library/trace.rst:37
msgid "Display the version of the module and exit."
msgstr ""

# b2b5ca7579a849dc97ab31585228de70
#: ../Doc/library/trace.rst:40
msgid "Main options"
msgstr ""

# 88e49fe1b1cf427da219fcfaca12299d
#: ../Doc/library/trace.rst:42
msgid ""
"At least one of the following options must be specified when invoking :mod:"
"`trace`.  The :option:`--listfuncs <-l>` option is mutually exclusive with "
"the :option:`--trace <-t>` and :option:`--counts <-c>` options . When :"
"option:`--listfuncs <-l>` is provided, neither :option:`--counts <-c>` nor :"
"option:`--trace <-t>` are accepted, and vice versa."
msgstr ""

# 890ac43dd02c43c189da23cd7811d583
#: ../Doc/library/trace.rst:52
msgid ""
"Produce a set of annotated listing files upon program completion that shows "
"how many times each statement was executed.  See also :option:`--coverdir <-"
"C>`, :option:`--file <-f>` and :option:`--no-report <-R>` below."
msgstr ""

#: ../Doc/library/trace.rst:59
msgid "Display lines as they are executed."
msgstr ""

# 344575ab200945278af3552c3ab6318c
#: ../Doc/library/trace.rst:63
msgid "Display the functions executed by running the program."
msgstr ""

# b3c636c801814826b3ed8bb15ebd130d
#: ../Doc/library/trace.rst:67
msgid ""
"Produce an annotated list from an earlier program run that used the :option:"
"`--count <-c>` and :option:`--file <-f>` option.  This does not execute any "
"code."
msgstr ""

# 494270be480f4f6da3e6a7c6318e8a92
#: ../Doc/library/trace.rst:73
msgid "Display the calling relationships exposed by running the program."
msgstr ""

# d4f0aabb7d7441eaacf56de33bbdf2d0
#: ../Doc/library/trace.rst:76
msgid "Modifiers"
msgstr ""

# 283148713b134d2aa930b9cf04ad60b9
#: ../Doc/library/trace.rst:82
msgid ""
"Name of a file to accumulate counts over several tracing runs.  Should be "
"used with the :option:`--count <-c>` option."
msgstr ""

# 1f7dd3a39c3e4d7192eec97c0ad16d6f
#: ../Doc/library/trace.rst:87
msgid ""
"Directory where the report files go.  The coverage report for ``package."
"module`` is written to file :file:`{dir}/{package}/{module}.cover`."
msgstr ""

# eae2abe07f314b2f8dde796d62d0c625
#: ../Doc/library/trace.rst:92
msgid ""
"When generating annotated listings, mark lines which were not executed with "
"``>>>>>>``."
msgstr ""

# 4a24f1b106e2437fa3fb6159dbd3c9ca
#: ../Doc/library/trace.rst:97
msgid ""
"When using :option:`--count <-c>` or :option:`--report <-r>`, write a brief "
"summary to stdout for each file processed."
msgstr ""

# 31eb74849e5748e0b412823b0034708a
#: ../Doc/library/trace.rst:102
msgid ""
"Do not generate annotated listings.  This is useful if you intend to make "
"several runs with :option:`--count <-c>`, and then produce a single set of "
"annotated listings at the end."
msgstr ""

# f7a041da8dcc4195b5b5b4314b386456
#: ../Doc/library/trace.rst:108
msgid ""
"Prefix each line with the time since the program started.  Only used while "
"tracing."
msgstr ""

# 87acabd6038c41478bf148f17ac82aca
#: ../Doc/library/trace.rst:112
msgid "Filters"
msgstr ""

# b081c51f70d047a1b0a9550454231d9c
#: ../Doc/library/trace.rst:114
msgid "These options may be repeated multiple times."
msgstr ""

# 7e04fa7a2082404488a77485d6b14309
#: ../Doc/library/trace.rst:120
msgid ""
"Ignore each of the given module names and its submodules (if it is a "
"package).  The argument can be a list of names separated by a comma."
msgstr ""

# 179aafb10be6434da64afc6fff3e917c
#: ../Doc/library/trace.rst:125
msgid ""
"Ignore all modules and packages in the named directory and subdirectories. "
"The argument can be a list of directories separated by :data:`os.pathsep`."
msgstr ""

# 2ecee33b2b0745159cfa5eff409692ce
#: ../Doc/library/trace.rst:131
msgid "Programmatic Interface"
msgstr ""

# aec49ca3e6a9434db8dd674a3bed54b4
#: ../Doc/library/trace.rst:135
msgid ""
"Create an object to trace execution of a single statement or expression.  "
"All parameters are optional.  *count* enables counting of line numbers.  "
"*trace* enables line execution tracing.  *countfuncs* enables listing of the "
"functions called during the run.  *countcallers* enables call relationship "
"tracking.  *ignoremods* is a list of modules or packages to ignore. "
"*ignoredirs* is a list of directories whose modules or packages should be "
"ignored.  *infile* is the name of the file from which to read stored count "
"information.  *outfile* is the name of the file in which to write updated "
"count information.  *timing* enables a timestamp relative to when tracing "
"was started to be displayed."
msgstr ""

# b860d4e5a6b04e4a9ade152caf524313
#: ../Doc/library/trace.rst:148
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters.  *cmd* must be a string or code object, suitable "
"for passing into :func:`exec`."
msgstr ""

# dac1ff9d65074563b6bfed41f892921f
#: ../Doc/library/trace.rst:154
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters, in the defined global and local environments.  "
"If not defined, *globals* and *locals* default to empty dictionaries."
msgstr ""

#: ../Doc/library/trace.rst:161
msgid ""
"Call *func* with the given arguments under control of the :class:`Trace` "
"object with the current tracing parameters."
msgstr ""

# 0bd399c41fbe4ecbbc9aafabd7b50502
#: ../Doc/library/trace.rst:166
msgid ""
"Return a :class:`CoverageResults` object that contains the cumulative "
"results of all previous calls to ``run``, ``runctx`` and ``runfunc`` for the "
"given :class:`Trace` instance.  Does not reset the accumulated trace results."
msgstr ""

# f80fcc23b26946519d83d52d1b3005c9
#: ../Doc/library/trace.rst:173
msgid ""
"A container for coverage results, created by :meth:`Trace.results`.  Should "
"not be created directly by the user."
msgstr ""

# b60f707acd9c455e8b1547d699c9a916
#: ../Doc/library/trace.rst:178
msgid "Merge in data from another :class:`CoverageResults` object."
msgstr ""

# 6f716e55354d42a0b9cb9d10e1dd1fe1
#: ../Doc/library/trace.rst:182
msgid ""
"Write coverage results.  Set *show_missing* to show lines that had no hits.  "
"Set *summary* to include in the output the coverage summary per module.  "
"*coverdir* specifies the directory into which the coverage result files will "
"be output.  If ``None``, the results for each source file are placed in its "
"directory."
msgstr ""

# 0548a88821fd467f91b8f003d94738b2
#: ../Doc/library/trace.rst:188
msgid "A simple example demonstrating the use of the programmatic interface::"
msgstr ""

#: ../Doc/library/traceback.rst:2
msgid ":mod:`traceback` --- Print or retrieve a stack traceback"
msgstr ""

#: ../Doc/library/traceback.rst:8
msgid ""
"This module provides a standard interface to extract, format and print stack "
"traces of Python programs.  It exactly mimics the behavior of the Python "
"interpreter when it prints a stack trace.  This is useful when you want to "
"print stack traces under program control, such as in a \"wrapper\" around "
"the interpreter."
msgstr ""

# 1b44bea6260544cb83bb9e05c71916f4
#: ../Doc/library/traceback.rst:16
msgid ""
"The module uses traceback objects --- this is the object type that is stored "
"in the variables :data:`sys.exc_traceback` (deprecated) and :data:`sys."
"last_traceback` and returned as the third item from :func:`sys.exc_info`."
msgstr ""

#: ../Doc/library/traceback.rst:25
msgid ""
"Print up to *limit* stack trace entries from *traceback*.  If *limit* is "
"omitted or ``None``, all entries are printed. If *file* is omitted or "
"``None``, the output goes to ``sys.stderr``; otherwise it should be an open "
"file or file-like object to receive the output."
msgstr ""

# c7f76c8f468046eebc295a6960f34d7e
#: ../Doc/library/traceback.rst:33
msgid ""
"Print exception information and up to *limit* stack trace entries from "
"*traceback* to *file*. This differs from :func:`print_tb` in the following "
"ways: (1) if *traceback* is not ``None``, it prints a header ``Traceback "
"(most recent call last):``; (2) it prints the exception *type* and *value* "
"after the stack trace; (3) if *type* is :exc:`SyntaxError` and *value* has "
"the appropriate format, it prints the line where the syntax error occurred "
"with a caret indicating the approximate position of the error."
msgstr ""

# ac72d76fd6784589a97230dd85b3c92c
#: ../Doc/library/traceback.rst:44
msgid ""
"This is a shorthand for ``print_exception(sys.exc_type, sys.exc_value, sys."
"exc_traceback, limit, file)``.  (In fact, it uses :func:`sys.exc_info` to "
"retrieve the same information in a thread-safe way instead of using the "
"deprecated variables.)"
msgstr ""

#: ../Doc/library/traceback.rst:52
msgid ""
"This is like ``print_exc(limit)`` but returns a string instead of printing "
"to a file."
msgstr ""

#: ../Doc/library/traceback.rst:60
msgid ""
"This is a shorthand for ``print_exception(sys.last_type, sys.last_value, sys."
"last_traceback, limit, file)``.  In general it will work only after an "
"exception has reached an interactive prompt (see :data:`sys.last_type`)."
msgstr ""

#: ../Doc/library/traceback.rst:67
msgid ""
"This function prints a stack trace from its invocation point.  The optional "
"*f* argument can be used to specify an alternate stack frame to start.  The "
"optional *limit* and *file* arguments have the same meaning as for :func:"
"`print_exception`."
msgstr ""

#: ../Doc/library/traceback.rst:75
msgid ""
"Return a list of up to *limit* \"pre-processed\" stack trace entries "
"extracted from the traceback object *traceback*.  It is useful for alternate "
"formatting of stack traces.  If *limit* is omitted or ``None``, all entries "
"are extracted.  A \"pre-processed\" stack trace entry is a quadruple "
"(*filename*, *line number*, *function name*, *text*) representing the "
"information that is usually printed for a stack trace.  The *text* is a "
"string with leading and trailing whitespace stripped; if the source is not "
"available it is ``None``."
msgstr ""

#: ../Doc/library/traceback.rst:86
msgid ""
"Extract the raw traceback from the current stack frame.  The return value "
"has the same format as for :func:`extract_tb`.  The optional *f* and *limit* "
"arguments have the same meaning as for :func:`print_stack`."
msgstr ""

#: ../Doc/library/traceback.rst:93
msgid ""
"Given a list of tuples as returned by :func:`extract_tb` or :func:"
"`extract_stack`, return a list of strings ready for printing.  Each string "
"in the resulting list corresponds to the item with the same index in the "
"argument list.  Each string ends in a newline; the strings may contain "
"internal newlines as well, for those items whose source text line is not "
"``None``."
msgstr ""

#: ../Doc/library/traceback.rst:102
msgid ""
"Format the exception part of a traceback.  The arguments are the exception "
"type and value such as given by ``sys.last_type`` and ``sys.last_value``.  "
"The return value is a list of strings, each ending in a newline.  Normally, "
"the list contains a single string; however, for :exc:`SyntaxError` "
"exceptions, it contains several lines that (when printed) display detailed "
"information about where the syntax error occurred.  The message indicating "
"which exception occurred is the always last string in the list."
msgstr ""

#: ../Doc/library/traceback.rst:113
msgid ""
"Format a stack trace and the exception information.  The arguments  have the "
"same meaning as the corresponding arguments to :func:`print_exception`.  The "
"return value is a list of strings, each ending in a newline and some "
"containing internal newlines.  When these lines are concatenated and "
"printed, exactly the same text is printed as does :func:`print_exception`."
msgstr ""

#: ../Doc/library/traceback.rst:122
msgid "A shorthand for ``format_list(extract_tb(tb, limit))``."
msgstr ""

#: ../Doc/library/traceback.rst:127
msgid "A shorthand for ``format_list(extract_stack(f, limit))``."
msgstr ""

# 5f28625ccab343e4a6b7db9625776914
#: ../Doc/library/traceback.rst:132
msgid ""
"This function returns the current line number set in the traceback object.  "
"This function was necessary because in versions of Python prior to 2.3 when "
"the :option:`-O` flag was passed to Python the ``tb.tb_lineno`` was not "
"updated correctly.  This function has no use in versions past 2.3."
msgstr ""

#: ../Doc/library/traceback.rst:141
msgid "Traceback Examples"
msgstr ""

#: ../Doc/library/traceback.rst:143
msgid ""
"This simple example implements a basic read-eval-print loop, similar to (but "
"less useful than) the standard Python interactive interpreter loop.  For a "
"more complete implementation of the interpreter loop, refer to the :mod:"
"`code` module. ::"
msgstr ""

# 3c46ad983f4347b2883b185c7ea3ea10
#: ../Doc/library/traceback.rst:165
msgid ""
"The following example demonstrates the different ways to print and format "
"the exception and traceback::"
msgstr ""

# b07b3cd5dc1b4da18438b19afe9556e6
#: ../Doc/library/traceback.rst:201
msgid "The output for the example would look similar to this::"
msgstr ""

#: ../Doc/library/traceback.rst:240
msgid ""
"The following example shows the different ways to print and format the "
"stack::"
msgstr ""

#: ../Doc/library/traceback.rst:266
msgid "This last example demonstrates the final few formatting functions:"
msgstr ""

# c522623dc6e648c89bd1daa69ad30d27
#: ../Doc/library/ttk.rst:2
msgid ":mod:`ttk` --- Tk themed widgets"
msgstr ""

# aec1b567adf74ed4aa8b4fa5ce063f36
#: ../Doc/library/ttk.rst:11
msgid ""
"The :mod:`ttk` module provides access to the Tk themed widget set, which has "
"been introduced in Tk 8.5. If Python is not compiled against Tk 8.5 code may "
"still use this module as long as Tile is installed. However, some features "
"provided by the new Tk, like anti-aliased font rendering under X11, window "
"transparency (on X11 you will need a composition window manager) will be "
"missing."
msgstr ""

# adf174a920e24fc4a086449fc8596191
#: ../Doc/library/ttk.rst:18
msgid ""
"The basic idea of :mod:`ttk` is to separate, to the extent possible, the "
"code implementing a widget's behavior from the code implementing its "
"appearance."
msgstr ""

# ed4199dcab7f459baf41e2632c05d922
#: ../Doc/library/ttk.rst:25
msgid "The document which brought up theming support for Tk"
msgstr ""

#: ../Doc/library/ttk.rst:29
msgid "Using Ttk"
msgstr ""

#: ../Doc/library/ttk.rst:31
msgid "To start using Ttk, import its module::"
msgstr ""

# c9f72f304ed64051baa34b4524636f4d
#: ../Doc/library/ttk.rst:35
msgid "But code like this::"
msgstr ""

# 25816ac1b92e43aea2159a1a38aad65d
#: ../Doc/library/ttk.rst:39
msgid "may optionally want to use this::"
msgstr ""

# 8f297662b17642afbd21b90913fe826b
#: ../Doc/library/ttk.rst:44
msgid ""
"And then several :mod:`ttk` widgets (:class:`Button`, :class:`Checkbutton`, :"
"class:`Entry`, :class:`Frame`, :class:`Label`, :class:`LabelFrame`, :class:"
"`Menubutton`, :class:`PanedWindow`, :class:`Radiobutton`, :class:`Scale` "
"and :class:`Scrollbar`) will automatically substitute for the Tk widgets."
msgstr ""

# 0d1ee1a8e9014fe6a8572dbae89099ab
#: ../Doc/library/ttk.rst:49
msgid ""
"This has the direct benefit of using the new widgets, giving better look & "
"feel across platforms, but be aware that they are not totally compatible. "
"The main difference is that widget options such as \"fg\", \"bg\" and others "
"related to widget styling are no longer present in Ttk widgets. Use :class:"
"`ttk.Style` to achieve the same (or better) styling."
msgstr ""

# ee00f220bfd641a59f654d8204b8af5e
#: ../Doc/library/ttk.rst:58
msgid ""
"A text which talks in Tcl terms about differences typically found when "
"converting applications to use the new widgets."
msgstr ""

#: ../Doc/library/ttk.rst:63
msgid "Ttk Widgets"
msgstr ""

# c77dc59f308b4c5b8247503057c93aa7
#: ../Doc/library/ttk.rst:65
msgid ""
"Ttk comes with 17 widgets, 11 of which already exist in Tkinter: :class:"
"`Button`, :class:`Checkbutton`, :class:`Entry`, :class:`Frame`, :class:"
"`Label`, :class:`LabelFrame`, :class:`Menubutton`, :class:`PanedWindow`, :"
"class:`Radiobutton`, :class:`Scale` and :class:`Scrollbar`. The 6 new widget "
"classes are: :class:`Combobox`, :class:`Notebook`, :class:`Progressbar`, :"
"class:`Separator`, :class:`Sizegrip` and :class:`Treeview`.  All of these "
"classes are subclasses of :class:`Widget`."
msgstr ""

# 5f99d892454941cc85cbd3569f1b6b8b
#: ../Doc/library/ttk.rst:74
msgid ""
"As said previously, you will notice changes in look-and-feel as well in the "
"styling code. To demonstrate the latter, a very simple example is shown "
"below."
msgstr ""

#: ../Doc/library/ttk.rst:77
msgid "Tk code::"
msgstr ""

# 5b16c875fbd345f0964eb14fb249c67b
#: ../Doc/library/ttk.rst:83
msgid "Corresponding Ttk code::"
msgstr ""

# 091227fefa6d45c5848055b6136adcc7
#: ../Doc/library/ttk.rst:91
msgid ""
"For more information about TtkStyling_ read the :class:`Style` class "
"documentation."
msgstr ""

#: ../Doc/library/ttk.rst:95
msgid "Widget"
msgstr ""

#: ../Doc/library/ttk.rst:97
msgid ""
":class:`ttk.Widget` defines standard options and methods supported by Tk "
"themed widgets and is not supposed to be directly instantiated."
msgstr ""

#: ../Doc/library/ttk.rst:102
msgid "Standard Options"
msgstr ""

# 390e428070e84b5abd9ce79443368a15
#: ../Doc/library/ttk.rst:104
msgid "All the :mod:`ttk` widgets accept the following options:"
msgstr ""

# 9a849f75ba034b42b91e6d57edcfded4
#: ../Doc/library/ttk.rst:109
msgid ""
"Specifies the window class. The class is used when querying the option "
"database for the window's other options, to determine the default bindtags "
"for the window, and to select the widget's default layout and style. This is "
"a read-only option which may only be specified when the window is created."
msgstr ""

#: ../Doc/library/ttk.rst:116
msgid "cursor"
msgstr ""

# 1d9d7e36d97849269af7914f78823db2
#: ../Doc/library/ttk.rst:116
msgid ""
"Specifies the mouse cursor to be used for the widget. If set to the empty "
"string (the default), the cursor is inherited from the parent widget."
msgstr ""

#: ../Doc/library/ttk.rst:120
msgid "takefocus"
msgstr ""

# 2fd43289e1a240a78bc7fa3faf32fca2
#: ../Doc/library/ttk.rst:120
msgid ""
"Determines whether the window accepts the focus during keyboard traversal. "
"0, 1 or an empty string is returned. If 0, the window should be skipped "
"entirely during keyboard traversal. If 1, the window should receive the "
"input focus as long as it is viewable. An empty string means that the "
"traversal scripts make the decision about whether or not to focus on the "
"window."
msgstr ""

#: ../Doc/library/ttk.rst:128
msgid "style"
msgstr ""

#: ../Doc/library/ttk.rst:128
msgid "May be used to specify a custom widget style."
msgstr ""

#: ../Doc/library/ttk.rst:133
msgid "Scrollable Widget Options"
msgstr ""

#: ../Doc/library/ttk.rst:135
msgid ""
"The following options are supported by widgets that are controlled by a "
"scrollbar."
msgstr ""

#: ../Doc/library/ttk.rst:139 ../Doc/library/ttk.rst:167
#: ../Doc/library/ttk.rst:208 ../Doc/library/ttk.rst:307
#: ../Doc/library/ttk.rst:387 ../Doc/library/ttk.rst:411
#: ../Doc/library/ttk.rst:573 ../Doc/library/ttk.rst:642
#: ../Doc/library/ttk.rst:711 ../Doc/library/ttk.rst:760
#: ../Doc/library/ttk.rst:786
msgid "option"
msgstr ""

#: ../Doc/library/ttk.rst:141
msgid "xscrollcommand"
msgstr ""

#: ../Doc/library/ttk.rst:141
msgid "Used to communicate with horizontal scrollbars."
msgstr ""

# 5ee59e2c24284e47944d3237c299de5c
#: ../Doc/library/ttk.rst:143
msgid ""
"When the view in the widget's window changes, the widget will generate a Tcl "
"command based on the scrollcommand."
msgstr ""

# 32266ce32bfa416f954e710475629d33
#: ../Doc/library/ttk.rst:146
msgid ""
"Usually this option consists of the :meth:`Scrollbar.set` method of some "
"scrollbar. This will cause the scrollbar to be updated whenever the view in "
"the window changes."
msgstr ""

#: ../Doc/library/ttk.rst:152
msgid "yscrollcommand"
msgstr ""

# 01e55b702b3f4422ae79f612c00a2a9c
#: ../Doc/library/ttk.rst:152
msgid ""
"Used to communicate with vertical scrollbars. For more information, see "
"above."
msgstr ""

#: ../Doc/library/ttk.rst:158
msgid "Label Options"
msgstr ""

#: ../Doc/library/ttk.rst:160
msgid ""
"The following options are supported by labels, buttons and other button-like "
"widgets."
msgstr ""

#: ../Doc/library/ttk.rst:169 ../Doc/library/ttk.rst:427
#: ../Doc/library/ttk.rst:762
msgid "text"
msgstr ""

#: ../Doc/library/ttk.rst:169
msgid "Specifies a text string to be displayed inside the widget."
msgstr ""

#: ../Doc/library/ttk.rst:171 ../Doc/library/ttk.rst:330
msgid "textvariable"
msgstr ""

#: ../Doc/library/ttk.rst:171
msgid ""
"Specifies a name whose value will be used in place of the text option "
"resource."
msgstr ""

#: ../Doc/library/ttk.rst:174 ../Doc/library/ttk.rst:436
msgid "underline"
msgstr ""

#: ../Doc/library/ttk.rst:174
msgid ""
"If set, specifies the index (0-based) of a character to underline in the "
"text string. The underline character is used for mnemonic activation."
msgstr ""

#: ../Doc/library/ttk.rst:178 ../Doc/library/ttk.rst:429
#: ../Doc/library/ttk.rst:764 ../Doc/library/ttk.rst:794
msgid "image"
msgstr ""

# df172ecdef324fada36813e59397b454
#: ../Doc/library/ttk.rst:178
msgid ""
"Specifies an image to display. This is a list of 1 or more elements. The "
"first element is the default image name. The rest of the list is a sequence "
"of statespec/value pairs as defined by :meth:`Style.map`, specifying "
"different images to use when the widget is in a particular state or a "
"combination of states. All images in the list should have the same size."
msgstr ""

#: ../Doc/library/ttk.rst:186 ../Doc/library/ttk.rst:432
msgid "compound"
msgstr ""

# a4980591ef11425593c431f631b74ca4
#: ../Doc/library/ttk.rst:186
msgid ""
"Specifies how to display the image relative to the text, in the case both "
"text and image options are present. Valid values are:"
msgstr ""

#: ../Doc/library/ttk.rst:190
msgid "text: display text only"
msgstr ""

#: ../Doc/library/ttk.rst:191
msgid "image: display image only"
msgstr ""

#: ../Doc/library/ttk.rst:192
msgid ""
"top, bottom, left, right: display image above, below, left of, or right of "
"the text, respectively."
msgstr ""

#: ../Doc/library/ttk.rst:194
msgid "none: the default. display the image if present, otherwise the text."
msgstr ""

# 7bcfa43e482644a2950261787dcb39ae
#: ../Doc/library/ttk.rst:197
msgid ""
"If greater than zero, specifies how much space, in character widths, to "
"allocate for the text label; if less than zero, specifies a minimum width. "
"If zero or unspecified, the natural width of the text label is used."
msgstr ""

#: ../Doc/library/ttk.rst:205
msgid "Compatibility Options"
msgstr ""

#: ../Doc/library/ttk.rst:210 ../Doc/library/ttk.rst:323
#: ../Doc/library/ttk.rst:413
msgid "state"
msgstr ""

#: ../Doc/library/ttk.rst:210
msgid ""
"May be set to \"normal\" or \"disabled\" to control the \"disabled\" state "
"bit. This is a write-only option: setting it changes the widget state, but "
"the :meth:`Widget.state` method does not affect this option."
msgstr ""

#: ../Doc/library/ttk.rst:217
msgid "Widget States"
msgstr ""

#: ../Doc/library/ttk.rst:219
msgid "The widget state is a bitmap of independent state flags."
msgstr ""

#: ../Doc/library/ttk.rst:224
msgid "active"
msgstr ""

# b043e53240ff4e40b76e346ba46111be
#: ../Doc/library/ttk.rst:224
msgid ""
"The mouse cursor is over the widget and pressing a mouse button will cause "
"some action to occur."
msgstr ""

#: ../Doc/library/ttk.rst:227
msgid "disabled"
msgstr ""

# 3004709eaa5c4e9abcc7c83a58966f60
#: ../Doc/library/ttk.rst:227
msgid "Widget is disabled under program control."
msgstr ""

#: ../Doc/library/ttk.rst:229
msgid "focus"
msgstr ""

# e5eaf124280941b9969dce56698207d5
#: ../Doc/library/ttk.rst:229
msgid "Widget has keyboard focus."
msgstr ""

#: ../Doc/library/ttk.rst:231
msgid "pressed"
msgstr ""

# bd4edd1121c347bc86410c531f1b9b38
#: ../Doc/library/ttk.rst:231
msgid "Widget is being pressed."
msgstr ""

#: ../Doc/library/ttk.rst:233
msgid "selected"
msgstr ""

# e1a1aced350249759a437dfbdbe0cbec
#: ../Doc/library/ttk.rst:233
msgid ""
"\"On\", \"true\", or \"current\" for things like Checkbuttons and "
"radiobuttons."
msgstr ""

#: ../Doc/library/ttk.rst:236 ../Doc/library/ttk.rst:790
msgid "background"
msgstr ""

# 2a52b8933307442d9b8e244cce4abc1c
#: ../Doc/library/ttk.rst:236
msgid ""
"Windows and Mac have a notion of an \"active\" or foreground window. The "
"*background* state is set for widgets in a background window, and cleared "
"for those in the foreground window."
msgstr ""

#: ../Doc/library/ttk.rst:241
msgid "readonly"
msgstr ""

# ff5952a3897840ab8c996193ef9c860d
#: ../Doc/library/ttk.rst:241
msgid "Widget should not allow user modification."
msgstr ""

#: ../Doc/library/ttk.rst:243
msgid "alternate"
msgstr ""

# 480869531c234f8b87ca219e01a329f7
#: ../Doc/library/ttk.rst:243
msgid "A widget-specific alternate display format."
msgstr ""

#: ../Doc/library/ttk.rst:245
msgid "invalid"
msgstr ""

# 9709f930d50d4b4aa23e2d50c9730292
#: ../Doc/library/ttk.rst:245
msgid "The widget's value is invalid."
msgstr ""

#: ../Doc/library/ttk.rst:248
msgid ""
"A state specification is a sequence of state names, optionally prefixed with "
"an exclamation point indicating that the bit is off."
msgstr ""

#: ../Doc/library/ttk.rst:253
msgid "ttk.Widget"
msgstr ""

# 07d3d62c4c3b4273814c00b8f58bffcd
#: ../Doc/library/ttk.rst:255
msgid ""
"Besides the methods described below, the :class:`ttk.Widget` class supports "
"the :meth:`Tkinter.Widget.cget` and :meth:`Tkinter.Widget.configure` methods."
msgstr ""

#: ../Doc/library/ttk.rst:262
msgid ""
"Returns the name of the element at position *x* *y*, or the empty string if "
"the point does not lie within any element."
msgstr ""

#: ../Doc/library/ttk.rst:265
msgid "*x* and *y* are pixel coordinates relative to the widget."
msgstr ""

# 202bc61840dd41879b997b52ab16a1da
#: ../Doc/library/ttk.rst:270
msgid ""
"Test the widget's state. If a callback is not specified, returns True if the "
"widget state matches *statespec* and False otherwise. If callback is "
"specified then it is called with *args* if widget state matches *statespec*."
msgstr ""

# 47c9bd1f79374d948dfa2104bc3ebc17
#: ../Doc/library/ttk.rst:278
msgid ""
"Modify or read widget state. If *statespec* is specified, sets the widget "
"state accordingly and returns a new *statespec* indicating which flags were "
"changed. If *statespec* is not specified, returns the currently-enabled "
"state flags."
msgstr ""

#: ../Doc/library/ttk.rst:283
msgid "*statespec* will usually be a list or a tuple."
msgstr ""

#: ../Doc/library/ttk.rst:287
msgid "Combobox"
msgstr ""

#: ../Doc/library/ttk.rst:289
msgid ""
"The :class:`ttk.Combobox` widget combines a text field with a pop-down list "
"of values. This widget is a subclass of :class:`Entry`."
msgstr ""

# 79f102d524064e8ca0ea07aec704ea51
#: ../Doc/library/ttk.rst:292
msgid ""
"Besides the methods inherited from :class:`Widget` (:meth:`Widget.cget`, :"
"meth:`Widget.configure`, :meth:`Widget.identify`, :meth:`Widget.instate` "
"and :meth:`Widget.state`) and those inherited from :class:`Entry` (:meth:"
"`Entry.bbox`, :meth:`Entry.delete`, :meth:`Entry.icursor`, :meth:`Entry."
"index`, :meth:`Entry.inset`, :meth:`Entry.selection`, :meth:`Entry.xview`), "
"this class has some other methods, described at :class:`ttk.Combobox`."
msgstr ""

# 9dd893ca4f1d46b8addb07926073c102
#: ../Doc/library/ttk.rst:304
msgid "This widget accepts the following options:"
msgstr ""

#: ../Doc/library/ttk.rst:309
msgid "exportselection"
msgstr ""

# e4a1ed98872549fa8d3878cbcc3b8134
#: ../Doc/library/ttk.rst:309
msgid ""
"Boolean value. If set, the widget selection is linked to the Window Manager "
"selection (which can be returned by invoking :meth:`Misc.selection_get`, for "
"example)."
msgstr ""

#: ../Doc/library/ttk.rst:313
msgid "justify"
msgstr ""

#: ../Doc/library/ttk.rst:313
msgid ""
"Specifies how the text is aligned within the widget. One of \"left\", "
"\"center\", or \"right\"."
msgstr ""

#: ../Doc/library/ttk.rst:316
msgid "Specifies the height of the pop-down listbox, in rows."
msgstr ""

#: ../Doc/library/ttk.rst:318
msgid "postcommand"
msgstr ""

# a6e157a0d4c24b878c6700f55033f694
#: ../Doc/library/ttk.rst:318
msgid ""
"A script (possibly registered with :meth:`Misc.register`) that is called "
"immediately before displaying the values. It may specify which values to "
"display."
msgstr ""

# af24e36aac5b4e2e9b2916938d4123c6
#: ../Doc/library/ttk.rst:323
msgid ""
"One of \"normal\", \"readonly\", or \"disabled\". In the \"readonly\" state, "
"the value may not be edited directly, and the user can only select one of "
"the values from the dropdown list. In the \"normal\" state, the text field "
"is directly editable. In the \"disabled\" state, no interaction is possible."
msgstr ""

# 7e617f89ba554412932f7419cad4ab57
#: ../Doc/library/ttk.rst:330
msgid ""
"Specifies a name whose value is linked to the widget value. Whenever the "
"value associated with that name changes, the widget value is updated, and "
"vice versa. See :class:`Tkinter.StringVar`."
msgstr ""

#: ../Doc/library/ttk.rst:335 ../Doc/library/ttk.rst:766
msgid "values"
msgstr ""

#: ../Doc/library/ttk.rst:335
msgid "Specifies the list of values to display in the drop-down listbox."
msgstr ""

#: ../Doc/library/ttk.rst:338
msgid ""
"Specifies an integer value indicating the desired width of the entry window, "
"in average-size characters of the widget's font."
msgstr ""

#: ../Doc/library/ttk.rst:345
msgid "Virtual events"
msgstr ""

# 274df1fb6ec649eba3dec7a470b7c8a7
#: ../Doc/library/ttk.rst:347
msgid ""
"The combobox widget generates a **<<ComboboxSelected>>** virtual event when "
"the user selects an element from the list of values."
msgstr ""

#: ../Doc/library/ttk.rst:352
msgid "ttk.Combobox"
msgstr ""

#: ../Doc/library/ttk.rst:358
msgid ""
"If *newindex* is specified, sets the combobox value to the element position "
"*newindex*. Otherwise, returns the index of the current value or -1 if the "
"current value is not in the values list."
msgstr ""

#: ../Doc/library/ttk.rst:365
msgid "Returns the current value of the combobox."
msgstr ""

#: ../Doc/library/ttk.rst:370
msgid "Sets the value of the combobox to *value*."
msgstr ""

#: ../Doc/library/ttk.rst:374
msgid "Notebook"
msgstr ""

# 538126ef32f34c04a682be8f0a6b182d
#: ../Doc/library/ttk.rst:376
msgid ""
"The Ttk Notebook widget manages a collection of windows and displays a "
"single one at a time. Each child window is associated with a tab, which the "
"user may select to change the currently-displayed window."
msgstr ""

#: ../Doc/library/ttk.rst:384 ../Doc/library/ttk.rst:570
#: ../Doc/library/ttk.rst:705
msgid "This widget accepts the following specific options:"
msgstr ""

#: ../Doc/library/ttk.rst:389
msgid ""
"If present and greater than zero, specifies the desired height of the pane "
"area (not including internal padding or tabs). Otherwise, the maximum height "
"of all panes is used."
msgstr ""

#: ../Doc/library/ttk.rst:393 ../Doc/library/ttk.rst:423
#: ../Doc/library/ttk.rst:725
msgid "padding"
msgstr ""

# 4952bc33a2c44e08ae8a90c269fa6ea7
#: ../Doc/library/ttk.rst:393
msgid ""
"Specifies the amount of extra space to add around the outside of the "
"notebook. The padding is a list of up to four length specifications: left "
"top right bottom. If fewer than four elements are specified, bottom defaults "
"to top, right defaults to left, and top defaults to left."
msgstr ""

# 24f21bd229074f07a4cc06bd4dab26c9
#: ../Doc/library/ttk.rst:399
msgid ""
"If present and greater than zero, specifies the desired width of the pane "
"area (not including internal padding). Otherwise, the maximum width of all "
"panes is used."
msgstr ""

#: ../Doc/library/ttk.rst:406
msgid "Tab Options"
msgstr ""

#: ../Doc/library/ttk.rst:408
msgid "There are also specific options for tabs:"
msgstr ""

#: ../Doc/library/ttk.rst:413
msgid ""
"Either \"normal\", \"disabled\" or \"hidden\". If \"disabled\", then the tab "
"is not selectable. If \"hidden\", then the tab is not shown."
msgstr ""

#: ../Doc/library/ttk.rst:417
msgid "sticky"
msgstr ""

#: ../Doc/library/ttk.rst:417
msgid ""
"Specifies how the child window is positioned within the pane area. Value is "
"a string containing zero or more of the characters \"n\", \"s\", \"e\" or \"w"
"\". Each letter refers to a side (north, south, east or west) that the child "
"window will stick to, as per the :meth:`grid` geometry manager."
msgstr ""

#: ../Doc/library/ttk.rst:423
msgid ""
"Specifies the amount of extra space to add between the notebook and this "
"pane. Syntax is the same as for the option padding used by this widget."
msgstr ""

#: ../Doc/library/ttk.rst:427
msgid "Specifies a text to be displayed in the tab."
msgstr ""

#: ../Doc/library/ttk.rst:429
msgid ""
"Specifies an image to display in the tab. See the option image described in :"
"class:`Widget`."
msgstr ""

# a26e8baca8af4581851647632c1c7d59
#: ../Doc/library/ttk.rst:432
msgid ""
"Specifies how to display the image relative to the text, in the case both "
"text and image options are present. See `Label Options`_ for legal values."
msgstr ""

#: ../Doc/library/ttk.rst:436
msgid ""
"Specifies the index (0-based) of a character to underline in the text "
"string. The underlined character is used for mnemonic activation if :meth:"
"`Notebook.enable_traversal` is called."
msgstr ""

#: ../Doc/library/ttk.rst:444
msgid "Tab Identifiers"
msgstr ""

# d76a7ac5e38a4657a48ab3c5bf2eaa95
#: ../Doc/library/ttk.rst:446
msgid ""
"The *tab_id* present in several methods of :class:`ttk.Notebook` may take "
"any of the following forms:"
msgstr ""

# 13416ab2899d453bb76e71973ac7a884
#: ../Doc/library/ttk.rst:449
msgid "An integer between zero and the number of tabs."
msgstr ""

# 2621d23bd8f24323b245d76202b95c39
#: ../Doc/library/ttk.rst:450
msgid "The name of a child window."
msgstr ""

# 983f33f761764cd68e5cec3b134b47db
#: ../Doc/library/ttk.rst:451
msgid ""
"A positional specification of the form \"@x,y\", which identifies the tab."
msgstr ""

# 184162545b0b4822a0b5151b5b706430
#: ../Doc/library/ttk.rst:452
msgid ""
"The literal string \"current\", which identifies the currently-selected tab."
msgstr ""

# ca3dd35c54c64661ba55ca0445a5e458
#: ../Doc/library/ttk.rst:453
msgid ""
"The literal string \"end\", which returns the number of tabs (only valid "
"for :meth:`Notebook.index`)."
msgstr ""

#: ../Doc/library/ttk.rst:458 ../Doc/library/ttk.rst:824
msgid "Virtual Events"
msgstr ""

#: ../Doc/library/ttk.rst:460
msgid ""
"This widget generates a **<<NotebookTabChanged>>** virtual event after a new "
"tab is selected."
msgstr ""

#: ../Doc/library/ttk.rst:465
msgid "ttk.Notebook"
msgstr ""

#: ../Doc/library/ttk.rst:471
msgid "Adds a new tab to the notebook."
msgstr ""

#: ../Doc/library/ttk.rst:473
msgid ""
"If window is currently managed by the notebook but hidden, it is restored to "
"its previous position."
msgstr ""

#: ../Doc/library/ttk.rst:476 ../Doc/library/ttk.rst:514
msgid "See `Tab Options`_ for the list of available options."
msgstr ""

#: ../Doc/library/ttk.rst:481
msgid ""
"Removes the tab specified by *tab_id*, unmaps and unmanages the associated "
"window."
msgstr ""

#: ../Doc/library/ttk.rst:487
msgid "Hides the tab specified by *tab_id*."
msgstr ""

#: ../Doc/library/ttk.rst:489
msgid ""
"The tab will not be displayed, but the associated window remains managed by "
"the notebook and its configuration remembered. Hidden tabs may be restored "
"with the :meth:`add` command."
msgstr ""

#: ../Doc/library/ttk.rst:496
msgid ""
"Returns the name of the tab element at position *x*, *y*, or the empty "
"string if none."
msgstr ""

#: ../Doc/library/ttk.rst:502
msgid ""
"Returns the numeric index of the tab specified by *tab_id*, or the total "
"number of tabs if *tab_id* is the string \"end\"."
msgstr ""

#: ../Doc/library/ttk.rst:508
msgid "Inserts a pane at the specified position."
msgstr ""

#: ../Doc/library/ttk.rst:510
msgid ""
"*pos* is either the string \"end\", an integer index, or the name of a "
"managed child. If *child* is already managed by the notebook, moves it to "
"the specified position."
msgstr ""

#: ../Doc/library/ttk.rst:519
msgid "Selects the specified *tab_id*."
msgstr ""

#: ../Doc/library/ttk.rst:521
msgid ""
"The associated child window will be displayed, and the previously-selected "
"window (if different) is unmapped. If *tab_id* is omitted, returns the "
"widget name of the currently selected pane."
msgstr ""

#: ../Doc/library/ttk.rst:528
msgid "Query or modify the options of the specific *tab_id*."
msgstr ""

#: ../Doc/library/ttk.rst:530
msgid ""
"If *kw* is not given, returns a dictionary of the tab option values. If "
"*option* is specified, returns the value of that *option*. Otherwise, sets "
"the options to the corresponding values."
msgstr ""

#: ../Doc/library/ttk.rst:537
msgid "Returns a list of windows managed by the notebook."
msgstr ""

#: ../Doc/library/ttk.rst:542
msgid ""
"Enable keyboard traversal for a toplevel window containing this notebook."
msgstr ""

#: ../Doc/library/ttk.rst:544
msgid ""
"This will extend the bindings for the toplevel window containing the "
"notebook as follows:"
msgstr ""

#: ../Doc/library/ttk.rst:547
msgid "Control-Tab: selects the tab following the currently selected one."
msgstr ""

#: ../Doc/library/ttk.rst:548
msgid ""
"Shift-Control-Tab: selects the tab preceding the currently selected one."
msgstr ""

#: ../Doc/library/ttk.rst:549
msgid ""
"Alt-K: where K is the mnemonic (underlined) character of any tab, will "
"select that tab."
msgstr ""

#: ../Doc/library/ttk.rst:552
msgid ""
"Multiple notebooks in a single toplevel may be enabled for traversal, "
"including nested notebooks. However, notebook traversal only works properly "
"if all panes have the notebook they are in as master."
msgstr ""

#: ../Doc/library/ttk.rst:558
msgid "Progressbar"
msgstr ""

# b29ae5ab79464c2ca33bca2e932472d3
#: ../Doc/library/ttk.rst:560
msgid ""
"The :class:`ttk.Progressbar` widget shows the status of a long-running "
"operation. It can operate in two modes: determinate mode shows the amount "
"completed relative to the total amount of work to be done, and indeterminate "
"mode provides an animated display to let the user know that something is "
"happening."
msgstr ""

#: ../Doc/library/ttk.rst:575 ../Doc/library/ttk.rst:644
msgid "orient"
msgstr ""

#: ../Doc/library/ttk.rst:575
msgid ""
"One of \"horizontal\" or \"vertical\". Specifies the orientation of the "
"progress bar."
msgstr ""

#: ../Doc/library/ttk.rst:578
msgid "length"
msgstr ""

#: ../Doc/library/ttk.rst:578
msgid ""
"Specifies the length of the long axis of the progress bar (width if "
"horizontal, height if vertical)."
msgstr ""

#: ../Doc/library/ttk.rst:581
msgid "One of \"determinate\" or \"indeterminate\"."
msgstr ""

#: ../Doc/library/ttk.rst:583
msgid "maximum"
msgstr ""

#: ../Doc/library/ttk.rst:583
msgid "A number specifying the maximum value. Defaults to 100."
msgstr ""

#: ../Doc/library/ttk.rst:585
msgid "value"
msgstr ""

#: ../Doc/library/ttk.rst:585
msgid ""
"The current value of the progress bar. In \"determinate\" mode, this "
"represents the amount of work completed. In \"indeterminate\" mode, it is "
"interpreted as modulo *maximum*; that is, the progress bar completes one "
"\"cycle\" when its value increases by *maximum*."
msgstr ""

#: ../Doc/library/ttk.rst:591
msgid "variable"
msgstr ""

#: ../Doc/library/ttk.rst:591
msgid ""
"A name which is linked to the option value. If specified, the value of the "
"progress bar is automatically set to the value of this name whenever the "
"latter is modified."
msgstr ""

#: ../Doc/library/ttk.rst:595
msgid "phase"
msgstr ""

#: ../Doc/library/ttk.rst:595
msgid ""
"Read-only option. The widget periodically increments the value of this "
"option whenever its value is greater than 0 and, in determinate mode, less "
"than maximum. This option may be used by the current theme to provide "
"additional animation effects."
msgstr ""

#: ../Doc/library/ttk.rst:603
msgid "ttk.Progressbar"
msgstr ""

#: ../Doc/library/ttk.rst:609
msgid ""
"Begin autoincrement mode: schedules a recurring timer event that calls :meth:"
"`Progressbar.step` every *interval* milliseconds. If omitted, *interval* "
"defaults to 50 milliseconds."
msgstr ""

#: ../Doc/library/ttk.rst:616
msgid "Increments the progress bar's value by *amount*."
msgstr ""

#: ../Doc/library/ttk.rst:618
msgid "*amount* defaults to 1.0 if omitted."
msgstr ""

#: ../Doc/library/ttk.rst:623
msgid ""
"Stop autoincrement mode: cancels any recurring timer event initiated by :"
"meth:`Progressbar.start` for this progress bar."
msgstr ""

#: ../Doc/library/ttk.rst:628
msgid "Separator"
msgstr ""

#: ../Doc/library/ttk.rst:630
msgid ""
"The :class:`ttk.Separator` widget displays a horizontal or vertical "
"separator bar."
msgstr ""

#: ../Doc/library/ttk.rst:633
msgid ""
"It has no other methods besides the ones inherited from :class:`ttk.Widget`."
msgstr ""

#: ../Doc/library/ttk.rst:639
msgid "This widget accepts the following specific option:"
msgstr ""

#: ../Doc/library/ttk.rst:644
msgid ""
"One of \"horizontal\" or \"vertical\". Specifies the orientation of the "
"separator."
msgstr ""

#: ../Doc/library/ttk.rst:650
msgid "Sizegrip"
msgstr ""

#: ../Doc/library/ttk.rst:652
msgid ""
"The :class:`ttk.Sizegrip` widget (also known as a grow box) allows the user "
"to resize the containing toplevel window by pressing and dragging the grip."
msgstr ""

#: ../Doc/library/ttk.rst:655
msgid ""
"This widget has neither specific options nor specific methods, besides the "
"ones inherited from :class:`ttk.Widget`."
msgstr ""

#: ../Doc/library/ttk.rst:660
msgid "Platform-specific notes"
msgstr ""

# 718893e611c84852bac60b348a720438
#: ../Doc/library/ttk.rst:662
msgid ""
"On Mac OS X, toplevel windows automatically include a built-in size grip by "
"default. Adding a :class:`Sizegrip` is harmless, since the built-in grip "
"will just mask the widget."
msgstr ""

#: ../Doc/library/ttk.rst:668
msgid "Bugs"
msgstr ""

#: ../Doc/library/ttk.rst:670
msgid ""
"If the containing toplevel's position was specified relative to the right or "
"bottom of the screen (e.g. ....), the :class:`Sizegrip` widget will not "
"resize the window."
msgstr ""

#: ../Doc/library/ttk.rst:673
msgid "This widget supports only \"southeast\" resizing."
msgstr ""

#: ../Doc/library/ttk.rst:677
msgid "Treeview"
msgstr ""

#: ../Doc/library/ttk.rst:679
msgid ""
"The :class:`ttk.Treeview` widget displays a hierarchical collection of "
"items. Each item has a textual label, an optional image, and an optional "
"list of data values. The data values are displayed in successive columns "
"after the tree label."
msgstr ""

#: ../Doc/library/ttk.rst:684
msgid ""
"The order in which data values are displayed may be controlled by setting "
"the widget option ``displaycolumns``. The tree widget can also display "
"column headings. Columns may be accessed by number or symbolic names listed "
"in the widget option columns. See `Column Identifiers`_."
msgstr ""

#: ../Doc/library/ttk.rst:689
msgid ""
"Each item is identified by an unique name. The widget will generate item IDs "
"if they are not supplied by the caller. There is a distinguished root item, "
"named ``{}``. The root item itself is not displayed; its children appear at "
"the top level of the hierarchy."
msgstr ""

#: ../Doc/library/ttk.rst:694
msgid ""
"Each item also has a list of tags, which can be used to associate event "
"bindings with individual items and control the appearance of the item."
msgstr ""

#: ../Doc/library/ttk.rst:697
msgid ""
"The Treeview widget supports horizontal and vertical scrolling, according to "
"the options described in `Scrollable Widget Options`_ and the methods :meth:"
"`Treeview.xview` and :meth:`Treeview.yview`."
msgstr ""

#: ../Doc/library/ttk.rst:713
msgid "columns"
msgstr ""

#: ../Doc/library/ttk.rst:713
msgid ""
"A list of column identifiers, specifying the number of columns and their "
"names."
msgstr ""

#: ../Doc/library/ttk.rst:716
msgid "displaycolumns"
msgstr ""

#: ../Doc/library/ttk.rst:716
msgid ""
"A list of column identifiers (either symbolic or integer indices) specifying "
"which data columns are displayed and the order in which they appear, or the "
"string \"#all\"."
msgstr ""

#: ../Doc/library/ttk.rst:721
msgid ""
"Specifies the number of rows which should be visible. Note: the requested "
"width is determined from the sum of the column widths."
msgstr ""

#: ../Doc/library/ttk.rst:725
msgid ""
"Specifies the internal padding for the widget. The padding is a list of up "
"to four length specifications."
msgstr ""

#: ../Doc/library/ttk.rst:728
msgid "selectmode"
msgstr ""

#: ../Doc/library/ttk.rst:728
msgid ""
"Controls how the built-in class bindings manage the selection. One of "
"\"extended\", \"browse\" or \"none\". If set to \"extended\" (the default), "
"multiple items may be selected. If \"browse\", only a single item will be "
"selected at a time. If \"none\", the selection will not be changed."
msgstr ""

#: ../Doc/library/ttk.rst:735
msgid ""
"Note that the application code and tag bindings can set the selection "
"however they wish, regardless of the value  of this option."
msgstr ""

#: ../Doc/library/ttk.rst:739
msgid "show"
msgstr ""

#: ../Doc/library/ttk.rst:739
msgid ""
"A list containing zero or more of the following values, specifying which "
"elements of the tree to display."
msgstr ""

#: ../Doc/library/ttk.rst:742
msgid "tree: display tree labels in column #0."
msgstr ""

#: ../Doc/library/ttk.rst:743
msgid "headings: display the heading row."
msgstr ""

#: ../Doc/library/ttk.rst:745
msgid "The default is \"tree headings\", i.e., show all elements."
msgstr ""

#: ../Doc/library/ttk.rst:748
msgid ""
"**Note**: Column #0 always refers to the tree column, even if show=\"tree\" "
"is not specified."
msgstr ""

#: ../Doc/library/ttk.rst:754
msgid "Item Options"
msgstr ""

#: ../Doc/library/ttk.rst:756
msgid ""
"The following item options may be specified for items in the insert and item "
"widget commands."
msgstr ""

#: ../Doc/library/ttk.rst:762
msgid "The textual label to display for the item."
msgstr ""

#: ../Doc/library/ttk.rst:764
msgid "A Tk Image, displayed to the left of the label."
msgstr ""

#: ../Doc/library/ttk.rst:766
msgid "The list of values associated with the item."
msgstr ""

#: ../Doc/library/ttk.rst:768
msgid ""
"Each item should have the same number of values as the widget option "
"columns. If there are fewer values than columns, the remaining values are "
"assumed empty. If there are more values than columns, the extra values are "
"ignored."
msgstr ""

#: ../Doc/library/ttk.rst:773
msgid "open"
msgstr ""

#: ../Doc/library/ttk.rst:773
msgid ""
"True/False value indicating whether the item's children should be displayed "
"or hidden."
msgstr ""

#: ../Doc/library/ttk.rst:776
msgid "tags"
msgstr ""

#: ../Doc/library/ttk.rst:776
msgid "A list of tags associated with this item."
msgstr ""

#: ../Doc/library/ttk.rst:781
msgid "Tag Options"
msgstr ""

#: ../Doc/library/ttk.rst:783
msgid "The following options may be specified on tags:"
msgstr ""

#: ../Doc/library/ttk.rst:788
msgid "foreground"
msgstr ""

#: ../Doc/library/ttk.rst:788
msgid "Specifies the text foreground color."
msgstr ""

#: ../Doc/library/ttk.rst:790
msgid "Specifies the cell or item background color."
msgstr ""

#: ../Doc/library/ttk.rst:792
msgid "font"
msgstr ""

#: ../Doc/library/ttk.rst:792
msgid "Specifies the font to use when drawing text."
msgstr ""

#: ../Doc/library/ttk.rst:794
msgid "Specifies the item image, in case the item's image option is empty."
msgstr ""

#: ../Doc/library/ttk.rst:800
msgid "Column Identifiers"
msgstr ""

#: ../Doc/library/ttk.rst:802
msgid "Column identifiers take any of the following forms:"
msgstr ""

#: ../Doc/library/ttk.rst:804
msgid "A symbolic name from the list of columns option."
msgstr ""

#: ../Doc/library/ttk.rst:805
msgid "An integer n, specifying the nth data column."
msgstr ""

#: ../Doc/library/ttk.rst:806
msgid ""
"A string of the form #n, where n is an integer, specifying the nth display "
"column."
msgstr ""

#: ../Doc/library/ttk.rst:811
msgid ""
"Item's option values may be displayed in a different order than the order in "
"which they are stored."
msgstr ""

#: ../Doc/library/ttk.rst:813
msgid ""
"Column #0 always refers to the tree column, even if show=\"tree\" is not "
"specified."
msgstr ""

#: ../Doc/library/ttk.rst:816
msgid ""
"A data column number is an index into an item's option values list; a "
"display column number is the column number in the tree where the values are "
"displayed. Tree labels are displayed in column #0. If option displaycolumns "
"is not set, then data column n is displayed in column #n+1. Again, **column "
"#0 always refers to the tree column**."
msgstr ""

#: ../Doc/library/ttk.rst:826
msgid "The Treeview widget generates the following virtual events."
msgstr ""

#: ../Doc/library/ttk.rst:829
msgid "event"
msgstr ""

#: ../Doc/library/ttk.rst:831
msgid "<<TreeviewSelect>>"
msgstr ""

#: ../Doc/library/ttk.rst:831
msgid "Generated whenever the selection changes."
msgstr ""

#: ../Doc/library/ttk.rst:833
msgid "<<TreeviewOpen>>"
msgstr ""

#: ../Doc/library/ttk.rst:833
msgid "Generated just before settings the focus item to open=True."
msgstr ""

#: ../Doc/library/ttk.rst:836
msgid "<<TreeviewClose>>"
msgstr ""

#: ../Doc/library/ttk.rst:836
msgid "Generated just after setting the focus item to open=False."
msgstr ""

#: ../Doc/library/ttk.rst:840
msgid ""
"The :meth:`Treeview.focus` and :meth:`Treeview.selection` methods can be "
"used to determine the affected item or items."
msgstr ""

#: ../Doc/library/ttk.rst:845
msgid "ttk.Treeview"
msgstr ""

#: ../Doc/library/ttk.rst:851
msgid ""
"Returns the bounding box (relative to the treeview widget's window) of the "
"specified *item* in the form (x, y, width, height)."
msgstr ""

#: ../Doc/library/ttk.rst:854
msgid ""
"If *column* is specified, returns the bounding box of that cell. If the "
"*item* is not visible (i.e., if it is a descendant of a closed item or is "
"scrolled offscreen), returns an empty string."
msgstr ""

#: ../Doc/library/ttk.rst:861
msgid "Returns the list of children belonging to *item*."
msgstr ""

#: ../Doc/library/ttk.rst:863
msgid "If *item* is not specified, returns root children."
msgstr ""

#: ../Doc/library/ttk.rst:868
msgid "Replaces *item*'s child with *newchildren*."
msgstr ""

#: ../Doc/library/ttk.rst:870
msgid ""
"Children present in *item* that are not present in *newchildren* are "
"detached from the tree. No items in *newchildren* may be an ancestor of "
"*item*. Note that not specifying *newchildren* results in detaching *item*'s "
"children."
msgstr ""

#: ../Doc/library/ttk.rst:878
msgid "Query or modify the options for the specified *column*."
msgstr ""

#: ../Doc/library/ttk.rst:880
msgid ""
"If *kw* is not given, returns a dict of the column option values. If "
"*option* is specified then the value for that *option* is returned. "
"Otherwise, sets the options to the corresponding values."
msgstr ""

#: ../Doc/library/ttk.rst:884 ../Doc/library/ttk.rst:939
msgid "The valid options/values are:"
msgstr ""

#: ../Doc/library/ttk.rst:887
msgid "Returns the column name. This is a read-only option."
msgstr ""

#: ../Doc/library/ttk.rst:889
msgid ""
"Specifies how the text in this column should be aligned with respect to the "
"cell."
msgstr ""

#: ../Doc/library/ttk.rst:892
msgid ""
"The minimum width of the column in pixels. The treeview widget will not make "
"the column any smaller than specified by this option when the widget is "
"resized or the user drags a column."
msgstr ""

#: ../Doc/library/ttk.rst:896
msgid ""
"Specifies whether the column's width should be adjusted when the widget is "
"resized."
msgstr ""

#: ../Doc/library/ttk.rst:899
msgid "The width of the column in pixels."
msgstr ""

#: ../Doc/library/ttk.rst:901
msgid "To configure the tree column, call this with column = \"#0\""
msgstr ""

#: ../Doc/library/ttk.rst:905
msgid "Delete all specified *items* and all their descendants."
msgstr ""

#: ../Doc/library/ttk.rst:907
msgid "The root item may not be deleted."
msgstr ""

#: ../Doc/library/ttk.rst:912
msgid "Unlinks all of the specified *items* from the tree."
msgstr ""

#: ../Doc/library/ttk.rst:914
msgid ""
"The items and all of their descendants are still present, and may be "
"reinserted at another point in the tree, but will not be displayed."
msgstr ""

#: ../Doc/library/ttk.rst:917
msgid "The root item may not be detached."
msgstr ""

#: ../Doc/library/ttk.rst:922
msgid "Returns True if the specified *item* is present in the tree."
msgstr ""

#: ../Doc/library/ttk.rst:927
msgid ""
"If *item* is specified, sets the focus item to *item*. Otherwise, returns "
"the current focus item, or '' if there is none."
msgstr ""

#: ../Doc/library/ttk.rst:933
msgid "Query or modify the heading options for the specified *column*."
msgstr ""

#: ../Doc/library/ttk.rst:935
msgid ""
"If *kw* is not given, returns a dict of the heading option values. If "
"*option* is specified then the value for that *option* is returned. "
"Otherwise, sets the options to the corresponding values."
msgstr ""

#: ../Doc/library/ttk.rst:942
msgid "The text to display in the column heading."
msgstr ""

#: ../Doc/library/ttk.rst:944
msgid "Specifies an image to display to the right of the column heading."
msgstr ""

#: ../Doc/library/ttk.rst:946
msgid ""
"Specifies how the heading text should be aligned. One of the standard Tk "
"anchor values."
msgstr ""

#: ../Doc/library/ttk.rst:949
msgid "A callback to be invoked when the heading label is pressed."
msgstr ""

#: ../Doc/library/ttk.rst:951
msgid "To configure the tree column heading, call this with column = \"#0\"."
msgstr ""

#: ../Doc/library/ttk.rst:956
msgid ""
"Returns a description of the specified *component* under the point given by "
"*x* and *y*, or the empty string if no such *component* is present at that "
"position."
msgstr ""

#: ../Doc/library/ttk.rst:963
msgid "Returns the item ID of the item at position *y*."
msgstr ""

#: ../Doc/library/ttk.rst:968
msgid "Returns the data column identifier of the cell at position *x*."
msgstr ""

#: ../Doc/library/ttk.rst:970
msgid "The tree column has ID #0."
msgstr ""

#: ../Doc/library/ttk.rst:975
msgid "Returns one of:"
msgstr ""

#: ../Doc/library/ttk.rst:978
msgid "region"
msgstr ""

#: ../Doc/library/ttk.rst:978
msgid "meaning"
msgstr ""

#: ../Doc/library/ttk.rst:980
msgid "heading"
msgstr ""

#: ../Doc/library/ttk.rst:980
msgid "Tree heading area."
msgstr ""

#: ../Doc/library/ttk.rst:982
msgid "separator"
msgstr ""

#: ../Doc/library/ttk.rst:982
msgid "Space between two columns headings."
msgstr ""

#: ../Doc/library/ttk.rst:984 ../Doc/library/turtle.rst:2214
msgid "tree"
msgstr ""

#: ../Doc/library/ttk.rst:984
msgid "The tree area."
msgstr ""

#: ../Doc/library/ttk.rst:986
msgid "cell"
msgstr ""

#: ../Doc/library/ttk.rst:986
msgid "A data cell."
msgstr ""

#: ../Doc/library/ttk.rst:989 ../Doc/library/ttk.rst:996
msgid "Availability: Tk 8.6."
msgstr ""

#: ../Doc/library/ttk.rst:994
msgid "Returns the element at position *x*, *y*."
msgstr ""

#: ../Doc/library/ttk.rst:1001
msgid ""
"Returns the integer index of *item* within its parent's list of children."
msgstr ""

#: ../Doc/library/ttk.rst:1006
msgid ""
"Creates a new item and returns the item identifier of the newly created item."
msgstr ""

#: ../Doc/library/ttk.rst:1009
msgid ""
"*parent* is the item ID of the parent item, or the empty string to create a "
"new top-level item. *index* is an integer, or the value \"end\", specifying "
"where in the list of parent's children to insert the new item. If *index* is "
"less than or equal to zero, the new node is inserted at the beginning; if "
"*index* is greater than or equal to the current number of children, it is "
"inserted at the end. If *iid* is specified, it is used as the item "
"identifier; *iid* must not already exist in the tree. Otherwise, a new "
"unique identifier is generated."
msgstr ""

#: ../Doc/library/ttk.rst:1018
msgid "See `Item Options`_ for the list of available points."
msgstr ""

#: ../Doc/library/ttk.rst:1023
msgid "Query or modify the options for the specified *item*."
msgstr ""

#: ../Doc/library/ttk.rst:1025
msgid ""
"If no options are given, a dict with options/values for the item is "
"returned. If *option* is specified then the value for that option is "
"returned. Otherwise, sets the options to the corresponding values as given "
"by *kw*."
msgstr ""

#: ../Doc/library/ttk.rst:1033
msgid "Moves *item* to position *index* in *parent*'s list of children."
msgstr ""

#: ../Doc/library/ttk.rst:1035
msgid ""
"It is illegal to move an item under one of its descendants. If *index* is "
"less than or equal to zero, *item* is moved to the beginning; if greater "
"than or equal to the number of children, it is moved to the end. If *item* "
"was detached it is reattached."
msgstr ""

#: ../Doc/library/ttk.rst:1043
msgid ""
"Returns the identifier of *item*'s next sibling, or '' if *item* is the last "
"child of its parent."
msgstr ""

#: ../Doc/library/ttk.rst:1049
msgid ""
"Returns the ID of the parent of *item*, or '' if *item* is at the top level "
"of the hierarchy."
msgstr ""

#: ../Doc/library/ttk.rst:1055
msgid ""
"Returns the identifier of *item*'s previous sibling, or '' if *item* is the "
"first child of its parent."
msgstr ""

#: ../Doc/library/ttk.rst:1061
msgid "An alias for :meth:`Treeview.move`."
msgstr ""

#: ../Doc/library/ttk.rst:1066
msgid "Ensure that *item* is visible."
msgstr ""

#: ../Doc/library/ttk.rst:1068
msgid ""
"Sets all of *item*'s ancestors open option to True, and scrolls the widget "
"if necessary so that *item* is within the visible portion of the tree."
msgstr ""

#: ../Doc/library/ttk.rst:1075
msgid ""
"If *selop* is not specified, returns selected items. Otherwise, it will act "
"according to the following selection methods."
msgstr ""

#: ../Doc/library/ttk.rst:1081
msgid "*items* becomes the new selection."
msgstr ""

#: ../Doc/library/ttk.rst:1086
msgid "Add *items* to the selection."
msgstr ""

#: ../Doc/library/ttk.rst:1091
msgid "Remove *items* from the selection."
msgstr ""

#: ../Doc/library/ttk.rst:1096
msgid "Toggle the selection state of each item in *items*."
msgstr ""

#: ../Doc/library/ttk.rst:1101
msgid ""
"With one argument, returns a dictionary of column/value pairs for the "
"specified *item*. With two arguments, returns the current value of the "
"specified *column*. With three arguments, sets the value of given *column* "
"in given *item* to the specified *value*."
msgstr ""

#: ../Doc/library/ttk.rst:1109
msgid ""
"Bind a callback for the given event *sequence* to the tag *tagname*. When an "
"event is delivered to an item, the callbacks for each of the item's tags "
"option are called."
msgstr ""

#: ../Doc/library/ttk.rst:1116
msgid "Query or modify the options for the specified *tagname*."
msgstr ""

#: ../Doc/library/ttk.rst:1118
msgid ""
"If *kw* is not given, returns a dict of the option settings for *tagname*. "
"If *option* is specified, returns the value for that *option* for the "
"specified *tagname*. Otherwise, sets the options to the corresponding values "
"for the given *tagname*."
msgstr ""

#: ../Doc/library/ttk.rst:1126
msgid ""
"If *item* is specified, returns 1 or 0 depending on whether the specified "
"*item* has the given *tagname*. Otherwise, returns a list of all items that "
"have the specified tag."
msgstr ""

#: ../Doc/library/ttk.rst:1130
msgid "Availability: Tk 8.6"
msgstr ""

#: ../Doc/library/ttk.rst:1135
msgid "Query or modify horizontal position of the treeview."
msgstr ""

#: ../Doc/library/ttk.rst:1140
msgid "Query or modify vertical position of the treeview."
msgstr ""

#: ../Doc/library/ttk.rst:1146
msgid "Ttk Styling"
msgstr ""

# 3bc0811d83b140c6b1a6d5d55734c8df
#: ../Doc/library/ttk.rst:1148
msgid ""
"Each widget in :mod:`ttk` is assigned a style, which specifies the set of "
"elements making up the widget and how they are arranged, along with dynamic "
"and default settings for element options. By default the style name is the "
"same as the widget's class name, but it may be overridden by the widget's "
"style option. If the class name of a widget is unknown, use the method :meth:"
"`Misc.winfo_class` (somewidget.winfo_class())."
msgstr ""

#: ../Doc/library/ttk.rst:1158
msgid "This document explains how the theme engine works"
msgstr ""

#: ../Doc/library/ttk.rst:1163
msgid "This class is used to manipulate the style database."
msgstr ""

#: ../Doc/library/ttk.rst:1168
msgid "Query or set the default value of the specified option(s) in *style*."
msgstr ""

#: ../Doc/library/ttk.rst:1170
msgid ""
"Each key in *kw* is an option and each value is a string identifying the "
"value for that option."
msgstr ""

# c20553947b04462eaaa5475e6718ca53
#: ../Doc/library/ttk.rst:1173
msgid ""
"For example, to change every default button to be a flat button with some "
"padding and a different background color do::"
msgstr ""

#: ../Doc/library/ttk.rst:1192
msgid "Query or sets dynamic values of the specified option(s) in *style*."
msgstr ""

# 3c10b9dce2d04482a3635a5d4fad5959
#: ../Doc/library/ttk.rst:1194
msgid ""
"Each key in *kw* is an option and each value should be a list or a tuple "
"(usually) containing statespecs grouped in tuples, lists, or something else "
"of your preference. A statespec is a compound of one or more states and then "
"a value."
msgstr ""

# 55d8b57c47f6417f8b5e3e6a4c5ebdd2
#: ../Doc/library/ttk.rst:1217
msgid ""
"Note that the order of the (states, value) sequences for an option matters.  "
"In the previous example, if you change the order to ``[('active', 'blue'), "
"('pressed', 'red')]`` in the foreground option, for example, you would get a "
"blue foreground when the widget is in the active or pressed states."
msgstr ""

#: ../Doc/library/ttk.rst:1225
msgid "Returns the value specified for *option* in *style*."
msgstr ""

#: ../Doc/library/ttk.rst:1227
msgid ""
"If *state* is specified, it is expected to be a sequence of one or more "
"states. If the *default* argument is set, it is used as a fallback value in "
"case no specification for option is found."
msgstr ""

# ed9d85dccd1d4433a8ae2170341b8103
#: ../Doc/library/ttk.rst:1231
msgid "To check what font a Button uses by default, do::"
msgstr ""

#: ../Doc/library/ttk.rst:1240
msgid ""
"Define the widget layout for given *style*. If *layoutspec* is omitted, "
"return the layout specification for given style."
msgstr ""

# 6860c4376c7f4ed79c9dfc083f9281a3
#: ../Doc/library/ttk.rst:1243
msgid ""
"*layoutspec*, if specified, is expected to be a list or some other sequence "
"type (excluding strings), where each item should be a tuple and the first "
"item is the layout name and the second item should have the format described "
"in `Layouts`_."
msgstr ""

#: ../Doc/library/ttk.rst:1248
msgid ""
"To understand the format, see the following example (it is not intended to "
"do anything useful)::"
msgstr ""

#: ../Doc/library/ttk.rst:1275
msgid ""
"Create a new element in the current theme, of the given *etype* which is "
"expected to be either \"image\", \"from\" or \"vsapi\". The latter is only "
"available in Tk 8.6a for Windows XP and Vista and is not described here."
msgstr ""

#: ../Doc/library/ttk.rst:1279
msgid ""
"If \"image\" is used, *args* should contain the default image name followed "
"by statespec/value pairs (this is the imagespec), and *kw* may have the "
"following options:"
msgstr ""

#: ../Doc/library/ttk.rst:1284
msgid ""
"padding is a list of up to four integers, specifying the left, top, right, "
"and bottom borders, respectively."
msgstr ""

#: ../Doc/library/ttk.rst:1288
msgid ""
"Specifies a minimum height for the element. If less than zero, the base "
"image's height is used as a default."
msgstr ""

#: ../Doc/library/ttk.rst:1292
msgid ""
"Specifies the element's interior padding. Defaults to border's value if not "
"specified."
msgstr ""

# 6fed73bc3d2f49858c7499d6db8e3b98
#: ../Doc/library/ttk.rst:1296
msgid ""
"Specifies how the image is placed within the final parcel. spec contains "
"zero or more characters \"n\", \"s\", \"w\", or \"e\"."
msgstr ""

#: ../Doc/library/ttk.rst:1300
msgid ""
"Specifies a minimum width for the element. If less than zero, the base "
"image's width is used as a default."
msgstr ""

#: ../Doc/library/ttk.rst:1303
msgid ""
"If \"from\" is used as the value of *etype*, :meth:`element_create` will "
"clone an existing element. *args* is expected to contain a themename, from "
"which the element will be cloned, and optionally an element to clone from. "
"If this element to clone from is not specified, an empty element will be "
"used. *kw* is discarded."
msgstr ""

#: ../Doc/library/ttk.rst:1313
msgid "Returns the list of elements defined in the current theme."
msgstr ""

#: ../Doc/library/ttk.rst:1318
msgid "Returns the list of *elementname*'s options."
msgstr ""

#: ../Doc/library/ttk.rst:1323
msgid "Create a new theme."
msgstr ""

#: ../Doc/library/ttk.rst:1325
msgid ""
"It is an error if *themename* already exists. If *parent* is specified, the "
"new theme will inherit styles, elements and layouts from the parent theme. "
"If *settings* are present they are expected to have the same syntax used "
"for :meth:`theme_settings`."
msgstr ""

#: ../Doc/library/ttk.rst:1333
msgid ""
"Temporarily sets the current theme to *themename*, apply specified "
"*settings* and then restore the previous theme."
msgstr ""

#: ../Doc/library/ttk.rst:1336
msgid ""
"Each key in *settings* is a style and each value may contain the keys "
"'configure', 'map', 'layout' and 'element create' and they are expected to "
"have the same format as specified by the methods :meth:`Style.configure`, :"
"meth:`Style.map`, :meth:`Style.layout` and :meth:`Style.element_create` "
"respectively."
msgstr ""

#: ../Doc/library/ttk.rst:1342
msgid "As an example, let's change the Combobox for the default theme a bit::"
msgstr ""

#: ../Doc/library/ttk.rst:1370
msgid "Returns a list of all known themes."
msgstr ""

#: ../Doc/library/ttk.rst:1375
msgid ""
"If *themename* is not given, returns the theme in use.  Otherwise, sets the "
"current theme to *themename*, refreshes all widgets and emits a "
"<<ThemeChanged>> event."
msgstr ""

#: ../Doc/library/ttk.rst:1381
msgid "Layouts"
msgstr ""

#: ../Doc/library/ttk.rst:1383
msgid ""
"A layout can be just None, if it takes no options, or a dict of options "
"specifying how to arrange the element. The layout mechanism uses a "
"simplified version of the pack geometry manager: given an initial cavity, "
"each element is allocated a parcel. Valid options/values are:"
msgstr ""

#: ../Doc/library/ttk.rst:1390
msgid ""
"Specifies which side of the cavity to place the element; one of top, right, "
"bottom or left. If omitted, the element occupies the entire cavity."
msgstr ""

#: ../Doc/library/ttk.rst:1395
msgid "Specifies where the element is placed inside its allocated parcel."
msgstr ""

#: ../Doc/library/ttk.rst:1398
msgid ""
"If set to 1, causes the element and all of its descendants to be treated as "
"a single element for the purposes of :meth:`Widget.identify` et al. It's "
"used for things like scrollbar thumbs with grips."
msgstr ""

#: ../Doc/library/ttk.rst:1403
msgid ""
"Specifies a list of elements to place inside the element. Each element is a "
"tuple (or other sequence type) where the first item is the layout name, and "
"the other is a `Layout`_."
msgstr ""

#: ../Doc/library/tty.rst:3
msgid ":mod:`tty` --- Terminal control functions"
msgstr ""

#: ../Doc/library/tty.rst:12
msgid ""
"The :mod:`tty` module defines functions for putting the tty into cbreak and "
"raw modes."
msgstr ""

#: ../Doc/library/tty.rst:15
msgid ""
"Because it requires the :mod:`termios` module, it will work only on Unix."
msgstr ""

#: ../Doc/library/tty.rst:17
msgid "The :mod:`tty` module defines the following functions:"
msgstr ""

#: ../Doc/library/tty.rst:22
msgid ""
"Change the mode of the file descriptor *fd* to raw. If *when* is omitted, it "
"defaults to :const:`termios.TCSAFLUSH`, and is passed to :func:`termios."
"tcsetattr`."
msgstr ""

#: ../Doc/library/tty.rst:29
msgid ""
"Change the mode of file descriptor *fd* to cbreak. If *when* is omitted, it "
"defaults to :const:`termios.TCSAFLUSH`, and is passed to :func:`termios."
"tcsetattr`."
msgstr ""

#: ../Doc/library/tty.rst:37
msgid "Low-level terminal control interface."
msgstr ""

#: ../Doc/library/turtle.rst:3
msgid ":mod:`turtle` --- Turtle graphics for Tk"
msgstr ""

#: ../Doc/library/turtle.rst:17
msgid ""
"Turtle graphics is a popular way for introducing programming to kids.  It "
"was part of the original Logo programming language developed by Wally "
"Feurzig and Seymour Papert in 1966."
msgstr ""

# 73eedeaeb8ef43f4930105fe4d13d08f
#: ../Doc/library/turtle.rst:21
msgid ""
"Imagine a robotic turtle starting at (0, 0) in the x-y plane.  After an "
"``import turtle``, give it the command ``turtle.forward(15)``, and it moves "
"(on-screen!) 15 pixels in the direction it is facing, drawing a line as it "
"moves.  Give it the command ``turtle.right(25)``, and it rotates in-place 25 "
"degrees clockwise."
msgstr ""

#: ../Doc/library/turtle.rst:26
msgid ""
"By combining together these and similar commands, intricate shapes and "
"pictures can easily be drawn."
msgstr ""

#: ../Doc/library/turtle.rst:29
msgid ""
"The :mod:`turtle` module is an extended reimplementation of the same-named "
"module from the Python standard distribution up to version Python 2.5."
msgstr ""

#: ../Doc/library/turtle.rst:32
msgid ""
"It tries to keep the merits of the old turtle module and to be (nearly) 100% "
"compatible with it.  This means in the first place to enable the learning "
"programmer to use all the commands, classes and methods interactively when "
"using the module from within IDLE run with the ``-n`` switch."
msgstr ""

# f64c4585d9294709900ee23add0e3d8c
#: ../Doc/library/turtle.rst:37
msgid ""
"The turtle module provides turtle graphics primitives, in both object-"
"oriented and procedure-oriented ways.  Because it uses :mod:`Tkinter` for "
"the underlying graphics, it needs a version of Python installed with Tk "
"support."
msgstr ""

#: ../Doc/library/turtle.rst:41
msgid "The object-oriented interface uses essentially two+two classes:"
msgstr ""

# d81634480e484bf4a9fe71419ba33833
#: ../Doc/library/turtle.rst:43
msgid ""
"The :class:`TurtleScreen` class defines graphics windows as a playground for "
"the drawing turtles.  Its constructor needs a :class:`Tkinter.Canvas` or a :"
"class:`ScrolledCanvas` as argument.  It should be used when :mod:`turtle` is "
"used as part of some application."
msgstr ""

#: ../Doc/library/turtle.rst:48
msgid ""
"The function :func:`Screen` returns a singleton object of a :class:"
"`TurtleScreen` subclass. This function should be used when :mod:`turtle` is "
"used as a standalone tool for doing graphics. As a singleton object, "
"inheriting from its class is not possible."
msgstr ""

#: ../Doc/library/turtle.rst:53
msgid ""
"All methods of TurtleScreen/Screen also exist as functions, i.e. as part of "
"the procedure-oriented interface."
msgstr ""

#: ../Doc/library/turtle.rst:56
msgid ""
":class:`RawTurtle` (alias: :class:`RawPen`) defines Turtle objects which "
"draw on a :class:`TurtleScreen`.  Its constructor needs a Canvas, "
"ScrolledCanvas or TurtleScreen as argument, so the RawTurtle objects know "
"where to draw."
msgstr ""

#: ../Doc/library/turtle.rst:60
msgid ""
"Derived from RawTurtle is the subclass :class:`Turtle` (alias: :class:"
"`Pen`), which draws on \"the\" :class:`Screen` - instance which is "
"automatically created, if not already present."
msgstr ""

#: ../Doc/library/turtle.rst:64
msgid ""
"All methods of RawTurtle/Turtle also exist as functions, i.e. part of the "
"procedure-oriented interface."
msgstr ""

#: ../Doc/library/turtle.rst:67
msgid ""
"The procedural interface provides functions which are derived from the "
"methods of the classes :class:`Screen` and :class:`Turtle`.  They have the "
"same names as the corresponding methods.  A screen object is automatically "
"created whenever a function derived from a Screen method is called.  An "
"(unnamed) turtle object is automatically created whenever any of the "
"functions derived from a Turtle method is called."
msgstr ""

#: ../Doc/library/turtle.rst:74
msgid ""
"To use multiple turtles an a screen one has to use the object-oriented "
"interface."
msgstr ""

#: ../Doc/library/turtle.rst:77
msgid ""
"In the following documentation the argument list for functions is given. "
"Methods, of course, have the additional first argument *self* which is "
"omitted here."
msgstr ""

#: ../Doc/library/turtle.rst:83
msgid "Overview over available Turtle and Screen methods"
msgstr ""

#: ../Doc/library/turtle.rst:86
msgid "Turtle methods"
msgstr ""

#: ../Doc/library/turtle.rst:177
msgid "Methods of TurtleScreen/Screen"
msgstr ""

#: ../Doc/library/turtle.rst:216
msgid "Methods of RawTurtle/Turtle and corresponding functions"
msgstr ""

#: ../Doc/library/turtle.rst:218
msgid ""
"Most of the examples in this section refer to a Turtle instance called "
"``turtle``."
msgstr ""

#: ../Doc/library/turtle.rst:222
msgid "Turtle motion"
msgstr ""

#: ../Doc/library/turtle.rst:229
msgid ""
"Move the turtle forward by the specified *distance*, in the direction the "
"turtle is headed."
msgstr ""

#: ../Doc/library/turtle.rst:250
msgid ""
"Move the turtle backward by *distance*, opposite to the direction the turtle "
"is headed.  Do not change the turtle's heading."
msgstr ""

#: ../Doc/library/turtle.rst:272
msgid ""
"Turn turtle right by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""

#: ../Doc/library/turtle.rst:295
msgid ""
"Turn turtle left by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""

#: ../Doc/library/turtle.rst:320
msgid ""
"If *y* is ``None``, *x* must be a pair of coordinates or a :class:`Vec2D` (e."
"g. as returned by :func:`pos`)."
msgstr ""

#: ../Doc/library/turtle.rst:323
msgid ""
"Move turtle to an absolute position.  If the pen is down, draw line.  Do not "
"change the turtle's orientation."
msgstr ""

#: ../Doc/library/turtle.rst:351
msgid ""
"Set the turtle's first coordinate to *x*, leave second coordinate unchanged."
msgstr ""

#: ../Doc/library/turtle.rst:372
msgid ""
"Set the turtle's second coordinate to *y*, leave first coordinate unchanged."
msgstr ""

#: ../Doc/library/turtle.rst:393
msgid ""
"Set the orientation of the turtle to *to_angle*.  Here are some common "
"directions in degrees:"
msgstr ""

#: ../Doc/library/turtle.rst:397
msgid "standard mode"
msgstr ""

#: ../Doc/library/turtle.rst:397
msgid "logo mode"
msgstr ""

#: ../Doc/library/turtle.rst:399
msgid "0 - east"
msgstr ""

#: ../Doc/library/turtle.rst:399
msgid "0 - north"
msgstr ""

#: ../Doc/library/turtle.rst:400
msgid "90 - north"
msgstr ""

#: ../Doc/library/turtle.rst:400
msgid "90 - east"
msgstr ""

#: ../Doc/library/turtle.rst:401
msgid "180 - west"
msgstr ""

#: ../Doc/library/turtle.rst:401
msgid "180 - south"
msgstr ""

#: ../Doc/library/turtle.rst:402
msgid "270 - south"
msgstr ""

#: ../Doc/library/turtle.rst:402
msgid "270 - west"
msgstr ""

#: ../Doc/library/turtle.rst:414
msgid ""
"Move turtle to the origin -- coordinates (0,0) -- and set its heading to its "
"start-orientation (which depends on the mode, see :func:`mode`)."
msgstr ""

#: ../Doc/library/turtle.rst:442
msgid ""
"Draw a circle with given *radius*.  The center is *radius* units left of the "
"turtle; *extent* -- an angle -- determines which part of the circle is "
"drawn.  If *extent* is not given, draw the entire circle.  If *extent* is "
"not a full circle, one endpoint of the arc is the current pen position.  "
"Draw the arc in counterclockwise direction if *radius* is positive, "
"otherwise in clockwise direction.  Finally the direction of the turtle is "
"changed by the amount of *extent*."
msgstr ""

#: ../Doc/library/turtle.rst:450
msgid ""
"As the circle is approximated by an inscribed regular polygon, *steps* "
"determines the number of steps to use.  If not given, it will be calculated "
"automatically.  May be used to draw regular polygons."
msgstr ""

#: ../Doc/library/turtle.rst:478
msgid ""
"Draw a circular dot with diameter *size*, using *color*.  If *size* is not "
"given, the maximum of pensize+4 and 2*pensize is used."
msgstr ""

#: ../Doc/library/turtle.rst:495
msgid ""
"Stamp a copy of the turtle shape onto the canvas at the current turtle "
"position.  Return a stamp_id for that stamp, which can be used to delete it "
"by calling ``clearstamp(stamp_id)``."
msgstr ""

#: ../Doc/library/turtle.rst:512
msgid "Delete stamp with given *stampid*."
msgstr ""

#: ../Doc/library/turtle.rst:532
msgid ""
"Delete all or first/last *n* of turtle's stamps.  If *n* is None, delete all "
"stamps, if *n* > 0 delete first *n* stamps, else if *n* < 0 delete last *n* "
"stamps."
msgstr ""

#: ../Doc/library/turtle.rst:555
msgid ""
"Undo (repeatedly) the last turtle action(s).  Number of available undo "
"actions is determined by the size of the undobuffer."
msgstr ""

#: ../Doc/library/turtle.rst:571
msgid ""
"Set the turtle's speed to an integer value in the range 0..10.  If no "
"argument is given, return current speed."
msgstr ""

#: ../Doc/library/turtle.rst:574
msgid ""
"If input is a number greater than 10 or smaller than 0.5, speed is set to "
"0.  Speedstrings are mapped to speedvalues as follows:"
msgstr ""

#: ../Doc/library/turtle.rst:577
msgid "\"fastest\":  0"
msgstr ""

#: ../Doc/library/turtle.rst:578
msgid "\"fast\":  10"
msgstr ""

#: ../Doc/library/turtle.rst:579
msgid "\"normal\":  6"
msgstr ""

#: ../Doc/library/turtle.rst:580
msgid "\"slow\":  3"
msgstr ""

#: ../Doc/library/turtle.rst:581
msgid "\"slowest\":  1"
msgstr ""

#: ../Doc/library/turtle.rst:583
msgid ""
"Speeds from 1 to 10 enforce increasingly faster animation of line drawing "
"and turtle turning."
msgstr ""

#: ../Doc/library/turtle.rst:586
msgid ""
"Attention: *speed* = 0 means that *no* animation takes place. forward/back "
"makes turtle jump and likewise left/right make the turtle turn instantly."
msgstr ""

#: ../Doc/library/turtle.rst:603
msgid "Tell Turtle's state"
msgstr ""

#: ../Doc/library/turtle.rst:608
msgid ""
"Return the turtle's current location (x,y) (as a :class:`Vec2D` vector)."
msgstr ""

#: ../Doc/library/turtle.rst:621
msgid ""
"Return the angle between the line from turtle position to position specified "
"by (x,y), the vector or the other turtle.  This depends on the turtle's "
"start orientation which depends on the mode - \"standard\"/\"world\" or "
"\"logo\")."
msgstr ""

#: ../Doc/library/turtle.rst:634
msgid "Return the turtle's x coordinate."
msgstr ""

#: ../Doc/library/turtle.rst:649
msgid "Return the turtle's y coordinate."
msgstr ""

#: ../Doc/library/turtle.rst:664
msgid ""
"Return the turtle's current heading (value depends on the turtle mode, see :"
"func:`mode`)."
msgstr ""

#: ../Doc/library/turtle.rst:680
msgid ""
"Return the distance from the turtle to (x,y), the given vector, or the given "
"other turtle, in turtle step units."
msgstr ""

#: ../Doc/library/turtle.rst:697
msgid "Settings for measurement"
msgstr ""

#: ../Doc/library/turtle.rst:703
msgid ""
"Set angle measurement units, i.e. set number of \"degrees\" for a full "
"circle. Default value is 360 degrees."
msgstr ""

#: ../Doc/library/turtle.rst:725
msgid ""
"Set the angle measurement units to radians.  Equivalent to ``degrees(2*math."
"pi)``."
msgstr ""

#: ../Doc/library/turtle.rst:745
msgid "Pen control"
msgstr ""

#: ../Doc/library/turtle.rst:748
msgid "Drawing state"
msgstr ""

#: ../Doc/library/turtle.rst:754
msgid "Pull the pen down -- drawing when moving."
msgstr ""

#: ../Doc/library/turtle.rst:761
msgid "Pull the pen up -- no drawing when moving."
msgstr ""

#: ../Doc/library/turtle.rst:769
msgid ""
"Set the line thickness to *width* or return it.  If resizemode is set to "
"\"auto\" and turtleshape is a polygon, that polygon is drawn with the same "
"line thickness.  If no argument is given, the current pensize is returned."
msgstr ""

#: ../Doc/library/turtle.rst:785
msgid ""
"Return or set the pen's attributes in a \"pen-dictionary\" with the "
"following key/value pairs:"
msgstr ""

#: ../Doc/library/turtle.rst:788
msgid "\"shown\": True/False"
msgstr ""

#: ../Doc/library/turtle.rst:789
msgid "\"pendown\": True/False"
msgstr ""

#: ../Doc/library/turtle.rst:790
msgid "\"pencolor\": color-string or color-tuple"
msgstr ""

#: ../Doc/library/turtle.rst:791
msgid "\"fillcolor\": color-string or color-tuple"
msgstr ""

#: ../Doc/library/turtle.rst:792
msgid "\"pensize\": positive number"
msgstr ""

#: ../Doc/library/turtle.rst:793
msgid "\"speed\": number in range 0..10"
msgstr ""

#: ../Doc/library/turtle.rst:794
msgid "\"resizemode\": \"auto\" or \"user\" or \"noresize\""
msgstr ""

#: ../Doc/library/turtle.rst:795
msgid "\"stretchfactor\": (positive number, positive number)"
msgstr ""

#: ../Doc/library/turtle.rst:796
msgid "\"outline\": positive number"
msgstr ""

#: ../Doc/library/turtle.rst:797
msgid "\"tilt\": number"
msgstr ""

#: ../Doc/library/turtle.rst:799
msgid ""
"This dictionary can be used as argument for a subsequent call to :func:`pen` "
"to restore the former pen-state.  Moreover one or more of these attributes "
"can be provided as keyword-arguments.  This can be used to set several pen "
"attributes in one statement."
msgstr ""

#: ../Doc/library/turtle.rst:828
msgid "Return ``True`` if pen is down, ``False`` if it's up."
msgstr ""

#: ../Doc/library/turtle.rst:841
msgid "Color control"
msgstr ""

#: ../Doc/library/turtle.rst:845
msgid "Return or set the pencolor."
msgstr ""

#: ../Doc/library/turtle.rst:847 ../Doc/library/turtle.rst:895
msgid "Four input formats are allowed:"
msgstr ""

#: ../Doc/library/turtle.rst:850
msgid ""
"Return the current pencolor as color specification string or as a tuple (see "
"example).  May be used as input to another color/pencolor/fillcolor call."
msgstr ""

#: ../Doc/library/turtle.rst:855
msgid ""
"Set pencolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""

#: ../Doc/library/turtle.rst:859
msgid ""
"Set pencolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""

#: ../Doc/library/turtle.rst:864
msgid ""
"Set pencolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""

#: ../Doc/library/turtle.rst:867
msgid ""
"If turtleshape is a polygon, the outline of that polygon is drawn with the "
"newly set pencolor."
msgstr ""

#: ../Doc/library/turtle.rst:893
msgid "Return or set the fillcolor."
msgstr ""

#: ../Doc/library/turtle.rst:898
msgid ""
"Return the current fillcolor as color specification string, possibly in "
"tuple format (see example).  May be used as input to another color/pencolor/"
"fillcolor call."
msgstr ""

#: ../Doc/library/turtle.rst:903
msgid ""
"Set fillcolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""

#: ../Doc/library/turtle.rst:907
msgid ""
"Set fillcolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""

#: ../Doc/library/turtle.rst:912
msgid ""
"Set fillcolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""

#: ../Doc/library/turtle.rst:915
msgid ""
"If turtleshape is a polygon, the interior of that polygon is drawn with the "
"newly set fillcolor."
msgstr ""

#: ../Doc/library/turtle.rst:936
msgid "Return or set pencolor and fillcolor."
msgstr ""

#: ../Doc/library/turtle.rst:938
msgid ""
"Several input formats are allowed.  They use 0 to 3 arguments as follows:"
msgstr ""

#: ../Doc/library/turtle.rst:942
msgid ""
"Return the current pencolor and the current fillcolor as a pair of color "
"specification strings or tuples as returned by :func:`pencolor` and :func:"
"`fillcolor`."
msgstr ""

#: ../Doc/library/turtle.rst:947
msgid ""
"Inputs as in :func:`pencolor`, set both, fillcolor and pencolor, to the "
"given value."
msgstr ""

#: ../Doc/library/turtle.rst:951
msgid ""
"Equivalent to ``pencolor(colorstring1)`` and ``fillcolor(colorstring2)`` and "
"analogously if the other input format is used."
msgstr ""

#: ../Doc/library/turtle.rst:954
msgid ""
"If turtleshape is a polygon, outline and interior of that polygon is drawn "
"with the newly set colors."
msgstr ""

#: ../Doc/library/turtle.rst:967
msgid "See also: Screen method :func:`colormode`."
msgstr ""

#: ../Doc/library/turtle.rst:971
msgid "Filling"
msgstr ""

# 5e600f3a786e4044a1eab2c2b35da570
#: ../Doc/library/turtle.rst:982
msgid ""
"Call ``fill(True)`` before drawing the shape you want to fill, and ``fill"
"(False)`` when done.  When used without argument: return fillstate (``True`` "
"if filling, ``False`` else)."
msgstr ""

# 90a247cc2a12425e830818449695a128
#: ../Doc/library/turtle.rst:998
msgid ""
"Call just before drawing a shape to be filled.  Equivalent to ``fill(True)``."
msgstr ""

# 3ccc173abbab453ea4c80d55e0c95b2f
#: ../Doc/library/turtle.rst:1003
msgid ""
"Fill the shape drawn after the last call to :func:`begin_fill`.  Equivalent "
"to ``fill(False)``."
msgstr ""

#: ../Doc/library/turtle.rst:1015
msgid "More drawing control"
msgstr ""

#: ../Doc/library/turtle.rst:1019
msgid ""
"Delete the turtle's drawings from the screen, re-center the turtle and set "
"variables to the default values."
msgstr ""

#: ../Doc/library/turtle.rst:1039
msgid ""
"Delete the turtle's drawings from the screen.  Do not move turtle.  State "
"and position of the turtle as well as drawings of other turtles are not "
"affected."
msgstr ""

#: ../Doc/library/turtle.rst:1050
msgid ""
"Write text - the string representation of *arg* - at the current turtle "
"position according to *align* (\"left\", \"center\" or right\") and with the "
"given font.  If *move* is True, the pen is moved to the bottom-right corner "
"of the text.  By default, *move* is False."
msgstr ""

#: ../Doc/library/turtle.rst:1060
msgid "Turtle state"
msgstr ""

#: ../Doc/library/turtle.rst:1063
msgid "Visibility"
msgstr ""

#: ../Doc/library/turtle.rst:1068
msgid ""
"Make the turtle invisible.  It's a good idea to do this while you're in the "
"middle of doing some complex drawing, because hiding the turtle speeds up "
"the drawing observably."
msgstr ""

#: ../Doc/library/turtle.rst:1080
msgid "Make the turtle visible."
msgstr ""

#: ../Doc/library/turtle.rst:1089
msgid "Return True if the Turtle is shown, False if it's hidden."
msgstr ""

#: ../Doc/library/turtle.rst:1100
msgid "Appearance"
msgstr ""

#: ../Doc/library/turtle.rst:1106
msgid ""
"Set turtle shape to shape with given *name* or, if name is not given, return "
"name of current shape.  Shape with *name* must exist in the TurtleScreen's "
"shape dictionary.  Initially there are the following polygon shapes: \"arrow"
"\", \"turtle\", \"circle\", \"square\", \"triangle\", \"classic\".  To learn "
"about how to deal with shapes see Screen method :func:`register_shape`."
msgstr ""

#: ../Doc/library/turtle.rst:1125
msgid ""
"Set resizemode to one of the values: \"auto\", \"user\", \"noresize\".  If "
"*rmode* is not given, return current resizemode.  Different resizemodes have "
"the following effects:"
msgstr ""

#: ../Doc/library/turtle.rst:1129
msgid ""
"\"auto\": adapts the appearance of the turtle corresponding to the value of "
"pensize."
msgstr ""

#: ../Doc/library/turtle.rst:1130
msgid ""
"\"user\": adapts the appearance of the turtle according to the values of "
"stretchfactor and outlinewidth (outline), which are set by :func:`shapesize`."
msgstr ""

#: ../Doc/library/turtle.rst:1133
msgid "\"noresize\": no adaption of the turtle's appearance takes place."
msgstr ""

#: ../Doc/library/turtle.rst:1135
msgid ""
"resizemode(\"user\") is called by :func:`shapesize` when used with arguments."
msgstr ""

#: ../Doc/library/turtle.rst:1153
msgid ""
"Return or set the pen's attributes x/y-stretchfactors and/or outline.  Set "
"resizemode to \"user\".  If and only if resizemode is set to \"user\", the "
"turtle will be displayed stretched according to its stretchfactors: "
"*stretch_wid* is stretchfactor perpendicular to its orientation, "
"*stretch_len* is stretchfactor in direction of its orientation, *outline* "
"determines the width of the shapes's outline."
msgstr ""

#: ../Doc/library/turtle.rst:1177
msgid ""
"Rotate the turtleshape by *angle* from its current tilt-angle, but do *not* "
"change the turtle's heading (direction of movement)."
msgstr ""

#: ../Doc/library/turtle.rst:1195
msgid ""
"Rotate the turtleshape to point in the direction specified by *angle*, "
"regardless of its current tilt-angle.  *Do not* change the turtle's heading "
"(direction of movement)."
msgstr ""

# 7a17a2cc97ce4256b6a5c6615deda66c
#: ../Doc/library/turtle.rst:1212
msgid ""
"Return the current tilt-angle, i.e. the angle between the orientation of the "
"turtleshape and the heading of the turtle (its direction of movement)."
msgstr ""

#: ../Doc/library/turtle.rst:1226
msgid "Using events"
msgstr ""

#: ../Doc/library/turtle.rst:1236
msgid ""
"Bind *fun* to mouse-click events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed.  Example for the anonymous turtle, i.e. the "
"procedural way:"
msgstr ""

#: ../Doc/library/turtle.rst:1257
msgid ""
"Bind *fun* to mouse-button-release events on this turtle.  If *fun* is "
"``None``, existing bindings are removed."
msgstr ""

#: ../Doc/library/turtle.rst:1281
msgid ""
"Bind *fun* to mouse-move events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""

#: ../Doc/library/turtle.rst:1284
msgid ""
"Remark: Every sequence of mouse-move-events on a turtle is preceded by a "
"mouse-click event on that turtle."
msgstr ""

#: ../Doc/library/turtle.rst:1291
msgid ""
"Subsequently, clicking and dragging the Turtle will move it across the "
"screen thereby producing handdrawings (if pen is down)."
msgstr ""

# 2795a85d74de4ca1836503d5d8c23288
#: ../Doc/library/turtle.rst:1298
msgid ""
"Starts event loop - calling Tkinter's mainloop function. Must be the last "
"statement in a turtle graphics program."
msgstr ""

#: ../Doc/library/turtle.rst:1305
msgid "Special Turtle methods"
msgstr ""

#: ../Doc/library/turtle.rst:1309
msgid ""
"Start recording the vertices of a polygon.  Current turtle position is first "
"vertex of polygon."
msgstr ""

#: ../Doc/library/turtle.rst:1315
msgid ""
"Stop recording the vertices of a polygon.  Current turtle position is last "
"vertex of polygon.  This will be connected with the first vertex."
msgstr ""

#: ../Doc/library/turtle.rst:1321
msgid "Return the last recorded polygon."
msgstr ""

#: ../Doc/library/turtle.rst:1339
msgid ""
"Create and return a clone of the turtle with same position, heading and "
"turtle properties."
msgstr ""

#: ../Doc/library/turtle.rst:1351
msgid ""
"Return the Turtle object itself.  Only reasonable use: as a function to "
"return the \"anonymous turtle\":"
msgstr ""

#: ../Doc/library/turtle.rst:1364
msgid ""
"Return the :class:`TurtleScreen` object the turtle is drawing on. "
"TurtleScreen methods can then be called for that object."
msgstr ""

#: ../Doc/library/turtle.rst:1379
msgid ""
"Set or disable undobuffer.  If *size* is an integer an empty undobuffer of "
"given size is installed.  *size* gives the maximum number of turtle actions "
"that can be undone by the :func:`undo` method/function.  If *size* is "
"``None``, the undobuffer is disabled."
msgstr ""

#: ../Doc/library/turtle.rst:1391
msgid "Return number of entries in the undobuffer."
msgstr ""

# bcbe200b253948ca89eb5b393aae9720
#: ../Doc/library/turtle.rst:1401
msgid "A replica of the corresponding TurtleScreen method."
msgstr ""

# ddf4c606b5a94eccbdb71ca99bbd6ffe
#: ../Doc/library/turtle.rst:1409
msgid "Both are replicas of the corresponding TurtleScreen methods."
msgstr ""

#: ../Doc/library/turtle.rst:1417
msgid "Excursus about the use of compound shapes"
msgstr ""

#: ../Doc/library/turtle.rst:1419
msgid ""
"To use compound turtle shapes, which consist of several polygons of "
"different color, you must use the helper class :class:`Shape` explicitly as "
"described below:"
msgstr ""

#: ../Doc/library/turtle.rst:1423
msgid "Create an empty Shape object of type \"compound\"."
msgstr ""

#: ../Doc/library/turtle.rst:1424
msgid ""
"Add as many components to this object as desired, using the :meth:"
"`addcomponent` method."
msgstr ""

#: ../Doc/library/turtle.rst:1437
msgid "Now add the Shape to the Screen's shapelist and use it:"
msgstr ""

#: ../Doc/library/turtle.rst:1447
msgid ""
"The :class:`Shape` class is used internally by the :func:`register_shape` "
"method in different ways.  The application programmer has to deal with the "
"Shape class *only* when using compound shapes like shown above!"
msgstr ""

#: ../Doc/library/turtle.rst:1453
msgid "Methods of TurtleScreen/Screen and corresponding functions"
msgstr ""

#: ../Doc/library/turtle.rst:1455
msgid ""
"Most of the examples in this section refer to a TurtleScreen instance called "
"``screen``."
msgstr ""

#: ../Doc/library/turtle.rst:1464
msgid "Window control"
msgstr ""

#: ../Doc/library/turtle.rst:1472
msgid "Set or return background color of the TurtleScreen."
msgstr ""

#: ../Doc/library/turtle.rst:1488
msgid ""
"Set background image or return name of current backgroundimage.  If "
"*picname* is a filename, set the corresponding image as background.  If "
"*picname* is ``\"nopic\"``, delete background image, if present.  If "
"*picname* is ``None``, return the filename of the current backgroundimage. ::"
msgstr ""

#: ../Doc/library/turtle.rst:1503
msgid ""
"Delete all drawings and all turtles from the TurtleScreen.  Reset the now "
"empty TurtleScreen to its initial state: white background, no background "
"image, no event bindings and tracing on."
msgstr ""

#: ../Doc/library/turtle.rst:1508
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``clearscreen``.  The global function ``clear`` is another one derived "
"from the Turtle method ``clear``."
msgstr ""

#: ../Doc/library/turtle.rst:1516
msgid "Reset all Turtles on the Screen to their initial state."
msgstr ""

#: ../Doc/library/turtle.rst:1519
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``resetscreen``.  The global function ``reset`` is another one derived "
"from the Turtle method ``reset``."
msgstr ""

#: ../Doc/library/turtle.rst:1530
msgid ""
"If no arguments are given, return current (canvaswidth, canvasheight).  Else "
"resize the canvas the turtles are drawing on.  Do not alter the drawing "
"window.  To observe hidden parts of the canvas, use the scrollbars. With "
"this method, one can make visible those parts of a drawing which were "
"outside the canvas before."
msgstr ""

#: ../Doc/library/turtle.rst:1542
msgid "e.g. to search for an erroneously escaped turtle ;-)"
msgstr ""

#: ../Doc/library/turtle.rst:1552
msgid ""
"Set up user-defined coordinate system and switch to mode \"world\" if "
"necessary.  This performs a ``screen.reset()``.  If mode \"world\" is "
"already active, all drawings are redrawn according to the new coordinates."
msgstr ""

#: ../Doc/library/turtle.rst:1556
msgid ""
"**ATTENTION**: in user-defined coordinate systems angles may appear "
"distorted."
msgstr ""

#: ../Doc/library/turtle.rst:1578
msgid "Animation control"
msgstr ""

#: ../Doc/library/turtle.rst:1584
msgid ""
"Set or return the drawing *delay* in milliseconds.  (This is approximately "
"the time interval between two consecutive canvas updates.)  The longer the "
"drawing delay, the slower the animation."
msgstr ""

#: ../Doc/library/turtle.rst:1588
msgid "Optional argument:"
msgstr ""

#: ../Doc/library/turtle.rst:1604
msgid ""
"Turn turtle animation on/off and set delay for update drawings.  If *n* is "
"given, only each n-th regular screen update is really performed.  (Can be "
"used to accelerate the drawing of complex graphics.)  Second argument sets "
"delay value (see :func:`delay`)."
msgstr ""

#: ../Doc/library/turtle.rst:1621
msgid "Perform a TurtleScreen update. To be used when tracer is turned off."
msgstr ""

#: ../Doc/library/turtle.rst:1623
msgid "See also the RawTurtle/Turtle method :func:`speed`."
msgstr ""

#: ../Doc/library/turtle.rst:1627
msgid "Using screen events"
msgstr ""

#: ../Doc/library/turtle.rst:1631
msgid ""
"Set focus on TurtleScreen (in order to collect key-events).  Dummy arguments "
"are provided in order to be able to pass :func:`listen` to the onclick "
"method."
msgstr ""

#: ../Doc/library/turtle.rst:1640
msgid ""
"Bind *fun* to key-release event of key.  If *fun* is ``None``, event "
"bindings are removed. Remark: in order to be able to register key-events, "
"TurtleScreen must have the focus. (See method :func:`listen`.)"
msgstr ""

#: ../Doc/library/turtle.rst:1663
msgid ""
"Bind *fun* to mouse-click events on this screen.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""

#: ../Doc/library/turtle.rst:1666
msgid ""
"Example for a TurtleScreen instance named ``screen`` and a Turtle instance "
"named turtle:"
msgstr ""

#: ../Doc/library/turtle.rst:1676
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``onscreenclick``.  The global function ``onclick`` is another one "
"derived from the Turtle method ``onclick``."
msgstr ""

#: ../Doc/library/turtle.rst:1686
msgid "Install a timer that calls *fun* after *t* milliseconds."
msgstr ""

#: ../Doc/library/turtle.rst:1701
msgid "Settings and special methods"
msgstr ""

#: ../Doc/library/turtle.rst:1707
msgid ""
"Set turtle mode (\"standard\", \"logo\" or \"world\") and perform reset.  If "
"mode is not given, current mode is returned."
msgstr ""

#: ../Doc/library/turtle.rst:1710
msgid ""
"Mode \"standard\" is compatible with old :mod:`turtle`.  Mode \"logo\" is "
"compatible with most Logo turtle graphics.  Mode \"world\" uses user-defined "
"\"world coordinates\". **Attention**: in this mode angles appear distorted "
"if ``x/y`` unit-ratio doesn't equal 1."
msgstr ""

#: ../Doc/library/turtle.rst:1716
msgid "Initial turtle heading"
msgstr ""

#: ../Doc/library/turtle.rst:1716
msgid "positive angles"
msgstr ""

#: ../Doc/library/turtle.rst:1718
msgid "\"standard\""
msgstr ""

#: ../Doc/library/turtle.rst:1718
msgid "to the right (east)"
msgstr ""

#: ../Doc/library/turtle.rst:1718
msgid "counterclockwise"
msgstr ""

#: ../Doc/library/turtle.rst:1719
msgid "\"logo\""
msgstr ""

#: ../Doc/library/turtle.rst:1719
msgid "upward    (north)"
msgstr ""

#: ../Doc/library/turtle.rst:1719
msgid "clockwise"
msgstr ""

#: ../Doc/library/turtle.rst:1733
msgid ""
"Return the colormode or set it to 1.0 or 255.  Subsequently *r*, *g*, *b* "
"values of color triples have to be in the range 0..\\ *cmode*."
msgstr ""

#: ../Doc/library/turtle.rst:1753
msgid ""
"Return the Canvas of this TurtleScreen.  Useful for insiders who know what "
"to do with a Tkinter Canvas."
msgstr ""

#: ../Doc/library/turtle.rst:1765
msgid "Return a list of names of all currently available turtle shapes."
msgstr ""

#: ../Doc/library/turtle.rst:1776
msgid "There are three different ways to call this function:"
msgstr ""

#: ../Doc/library/turtle.rst:1778
msgid ""
"*name* is the name of a gif-file and *shape* is ``None``: Install the "
"corresponding image shape. ::"
msgstr ""

#: ../Doc/library/turtle.rst:1784
msgid ""
"Image shapes *do not* rotate when turning the turtle, so they do not display "
"the heading of the turtle!"
msgstr ""

#: ../Doc/library/turtle.rst:1787
msgid ""
"*name* is an arbitrary string and *shape* is a tuple of pairs of "
"coordinates: Install the corresponding polygon shape."
msgstr ""

#: ../Doc/library/turtle.rst:1794
msgid ""
"*name* is an arbitrary string and shape is a (compound) :class:`Shape` "
"object: Install the corresponding compound shape."
msgstr ""

#: ../Doc/library/turtle.rst:1797
msgid ""
"Add a turtle shape to TurtleScreen's shapelist.  Only thusly registered "
"shapes can be used by issuing the command ``shape(shapename)``."
msgstr ""

#: ../Doc/library/turtle.rst:1803
msgid "Return the list of turtles on the screen."
msgstr ""

#: ../Doc/library/turtle.rst:1813
msgid "Return the height of the turtle window. ::"
msgstr ""

#: ../Doc/library/turtle.rst:1821
msgid "Return the width of the turtle window. ::"
msgstr ""

#: ../Doc/library/turtle.rst:1830
msgid "Methods specific to Screen, not inherited from TurtleScreen"
msgstr ""

#: ../Doc/library/turtle.rst:1834
msgid "Shut the turtlegraphics window."
msgstr ""

#: ../Doc/library/turtle.rst:1839
msgid "Bind bye() method to mouse clicks on the Screen."
msgstr ""

#: ../Doc/library/turtle.rst:1842
msgid ""
"If the value \"using_IDLE\" in the configuration dictionary is ``False`` "
"(default value), also enter mainloop.  Remark: If IDLE with the ``-n`` "
"switch (no subprocess) is used, this value should be set to ``True`` in :"
"file:`turtle.cfg`.  In this case IDLE's own mainloop is active also for the "
"client script."
msgstr ""

# 213d79f0a68346059ec9a992824b70b6
#: ../Doc/library/turtle.rst:1851
msgid ""
"Set the size and position of the main window.  Default values of arguments "
"are stored in the configuration dictionary and can be changed via a :file:"
"`turtle.cfg` file."
msgstr ""

#: ../Doc/library/turtle.rst:1879
msgid "Set title of turtle window to *titlestring*."
msgstr ""

#: ../Doc/library/turtle.rst:1887
msgid "The public classes of the module :mod:`turtle`"
msgstr ""

#: ../Doc/library/turtle.rst:1896
msgid ""
"Create a turtle.  The turtle has all methods described above as \"methods of "
"Turtle/RawTurtle\"."
msgstr ""

#: ../Doc/library/turtle.rst:1902
msgid ""
"Subclass of RawTurtle, has the same interface but draws on a default :class:"
"`Screen` object created automatically when needed for the first time."
msgstr ""

#: ../Doc/library/turtle.rst:1910
msgid ""
"Provides screen oriented methods like :func:`setbg` etc. that are described "
"above."
msgstr ""

#: ../Doc/library/turtle.rst:1915
msgid ""
"Subclass of TurtleScreen, with :ref:`four methods added <screenspecific>`."
msgstr ""

#: ../Doc/library/turtle.rst:1923
msgid ""
"Used by class Screen, which thus automatically provides a ScrolledCanvas as "
"playground for the turtles."
msgstr ""

#: ../Doc/library/turtle.rst:1930
msgid ""
"Data structure modeling shapes.  The pair ``(type_, data)`` must follow this "
"specification:"
msgstr ""

#: ../Doc/library/turtle.rst:1935
msgid "*type_*"
msgstr ""

#: ../Doc/library/turtle.rst:1935
msgid "*data*"
msgstr ""

#: ../Doc/library/turtle.rst:1937
msgid "\"polygon\""
msgstr ""

#: ../Doc/library/turtle.rst:1937
msgid "a polygon-tuple, i.e. a tuple of pairs of coordinates"
msgstr ""

#: ../Doc/library/turtle.rst:1938
msgid "\"image\""
msgstr ""

#: ../Doc/library/turtle.rst:1938
msgid "an image  (in this form only used internally!)"
msgstr ""

#: ../Doc/library/turtle.rst:1939
msgid "\"compound\""
msgstr ""

#: ../Doc/library/turtle.rst:1939
msgid ""
"``None`` (a compound shape has to be constructed using the :meth:"
"`addcomponent` method)"
msgstr ""

#: ../Doc/library/turtle.rst:1958
msgid "See :ref:`compoundshapes`."
msgstr ""

#: ../Doc/library/turtle.rst:1963
msgid ""
"A two-dimensional vector class, used as a helper class for implementing "
"turtle graphics.  May be useful for turtle graphics programs too.  Derived "
"from tuple, so a vector is a tuple!"
msgstr ""

#: ../Doc/library/turtle.rst:1967
msgid "Provides (for *a*, *b* vectors, *k* number):"
msgstr ""

#: ../Doc/library/turtle.rst:1969
msgid "``a + b`` vector addition"
msgstr ""

#: ../Doc/library/turtle.rst:1970
msgid "``a - b`` vector subtraction"
msgstr ""

#: ../Doc/library/turtle.rst:1971
msgid "``a * b`` inner product"
msgstr ""

#: ../Doc/library/turtle.rst:1972
msgid "``k * a`` and ``a * k`` multiplication with scalar"
msgstr ""

#: ../Doc/library/turtle.rst:1973
msgid "``abs(a)`` absolute value of a"
msgstr ""

#: ../Doc/library/turtle.rst:1974
msgid "``a.rotate(angle)`` rotation"
msgstr ""

#: ../Doc/library/turtle.rst:1978
msgid "Help and configuration"
msgstr ""

#: ../Doc/library/turtle.rst:1981
msgid "How to use help"
msgstr ""

#: ../Doc/library/turtle.rst:1983
msgid ""
"The public methods of the Screen and Turtle classes are documented "
"extensively via docstrings.  So these can be used as online-help via the "
"Python help facilities:"
msgstr ""

#: ../Doc/library/turtle.rst:1987
msgid ""
"When using IDLE, tooltips show the signatures and first lines of the "
"docstrings of typed in function-/method calls."
msgstr ""

#: ../Doc/library/turtle.rst:1990
msgid "Calling :func:`help` on methods or functions displays the docstrings::"
msgstr ""

#: ../Doc/library/turtle.rst:2021
msgid ""
"The docstrings of the functions which are derived from methods have a "
"modified form::"
msgstr ""

#: ../Doc/library/turtle.rst:2055
msgid ""
"These modified docstrings are created automatically together with the "
"function definitions that are derived from the methods at import time."
msgstr ""

#: ../Doc/library/turtle.rst:2060
msgid "Translation of docstrings into different languages"
msgstr ""

#: ../Doc/library/turtle.rst:2062
msgid ""
"There is a utility to create a dictionary the keys of which are the method "
"names and the values of which are the docstrings of the public methods of "
"the classes Screen and Turtle."
msgstr ""

#: ../Doc/library/turtle.rst:2070
msgid ""
"Create and write docstring-dictionary to a Python script with the given "
"filename.  This function has to be called explicitly (it is not used by the "
"turtle graphics classes).  The docstring dictionary will be written to the "
"Python script :file:`{filename}.py`.  It is intended to serve as a template "
"for translation of the docstrings into different languages."
msgstr ""

#: ../Doc/library/turtle.rst:2076
msgid ""
"If you (or your students) want to use :mod:`turtle` with online help in your "
"native language, you have to translate the docstrings and save the resulting "
"file as e.g. :file:`turtle_docstringdict_german.py`."
msgstr ""

#: ../Doc/library/turtle.rst:2080
msgid ""
"If you have an appropriate entry in your :file:`turtle.cfg` file this "
"dictionary will be read in at import time and will replace the original "
"English docstrings."
msgstr ""

#: ../Doc/library/turtle.rst:2083
msgid ""
"At the time of this writing there are docstring dictionaries in German and "
"in Italian.  (Requests please to glingl@aon.at.)"
msgstr ""

#: ../Doc/library/turtle.rst:2089
msgid "How to configure Screen and Turtles"
msgstr ""

#: ../Doc/library/turtle.rst:2091
msgid ""
"The built-in default configuration mimics the appearance and behaviour of "
"the old turtle module in order to retain best possible compatibility with it."
msgstr ""

#: ../Doc/library/turtle.rst:2094
msgid ""
"If you want to use a different configuration which better reflects the "
"features of this module or which better fits to your needs, e.g. for use in "
"a classroom, you can prepare a configuration file ``turtle.cfg`` which will "
"be read at import time and modify the configuration according to its "
"settings."
msgstr ""

#: ../Doc/library/turtle.rst:2099
msgid ""
"The built in configuration would correspond to the following turtle.cfg::"
msgstr ""

#: ../Doc/library/turtle.rst:2122
msgid "Short explanation of selected entries:"
msgstr ""

#: ../Doc/library/turtle.rst:2124
msgid ""
"The first four lines correspond to the arguments of the :meth:`Screen.setup` "
"method."
msgstr ""

#: ../Doc/library/turtle.rst:2126
msgid ""
"Line 5 and 6 correspond to the arguments of the method :meth:`Screen."
"screensize`."
msgstr ""

#: ../Doc/library/turtle.rst:2128
msgid ""
"*shape* can be any of the built-in shapes, e.g: arrow, turtle, etc.  For "
"more info try ``help(shape)``."
msgstr ""

#: ../Doc/library/turtle.rst:2130
msgid ""
"If you want to use no fillcolor (i.e. make the turtle transparent), you have "
"to write ``fillcolor = \"\"`` (but all nonempty strings must not have quotes "
"in the cfg-file)."
msgstr ""

#: ../Doc/library/turtle.rst:2133
msgid ""
"If you want to reflect the turtle its state, you have to use ``resizemode = "
"auto``."
msgstr ""

#: ../Doc/library/turtle.rst:2135
msgid ""
"If you set e.g. ``language = italian`` the docstringdict :file:"
"`turtle_docstringdict_italian.py` will be loaded at import time (if present "
"on the import path, e.g. in the same directory as :mod:`turtle`."
msgstr ""

#: ../Doc/library/turtle.rst:2138
msgid ""
"The entries *exampleturtle* and *examplescreen* define the names of these "
"objects as they occur in the docstrings.  The transformation of method-"
"docstrings to function-docstrings will delete these names from the "
"docstrings."
msgstr ""

#: ../Doc/library/turtle.rst:2142
msgid ""
"*using_IDLE*: Set this to ``True`` if you regularly work with IDLE and its -"
"n switch (\"no subprocess\").  This will prevent :func:`exitonclick` to "
"enter the mainloop."
msgstr ""

#: ../Doc/library/turtle.rst:2146
msgid ""
"There can be a :file:`turtle.cfg` file in the directory where :mod:`turtle` "
"is stored and an additional one in the current working directory.  The "
"latter will override the settings of the first one."
msgstr ""

#: ../Doc/library/turtle.rst:2150
msgid ""
"The :file:`Demo/turtle` directory contains a :file:`turtle.cfg` file.  You "
"can study it as an example and see its effects when running the demos "
"(preferably not from within the demo-viewer)."
msgstr ""

#: ../Doc/library/turtle.rst:2156
msgid "Demo scripts"
msgstr ""

#: ../Doc/library/turtle.rst:2158
msgid ""
"There is a set of demo scripts in the turtledemo directory located in the :"
"file:`Demo/turtle` directory in the source distribution."
msgstr ""

#: ../Doc/library/turtle.rst:2161
msgid "It contains:"
msgstr ""

#: ../Doc/library/turtle.rst:2163
msgid ""
"a set of 15 demo scripts demonstrating different features of the new module :"
"mod:`turtle`"
msgstr ""

#: ../Doc/library/turtle.rst:2165
msgid ""
"a demo viewer :file:`turtleDemo.py` which can be used to view the sourcecode "
"of the scripts and run them at the same time. 14 of the examples can be "
"accessed via the Examples menu; all of them can also be run standalone."
msgstr ""

#: ../Doc/library/turtle.rst:2168
msgid ""
"The example :file:`turtledemo_two_canvases.py` demonstrates the simultaneous "
"use of two canvases with the turtle module.  Therefore it only can be run "
"standalone."
msgstr ""

#: ../Doc/library/turtle.rst:2171
msgid ""
"There is a :file:`turtle.cfg` file in this directory, which also serves as "
"an example for how to write and use such files."
msgstr ""

#: ../Doc/library/turtle.rst:2174
msgid "The demoscripts are:"
msgstr ""

#: ../Doc/library/turtle.rst:2179
msgid "bytedesign"
msgstr ""

#: ../Doc/library/turtle.rst:2179
msgid "complex classical turtlegraphics pattern"
msgstr ""

#: ../Doc/library/turtle.rst:2179
msgid ":func:`tracer`, delay, :func:`update`"
msgstr ""

#: ../Doc/library/turtle.rst:2182
msgid "chaos"
msgstr ""

# d3d5c88752e44a3b9afcdcf6a49c60ec
#: ../Doc/library/turtle.rst:2182
msgid ""
"graphs Verhulst dynamics, shows that computer's computations can generate "
"results sometimes against the common sense expectations"
msgstr ""

#: ../Doc/library/turtle.rst:2182
msgid "world coordinates"
msgstr ""

#: ../Doc/library/turtle.rst:2188
msgid "clock"
msgstr ""

#: ../Doc/library/turtle.rst:2188
msgid "analog clock showing time of your computer"
msgstr ""

#: ../Doc/library/turtle.rst:2188
msgid "turtles as clock's hands, ontimer"
msgstr ""

#: ../Doc/library/turtle.rst:2191
msgid "colormixer"
msgstr ""

#: ../Doc/library/turtle.rst:2191
msgid "experiment with r, g, b"
msgstr ""

#: ../Doc/library/turtle.rst:2191
msgid ":func:`ondrag`"
msgstr ""

#: ../Doc/library/turtle.rst:2193
msgid "fractalcurves"
msgstr ""

#: ../Doc/library/turtle.rst:2193
msgid "Hilbert & Koch curves"
msgstr ""

#: ../Doc/library/turtle.rst:2193
msgid "recursion"
msgstr ""

#: ../Doc/library/turtle.rst:2195
msgid "lindenmayer"
msgstr ""

#: ../Doc/library/turtle.rst:2195
msgid "ethnomathematics (indian kolams)"
msgstr ""

#: ../Doc/library/turtle.rst:2195
msgid "L-System"
msgstr ""

#: ../Doc/library/turtle.rst:2198
msgid "minimal_hanoi"
msgstr ""

#: ../Doc/library/turtle.rst:2198
msgid "Towers of Hanoi"
msgstr ""

#: ../Doc/library/turtle.rst:2198
msgid "Rectangular Turtles as Hanoi discs (shape, shapesize)"
msgstr ""

#: ../Doc/library/turtle.rst:2202
msgid "paint"
msgstr ""

#: ../Doc/library/turtle.rst:2202
msgid "super minimalistic drawing program"
msgstr ""

#: ../Doc/library/turtle.rst:2202
msgid ":func:`onclick`"
msgstr ""

#: ../Doc/library/turtle.rst:2205
msgid "peace"
msgstr ""

#: ../Doc/library/turtle.rst:2205
msgid "elementary"
msgstr ""

#: ../Doc/library/turtle.rst:2205
msgid "turtle: appearance and animation"
msgstr ""

#: ../Doc/library/turtle.rst:2208
msgid "penrose"
msgstr ""

#: ../Doc/library/turtle.rst:2208
msgid "aperiodic tiling with kites and darts"
msgstr ""

#: ../Doc/library/turtle.rst:2208
msgid ":func:`stamp`"
msgstr ""

#: ../Doc/library/turtle.rst:2211
msgid "planet_and_moon"
msgstr ""

#: ../Doc/library/turtle.rst:2211
msgid "simulation of gravitational system"
msgstr ""

#: ../Doc/library/turtle.rst:2211
msgid "compound shapes, :class:`Vec2D`"
msgstr ""

#: ../Doc/library/turtle.rst:2214
msgid "a (graphical) breadth first tree (using generators)"
msgstr ""

#: ../Doc/library/turtle.rst:2214
msgid ":func:`clone`"
msgstr ""

#: ../Doc/library/turtle.rst:2217
msgid "wikipedia"
msgstr ""

#: ../Doc/library/turtle.rst:2217
msgid "a pattern from the wikipedia article on turtle graphics"
msgstr ""

#: ../Doc/library/turtle.rst:2217
msgid ":func:`clone`, :func:`undo`"
msgstr ""

#: ../Doc/library/turtle.rst:2220
msgid "yingyang"
msgstr ""

#: ../Doc/library/turtle.rst:2220
msgid "another elementary example"
msgstr ""

#: ../Doc/library/turtle.rst:2220
msgid ":func:`circle`"
msgstr ""

#: ../Doc/library/turtle.rst:2223
msgid "Have fun!"
msgstr ""

#: ../Doc/library/types.rst:2
msgid ":mod:`types` --- Names for built-in types"
msgstr ""

# 5fd0bae0b5e94c1b9396fda6ebe87f50
#: ../Doc/library/types.rst:7
msgid "**Source code:** :source:`Lib/types.py`"
msgstr ""

# 7f57a97322b5428990a35f23fb0ef344
#: ../Doc/library/types.rst:11
msgid ""
"This module defines names for some object types that are used by the "
"standard Python interpreter, but not for the types defined by various "
"extension modules. Also, it does not include some of the types that arise "
"during processing such as the ``listiterator`` type. It is safe to use "
"``from types import *`` --- the module does not export any names besides the "
"ones listed here. New names exported by future versions of this module will "
"all end in ``Type``."
msgstr ""

# 4d1b694fadc341fc91018e1e3254599f
#: ../Doc/library/types.rst:18
msgid ""
"Typical use is for functions that do different things depending on their "
"argument types, like the following::"
msgstr ""

# 1043e7a253fa4090af0a966907e8ecde
#: ../Doc/library/types.rst:28
msgid ""
"Starting in Python 2.2, built-in factory functions such as :func:`int` and :"
"func:`str` are also names for the corresponding types.  This is now the "
"preferred way to access the type instead of using the :mod:`types` module. "
"Accordingly, the example above should be written as follows::"
msgstr ""

#: ../Doc/library/types.rst:39
msgid "The module defines the following names:"
msgstr ""

# 49ab3ac5dfe547bbb28d36061133d9c6
#: ../Doc/library/types.rst:44
msgid "The type of ``None``."
msgstr ""

# 1c9db90763fb4c04aae1d853c1840c02
#: ../Doc/library/types.rst:51
msgid ""
"The type of type objects (such as returned by :func:`type`); alias of the "
"built-in :class:`type`."
msgstr ""

# e0fb737c7f7241a5a44e35260cb197f7
#: ../Doc/library/types.rst:57
msgid ""
"The type of the :class:`bool` values ``True`` and ``False``; alias of the "
"built-in :class:`bool`."
msgstr ""

# aec4300900dc409cb3ba70973d97bf2a
#: ../Doc/library/types.rst:65
msgid "The type of integers (e.g. ``1``); alias of the built-in :class:`int`."
msgstr ""

# c1a5a93b5a564eea8f4277b7899f0a79
#: ../Doc/library/types.rst:70
msgid ""
"The type of long integers (e.g. ``1L``); alias of the built-in :class:`long`."
msgstr ""

# df2e159f3d934bdd90087c27efede104
#: ../Doc/library/types.rst:75
msgid ""
"The type of floating point numbers (e.g. ``1.0``); alias of the built-in :"
"class:`float`."
msgstr ""

# 41843e6941874d1f941539faeb2529ff
#: ../Doc/library/types.rst:81
msgid ""
"The type of complex numbers (e.g. ``1.0j``).  This is not defined if Python "
"was built without complex number support."
msgstr ""

# afdc2bdcdc23424a9703655282a9d2fa
#: ../Doc/library/types.rst:87
msgid ""
"The type of character strings (e.g. ``'Spam'``); alias of the built-in :"
"class:`str`."
msgstr ""

# f8583f0f4019479fbf0d6dad94c50187
#: ../Doc/library/types.rst:93
msgid ""
"The type of Unicode character strings (e.g. ``u'Spam'``).  This is not "
"defined if Python was built without Unicode support.  It's an alias of the "
"built-in :class:`unicode`."
msgstr ""

# 855a46679df0445e89eb470912536873
#: ../Doc/library/types.rst:100
msgid ""
"The type of tuples (e.g. ``(1, 2, 3, 'Spam')``); alias of the built-in :"
"class:`tuple`."
msgstr ""

# 797603d4a89f434dab9c1bb5c24dccd1
#: ../Doc/library/types.rst:106
msgid ""
"The type of lists (e.g. ``[0, 1, 2, 3]``); alias of the built-in :class:"
"`list`."
msgstr ""

# f4735c71326b480d9304e42a3976fbab
#: ../Doc/library/types.rst:112
msgid ""
"The type of dictionaries (e.g. ``{'Bacon': 1, 'Ham': 0}``); alias of the "
"built-in :class:`dict`."
msgstr ""

# 1eaee02a3dbe49bab0caaf4e12e50211
#: ../Doc/library/types.rst:118
msgid "An alternate name for ``DictType``."
msgstr ""

#: ../Doc/library/types.rst:124
msgid ""
"The type of user-defined functions and functions created by :keyword:"
"`lambda` expressions."
msgstr ""

#: ../Doc/library/types.rst:130
msgid ""
"The type of :term:`generator`-iterator objects, produced by calling a "
"generator function."
msgstr ""

#: ../Doc/library/types.rst:140
msgid "The type for code objects such as returned by :func:`compile`."
msgstr ""

# 21be49e8c13b4e18968eb3ae5c35d987
#: ../Doc/library/types.rst:145
msgid "The type of user-defined old-style classes."
msgstr ""

# 394353dc5c194d7f9da90faf96d969c0
#: ../Doc/library/types.rst:150
msgid "The type of instances of user-defined classes."
msgstr ""

#: ../Doc/library/types.rst:155
msgid "The type of methods of user-defined class instances."
msgstr ""

# a1a8ec7dd7d84df195c2f590b37d8b20
#: ../Doc/library/types.rst:160
msgid "An alternate name for ``MethodType``."
msgstr ""

#: ../Doc/library/types.rst:166
msgid ""
"The type of built-in functions like :func:`len` or :func:`sys.exit`, and "
"methods of built-in classes.  (Here, the term \"built-in\" means \"written "
"in C\".)"
msgstr ""

#: ../Doc/library/types.rst:173
msgid "The type of modules."
msgstr ""

# d8868b61af0c44caab4fcc86f0e601c2
#: ../Doc/library/types.rst:178
msgid ""
"The type of open file objects such as ``sys.stdout``; alias of the built-in :"
"class:`file`."
msgstr ""

# 5de4a23b24d7470f999d42c8832637a0
#: ../Doc/library/types.rst:186
msgid ""
"The type of range objects returned by :func:`xrange`; alias of the built-in :"
"class:`xrange`."
msgstr ""

# e212dd902d72445d83cab57ef8ab97d0
#: ../Doc/library/types.rst:194
msgid ""
"The type of objects returned by :func:`slice`; alias of the built-in :class:"
"`slice`."
msgstr ""

# ab0109a766ca47ad8cdb13370bee3875
#: ../Doc/library/types.rst:200
msgid "The type of ``Ellipsis``."
msgstr ""

# 075845aeb93a4eb68d60415ef58ea14f
#: ../Doc/library/types.rst:205
msgid "The type of traceback objects such as found in ``sys.exc_traceback``."
msgstr ""

#: ../Doc/library/types.rst:210
msgid ""
"The type of frame objects such as found in ``tb.tb_frame`` if ``tb`` is a "
"traceback object."
msgstr ""

# 97d7af625f8f4963b37f9e1469b28211
#: ../Doc/library/types.rst:218
msgid "The type of buffer objects created by the :func:`buffer` function."
msgstr ""

# 4d8892e30fd14529906e79219200caa6
#: ../Doc/library/types.rst:223
msgid "The type of dict proxies, such as ``TypeType.__dict__``."
msgstr ""

# 54af34971d2b4f66b5bb24efebcbefa8
#: ../Doc/library/types.rst:228
msgid "The type of ``NotImplemented``"
msgstr ""

#: ../Doc/library/types.rst:233
msgid ""
"The type of objects defined in extension modules with ``PyGetSetDef``, such "
"as ``FrameType.f_locals`` or ``array.array.typecode``.  This type is used as "
"descriptor for object attributes; it has the same purpose as the :class:"
"`property` type, but for classes defined in extension modules."
msgstr ""

#: ../Doc/library/types.rst:243
msgid ""
"The type of objects defined in extension modules with ``PyMemberDef``, such "
"as ``datetime.timedelta.days``.  This type is used as descriptor for simple "
"C data members which use standard conversion functions; it has the same "
"purpose as the :class:`property` type, but for classes defined in extension "
"modules."
msgstr ""

#: ../Doc/library/types.rst:250
msgid ""
"In other implementations of Python, this type may be identical to "
"``GetSetDescriptorType``."
msgstr ""

# 7d3df6948fd94d99a3b5cbf8d9e91f91
#: ../Doc/library/types.rst:258
msgid ""
"A sequence containing ``StringType`` and ``UnicodeType`` used to facilitate "
"easier checking for any string object.  Using this is more portable than "
"using a sequence of the two string types constructed elsewhere since it only "
"contains ``UnicodeType`` if it has been built in the running version of "
"Python.  For example: ``isinstance(s, types.StringTypes)``."
msgstr ""

#: ../Doc/library/undoc.rst:6
msgid "Undocumented Modules"
msgstr ""

#: ../Doc/library/undoc.rst:8
msgid ""
"Here's a quick listing of modules that are currently undocumented, but that "
"should be documented.  Feel free to contribute documentation for them!  "
"(Send via email to docs@python.org.)"
msgstr ""

#: ../Doc/library/undoc.rst:12
msgid ""
"The idea and original contents for this chapter were taken from a posting by "
"Fredrik Lundh; the specific contents of this chapter have been substantially "
"revised."
msgstr ""

# 8d4243dbe2a0413182eb77ab0d352fcc
#: ../Doc/library/undoc.rst:18
msgid "Miscellaneous useful utilities"
msgstr ""

# b3eb9fc04ddc4580bd7a76b1ad159486
#: ../Doc/library/undoc.rst:20
msgid "Some of these are very old and/or not very robust; marked with \"hmm.\""
msgstr ""

# f19186878d12420f8c1c9a0e7f43e7dc
#: ../Doc/library/undoc.rst:23
msgid ""
"--- Import hook support (for :mod:`rexec`; may become obsolete).  Removed in "
"Python 3.x."
msgstr ""

#: ../Doc/library/undoc.rst:28
msgid "Platform specific modules"
msgstr ""

#: ../Doc/library/undoc.rst:30
msgid ""
"These modules are used to implement the :mod:`os.path` module, and are not "
"documented beyond this mention.  There's little need to document these."
msgstr ""

#: ../Doc/library/undoc.rst:34
msgid ""
"--- Implementation of :mod:`os.path` on Win32, Win64, WinCE, and OS/2 "
"platforms."
msgstr ""

#: ../Doc/library/undoc.rst:37
msgid "--- Implementation of :mod:`os.path` on POSIX."
msgstr ""

# 2be99c881db742a28ab76665e8891776
#: ../Doc/library/undoc.rst:40
msgid ""
"--- Backwards compatibility module for systems which still use the Berkeley "
"DB 1.85 module.  It is normally only available on certain BSD Unix-based "
"systems. It should never be used directly."
msgstr ""

# b395df834d6a4bb2b569443fe8938caf
#: ../Doc/library/undoc.rst:46
msgid "Multimedia"
msgstr ""

# 67ebbbd635bd4552bbf0eb764157e9cc
#: ../Doc/library/undoc.rst:49
msgid ""
"--- Platform-independent API for playing audio data.  Removed in Python 3.x."
msgstr ""

# ac1fcd4234a7450c87191b98823ffc33
#: ../Doc/library/undoc.rst:52
msgid ""
"--- Play audio data on the Linux audio device.  Replaced in Python 2.3 by "
"the :mod:`ossaudiodev` module.  Removed in Python 3.x."
msgstr ""

# 36392e7805af499484af57ea9d9312fe
#: ../Doc/library/undoc.rst:56
msgid ""
"--- Interpret Sun audio headers (may become obsolete or a tool/demo). "
"Removed in Python 3.x."
msgstr ""

# a7a3bb522cf048839e5cacfcd3db390e
#: ../Doc/library/undoc.rst:60
msgid ""
"--- Convert \"arbitrary\" sound files to AIFF files; should probably become "
"a tool or demo.  Requires the external program :program:`sox`.  Removed in "
"Python 3.x."
msgstr ""

# 099862b428224f56a2bc901027aad225
#: ../Doc/library/undoc.rst:67
msgid "Undocumented Mac OS modules"
msgstr ""

# 19dfb1e6e309467d8625cc416b894b1d
#: ../Doc/library/undoc.rst:71
msgid ":mod:`applesingle` --- AppleSingle decoder"
msgstr ""

# c922f60a7aa140b18187e477de5ca175
#: ../Doc/library/undoc.rst:82
msgid ":mod:`buildtools` --- Helper module for BuildApplet and Friends"
msgstr ""

# 81982239124e43c88d05d7d8b867adac
#: ../Doc/library/undoc.rst:93
msgid ":mod:`cfmfile` --- Code Fragment Resource module"
msgstr ""

# 98d509c671814b96a6ac0f4f8624f128
#: ../Doc/library/undoc.rst:101
msgid ""
":mod:`cfmfile` is a module that understands Code Fragments and the "
"accompanying \"cfrg\" resources. It can parse them and merge them, and is "
"used by BuildApplication to combine all plugin modules to a single "
"executable."
msgstr ""

# bd71ce311e8a416781cb793c1274ebfa
#: ../Doc/library/undoc.rst:108
msgid ":mod:`icopen` --- Internet Config replacement for :meth:`open`"
msgstr ""

# 6a17d12bb2ca4a8083039fa1817e8640
#: ../Doc/library/undoc.rst:116
msgid ""
"Importing :mod:`icopen` will replace the built-in :meth:`open` with a "
"version that uses Internet Config to set file type and creator for new files."
msgstr ""

# fec71de8756a4807ae442fb2a7ee6330
#: ../Doc/library/undoc.rst:123
msgid ":mod:`macerrors` --- Mac OS Errors"
msgstr ""

# d6ceeb52e4b5474db3d96452c0e1bb5b
#: ../Doc/library/undoc.rst:131
msgid ""
":mod:`macerrors` contains constant definitions for many Mac OS error codes."
msgstr ""

# c8f255dc28fc4854b2a981a6803fc992
#: ../Doc/library/undoc.rst:137
msgid ":mod:`macresource` --- Locate script resources"
msgstr ""

# ef4e0609b55548faae1bc2fd8482a9e0
#: ../Doc/library/undoc.rst:145
msgid ""
":mod:`macresource` helps scripts finding their resources, such as dialogs "
"and menus, without requiring special case code for when the script is run "
"under MacPython, as a MacPython applet or under OSX Python."
msgstr ""

# 90cda866576d4f109690e6808715db85
#: ../Doc/library/undoc.rst:153
msgid ":mod:`Nav` --- NavServices calls"
msgstr ""

# 16d86f8de3ec4cd2ae0268235bb1c480
#: ../Doc/library/undoc.rst:161
msgid "A low-level interface to Navigation Services."
msgstr ""

# a5828f0a1687477a926dd5bb6ac599ca
#: ../Doc/library/undoc.rst:167
msgid ":mod:`PixMapWrapper` --- Wrapper for PixMap objects"
msgstr ""

# c7ae8a9d108647328e86bbd8fad75c5c
#: ../Doc/library/undoc.rst:175
msgid ""
":mod:`PixMapWrapper` wraps a PixMap object with a Python object that allows "
"access to the fields by name. It also has methods to convert to and from :"
"mod:`PIL` images."
msgstr ""

# 8db6d53e816c420e8443551b30003526
#: ../Doc/library/undoc.rst:183
msgid ":mod:`videoreader` --- Read QuickTime movies"
msgstr ""

# 8c22478b09d24bb19626bb98838b4901
#: ../Doc/library/undoc.rst:191
msgid ""
":mod:`videoreader` reads and decodes QuickTime movies and passes a stream of "
"images to your program. It also provides some support for audio tracks."
msgstr ""

# 91d3a659698c42d78fa9fb0ffabe6549
#: ../Doc/library/undoc.rst:198
msgid ":mod:`W` --- Widgets built on :mod:`FrameWork`"
msgstr ""

# 97e7cf89ca8e4f88bc5f8fe0faec55f0
#: ../Doc/library/undoc.rst:206
msgid "The :mod:`W` widgets are used extensively in the :program:`IDE`."
msgstr ""

# 8c86c22c6b11418dbe1ee7cedb35a858
#: ../Doc/library/undoc.rst:214
msgid "Obsolete"
msgstr ""

# 23adf4e9672b4e39b6ee1a965e5eaa59
#: ../Doc/library/undoc.rst:216
msgid ""
"These modules are not normally available for import; additional work must be "
"done to make them available."
msgstr ""

# 4e7a8cc69eae409291dac8e1a8c6944f
#: ../Doc/library/undoc.rst:219
msgid ""
"These extension modules written in C are not built by default. Under Unix, "
"these must be enabled by uncommenting the appropriate lines in :file:"
"`Modules/Setup` in the build tree and either rebuilding Python if the "
"modules are statically linked, or building and installing the shared object "
"if using dynamically-loaded extensions."
msgstr ""

# eb13235bec0d44ee83f3d6686b6fed95
#: ../Doc/library/undoc.rst:233
msgid ""
"--- Measure time intervals to high resolution (use :func:`time.clock` "
"instead).  Removed in Python 3.x."
msgstr ""

# e260bed0b4494c26a1c8d82a86e08dc1
#: ../Doc/library/undoc.rst:238
msgid "SGI-specific Extension modules"
msgstr ""

# f0bf27df84164c9b8a0fb2d74ab05249
#: ../Doc/library/undoc.rst:240
msgid ""
"The following are SGI specific, and may be out of touch with the current "
"version of reality."
msgstr ""

# 15b1f19d1302426c9f5e4c9ba9a18426
#: ../Doc/library/undoc.rst:244
msgid "--- Interface to the SGI compression library."
msgstr ""

# 9157e385b8f24008851d28afdbe15090
#: ../Doc/library/undoc.rst:247
msgid ""
"--- Interface to the \"simple video\" board on SGI Indigo (obsolete "
"hardware). Removed in Python 3.x."
msgstr ""

#: ../Doc/library/unicodedata.rst:3
msgid ":mod:`unicodedata` --- Unicode Database"
msgstr ""

#: ../Doc/library/unicodedata.rst:17
msgid ""
"This module provides access to the Unicode Character Database which defines "
"character properties for all Unicode characters. The data in this database "
"is based on the :file:`UnicodeData.txt` file version 5.2.0 which is publicly "
"available from ftp://ftp.unicode.org/."
msgstr ""

#: ../Doc/library/unicodedata.rst:22
msgid ""
"The module uses the same names and symbols as defined by the UnicodeData "
"File Format 5.2.0 (see http://www.unicode.org/reports/tr44/tr44-4.html). It "
"defines the following functions:"
msgstr ""

# 70c5f03a59674276b5e9df095580ff8d
#: ../Doc/library/unicodedata.rst:29
msgid ""
"Look up character by name.  If a character with the given name is found, "
"return the corresponding Unicode character.  If not found, :exc:`KeyError` "
"is raised."
msgstr ""

# 4758224e247a4dba973803f0eb39e96f
#: ../Doc/library/unicodedata.rst:35
msgid ""
"Returns the name assigned to the Unicode character *unichr* as a string. If "
"no name is defined, *default* is returned, or, if not given, :exc:"
"`ValueError` is raised."
msgstr ""

# 811aa047e9974d20851369c0725e9555
#: ../Doc/library/unicodedata.rst:42
msgid ""
"Returns the decimal value assigned to the Unicode character *unichr* as "
"integer. If no such value is defined, *default* is returned, or, if not "
"given, :exc:`ValueError` is raised."
msgstr ""

# 7f6393ce2dbc4c02a43301ec62e3898b
#: ../Doc/library/unicodedata.rst:49
msgid ""
"Returns the digit value assigned to the Unicode character *unichr* as "
"integer. If no such value is defined, *default* is returned, or, if not "
"given, :exc:`ValueError` is raised."
msgstr ""

# 8021c43d66844f859589483e7d343405
#: ../Doc/library/unicodedata.rst:56
msgid ""
"Returns the numeric value assigned to the Unicode character *unichr* as "
"float. If no such value is defined, *default* is returned, or, if not "
"given, :exc:`ValueError` is raised."
msgstr ""

# 53846fc4d39b4fa38ae975e6cd7e2a30
#: ../Doc/library/unicodedata.rst:63
msgid ""
"Returns the general category assigned to the Unicode character *unichr* as "
"string."
msgstr ""

# f2543d53200740efbf703198629dfe8c
#: ../Doc/library/unicodedata.rst:69
msgid ""
"Returns the bidirectional category assigned to the Unicode character "
"*unichr* as string. If no such value is defined, an empty string is returned."
msgstr ""

# e632a3e84d384715aee44c62f7b6714c
#: ../Doc/library/unicodedata.rst:75
msgid ""
"Returns the canonical combining class assigned to the Unicode character "
"*unichr* as integer. Returns ``0`` if no combining class is defined."
msgstr ""

# 4ace0f2016004a5a8dc24332de22a4d7
#: ../Doc/library/unicodedata.rst:81
msgid ""
"Returns the east asian width assigned to the Unicode character *unichr* as "
"string."
msgstr ""

# d288cb9fd345438cb7a42a561ea77495
#: ../Doc/library/unicodedata.rst:89
msgid ""
"Returns the mirrored property assigned to the Unicode character *unichr* as "
"integer. Returns ``1`` if the character has been identified as a \"mirrored"
"\" character in bidirectional text, ``0`` otherwise."
msgstr ""

# 3dedcd283f934dcc8d82dd554655a475
#: ../Doc/library/unicodedata.rst:96
msgid ""
"Returns the character decomposition mapping assigned to the Unicode "
"character *unichr* as string. An empty string is returned in case no such "
"mapping is defined."
msgstr ""

#: ../Doc/library/unicodedata.rst:103
msgid ""
"Return the normal form *form* for the Unicode string *unistr*. Valid values "
"for *form* are 'NFC', 'NFKC', 'NFD', and 'NFKD'."
msgstr ""

# d24deebbfd9143ad98b72b8625c61d83
#: ../Doc/library/unicodedata.rst:106
msgid ""
"The Unicode standard defines various normalization forms of a Unicode "
"string, based on the definition of canonical equivalence and compatibility "
"equivalence. In Unicode, several characters can be expressed in various way. "
"For example, the character U+00C7 (LATIN CAPITAL LETTER C WITH CEDILLA) can "
"also be expressed as the sequence U+0043 (LATIN CAPITAL LETTER C) U+0327 "
"(COMBINING CEDILLA)."
msgstr ""

#: ../Doc/library/unicodedata.rst:112
msgid ""
"For each character, there are two normal forms: normal form C and normal "
"form D. Normal form D (NFD) is also known as canonical decomposition, and "
"translates each character into its decomposed form. Normal form C (NFC) "
"first applies a canonical decomposition, then composes pre-combined "
"characters again."
msgstr ""

#: ../Doc/library/unicodedata.rst:117
msgid ""
"In addition to these two forms, there are two additional normal forms based "
"on compatibility equivalence. In Unicode, certain characters are supported "
"which normally would be unified with other characters. For example, U+2160 "
"(ROMAN NUMERAL ONE) is really the same thing as U+0049 (LATIN CAPITAL LETTER "
"I). However, it is supported in Unicode for compatibility with existing "
"character sets (e.g. gb2312)."
msgstr ""

#: ../Doc/library/unicodedata.rst:124
msgid ""
"The normal form KD (NFKD) will apply the compatibility decomposition, i.e. "
"replace all compatibility characters with their equivalents. The normal form "
"KC (NFKC) first applies the compatibility decomposition, followed by the "
"canonical composition."
msgstr ""

#: ../Doc/library/unicodedata.rst:129
msgid ""
"Even if two unicode strings are normalized and look the same to a human "
"reader, if one has combining characters and the other doesn't, they may not "
"compare equal."
msgstr ""

#: ../Doc/library/unicodedata.rst:135
msgid "In addition, the module exposes the following constant:"
msgstr ""

#: ../Doc/library/unicodedata.rst:140
msgid "The version of the Unicode database used in this module."
msgstr ""

#: ../Doc/library/unicodedata.rst:147
msgid ""
"This is an object that has the same methods as the entire module, but uses "
"the Unicode database version 3.2 instead, for applications that require this "
"specific version of the Unicode database (such as IDNA)."
msgstr ""

#: ../Doc/library/unicodedata.rst:153
msgid "Examples:"
msgstr ""

#: ../Doc/library/unittest.rst:2
msgid ":mod:`unittest` --- Unit testing framework"
msgstr ""

# 70dc844d2a1041c8b2be692f5e4859f2
#: ../Doc/library/unittest.rst:13
msgid ""
"(If you are already familiar with the basic concepts of testing, you might "
"want to skip to :ref:`the list of assert methods <assert-methods>`.)"
msgstr ""

#: ../Doc/library/unittest.rst:16
msgid ""
"The Python unit testing framework, sometimes referred to as \"PyUnit,\" is a "
"Python language version of JUnit, by Kent Beck and Erich Gamma. JUnit is, in "
"turn, a Java version of Kent's Smalltalk testing framework.  Each is the de "
"facto standard unit testing framework for its respective language."
msgstr ""

#: ../Doc/library/unittest.rst:21
msgid ""
":mod:`unittest` supports test automation, sharing of setup and shutdown code "
"for tests, aggregation of tests into collections, and independence of the "
"tests from the reporting framework.  The :mod:`unittest` module provides "
"classes that make it easy to support these qualities for a set of tests."
msgstr ""

#: ../Doc/library/unittest.rst:26
msgid "To achieve this, :mod:`unittest` supports some important concepts:"
msgstr ""

#: ../Doc/library/unittest.rst:29
msgid ""
"A :dfn:`test fixture` represents the preparation needed to perform one or "
"more tests, and any associate cleanup actions.  This may involve, for "
"example, creating temporary or proxy databases, directories, or starting a "
"server process."
msgstr ""

#: ../Doc/library/unittest.rst:35
msgid ""
"A :dfn:`test case` is the smallest unit of testing.  It checks for a "
"specific response to a particular set of inputs.  :mod:`unittest` provides a "
"base class, :class:`TestCase`, which may be used to create new test cases."
msgstr ""

#: ../Doc/library/unittest.rst:40
msgid ""
"A :dfn:`test suite` is a collection of test cases, test suites, or both.  It "
"is used to aggregate tests that should be executed together."
msgstr ""

#: ../Doc/library/unittest.rst:44
msgid ""
"A :dfn:`test runner` is a component which orchestrates the execution of "
"tests and provides the outcome to the user.  The runner may use a graphical "
"interface, a textual interface, or return a special value to indicate the "
"results of executing the tests."
msgstr ""

#: ../Doc/library/unittest.rst:49
msgid ""
"The test case and test fixture concepts are supported through the :class:"
"`TestCase` and :class:`FunctionTestCase` classes; the former should be used "
"when creating new tests, and the latter can be used when integrating "
"existing test code with a :mod:`unittest`\\ -driven framework. When building "
"test fixtures using :class:`TestCase`, the :meth:`~TestCase.setUp` and :meth:"
"`~TestCase.tearDown` methods can be overridden to provide initialization and "
"cleanup for the fixture.  With :class:`FunctionTestCase`, existing functions "
"can be passed to the constructor for these purposes.  When the test is run, "
"the fixture initialization is run first; if it succeeds, the cleanup method "
"is run after the test has been executed, regardless of the outcome of the "
"test.  Each instance of the :class:`TestCase` will only be used to run a "
"single test method, so a new fixture is created for each test."
msgstr ""

#: ../Doc/library/unittest.rst:62
msgid ""
"Test suites are implemented by the :class:`TestSuite` class.  This class "
"allows individual tests and test suites to be aggregated; when the suite is "
"executed, all tests added directly to the suite and in \"child\" test suites "
"are run."
msgstr ""

#: ../Doc/library/unittest.rst:66
msgid ""
"A test runner is an object that provides a single method, :meth:`~TestRunner."
"run`, which accepts a :class:`TestCase` or :class:`TestSuite` object as a "
"parameter, and returns a result object.  The class :class:`TestResult` is "
"provided for use as the result object. :mod:`unittest` provides the :class:"
"`TextTestRunner` as an example test runner which reports test results on the "
"standard error stream by default.  Alternate runners can be implemented for "
"other environments (such as graphical environments) without any need to "
"derive from a specific class."
msgstr ""

#: ../Doc/library/unittest.rst:79
msgid "Another test-support module with a very different flavor."
msgstr ""

#: ../Doc/library/unittest.rst:82
msgid ""
"Many new features were added to unittest in Python 2.7, including test "
"discovery. unittest2 allows you to use these features with earlier versions "
"of Python."
msgstr ""

#: ../Doc/library/unittest.rst:87
msgid ""
"Kent Beck's original paper on testing frameworks using the pattern shared "
"by :mod:`unittest`."
msgstr ""

#: ../Doc/library/unittest.rst:91
msgid ""
"Third-party unittest frameworks with a lighter-weight syntax for writing "
"tests.  For example, ``assert func(10) == 42``."
msgstr ""

#: ../Doc/library/unittest.rst:95
msgid ""
"An extensive list of Python testing tools including functional testing "
"frameworks and mock object libraries."
msgstr ""

#: ../Doc/library/unittest.rst:99
msgid ""
"A special-interest-group for discussion of testing, and testing tools, in "
"Python."
msgstr ""

#: ../Doc/library/unittest.rst:106
msgid "Basic example"
msgstr ""

#: ../Doc/library/unittest.rst:108
msgid ""
"The :mod:`unittest` module provides a rich set of tools for constructing and "
"running tests.  This section demonstrates that a small subset of the tools "
"suffice to meet the needs of most users."
msgstr ""

#: ../Doc/library/unittest.rst:112
msgid ""
"Here is a short script to test three functions from the :mod:`random` "
"module::"
msgstr ""

#: ../Doc/library/unittest.rst:144
msgid ""
"A testcase is created by subclassing :class:`unittest.TestCase`.  The three "
"individual tests are defined with methods whose names start with the letters "
"``test``.  This naming convention informs the test runner about which "
"methods represent tests."
msgstr ""

#: ../Doc/library/unittest.rst:149
msgid ""
"The crux of each test is a call to :meth:`~TestCase.assertEqual` to check "
"for an expected result; :meth:`~TestCase.assertTrue` to verify a condition; "
"or :meth:`~TestCase.assertRaises` to verify that an expected exception gets "
"raised. These methods are used instead of the :keyword:`assert` statement so "
"the test runner can accumulate all test results and produce a report."
msgstr ""

#: ../Doc/library/unittest.rst:155
msgid ""
"When a :meth:`~TestCase.setUp` method is defined, the test runner will run "
"that method prior to each test.  Likewise, if a :meth:`~TestCase.tearDown` "
"method is defined, the test runner will invoke that method after each test.  "
"In the example, :meth:`~TestCase.setUp` was used to create a fresh sequence "
"for each test."
msgstr ""

# fc6cc2f7a16d4c699b06954c5a8cd861
#: ../Doc/library/unittest.rst:161
msgid ""
"The final block shows a simple way to run the tests. :func:`unittest.main` "
"provides a command-line interface to the test script.  When run from the "
"command line, the above script produces an output that looks like this::"
msgstr ""

#: ../Doc/library/unittest.rst:171
msgid ""
"Instead of :func:`unittest.main`, there are other ways to run the tests with "
"a finer level of control, less terse output, and no requirement to be run "
"from the command line.  For example, the last two lines may be replaced "
"with::"
msgstr ""

#: ../Doc/library/unittest.rst:178
msgid ""
"Running the revised script from the interpreter or another script produces "
"the following output::"
msgstr ""

#: ../Doc/library/unittest.rst:190
msgid ""
"The above examples show the most commonly used :mod:`unittest` features "
"which are sufficient to meet many everyday testing needs.  The remainder of "
"the documentation explores the full feature set from first principles."
msgstr ""

# 7044990f581d4f0994f1038f8b7a2ff1
#: ../Doc/library/unittest.rst:198
msgid "Command-Line Interface"
msgstr ""

#: ../Doc/library/unittest.rst:200
msgid ""
"The unittest module can be used from the command line to run tests from "
"modules, classes or even individual test methods::"
msgstr ""

#: ../Doc/library/unittest.rst:207
msgid ""
"You can pass in a list with any combination of module names, and fully "
"qualified class or method names."
msgstr ""

#: ../Doc/library/unittest.rst:210
msgid ""
"You can run tests with more detail (higher verbosity) by passing in the -v "
"flag::"
msgstr ""

# e7a3e0a0915b429d86066c09f2c2fad7
#: ../Doc/library/unittest.rst:214
msgid "For a list of all the command-line options::"
msgstr ""

# ddf1798b393448c899214e383a78fb44
#: ../Doc/library/unittest.rst:224
msgid "Command-line options"
msgstr ""

# d1185e51f9d24f0cbbb606a34cd7c741
#: ../Doc/library/unittest.rst:226
msgid ":program:`unittest` supports these command-line options:"
msgstr ""

#: ../Doc/library/unittest.rst:232
msgid ""
"The standard output and standard error streams are buffered during the test "
"run. Output during a passing test is discarded. Output is echoed normally on "
"test fail or error and is added to the failure messages."
msgstr ""

#: ../Doc/library/unittest.rst:238
msgid ""
"Control-C during the test run waits for the current test to end and then "
"reports all the results so far. A second control-C raises the normal :exc:"
"`KeyboardInterrupt` exception."
msgstr ""

#: ../Doc/library/unittest.rst:242
msgid ""
"See `Signal Handling`_ for the functions that provide this functionality."
msgstr ""

#: ../Doc/library/unittest.rst:246
msgid "Stop the test run on the first error or failure."
msgstr ""

#: ../Doc/library/unittest.rst:251
msgid ""
"The command line can also be used for test discovery, for running all of the "
"tests in a project or just a subset."
msgstr ""

#: ../Doc/library/unittest.rst:258
msgid "Test Discovery"
msgstr ""

# 8f602a743265450e92a7d1ff50ccd6c3
#: ../Doc/library/unittest.rst:262
msgid ""
"Unittest supports simple test discovery. In order to be compatible with test "
"discovery, all of the test files must be :ref:`modules <tut-modules>` or :"
"ref:`packages <tut-packages>` importable from the top-level directory of the "
"project (this means that their filenames must be valid :ref:`identifiers "
"<identifiers>`)."
msgstr ""

# 18dbc0ab858149a2a004b56487c08895
#: ../Doc/library/unittest.rst:268
msgid ""
"Test discovery is implemented in :meth:`TestLoader.discover`, but can also "
"be used from the command line. The basic command-line usage is::"
msgstr ""

#: ../Doc/library/unittest.rst:274
msgid "The ``discover`` sub-command has the following options:"
msgstr ""

#: ../Doc/library/unittest.rst:280
msgid "Verbose output"
msgstr ""

#: ../Doc/library/unittest.rst:284
msgid "Directory to start discovery ('.' default)"
msgstr ""

#: ../Doc/library/unittest.rst:288
msgid "Pattern to match test files ('test*.py' default)"
msgstr ""

# 64921888be414eafb0d7e45e5e5054a3
#: ../Doc/library/unittest.rst:292
msgid "Top level directory of project (defaults to start directory)"
msgstr ""

#: ../Doc/library/unittest.rst:294
msgid ""
"The :option:`-s`, :option:`-p`, and :option:`-t` options can be passed in as "
"positional arguments in that order. The following two command lines are "
"equivalent::"
msgstr ""

#: ../Doc/library/unittest.rst:301
msgid ""
"As well as being a path it is possible to pass a package name, for example "
"``myproject.subpackage.test``, as the start directory. The package name you "
"supply will then be imported and its location on the filesystem will be used "
"as the start directory."
msgstr ""

# bbe7ad8bf82345a79c46f2b314e96f25
#: ../Doc/library/unittest.rst:308
msgid ""
"Test discovery loads tests by importing them. Once test discovery has found "
"all the test files from the start directory you specify it turns the paths "
"into package names to import. For example :file:`foo/bar/baz.py` will be "
"imported as ``foo.bar.baz``."
msgstr ""

#: ../Doc/library/unittest.rst:313
msgid ""
"If you have a package installed globally and attempt test discovery on a "
"different copy of the package then the import *could* happen from the wrong "
"place. If this happens test discovery will warn you and exit."
msgstr ""

#: ../Doc/library/unittest.rst:317
msgid ""
"If you supply the start directory as a package name rather than a path to a "
"directory then discover assumes that whichever location it imports from is "
"the location you intended, so you will not get the warning."
msgstr ""

#: ../Doc/library/unittest.rst:322
msgid ""
"Test modules and packages can customize test loading and discovery by "
"through the `load_tests protocol`_."
msgstr ""

#: ../Doc/library/unittest.rst:329
msgid "Organizing test code"
msgstr ""

#: ../Doc/library/unittest.rst:331
msgid ""
"The basic building blocks of unit testing are :dfn:`test cases` --- single "
"scenarios that must be set up and checked for correctness.  In :mod:"
"`unittest`, test cases are represented by instances of :mod:`unittest`'s :"
"class:`TestCase` class. To make your own test cases you must write "
"subclasses of :class:`TestCase`, or use :class:`FunctionTestCase`."
msgstr ""

#: ../Doc/library/unittest.rst:337
msgid ""
"An instance of a :class:`TestCase`\\ -derived class is an object that can "
"completely run a single test method, together with optional set-up and tidy-"
"up code."
msgstr ""

#: ../Doc/library/unittest.rst:341
msgid ""
"The testing code of a :class:`TestCase` instance should be entirely self "
"contained, such that it can be run either in isolation or in arbitrary "
"combination with any number of other test cases."
msgstr ""

#: ../Doc/library/unittest.rst:345
msgid ""
"The simplest :class:`TestCase` subclass will simply override the :meth:"
"`~TestCase.runTest` method in order to perform specific testing code::"
msgstr ""

# 1ffdd8a1e6d04a898dea6fdd0355ce90
#: ../Doc/library/unittest.rst:355
msgid ""
"Note that in order to test something, we use one of the :meth:`assert\\*` "
"methods provided by the :class:`TestCase` base class.  If the test fails, an "
"exception will be raised, and :mod:`unittest` will identify the test case as "
"a :dfn:`failure`.  Any other exceptions will be treated as :dfn:`errors`. "
"This helps you identify where the problem is: :dfn:`failures` are caused by "
"incorrect results - a 5 where you expected a 6. :dfn:`Errors` are caused by "
"incorrect code - e.g., a :exc:`TypeError` caused by an incorrect function "
"call."
msgstr ""

#: ../Doc/library/unittest.rst:363
msgid ""
"The way to run a test case will be described later.  For now, note that to "
"construct an instance of such a test case, we call its constructor without "
"arguments::"
msgstr ""

#: ../Doc/library/unittest.rst:369
msgid ""
"Now, such test cases can be numerous, and their set-up can be repetitive.  "
"In the above case, constructing a :class:`Widget` in each of 100 Widget test "
"case subclasses would mean unsightly duplication."
msgstr ""

#: ../Doc/library/unittest.rst:373
msgid ""
"Luckily, we can factor out such set-up code by implementing a method called :"
"meth:`~TestCase.setUp`, which the testing framework will automatically call "
"for us when we run the test::"
msgstr ""

#: ../Doc/library/unittest.rst:394
msgid ""
"If the :meth:`~TestCase.setUp` method raises an exception while the test is "
"running, the framework will consider the test to have suffered an error, and "
"the :meth:`~TestCase.runTest` method will not be executed."
msgstr ""

#: ../Doc/library/unittest.rst:398
msgid ""
"Similarly, we can provide a :meth:`~TestCase.tearDown` method that tidies up "
"after the :meth:`~TestCase.runTest` method has been run::"
msgstr ""

#: ../Doc/library/unittest.rst:411
msgid ""
"If :meth:`~TestCase.setUp` succeeded, the :meth:`~TestCase.tearDown` method "
"will be run whether :meth:`~TestCase.runTest` succeeded or not."
msgstr ""

#: ../Doc/library/unittest.rst:414
msgid ""
"Such a working environment for the testing code is called a :dfn:`fixture`."
msgstr ""

#: ../Doc/library/unittest.rst:416
msgid ""
"Often, many small test cases will use the same fixture.  In this case, we "
"would end up subclassing :class:`SimpleWidgetTestCase` into many small one-"
"method classes such as :class:`DefaultWidgetSizeTestCase`.  This is time-"
"consuming and discouraging, so in the same vein as JUnit, :mod:`unittest` "
"provides a simpler mechanism::"
msgstr ""

#: ../Doc/library/unittest.rst:441
msgid ""
"Here we have not provided a :meth:`~TestCase.runTest` method, but have "
"instead provided two different test methods.  Class instances will now each "
"run one of the :meth:`test_\\*` methods, with ``self.widget`` created and "
"destroyed separately for each instance.  When creating an instance we must "
"specify the test method it is to run.  We do this by passing the method name "
"in the constructor::"
msgstr ""

#: ../Doc/library/unittest.rst:451
msgid ""
"Test case instances are grouped together according to the features they "
"test. :mod:`unittest` provides a mechanism for this: the :dfn:`test suite`, "
"represented by :mod:`unittest`'s :class:`TestSuite` class::"
msgstr ""

#: ../Doc/library/unittest.rst:459
msgid ""
"For the ease of running tests, as we will see later, it is a good idea to "
"provide in each test module a callable object that returns a pre-built test "
"suite::"
msgstr ""

#: ../Doc/library/unittest.rst:469
msgid "or even::"
msgstr ""

#: ../Doc/library/unittest.rst:476
msgid ""
"Since it is a common pattern to create a :class:`TestCase` subclass with "
"many similarly named test functions, :mod:`unittest` provides a :class:"
"`TestLoader` class that can be used to automate the process of creating a "
"test suite and populating it with individual tests. For example, ::"
msgstr ""

#: ../Doc/library/unittest.rst:483
msgid ""
"will create a test suite that will run ``WidgetTestCase.test_default_size()"
"`` and ``WidgetTestCase.test_resize``. :class:`TestLoader` uses the "
"``'test'`` method name prefix to identify test methods automatically."
msgstr ""

#: ../Doc/library/unittest.rst:487
msgid ""
"Note that the order in which the various test cases will be run is "
"determined by sorting the test function names with respect to the built-in "
"ordering for strings."
msgstr ""

#: ../Doc/library/unittest.rst:491
msgid ""
"Often it is desirable to group suites of test cases together, so as to run "
"tests for the whole system at once.  This is easy, since :class:`TestSuite` "
"instances can be added to a :class:`TestSuite` just as :class:`TestCase` "
"instances can be added to a :class:`TestSuite`::"
msgstr ""

#: ../Doc/library/unittest.rst:500
msgid ""
"You can place the definitions of test cases and test suites in the same "
"modules as the code they are to test (such as :file:`widget.py`), but there "
"are several advantages to placing the test code in a separate module, such "
"as :file:`test_widget.py`:"
msgstr ""

#: ../Doc/library/unittest.rst:505
msgid "The test module can be run standalone from the command line."
msgstr ""

#: ../Doc/library/unittest.rst:507
msgid "The test code can more easily be separated from shipped code."
msgstr ""

#: ../Doc/library/unittest.rst:509
msgid ""
"There is less temptation to change test code to fit the code it tests "
"without a good reason."
msgstr ""

#: ../Doc/library/unittest.rst:512
msgid ""
"Test code should be modified much less frequently than the code it tests."
msgstr ""

#: ../Doc/library/unittest.rst:514
msgid "Tested code can be refactored more easily."
msgstr ""

#: ../Doc/library/unittest.rst:516
msgid ""
"Tests for modules written in C must be in separate modules anyway, so why "
"not be consistent?"
msgstr ""

#: ../Doc/library/unittest.rst:519
msgid ""
"If the testing strategy changes, there is no need to change the source code."
msgstr ""

#: ../Doc/library/unittest.rst:525
msgid "Re-using old test code"
msgstr ""

#: ../Doc/library/unittest.rst:527
msgid ""
"Some users will find that they have existing test code that they would like "
"to run from :mod:`unittest`, without converting every old test function to "
"a :class:`TestCase` subclass."
msgstr ""

#: ../Doc/library/unittest.rst:531
msgid ""
"For this reason, :mod:`unittest` provides a :class:`FunctionTestCase` class. "
"This subclass of :class:`TestCase` can be used to wrap an existing test "
"function.  Set-up and tear-down functions can also be provided."
msgstr ""

#: ../Doc/library/unittest.rst:535
msgid "Given the following test function::"
msgstr ""

#: ../Doc/library/unittest.rst:542
msgid "one can create an equivalent test case instance as follows::"
msgstr ""

#: ../Doc/library/unittest.rst:546
msgid ""
"If there are additional set-up and tear-down methods that should be called "
"as part of the test case's operation, they can also be provided like so::"
msgstr ""

#: ../Doc/library/unittest.rst:553
msgid ""
"To make migrating existing test suites easier, :mod:`unittest` supports "
"tests raising :exc:`AssertionError` to indicate test failure. However, it is "
"recommended that you use the explicit :meth:`TestCase.fail\\*` and :meth:"
"`TestCase.assert\\*` methods instead, as future versions of :mod:`unittest` "
"may treat :exc:`AssertionError` differently."
msgstr ""

#: ../Doc/library/unittest.rst:561
msgid ""
"Even though :class:`FunctionTestCase` can be used to quickly convert an "
"existing test base over to a :mod:`unittest`\\ -based system, this approach "
"is not recommended.  Taking the time to set up proper :class:`TestCase` "
"subclasses will make future test refactorings infinitely easier."
msgstr ""

#: ../Doc/library/unittest.rst:566
msgid ""
"In some cases, the existing tests may have been written using the :mod:"
"`doctest` module.  If so, :mod:`doctest` provides a :class:`DocTestSuite` "
"class that can automatically build :class:`unittest.TestSuite` instances "
"from the existing :mod:`doctest`\\ -based tests."
msgstr ""

#: ../Doc/library/unittest.rst:575
msgid "Skipping tests and expected failures"
msgstr ""

#: ../Doc/library/unittest.rst:579
msgid ""
"Unittest supports skipping individual test methods and even whole classes of "
"tests.  In addition, it supports marking a test as a \"expected failure,\" a "
"test that is broken and will fail, but shouldn't be counted as a failure on "
"a :class:`TestResult`."
msgstr ""

#: ../Doc/library/unittest.rst:584
msgid ""
"Skipping a test is simply a matter of using the :func:`skip` :term:"
"`decorator` or one of its conditional variants."
msgstr ""

#: ../Doc/library/unittest.rst:587
msgid "Basic skipping looks like this: ::"
msgstr ""

#: ../Doc/library/unittest.rst:606
msgid "This is the output of running the example above in verbose mode: ::"
msgstr ""

#: ../Doc/library/unittest.rst:617
msgid "Classes can be skipped just like methods: ::"
msgstr ""

#: ../Doc/library/unittest.rst:624
msgid ""
":meth:`TestCase.setUp` can also skip the test.  This is useful when a "
"resource that needs to be set up is not available."
msgstr ""

#: ../Doc/library/unittest.rst:627
msgid "Expected failures use the :func:`expectedFailure` decorator. ::"
msgstr ""

#: ../Doc/library/unittest.rst:634
msgid ""
"It's easy to roll your own skipping decorators by making a decorator that "
"calls :func:`skip` on the test when it wants it to be skipped.  This "
"decorator skips the test unless the passed object has a certain attribute: ::"
msgstr ""

#: ../Doc/library/unittest.rst:643
msgid "The following decorators implement test skipping and expected failures:"
msgstr ""

#: ../Doc/library/unittest.rst:647
msgid ""
"Unconditionally skip the decorated test.  *reason* should describe why the "
"test is being skipped."
msgstr ""

#: ../Doc/library/unittest.rst:652
msgid "Skip the decorated test if *condition* is true."
msgstr ""

# 9e046270e9724624870b7a4930f6b381
#: ../Doc/library/unittest.rst:656
msgid "Skip the decorated test unless *condition* is true."
msgstr ""

#: ../Doc/library/unittest.rst:660
msgid ""
"Mark the test as an expected failure.  If the test fails when run, the test "
"is not counted as a failure."
msgstr ""

#: ../Doc/library/unittest.rst:663
msgid ""
"Skipped tests will not have :meth:`setUp` or :meth:`tearDown` run around "
"them. Skipped classes will not have :meth:`setUpClass` or :meth:"
"`tearDownClass` run."
msgstr ""

#: ../Doc/library/unittest.rst:672
msgid "This section describes in depth the API of :mod:`unittest`."
msgstr ""

#: ../Doc/library/unittest.rst:678
msgid "Test cases"
msgstr ""

#: ../Doc/library/unittest.rst:682
msgid ""
"Instances of the :class:`TestCase` class represent the smallest testable "
"units in the :mod:`unittest` universe.  This class is intended to be used as "
"a base class, with specific tests being implemented by concrete subclasses.  "
"This class implements the interface needed by the test runner to allow it to "
"drive the test, and methods that the test code can use to check for and "
"report various kinds of failure."
msgstr ""

#: ../Doc/library/unittest.rst:689
msgid ""
"Each instance of :class:`TestCase` will run a single test method: the method "
"named *methodName*.  If you remember, we had an earlier example that went "
"something like this::"
msgstr ""

#: ../Doc/library/unittest.rst:699
msgid ""
"Here, we create two instances of :class:`WidgetTestCase`, each of which runs "
"a single test."
msgstr ""

#: ../Doc/library/unittest.rst:702
msgid "*methodName* defaults to :meth:`runTest`."
msgstr ""

#: ../Doc/library/unittest.rst:704
msgid ""
":class:`TestCase` instances provide three groups of methods: one group used "
"to run the test, another used by the test implementation to check conditions "
"and report failures, and some inquiry methods allowing information about the "
"test itself to be gathered."
msgstr ""

#: ../Doc/library/unittest.rst:709
msgid "Methods in the first group (running the test) are:"
msgstr ""

#: ../Doc/library/unittest.rst:714
msgid ""
"Method called to prepare the test fixture.  This is called immediately "
"before calling the test method; any exception raised by this method will be "
"considered an error rather than a test failure. The default implementation "
"does nothing."
msgstr ""

#: ../Doc/library/unittest.rst:722
msgid ""
"Method called immediately after the test method has been called and the "
"result recorded.  This is called even if the test method raised an "
"exception, so the implementation in subclasses may need to be particularly "
"careful about checking internal state.  Any exception raised by this method "
"will be considered an error rather than a test failure.  This method will "
"only be called if the :meth:`setUp` succeeds, regardless of the outcome of "
"the test method. The default implementation does nothing."
msgstr ""

#: ../Doc/library/unittest.rst:733
msgid ""
"A class method called before tests in an individual class run. "
"``setUpClass`` is called with the class as the only argument and must be "
"decorated as a :func:`classmethod`::"
msgstr ""

#: ../Doc/library/unittest.rst:741 ../Doc/library/unittest.rst:756
msgid "See `Class and Module Fixtures`_ for more details."
msgstr ""

#: ../Doc/library/unittest.rst:748
msgid ""
"A class method called after tests in an individual class have run. "
"``tearDownClass`` is called with the class as the only argument and must be "
"decorated as a :meth:`classmethod`::"
msgstr ""

# 60427b1961ff41fb9d0ec6d246b1a3e0
#: ../Doc/library/unittest.rst:763
msgid ""
"Run the test, collecting the result into the test result object passed as "
"*result*.  If *result* is omitted or ``None``, a temporary result object is "
"created (by calling the :meth:`defaultTestResult` method) and used. The "
"result object is not returned to :meth:`run`'s caller."
msgstr ""

#: ../Doc/library/unittest.rst:768
msgid ""
"The same effect may be had by simply calling the :class:`TestCase` instance."
msgstr ""

#: ../Doc/library/unittest.rst:774
msgid ""
"Calling this during a test method or :meth:`setUp` skips the current test.  "
"See :ref:`unittest-skipping` for more information."
msgstr ""

#: ../Doc/library/unittest.rst:782
msgid ""
"Run the test without collecting the result.  This allows exceptions raised "
"by the test to be propagated to the caller, and can be used to support "
"running tests under a debugger."
msgstr ""

# ed9405f08b9740c7a01597f53016e57c
#: ../Doc/library/unittest.rst:788
msgid ""
"The :class:`TestCase` class provides a number of methods to check for and "
"report failures, such as:"
msgstr ""

# 50e10336ba20459ab7202fff6bf5266d
# 7c276792011e4be59326fd548ccc20ee
# 146b27ea93f945e781939f54b8367e79
# 2b2593102c7b444e8ec62c5ab8b4d8a4
#: ../Doc/library/unittest.rst:792 ../Doc/library/unittest.rst:907
#: ../Doc/library/unittest.rst:969 ../Doc/library/unittest.rst:1110
msgid "Method"
msgstr ""

# c57379e5484a42e0a1bda478c4cdf525
# 09959b06189a4e889d4c618c7e572523
# 5342649510fa475fa4973821b141c17a
#: ../Doc/library/unittest.rst:792 ../Doc/library/unittest.rst:907
#: ../Doc/library/unittest.rst:969
msgid "Checks that"
msgstr ""

# 1dc456b2a0874235bf8c31db29620bfc
# 6511536b4e184b67870cec4ac5ddf68a
# cd7a5c58c2bf470b9f92e04b83a10a95
# f928a39b76b7438d81593dab65b679d7
#: ../Doc/library/unittest.rst:792 ../Doc/library/unittest.rst:907
#: ../Doc/library/unittest.rst:969 ../Doc/library/unittest.rst:1110
msgid "New in"
msgstr ""

# 48dea6efd1034943a3c9b742ad48dfcd
#: ../Doc/library/unittest.rst:794
msgid ":meth:`assertEqual(a, b) <TestCase.assertEqual>`"
msgstr ""

# 326cf0f1759b4b5ab31eb18d23580652
#: ../Doc/library/unittest.rst:797
msgid ":meth:`assertNotEqual(a, b) <TestCase.assertNotEqual>`"
msgstr ""

# d63a8c7c3abb4a3fa8bf1281883e2550
#: ../Doc/library/unittest.rst:800
msgid ":meth:`assertTrue(x) <TestCase.assertTrue>`"
msgstr ""

# 2e2f7dff42624412b74deea400a0f06a
#: ../Doc/library/unittest.rst:800
msgid "``bool(x) is True``"
msgstr ""

# ef440209fc6f4f189cac0eed19ccdb35
#: ../Doc/library/unittest.rst:803
msgid ":meth:`assertFalse(x) <TestCase.assertFalse>`"
msgstr ""

# b1143962c4e8461ca0cf2b2828e9b644
#: ../Doc/library/unittest.rst:803
msgid "``bool(x) is False``"
msgstr ""

# 20cd3673360443168bd2ac92d64a9c98
#: ../Doc/library/unittest.rst:806
msgid ":meth:`assertIs(a, b) <TestCase.assertIs>`"
msgstr ""

#: ../Doc/library/unittest.rst:806 ../Doc/library/unittest.rst:809
#: ../Doc/library/unittest.rst:812 ../Doc/library/unittest.rst:815
#: ../Doc/library/unittest.rst:818 ../Doc/library/unittest.rst:821
#: ../Doc/library/unittest.rst:824 ../Doc/library/unittest.rst:827
#: ../Doc/library/unittest.rst:912 ../Doc/library/unittest.rst:977
#: ../Doc/library/unittest.rst:980 ../Doc/library/unittest.rst:983
#: ../Doc/library/unittest.rst:986 ../Doc/library/unittest.rst:989
#: ../Doc/library/unittest.rst:992 ../Doc/library/unittest.rst:995
#: ../Doc/library/unittest.rst:998 ../Doc/library/unittest.rst:1112
#: ../Doc/library/unittest.rst:1115 ../Doc/library/unittest.rst:1118
#: ../Doc/library/unittest.rst:1121 ../Doc/library/unittest.rst:1124
#: ../Doc/library/unittest.rst:1127
msgid "2.7"
msgstr ""

# 7e6a5854e5b448eab560eb9dcf1daf7b
#: ../Doc/library/unittest.rst:809
msgid ":meth:`assertIsNot(a, b) <TestCase.assertIsNot>`"
msgstr ""

# 2aa7dd8b1ce64611bd720898e36d1bb8
#: ../Doc/library/unittest.rst:812
msgid ":meth:`assertIsNone(x) <TestCase.assertIsNone>`"
msgstr ""

# 7e536f1086bb4172b960ed156dd58a7c
#: ../Doc/library/unittest.rst:812
msgid "``x is None``"
msgstr ""

# c0469f094c5d48df95b42ede1f3717b4
#: ../Doc/library/unittest.rst:815
msgid ":meth:`assertIsNotNone(x) <TestCase.assertIsNotNone>`"
msgstr ""

# d8d020cc337d45188a836091db613cc3
#: ../Doc/library/unittest.rst:815
msgid "``x is not None``"
msgstr ""

# 89d0183eddba4ab8a97d54e8c5cfd6f3
#: ../Doc/library/unittest.rst:818
msgid ":meth:`assertIn(a, b) <TestCase.assertIn>`"
msgstr ""

# 3e695ba49cd74b96bb0b9801f3c8710c
#: ../Doc/library/unittest.rst:818
msgid "``a in b``"
msgstr ""

# 75943bcdc89541f08c3083c357b365dd
#: ../Doc/library/unittest.rst:821
msgid ":meth:`assertNotIn(a, b) <TestCase.assertNotIn>`"
msgstr ""

# 285e2213a38d4cf3a133f13b26dee635
#: ../Doc/library/unittest.rst:821
msgid "``a not in b``"
msgstr ""

# ad21f10cd57447ccbef46c96da0bb352
#: ../Doc/library/unittest.rst:824
msgid ":meth:`assertIsInstance(a, b) <TestCase.assertIsInstance>`"
msgstr ""

# cf1ffa2d70224e14ac94fe7f03b72a10
#: ../Doc/library/unittest.rst:824
msgid "``isinstance(a, b)``"
msgstr ""

# b67ae2748c544c59a2c78a87a783df24
#: ../Doc/library/unittest.rst:827
msgid ":meth:`assertNotIsInstance(a, b) <TestCase.assertNotIsInstance>`"
msgstr ""

# 4934a7e75b3d46b2a605e4c931229b1a
#: ../Doc/library/unittest.rst:827
msgid "``not isinstance(a, b)``"
msgstr ""

# b61c2ad033ca431c91d0e0c81d1ddd55
#: ../Doc/library/unittest.rst:831
msgid ""
"All the assert methods (except :meth:`assertRaises`, :meth:"
"`assertRaisesRegexp`) accept a *msg* argument that, if specified, is used as "
"the error message on failure (see also :data:`longMessage`)."
msgstr ""

# 617745b0eb2b407c85cbe664a7635ebc
#: ../Doc/library/unittest.rst:838
msgid ""
"Test that *first* and *second* are equal.  If the values do not compare "
"equal, the test will fail."
msgstr ""

# 2a0c2445d95e4d56afdbb965de14ce95
#: ../Doc/library/unittest.rst:841
msgid ""
"In addition, if *first* and *second* are the exact same type and one of "
"list, tuple, dict, set, frozenset or unicode or any type that a subclass "
"registers with :meth:`addTypeEqualityFunc` the type-specific equality "
"function will be called in order to generate a more useful default error "
"message (see also the :ref:`list of type-specific methods <type-specific-"
"methods>`)."
msgstr ""

# b413198b8eff438cbe69f280c5506788
#: ../Doc/library/unittest.rst:854
msgid ""
"Test that *first* and *second* are not equal.  If the values do compare "
"equal, the test will fail."
msgstr ""

# f888f801852541f59ff4374e493c60cc
#: ../Doc/library/unittest.rst:860
msgid "Test that *expr* is true (or false)."
msgstr ""

# 1d5e38ef6be84ef495dc3289ef5196df
#: ../Doc/library/unittest.rst:862
msgid ""
"Note that this is equivalent to ``bool(expr) is True`` and not to ``expr is "
"True`` (use ``assertIs(expr, True)`` for the latter).  This method should "
"also be avoided when more specific methods are available (e.g. ``assertEqual"
"(a, b)`` instead of ``assertTrue(a == b)``), because they provide a better "
"error message in case of failure."
msgstr ""

# 5060143c1d82405e99a24ead8ed3067a
#: ../Doc/library/unittest.rst:872
msgid ""
"Test that *first* and *second* evaluate (or don't evaluate) to the same "
"object."
msgstr ""

# 1564486dda404855ad67d464bdd26f6c
#: ../Doc/library/unittest.rst:880
msgid "Test that *expr* is (or is not) None."
msgstr ""

# 716220859db944459525c5c4abbcbf2a
#: ../Doc/library/unittest.rst:888
msgid "Test that *first* is (or is not) in *second*."
msgstr ""

# 38bdcafa6dd0455b9e34f4ffb08af2bd
#: ../Doc/library/unittest.rst:896
msgid ""
"Test that *obj* is (or is not) an instance of *cls* (which can be a class or "
"a tuple of classes, as supported by :func:`isinstance`). To check for the "
"exact type, use :func:`assertIs(type(obj), cls) <assertIs>`."
msgstr ""

# bcec9ec002ec4f99a6677885600b91c4
#: ../Doc/library/unittest.rst:903
msgid ""
"It is also possible to check that exceptions and warnings are raised using "
"the following methods:"
msgstr ""

# f77f63dcfd1940ef8f2579bde35d82c1
#: ../Doc/library/unittest.rst:909
msgid ":meth:`assertRaises(exc, fun, *args, **kwds) <TestCase.assertRaises>`"
msgstr ""

# 07ddce9520694d4c9511db8ebd5ce2dd
#: ../Doc/library/unittest.rst:909
msgid "``fun(*args, **kwds)`` raises *exc*"
msgstr ""

# 62b9f5fa6d194456b5894b861943eee4
#: ../Doc/library/unittest.rst:912
msgid ""
":meth:`assertRaisesRegexp(exc, re, fun, *args, **kwds) <TestCase."
"assertRaisesRegexp>`"
msgstr ""

# eb05f1aeed6d4a6fb220347d036ff26f
#: ../Doc/library/unittest.rst:912
msgid "``fun(*args, **kwds)`` raises *exc* and the message matches *re*"
msgstr ""

#: ../Doc/library/unittest.rst:919
msgid ""
"Test that an exception is raised when *callable* is called with any "
"positional or keyword arguments that are also passed to :meth:"
"`assertRaises`.  The test passes if *exception* is raised, is an error if "
"another exception is raised, or fails if no exception is raised. To catch "
"any of a group of exceptions, a tuple containing the exception classes may "
"be passed as *exception*."
msgstr ""

#: ../Doc/library/unittest.rst:926
msgid ""
"If only the *exception* argument is given, returns a context manager so that "
"the code under test can be written inline rather than as a function::"
msgstr ""

#: ../Doc/library/unittest.rst:932
msgid ""
"The context manager will store the caught exception object in its :attr:"
"`exception` attribute.  This can be useful if the intention is to perform "
"additional checks on the exception raised::"
msgstr ""

#: ../Doc/library/unittest.rst:949
msgid ""
"Like :meth:`assertRaises` but also tests that *regexp* matches on the string "
"representation of the raised exception.  *regexp* may be a regular "
"expression object or a string containing a regular expression suitable for "
"use by :func:`re.search`.  Examples::"
msgstr ""

#: ../Doc/library/unittest.rst:957
msgid "or::"
msgstr ""

# dab2f121ed094c5d8f35c9608caecfde
#: ../Doc/library/unittest.rst:966
msgid ""
"There are also other methods used to perform more specific checks, such as:"
msgstr ""

# a027ca5030f5413d8c7cd53dd3cdf657
#: ../Doc/library/unittest.rst:971
msgid ":meth:`assertAlmostEqual(a, b) <TestCase.assertAlmostEqual>`"
msgstr ""

# b77093bb785f4b1fa3ae795dc3e6b208
#: ../Doc/library/unittest.rst:971
msgid "``round(a-b, 7) == 0``"
msgstr ""

# 8799cf9bfc454d3294e7a3785de86a76
#: ../Doc/library/unittest.rst:974
msgid ":meth:`assertNotAlmostEqual(a, b) <TestCase.assertNotAlmostEqual>`"
msgstr ""

# 3365ddc3898647e289c83e240a1aca29
#: ../Doc/library/unittest.rst:974
msgid "``round(a-b, 7) != 0``"
msgstr ""

# 80211138de204017afbdd75e8f8a7a57
#: ../Doc/library/unittest.rst:977
msgid ":meth:`assertGreater(a, b) <TestCase.assertGreater>`"
msgstr ""

# 4fb413b8b4c3481fa12167232abdc33f
#: ../Doc/library/unittest.rst:980
msgid ":meth:`assertGreaterEqual(a, b) <TestCase.assertGreaterEqual>`"
msgstr ""

# 8047d03ad0a840adb71e24bc23fa91bf
#: ../Doc/library/unittest.rst:983
msgid ":meth:`assertLess(a, b) <TestCase.assertLess>`"
msgstr ""

# 86c54bdaa94b44238e416fffc7cd6306
#: ../Doc/library/unittest.rst:986
msgid ":meth:`assertLessEqual(a, b) <TestCase.assertLessEqual>`"
msgstr ""

# 9be972863a6540dfabcd2df3ecf8f1dd
#: ../Doc/library/unittest.rst:989
msgid ":meth:`assertRegexpMatches(s, re) <TestCase.assertRegexpMatches>`"
msgstr ""

# aa21a0562d764e4692e43dba55d0f7be
#: ../Doc/library/unittest.rst:989
msgid "``regex.search(s)``"
msgstr ""

# 9a1a896f997e4d74aa0a5d39e095a39a
#: ../Doc/library/unittest.rst:992
msgid ":meth:`assertNotRegexpMatches(s, re) <TestCase.assertNotRegexpMatches>`"
msgstr ""

# f9851302ffe14a4291697163cdee40da
#: ../Doc/library/unittest.rst:992
msgid "``not regex.search(s)``"
msgstr ""

# d81351fbd310467fbae4a425df0e2089
#: ../Doc/library/unittest.rst:995
msgid ":meth:`assertItemsEqual(a, b) <TestCase.assertItemsEqual>`"
msgstr ""

# 415014194e354787b6cdd4c7b9cef265
#: ../Doc/library/unittest.rst:995
msgid "sorted(a) == sorted(b) and works with unhashable objs"
msgstr ""

# a854c6a96f704960a1ee883681cda7d2
#: ../Doc/library/unittest.rst:998
msgid ""
":meth:`assertDictContainsSubset(a, b) <TestCase.assertDictContainsSubset>`"
msgstr ""

# 98406f0fb48b4721b13231cc039e4ff1
#: ../Doc/library/unittest.rst:998
msgid "all the key/value pairs in *a* exist in *b*"
msgstr ""

# f6d213b418ff40a78c945e891df973d1
#: ../Doc/library/unittest.rst:1006
msgid ""
"Test that *first* and *second* are approximately (or not approximately) "
"equal by computing the difference, rounding to the given number of decimal "
"*places* (default 7), and comparing to zero.  Note that these methods round "
"the values to the given number of *decimal places* (i.e. like the :func:"
"`round` function) and not *significant digits*."
msgstr ""

# 40cdd8ede0414885b2c763550cd95b7a
#: ../Doc/library/unittest.rst:1012
msgid ""
"If *delta* is supplied instead of *places* then the difference between "
"*first* and *second* must be less (or more) than *delta*."
msgstr ""

#: ../Doc/library/unittest.rst:1015
msgid "Supplying both *delta* and *places* raises a ``TypeError``."
msgstr ""

# eb4c3742af1a41d8b06104f710ddda15
#: ../Doc/library/unittest.rst:1029
msgid ""
"Test that *first* is respectively >, >=, < or <= than *second* depending on "
"the method name.  If not, the test will fail::"
msgstr ""

# 2a64ba8d97ae4c4ca9ddc3c19334b236
#: ../Doc/library/unittest.rst:1040
msgid ""
"Test that a *regexp* search matches *text*.  In case of failure, the error "
"message will include the pattern and the *text* (or the pattern and the part "
"of *text* that unexpectedly matched).  *regexp* may be a regular expression "
"object or a string containing a regular expression suitable for use by :func:"
"`re.search`."
msgstr ""

#: ../Doc/library/unittest.rst:1051
msgid ""
"Verifies that a *regexp* search does not match *text*.  Fails with an error "
"message including the pattern and the part of *text* that matches.  *regexp* "
"may be a regular expression object or a string containing a regular "
"expression suitable for use by :func:`re.search`."
msgstr ""

#: ../Doc/library/unittest.rst:1061
msgid ""
"Test that sequence *expected* contains the same elements as *actual*, "
"regardless of their order. When they don't, an error message listing the "
"differences between the sequences will be generated."
msgstr ""

#: ../Doc/library/unittest.rst:1065
msgid ""
"Duplicate elements are *not* ignored when comparing *actual* and *expected*. "
"It verifies if each element has the same count in both sequences. It is the "
"equivalent of ``assertEqual(sorted(expected), sorted(actual))`` but it works "
"with sequences of unhashable objects as well."
msgstr ""

#: ../Doc/library/unittest.rst:1076
msgid ""
"Tests whether the key/value pairs in dictionary *actual* are a superset of "
"those in *expected*.  If not, an error message listing the missing keys and "
"mismatched values is generated."
msgstr ""

# 69676e138ab54ceaa92c863cd0c606d6
#: ../Doc/library/unittest.rst:1087
msgid ""
"The :meth:`assertEqual` method dispatches the equality check for objects of "
"the same type to different type-specific methods.  These methods are already "
"implemented for most of the built-in types, but it's also possible to "
"register new methods using :meth:`addTypeEqualityFunc`:"
msgstr ""

# bb873fdc61d545dc91f4d6ec9e11b735
#: ../Doc/library/unittest.rst:1094
msgid ""
"Registers a type-specific method called by :meth:`assertEqual` to check if "
"two objects of exactly the same *typeobj* (not subclasses) compare equal.  "
"*function* must take two positional arguments and a third msg=None keyword "
"argument just as :meth:`assertEqual` does.  It must raise :data:`self."
"failureException(msg) <failureException>` when inequality between the first "
"two parameters is detected -- possibly providing useful information and "
"explaining the inequalities in details in the error message."
msgstr ""

# 1807aee5b3fb494ca5b8097a39842c0a
#: ../Doc/library/unittest.rst:1105
msgid ""
"The list of type-specific methods automatically used by :meth:`~TestCase."
"assertEqual` are summarized in the following table.  Note that it's usually "
"not necessary to invoke these methods directly."
msgstr ""

# bc4c1f5de2184dd88380f98c9fb722fc
#: ../Doc/library/unittest.rst:1110
msgid "Used to compare"
msgstr ""

# b19dfbb9e340404084f6d2f9929b90b0
#: ../Doc/library/unittest.rst:1112
msgid ":meth:`assertMultiLineEqual(a, b) <TestCase.assertMultiLineEqual>`"
msgstr ""

# de5b719cdc4e41cabb29b14eefe02fe6
#: ../Doc/library/unittest.rst:1112
msgid "strings"
msgstr ""

# fff6fb6105c84bdbbbd955df9fdf6fe5
#: ../Doc/library/unittest.rst:1115
msgid ":meth:`assertSequenceEqual(a, b) <TestCase.assertSequenceEqual>`"
msgstr ""

# 3f7e989bedfa438ba271d98ade11a5a7
#: ../Doc/library/unittest.rst:1115
msgid "sequences"
msgstr ""

# 0ef9f562c5424d85887be850b0ae351d
#: ../Doc/library/unittest.rst:1118
msgid ":meth:`assertListEqual(a, b) <TestCase.assertListEqual>`"
msgstr ""

# 4eececa12648417d983ec468a5b3ec73
#: ../Doc/library/unittest.rst:1118
msgid "lists"
msgstr ""

# aa29480ea5c04416afa5c26cd35574f5
#: ../Doc/library/unittest.rst:1121
msgid ":meth:`assertTupleEqual(a, b) <TestCase.assertTupleEqual>`"
msgstr ""

# c84d1f1043c642ca803705dd72ae5805
#: ../Doc/library/unittest.rst:1121
msgid "tuples"
msgstr ""

# f66d45c226bb420d82aaeb4f5fa3f333
#: ../Doc/library/unittest.rst:1124
msgid ":meth:`assertSetEqual(a, b) <TestCase.assertSetEqual>`"
msgstr ""

# a3a21e7bec104fc3a8e536b9fe078bf2
#: ../Doc/library/unittest.rst:1124
msgid "sets or frozensets"
msgstr ""

# 1a609cd59bcb4cb286cf32d8727461ae
#: ../Doc/library/unittest.rst:1127
msgid ":meth:`assertDictEqual(a, b) <TestCase.assertDictEqual>`"
msgstr ""

# 4acddf1e6ba047b59466dd5b43de95fe
#: ../Doc/library/unittest.rst:1127
msgid "dicts"
msgstr ""

#: ../Doc/library/unittest.rst:1135
msgid ""
"Test that the multiline string *first* is equal to the string *second*. When "
"not equal a diff of the two strings highlighting the differences will be "
"included in the error message. This method is used by default when comparing "
"strings with :meth:`assertEqual`."
msgstr ""

#: ../Doc/library/unittest.rst:1145
msgid ""
"Tests that two sequences are equal.  If a *seq_type* is supplied, both "
"*seq1* and *seq2* must be instances of *seq_type* or a failure will be "
"raised.  If the sequences are different an error message is constructed that "
"shows the difference between the two."
msgstr ""

# 7b8ada51c75d4652901288dffa45d423
#: ../Doc/library/unittest.rst:1150
msgid ""
"This method is not called directly by :meth:`assertEqual`, but it's used to "
"implement :meth:`assertListEqual` and :meth:`assertTupleEqual`."
msgstr ""

# 81846c3d272e48688bc9bd85c0e6f3b6
#: ../Doc/library/unittest.rst:1160
msgid ""
"Tests that two lists or tuples are equal.  If not, an error message is "
"constructed that shows only the differences between the two.  An error is "
"also raised if either of the parameters are of the wrong type. These methods "
"are used by default when comparing lists or tuples with :meth:`assertEqual`."
msgstr ""

#: ../Doc/library/unittest.rst:1171
msgid ""
"Tests that two sets are equal.  If not, an error message is constructed that "
"lists the differences between the sets.  This method is used by default when "
"comparing sets or frozensets with :meth:`assertEqual`."
msgstr ""

#: ../Doc/library/unittest.rst:1175
msgid ""
"Fails if either of *set1* or *set2* does not have a :meth:`set.difference` "
"method."
msgstr ""

#: ../Doc/library/unittest.rst:1183
msgid ""
"Test that two dictionaries are equal.  If not, an error message is "
"constructed that shows the differences in the dictionaries. This method will "
"be used by default to compare dictionaries in calls to :meth:`assertEqual`."
msgstr ""

# da50127cd7484490a8a2bf11b17d7eed
#: ../Doc/library/unittest.rst:1194
msgid ""
"Finally the :class:`TestCase` provides the following methods and attributes:"
msgstr ""

# 03b089d2000d4c1597ec51167e028518
#: ../Doc/library/unittest.rst:1199
msgid ""
"Signals a test failure unconditionally, with *msg* or ``None`` for the error "
"message."
msgstr ""

#: ../Doc/library/unittest.rst:1205
msgid ""
"This class attribute gives the exception raised by the test method.  If a "
"test framework needs to use a specialized exception, possibly to carry "
"additional information, it must subclass this exception in order to \"play "
"fair\" with the framework.  The initial value of this attribute is :exc:"
"`AssertionError`."
msgstr ""

# aa6b3a149fcc4e73aa92670bcfdd467d
#: ../Doc/library/unittest.rst:1214
msgid ""
"If set to ``True`` then any explicit failure message you pass in to the :ref:"
"`assert methods <assert-methods>` will be appended to the end of the normal "
"failure message.  The normal messages contain useful information about the "
"objects involved, for example the message from assertEqual shows you the "
"repr of the two unequal objects. Setting this attribute to ``True`` allows "
"you to have a custom error message in addition to the normal one."
msgstr ""

# ac3e5d6eb2404513a135a4cdc963aed2
#: ../Doc/library/unittest.rst:1222
msgid ""
"This attribute defaults to ``False``, meaning that a custom message passed "
"to an assert method will silence the normal message."
msgstr ""

# 16b0ffcd365841079115227726b5fcb4
#: ../Doc/library/unittest.rst:1225
msgid ""
"The class setting can be overridden in individual tests by assigning an "
"instance attribute to ``True`` or ``False`` before calling the assert "
"methods."
msgstr ""

#: ../Doc/library/unittest.rst:1233
msgid ""
"This attribute controls the maximum length of diffs output by assert methods "
"that report diffs on failure. It defaults to 80*8 characters. Assert methods "
"affected by this attribute are :meth:`assertSequenceEqual` (including all "
"the sequence comparison methods that delegate to it), :meth:"
"`assertDictEqual` and :meth:`assertMultiLineEqual`."
msgstr ""

#: ../Doc/library/unittest.rst:1240
msgid ""
"Setting ``maxDiff`` to None means that there is no maximum length of diffs."
msgstr ""

#: ../Doc/library/unittest.rst:1246
msgid ""
"Testing frameworks can use the following methods to collect information on "
"the test:"
msgstr ""

#: ../Doc/library/unittest.rst:1252
msgid ""
"Return the number of tests represented by this test object.  For :class:"
"`TestCase` instances, this will always be ``1``."
msgstr ""

#: ../Doc/library/unittest.rst:1258
msgid ""
"Return an instance of the test result class that should be used for this "
"test case class (if no other result instance is provided to the :meth:`run` "
"method)."
msgstr ""

#: ../Doc/library/unittest.rst:1262
msgid ""
"For :class:`TestCase` instances, this will always be an instance of :class:"
"`TestResult`; subclasses of :class:`TestCase` should override this as "
"necessary."
msgstr ""

#: ../Doc/library/unittest.rst:1269
msgid ""
"Return a string identifying the specific test case.  This is usually the "
"full name of the test method, including the module and class name."
msgstr ""

# 3e1f0f89795f4e1490d725fd8751e3bd
#: ../Doc/library/unittest.rst:1275
msgid ""
"Returns a description of the test, or ``None`` if no description has been "
"provided.  The default implementation of this method returns the first line "
"of the test method's docstring, if available, or :const:`None`."
msgstr ""

#: ../Doc/library/unittest.rst:1284
msgid ""
"Add a function to be called after :meth:`tearDown` to cleanup resources used "
"during the test. Functions will be called in reverse order to the order they "
"are added (LIFO). They are called with any arguments and keyword arguments "
"passed into :meth:`addCleanup` when they are added."
msgstr ""

#: ../Doc/library/unittest.rst:1290
msgid ""
"If :meth:`setUp` fails, meaning that :meth:`tearDown` is not called, then "
"any cleanup functions added will still be called."
msgstr ""

#: ../Doc/library/unittest.rst:1298
msgid ""
"This method is called unconditionally after :meth:`tearDown`, or after :meth:"
"`setUp` if :meth:`setUp` raises an exception."
msgstr ""

#: ../Doc/library/unittest.rst:1301
msgid ""
"It is responsible for calling all the cleanup functions added by :meth:"
"`addCleanup`. If you need cleanup functions to be called *prior* to :meth:"
"`tearDown` then you can call :meth:`doCleanups` yourself."
msgstr ""

#: ../Doc/library/unittest.rst:1306
msgid ""
":meth:`doCleanups` pops methods off the stack of cleanup functions one at a "
"time, so it can be called at any time."
msgstr ""

#: ../Doc/library/unittest.rst:1314
msgid ""
"This class implements the portion of the :class:`TestCase` interface which "
"allows the test runner to drive the test, but does not provide the methods "
"which test code can use to check and report errors.  This is used to create "
"test cases using legacy test code, allowing it to be integrated into a :mod:"
"`unittest`-based test framework."
msgstr ""

# cdfe6a3dbb9f4723a058ef89240db9b1
#: ../Doc/library/unittest.rst:1322
msgid "Deprecated aliases"
msgstr ""

# 5d321116a6ab42f9ace90e93631cb91c
#: ../Doc/library/unittest.rst:1324
msgid ""
"For historical reasons, some of the :class:`TestCase` methods had one or "
"more aliases that are now deprecated.  The following table lists the correct "
"names along with their deprecated aliases:"
msgstr ""

# 3a5d7e672d5343798d4d5dc30f832af7
#: ../Doc/library/unittest.rst:1329
msgid "Method Name"
msgstr ""

# 853103c28bd74a4d8cee45211cc08afd
#: ../Doc/library/unittest.rst:1329
msgid "Deprecated alias(es)"
msgstr ""

# d81a7b1f61754c5daf5ae69ab6c8db9c
#: ../Doc/library/unittest.rst:1331
msgid ":meth:`.assertEqual`"
msgstr ""

# cd03de733e884af2b718ac33781b8279
#: ../Doc/library/unittest.rst:1331
msgid "failUnlessEqual, assertEquals"
msgstr ""

# 174994bddafd4911a252f2bba3b3fbea
#: ../Doc/library/unittest.rst:1332
msgid ":meth:`.assertNotEqual`"
msgstr ""

# 8870d65a322449068fa0ebc2501fb0c2
#: ../Doc/library/unittest.rst:1332
msgid "failIfEqual"
msgstr ""

# 6f8b450e654449838fe5b3698f5c8e85
#: ../Doc/library/unittest.rst:1333
msgid ":meth:`.assertTrue`"
msgstr ""

# df74b91a812743eb8bb686d776655869
#: ../Doc/library/unittest.rst:1333
msgid "failUnless, assert\\_"
msgstr ""

# 2d2f15cce4474717ba3d9fd106ba8f18
#: ../Doc/library/unittest.rst:1334
msgid ":meth:`.assertFalse`"
msgstr ""

# 0e725359548c4db6b6ba553b2a6fa1e0
#: ../Doc/library/unittest.rst:1334
msgid "failIf"
msgstr ""

# c442139c7c9449a48d2a661424b81239
#: ../Doc/library/unittest.rst:1335
msgid ":meth:`.assertRaises`"
msgstr ""

# e3cff9dd2d394b46a924b7fad3703401
#: ../Doc/library/unittest.rst:1335
msgid "failUnlessRaises"
msgstr ""

# e7a020ea85194f00be345e738325caeb
#: ../Doc/library/unittest.rst:1336
msgid ":meth:`.assertAlmostEqual`"
msgstr ""

# 3ea4d557bc4d4d428b6532980b1f30b4
#: ../Doc/library/unittest.rst:1336
msgid "failUnlessAlmostEqual"
msgstr ""

# a46e0d2f96f64a9f9144b17bf0299ac8
#: ../Doc/library/unittest.rst:1337
msgid ":meth:`.assertNotAlmostEqual`"
msgstr ""

# 1dbf5b6a33f9458983844c87a222754e
#: ../Doc/library/unittest.rst:1337
msgid "failIfAlmostEqual"
msgstr ""

#: ../Doc/library/unittest.rst:1348
msgid "Grouping tests"
msgstr ""

#: ../Doc/library/unittest.rst:1352
msgid ""
"This class represents an aggregation of individual tests cases and test "
"suites. The class presents the interface needed by the test runner to allow "
"it to be run as any other test case.  Running a :class:`TestSuite` instance "
"is the same as iterating over the suite, running each test individually."
msgstr ""

#: ../Doc/library/unittest.rst:1357
msgid ""
"If *tests* is given, it must be an iterable of individual test cases or "
"other test suites that will be used to build the suite initially. Additional "
"methods are provided to add test cases and suites to the collection later on."
msgstr ""

#: ../Doc/library/unittest.rst:1361
msgid ""
":class:`TestSuite` objects behave much like :class:`TestCase` objects, "
"except they do not actually implement a test.  Instead, they are used to "
"aggregate tests into groups of tests that should be run together. Some "
"additional methods are available to add tests to :class:`TestSuite` "
"instances:"
msgstr ""

#: ../Doc/library/unittest.rst:1369
msgid "Add a :class:`TestCase` or :class:`TestSuite` to the suite."
msgstr ""

#: ../Doc/library/unittest.rst:1374
msgid ""
"Add all the tests from an iterable of :class:`TestCase` and :class:"
"`TestSuite` instances to this test suite."
msgstr ""

#: ../Doc/library/unittest.rst:1377
msgid ""
"This is equivalent to iterating over *tests*, calling :meth:`addTest` for "
"each element."
msgstr ""

#: ../Doc/library/unittest.rst:1380
msgid ":class:`TestSuite` shares the following methods with :class:`TestCase`:"
msgstr ""

#: ../Doc/library/unittest.rst:1385
msgid ""
"Run the tests associated with this suite, collecting the result into the "
"test result object passed as *result*.  Note that unlike :meth:`TestCase."
"run`, :meth:`TestSuite.run` requires the result object to be passed in."
msgstr ""

#: ../Doc/library/unittest.rst:1393
msgid ""
"Run the tests associated with this suite without collecting the result. This "
"allows exceptions raised by the test to be propagated to the caller and can "
"be used to support running tests under a debugger."
msgstr ""

#: ../Doc/library/unittest.rst:1400
msgid ""
"Return the number of tests represented by this test object, including all "
"individual tests and sub-suites."
msgstr ""

#: ../Doc/library/unittest.rst:1406
msgid ""
"Tests grouped by a :class:`TestSuite` are always accessed by iteration. "
"Subclasses can lazily provide tests by overriding :meth:`__iter__`. Note "
"that this method maybe called several times on a single suite (for example "
"when counting tests or comparing for equality) so the tests returned must be "
"the same for repeated iterations."
msgstr ""

#: ../Doc/library/unittest.rst:1417
msgid ""
"In the typical usage of a :class:`TestSuite` object, the :meth:`run` method "
"is invoked by a :class:`TestRunner` rather than by the end-user test harness."
msgstr ""

#: ../Doc/library/unittest.rst:1422
msgid "Loading and running tests"
msgstr ""

# f558de2259d842adae8373e172a2eaf5
#: ../Doc/library/unittest.rst:1426
msgid ""
"The :class:`TestLoader` class is used to create test suites from classes and "
"modules.  Normally, there is no need to create an instance of this class; "
"the :mod:`unittest` module provides an instance that can be shared as :data:"
"`unittest.defaultTestLoader`.  Using a subclass or instance, however, allows "
"customization of some configurable properties."
msgstr ""

#: ../Doc/library/unittest.rst:1432
msgid ":class:`TestLoader` objects have the following methods:"
msgstr ""

#: ../Doc/library/unittest.rst:1437
msgid ""
"Return a suite of all tests cases contained in the :class:`TestCase`\\ -"
"derived :class:`testCaseClass`."
msgstr ""

#: ../Doc/library/unittest.rst:1443
msgid ""
"Return a suite of all tests cases contained in the given module. This method "
"searches *module* for classes derived from :class:`TestCase` and creates an "
"instance of the class for each test method defined for the class."
msgstr ""

#: ../Doc/library/unittest.rst:1450
msgid ""
"While using a hierarchy of :class:`TestCase`\\ -derived classes can be "
"convenient in sharing fixtures and helper functions, defining test methods "
"on base classes that are not intended to be instantiated directly does not "
"play well with this method.  Doing so, however, can be useful when the "
"fixtures are different and defined in subclasses."
msgstr ""

#: ../Doc/library/unittest.rst:1456
msgid ""
"If a module provides a ``load_tests`` function it will be called to load the "
"tests. This allows modules to customize test loading. This is the "
"`load_tests protocol`_."
msgstr ""

#: ../Doc/library/unittest.rst:1466
msgid "Return a suite of all tests cases given a string specifier."
msgstr ""

#: ../Doc/library/unittest.rst:1468
msgid ""
"The specifier *name* is a \"dotted name\" that may resolve either to a "
"module, a test case class, a test method within a test case class, a :class:"
"`TestSuite` instance, or a callable object which returns a :class:`TestCase` "
"or :class:`TestSuite` instance.  These checks are applied in the order "
"listed here; that is, a method on a possible test case class will be picked "
"up as \"a test method within a test case class\", rather than \"a callable "
"object\"."
msgstr ""

#: ../Doc/library/unittest.rst:1476
msgid ""
"For example, if you have a module :mod:`SampleTests` containing a :class:"
"`TestCase`\\ -derived class :class:`SampleTestCase` with three test methods "
"(:meth:`test_one`, :meth:`test_two`, and :meth:`test_three`), the specifier "
"``'SampleTests.SampleTestCase'`` would cause this method to return a suite "
"which will run all three test methods. Using the specifier ``'SampleTests."
"SampleTestCase.test_two'`` would cause it to return a test suite which will "
"run only the :meth:`test_two` test method. The specifier can refer to "
"modules and packages which have not been imported; they will be imported as "
"a side-effect."
msgstr ""

#: ../Doc/library/unittest.rst:1486
msgid "The method optionally resolves *name* relative to the given *module*."
msgstr ""

#: ../Doc/library/unittest.rst:1491
msgid ""
"Similar to :meth:`loadTestsFromName`, but takes a sequence of names rather "
"than a single name.  The return value is a test suite which supports all the "
"tests defined for each name."
msgstr ""

#: ../Doc/library/unittest.rst:1498
msgid ""
"Return a sorted sequence of method names found within *testCaseClass*; this "
"should be a subclass of :class:`TestCase`."
msgstr ""

#: ../Doc/library/unittest.rst:1504
msgid ""
"Find and return all test modules from the specified start directory, "
"recursing into subdirectories to find them. Only test files that match "
"*pattern* will be loaded. (Using shell style pattern matching.) Only module "
"names that are importable (i.e. are valid Python identifiers) will be loaded."
msgstr ""

#: ../Doc/library/unittest.rst:1510
msgid ""
"All test modules must be importable from the top level of the project. If "
"the start directory is not the top level directory then the top level "
"directory must be specified separately."
msgstr ""

#: ../Doc/library/unittest.rst:1514
msgid ""
"If importing a module fails, for example due to a syntax error, then this "
"will be recorded as a single error and discovery will continue."
msgstr ""

#: ../Doc/library/unittest.rst:1517
msgid ""
"If a test package name (directory with :file:`__init__.py`) matches the "
"pattern then the package will be checked for a ``load_tests`` function. If "
"this exists then it will be called with *loader*, *tests*, *pattern*."
msgstr ""

#: ../Doc/library/unittest.rst:1522
msgid ""
"If load_tests exists then discovery does *not* recurse into the package, "
"``load_tests`` is responsible for loading all tests in the package."
msgstr ""

#: ../Doc/library/unittest.rst:1525
msgid ""
"The pattern is deliberately not stored as a loader attribute so that "
"packages can continue discovery themselves. *top_level_dir* is stored so "
"``load_tests`` does not need to pass this argument in to ``loader.discover()"
"``."
msgstr ""

#: ../Doc/library/unittest.rst:1530
msgid "*start_dir* can be a dotted module name as well as a directory."
msgstr ""

#: ../Doc/library/unittest.rst:1534
msgid ""
"The following attributes of a :class:`TestLoader` can be configured either "
"by subclassing or assignment on an instance:"
msgstr ""

#: ../Doc/library/unittest.rst:1540
msgid ""
"String giving the prefix of method names which will be interpreted as test "
"methods.  The default value is ``'test'``."
msgstr ""

#: ../Doc/library/unittest.rst:1543
msgid ""
"This affects :meth:`getTestCaseNames` and all the :meth:`loadTestsFrom\\*` "
"methods."
msgstr ""

# 4946e52fda594e458dc2724784b9768c
#: ../Doc/library/unittest.rst:1549
msgid ""
"Function to be used to compare method names when sorting them in :meth:"
"`getTestCaseNames` and all the :meth:`loadTestsFrom\\*` methods. The default "
"value is the built-in :func:`cmp` function; the attribute can also be set "
"to :const:`None` to disable the sort."
msgstr ""

#: ../Doc/library/unittest.rst:1557
msgid ""
"Callable object that constructs a test suite from a list of tests. No "
"methods on the resulting object are needed.  The default value is the :class:"
"`TestSuite` class."
msgstr ""

#: ../Doc/library/unittest.rst:1561
msgid "This affects all the :meth:`loadTestsFrom\\*` methods."
msgstr ""

#: ../Doc/library/unittest.rst:1566
msgid ""
"This class is used to compile information about which tests have succeeded "
"and which have failed."
msgstr ""

#: ../Doc/library/unittest.rst:1569
msgid ""
"A :class:`TestResult` object stores the results of a set of tests.  The :"
"class:`TestCase` and :class:`TestSuite` classes ensure that results are "
"properly recorded; test authors do not need to worry about recording the "
"outcome of tests."
msgstr ""

#: ../Doc/library/unittest.rst:1574
msgid ""
"Testing frameworks built on top of :mod:`unittest` may want access to the :"
"class:`TestResult` object generated by running a set of tests for reporting "
"purposes; a :class:`TestResult` instance is returned by the :meth:"
"`TestRunner.run` method for this purpose."
msgstr ""

#: ../Doc/library/unittest.rst:1579
msgid ""
":class:`TestResult` instances have the following attributes that will be of "
"interest when inspecting the results of running a set of tests:"
msgstr ""

#: ../Doc/library/unittest.rst:1585
msgid ""
"A list containing 2-tuples of :class:`TestCase` instances and strings "
"holding formatted tracebacks. Each tuple represents a test which raised an "
"unexpected exception."
msgstr ""

#: ../Doc/library/unittest.rst:1595
msgid ""
"A list containing 2-tuples of :class:`TestCase` instances and strings "
"holding formatted tracebacks. Each tuple represents a test where a failure "
"was explicitly signalled using the :meth:`TestCase.fail\\*` or :meth:"
"`TestCase.assert\\*` methods."
msgstr ""

#: ../Doc/library/unittest.rst:1605
msgid ""
"A list containing 2-tuples of :class:`TestCase` instances and strings "
"holding the reason for skipping the test."
msgstr ""

# c044129b03fc4c58b0d8f0730bd379f5
#: ../Doc/library/unittest.rst:1612
msgid ""
"A list containing 2-tuples of :class:`TestCase` instances and strings "
"holding formatted tracebacks.  Each tuple represents an expected failure of "
"the test case."
msgstr ""

#: ../Doc/library/unittest.rst:1618
msgid ""
"A list containing :class:`TestCase` instances that were marked as expected "
"failures, but succeeded."
msgstr ""

#: ../Doc/library/unittest.rst:1623
msgid ""
"Set to ``True`` when the execution of tests should stop by :meth:`stop`."
msgstr ""

#: ../Doc/library/unittest.rst:1628
msgid "The total number of tests run so far."
msgstr ""

#: ../Doc/library/unittest.rst:1633
msgid ""
"If set to true, ``sys.stdout`` and ``sys.stderr`` will be buffered in "
"between :meth:`startTest` and :meth:`stopTest` being called. Collected "
"output will only be echoed onto the real ``sys.stdout`` and ``sys.stderr`` "
"if the test fails or errors. Any output is also attached to the failure / "
"error message."
msgstr ""

#: ../Doc/library/unittest.rst:1643
msgid ""
"If set to true :meth:`stop` will be called on the first failure or error, "
"halting the test run."
msgstr ""

# 1e68fcf4c1e8498b8ac55d2c1f0f3b52
#: ../Doc/library/unittest.rst:1651
msgid ""
"Return ``True`` if all tests run so far have passed, otherwise returns "
"``False``."
msgstr ""

# 50e07bd6e189410bb3b5d66b2b83bae4
#: ../Doc/library/unittest.rst:1657
msgid ""
"This method can be called to signal that the set of tests being run should "
"be aborted by setting the :attr:`shouldStop` attribute to ``True``. :class:"
"`TestRunner` objects should respect this flag and return without running any "
"additional tests."
msgstr ""

#: ../Doc/library/unittest.rst:1662
msgid ""
"For example, this feature is used by the :class:`TextTestRunner` class to "
"stop the test framework when the user signals an interrupt from the "
"keyboard.  Interactive tools which provide :class:`TestRunner` "
"implementations can use this in a similar manner."
msgstr ""

#: ../Doc/library/unittest.rst:1667
msgid ""
"The following methods of the :class:`TestResult` class are used to maintain "
"the internal data structures, and may be extended in subclasses to support "
"additional reporting requirements.  This is particularly useful in building "
"tools which support interactive reporting while tests are being run."
msgstr ""

#: ../Doc/library/unittest.rst:1675
msgid "Called when the test case *test* is about to be run."
msgstr ""

#: ../Doc/library/unittest.rst:1679
msgid ""
"Called after the test case *test* has been executed, regardless of the "
"outcome."
msgstr ""

#: ../Doc/library/unittest.rst:1684
msgid "Called once before any tests are executed."
msgstr ""

#: ../Doc/library/unittest.rst:1691
msgid "Called once after all tests are executed."
msgstr ""

#: ../Doc/library/unittest.rst:1698
msgid ""
"Called when the test case *test* raises an unexpected exception *err* is a "
"tuple of the form returned by :func:`sys.exc_info`: ``(type, value, "
"traceback)``."
msgstr ""

#: ../Doc/library/unittest.rst:1702
msgid ""
"The default implementation appends a tuple ``(test, formatted_err)`` to the "
"instance's :attr:`errors` attribute, where *formatted_err* is a formatted "
"traceback derived from *err*."
msgstr ""

#: ../Doc/library/unittest.rst:1709
msgid ""
"Called when the test case *test* signals a failure. *err* is a tuple of the "
"form returned by :func:`sys.exc_info`: ``(type, value, traceback)``."
msgstr ""

#: ../Doc/library/unittest.rst:1712
msgid ""
"The default implementation appends a tuple ``(test, formatted_err)`` to the "
"instance's :attr:`failures` attribute, where *formatted_err* is a formatted "
"traceback derived from *err*."
msgstr ""

#: ../Doc/library/unittest.rst:1719
msgid "Called when the test case *test* succeeds."
msgstr ""

#: ../Doc/library/unittest.rst:1721
msgid "The default implementation does nothing."
msgstr ""

#: ../Doc/library/unittest.rst:1726
msgid ""
"Called when the test case *test* is skipped.  *reason* is the reason the "
"test gave for skipping."
msgstr ""

#: ../Doc/library/unittest.rst:1729
msgid ""
"The default implementation appends a tuple ``(test, reason)`` to the "
"instance's :attr:`skipped` attribute."
msgstr ""

#: ../Doc/library/unittest.rst:1735
msgid ""
"Called when the test case *test* fails, but was marked with the :func:"
"`expectedFailure` decorator."
msgstr ""

#: ../Doc/library/unittest.rst:1738
msgid ""
"The default implementation appends a tuple ``(test, formatted_err)`` to the "
"instance's :attr:`expectedFailures` attribute, where *formatted_err* is a "
"formatted traceback derived from *err*."
msgstr ""

#: ../Doc/library/unittest.rst:1745
msgid ""
"Called when the test case *test* was marked with the :func:`expectedFailure` "
"decorator, but succeeded."
msgstr ""

#: ../Doc/library/unittest.rst:1748
msgid ""
"The default implementation appends the test to the instance's :attr:"
"`unexpectedSuccesses` attribute."
msgstr ""

#: ../Doc/library/unittest.rst:1753
msgid ""
"A concrete implementation of :class:`TestResult` used by the :class:"
"`TextTestRunner`."
msgstr ""

#: ../Doc/library/unittest.rst:1762
msgid ""
"Instance of the :class:`TestLoader` class intended to be shared.  If no "
"customization of the :class:`TestLoader` is needed, this instance can be "
"used instead of repeatedly creating new instances."
msgstr ""

#: ../Doc/library/unittest.rst:1769
msgid ""
"A basic test runner implementation which prints results on standard error.  "
"It has a few configurable parameters, but is essentially very simple.  "
"Graphical applications which run test suites should provide alternate "
"implementations."
msgstr ""

#: ../Doc/library/unittest.rst:1775
msgid ""
"This method returns the instance of ``TestResult`` used by :meth:`run`. It "
"is not intended to be called directly, but can be overridden in subclasses "
"to provide a custom ``TestResult``."
msgstr ""

#: ../Doc/library/unittest.rst:1779
msgid ""
"``_makeResult()`` instantiates the class or callable passed in the "
"``TextTestRunner`` constructor as the ``resultclass`` argument. It defaults "
"to :class:`TextTestResult` if no ``resultclass`` is provided. The result "
"class is instantiated with the following arguments::"
msgstr ""

# 633f5a509bda45fb964a5fbc05dc0e0f
#: ../Doc/library/unittest.rst:1789
msgid ""
"A command-line program that loads a set of tests from *module* and runs "
"them; this is primarily for making test modules conveniently executable. The "
"simplest use for this function is to include the following line at the end "
"of a test script::"
msgstr ""

#: ../Doc/library/unittest.rst:1797
msgid ""
"You can run tests with more detailed information by passing in the verbosity "
"argument::"
msgstr ""

# 1c15eec6719747139a4e68154b19c084
#: ../Doc/library/unittest.rst:1803
msgid ""
"The *argv* argument can be a list of options passed to the program, with the "
"first element being the program name.  If not specified or ``None``, the "
"values of :data:`sys.argv` are used."
msgstr ""

#: ../Doc/library/unittest.rst:1807
msgid ""
"The *testRunner* argument can either be a test runner class or an already "
"created instance of it. By default ``main`` calls :func:`sys.exit` with an "
"exit code indicating success or failure of the tests run."
msgstr ""

# 2414c6985ce14ce592ffd2bb553286a1
#: ../Doc/library/unittest.rst:1811
msgid ""
"The *testLoader* argument has to be a :class:`TestLoader` instance, and "
"defaults to :data:`defaultTestLoader`."
msgstr ""

#: ../Doc/library/unittest.rst:1814
msgid ""
"``main`` supports being used from the interactive interpreter by passing in "
"the argument ``exit=False``. This displays the result on standard output "
"without calling :func:`sys.exit`::"
msgstr ""

# 802f8a1a243d490b9ba3902ae2421eee
#: ../Doc/library/unittest.rst:1821
msgid ""
"The *failfast*, *catchbreak* and *buffer* parameters have the same effect as "
"the same-name `command-line options`_."
msgstr ""

#: ../Doc/library/unittest.rst:1824
msgid ""
"Calling ``main`` actually returns an instance of the ``TestProgram`` class. "
"This stores the result of the tests run as the ``result`` attribute."
msgstr ""

#: ../Doc/library/unittest.rst:1833
msgid "load_tests Protocol"
msgstr ""

#: ../Doc/library/unittest.rst:1837
msgid ""
"Modules or packages can customize how tests are loaded from them during "
"normal test runs or test discovery by implementing a function called "
"``load_tests``."
msgstr ""

#: ../Doc/library/unittest.rst:1840
msgid ""
"If a test module defines ``load_tests`` it will be called by :meth:"
"`TestLoader.loadTestsFromModule` with the following arguments::"
msgstr ""

#: ../Doc/library/unittest.rst:1845
msgid "It should return a :class:`TestSuite`."
msgstr ""

#: ../Doc/library/unittest.rst:1847
msgid ""
"*loader* is the instance of :class:`TestLoader` doing the loading. "
"*standard_tests* are the tests that would be loaded by default from the "
"module. It is common for test modules to only want to add or remove tests "
"from the standard set of tests. The third argument is used when loading "
"packages as part of test discovery."
msgstr ""

#: ../Doc/library/unittest.rst:1853
msgid ""
"A typical ``load_tests`` function that loads tests from a specific set of :"
"class:`TestCase` classes may look like::"
msgstr ""

#: ../Doc/library/unittest.rst:1865
msgid ""
"If discovery is started, either from the command line or by calling :meth:"
"`TestLoader.discover`, with a pattern that matches a package name then the "
"package :file:`__init__.py` will be checked for ``load_tests``."
msgstr ""

#: ../Doc/library/unittest.rst:1871
msgid ""
"The default pattern is 'test*.py'. This matches all Python files that start "
"with 'test' but *won't* match any test directories."
msgstr ""

#: ../Doc/library/unittest.rst:1874
msgid "A pattern like 'test*' will match test packages as well as modules."
msgstr ""

#: ../Doc/library/unittest.rst:1877
msgid ""
"If the package :file:`__init__.py` defines ``load_tests`` then it will be "
"called and discovery not continued into the package. ``load_tests`` is "
"called with the following arguments::"
msgstr ""

#: ../Doc/library/unittest.rst:1883
msgid ""
"This should return a :class:`TestSuite` representing all the tests from the "
"package. (``standard_tests`` will only contain tests collected from :file:"
"`__init__.py`.)"
msgstr ""

#: ../Doc/library/unittest.rst:1887
msgid ""
"Because the pattern is passed into ``load_tests`` the package is free to "
"continue (and potentially modify) test discovery. A 'do nothing' "
"``load_tests`` function for a test package would look like::"
msgstr ""

#: ../Doc/library/unittest.rst:1900
msgid "Class and Module Fixtures"
msgstr ""

#: ../Doc/library/unittest.rst:1902
msgid ""
"Class and module level fixtures are implemented in :class:`TestSuite`. When "
"the test suite encounters a test from a new class then :meth:`tearDownClass` "
"from the previous class (if there is one) is called, followed by :meth:"
"`setUpClass` from the new class."
msgstr ""

#: ../Doc/library/unittest.rst:1907
msgid ""
"Similarly if a test is from a different module from the previous test then "
"``tearDownModule`` from the previous module is run, followed by "
"``setUpModule`` from the new module."
msgstr ""

#: ../Doc/library/unittest.rst:1911
msgid ""
"After all the tests have run the final ``tearDownClass`` and "
"``tearDownModule`` are run."
msgstr ""

#: ../Doc/library/unittest.rst:1914
msgid ""
"Note that shared fixtures do not play well with [potential] features like "
"test parallelization and they break test isolation. They should be used with "
"care."
msgstr ""

#: ../Doc/library/unittest.rst:1917
msgid ""
"The default ordering of tests created by the unittest test loaders is to "
"group all tests from the same modules and classes together. This will lead "
"to ``setUpClass`` / ``setUpModule`` (etc) being called exactly once per "
"class and module. If you randomize the order, so that tests from different "
"modules and classes are adjacent to each other, then these shared fixture "
"functions may be called multiple times in a single test run."
msgstr ""

#: ../Doc/library/unittest.rst:1924
msgid ""
"Shared fixtures are not intended to work with suites with non-standard "
"ordering. A ``BaseTestSuite`` still exists for frameworks that don't want to "
"support shared fixtures."
msgstr ""

#: ../Doc/library/unittest.rst:1928
msgid ""
"If there are any exceptions raised during one of the shared fixture "
"functions the test is reported as an error. Because there is no "
"corresponding test instance an ``_ErrorHolder`` object (that has the same "
"interface as a :class:`TestCase`) is created to represent the error. If you "
"are just using the standard unittest test runner then this detail doesn't "
"matter, but if you are a framework author it may be relevant."
msgstr ""

#: ../Doc/library/unittest.rst:1937
msgid "setUpClass and tearDownClass"
msgstr ""

#: ../Doc/library/unittest.rst:1939
msgid "These must be implemented as class methods::"
msgstr ""

#: ../Doc/library/unittest.rst:1952
msgid ""
"If you want the ``setUpClass`` and ``tearDownClass`` on base classes called "
"then you must call up to them yourself. The implementations in :class:"
"`TestCase` are empty."
msgstr ""

#: ../Doc/library/unittest.rst:1956
msgid ""
"If an exception is raised during a ``setUpClass`` then the tests in the "
"class are not run and the ``tearDownClass`` is not run. Skipped classes will "
"not have ``setUpClass`` or ``tearDownClass`` run. If the exception is a "
"``SkipTest`` exception then the class will be reported as having been "
"skipped instead of as an error."
msgstr ""

#: ../Doc/library/unittest.rst:1964
msgid "setUpModule and tearDownModule"
msgstr ""

#: ../Doc/library/unittest.rst:1966
msgid "These should be implemented as functions::"
msgstr ""

#: ../Doc/library/unittest.rst:1974
msgid ""
"If an exception is raised in a ``setUpModule`` then none of the tests in the "
"module will be run and the ``tearDownModule`` will not be run. If the "
"exception is a ``SkipTest`` exception then the module will be reported as "
"having been skipped instead of as an error."
msgstr ""

#: ../Doc/library/unittest.rst:1981
msgid "Signal Handling"
msgstr ""

# feb4bac3d23a4046b90018f935f9b76c
#: ../Doc/library/unittest.rst:1983
msgid ""
"The :option:`-c/--catch <unittest -c>` command-line option to unittest, "
"along with the ``catchbreak`` parameter to :func:`unittest.main()`, provide "
"more friendly handling of control-C during a test run. With catch break "
"behavior enabled control-C will allow the currently running test to "
"complete, and the test run will then end and report all the results so far. "
"A second control-c will raise a :exc:`KeyboardInterrupt` in the usual way."
msgstr ""

#: ../Doc/library/unittest.rst:1990
msgid ""
"The control-c handling signal handler attempts to remain compatible with "
"code or tests that install their own :const:`signal.SIGINT` handler. If the "
"``unittest`` handler is called but *isn't* the installed :const:`signal."
"SIGINT` handler, i.e. it has been replaced by the system under test and "
"delegated to, then it calls the default handler. This will normally be the "
"expected behavior by code that replaces an installed handler and delegates "
"to it. For individual tests that need ``unittest`` control-c handling "
"disabled the :func:`removeHandler` decorator can be used."
msgstr ""

#: ../Doc/library/unittest.rst:1999
msgid ""
"There are a few utility functions for framework authors to enable control-c "
"handling functionality within test frameworks."
msgstr ""

#: ../Doc/library/unittest.rst:2004
msgid ""
"Install the control-c handler. When a :const:`signal.SIGINT` is received "
"(usually in response to the user pressing control-c) all registered results "
"have :meth:`~TestResult.stop` called."
msgstr ""

#: ../Doc/library/unittest.rst:2012
msgid ""
"Register a :class:`TestResult` object for control-c handling. Registering a "
"result stores a weak reference to it, so it doesn't prevent the result from "
"being garbage collected."
msgstr ""

#: ../Doc/library/unittest.rst:2016
msgid ""
"Registering a :class:`TestResult` object has no side-effects if control-c "
"handling is not enabled, so test frameworks can unconditionally register all "
"results they create independently of whether or not handling is enabled."
msgstr ""

#: ../Doc/library/unittest.rst:2024
msgid ""
"Remove a registered result. Once a result has been removed then :meth:"
"`~TestResult.stop` will no longer be called on that result object in "
"response to a control-c."
msgstr ""

#: ../Doc/library/unittest.rst:2032
msgid ""
"When called without arguments this function removes the control-c handler if "
"it has been installed. This function can also be used as a test decorator to "
"temporarily remove the handler whilst the test is being executed::"
msgstr ""

#: ../Doc/library/unix.rst:6
msgid "Unix Specific Services"
msgstr ""

#: ../Doc/library/unix.rst:8
msgid ""
"The modules described in this chapter provide interfaces to features that "
"are unique to the Unix operating system, or in some cases to some or many "
"variants of it.  Here's an overview:"
msgstr ""

# 56124e020ffe4199a651bf72d8d98f4c
#: ../Doc/library/urllib.rst:2
msgid ":mod:`urllib` --- Open arbitrary resources by URL"
msgstr ""

# ba03781775534acb8d7ff6e568a6a9cd
#: ../Doc/library/urllib.rst:8
msgid ""
"The :mod:`urllib` module has been split into parts and renamed in Python 3 "
"to :mod:`urllib.request`, :mod:`urllib.parse`, and :mod:`urllib.error`. The :"
"term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3. Also note that the :func:`urllib.urlopen` function has "
"been removed in Python 3 in favor of :func:`urllib2.urlopen`."
msgstr ""

# 57ee8dade74447e0b029ccc4b50d2131
#: ../Doc/library/urllib.rst:20
msgid ""
"This module provides a high-level interface for fetching data across the "
"World Wide Web.  In particular, the :func:`urlopen` function is similar to "
"the built-in function :func:`open`, but accepts Universal Resource Locators "
"(URLs) instead of filenames.  Some restrictions apply --- it can only open "
"URLs for reading, and no seek operations are available."
msgstr ""

# b6a9ed1ad8bf43aa922e5e4fcca40163
#: ../Doc/library/urllib.rst:26
msgid ""
"When opening HTTPS URLs, it does not attempt to validate the server "
"certificate.  Use at your own risk!"
msgstr ""

# 3a103ba12191482bb3db82d85b832246
#: ../Doc/library/urllib.rst:31
msgid "High-level interface"
msgstr ""

# 64811e0a94f84a7a8d4af94b18378f0b
#: ../Doc/library/urllib.rst:35
msgid ""
"Open a network object denoted by a URL for reading.  If the URL does not "
"have a scheme identifier, or if it has :file:`file:` as its scheme "
"identifier, this opens a local file (without :term:`universal newlines`); "
"otherwise it opens a socket to a server somewhere on the network.  If the "
"connection cannot be made the :exc:`IOError` exception is raised.  If all "
"went well, a file-like object is returned.  This supports the following "
"methods: :meth:`read`, :meth:`readline`, :meth:`readlines`, :meth:`fileno`, :"
"meth:`close`, :meth:`info`, :meth:`getcode` and :meth:`geturl`.  It also has "
"proper support for the :term:`iterator` protocol. One caveat: the :meth:"
"`read` method, if the size argument is omitted or negative, may not read "
"until the end of the data stream; there is no good way to determine that the "
"entire stream from a socket has been read in the general case."
msgstr ""

# b6cca3c548fb4cd8b6c062198cd93f75
#: ../Doc/library/urllib.rst:48
msgid ""
"Except for the :meth:`info`, :meth:`getcode` and :meth:`geturl` methods, "
"these methods have the same interface as for file objects --- see section :"
"ref:`bltin-file-objects` in this manual.  (It is not a built-in file object, "
"however, so it can't be used at those few places where a true built-in file "
"object is required.)"
msgstr ""

# 44a48ccfdd2b49dca6755189d6bc474f
#: ../Doc/library/urllib.rst:56
msgid ""
"The :meth:`info` method returns an instance of the class :class:`mimetools."
"Message` containing meta-information associated with the URL.  When the "
"method is HTTP, these headers are those returned by the server at the head "
"of the retrieved HTML page (including Content-Length and Content-Type).  "
"When the method is FTP, a Content-Length header will be present if (as is "
"now usual) the server passed back a file length in response to the FTP "
"retrieval request. A Content-Type header will be present if the MIME type "
"can be guessed.  When the method is local-file, returned headers will "
"include a Date representing the file's last-modified time, a Content-Length "
"giving file size, and a Content-Type containing a guess at the file's type. "
"See also the description of the :mod:`mimetools` module."
msgstr ""

# 71a8d845b81a4f078f27d0207d06cd46
#: ../Doc/library/urllib.rst:68
msgid ""
"The :meth:`geturl` method returns the real URL of the page.  In some cases, "
"the HTTP server redirects a client to another URL.  The :func:`urlopen` "
"function handles this transparently, but in some cases the caller needs to "
"know which URL the client was redirected to.  The :meth:`geturl` method can "
"be used to get at this redirected URL."
msgstr ""

# 2809b4e8c542489cab942c0cc63f587a
#: ../Doc/library/urllib.rst:74
msgid ""
"The :meth:`getcode` method returns the HTTP status code that was sent with "
"the response, or ``None`` if the URL is no HTTP URL."
msgstr ""

# a25113a70bc54209877df31778c5e318
#: ../Doc/library/urllib.rst:77
msgid ""
"If the *url* uses the :file:`http:` scheme identifier, the optional *data* "
"argument may be given to specify a ``POST`` request (normally the request "
"type is ``GET``).  The *data* argument must be in standard :mimetype:"
"`application/x-www-form-urlencoded` format; see the :func:`urlencode` "
"function below."
msgstr ""

# 1f0c19e0772b4238966380b86a8119c0
#: ../Doc/library/urllib.rst:83
msgid ""
"The :func:`urlopen` function works transparently with proxies which do not "
"require authentication.  In a Unix or Windows environment, set the :envvar:"
"`http_proxy`, or :envvar:`ftp_proxy` environment variables to a URL that "
"identifies the proxy server before starting the Python interpreter.  For "
"example (the ``'%'`` is the command prompt)::"
msgstr ""

# e9cb7950d0ac4c1fba73aed7b9cc7c4b
#: ../Doc/library/urllib.rst:94
msgid ""
"The :envvar:`no_proxy` environment variable can be used to specify hosts "
"which shouldn't be reached via proxy; if set, it should be a comma-separated "
"list of hostname suffixes, optionally with ``:port`` appended, for example "
"``cern.ch,ncsa.uiuc.edu,some.host:8080``."
msgstr ""

# ce85087b80d34aa78e8df2e922959da2
#: ../Doc/library/urllib.rst:99
msgid ""
"In a Windows environment, if no proxy environment variables are set, proxy "
"settings are obtained from the registry's Internet Settings section."
msgstr ""

# a739ecccc928448a94ca23d56323abc9
#: ../Doc/library/urllib.rst:104
msgid ""
"In a Mac OS X  environment, :func:`urlopen` will retrieve proxy information "
"from the OS X System Configuration Framework, which can be managed with "
"Network System Preferences panel."
msgstr ""

# 12dc3de7d2924197acca879d358c1790
#: ../Doc/library/urllib.rst:109
msgid ""
"Alternatively, the optional *proxies* argument may be used to explicitly "
"specify proxies.  It must be a dictionary mapping scheme names to proxy "
"URLs, where an empty dictionary causes no proxies to be used, and ``None`` "
"(the default value) causes environmental proxy settings to be used as "
"discussed above.  For example::"
msgstr ""

# 2272dae6afb5481d81c1953eccc1e566
#: ../Doc/library/urllib.rst:124
msgid ""
"Proxies which require authentication for use are not currently supported; "
"this is considered an implementation limitation."
msgstr ""

#: ../Doc/library/urllib.rst:141
msgid ""
"Copy a network object denoted by a URL to a local file, if necessary. If the "
"URL points to a local file, or a valid cached copy of the object exists, the "
"object is not copied.  Return a tuple ``(filename, headers)`` where "
"*filename* is the local file name under which the object can be found, and "
"*headers* is whatever the :meth:`info` method of the object returned by :"
"func:`urlopen` returned (for a remote object, possibly cached). Exceptions "
"are the same as for :func:`urlopen`."
msgstr ""

#: ../Doc/library/urllib.rst:149
msgid ""
"The second argument, if present, specifies the file location to copy to (if "
"absent, the location will be a tempfile with a generated name). The third "
"argument, if present, is a hook function that will be called once on "
"establishment of the network connection and once after each block read "
"thereafter.  The hook will be passed three arguments; a count of blocks "
"transferred so far, a block size in bytes, and the total size of the file.  "
"The third argument may be ``-1`` on older FTP servers which do not return a "
"file size in response to a retrieval request."
msgstr ""

#: ../Doc/library/urllib.rst:158 ../Doc/library/urllib.rst:340
msgid ""
"If the *url* uses the :file:`http:` scheme identifier, the optional *data* "
"argument may be given to specify a ``POST`` request (normally the request "
"type is ``GET``).  The *data* argument must in standard :mimetype:"
"`application/x-www-form-urlencoded` format; see the :func:`urlencode` "
"function below."
msgstr ""

# 09ee12dbbe8843edb310261bf8c1f854
#: ../Doc/library/urllib.rst:170
msgid ""
"The *Content-Length* is treated as a lower bound: if there's more data  to "
"read, :func:`urlretrieve` reads more data, but if less data is available,  "
"it raises the exception."
msgstr ""

#: ../Doc/library/urllib.rst:174
msgid ""
"You can still retrieve the downloaded data in this case, it is stored  in "
"the :attr:`content` attribute of the exception instance."
msgstr ""

# 493069882eb3473b90e42d6cee97e7f2
#: ../Doc/library/urllib.rst:177
msgid ""
"If no *Content-Length* header was supplied, :func:`urlretrieve` can not "
"check the size of the data it has downloaded, and just returns it.  In this "
"case you just have to assume that the download was successful."
msgstr ""

# 849b389d6bee4a56b26bb683b685523d
#: ../Doc/library/urllib.rst:184
msgid ""
"The public functions :func:`urlopen` and :func:`urlretrieve` create an "
"instance of the :class:`FancyURLopener` class and use it to perform their "
"requested actions.  To override this functionality, programmers can create a "
"subclass of :class:`URLopener` or :class:`FancyURLopener`, then assign an "
"instance of that class to the ``urllib._urlopener`` variable before calling "
"the desired function. For example, applications may want to specify a "
"different :mailheader:`User-Agent` header than :class:`URLopener` defines.  "
"This can be accomplished with the following code::"
msgstr ""

#: ../Doc/library/urllib.rst:203
msgid ""
"Clear the cache that may have been built up by previous calls to :func:"
"`urlretrieve`."
msgstr ""

# d73bfd8855b8453db09fb0608391625c
#: ../Doc/library/urllib.rst:212
msgid ""
"Replace special characters in *string* using the ``%xx`` escape. Letters, "
"digits, and the characters ``'_.-'`` are never quoted. By default, this "
"function is intended for quoting the path section of the URL. The optional "
"*safe* parameter specifies additional characters that should not be quoted "
"--- its default value is ``'/'``."
msgstr ""

# b04ef35718934ace8ddd364d2d964c63
#: ../Doc/library/urllib.rst:218
msgid "Example: ``quote('/~connolly/')`` yields ``'/%7econnolly/'``."
msgstr ""

# fae60c3838a64cf4b6a6ccfa85abe4d3
#: ../Doc/library/urllib.rst:223
msgid ""
"Like :func:`quote`, but also replaces spaces by plus signs, as required for "
"quoting HTML form values when building up a query string to go into a URL. "
"Plus signs in the original string are escaped unless they are included in "
"*safe*.  It also does not have *safe* default to ``'/'``."
msgstr ""

# 86b471ebec77439689743b7091a5138a
#: ../Doc/library/urllib.rst:231
msgid "Replace ``%xx`` escapes by their single-character equivalent."
msgstr ""

# 0421f337e6dd4a3fb06d8c9fee322a17
#: ../Doc/library/urllib.rst:233
msgid "Example: ``unquote('/%7Econnolly/')`` yields ``'/~connolly/'``."
msgstr ""

# 77d20fa06d7d453aad4b16c0813f7ca4
#: ../Doc/library/urllib.rst:238
msgid ""
"Like :func:`unquote`, but also replaces plus signs by spaces, as required "
"for unquoting HTML form values."
msgstr ""

# be4dec2b384e454e936a8e071f8bf454
#: ../Doc/library/urllib.rst:244
msgid ""
"Convert a mapping object or a sequence of two-element tuples to a \"percent-"
"encoded\" string, suitable to pass to :func:`urlopen` above as the optional "
"*data* argument.  This is useful to pass a dictionary of form fields to a "
"``POST`` request.  The resulting string is a series of ``key=value`` pairs "
"separated by ``'&'`` characters, where both *key* and *value* are quoted "
"using :func:`quote_plus` above.  When a sequence of two-element tuples is "
"used as the *query* argument, the first element of each tuple is a key and "
"the second is a value. The value element in itself can be a sequence and in "
"that case, if the optional parameter *doseq* is evaluates to *True*, "
"individual ``key=value`` pairs separated by ``'&'`` are generated for each "
"element of the value sequence for the key.  The order of parameters in the "
"encoded string will match the order of parameter tuples in the sequence. "
"The :mod:`urlparse` module provides the functions :func:`parse_qs` and :func:"
"`parse_qsl` which are used to parse query strings into Python data "
"structures."
msgstr ""

#: ../Doc/library/urllib.rst:263
msgid ""
"Convert the pathname *path* from the local syntax for a path to the form "
"used in the path component of a URL.  This does not produce a complete URL.  "
"The return value will already be quoted using the :func:`quote` function."
msgstr ""

# fb279202e1bc4d3f87d6c3dcb5f29b2e
#: ../Doc/library/urllib.rst:270
msgid ""
"Convert the path component *path* from an percent-encoded URL to the local "
"syntax for a path.  This does not accept a complete URL.  This function "
"uses :func:`unquote` to decode *path*."
msgstr ""

# 7f29d49f1ef74ae5b18a1b031abd2c8b
#: ../Doc/library/urllib.rst:277
msgid ""
"This helper function returns a dictionary of scheme to proxy server URL "
"mappings. It scans the environment for variables named ``<scheme>_proxy``, "
"in case insensitive way, for all operating systems first, and when it cannot "
"find it, looks for proxy information from Mac OSX System Configuration for "
"Mac OS X and Windows Systems Registry for Windows."
msgstr ""

# e6dcdd4963204cc0af26a522839a0818
#: ../Doc/library/urllib.rst:285
msgid "URL Opener objects"
msgstr ""

#: ../Doc/library/urllib.rst:289
msgid ""
"Base class for opening and reading URLs.  Unless you need to support opening "
"objects using schemes other than :file:`http:`, :file:`ftp:`, or :file:`file:"
"`, you probably want to use :class:`FancyURLopener`."
msgstr ""

#: ../Doc/library/urllib.rst:293
msgid ""
"By default, the :class:`URLopener` class sends a :mailheader:`User-Agent` "
"header of ``urllib/VVV``, where *VVV* is the :mod:`urllib` version number. "
"Applications can define their own :mailheader:`User-Agent` header by "
"subclassing :class:`URLopener` or :class:`FancyURLopener` and setting the "
"class attribute :attr:`version` to an appropriate string value in the "
"subclass definition."
msgstr ""

#: ../Doc/library/urllib.rst:299
msgid ""
"The optional *proxies* parameter should be a dictionary mapping scheme names "
"to proxy URLs, where an empty dictionary turns proxies off completely.  Its "
"default value is ``None``, in which case environmental proxy settings will "
"be used if present, as discussed in the definition of :func:`urlopen`, above."
msgstr ""

#: ../Doc/library/urllib.rst:304
msgid ""
"Additional keyword parameters, collected in *x509*, may be used for "
"authentication of the client when using the :file:`https:` scheme.  The "
"keywords *key_file* and *cert_file* are supported to provide an  SSL key and "
"certificate; both are needed to support client authentication."
msgstr ""

#: ../Doc/library/urllib.rst:309
msgid ""
":class:`URLopener` objects will raise an :exc:`IOError` exception if the "
"server returns an error code."
msgstr ""

#: ../Doc/library/urllib.rst:314
msgid ""
"Open *fullurl* using the appropriate protocol.  This method sets up cache "
"and proxy information, then calls the appropriate open method with its input "
"arguments.  If the scheme is not recognized, :meth:`open_unknown` is called. "
"The *data* argument has the same meaning as the *data* argument of :func:"
"`urlopen`."
msgstr ""

#: ../Doc/library/urllib.rst:323
msgid "Overridable interface to open unknown URL types."
msgstr ""

# 4ec8f2a6ba564c259d8994d6229c34cd
#: ../Doc/library/urllib.rst:328
msgid ""
"Retrieves the contents of *url* and places it in *filename*.  The return "
"value is a tuple consisting of a local filename and either a :class:"
"`mimetools.Message` object containing the response headers (for remote URLs) "
"or ``None`` (for local URLs).  The caller must then open and read the "
"contents of *filename*.  If *filename* is not given and the URL refers to a "
"local file, the input filename is returned.  If the URL is non-local and "
"*filename* is not given, the filename is the output of :func:`tempfile."
"mktemp` with a suffix that matches the suffix of the last path component of "
"the input URL.  If *reporthook* is given, it must be a function accepting "
"three numeric parameters.  It will be called after each chunk of data is "
"read from the network.  *reporthook* is ignored for local URLs."
msgstr ""

#: ../Doc/library/urllib.rst:349
msgid ""
"Variable that specifies the user agent of the opener object.  To get :mod:"
"`urllib` to tell servers that it is a particular user agent, set this in a "
"subclass as a class variable or in the constructor before calling the base "
"constructor."
msgstr ""

#: ../Doc/library/urllib.rst:357
msgid ""
":class:`FancyURLopener` subclasses :class:`URLopener` providing default "
"handling for the following HTTP response codes: 301, 302, 303, 307 and 401.  "
"For the 30x response codes listed above, the :mailheader:`Location` header "
"is used to fetch the actual URL.  For 401 response codes (authentication "
"required), basic HTTP authentication is performed.  For the 30x response "
"codes, recursion is bounded by the value of the *maxtries* attribute, which "
"defaults to 10."
msgstr ""

#: ../Doc/library/urllib.rst:364
msgid ""
"For all other response codes, the method :meth:`http_error_default` is "
"called which you can override in subclasses to handle the error "
"appropriately."
msgstr ""

#: ../Doc/library/urllib.rst:369
msgid ""
"According to the letter of :rfc:`2616`, 301 and 302 responses to POST "
"requests must not be automatically redirected without confirmation by the "
"user.  In reality, browsers do allow automatic redirection of these "
"responses, changing the POST to a GET, and :mod:`urllib` reproduces this "
"behaviour."
msgstr ""

#: ../Doc/library/urllib.rst:374
msgid ""
"The parameters to the constructor are the same as those for :class:"
"`URLopener`."
msgstr ""

#: ../Doc/library/urllib.rst:378
msgid ""
"When performing basic authentication, a :class:`FancyURLopener` instance "
"calls its :meth:`prompt_user_passwd` method.  The default implementation "
"asks the users for the required information on the controlling terminal.  A "
"subclass may override this method to support more appropriate behavior if "
"needed."
msgstr ""

#: ../Doc/library/urllib.rst:383
msgid ""
"The :class:`FancyURLopener` class offers one additional method that should "
"be overloaded to provide the appropriate behavior:"
msgstr ""

#: ../Doc/library/urllib.rst:388
msgid ""
"Return information needed to authenticate the user at the given host in the "
"specified security realm.  The return value should be a tuple, ``(user, "
"password)``, which can be used for basic authentication."
msgstr ""

#: ../Doc/library/urllib.rst:392
msgid ""
"The implementation prompts for this information on the terminal; an "
"application should override this method to use an appropriate interaction "
"model in the local environment."
msgstr ""

# 0902ae013fec4726b6d9934f37d6f75a
#: ../Doc/library/urllib.rst:398
msgid ""
"This exception is raised when the :func:`urlretrieve` function detects that "
"the amount of the downloaded data is less than the  expected amount (given "
"by the *Content-Length* header). The :attr:`content` attribute stores the "
"downloaded (and supposedly truncated) data."
msgstr ""

# 384b065cd232497b932b6fb6a9169c4e
#: ../Doc/library/urllib.rst:407
msgid ":mod:`urllib` Restrictions"
msgstr ""

#: ../Doc/library/urllib.rst:413
msgid ""
"Currently, only the following protocols are supported: HTTP, (versions 0.9 "
"and 1.0),  FTP, and local files."
msgstr ""

#: ../Doc/library/urllib.rst:416
msgid ""
"The caching feature of :func:`urlretrieve` has been disabled until I find "
"the time to hack proper processing of Expiration time headers."
msgstr ""

#: ../Doc/library/urllib.rst:419
msgid ""
"There should be a function to query whether a particular URL is in the cache."
msgstr ""

#: ../Doc/library/urllib.rst:421
msgid ""
"For backward compatibility, if a URL appears to point to a local file but "
"the file can't be opened, the URL is re-interpreted using the FTP protocol.  "
"This can sometimes cause confusing error messages."
msgstr ""

#: ../Doc/library/urllib.rst:425
msgid ""
"The :func:`urlopen` and :func:`urlretrieve` functions can cause arbitrarily "
"long delays while waiting for a network connection to be set up.  This means "
"that it is difficult to build an interactive Web client using these "
"functions without using threads."
msgstr ""

# 75f07c8749ac422990770d528cadb330
#: ../Doc/library/urllib.rst:435
msgid ""
"The data returned by :func:`urlopen` or :func:`urlretrieve` is the raw data "
"returned by the server.  This may be binary data (such as an image), plain "
"text or (for example) HTML.  The HTTP protocol provides type information in "
"the reply header, which can be inspected by looking at the :mailheader:"
"`Content-Type` header.  If the returned data is HTML, you can use the "
"module :mod:`htmllib` to parse it."
msgstr ""

# 66ca0898404f4a649076b82949aa344c
#: ../Doc/library/urllib.rst:444
msgid ""
"The code handling the FTP protocol cannot differentiate between a file and a "
"directory.  This can lead to unexpected behavior when attempting to read a "
"URL that points to a file that is not accessible.  If the URL ends in a ``/"
"``, it is assumed to refer to a directory and will be handled accordingly.  "
"But if an attempt to read a file leads to a 550 error (meaning the URL "
"cannot be found or is not accessible, often for permission reasons), then "
"the path is treated as a directory in order to handle the case when a "
"directory is specified by a URL but the trailing ``/`` has been left off.  "
"This can cause misleading results when you try to fetch a file whose read "
"permissions make it inaccessible; the FTP code will try to read it, fail "
"with a 550 error, and then perform a directory listing for the unreadable "
"file. If fine-grained control is needed, consider using the :mod:`ftplib` "
"module, subclassing :class:`FancyURLopener`, or changing *_urlopener* to "
"meet your needs."
msgstr ""

# a9461b7c292945588ee13c9dfe60b557
#: ../Doc/library/urllib.rst:458
msgid ""
"This module does not support the use of proxies which require "
"authentication. This may be implemented in the future."
msgstr ""

# 7be433e506ee41a49170e247485f4ca5
#: ../Doc/library/urllib.rst:463
msgid ""
"Although the :mod:`urllib` module contains (undocumented) routines to parse "
"and unparse URL strings, the recommended interface for URL manipulation is "
"in module :mod:`urlparse`."
msgstr ""

#: ../Doc/library/urllib.rst:473
msgid ""
"Here is an example session that uses the ``GET`` method to retrieve a URL "
"containing parameters::"
msgstr ""

#: ../Doc/library/urllib.rst:481
msgid "The following example uses the ``POST`` method instead::"
msgstr ""

#: ../Doc/library/urllib.rst:488
msgid ""
"The following example uses an explicitly specified HTTP proxy, overriding "
"environment settings::"
msgstr ""

#: ../Doc/library/urllib.rst:497
msgid ""
"The following example uses no proxies at all, overriding environment "
"settings::"
msgstr ""

# 519b66d7e5fb49dcbac42cde4f01e488
#: ../Doc/library/urllib2.rst:2
msgid ":mod:`urllib2` --- extensible library for opening URLs"
msgstr ""

# 0882831ce684462798b6de7b13f28e1a
#: ../Doc/library/urllib2.rst:11
msgid ""
"The :mod:`urllib2` module has been split across several modules in Python 3 "
"named :mod:`urllib.request` and :mod:`urllib.error`. The :term:`2to3` tool "
"will automatically adapt imports when converting your sources to Python 3."
msgstr ""

# af5ff3996b6e4f35a3c0ebf5797667f5
#: ../Doc/library/urllib2.rst:17
msgid ""
"The :mod:`urllib2` module defines functions and classes which help in "
"opening URLs (mostly HTTP) in a complex world --- basic and digest "
"authentication, redirections, cookies and more."
msgstr ""

# 8f832b2abcbc445aae9ca8fcdb7cea6e
#: ../Doc/library/urllib2.rst:22
msgid "The :mod:`urllib2` module defines the following functions:"
msgstr ""

#: ../Doc/library/urllib2.rst:27
msgid ""
"Open the URL *url*, which can be either a string or a :class:`Request` "
"object."
msgstr ""

# 33920a5b47b04a7ba9b34febea649be5
#: ../Doc/library/urllib2.rst:30
msgid "HTTPS requests do not do any verification of the server's certificate."
msgstr ""

# 9584365de13d44a6859beadd3502ed20
#: ../Doc/library/urllib2.rst:32
msgid ""
"*data* may be a string specifying additional data to send to the server, or "
"``None`` if no such data is needed.  Currently HTTP requests are the only "
"ones that use *data*; the HTTP request will be a POST instead of a GET when "
"the *data* parameter is provided.  *data* should be a buffer in the "
"standard :mimetype:`application/x-www-form-urlencoded` format.  The :func:"
"`urllib.urlencode` function takes a mapping or sequence of 2-tuples and "
"returns a string in this format. urllib2 module sends HTTP/1.1 requests with "
"``Connection:close`` header included."
msgstr ""

# 67f2d332b85d4919bdddb9251fdd4efc
#: ../Doc/library/urllib2.rst:41
msgid ""
"The optional *timeout* parameter specifies a timeout in seconds for blocking "
"operations like the connection attempt (if not specified, the global default "
"timeout setting will be used).  This actually only works for HTTP, HTTPS and "
"FTP connections."
msgstr ""

# 4bbb3d29725d49b2ac6c254973eb28c0
#: ../Doc/library/urllib2.rst:46
msgid "This function returns a file-like object with two additional methods:"
msgstr ""

#: ../Doc/library/urllib2.rst:48
msgid ""
":meth:`geturl` --- return the URL of the resource retrieved, commonly used "
"to determine if a redirect was followed"
msgstr ""

# 644ed20ef0aa464f921e576d75fc05a0
#: ../Doc/library/urllib2.rst:51
msgid ""
":meth:`info` --- return the meta-information of the page, such as headers, "
"in the form of an :class:`mimetools.Message` instance (see `Quick Reference "
"to HTTP Headers <http://www.cs.tut.fi/~jkorpela/http.html>`_)"
msgstr ""

#: ../Doc/library/urllib2.rst:55
msgid "Raises :exc:`URLError` on errors."
msgstr ""

#: ../Doc/library/urllib2.rst:57
msgid ""
"Note that ``None`` may be returned if no handler handles the request (though "
"the default installed global :class:`OpenerDirector` uses :class:"
"`UnknownHandler` to ensure this never happens)."
msgstr ""

#: ../Doc/library/urllib2.rst:61
msgid ""
"In addition, default installed :class:`ProxyHandler` makes sure the requests "
"are handled through the proxy when they are set."
msgstr ""

#: ../Doc/library/urllib2.rst:70
msgid ""
"Install an :class:`OpenerDirector` instance as the default global opener. "
"Installing an opener is only necessary if you want urlopen to use that "
"opener; otherwise, simply call :meth:`OpenerDirector.open` instead of :func:"
"`urlopen`. The code does not check for a real :class:`OpenerDirector`, and "
"any class with the appropriate interface will work."
msgstr ""

#: ../Doc/library/urllib2.rst:79
msgid ""
"Return an :class:`OpenerDirector` instance, which chains the handlers in the "
"order given. *handler*\\s can be either instances of :class:`BaseHandler`, "
"or subclasses of :class:`BaseHandler` (in which case it must be possible to "
"call the constructor without any parameters).  Instances of the following "
"classes will be in front of the *handler*\\s, unless the *handler*\\s "
"contain them, instances of them or subclasses of them: :class:"
"`ProxyHandler`, :class:`UnknownHandler`, :class:`HTTPHandler`, :class:"
"`HTTPDefaultErrorHandler`, :class:`HTTPRedirectHandler`, :class:"
"`FTPHandler`, :class:`FileHandler`, :class:`HTTPErrorProcessor`."
msgstr ""

#: ../Doc/library/urllib2.rst:89
msgid ""
"If the Python installation has SSL support (i.e., if the :mod:`ssl` module "
"can be imported), :class:`HTTPSHandler` will also be added."
msgstr ""

# 0ca6151c1bba451b8cc78cdc6a05f575
#: ../Doc/library/urllib2.rst:92
msgid ""
"Beginning in Python 2.3, a :class:`BaseHandler` subclass may also change "
"its :attr:`handler_order` attribute to modify its position in the handlers "
"list."
msgstr ""

#: ../Doc/library/urllib2.rst:101
msgid ""
"The handlers raise this exception (or derived exceptions) when they run into "
"a problem.  It is a subclass of :exc:`IOError`."
msgstr ""

#: ../Doc/library/urllib2.rst:106
msgid ""
"The reason for this error.  It can be a message string or another exception "
"instance (:exc:`socket.error` for remote URLs, :exc:`OSError` for local "
"URLs)."
msgstr ""

#: ../Doc/library/urllib2.rst:113
msgid ""
"Though being an exception (a subclass of :exc:`URLError`), an :exc:"
"`HTTPError` can also function as a non-exceptional file-like return value "
"(the same thing that :func:`urlopen` returns).  This is useful when handling "
"exotic HTTP errors, such as requests for authentication."
msgstr ""

# df68f60a933f4920862d7a6b33833911
#: ../Doc/library/urllib2.rst:120
msgid ""
"An HTTP status code as defined in `RFC 2616 <http://www.faqs.org/rfcs/"
"rfc2616.html>`_. This numeric value corresponds to a value found in the "
"dictionary of codes as found in :attr:`BaseHTTPServer.BaseHTTPRequestHandler."
"responses`."
msgstr ""

#: ../Doc/library/urllib2.rst:131
msgid "This class is an abstraction of a URL request."
msgstr ""

#: ../Doc/library/urllib2.rst:133
msgid "*url* should be a string containing a valid URL."
msgstr ""

# d711a92f369d48a1a8dc56836d100400
#: ../Doc/library/urllib2.rst:135
msgid ""
"*data* may be a string specifying additional data to send to the server, or "
"``None`` if no such data is needed.  Currently HTTP requests are the only "
"ones that use *data*; the HTTP request will be a POST instead of a GET when "
"the *data* parameter is provided.  *data* should be a buffer in the "
"standard :mimetype:`application/x-www-form-urlencoded` format.  The :func:"
"`urllib.urlencode` function takes a mapping or sequence of 2-tuples and "
"returns a string in this format."
msgstr ""

# eb8833c3587f46eda3ee459b59bec14d
#: ../Doc/library/urllib2.rst:143
msgid ""
"*headers* should be a dictionary, and will be treated as if :meth:"
"`add_header` was called with each key and value as arguments.  This is often "
"used to \"spoof\" the ``User-Agent`` header, which is used by a browser to "
"identify itself -- some HTTP servers only allow requests coming from common "
"browsers as opposed to scripts.  For example, Mozilla Firefox may identify "
"itself as ``\"Mozilla/5.0 (X11; U; Linux i686) Gecko/20071127 "
"Firefox/2.0.0.11\"``, while :mod:`urllib2`'s default user agent string is ``"
"\"Python-urllib/2.6\"`` (on Python 2.6)."
msgstr ""

#: ../Doc/library/urllib2.rst:151
msgid ""
"The final two arguments are only of interest for correct handling of third-"
"party HTTP cookies:"
msgstr ""

# 881b8bc0b9a64a4ab4a6dad4f127e757
#: ../Doc/library/urllib2.rst:154
msgid ""
"*origin_req_host* should be the request-host of the origin transaction, as "
"defined by :rfc:`2965`.  It defaults to ``cookielib.request_host(self)``.  "
"This is the host name or IP address of the original request that was "
"initiated by the user.  For example, if the request is for an image in an "
"HTML document, this should be the request-host of the request for the page "
"containing the image."
msgstr ""

#: ../Doc/library/urllib2.rst:160
msgid ""
"*unverifiable* should indicate whether the request is unverifiable, as "
"defined by RFC 2965.  It defaults to False.  An unverifiable request is one "
"whose URL the user did not have the option to approve.  For example, if the "
"request is for an image in an HTML document, and the user had no option to "
"approve the automatic fetching of the image, this should be true."
msgstr ""

#: ../Doc/library/urllib2.rst:169
msgid ""
"The :class:`OpenerDirector` class opens URLs via :class:`BaseHandler`\\ s "
"chained together. It manages the chaining of handlers, and recovery from "
"errors."
msgstr ""

#: ../Doc/library/urllib2.rst:175
msgid ""
"This is the base class for all registered handlers --- and handles only the "
"simple mechanics of registration."
msgstr ""

#: ../Doc/library/urllib2.rst:181
msgid ""
"A class which defines a default handler for HTTP error responses; all "
"responses are turned into :exc:`HTTPError` exceptions."
msgstr ""

#: ../Doc/library/urllib2.rst:187
msgid "A class to handle redirections."
msgstr ""

#: ../Doc/library/urllib2.rst:192
msgid "A class to handle HTTP Cookies."
msgstr ""

# 7df9729afd8046aaaf72aec72ab239b7
#: ../Doc/library/urllib2.rst:197
msgid ""
"Cause requests to go through a proxy. If *proxies* is given, it must be a "
"dictionary mapping protocol names to URLs of proxies. The default is to read "
"the list of proxies from the environment variables :envvar:"
"`<protocol>_proxy`.  If no proxy environment variables are set, in a Windows "
"environment, proxy settings are obtained from the registry's Internet "
"Settings section and in a Mac OS X  environment, proxy information is "
"retrieved from the OS X System Configuration Framework."
msgstr ""

#: ../Doc/library/urllib2.rst:205
msgid "To disable autodetected proxy pass an empty dictionary."
msgstr ""

#: ../Doc/library/urllib2.rst:210
msgid "Keep a database of  ``(realm, uri) -> (user, password)`` mappings."
msgstr ""

#: ../Doc/library/urllib2.rst:215
msgid ""
"Keep a database of  ``(realm, uri) -> (user, password)`` mappings. A realm "
"of ``None`` is considered a catch-all realm, which is searched if no other "
"realm fits."
msgstr ""

#: ../Doc/library/urllib2.rst:222 ../Doc/library/urllib2.rst:247
msgid ""
"This is a mixin class that helps with HTTP authentication, both to the "
"remote host and to a proxy. *password_mgr*, if given, should be something "
"that is compatible with :class:`HTTPPasswordMgr`; refer to section :ref:"
"`http-password-mgr` for information on the interface that must be supported."
msgstr ""

#: ../Doc/library/urllib2.rst:231 ../Doc/library/urllib2.rst:256
msgid ""
"Handle authentication with the remote host. *password_mgr*, if given, should "
"be something that is compatible with :class:`HTTPPasswordMgr`; refer to "
"section :ref:`http-password-mgr` for information on the interface that must "
"be supported."
msgstr ""

#: ../Doc/library/urllib2.rst:239 ../Doc/library/urllib2.rst:264
msgid ""
"Handle authentication with the proxy. *password_mgr*, if given, should be "
"something that is compatible with :class:`HTTPPasswordMgr`; refer to "
"section :ref:`http-password-mgr` for information on the interface that must "
"be supported."
msgstr ""

#: ../Doc/library/urllib2.rst:272
msgid "A class to handle opening of HTTP URLs."
msgstr ""

#: ../Doc/library/urllib2.rst:277
msgid "A class to handle opening of HTTPS URLs."
msgstr ""

#: ../Doc/library/urllib2.rst:282
msgid "Open local files."
msgstr ""

#: ../Doc/library/urllib2.rst:287
msgid "Open FTP URLs."
msgstr ""

#: ../Doc/library/urllib2.rst:292
msgid ""
"Open FTP URLs, keeping a cache of open FTP connections to minimize delays."
msgstr ""

#: ../Doc/library/urllib2.rst:297
msgid "A catch-all class to handle unknown URLs."
msgstr ""

#: ../Doc/library/urllib2.rst:302 ../Doc/library/urllib2.rst:902
msgid "Process HTTP error responses."
msgstr ""

#: ../Doc/library/urllib2.rst:308
msgid "Request Objects"
msgstr ""

# 9b4610c9a15b49e6a48f9e40cf9d1c73
#: ../Doc/library/urllib2.rst:310
msgid ""
"The following methods describe all of :class:`Request`'s public interface, "
"and so all must be overridden in subclasses."
msgstr ""

#: ../Doc/library/urllib2.rst:316
msgid ""
"Set the :class:`Request` data to *data*.  This is ignored by all handlers "
"except HTTP handlers --- and there it should be a byte string, and will "
"change the request to be ``POST`` rather than ``GET``."
msgstr ""

#: ../Doc/library/urllib2.rst:323
msgid ""
"Return a string indicating the HTTP request method.  This is only meaningful "
"for HTTP requests, and currently always returns ``'GET'`` or ``'POST'``."
msgstr ""

#: ../Doc/library/urllib2.rst:329
msgid "Return whether the instance has a non-\\ ``None`` data."
msgstr ""

#: ../Doc/library/urllib2.rst:334
msgid "Return the instance's data."
msgstr ""

#: ../Doc/library/urllib2.rst:339
msgid ""
"Add another header to the request.  Headers are currently ignored by all "
"handlers except HTTP handlers, where they are added to the list of headers "
"sent to the server.  Note that there cannot be more than one header with the "
"same name, and later calls will overwrite previous calls in case the *key* "
"collides. Currently, this is no loss of HTTP functionality, since all "
"headers which have meaning when used more than once have a (header-specific) "
"way of gaining the same functionality using only one header."
msgstr ""

#: ../Doc/library/urllib2.rst:350
msgid "Add a header that will not be added to a redirected request."
msgstr ""

#: ../Doc/library/urllib2.rst:357
msgid ""
"Return whether the instance has the named header (checks both regular and "
"unredirected)."
msgstr ""

#: ../Doc/library/urllib2.rst:365
msgid "Return the URL given in the constructor."
msgstr ""

#: ../Doc/library/urllib2.rst:370
msgid "Return the type of the URL --- also known as the scheme."
msgstr ""

#: ../Doc/library/urllib2.rst:375
msgid "Return the host to which a connection will be made."
msgstr ""

#: ../Doc/library/urllib2.rst:380
msgid "Return the selector --- the part of the URL that is sent to the server."
msgstr ""

# a8daa94be4dd4041bda486ca81ffc513
#: ../Doc/library/urllib2.rst:385
msgid ""
"Return the value of the given header. If the header is not present, return "
"the default value."
msgstr ""

# 45fb8685a0384ecd901d30bba656b236
#: ../Doc/library/urllib2.rst:391
msgid ""
"Return a list of tuples (header_name, header_value) of the Request headers."
msgstr ""

#: ../Doc/library/urllib2.rst:396
msgid ""
"Prepare the request by connecting to a proxy server. The *host* and *type* "
"will replace those of the instance, and the instance's selector will be the "
"original URL given in the constructor."
msgstr ""

#: ../Doc/library/urllib2.rst:403
msgid ""
"Return the request-host of the origin transaction, as defined by :rfc:"
"`2965`. See the documentation for the :class:`Request` constructor."
msgstr ""

#: ../Doc/library/urllib2.rst:409
msgid ""
"Return whether the request is unverifiable, as defined by RFC 2965. See the "
"documentation for the :class:`Request` constructor."
msgstr ""

#: ../Doc/library/urllib2.rst:416
msgid "OpenerDirector Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:418
msgid ":class:`OpenerDirector` instances have the following methods:"
msgstr ""

#: ../Doc/library/urllib2.rst:423
msgid ""
"*handler* should be an instance of :class:`BaseHandler`.  The following "
"methods are searched, and added to the possible chains (note that HTTP "
"errors are a special case)."
msgstr ""

# d6d62bef446a4230b68bb76f5b65514d
#: ../Doc/library/urllib2.rst:427
msgid ""
":samp:`{protocol}_open` --- signal that the handler knows how to open "
"*protocol* URLs."
msgstr ""

# e7727764067e49f7aea13ea4d156aece
#: ../Doc/library/urllib2.rst:430
msgid ""
":samp:`http_error_{type}` --- signal that the handler knows how to handle "
"HTTP errors with HTTP error code *type*."
msgstr ""

# 6de361fde6734cc8a769d0df02e303b1
#: ../Doc/library/urllib2.rst:433
msgid ""
":samp:`{protocol}_error` --- signal that the handler knows how to handle "
"errors from (non-\\ ``http``) *protocol*."
msgstr ""

# e7a5098aa42744d7a4c30f47aa1dca9d
#: ../Doc/library/urllib2.rst:436
msgid ""
":samp:`{protocol}_request` --- signal that the handler knows how to pre-"
"process *protocol* requests."
msgstr ""

# d8b1d45d5fc0426d994fba7ab8d44692
#: ../Doc/library/urllib2.rst:439
msgid ""
":samp:`{protocol}_response` --- signal that the handler knows how to post-"
"process *protocol* responses."
msgstr ""

# bf0785ab112f4124af9612efaaca9758
#: ../Doc/library/urllib2.rst:445
msgid ""
"Open the given *url* (which can be a request object or a string), optionally "
"passing the given *data*. Arguments, return values and exceptions raised are "
"the same as those of :func:`urlopen` (which simply calls the :meth:`open` "
"method on the currently installed global :class:`OpenerDirector`).  The "
"optional *timeout* parameter specifies a timeout in seconds for blocking "
"operations like the connection attempt (if not specified, the global default "
"timeout setting will be used). The timeout feature actually works only for "
"HTTP, HTTPS and FTP connections)."
msgstr ""

#: ../Doc/library/urllib2.rst:460
msgid ""
"Handle an error of the given protocol.  This will call the registered error "
"handlers for the given protocol with the given arguments (which are protocol "
"specific).  The HTTP protocol is a special case which uses the HTTP response "
"code to determine the specific error handler; refer to the :meth:`http_error_"
"\\*` methods of the handler classes."
msgstr ""

#: ../Doc/library/urllib2.rst:466
msgid ""
"Return values and exceptions raised are the same as those of :func:`urlopen`."
msgstr ""

#: ../Doc/library/urllib2.rst:468
msgid "OpenerDirector objects open URLs in three stages:"
msgstr ""

#: ../Doc/library/urllib2.rst:470
msgid ""
"The order in which these methods are called within each stage is determined "
"by sorting the handler instances."
msgstr ""

# 3a409d5e9b184af28fb42381989f2792
#: ../Doc/library/urllib2.rst:473
msgid ""
"Every handler with a method named like :samp:`{protocol}_request` has that "
"method called to pre-process the request."
msgstr ""

# e69c9fddb9f841599036d4c23a83c44d
#: ../Doc/library/urllib2.rst:476
msgid ""
"Handlers with a method named like :samp:`{protocol}_open` are called to "
"handle the request. This stage ends when a handler either returns a non-\\ :"
"const:`None` value (ie. a response), or raises an exception (usually :exc:"
"`URLError`). Exceptions are allowed to propagate."
msgstr ""

# 8431ee53c6854f85964b5cd07b296a1c
#: ../Doc/library/urllib2.rst:481
msgid ""
"In fact, the above algorithm is first tried for methods named :meth:"
"`default_open`.  If all such methods return :const:`None`, the algorithm is "
"repeated for methods named like :samp:`{protocol}_open`.  If all such "
"methods return :const:`None`, the algorithm is repeated for methods named :"
"meth:`unknown_open`."
msgstr ""

# 32ad9787dce6498faa62fa267eaeb1b5
#: ../Doc/library/urllib2.rst:487
msgid ""
"Note that the implementation of these methods may involve calls of the "
"parent :class:`OpenerDirector` instance's :meth:`~OpenerDirector.open` and :"
"meth:`~OpenerDirector.error` methods."
msgstr ""

# 77c6c6018fe54b69a51add4ca4ad8c66
#: ../Doc/library/urllib2.rst:491
msgid ""
"Every handler with a method named like :samp:`{protocol}_response` has that "
"method called to post-process the response."
msgstr ""

#: ../Doc/library/urllib2.rst:498
msgid "BaseHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:500
msgid ""
":class:`BaseHandler` objects provide a couple of methods that are directly "
"useful, and others that are meant to be used by derived classes.  These are "
"intended for direct use:"
msgstr ""

#: ../Doc/library/urllib2.rst:507
msgid "Add a director as parent."
msgstr ""

#: ../Doc/library/urllib2.rst:512
msgid "Remove any parents."
msgstr ""

# 345305de996e4a5b99ed11999d9cafac
#: ../Doc/library/urllib2.rst:514
msgid ""
"The following attributes and methods should only be used by classes derived "
"from :class:`BaseHandler`."
msgstr ""

#: ../Doc/library/urllib2.rst:519
msgid ""
"The convention has been adopted that subclasses defining :meth:"
"`protocol_request` or :meth:`protocol_response` methods are named :class:`"
"\\*Processor`; all others are named :class:`\\*Handler`."
msgstr ""

#: ../Doc/library/urllib2.rst:526
msgid ""
"A valid :class:`OpenerDirector`, which can be used to open using a different "
"protocol, or handle errors."
msgstr ""

#: ../Doc/library/urllib2.rst:532
msgid ""
"This method is *not* defined in :class:`BaseHandler`, but subclasses should "
"define it if they want to catch all URLs."
msgstr ""

#: ../Doc/library/urllib2.rst:535
msgid ""
"This method, if implemented, will be called by the parent :class:"
"`OpenerDirector`.  It should return a file-like object as described in the "
"return value of the :meth:`open` of :class:`OpenerDirector`, or ``None``. It "
"should raise :exc:`URLError`, unless a truly exceptional thing happens (for "
"example, :exc:`MemoryError` should not be mapped to :exc:`URLError`)."
msgstr ""

#: ../Doc/library/urllib2.rst:541
msgid "This method will be called before any protocol-specific open method."
msgstr ""

# dc792086baa64b73bdd2c53a75d4396a
# d603880f707f410ab686055e647c1e21
# ed9d9b2c3fb34f1c9f93f4587375435b
# 7deeb0d1a93c46408e2d40305fe7090e
#: ../Doc/library/urllib2.rst:547 ../Doc/library/urllib2.rst:598
#: ../Doc/library/urllib2.rst:611 ../Doc/library/urllib2.rst:700
msgid "(\"protocol\" is to be replaced by the protocol name.)"
msgstr ""

# 98a9d691f22f4635a7ccab0a85eba557
#: ../Doc/library/urllib2.rst:549
msgid ""
"This method is *not* defined in :class:`BaseHandler`, but subclasses should "
"define it if they want to handle URLs with the given *protocol*."
msgstr ""

#: ../Doc/library/urllib2.rst:552
msgid ""
"This method, if defined, will be called by the parent :class:"
"`OpenerDirector`. Return values should be the same as for  :meth:"
"`default_open`."
msgstr ""

#: ../Doc/library/urllib2.rst:558
msgid ""
"This method is *not* defined in :class:`BaseHandler`, but subclasses should "
"define it if they want to catch all URLs with no specific registered handler "
"to open it."
msgstr ""

#: ../Doc/library/urllib2.rst:562
msgid ""
"This method, if implemented, will be called by the :attr:`parent` :class:"
"`OpenerDirector`.  Return values should be the same as for :meth:"
"`default_open`."
msgstr ""

#: ../Doc/library/urllib2.rst:569
msgid ""
"This method is *not* defined in :class:`BaseHandler`, but subclasses should "
"override it if they intend to provide a catch-all for otherwise unhandled "
"HTTP errors.  It will be called automatically by the  :class:"
"`OpenerDirector` getting the error, and should not normally be called in "
"other circumstances."
msgstr ""

#: ../Doc/library/urllib2.rst:574
msgid ""
"*req* will be a :class:`Request` object, *fp* will be a file-like object "
"with the HTTP error body, *code* will be the three-digit code of the error, "
"*msg* will be the user-visible explanation of the code and *hdrs* will be a "
"mapping object with the headers of the error."
msgstr ""

#: ../Doc/library/urllib2.rst:579
msgid ""
"Return values and exceptions raised should be the same as those of :func:"
"`urlopen`."
msgstr ""

#: ../Doc/library/urllib2.rst:585
msgid ""
"*nnn* should be a three-digit HTTP error code.  This method is also not "
"defined in :class:`BaseHandler`, but will be called, if it exists, on an "
"instance of a subclass, when an HTTP error with code *nnn* occurs."
msgstr ""

#: ../Doc/library/urllib2.rst:589
msgid "Subclasses should override this method to handle specific HTTP errors."
msgstr ""

#: ../Doc/library/urllib2.rst:591
msgid ""
"Arguments, return values and exceptions raised should be the same as for :"
"meth:`http_error_default`."
msgstr ""

# ce2affdc09c049b4b4a55f9e10e07395
#: ../Doc/library/urllib2.rst:600
msgid ""
"This method is *not* defined in :class:`BaseHandler`, but subclasses should "
"define it if they want to pre-process requests of the given *protocol*."
msgstr ""

#: ../Doc/library/urllib2.rst:603
msgid ""
"This method, if defined, will be called by the parent :class:"
"`OpenerDirector`. *req* will be a :class:`Request` object. The return value "
"should be a :class:`Request` object."
msgstr ""

# 71d9e12098934cbd8df81fc115a89c95
#: ../Doc/library/urllib2.rst:613
msgid ""
"This method is *not* defined in :class:`BaseHandler`, but subclasses should "
"define it if they want to post-process responses of the given *protocol*."
msgstr ""

#: ../Doc/library/urllib2.rst:616
msgid ""
"This method, if defined, will be called by the parent :class:"
"`OpenerDirector`. *req* will be a :class:`Request` object. *response* will "
"be an object implementing the same interface as the return value of :func:"
"`urlopen`.  The return value should implement the same interface as the "
"return value of :func:`urlopen`."
msgstr ""

#: ../Doc/library/urllib2.rst:626
msgid "HTTPRedirectHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:630
msgid ""
"Some HTTP redirections require action from this module's client code.  If "
"this is the case, :exc:`HTTPError` is raised.  See :rfc:`2616` for details "
"of the precise meanings of the various redirection codes."
msgstr ""

#: ../Doc/library/urllib2.rst:637
msgid ""
"Return a :class:`Request` or ``None`` in response to a redirect. This is "
"called by the default implementations of the :meth:`http_error_30\\*` "
"methods when a redirection is received from the server.  If a redirection "
"should take place, return a new :class:`Request` to allow :meth:"
"`http_error_30\\*` to perform the redirect to *newurl*.  Otherwise, raise :"
"exc:`HTTPError` if no other handler should try to handle this URL, or return "
"``None`` if you can't but another handler might."
msgstr ""

#: ../Doc/library/urllib2.rst:647
msgid ""
"The default implementation of this method does not strictly follow :rfc:"
"`2616`, which says that 301 and 302 responses to ``POST`` requests must not "
"be automatically redirected without confirmation by the user.  In reality, "
"browsers do allow automatic redirection of these responses, changing the "
"POST to a ``GET``, and the default implementation reproduces this behavior."
msgstr ""

#: ../Doc/library/urllib2.rst:656
msgid ""
"Redirect to the ``Location:`` or ``URI:`` URL.  This method is called by the "
"parent :class:`OpenerDirector` when getting an HTTP 'moved permanently' "
"response."
msgstr ""

#: ../Doc/library/urllib2.rst:662
msgid ""
"The same as :meth:`http_error_301`, but called for the 'found' response."
msgstr ""

#: ../Doc/library/urllib2.rst:667
msgid ""
"The same as :meth:`http_error_301`, but called for the 'see other' response."
msgstr ""

#: ../Doc/library/urllib2.rst:672
msgid ""
"The same as :meth:`http_error_301`, but called for the 'temporary redirect' "
"response."
msgstr ""

#: ../Doc/library/urllib2.rst:679
msgid "HTTPCookieProcessor Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:683
msgid ":class:`HTTPCookieProcessor` instances have one attribute:"
msgstr ""

# 4fb1612ab16d40ee8e5295a97b4d1657
#: ../Doc/library/urllib2.rst:688
msgid "The :class:`cookielib.CookieJar` in which cookies are stored."
msgstr ""

#: ../Doc/library/urllib2.rst:694
msgid "ProxyHandler Objects"
msgstr ""

# 15b5601de4b341b09558a1871ef1a606
#: ../Doc/library/urllib2.rst:702
msgid ""
"The :class:`ProxyHandler` will have a method :samp:`{protocol}_open` for "
"every *protocol* which has a proxy in the *proxies* dictionary given in the "
"constructor.  The method will modify requests to go through the proxy, by "
"calling ``request.set_proxy()``, and call the next handler in the chain to "
"actually execute the protocol."
msgstr ""

#: ../Doc/library/urllib2.rst:712
msgid "HTTPPasswordMgr Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:714
msgid ""
"These methods are available on :class:`HTTPPasswordMgr` and :class:"
"`HTTPPasswordMgrWithDefaultRealm` objects."
msgstr ""

#: ../Doc/library/urllib2.rst:720
msgid ""
"*uri* can be either a single URI, or a sequence of URIs. *realm*, *user* and "
"*passwd* must be strings. This causes ``(user, passwd)`` to be used as "
"authentication tokens when authentication for *realm* and a super-URI of any "
"of the given URIs is given."
msgstr ""

#: ../Doc/library/urllib2.rst:728
msgid ""
"Get user/password for given realm and URI, if any.  This method will return "
"``(None, None)`` if there is no matching user/password."
msgstr ""

#: ../Doc/library/urllib2.rst:731
msgid ""
"For :class:`HTTPPasswordMgrWithDefaultRealm` objects, the realm ``None`` "
"will be searched if the given *realm* has no matching user/password."
msgstr ""

#: ../Doc/library/urllib2.rst:738
msgid "AbstractBasicAuthHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:743
msgid ""
"Handle an authentication request by getting a user/password pair, and re-"
"trying the request.  *authreq* should be the name of the header where the "
"information about the realm is included in the request, *host* specifies the "
"URL and path to authenticate for, *req* should be the (failed) :class:"
"`Request` object, and *headers* should be the error headers."
msgstr ""

#: ../Doc/library/urllib2.rst:749
msgid ""
"*host* is either an authority (e.g. ``\"python.org\"``) or a URL containing "
"an authority component (e.g. ``\"http://python.org/\"``). In either case, "
"the authority must not contain a userinfo component (so, ``\"python.org\"`` "
"and ``\"python.org:80\"`` are fine, ``\"joe:password@python.org\"`` is not)."
msgstr ""

#: ../Doc/library/urllib2.rst:758
msgid "HTTPBasicAuthHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:763 ../Doc/library/urllib2.rst:774
#: ../Doc/library/urllib2.rst:799 ../Doc/library/urllib2.rst:810
msgid "Retry the request with authentication information, if available."
msgstr ""

#: ../Doc/library/urllib2.rst:769
msgid "ProxyBasicAuthHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:780
msgid "AbstractDigestAuthHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:785
msgid ""
"*authreq* should be the name of the header where the information about the "
"realm is included in the request, *host* should be the host to authenticate "
"to, *req* should be the (failed) :class:`Request` object, and *headers* "
"should be the error headers."
msgstr ""

#: ../Doc/library/urllib2.rst:794
msgid "HTTPDigestAuthHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:805
msgid "ProxyDigestAuthHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:816
msgid "HTTPHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:821
msgid ""
"Send an HTTP request, which can be either GET or POST, depending on ``req."
"has_data()``."
msgstr ""

#: ../Doc/library/urllib2.rst:828
msgid "HTTPSHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:833
msgid ""
"Send an HTTPS request, which can be either GET or POST, depending on ``req."
"has_data()``."
msgstr ""

#: ../Doc/library/urllib2.rst:840
msgid "FileHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:845
msgid ""
"Open the file locally, if there is no host name, or the host name is "
"``'localhost'``. Change the protocol to ``ftp`` otherwise, and retry opening "
"it using :attr:`parent`."
msgstr ""

#: ../Doc/library/urllib2.rst:853
msgid "FTPHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:858
msgid ""
"Open the FTP file indicated by *req*. The login is always done with empty "
"username and password."
msgstr ""

#: ../Doc/library/urllib2.rst:865
msgid "CacheFTPHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:867
msgid ""
":class:`CacheFTPHandler` objects are :class:`FTPHandler` objects with the "
"following additional methods:"
msgstr ""

#: ../Doc/library/urllib2.rst:873
msgid "Set timeout of connections to *t* seconds."
msgstr ""

#: ../Doc/library/urllib2.rst:878
msgid "Set maximum number of cached connections to *m*."
msgstr ""

#: ../Doc/library/urllib2.rst:884
msgid "UnknownHandler Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:889
msgid "Raise a :exc:`URLError` exception."
msgstr ""

#: ../Doc/library/urllib2.rst:895
msgid "HTTPErrorProcessor Objects"
msgstr ""

#: ../Doc/library/urllib2.rst:904
msgid "For 200 error codes, the response object is returned immediately."
msgstr ""

# 618ce76f1e7341619d79d504f4430a04
#: ../Doc/library/urllib2.rst:906
msgid ""
"For non-200 error codes, this simply passes the job on to the :samp:`"
"{protocol}_error_code` handler methods, via :meth:`OpenerDirector.error`.  "
"Eventually, :class:`urllib2.HTTPDefaultErrorHandler` will raise an :exc:"
"`HTTPError` if no other handler handles the error."
msgstr ""

# 21701e5cf4274e16bf06262e5bb23b96
#: ../Doc/library/urllib2.rst:914
msgid "Process HTTPS error responses."
msgstr ""

# 1f01fdff2d024af9ab141dd38260bb7f
#: ../Doc/library/urllib2.rst:916
msgid "The behavior is same as :meth:`http_response`."
msgstr ""

# 1386048219934eb79c110abf0c2e3835
#: ../Doc/library/urllib2.rst:924
msgid ""
"This example gets the python.org main page and displays the first 100 bytes "
"of it::"
msgstr ""

# 0c94081ca159406d90cee68d00cdda86
#: ../Doc/library/urllib2.rst:933
msgid ""
"Here we are sending a data-stream to the stdin of a CGI and reading the data "
"it returns to us. Note that this example will only work when the Python "
"installation supports SSL. ::"
msgstr ""

#: ../Doc/library/urllib2.rst:944
msgid "The code for the sample CGI used in the above example is::"
msgstr ""

#: ../Doc/library/urllib2.rst:951
msgid "Use of Basic HTTP Authentication::"
msgstr ""

#: ../Doc/library/urllib2.rst:965
msgid ""
":func:`build_opener` provides many handlers by default, including a :class:"
"`ProxyHandler`.  By default, :class:`ProxyHandler` uses the environment "
"variables named ``<scheme>_proxy``, where ``<scheme>`` is the URL scheme "
"involved.  For example, the :envvar:`http_proxy` environment variable is "
"read to obtain the HTTP proxy's URL."
msgstr ""

#: ../Doc/library/urllib2.rst:971
msgid ""
"This example replaces the default :class:`ProxyHandler` with one that uses "
"programmatically-supplied proxy URLs, and adds proxy authorization support "
"with :class:`ProxyBasicAuthHandler`. ::"
msgstr ""

#: ../Doc/library/urllib2.rst:983
msgid "Adding HTTP headers:"
msgstr ""

#: ../Doc/library/urllib2.rst:985
msgid "Use the *headers* argument to the :class:`Request` constructor, or::"
msgstr ""

#: ../Doc/library/urllib2.rst:992
msgid ""
":class:`OpenerDirector` automatically adds a :mailheader:`User-Agent` header "
"to every :class:`Request`.  To change this::"
msgstr ""

#: ../Doc/library/urllib2.rst:1000
msgid ""
"Also, remember that a few standard headers (:mailheader:`Content-Length`, :"
"mailheader:`Content-Type` and :mailheader:`Host`) are added when the :class:"
"`Request` is passed to :func:`urlopen` (or :meth:`OpenerDirector.open`)."
msgstr ""

# 17a69ccc277b48aba76bd1b1506701e5
#: ../Doc/library/urlparse.rst:2
msgid ":mod:`urlparse` --- Parse URLs into components"
msgstr ""

# 147abc91b7a24ab9a30da3ada4a6c1cc
#: ../Doc/library/urlparse.rst:16
msgid ""
"The :mod:`urlparse` module is renamed to :mod:`urllib.parse` in Python 3. "
"The :term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

# 2f944ae3a1064058bb93ca9bac2329f4
#: ../Doc/library/urlparse.rst:20
msgid "**Source code:** :source:`Lib/urlparse.py`"
msgstr ""

#: ../Doc/library/urlparse.rst:24
msgid ""
"This module defines a standard interface to break Uniform Resource Locator "
"(URL) strings up in components (addressing scheme, network location, path "
"etc.), to combine the components back into a URL string, and to convert a "
"\"relative URL\" to an absolute URL given a \"base URL.\""
msgstr ""

# 042dcf6acd334a25b3ce966ace54909c
#: ../Doc/library/urlparse.rst:29
msgid ""
"The module has been designed to match the Internet RFC on Relative Uniform "
"Resource Locators. It supports the following URL schemes: ``file``, ``ftp``, "
"``gopher``, ``hdl``, ``http``, ``https``, ``imap``, ``mailto``, ``mms``, "
"``news``,  ``nntp``, ``prospero``, ``rsync``, ``rtsp``, ``rtspu``,  "
"``sftp``, ``shttp``, ``sip``, ``sips``, ``snews``, ``svn``,  ``svn+ssh``, "
"``telnet``, ``wais``."
msgstr ""

# 426aac364b3b42cd96d36be42ec50cbd
#: ../Doc/library/urlparse.rst:39
msgid "The :mod:`urlparse` module defines the following functions:"
msgstr ""

#: ../Doc/library/urlparse.rst:44
msgid ""
"Parse a URL into six components, returning a 6-tuple.  This corresponds to "
"the general structure of a URL: ``scheme://netloc/path;parameters?"
"query#fragment``. Each tuple item is a string, possibly empty. The "
"components are not broken up in smaller parts (for example, the network "
"location is a single string), and % escapes are not expanded. The delimiters "
"as shown above are not part of the result, except for a leading slash in the "
"*path* component, which is retained if present.  For example:"
msgstr ""

# 80756203f17249aea234977afdacd9f4
#: ../Doc/library/urlparse.rst:65
msgid ""
"Following the syntax specifications in :rfc:`1808`, urlparse recognizes a "
"netloc only if it is properly introduced by '//'.  Otherwise the input is "
"presumed to be a relative URL and thus to start with a path component."
msgstr ""

#: ../Doc/library/urlparse.rst:81
msgid ""
"If the *scheme* argument is specified, it gives the default addressing "
"scheme, to be used only if the URL does not specify one.  The default value "
"for this argument is the empty string."
msgstr ""

#: ../Doc/library/urlparse.rst:85
msgid ""
"If the *allow_fragments* argument is false, fragment identifiers are not "
"allowed, even if the URL's addressing scheme normally does support them.  "
"The default value for this argument is :const:`True`."
msgstr ""

#: ../Doc/library/urlparse.rst:89 ../Doc/library/urlparse.rst:193
msgid ""
"The return value is actually an instance of a subclass of :class:`tuple`.  "
"This class has the following additional read-only convenience attributes:"
msgstr ""

#: ../Doc/library/urlparse.rst:93 ../Doc/library/urlparse.rst:197
msgid "Value if not present"
msgstr ""

#: ../Doc/library/urlparse.rst:95 ../Doc/library/urlparse.rst:199
msgid ":attr:`scheme`"
msgstr ""

#: ../Doc/library/urlparse.rst:95 ../Doc/library/urlparse.rst:199
msgid "URL scheme specifier"
msgstr ""

#: ../Doc/library/urlparse.rst:95 ../Doc/library/urlparse.rst:97
#: ../Doc/library/urlparse.rst:99 ../Doc/library/urlparse.rst:101
#: ../Doc/library/urlparse.rst:104 ../Doc/library/urlparse.rst:106
#: ../Doc/library/urlparse.rst:199 ../Doc/library/urlparse.rst:201
#: ../Doc/library/urlparse.rst:203 ../Doc/library/urlparse.rst:205
#: ../Doc/library/urlparse.rst:207
msgid "empty string"
msgstr ""

#: ../Doc/library/urlparse.rst:97 ../Doc/library/urlparse.rst:201
msgid ":attr:`netloc`"
msgstr ""

#: ../Doc/library/urlparse.rst:97 ../Doc/library/urlparse.rst:201
msgid "Network location part"
msgstr ""

#: ../Doc/library/urlparse.rst:99 ../Doc/library/urlparse.rst:203
msgid ":attr:`path`"
msgstr ""

#: ../Doc/library/urlparse.rst:99 ../Doc/library/urlparse.rst:203
msgid "Hierarchical path"
msgstr ""

#: ../Doc/library/urlparse.rst:101
msgid ":attr:`params`"
msgstr ""

#: ../Doc/library/urlparse.rst:101
msgid "Parameters for last path element"
msgstr ""

#: ../Doc/library/urlparse.rst:104 ../Doc/library/urlparse.rst:205
msgid ":attr:`query`"
msgstr ""

#: ../Doc/library/urlparse.rst:104 ../Doc/library/urlparse.rst:205
msgid "Query component"
msgstr ""

#: ../Doc/library/urlparse.rst:106 ../Doc/library/urlparse.rst:207
msgid ":attr:`fragment`"
msgstr ""

#: ../Doc/library/urlparse.rst:106 ../Doc/library/urlparse.rst:207
msgid "Fragment identifier"
msgstr ""

#: ../Doc/library/urlparse.rst:108 ../Doc/library/urlparse.rst:209
msgid ":attr:`username`"
msgstr ""

#: ../Doc/library/urlparse.rst:108 ../Doc/library/urlparse.rst:209
msgid "User name"
msgstr ""

#: ../Doc/library/urlparse.rst:110 ../Doc/library/urlparse.rst:211
msgid ":attr:`password`"
msgstr ""

#: ../Doc/library/urlparse.rst:110 ../Doc/library/urlparse.rst:211
msgid "Password"
msgstr ""

#: ../Doc/library/urlparse.rst:112 ../Doc/library/urlparse.rst:213
msgid ":attr:`hostname`"
msgstr ""

#: ../Doc/library/urlparse.rst:112 ../Doc/library/urlparse.rst:213
msgid "Host name (lower case)"
msgstr ""

#: ../Doc/library/urlparse.rst:114 ../Doc/library/urlparse.rst:215
msgid ":attr:`port`"
msgstr ""

#: ../Doc/library/urlparse.rst:114 ../Doc/library/urlparse.rst:215
msgid "Port number as integer, if present"
msgstr ""

#: ../Doc/library/urlparse.rst:118 ../Doc/library/urlparse.rst:219
msgid ""
"See section :ref:`urlparse-result-object` for more information on the result "
"object."
msgstr ""

#: ../Doc/library/urlparse.rst:130
msgid ""
"Parse a query string given as a string argument (data of type :mimetype:"
"`application/x-www-form-urlencoded`).  Data are returned as a dictionary.  "
"The dictionary keys are the unique query variable names and the values are "
"lists of values for each name."
msgstr ""

# a5efc510671947e7968e384a67734a32
# aaffa91973e943f4a05324d2cbf321c3
#: ../Doc/library/urlparse.rst:135 ../Doc/library/urlparse.rst:158
msgid ""
"The optional argument *keep_blank_values* is a flag indicating whether blank "
"values in percent-encoded queries should be treated as blank strings.   A "
"true value indicates that blanks should be retained as  blank strings.  The "
"default false value indicates that blank values are to be ignored and "
"treated as if they were not included."
msgstr ""

#: ../Doc/library/urlparse.rst:141 ../Doc/library/urlparse.rst:164
msgid ""
"The optional argument *strict_parsing* is a flag indicating what to do with "
"parsing errors.  If false (the default), errors are silently ignored.  If "
"true, errors raise a :exc:`ValueError` exception."
msgstr ""

# 01c84e518cde49fbb365b0fadc1a875b
#: ../Doc/library/urlparse.rst:145
msgid ""
"Use the :func:`urllib.urlencode` function to convert such dictionaries into "
"query strings."
msgstr ""

#: ../Doc/library/urlparse.rst:154
msgid ""
"Parse a query string given as a string argument (data of type :mimetype:"
"`application/x-www-form-urlencoded`).  Data are returned as a list of name, "
"value pairs."
msgstr ""

# a9b5a92a162148e981ded1002c49f972
#: ../Doc/library/urlparse.rst:168
msgid ""
"Use the :func:`urllib.urlencode` function to convert such lists of pairs "
"into query strings."
msgstr ""

# 96ade439a5f249eeb9018881f616bc96
#: ../Doc/library/urlparse.rst:177
msgid ""
"Construct a URL from a tuple as returned by ``urlparse()``. The *parts* "
"argument can be any six-item iterable. This may result in a slightly "
"different, but equivalent URL, if the URL that was parsed originally had "
"unnecessary delimiters (for example, a ? with an empty query; the RFC states "
"that these are equivalent)."
msgstr ""

#: ../Doc/library/urlparse.rst:186
msgid ""
"This is similar to :func:`urlparse`, but does not split the params from the "
"URL. This should generally be used instead of :func:`urlparse` if the more "
"recent URL syntax allowing parameters to be applied to each segment of the "
"*path* portion of the URL (see :rfc:`2396`) is wanted.  A separate function "
"is needed to separate the path segments and parameters.  This function "
"returns a 5-tuple: (addressing scheme, network location, path, query, "
"fragment identifier)."
msgstr ""

#: ../Doc/library/urlparse.rst:230
msgid ""
"Combine the elements of a tuple as returned by :func:`urlsplit` into a "
"complete URL as a string. The *parts* argument can be any five-item "
"iterable. This may result in a slightly different, but equivalent URL, if "
"the URL that was parsed originally had unnecessary delimiters (for example, "
"a ? with an empty query; the RFC states that these are equivalent)."
msgstr ""

#: ../Doc/library/urlparse.rst:241
msgid ""
"Construct a full (\"absolute\") URL by combining a \"base URL\" (*base*) "
"with another URL (*url*).  Informally, this uses components of the base URL, "
"in particular the addressing scheme, the network location and (part of) the "
"path, to provide missing components in the relative URL.  For example:"
msgstr ""

#: ../Doc/library/urlparse.rst:250
msgid ""
"The *allow_fragments* argument has the same meaning and default as for :func:"
"`urlparse`."
msgstr ""

#: ../Doc/library/urlparse.rst:255
msgid ""
"If *url* is an absolute URL (that is, starting with ``//`` or ``scheme://"
"``), the *url*'s host name and/or scheme will be present in the result.  For "
"example:"
msgstr ""

#: ../Doc/library/urlparse.rst:264
msgid ""
"If you do not want that behavior, preprocess the *url* with :func:`urlsplit` "
"and :func:`urlunsplit`, removing possible *scheme* and *netloc* parts."
msgstr ""

# 13443a4d6bb74e2fbc3fac9ca288637d
#: ../Doc/library/urlparse.rst:270
msgid ""
"If *url* contains a fragment identifier, returns a modified version of *url* "
"with no fragment identifier, and the fragment identifier as a separate "
"string. If there is no fragment identifier in *url*, returns *url* "
"unmodified and an empty string."
msgstr ""

#: ../Doc/library/urlparse.rst:279
msgid ""
"This is the current standard (STD66). Any changes to urlparse module should "
"conform to this. Certain deviations could be observed, which are mostly due "
"backward compatiblity purposes and for certain de-facto parsing requirements "
"as commonly observed in major browsers."
msgstr ""

#: ../Doc/library/urlparse.rst:285
msgid "This specifies the parsing requirements of IPv6 URLs."
msgstr ""

#: ../Doc/library/urlparse.rst:288
msgid ""
"Document describing the generic syntactic requirements for both Uniform "
"Resource Names (URNs) and Uniform Resource Locators (URLs)."
msgstr ""

#: ../Doc/library/urlparse.rst:292
msgid "Parsing requirements for mailto url schemes."
msgstr ""

#: ../Doc/library/urlparse.rst:295
msgid ""
"This Request For Comments includes the rules for joining an absolute and a "
"relative URL, including a fair number of \"Abnormal Examples\" which govern "
"the treatment of border cases."
msgstr ""

#: ../Doc/library/urlparse.rst:300
msgid "This specifies the formal syntax and semantics of absolute URLs."
msgstr ""

#: ../Doc/library/urlparse.rst:306
msgid "Results of :func:`urlparse` and :func:`urlsplit`"
msgstr ""

#: ../Doc/library/urlparse.rst:308
msgid ""
"The result objects from the :func:`urlparse` and :func:`urlsplit` functions "
"are subclasses of the :class:`tuple` type.  These subclasses add the "
"attributes described in those functions, as well as provide an additional "
"method:"
msgstr ""

#: ../Doc/library/urlparse.rst:315
msgid ""
"Return the re-combined version of the original URL as a string. This may "
"differ from the original URL in that the scheme will always be normalized to "
"lower case and empty components may be dropped. Specifically, empty "
"parameters, queries, and fragment identifiers will be removed."
msgstr ""

#: ../Doc/library/urlparse.rst:320
msgid ""
"The result of this method is a fixpoint if passed back through the original "
"parsing function:"
msgstr ""

#: ../Doc/library/urlparse.rst:336
msgid "The following classes provide the implementations of the parse results:"
msgstr ""

#: ../Doc/library/urlparse.rst:341
msgid ""
"Base class for the concrete result classes.  This provides most of the "
"attribute definitions.  It does not provide a :meth:`geturl` method.  It is "
"derived from :class:`tuple`, but does not override the :meth:`__init__` or :"
"meth:`__new__` methods."
msgstr ""

#: ../Doc/library/urlparse.rst:349
msgid ""
"Concrete class for :func:`urlparse` results.  The :meth:`__new__` method is "
"overridden to support checking that the right number of arguments are passed."
msgstr ""

#: ../Doc/library/urlparse.rst:355
msgid ""
"Concrete class for :func:`urlsplit` results.  The :meth:`__new__` method is "
"overridden to support checking that the right number of arguments are passed."
msgstr ""

# c13c574defad44858a09cbfbdf589aff
#: ../Doc/library/user.rst:3
msgid ":mod:`user` --- User-specific configuration hook"
msgstr ""

# 086008debdf84526ac6c18b4a209b9ed
#: ../Doc/library/user.rst:16
msgid ""
"As a policy, Python doesn't run user-specified code on startup of Python "
"programs.  (Only interactive sessions execute the script specified in the :"
"envvar:`PYTHONSTARTUP` environment variable if it exists)."
msgstr ""

# 52b55665046841328fdd0bb8af49d7ab
#: ../Doc/library/user.rst:20
msgid ""
"However, some programs or sites may find it convenient to allow users to "
"have a standard customization file, which gets run when a program requests "
"it.  This module implements such a mechanism.  A program that wishes to use "
"the mechanism must execute the statement ::"
msgstr ""

# e5b94baa896d42a1a4691e8f10ff54a2
#: ../Doc/library/user.rst:29
msgid ""
"The :mod:`user` module looks for a file :file:`.pythonrc.py` in the user's "
"home directory and if it can be opened, executes it (using :func:`execfile`) "
"in its own (the module :mod:`user`'s) global namespace.  Errors during this "
"phase are not caught; that's up to the program that imports the :mod:`user` "
"module, if it wishes.  The home directory is assumed to be named by the :"
"envvar:`HOME` environment variable; if this is not set, the current "
"directory is used."
msgstr ""

# a3f0bac6fff742d8ab97e6d2e7012ce2
#: ../Doc/library/user.rst:36
msgid ""
"The user's :file:`.pythonrc.py` could conceivably test for ``sys.version`` "
"if it wishes to do different things depending on the Python version."
msgstr ""

# 53a7c06de7734f3b96b5d026b7096559
#: ../Doc/library/user.rst:39
msgid ""
"A warning to users: be very conservative in what you place in your :file:`."
"pythonrc.py` file.  Since you don't know which programs will use it, "
"changing the behavior of standard modules or functions is generally not a "
"good idea."
msgstr ""

# 8de824b78bf944fc9e499ff84e07e68d
#: ../Doc/library/user.rst:44
msgid ""
"A suggestion for programmers who wish to use this mechanism: a simple way to "
"let users specify options for your package is to have them define variables "
"in their :file:`.pythonrc.py` file that you test in your module.  For "
"example, a module :mod:`spam` that has a verbosity level can look for a "
"variable ``user.spam_verbose``, as follows::"
msgstr ""

# 3c3c32397d7d449b9a52220d3b795a47
#: ../Doc/library/user.rst:54
msgid ""
"(The three-argument form of :func:`getattr` is used in case the user has not "
"defined ``spam_verbose`` in their :file:`.pythonrc.py` file.)"
msgstr ""

# 757daeafeeee44118dbbaf325f9143aa
#: ../Doc/library/user.rst:57
msgid ""
"Programs with extensive customization needs are better off reading a program-"
"specific customization file."
msgstr ""

# 488b760dbdbd4f25b668145d7b87a061
#: ../Doc/library/user.rst:60
msgid ""
"Programs with security or privacy concerns should *not* import this module; "
"a user can easily break into a program by placing arbitrary code in the :"
"file:`.pythonrc.py` file."
msgstr ""

# 265b00d2e0354f7abf543de5aff92621
#: ../Doc/library/user.rst:64
msgid ""
"Modules for general use should *not* import this module; it may interfere "
"with the operation of the importing program."
msgstr ""

# 8f939347c0ab42dfadaa1de160af0e92
#: ../Doc/library/user.rst:71
msgid "Site-wide customization mechanism."
msgstr ""

# 8340e979d8f4418dad24f9be3e59efa2
#: ../Doc/library/userdict.rst:2
msgid ":mod:`UserDict` --- Class wrapper for dictionary objects"
msgstr ""

# 156b4ca80bc64a9894336e18693a3638
#: ../Doc/library/userdict.rst:8
msgid "**Source code:** :source:`Lib/UserDict.py`"
msgstr ""

# 136576c2417444e39b77cb8e033463f0
#: ../Doc/library/userdict.rst:12
msgid ""
"The module defines a mixin,  :class:`DictMixin`, defining all dictionary "
"methods for classes that already have a minimum mapping interface.  This "
"greatly simplifies writing classes that need to be substitutable for "
"dictionaries (such as the shelve module)."
msgstr ""

# f8cf7ebb146747d58c1a334dc36b041a
#: ../Doc/library/userdict.rst:17
msgid ""
"This module also defines a class, :class:`UserDict`, that acts as a wrapper "
"around dictionary objects.  The need for this class has been largely "
"supplanted by the ability to subclass directly from :class:`dict` (a feature "
"that became available starting with Python version 2.2).  Prior to the "
"introduction of :class:`dict`, the :class:`UserDict` class was used to "
"create dictionary-like sub-classes that obtained new behaviors by overriding "
"existing methods or adding new ones."
msgstr ""

# e14d1c97ece84333bb79cdb4c152f3b1
#: ../Doc/library/userdict.rst:25
msgid ""
"The :mod:`UserDict` module defines the :class:`UserDict` class and :class:"
"`DictMixin`:"
msgstr ""

#: ../Doc/library/userdict.rst:31
msgid ""
"Class that simulates a dictionary.  The instance's contents are kept in a "
"regular dictionary, which is accessible via the :attr:`data` attribute of :"
"class:`UserDict` instances.  If *initialdata* is provided, :attr:`data` is "
"initialized with its contents; note that a reference to *initialdata* will "
"not be kept, allowing it be used for other purposes."
msgstr ""

# b995f4e71b7e42f7b5f410c33663bc63
#: ../Doc/library/userdict.rst:39
msgid ""
"For backward compatibility, instances of :class:`UserDict` are not iterable."
msgstr ""

# 5a9ffe8419934944be8d46992375f7c1
#: ../Doc/library/userdict.rst:44
msgid ""
"Subclass of :class:`UserDict` that supports direct iteration (e.g.  ``for "
"key in myDict``)."
msgstr ""

# b76ef46778054649bf6317ebb93b4207
#: ../Doc/library/userdict.rst:47
msgid ""
"In addition to supporting the methods and operations of mappings (see "
"section :ref:`typesmapping`), :class:`UserDict` and :class:"
"`IterableUserDict` instances provide the following attribute:"
msgstr ""

#: ../Doc/library/userdict.rst:54
msgid ""
"A real dictionary used to store the contents of the :class:`UserDict` class."
msgstr ""

# dbadab35bb6b45d2960a6f4606f86e64
#: ../Doc/library/userdict.rst:59
msgid ""
"Mixin defining all dictionary methods for classes that already have a "
"minimum dictionary interface including :meth:`__getitem__`, :meth:"
"`__setitem__`, :meth:`__delitem__`, and :meth:`keys`."
msgstr ""

# f49b4c8bb20d4412b6af7f857a018e0b
#: ../Doc/library/userdict.rst:63
msgid ""
"This mixin should be used as a superclass.  Adding each of the above methods "
"adds progressively more functionality.  For instance, defining all but :meth:"
"`__delitem__` will preclude only :meth:`pop` and :meth:`popitem` from the "
"full interface."
msgstr ""

# bc71caa8bcb245499b39854650851134
#: ../Doc/library/userdict.rst:68
msgid ""
"In addition to the four base methods, progressively more efficiency comes "
"with defining :meth:`__contains__`, :meth:`__iter__`, and :meth:`iteritems`."
msgstr ""

# 00b2141ed2434d50ad1fcb673799a898
#: ../Doc/library/userdict.rst:71
msgid ""
"Since the mixin has no knowledge of the subclass constructor, it does not "
"define :meth:`__init__` or :meth:`copy`."
msgstr ""

# 0ba624a22a0c4fb9999758d2f64037f2
#: ../Doc/library/userdict.rst:74
msgid ""
"Starting with Python version 2.6, it is recommended to use :class:"
"`collections.MutableMapping` instead of :class:`DictMixin`."
msgstr ""

# 0cb9f8e6a3a94733ab19b3dd9afea7dd
#: ../Doc/library/userdict.rst:78
msgid ":mod:`UserList` --- Class wrapper for list objects"
msgstr ""

# a8851e17ba234d689094ab40e36f3c4a
#: ../Doc/library/userdict.rst:86
msgid ""
"When Python 2.2 was released, many of the use cases for this class were "
"subsumed by the ability to subclass :class:`list` directly.  However, a "
"handful of use cases remain."
msgstr ""

# 38722ea4017a41cd97bac7b53b73781f
#: ../Doc/library/userdict.rst:90
msgid ""
"This module provides a list-interface around an underlying data store.  By "
"default, that data store is a :class:`list`; however, it can be used to wrap "
"a list-like interface around other objects (such as persistent storage)."
msgstr ""

# 6edb598beac645be8d591e7fc4441e72
#: ../Doc/library/userdict.rst:94
msgid ""
"In addition, this class can be mixed-in with built-in classes using multiple "
"inheritance.  This can sometimes be useful.  For example, you can inherit "
"from :class:`UserList` and :class:`str` at the same time.  That would not be "
"possible with both a real :class:`list` and a real :class:`str`."
msgstr ""

# 05241e3c5e4540bda31615e61edd5576
#: ../Doc/library/userdict.rst:99
msgid ""
"This module defines a class that acts as a wrapper around list objects.  It "
"is a useful base class for your own list-like classes, which can inherit "
"from them and override existing methods or add new ones.  In this way one "
"can add new behaviors to lists."
msgstr ""

# 717a962c25444ba39da2a9323df56438
#: ../Doc/library/userdict.rst:104
msgid "The :mod:`UserList` module defines the :class:`UserList` class:"
msgstr ""

# 01dc0983905c44bdabef5df9ea8961ba
#: ../Doc/library/userdict.rst:109
msgid ""
"Class that simulates a list.  The instance's contents are kept in a regular "
"list, which is accessible via the :attr:`data` attribute of :class:"
"`UserList` instances.  The instance's contents are initially set to a copy "
"of *list*, defaulting to the empty list ``[]``.  *list* can be any iterable, "
"e.g. a real Python list or a :class:`UserList` object."
msgstr ""

# 7f04a7130913472d9bbaea54e0d85a2b
#: ../Doc/library/userdict.rst:116
msgid ""
"The :class:`UserList` class has been moved to the :mod:`collections` module "
"in Python 3. The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# e178afe38bb940e9821906874470da61
#: ../Doc/library/userdict.rst:121
msgid ""
"In addition to supporting the methods and operations of mutable sequences "
"(see section :ref:`typesseq`), :class:`UserList` instances provide the "
"following attribute:"
msgstr ""

# fbfe39070294418c92a520ecc3c0adc4
#: ../Doc/library/userdict.rst:128
msgid ""
"A real Python list object used to store the contents of the :class:"
"`UserList` class."
msgstr ""

#: ../Doc/library/userdict.rst:131
msgid ""
"**Subclassing requirements:** Subclasses of :class:`UserList` are expect to "
"offer a constructor which can be called with either no arguments or one "
"argument.  List operations which return a new sequence attempt to create an "
"instance of the actual implementation class.  To do so, it assumes that the "
"constructor can be called with a single parameter, which is a sequence "
"object used as a data source."
msgstr ""

#: ../Doc/library/userdict.rst:138
msgid ""
"If a derived class does not wish to comply with this requirement, all of the "
"special methods supported by this class will need to be overridden; please "
"consult the sources for information about the methods which need to be "
"provided in that case."
msgstr ""

# ff5c3f8741e14e7c826b0766f6246312
#: ../Doc/library/userdict.rst:150
msgid ":mod:`UserString` --- Class wrapper for string objects"
msgstr ""

# e765e83e7aa8487594189eb062c0ba26
#: ../Doc/library/userdict.rst:160
msgid ""
"This :class:`UserString` class from this module is available for backward "
"compatibility only.  If you are writing code that does not need to work with "
"versions of Python earlier than Python 2.2, please consider subclassing "
"directly from the built-in :class:`str` type instead of using :class:"
"`UserString` (there is no built-in equivalent to :class:`MutableString`)."
msgstr ""

# 661b2607222b433da52cb531cdc8d4a8
#: ../Doc/library/userdict.rst:166
msgid ""
"This module defines a class that acts as a wrapper around string objects.  "
"It is a useful base class for your own string-like classes, which can "
"inherit from them and override existing methods or add new ones.  In this "
"way one can add new behaviors to strings."
msgstr ""

# 198180e11aa84571bc2fe2fb337c0798
#: ../Doc/library/userdict.rst:171
msgid ""
"It should be noted that these classes are highly inefficient compared to "
"real string or Unicode objects; this is especially the case for :class:"
"`MutableString`."
msgstr ""

# 73414339f85744f1afbb35dedb3f282b
#: ../Doc/library/userdict.rst:175
msgid "The :mod:`UserString` module defines the following classes:"
msgstr ""

# 0a2072d412d8486298c453d5897cbe68
#: ../Doc/library/userdict.rst:180
msgid ""
"Class that simulates a string or a Unicode string object.  The instance's "
"content is kept in a regular string or Unicode string object, which is "
"accessible via the :attr:`data` attribute of :class:`UserString` instances.  "
"The instance's contents are initially set to a copy of *sequence*.  "
"*sequence* can be either a regular Python string or Unicode string, an "
"instance of :class:`UserString` (or a subclass) or an arbitrary sequence "
"which can be converted into a string using the built-in :func:`str` function."
msgstr ""

# af4c0ac1708e47579822168aed2b130c
#: ../Doc/library/userdict.rst:189
msgid ""
"The :class:`UserString` class has been moved to the :mod:`collections` "
"module in Python 3. The :term:`2to3` tool will automatically adapt imports "
"when converting your sources to Python 3."
msgstr ""

# b65792ee6f82470b8f6c75c3bd352f27
#: ../Doc/library/userdict.rst:197
msgid ""
"This class is derived from the :class:`UserString` above and redefines "
"strings to be *mutable*.  Mutable strings can't be used as dictionary keys, "
"because dictionaries require *immutable* objects as keys.  The main "
"intention of this class is to serve as an educational example for "
"inheritance and necessity to remove (override) the :meth:`__hash__` method "
"in order to trap attempts to use a mutable object as dictionary key, which "
"would be otherwise very error prone and hard to track down."
msgstr ""

# d4886f2b24fc4388a2e8e7c3d8ab7588
#: ../Doc/library/userdict.rst:208
msgid ""
"In addition to supporting the methods and operations of string and Unicode "
"objects (see section :ref:`string-methods`), :class:`UserString` instances "
"provide the following attribute:"
msgstr ""

# 3bbbf663da484e2984d94a516ed683f5
#: ../Doc/library/userdict.rst:215
msgid ""
"A real Python string or Unicode object used to store the content of the :"
"class:`UserString` class."
msgstr ""

#: ../Doc/library/uu.rst:2
msgid ":mod:`uu` --- Encode and decode uuencode files"
msgstr ""

# 9bdfaf66df534e398f621d44cd14d830
#: ../Doc/library/uu.rst:8
msgid "**Source code:** :source:`Lib/uu.py`"
msgstr ""

#: ../Doc/library/uu.rst:12
msgid ""
"This module encodes and decodes files in uuencode format, allowing arbitrary "
"binary data to be transferred over ASCII-only connections. Wherever a file "
"argument is expected, the methods accept a file-like object.  For backwards "
"compatibility, a string containing a pathname is also accepted, and the "
"corresponding file will be opened for reading and writing; the pathname "
"``'-'`` is understood to mean the standard input or output.  However, this "
"interface is deprecated; it's better for the caller to open the file itself, "
"and be sure that, when required, the mode is ``'rb'`` or ``'wb'`` on Windows."
msgstr ""

#: ../Doc/library/uu.rst:25
msgid ""
"This code was contributed by Lance Ellinghouse, and modified by Jack Jansen."
msgstr ""

#: ../Doc/library/uu.rst:27
msgid "The :mod:`uu` module defines the following functions:"
msgstr ""

# 9577c28cf0fb45a2b695835732d90564
#: ../Doc/library/uu.rst:32
msgid ""
"Uuencode file *in_file* into file *out_file*.  The uuencoded file will have "
"the header specifying *name* and *mode* as the defaults for the results of "
"decoding the file. The default defaults are taken from *in_file*, or ``'-'`` "
"and ``0666`` respectively."
msgstr ""

#: ../Doc/library/uu.rst:40
msgid ""
"This call decodes uuencoded file *in_file* placing the result on file "
"*out_file*. If *out_file* is a pathname, *mode* is used to set the "
"permission bits if the file must be created. Defaults for *out_file* and "
"*mode* are taken from the uuencode header.  However, if the file specified "
"in the header already exists, a :exc:`uu.Error` is raised."
msgstr ""

#: ../Doc/library/uu.rst:46
msgid ""
":func:`decode` may print a warning to standard error if the input was "
"produced by an incorrect uuencoder and Python could recover from that "
"error.  Setting *quiet* to a true value silences this warning."
msgstr ""

#: ../Doc/library/uu.rst:53
msgid ""
"Subclass of :exc:`Exception`, this can be raised by :func:`uu.decode` under "
"various situations, such as described above, but also including a badly "
"formatted header, or truncated input file."
msgstr ""

#: ../Doc/library/uuid.rst:3
msgid ":mod:`uuid` --- UUID objects according to RFC 4122"
msgstr ""

#: ../Doc/library/uuid.rst:13
msgid ""
"This module provides immutable :class:`UUID` objects (the :class:`UUID` "
"class) and the functions :func:`uuid1`, :func:`uuid3`, :func:`uuid4`, :func:"
"`uuid5` for generating version 1, 3, 4, and 5 UUIDs as specified in :rfc:"
"`4122`."
msgstr ""

#: ../Doc/library/uuid.rst:17
msgid ""
"If all you want is a unique ID, you should probably call :func:`uuid1` or :"
"func:`uuid4`.  Note that :func:`uuid1` may compromise privacy since it "
"creates a UUID containing the computer's network address.  :func:`uuid4` "
"creates a random UUID."
msgstr ""

#: ../Doc/library/uuid.rst:25
msgid ""
"Create a UUID from either a string of 32 hexadecimal digits, a string of 16 "
"bytes as the *bytes* argument, a string of 16 bytes in little-endian order "
"as the *bytes_le* argument, a tuple of six integers (32-bit *time_low*, 16-"
"bit *time_mid*, 16-bit *time_hi_version*, 8-bit *clock_seq_hi_variant*, 8-"
"bit *clock_seq_low*, 48-bit *node*) as the *fields* argument, or a single "
"128-bit integer as the *int* argument.  When a string of hex digits is "
"given, curly braces, hyphens, and a URN prefix are all optional.  For "
"example, these expressions all yield the same UUID::"
msgstr ""

#: ../Doc/library/uuid.rst:43
msgid ""
"Exactly one of *hex*, *bytes*, *bytes_le*, *fields*, or *int* must be given. "
"The *version* argument is optional; if given, the resulting UUID will have "
"its variant and version number set according to RFC 4122, overriding bits in "
"the given *hex*, *bytes*, *bytes_le*, *fields*, or *int*."
msgstr ""

#: ../Doc/library/uuid.rst:48
msgid ":class:`UUID` instances have these read-only attributes:"
msgstr ""

#: ../Doc/library/uuid.rst:53
msgid ""
"The UUID as a 16-byte string (containing the six integer fields in big-"
"endian byte order)."
msgstr ""

#: ../Doc/library/uuid.rst:59
msgid ""
"The UUID as a 16-byte string (with *time_low*, *time_mid*, and "
"*time_hi_version* in little-endian byte order)."
msgstr ""

#: ../Doc/library/uuid.rst:65
msgid ""
"A tuple of the six integer fields of the UUID, which are also available as "
"six individual attributes and two derived attributes:"
msgstr ""

#: ../Doc/library/uuid.rst:71
msgid ":attr:`time_low`"
msgstr ""

#: ../Doc/library/uuid.rst:71
msgid "the first 32 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:73
msgid ":attr:`time_mid`"
msgstr ""

#: ../Doc/library/uuid.rst:73 ../Doc/library/uuid.rst:75
msgid "the next 16 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:75
msgid ":attr:`time_hi_version`"
msgstr ""

#: ../Doc/library/uuid.rst:77
msgid ":attr:`clock_seq_hi_variant`"
msgstr ""

#: ../Doc/library/uuid.rst:77 ../Doc/library/uuid.rst:79
msgid "the next 8 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:79
msgid ":attr:`clock_seq_low`"
msgstr ""

#: ../Doc/library/uuid.rst:81
msgid "the last 48 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:83
msgid ":attr:`time`"
msgstr ""

#: ../Doc/library/uuid.rst:83
msgid "the 60-bit timestamp"
msgstr ""

#: ../Doc/library/uuid.rst:85
msgid ":attr:`clock_seq`"
msgstr ""

#: ../Doc/library/uuid.rst:85
msgid "the 14-bit sequence number"
msgstr ""

#: ../Doc/library/uuid.rst:91
msgid "The UUID as a 32-character hexadecimal string."
msgstr ""

#: ../Doc/library/uuid.rst:96
msgid "The UUID as a 128-bit integer."
msgstr ""

#: ../Doc/library/uuid.rst:101
msgid "The UUID as a URN as specified in RFC 4122."
msgstr ""

#: ../Doc/library/uuid.rst:106
msgid ""
"The UUID variant, which determines the internal layout of the UUID. This "
"will be one of the integer constants :const:`RESERVED_NCS`, :const:"
"`RFC_4122`, :const:`RESERVED_MICROSOFT`, or :const:`RESERVED_FUTURE`."
msgstr ""

#: ../Doc/library/uuid.rst:113
msgid ""
"The UUID version number (1 through 5, meaningful only when the variant is :"
"const:`RFC_4122`)."
msgstr ""

#: ../Doc/library/uuid.rst:116
msgid "The :mod:`uuid` module defines the following functions:"
msgstr ""

#: ../Doc/library/uuid.rst:121
msgid ""
"Get the hardware address as a 48-bit positive integer.  The first time this "
"runs, it may launch a separate program, which could be quite slow.  If all "
"attempts to obtain the hardware address fail, we choose a random 48-bit "
"number with its eighth bit set to 1 as recommended in RFC 4122.  \"Hardware "
"address\" means the MAC address of a network interface, and on a machine "
"with multiple network interfaces the MAC address of any one of them may be "
"returned."
msgstr ""

#: ../Doc/library/uuid.rst:133
msgid ""
"Generate a UUID from a host ID, sequence number, and the current time. If "
"*node* is not given, :func:`getnode` is used to obtain the hardware address. "
"If *clock_seq* is given, it is used as the sequence number; otherwise a "
"random 14-bit sequence number is chosen."
msgstr ""

#: ../Doc/library/uuid.rst:143
msgid ""
"Generate a UUID based on the MD5 hash of a namespace identifier (which is a "
"UUID) and a name (which is a string)."
msgstr ""

#: ../Doc/library/uuid.rst:151
msgid "Generate a random UUID."
msgstr ""

#: ../Doc/library/uuid.rst:158
msgid ""
"Generate a UUID based on the SHA-1 hash of a namespace identifier (which is "
"a UUID) and a name (which is a string)."
msgstr ""

#: ../Doc/library/uuid.rst:163
msgid ""
"The :mod:`uuid` module defines the following namespace identifiers for use "
"with :func:`uuid3` or :func:`uuid5`."
msgstr ""

#: ../Doc/library/uuid.rst:169
msgid ""
"When this namespace is specified, the *name* string is a fully-qualified "
"domain name."
msgstr ""

#: ../Doc/library/uuid.rst:175
msgid "When this namespace is specified, the *name* string is a URL."
msgstr ""

#: ../Doc/library/uuid.rst:180
msgid "When this namespace is specified, the *name* string is an ISO OID."
msgstr ""

#: ../Doc/library/uuid.rst:185
msgid ""
"When this namespace is specified, the *name* string is an X.500 DN in DER or "
"a text output format."
msgstr ""

#: ../Doc/library/uuid.rst:188
msgid ""
"The :mod:`uuid` module defines the following constants for the possible "
"values of the :attr:`variant` attribute:"
msgstr ""

#: ../Doc/library/uuid.rst:194
msgid "Reserved for NCS compatibility."
msgstr ""

#: ../Doc/library/uuid.rst:199
msgid "Specifies the UUID layout given in :rfc:`4122`."
msgstr ""

#: ../Doc/library/uuid.rst:204
msgid "Reserved for Microsoft compatibility."
msgstr ""

#: ../Doc/library/uuid.rst:209
msgid "Reserved for future definition."
msgstr ""

#: ../Doc/library/uuid.rst:215
msgid ""
"This specification defines a Uniform Resource Name namespace for UUIDs, the "
"internal format of UUIDs, and methods of generating UUIDs."
msgstr ""

#: ../Doc/library/uuid.rst:224
msgid "Here are some examples of typical usage of the :mod:`uuid` module::"
msgstr ""

#: ../Doc/library/warnings.rst:2
msgid ":mod:`warnings` --- Warning control"
msgstr ""

# ce27593d281a4068bcbce42354433515
#: ../Doc/library/warnings.rst:12
msgid "**Source code:** :source:`Lib/warnings.py`"
msgstr ""

#: ../Doc/library/warnings.rst:16
msgid ""
"Warning messages are typically issued in situations where it is useful to "
"alert the user of some condition in a program, where that condition "
"(normally) doesn't warrant raising an exception and terminating the "
"program.  For example, one might want to issue a warning when a program uses "
"an obsolete module."
msgstr ""

# cfd23f0229c8496da5d7fba133b431e7
#: ../Doc/library/warnings.rst:21
msgid ""
"Python programmers issue warnings by calling the :func:`warn` function "
"defined in this module.  (C programmers use :c:func:`PyErr_WarnEx`; see :ref:"
"`exceptionhandling` for details)."
msgstr ""

#: ../Doc/library/warnings.rst:25
msgid ""
"Warning messages are normally written to ``sys.stderr``, but their "
"disposition can be changed flexibly, from ignoring all warnings to turning "
"them into exceptions.  The disposition of warnings can vary based on the "
"warning category (see below), the text of the warning message, and the "
"source location where it is issued.  Repetitions of a particular warning for "
"the same source location are typically suppressed."
msgstr ""

#: ../Doc/library/warnings.rst:32
msgid ""
"There are two stages in warning control: first, each time a warning is "
"issued, a determination is made whether a message should be issued or not; "
"next, if a message is to be issued, it is formatted and printed using a user-"
"settable hook."
msgstr ""

#: ../Doc/library/warnings.rst:36
msgid ""
"The determination whether to issue a warning message is controlled by the "
"warning filter, which is a sequence of matching rules and actions. Rules can "
"be added to the filter by calling :func:`filterwarnings` and reset to its "
"default state by calling :func:`resetwarnings`."
msgstr ""

#: ../Doc/library/warnings.rst:41
msgid ""
"The printing of warning messages is done by calling :func:`showwarning`, "
"which may be overridden; the default implementation of this function formats "
"the message by calling :func:`formatwarning`, which is also available for "
"use by custom implementations."
msgstr ""

#: ../Doc/library/warnings.rst:54
msgid "Warning Categories"
msgstr ""

#: ../Doc/library/warnings.rst:56
msgid ""
"There are a number of built-in exceptions that represent warning categories. "
"This categorization is useful to be able to filter out groups of warnings.  "
"The following warnings category classes are currently defined:"
msgstr ""

#: ../Doc/library/warnings.rst:61
msgid "Class"
msgstr ""

#: ../Doc/library/warnings.rst:63
msgid ":exc:`Warning`"
msgstr ""

#: ../Doc/library/warnings.rst:63
msgid ""
"This is the base class of all warning category classes.  It is a subclass "
"of :exc:`Exception`."
msgstr ""

#: ../Doc/library/warnings.rst:67
msgid ":exc:`UserWarning`"
msgstr ""

#: ../Doc/library/warnings.rst:67
msgid "The default category for :func:`warn`."
msgstr ""

#: ../Doc/library/warnings.rst:69
msgid ":exc:`DeprecationWarning`"
msgstr ""

#: ../Doc/library/warnings.rst:69
msgid ""
"Base category for warnings about deprecated features (ignored by default)."
msgstr ""

#: ../Doc/library/warnings.rst:72
msgid ":exc:`SyntaxWarning`"
msgstr ""

#: ../Doc/library/warnings.rst:72
msgid "Base category for warnings about dubious syntactic features."
msgstr ""

#: ../Doc/library/warnings.rst:75
msgid ":exc:`RuntimeWarning`"
msgstr ""

#: ../Doc/library/warnings.rst:75
msgid "Base category for warnings about dubious runtime features."
msgstr ""

#: ../Doc/library/warnings.rst:78
msgid ":exc:`FutureWarning`"
msgstr ""

#: ../Doc/library/warnings.rst:78
msgid ""
"Base category for warnings about constructs that will change semantically in "
"the future."
msgstr ""

#: ../Doc/library/warnings.rst:81
msgid ":exc:`PendingDeprecationWarning`"
msgstr ""

#: ../Doc/library/warnings.rst:81
msgid ""
"Base category for warnings about features that will be deprecated in the "
"future (ignored by default)."
msgstr ""

#: ../Doc/library/warnings.rst:85
msgid ":exc:`ImportWarning`"
msgstr ""

#: ../Doc/library/warnings.rst:85
msgid ""
"Base category for warnings triggered during the process of importing a "
"module (ignored by default)."
msgstr ""

#: ../Doc/library/warnings.rst:89
msgid ":exc:`UnicodeWarning`"
msgstr ""

#: ../Doc/library/warnings.rst:89
msgid "Base category for warnings related to Unicode."
msgstr ""

#: ../Doc/library/warnings.rst:93
msgid ""
"While these are technically built-in exceptions, they are documented here, "
"because conceptually they belong to the warnings mechanism."
msgstr ""

#: ../Doc/library/warnings.rst:96
msgid ""
"User code can define additional warning categories by subclassing one of the "
"standard warning categories.  A warning category must always be a subclass "
"of the :exc:`Warning` class."
msgstr ""

#: ../Doc/library/warnings.rst:107
msgid "The Warnings Filter"
msgstr ""

#: ../Doc/library/warnings.rst:109
msgid ""
"The warnings filter controls whether warnings are ignored, displayed, or "
"turned into errors (raising an exception)."
msgstr ""

#: ../Doc/library/warnings.rst:112
msgid ""
"Conceptually, the warnings filter maintains an ordered list of filter "
"specifications; any specific warning is matched against each filter "
"specification in the list in turn until a match is found; the match "
"determines the disposition of the match.  Each entry is a tuple of the form "
"(*action*, *message*, *category*, *module*, *lineno*), where:"
msgstr ""

#: ../Doc/library/warnings.rst:118
msgid "*action* is one of the following strings:"
msgstr ""

#: ../Doc/library/warnings.rst:121
msgid "Disposition"
msgstr ""

#: ../Doc/library/warnings.rst:123
msgid "``\"error\"``"
msgstr ""

#: ../Doc/library/warnings.rst:123
msgid "turn matching warnings into exceptions"
msgstr ""

#: ../Doc/library/warnings.rst:125
msgid "``\"ignore\"``"
msgstr ""

#: ../Doc/library/warnings.rst:125
msgid "never print matching warnings"
msgstr ""

#: ../Doc/library/warnings.rst:127
msgid "``\"always\"``"
msgstr ""

#: ../Doc/library/warnings.rst:127
msgid "always print matching warnings"
msgstr ""

#: ../Doc/library/warnings.rst:129
msgid "``\"default\"``"
msgstr ""

#: ../Doc/library/warnings.rst:129
msgid ""
"print the first occurrence of matching warnings for each location where the "
"warning is issued"
msgstr ""

#: ../Doc/library/warnings.rst:133
msgid "``\"module\"``"
msgstr ""

#: ../Doc/library/warnings.rst:133
msgid ""
"print the first occurrence of matching warnings for each module where the "
"warning is issued"
msgstr ""

#: ../Doc/library/warnings.rst:137
msgid "``\"once\"``"
msgstr ""

#: ../Doc/library/warnings.rst:137
msgid ""
"print only the first occurrence of matching warnings, regardless of location"
msgstr ""

#: ../Doc/library/warnings.rst:141
msgid ""
"*message* is a string containing a regular expression that the warning "
"message must match (the match is compiled to always be case-insensitive)."
msgstr ""

#: ../Doc/library/warnings.rst:144
msgid ""
"*category* is a class (a subclass of :exc:`Warning`) of which the warning "
"category must be a subclass in order to match."
msgstr ""

#: ../Doc/library/warnings.rst:147
msgid ""
"*module* is a string containing a regular expression that the module name "
"must match (the match is compiled to be case-sensitive)."
msgstr ""

#: ../Doc/library/warnings.rst:150
msgid ""
"*lineno* is an integer that the line number where the warning occurred must "
"match, or ``0`` to match all line numbers."
msgstr ""

#: ../Doc/library/warnings.rst:153
msgid ""
"Since the :exc:`Warning` class is derived from the built-in :exc:`Exception` "
"class, to turn a warning into an error we simply raise ``category(message)``."
msgstr ""

#: ../Doc/library/warnings.rst:156
msgid ""
"The warnings filter is initialized by :option:`-W` options passed to the "
"Python interpreter command line.  The interpreter saves the arguments for "
"all :option:`-W` options without interpretation in ``sys.warnoptions``; the :"
"mod:`warnings` module parses these when it is first imported (invalid "
"options are ignored, after printing a message to ``sys.stderr``)."
msgstr ""

# c59255559eaa46a9b3381eae94d9c3ba
#: ../Doc/library/warnings.rst:164
msgid "Default Warning Filters"
msgstr ""

# e5b57d74bec34c53aabb0944d0fbea48
#: ../Doc/library/warnings.rst:166
msgid ""
"By default, Python installs several warning filters, which can be overridden "
"by the command-line options passed to :option:`-W` and calls to :func:"
"`filterwarnings`."
msgstr ""

# 76712e9646584a72ad342d0094ad48e6
#: ../Doc/library/warnings.rst:170
msgid ""
":exc:`DeprecationWarning` and :exc:`PendingDeprecationWarning`, and :exc:"
"`ImportWarning` are ignored."
msgstr ""

# f4af344c87244f2a8072500bddf0c308
#: ../Doc/library/warnings.rst:173
msgid ""
":exc:`BytesWarning` is ignored unless the :option:`-b` option is given once "
"or twice; in this case this warning is either printed (``-b``) or turned "
"into an exception (``-bb``)."
msgstr ""

#: ../Doc/library/warnings.rst:181
msgid "Temporarily Suppressing Warnings"
msgstr ""

#: ../Doc/library/warnings.rst:183
msgid ""
"If you are using code that you know will raise a warning, such as a "
"deprecated function, but do not want to see the warning, then it is possible "
"to suppress the warning using the :class:`catch_warnings` context manager::"
msgstr ""

#: ../Doc/library/warnings.rst:196
msgid ""
"While within the context manager all warnings will simply be ignored. This "
"allows you to use known-deprecated code without having to see the warning "
"while not suppressing the warning for other code that might not be aware of "
"its use of deprecated code.  Note: this can only be guaranteed in a single-"
"threaded application. If two or more threads use the :class:`catch_warnings` "
"context manager at the same time, the behavior is undefined."
msgstr ""

#: ../Doc/library/warnings.rst:208
msgid "Testing Warnings"
msgstr ""

#: ../Doc/library/warnings.rst:210
msgid ""
"To test warnings raised by code, use the :class:`catch_warnings` context "
"manager. With it you can temporarily mutate the warnings filter to "
"facilitate your testing. For instance, do the following to capture all "
"raised warnings to check::"
msgstr ""

#: ../Doc/library/warnings.rst:230
msgid ""
"One can also cause all warnings to be exceptions by using ``error`` instead "
"of ``always``. One thing to be aware of is that if a warning has already "
"been raised because of a ``once``/``default`` rule, then no matter what "
"filters are set the warning will not be seen again unless the warnings "
"registry related to the warning has been cleared."
msgstr ""

#: ../Doc/library/warnings.rst:236
msgid ""
"Once the context manager exits, the warnings filter is restored to its state "
"when the context was entered. This prevents tests from changing the warnings "
"filter in unexpected ways between tests and leading to indeterminate test "
"results. The :func:`showwarning` function in the module is also restored to "
"its original value.  Note: this can only be guaranteed in a single-threaded "
"application. If two or more threads use the :class:`catch_warnings` context "
"manager at the same time, the behavior is undefined."
msgstr ""

#: ../Doc/library/warnings.rst:244
msgid ""
"When testing multiple operations that raise the same kind of warning, it is "
"important to test them in a manner that confirms each operation is raising a "
"new warning (e.g. set warnings to be raised as exceptions and check the "
"operations raise exceptions, check that the length of the warning list "
"continues to increase after each operation, or else delete the previous "
"entries from the warnings list before each new operation)."
msgstr ""

#: ../Doc/library/warnings.rst:253
msgid "Updating Code For New Versions of Python"
msgstr ""

#: ../Doc/library/warnings.rst:255
msgid ""
"Warnings that are only of interest to the developer are ignored by default. "
"As such you should make sure to test your code with typically ignored "
"warnings made visible. You can do this from the command-line by passing :"
"option:`-Wd` to the interpreter (this is shorthand for :option:`-W "
"default`).  This enables default handling for all warnings, including those "
"that are ignored by default. To change what action is taken for encountered "
"warnings you simply change what argument is passed to :option:`-W`, e.g. :"
"option:`-W error`. See the :option:`-W` flag for more details on what is "
"possible."
msgstr ""

#: ../Doc/library/warnings.rst:264
msgid "To programmatically do the same as :option:`-Wd`, use::"
msgstr ""

#: ../Doc/library/warnings.rst:268
msgid ""
"Make sure to execute this code as soon as possible. This prevents the "
"registering of what warnings have been raised from unexpectedly influencing "
"how future warnings are treated."
msgstr ""

#: ../Doc/library/warnings.rst:272
msgid ""
"Having certain warnings ignored by default is done to prevent a user from "
"seeing warnings that are only of interest to the developer. As you do not "
"necessarily have control over what interpreter a user uses to run their "
"code, it is possible that a new version of Python will be released between "
"your release cycles.  The new interpreter release could trigger new warnings "
"in your code that were not there in an older interpreter, e.g. :exc:"
"`DeprecationWarning` for a module that you are using. While you as a "
"developer want to be notified that your code is using a deprecated module, "
"to a user this information is essentially noise and provides no benefit to "
"them."
msgstr ""

#: ../Doc/library/warnings.rst:286
msgid "Available Functions"
msgstr ""

#: ../Doc/library/warnings.rst:291
msgid ""
"Issue a warning, or maybe ignore it or raise an exception.  The *category* "
"argument, if given, must be a warning category class (see above); it "
"defaults to :exc:`UserWarning`.  Alternatively *message* can be a :exc:"
"`Warning` instance, in which case *category* will be ignored and ``message."
"__class__`` will be used. In this case the message text will be ``str"
"(message)``. This function raises an exception if the particular warning "
"issued is changed into an error by the warnings filter see above.  The "
"*stacklevel* argument can be used by wrapper functions written in Python, "
"like this::"
msgstr ""

#: ../Doc/library/warnings.rst:303
msgid ""
"This makes the warning refer to :func:`deprecation`'s caller, rather than to "
"the source of :func:`deprecation` itself (since the latter would defeat the "
"purpose of the warning message)."
msgstr ""

#: ../Doc/library/warnings.rst:310
msgid ""
"This is a low-level interface to the functionality of :func:`warn`, passing "
"in explicitly the message, category, filename and line number, and "
"optionally the module name and the registry (which should be the "
"``__warningregistry__`` dictionary of the module).  The module name defaults "
"to the filename with ``.py`` stripped; if no registry is passed, the warning "
"is never suppressed. *message* must be a string and *category* a subclass "
"of :exc:`Warning` or *message* may be a :exc:`Warning` instance, in which "
"case *category* will be ignored."
msgstr ""

#: ../Doc/library/warnings.rst:319
msgid ""
"*module_globals*, if supplied, should be the global namespace in use by the "
"code for which the warning is issued.  (This argument is used to support "
"displaying source for modules found in zipfiles or other non-filesystem "
"import sources)."
msgstr ""

# 0635b54c3fa64a76b5c69b5f002229fa
#: ../Doc/library/warnings.rst:330
msgid ""
"Issue a warning related to Python 3.x deprecation. Warnings are only shown "
"when Python is started with the -3 option. Like :func:`warn` *message* must "
"be a string and *category* a subclass of :exc:`Warning`. :func:`warnpy3k` is "
"using :exc:`DeprecationWarning` as default warning class."
msgstr ""

#: ../Doc/library/warnings.rst:340
msgid ""
"Write a warning to a file.  The default implementation calls ``formatwarning"
"(message, category, filename, lineno, line)`` and writes the resulting "
"string to *file*, which defaults to ``sys.stderr``.  You may replace this "
"function with an alternative implementation by assigning to ``warnings."
"showwarning``. *line* is a line of source code to be included in the warning "
"message; if *line* is not supplied, :func:`showwarning` will try to read the "
"line specified by *filename* and *lineno*."
msgstr ""

#: ../Doc/library/warnings.rst:355
msgid ""
"Format a warning the standard way.  This returns a string which may contain "
"embedded newlines and ends in a newline.  *line* is a line of source code to "
"be included in the warning message; if *line* is not supplied, :func:"
"`formatwarning` will try to read the line specified by *filename* and "
"*lineno*."
msgstr ""

#: ../Doc/library/warnings.rst:367
msgid ""
"Insert an entry into the list of :ref:`warnings filter specifications "
"<warning-filter>`.  The entry is inserted at the front by default; if "
"*append* is true, it is inserted at the end.  This checks the types of the "
"arguments, compiles the *message* and *module* regular expressions, and "
"inserts them as a tuple in the list of warnings filters.  Entries closer to "
"the front of the list override entries later in the list, if both match a "
"particular warning.  Omitted arguments default to a value that matches "
"everything."
msgstr ""

#: ../Doc/library/warnings.rst:379
msgid ""
"Insert a simple entry into the list of :ref:`warnings filter specifications "
"<warning-filter>`.  The meaning of the function parameters is as for :func:"
"`filterwarnings`, but regular expressions are not needed as the filter "
"inserted always matches any message in any module as long as the category "
"and line number match."
msgstr ""

#: ../Doc/library/warnings.rst:388
msgid ""
"Reset the warnings filter.  This discards the effect of all previous calls "
"to :func:`filterwarnings`, including that of the :option:`-W` command line "
"options and calls to :func:`simplefilter`."
msgstr ""

#: ../Doc/library/warnings.rst:394
msgid "Available Context Managers"
msgstr ""

#: ../Doc/library/warnings.rst:398
msgid ""
"A context manager that copies and, upon exit, restores the warnings filter "
"and the :func:`showwarning` function. If the *record* argument is :const:"
"`False` (the default) the context manager returns :class:`None` on entry. If "
"*record* is :const:`True`, a list is returned that is progressively "
"populated with objects as seen by a custom :func:`showwarning` function "
"(which also suppresses output to ``sys.stdout``). Each object in the list "
"has attributes with the same names as the arguments to :func:`showwarning`."
msgstr ""

#: ../Doc/library/warnings.rst:407
msgid ""
"The *module* argument takes a module that will be used instead of the module "
"returned when you import :mod:`warnings` whose filter will be protected. "
"This argument exists primarily for testing the :mod:`warnings` module itself."
msgstr ""

#: ../Doc/library/warnings.rst:414
msgid ""
"The :class:`catch_warnings` manager works by replacing and then later "
"restoring the module's :func:`showwarning` function and internal list of "
"filter specifications.  This means the context manager is modifying global "
"state and therefore is not thread-safe."
msgstr ""

# 5886fe69cbf94faf8cc81c40ec5e4a5c
#: ../Doc/library/warnings.rst:422
msgid ""
"In Python 3, the arguments to the constructor for :class:`catch_warnings` "
"are keyword-only arguments."
msgstr ""

#: ../Doc/library/wave.rst:2
msgid ":mod:`wave` --- Read and write WAV files"
msgstr ""

# b57ee414b0fe4fc08f050f0759b9f095
#: ../Doc/library/wave.rst:9
msgid "**Source code:** :source:`Lib/wave.py`"
msgstr ""

#: ../Doc/library/wave.rst:13
msgid ""
"The :mod:`wave` module provides a convenient interface to the WAV sound "
"format. It does not support compression/decompression, but it does support "
"mono/stereo."
msgstr ""

#: ../Doc/library/wave.rst:16
msgid "The :mod:`wave` module defines the following function and exception:"
msgstr ""

# 52819b82bfb2485f86097d86f94b7b7e
#: ../Doc/library/wave.rst:21
msgid ""
"If *file* is a string, open the file by that name, otherwise treat it as a "
"seekable file-like object.  *mode* can be any of"
msgstr ""

#: ../Doc/library/wave.rst:30
msgid "Note that it does not allow read/write WAV files."
msgstr ""

# 50fe3b2ef31948c0af5838b8c0942047
#: ../Doc/library/wave.rst:32
msgid ""
"A *mode* of ``'r'`` or ``'rb'`` returns a :class:`Wave_read` object, while a "
"*mode* of ``'w'`` or ``'wb'`` returns a :class:`Wave_write` object.  If "
"*mode* is omitted and a file-like object is passed as *file*, ``file.mode`` "
"is used as the default value for *mode* (the ``'b'`` flag is still added if "
"necessary)."
msgstr ""

# adaf35013454452f90beff352b37f577
#: ../Doc/library/wave.rst:38
msgid ""
"If you pass in a file-like object, the wave object will not close it when "
"its :meth:`close` method is called; it is the caller's responsibility to "
"close the file object."
msgstr ""

#: ../Doc/library/wave.rst:50
msgid ""
"An error raised when something is impossible because it violates the WAV "
"specification or hits an implementation deficiency."
msgstr ""

#: ../Doc/library/wave.rst:57
msgid "Wave_read Objects"
msgstr ""

#: ../Doc/library/wave.rst:59
msgid ""
"Wave_read objects, as returned by :func:`.open`, have the following methods:"
msgstr ""

# 40a71bf818754ebbb21ba1c5892b97ca
#: ../Doc/library/wave.rst:64
msgid ""
"Close the stream if it was opened by :mod:`wave`, and make the instance "
"unusable.  This is called automatically on object collection."
msgstr ""

#: ../Doc/library/wave.rst:70
msgid "Returns number of audio channels (``1`` for mono, ``2`` for stereo)."
msgstr ""

#: ../Doc/library/wave.rst:90
msgid "Returns compression type (``'NONE'`` is the only supported type)."
msgstr ""

#: ../Doc/library/wave.rst:95
msgid ""
"Human-readable version of :meth:`getcomptype`. Usually ``'not compressed'`` "
"parallels ``'NONE'``."
msgstr ""

#: ../Doc/library/wave.rst:107
msgid "Reads and returns at most *n* frames of audio, as a string of bytes."
msgstr ""

#: ../Doc/library/wave.rst:114
msgid ""
"The following two methods are defined for compatibility with the :mod:`aifc` "
"module, and don't do anything interesting."
msgstr ""

#: ../Doc/library/wave.rst:133
msgid "Set the file pointer to the specified position."
msgstr ""

#: ../Doc/library/wave.rst:138
msgid "Return current file pointer position."
msgstr ""

#: ../Doc/library/wave.rst:144
msgid "Wave_write Objects"
msgstr ""

#: ../Doc/library/wave.rst:146
msgid ""
"Wave_write objects, as returned by :func:`.open`, have the following methods:"
msgstr ""

# da9a2b09f45941459a14714f98404fe4
#: ../Doc/library/wave.rst:151
msgid ""
"Make sure *nframes* is correct, and close the file if it was opened by :mod:"
"`wave`.  This method is called upon object collection."
msgstr ""

#: ../Doc/library/wave.rst:162
msgid "Set the sample width to *n* bytes."
msgstr ""

#: ../Doc/library/wave.rst:167
msgid "Set the frame rate to *n*."
msgstr ""

#: ../Doc/library/wave.rst:172
msgid ""
"Set the number of frames to *n*. This will be changed later if more frames "
"are written."
msgstr ""

#: ../Doc/library/wave.rst:178
msgid ""
"Set the compression type and description. At the moment, only compression "
"type ``NONE`` is supported, meaning no compression."
msgstr ""

#: ../Doc/library/wave.rst:184
msgid ""
"The *tuple* should be ``(nchannels, sampwidth, framerate, nframes, comptype, "
"compname)``, with values valid for the :meth:`set\\*` methods.  Sets all "
"parameters."
msgstr ""

#: ../Doc/library/wave.rst:191
msgid ""
"Return current position in the file, with the same disclaimer for the :meth:"
"`Wave_read.tell` and :meth:`Wave_read.setpos` methods."
msgstr ""

#: ../Doc/library/wave.rst:205
msgid ""
"Note that it is invalid to set any parameters after calling :meth:"
"`writeframes` or :meth:`writeframesraw`, and any attempt to do so will "
"raise :exc:`wave.Error`."
msgstr ""

#: ../Doc/library/weakref.rst:2
msgid ":mod:`weakref` --- Weak references"
msgstr ""

# f472757d2e64407a9f5c2835dcdcea93
#: ../Doc/library/weakref.rst:14
msgid "**Source code:** :source:`Lib/weakref.py`"
msgstr ""

#: ../Doc/library/weakref.rst:18
msgid ""
"The :mod:`weakref` module allows the Python programmer to create :dfn:`weak "
"references` to objects."
msgstr ""

#: ../Doc/library/weakref.rst:24
msgid ""
"In the following, the term :dfn:`referent` means the object which is "
"referred to by a weak reference."
msgstr ""

#: ../Doc/library/weakref.rst:27
msgid ""
"A weak reference to an object is not enough to keep the object alive: when "
"the only remaining references to a referent are weak references, :term:"
"`garbage collection` is free to destroy the referent and reuse its memory "
"for something else.  A primary use for weak references is to implement "
"caches or mappings holding large objects, where it's desired that a large "
"object not be kept alive solely because it appears in a cache or mapping."
msgstr ""

#: ../Doc/library/weakref.rst:34
msgid ""
"For example, if you have a number of large binary image objects, you may "
"wish to associate a name with each.  If you used a Python dictionary to map "
"names to images, or images to names, the image objects would remain alive "
"just because they appeared as values or keys in the dictionaries.  The :"
"class:`WeakKeyDictionary` and :class:`WeakValueDictionary` classes supplied "
"by the :mod:`weakref` module are an alternative, using weak references to "
"construct mappings that don't keep objects alive solely because they appear "
"in the mapping objects.  If, for example, an image object is a value in a :"
"class:`WeakValueDictionary`, then when the last remaining references to that "
"image object are the weak references held by weak mappings, garbage "
"collection can reclaim the object, and its corresponding entries in weak "
"mappings are simply deleted."
msgstr ""

# 7d2151a5b153406b8daaa0cb178fc848
#: ../Doc/library/weakref.rst:47
msgid ""
":class:`WeakKeyDictionary` and :class:`WeakValueDictionary` use weak "
"references in their implementation, setting up callback functions on the "
"weak references that notify the weak dictionaries when a key or value has "
"been reclaimed by garbage collection.  Most programs should find that using "
"one of these weak dictionary types is all they need -- it's not usually "
"necessary to create your own weak references directly.  The low-level "
"machinery used by the weak dictionary implementations is exposed by the :mod:"
"`weakref` module for the benefit of advanced uses."
msgstr ""

# f314c33c97da447a9befffb266fb44a7
#: ../Doc/library/weakref.rst:56
msgid ""
"Not all objects can be weakly referenced; those objects which can include "
"class instances, functions written in Python (but not in C), methods (both "
"bound and unbound), sets, frozensets, file objects, :term:`generator`\\s, "
"type objects, :class:`DBcursor` objects from the :mod:`bsddb` module, "
"sockets, arrays, deques, regular expression pattern objects, and code "
"objects."
msgstr ""

#: ../Doc/library/weakref.rst:68
msgid ""
"Several built-in types such as :class:`list` and :class:`dict` do not "
"directly support weak references but can add support through subclassing::"
msgstr ""

# e1eb394e5ff549ca8b66f834292edba1
#: ../Doc/library/weakref.rst:78
msgid ""
"Other built-in types such as :class:`tuple` and :class:`long` do not support "
"weak references even when subclassed."
msgstr ""

#: ../Doc/library/weakref.rst:81
msgid ""
"Extension types can easily be made to support weak references; see :ref:"
"`weakref-support`."
msgstr ""

#: ../Doc/library/weakref.rst:87
msgid ""
"Return a weak reference to *object*.  The original object can be retrieved "
"by calling the reference object if the referent is still alive; if the "
"referent is no longer alive, calling the reference object will cause :const:"
"`None` to be returned.  If *callback* is provided and not :const:`None`, and "
"the returned weakref object is still alive, the callback will be called when "
"the object is about to be finalized; the weak reference object will be "
"passed as the only parameter to the callback; the referent will no longer be "
"available."
msgstr ""

#: ../Doc/library/weakref.rst:95
msgid ""
"It is allowable for many weak references to be constructed for the same "
"object. Callbacks registered for each weak reference will be called from the "
"most recently registered callback to the oldest registered callback."
msgstr ""

#: ../Doc/library/weakref.rst:99
msgid ""
"Exceptions raised by the callback will be noted on the standard error "
"output, but cannot be propagated; they are handled in exactly the same way "
"as exceptions raised from an object's :meth:`__del__` method."
msgstr ""

#: ../Doc/library/weakref.rst:103
msgid ""
"Weak references are :term:`hashable` if the *object* is hashable.  They will "
"maintain their hash value even after the *object* was deleted.  If :func:"
"`hash` is called the first time only after the *object* was deleted, the "
"call will raise :exc:`TypeError`."
msgstr ""

#: ../Doc/library/weakref.rst:108
msgid ""
"Weak references support tests for equality, but not ordering.  If the "
"referents are still alive, two references have the same equality "
"relationship as their referents (regardless of the *callback*).  If either "
"referent has been deleted, the references are equal only if the reference "
"objects are the same object."
msgstr ""

#: ../Doc/library/weakref.rst:120
msgid ""
"Return a proxy to *object* which uses a weak reference.  This supports use "
"of the proxy in most contexts instead of requiring the explicit "
"dereferencing used with weak reference objects.  The returned object will "
"have a type of either ``ProxyType`` or ``CallableProxyType``, depending on "
"whether *object* is callable.  Proxy objects are not :term:`hashable` "
"regardless of the referent; this avoids a number of problems related to "
"their fundamentally mutable nature, and prevent their use as dictionary "
"keys.  *callback* is the same as the parameter of the same name to the :func:"
"`ref` function."
msgstr ""

#: ../Doc/library/weakref.rst:132
msgid ""
"Return the number of weak references and proxies which refer to *object*."
msgstr ""

#: ../Doc/library/weakref.rst:137
msgid ""
"Return a list of all weak reference and proxy objects which refer to "
"*object*."
msgstr ""

#: ../Doc/library/weakref.rst:142
msgid ""
"Mapping class that references keys weakly.  Entries in the dictionary will "
"be discarded when there is no longer a strong reference to the key.  This "
"can be used to associate additional data with an object owned by other parts "
"of an application without adding attributes to those objects.  This can be "
"especially useful with objects that override attribute accesses."
msgstr ""

#: ../Doc/library/weakref.rst:150
msgid ""
"Caution: Because a :class:`WeakKeyDictionary` is built on top of a Python "
"dictionary, it must not change size when iterating over it.  This can be "
"difficult to ensure for a :class:`WeakKeyDictionary` because actions "
"performed by the program during iteration may cause items in the dictionary "
"to vanish \"by magic\" (as a side effect of garbage collection)."
msgstr ""

#: ../Doc/library/weakref.rst:156
msgid ""
":class:`WeakKeyDictionary` objects have the following additional methods.  "
"These expose the internal references directly.  The references are not "
"guaranteed to be \"live\" at the time they are used, so the result of "
"calling the references needs to be checked before being used.  This can be "
"used to avoid creating references that will cause the garbage collector to "
"keep the keys around longer than needed."
msgstr ""

# 70166196f6cf4d8b9b3cc213bce68733
#: ../Doc/library/weakref.rst:166
msgid "Return an :term:`iterator` that yields the weak references to the keys."
msgstr ""

# ed51e31b106942389a0ab42f6497d5dd
#: ../Doc/library/weakref.rst:173
msgid "Return a list of weak references to the keys."
msgstr ""

#: ../Doc/library/weakref.rst:180
msgid ""
"Mapping class that references values weakly.  Entries in the dictionary will "
"be discarded when no strong reference to the value exists any more."
msgstr ""

#: ../Doc/library/weakref.rst:185
msgid ""
"Caution:  Because a :class:`WeakValueDictionary` is built on top of a Python "
"dictionary, it must not change size when iterating over it.  This can be "
"difficult to ensure for a :class:`WeakValueDictionary` because actions "
"performed by the program during iteration may cause items in the dictionary "
"to vanish \"by magic\" (as a side effect of garbage collection)."
msgstr ""

# 29a5fef6b3744a8d8f28af94695ec21f
#: ../Doc/library/weakref.rst:191
msgid ""
":class:`WeakValueDictionary` objects have the following additional methods. "
"These method have the same issues as the :meth:`iterkeyrefs` and :meth:"
"`keyrefs` methods of :class:`WeakKeyDictionary` objects."
msgstr ""

# adc36c2717a14883b2aaecdd297df79d
#: ../Doc/library/weakref.rst:198
msgid ""
"Return an :term:`iterator` that yields the weak references to the values."
msgstr ""

# 81b302aa51404cc29e73b221b5598103
#: ../Doc/library/weakref.rst:205
msgid "Return a list of weak references to the values."
msgstr ""

#: ../Doc/library/weakref.rst:212
msgid ""
"Set class that keeps weak references to its elements.  An element will be "
"discarded when no strong reference to it exists any more."
msgstr ""

#: ../Doc/library/weakref.rst:220
msgid "The type object for weak references objects."
msgstr ""

#: ../Doc/library/weakref.rst:225
msgid "The type object for proxies of objects which are not callable."
msgstr ""

#: ../Doc/library/weakref.rst:230
msgid "The type object for proxies of callable objects."
msgstr ""

#: ../Doc/library/weakref.rst:235
msgid ""
"Sequence containing all the type objects for proxies.  This can make it "
"simpler to test if an object is a proxy without being dependent on naming "
"both proxy types."
msgstr ""

#: ../Doc/library/weakref.rst:242
msgid ""
"Exception raised when a proxy object is used but the underlying object has "
"been collected.  This is the same as the standard :exc:`ReferenceError` "
"exception."
msgstr ""

#: ../Doc/library/weakref.rst:249
msgid ""
"The proposal and rationale for this feature, including links to earlier "
"implementations and information about similar features in other languages."
msgstr ""

#: ../Doc/library/weakref.rst:256
msgid "Weak Reference Objects"
msgstr ""

#: ../Doc/library/weakref.rst:258
msgid ""
"Weak reference objects have no attributes or methods, but do allow the "
"referent to be obtained, if it still exists, by calling it:"
msgstr ""

#: ../Doc/library/weakref.rst:271
msgid ""
"If the referent no longer exists, calling the reference object returns :"
"const:`None`:"
msgstr ""

#: ../Doc/library/weakref.rst:278
msgid ""
"Testing that a weak reference object is still live should be done using the "
"expression ``ref() is not None``.  Normally, application code that needs to "
"use a reference object should follow this pattern::"
msgstr ""

#: ../Doc/library/weakref.rst:291
msgid ""
"Using a separate test for \"liveness\" creates race conditions in threaded "
"applications; another thread can cause a weak reference to become "
"invalidated before the weak reference is called; the idiom shown above is "
"safe in threaded applications as well as single-threaded applications."
msgstr ""

#: ../Doc/library/weakref.rst:296
msgid ""
"Specialized versions of :class:`ref` objects can be created through "
"subclassing. This is used in the implementation of the :class:"
"`WeakValueDictionary` to reduce the memory overhead for each entry in the "
"mapping.  This may be most useful to associate additional information with a "
"reference, but could also be used to insert additional processing on calls "
"to retrieve the referent."
msgstr ""

#: ../Doc/library/weakref.rst:302
msgid ""
"This example shows how a subclass of :class:`ref` can be used to store "
"additional information about an object and affect the value that's returned "
"when the referent is accessed::"
msgstr ""

#: ../Doc/library/weakref.rst:331
msgid ""
"This simple example shows how an application can use objects IDs to retrieve "
"objects that it has seen before.  The IDs of the objects can then be used in "
"other data structures without forcing the objects to remain alive, but the "
"objects can still be retrieved by ID if they do."
msgstr ""

#: ../Doc/library/webbrowser.rst:2
msgid ":mod:`webbrowser` --- Convenient Web-browser controller"
msgstr ""

# 1b22a3b5566b4ec2877eb2a041a2799c
#: ../Doc/library/webbrowser.rst:9
msgid "**Source code:** :source:`Lib/webbrowser.py`"
msgstr ""

#: ../Doc/library/webbrowser.rst:13
msgid ""
"The :mod:`webbrowser` module provides a high-level interface to allow "
"displaying Web-based documents to users. Under most circumstances, simply "
"calling the :func:`.open` function from this module will do the right thing."
msgstr ""

#: ../Doc/library/webbrowser.rst:17
msgid ""
"Under Unix, graphical browsers are preferred under X11, but text-mode "
"browsers will be used if graphical browsers are not available or an X11 "
"display isn't available.  If text-mode browsers are used, the calling "
"process will block until the user exits the browser."
msgstr ""

#: ../Doc/library/webbrowser.rst:22
msgid ""
"If the environment variable :envvar:`BROWSER` exists, it is interpreted to "
"override the platform default list of browsers, as a :data:`os.pathsep`-"
"separated list of browsers to try in order.  When the value of a list part "
"contains the string ``%s``, then it is  interpreted as a literal browser "
"command line to be used with the argument URL substituted for ``%s``; if the "
"part does not contain ``%s``, it is simply interpreted as the name of the "
"browser to launch. [1]_"
msgstr ""

#: ../Doc/library/webbrowser.rst:29
msgid ""
"For non-Unix platforms, or when a remote browser is available on Unix, the "
"controlling process will not wait for the user to finish with the browser, "
"but allow the remote browser to maintain its own windows on the display.  If "
"remote browsers are not available on Unix, the controlling process will "
"launch a new browser and wait."
msgstr ""

# ac9f3209fc1b4e1e87d25ce7cf2706f7
#: ../Doc/library/webbrowser.rst:35
msgid ""
"The script :program:`webbrowser` can be used as a command-line interface for "
"the module. It accepts an URL as the argument. It accepts the following "
"optional parameters: ``-n`` opens the URL in a new browser window, if "
"possible; ``-t`` opens the URL in a new browser page (\"tab\"). The options "
"are, naturally, mutually exclusive.  Usage example::"
msgstr ""

#: ../Doc/library/webbrowser.rst:48
msgid "Exception raised when a browser control error occurs."
msgstr ""

#: ../Doc/library/webbrowser.rst:50
msgid "The following functions are defined:"
msgstr ""

#: ../Doc/library/webbrowser.rst:55
msgid ""
"Display *url* using the default browser. If *new* is 0, the *url* is opened "
"in the same browser window if possible.  If *new* is 1, a new browser window "
"is opened if possible.  If *new* is 2, a new browser page (\"tab\") is "
"opened if possible.  If *autoraise* is ``True``, the window is raised if "
"possible (note that under many window managers this will occur regardless of "
"the setting of this variable)."
msgstr ""

#: ../Doc/library/webbrowser.rst:62
msgid ""
"Note that on some platforms, trying to open a filename using this function, "
"may work and start the operating system's associated program.  However, this "
"is neither supported nor portable."
msgstr ""

#: ../Doc/library/webbrowser.rst:72
msgid ""
"Open *url* in a new window of the default browser, if possible, otherwise, "
"open *url* in the only browser window."
msgstr ""

#: ../Doc/library/webbrowser.rst:77
msgid ""
"Open *url* in a new page (\"tab\") of the default browser, if possible, "
"otherwise equivalent to :func:`open_new`."
msgstr ""

# 9e2d378250d44133b0d4fe4b658e636f
#: ../Doc/library/webbrowser.rst:85
msgid ""
"Return a controller object for the browser type *name*.  If *name* is empty, "
"return a controller for a default browser appropriate to the caller's "
"environment."
msgstr ""

#: ../Doc/library/webbrowser.rst:92
msgid ""
"Register the browser type *name*.  Once a browser type is registered, the :"
"func:`get` function can return a controller for that browser type.  If "
"*instance* is not provided, or is ``None``, *constructor* will be called "
"without parameters to create an instance when needed.  If *instance* is "
"provided, *constructor* will never be called, and may be ``None``."
msgstr ""

#: ../Doc/library/webbrowser.rst:98
msgid ""
"This entry point is only useful if you plan to either set the :envvar:"
"`BROWSER` variable or call :func:`get` with a nonempty argument matching the "
"name of a handler you declare."
msgstr ""

#: ../Doc/library/webbrowser.rst:102
msgid ""
"A number of browser types are predefined.  This table gives the type names "
"that may be passed to the :func:`get` function and the corresponding "
"instantiations for the controller classes, all defined in this module."
msgstr ""

#: ../Doc/library/webbrowser.rst:107
msgid "Type Name"
msgstr ""

#: ../Doc/library/webbrowser.rst:107
msgid "Class Name"
msgstr ""

#: ../Doc/library/webbrowser.rst:109
msgid "``'mozilla'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:109 ../Doc/library/webbrowser.rst:111
msgid ":class:`Mozilla('mozilla')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:111
msgid "``'firefox'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:113
msgid "``'netscape'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:113
msgid ":class:`Mozilla('netscape')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:115
msgid "``'galeon'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:115
msgid ":class:`Galeon('galeon')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:117
msgid "``'epiphany'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:117
msgid ":class:`Galeon('epiphany')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:119
msgid "``'skipstone'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:119
msgid ":class:`BackgroundBrowser('skipstone')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:121
msgid "``'kfmclient'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:121 ../Doc/library/webbrowser.rst:123
#: ../Doc/library/webbrowser.rst:125
msgid ":class:`Konqueror()`"
msgstr ""

#: ../Doc/library/webbrowser.rst:123
msgid "``'konqueror'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:125
msgid "``'kfm'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:127
msgid "``'mosaic'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:127
msgid ":class:`BackgroundBrowser('mosaic')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:129
msgid "``'opera'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:129
msgid ":class:`Opera()`"
msgstr ""

#: ../Doc/library/webbrowser.rst:131
msgid "``'grail'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:131
msgid ":class:`Grail()`"
msgstr ""

#: ../Doc/library/webbrowser.rst:133
msgid "``'links'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:133
msgid ":class:`GenericBrowser('links')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:135
msgid "``'elinks'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:135
msgid ":class:`Elinks('elinks')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:137
msgid "``'lynx'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:137
msgid ":class:`GenericBrowser('lynx')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:139
msgid "``'w3m'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:139
msgid ":class:`GenericBrowser('w3m')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:141
msgid "``'windows-default'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:141
msgid ":class:`WindowsDefault`"
msgstr ""

#: ../Doc/library/webbrowser.rst:143
msgid "``'macosx'``"
msgstr ""

#: ../Doc/library/webbrowser.rst:143
msgid ":class:`MacOSX('default')`"
msgstr ""

# 9ddc50a9350a4f869c9a274cf0de3155
#: ../Doc/library/webbrowser.rst:145
msgid "``'safari'``"
msgstr ""

# 71ee047440df4c86960478714548e287
#: ../Doc/library/webbrowser.rst:145
msgid ":class:`MacOSX('safari')`"
msgstr ""

#: ../Doc/library/webbrowser.rst:151
msgid ""
"\"Konqueror\" is the file manager for the KDE desktop environment for Unix, "
"and only makes sense to use if KDE is running.  Some way of reliably "
"detecting KDE would be nice; the :envvar:`KDEDIR` variable is not "
"sufficient.  Note also that the name \"kfm\" is used even when using the :"
"program:`konqueror` command with KDE 2 --- the implementation selects the "
"best strategy for running Konqueror."
msgstr ""

#: ../Doc/library/webbrowser.rst:158
msgid "Only on Windows platforms."
msgstr ""

#: ../Doc/library/webbrowser.rst:161
msgid "Only on Mac OS X platform."
msgstr ""

#: ../Doc/library/webbrowser.rst:163
msgid "Here are some simple examples::"
msgstr ""

#: ../Doc/library/webbrowser.rst:177
msgid "Browser Controller Objects"
msgstr ""

#: ../Doc/library/webbrowser.rst:179
msgid ""
"Browser controllers provide these methods which parallel three of the module-"
"level convenience functions:"
msgstr ""

#: ../Doc/library/webbrowser.rst:185
msgid ""
"Display *url* using the browser handled by this controller. If *new* is 1, a "
"new browser window is opened if possible. If *new* is 2, a new browser page "
"(\"tab\") is opened if possible."
msgstr ""

#: ../Doc/library/webbrowser.rst:192
msgid ""
"Open *url* in a new window of the browser handled by this controller, if "
"possible, otherwise, open *url* in the only browser window.  Alias :func:"
"`open_new`."
msgstr ""

#: ../Doc/library/webbrowser.rst:199
msgid ""
"Open *url* in a new page (\"tab\") of the browser handled by this "
"controller, if possible, otherwise equivalent to :func:`open_new`."
msgstr ""

#: ../Doc/library/webbrowser.rst:207
msgid ""
"Executables named here without a full path will be searched in the "
"directories given in the :envvar:`PATH` environment variable."
msgstr ""

# e84e757c8ff34570a605fe076d23b41a
#: ../Doc/library/whichdb.rst:2
msgid ":mod:`whichdb` --- Guess which DBM module created a database"
msgstr ""

# 5a1caf889f2f4554a24d21187e5aba42
#: ../Doc/library/whichdb.rst:8
msgid ""
"The :mod:`whichdb` module's only function has been put into the :mod:`dbm` "
"module in Python 3.  The :term:`2to3` tool will automatically adapt imports "
"when converting your sources to Python 3."
msgstr ""

# 891ba333447d492cab20a53485fd6c52
#: ../Doc/library/whichdb.rst:13
msgid ""
"The single function in this module attempts to guess which of the several "
"simple database modules available--\\ :mod:`dbm`, :mod:`gdbm`, or :mod:"
"`dbhash`\\ --should be used to open a given file."
msgstr ""

# 6b671228902d4e5799c512be40024a24
#: ../Doc/library/whichdb.rst:20
msgid ""
"Returns one of the following values: ``None`` if the file can't be opened "
"because it's unreadable or doesn't exist; the empty string (``''``) if the "
"file's format can't be guessed; or a string containing the required module "
"name, such as ``'dbm'`` or ``'gdbm'``."
msgstr ""

#: ../Doc/library/windows.rst:5
msgid "MS Windows Specific Services"
msgstr ""

#: ../Doc/library/windows.rst:7
msgid ""
"This chapter describes modules that are only available on MS Windows "
"platforms."
msgstr ""

#: ../Doc/library/winsound.rst:3
msgid ":mod:`winsound` --- Sound-playing interface for Windows"
msgstr ""

#: ../Doc/library/winsound.rst:14
msgid ""
"The :mod:`winsound` module provides access to the basic sound-playing "
"machinery provided by Windows platforms.  It includes functions and several "
"constants."
msgstr ""

#: ../Doc/library/winsound.rst:20
msgid ""
"Beep the PC's speaker. The *frequency* parameter specifies frequency, in "
"hertz, of the sound, and must be in the range 37 through 32,767. The "
"*duration* parameter specifies the number of milliseconds the sound should "
"last.  If the system is not able to beep the speaker, :exc:`RuntimeError` is "
"raised."
msgstr ""

# 92b52ad92bcc44d49480766b490b7d12
#: ../Doc/library/winsound.rst:30
msgid ""
"Call the underlying :c:func:`PlaySound` function from the Platform API.  The "
"*sound* parameter may be a filename, audio data as a string, or ``None``.  "
"Its interpretation depends on the value of *flags*, which can be a bitwise "
"ORed combination of the constants described below. If the *sound* parameter "
"is ``None``, any currently playing waveform sound is stopped. If the system "
"indicates an error, :exc:`RuntimeError` is raised."
msgstr ""

# 3566107bce1449d8ae838bd456da5059
#: ../Doc/library/winsound.rst:40
msgid ""
"Call the underlying :c:func:`MessageBeep` function from the Platform API.  "
"This plays a sound as specified in the registry.  The *type* argument "
"specifies which sound to play; possible values are ``-1``, "
"``MB_ICONASTERISK``, ``MB_ICONEXCLAMATION``, ``MB_ICONHAND``, "
"``MB_ICONQUESTION``, and ``MB_OK``, all described below.  The value ``-1`` "
"produces a \"simple beep\"; this is the final fallback if a sound cannot be "
"played otherwise."
msgstr ""

#: ../Doc/library/winsound.rst:52
msgid ""
"The *sound* parameter is the name of a WAV file. Do not use with :const:"
"`SND_ALIAS`."
msgstr ""

#: ../Doc/library/winsound.rst:58
msgid ""
"The *sound* parameter is a sound association name from the registry.  If the "
"registry contains no such name, play the system default sound unless :const:"
"`SND_NODEFAULT` is also specified. If no default sound is registered, raise :"
"exc:`RuntimeError`. Do not use with :const:`SND_FILENAME`."
msgstr ""

#: ../Doc/library/winsound.rst:63
msgid ""
"All Win32 systems support at least the following; most systems support many "
"more:"
msgstr ""

#: ../Doc/library/winsound.rst:67
msgid ":func:`PlaySound` *name*"
msgstr ""

#: ../Doc/library/winsound.rst:67
msgid "Corresponding Control Panel Sound name"
msgstr ""

#: ../Doc/library/winsound.rst:69
msgid "``'SystemAsterisk'``"
msgstr ""

#: ../Doc/library/winsound.rst:69
msgid "Asterisk"
msgstr ""

#: ../Doc/library/winsound.rst:71
msgid "``'SystemExclamation'``"
msgstr ""

#: ../Doc/library/winsound.rst:71
msgid "Exclamation"
msgstr ""

#: ../Doc/library/winsound.rst:73
msgid "``'SystemExit'``"
msgstr ""

#: ../Doc/library/winsound.rst:73
msgid "Exit Windows"
msgstr ""

#: ../Doc/library/winsound.rst:75
msgid "``'SystemHand'``"
msgstr ""

#: ../Doc/library/winsound.rst:75
msgid "Critical Stop"
msgstr ""

#: ../Doc/library/winsound.rst:77
msgid "``'SystemQuestion'``"
msgstr ""

#: ../Doc/library/winsound.rst:77
msgid "Question"
msgstr ""

#: ../Doc/library/winsound.rst:93
msgid ""
"Play the sound repeatedly.  The :const:`SND_ASYNC` flag must also be used to "
"avoid blocking.  Cannot be used with :const:`SND_MEMORY`."
msgstr ""

#: ../Doc/library/winsound.rst:99
msgid ""
"The *sound* parameter to :func:`PlaySound` is a memory image of a WAV file, "
"as a string."
msgstr ""

#: ../Doc/library/winsound.rst:104
msgid ""
"This module does not support playing from a memory image asynchronously, so "
"a combination of this flag and :const:`SND_ASYNC` will raise :exc:"
"`RuntimeError`."
msgstr ""

#: ../Doc/library/winsound.rst:110
msgid "Stop playing all instances of the specified sound."
msgstr ""

#: ../Doc/library/winsound.rst:114
msgid "This flag is not supported on modern Windows platforms."
msgstr ""

#: ../Doc/library/winsound.rst:119
msgid "Return immediately, allowing sounds to play asynchronously."
msgstr ""

#: ../Doc/library/winsound.rst:124
msgid ""
"If the specified sound cannot be found, do not play the system default sound."
msgstr ""

#: ../Doc/library/winsound.rst:129
msgid "Do not interrupt sounds currently playing."
msgstr ""

#: ../Doc/library/winsound.rst:134
msgid "Return immediately if the sound driver is busy."
msgstr ""

#: ../Doc/library/winsound.rst:139 ../Doc/library/winsound.rst:159
msgid "Play the ``SystemDefault`` sound."
msgstr ""

#: ../Doc/library/winsound.rst:144
msgid "Play the ``SystemExclamation`` sound."
msgstr ""

#: ../Doc/library/winsound.rst:149
msgid "Play the ``SystemHand`` sound."
msgstr ""

#: ../Doc/library/winsound.rst:154
msgid "Play the ``SystemQuestion`` sound."
msgstr ""

#: ../Doc/library/wsgiref.rst:2
msgid ":mod:`wsgiref` --- WSGI Utilities and Reference Implementation"
msgstr ""

#: ../Doc/library/wsgiref.rst:12
msgid ""
"The Web Server Gateway Interface (WSGI) is a standard interface between web "
"server software and web applications written in Python. Having a standard "
"interface makes it easy to use an application that supports WSGI with a "
"number of different web servers."
msgstr ""

#: ../Doc/library/wsgiref.rst:17
msgid ""
"Only authors of web servers and programming frameworks need to know every "
"detail and corner case of the WSGI design.  You don't need to understand "
"every detail of WSGI just to install a WSGI application or to write a web "
"application using an existing framework."
msgstr ""

#: ../Doc/library/wsgiref.rst:22
msgid ""
":mod:`wsgiref` is a reference implementation of the WSGI specification that "
"can be used to add WSGI support to a web server or framework.  It provides "
"utilities for manipulating WSGI environment variables and response headers, "
"base classes for implementing WSGI servers, a demo HTTP server that serves "
"WSGI applications, and a validation tool that checks WSGI servers and "
"applications for conformance to the WSGI specification (:pep:`333`)."
msgstr ""

#: ../Doc/library/wsgiref.rst:29
msgid ""
"See http://www.wsgi.org for more information about WSGI, and links to "
"tutorials and other resources."
msgstr ""

#: ../Doc/library/wsgiref.rst:36
msgid ":mod:`wsgiref.util` -- WSGI environment utilities"
msgstr ""

#: ../Doc/library/wsgiref.rst:42
msgid ""
"This module provides a variety of utility functions for working with WSGI "
"environments.  A WSGI environment is a dictionary containing HTTP request "
"variables as described in :pep:`333`.  All of the functions taking an "
"*environ* parameter expect a WSGI-compliant dictionary to be supplied; "
"please see :pep:`333` for a detailed specification."
msgstr ""

#: ../Doc/library/wsgiref.rst:51
msgid ""
"Return a guess for whether ``wsgi.url_scheme`` should be \"http\" or \"https"
"\", by checking for a ``HTTPS`` environment variable in the *environ* "
"dictionary.  The return value is a string."
msgstr ""

#: ../Doc/library/wsgiref.rst:55
msgid ""
"This function is useful when creating a gateway that wraps CGI or a CGI-like "
"protocol such as FastCGI.  Typically, servers providing such protocols will "
"include a ``HTTPS`` variable with a value of \"1\" \"yes\", or \"on\" when a "
"request is received via SSL.  So, this function returns \"https\" if such a "
"value is found, and \"http\" otherwise."
msgstr ""

#: ../Doc/library/wsgiref.rst:64
msgid ""
"Return the full request URI, optionally including the query string, using "
"the algorithm found in the \"URL Reconstruction\" section of :pep:`333`.  If "
"*include_query* is false, the query string is not included in the resulting "
"URI."
msgstr ""

#: ../Doc/library/wsgiref.rst:71
msgid ""
"Similar to :func:`request_uri`, except that the ``PATH_INFO`` and "
"``QUERY_STRING`` variables are ignored.  The result is the base URI of the "
"application object addressed by the request."
msgstr ""

#: ../Doc/library/wsgiref.rst:78
msgid ""
"Shift a single name from ``PATH_INFO`` to ``SCRIPT_NAME`` and return the "
"name. The *environ* dictionary is *modified* in-place; use a copy if you "
"need to keep the original ``PATH_INFO`` or ``SCRIPT_NAME`` intact."
msgstr ""

#: ../Doc/library/wsgiref.rst:82
msgid ""
"If there are no remaining path segments in ``PATH_INFO``, ``None`` is "
"returned."
msgstr ""

#: ../Doc/library/wsgiref.rst:84
msgid ""
"Typically, this routine is used to process each portion of a request URI "
"path, for example to treat the path as a series of dictionary keys. This "
"routine modifies the passed-in environment to make it suitable for invoking "
"another WSGI application that is located at the target URI. For example, if "
"there is a WSGI application at ``/foo``, and the request URI path is ``/foo/"
"bar/baz``, and the WSGI application at ``/foo`` calls :func:"
"`shift_path_info`, it will receive the string \"bar\", and the environment "
"will be updated to be suitable for passing to a WSGI application at ``/foo/"
"bar``.  That is, ``SCRIPT_NAME`` will change from ``/foo`` to ``/foo/bar``, "
"and ``PATH_INFO`` will change from ``/bar/baz`` to ``/baz``."
msgstr ""

#: ../Doc/library/wsgiref.rst:95
msgid ""
"When ``PATH_INFO`` is just a \"/\", this routine returns an empty string and "
"appends a trailing slash to ``SCRIPT_NAME``, even though empty path segments "
"are normally ignored, and ``SCRIPT_NAME`` doesn't normally end in a slash.  "
"This is intentional behavior, to ensure that an application can tell the "
"difference between URIs ending in ``/x`` from ones ending in ``/x/`` when "
"using this routine to do object traversal."
msgstr ""

#: ../Doc/library/wsgiref.rst:105
msgid "Update *environ* with trivial defaults for testing purposes."
msgstr ""

#: ../Doc/library/wsgiref.rst:107
msgid ""
"This routine adds various parameters required for WSGI, including "
"``HTTP_HOST``, ``SERVER_NAME``, ``SERVER_PORT``, ``REQUEST_METHOD``, "
"``SCRIPT_NAME``, ``PATH_INFO``, and all of the :pep:`333`\\ -defined ``wsgi."
"*`` variables.  It only supplies default values, and does not replace any "
"existing settings for these variables."
msgstr ""

#: ../Doc/library/wsgiref.rst:113
msgid ""
"This routine is intended to make it easier for unit tests of WSGI servers "
"and applications to set up dummy environments.  It should NOT be used by "
"actual WSGI servers or applications, since the data is fake!"
msgstr ""

#: ../Doc/library/wsgiref.rst:141
msgid ""
"In addition to the environment functions above, the :mod:`wsgiref.util` "
"module also provides these miscellaneous utilities:"
msgstr ""

#: ../Doc/library/wsgiref.rst:147
msgid ""
"Return true if 'header_name' is an HTTP/1.1 \"Hop-by-Hop\" header, as "
"defined by :rfc:`2616`."
msgstr ""

#: ../Doc/library/wsgiref.rst:153
msgid ""
"A wrapper to convert a file-like object to an :term:`iterator`.  The "
"resulting objects support both :meth:`__getitem__` and :meth:`__iter__` "
"iteration styles, for compatibility with Python 2.1 and Jython. As the "
"object is iterated over, the optional *blksize* parameter will be repeatedly "
"passed to the *filelike* object's :meth:`read` method to obtain strings to "
"yield.  When :meth:`read` returns an empty string, iteration is ended and is "
"not resumable."
msgstr ""

#: ../Doc/library/wsgiref.rst:160
msgid ""
"If *filelike* has a :meth:`close` method, the returned object will also have "
"a :meth:`close` method, and it will invoke the *filelike* object's :meth:"
"`close` method when called."
msgstr ""

#: ../Doc/library/wsgiref.rst:179
msgid ":mod:`wsgiref.headers` -- WSGI response header tools"
msgstr ""

#: ../Doc/library/wsgiref.rst:185
msgid ""
"This module provides a single class, :class:`Headers`, for convenient "
"manipulation of WSGI response headers using a mapping-like interface."
msgstr ""

#: ../Doc/library/wsgiref.rst:191
msgid ""
"Create a mapping-like object wrapping *headers*, which must be a list of "
"header name/value tuples as described in :pep:`333`.  Any changes made to "
"the new :class:`Headers` object will directly update the *headers* list it "
"was created with."
msgstr ""

# 8341a35968504b0ebf362774a103bd0a
#: ../Doc/library/wsgiref.rst:196
msgid ""
":class:`Headers` objects support typical mapping operations including :meth:"
"`__getitem__`, :meth:`get`, :meth:`__setitem__`, :meth:`setdefault`, :meth:"
"`__delitem__`, :meth:`__contains__` and :meth:`has_key`.  For each of these "
"methods, the key is the header name (treated case-insensitively), and the "
"value is the first value associated with that header name.  Setting a header "
"deletes any existing values for that header, then adds a new value at the "
"end of the wrapped header list.  Headers' existing order is generally "
"maintained, with new headers added to the end of the wrapped list."
msgstr ""

#: ../Doc/library/wsgiref.rst:205
msgid ""
"Unlike a dictionary, :class:`Headers` objects do not raise an error when you "
"try to get or delete a key that isn't in the wrapped header list. Getting a "
"nonexistent header just returns ``None``, and deleting a nonexistent header "
"does nothing."
msgstr ""

#: ../Doc/library/wsgiref.rst:210
msgid ""
":class:`Headers` objects also support :meth:`keys`, :meth:`values`, and :"
"meth:`items` methods.  The lists returned by :meth:`keys` and :meth:`items` "
"can include the same key more than once if there is a multi-valued header.  "
"The ``len()`` of a :class:`Headers` object is the same as the length of its :"
"meth:`items`, which is the same as the length of the wrapped header list.  "
"In fact, the :meth:`items` method just returns a copy of the wrapped header "
"list."
msgstr ""

#: ../Doc/library/wsgiref.rst:217
msgid ""
"Calling ``str()`` on a :class:`Headers` object returns a formatted string "
"suitable for transmission as HTTP response headers.  Each header is placed "
"on a line with its value, separated by a colon and a space. Each line is "
"terminated by a carriage return and line feed, and the string is terminated "
"with a blank line."
msgstr ""

#: ../Doc/library/wsgiref.rst:223
msgid ""
"In addition to their mapping interface and formatting features, :class:"
"`Headers` objects also have the following methods for querying and adding "
"multi-valued headers, and for adding headers with MIME parameters:"
msgstr ""

#: ../Doc/library/wsgiref.rst:230
msgid "Return a list of all the values for the named header."
msgstr ""

#: ../Doc/library/wsgiref.rst:232
msgid ""
"The returned list will be sorted in the order they appeared in the original "
"header list or were added to this instance, and may contain duplicates.  Any "
"fields deleted and re-inserted are always appended to the header list.  If "
"no fields exist with the given name, returns an empty list."
msgstr ""

#: ../Doc/library/wsgiref.rst:240
msgid ""
"Add a (possibly multi-valued) header, with optional MIME parameters "
"specified via keyword arguments."
msgstr ""

#: ../Doc/library/wsgiref.rst:243
msgid ""
"*name* is the header field to add.  Keyword arguments can be used to set "
"MIME parameters for the header field.  Each parameter must be a string or "
"``None``. Underscores in parameter names are converted to dashes, since "
"dashes are illegal in Python identifiers, but many MIME parameter names "
"include dashes.  If the parameter value is a string, it is added to the "
"header value parameters in the form ``name=\"value\"``. If it is ``None``, "
"only the parameter name is added. (This is used for MIME parameters without "
"a value.)  Example usage::"
msgstr ""

#: ../Doc/library/wsgiref.rst:253
msgid "The above will add a header that looks like this::"
msgstr ""

#: ../Doc/library/wsgiref.rst:259
msgid ":mod:`wsgiref.simple_server` -- a simple WSGI HTTP server"
msgstr ""

# 824c4fb9ff244119bf86bb3322157ae8
#: ../Doc/library/wsgiref.rst:265
msgid ""
"This module implements a simple HTTP server (based on :mod:`BaseHTTPServer`) "
"that serves WSGI applications.  Each server instance serves a single WSGI "
"application on a given host and port.  If you want to serve multiple "
"applications on a single host and port, you should create a WSGI application "
"that parses ``PATH_INFO`` to select which application to invoke for each "
"request.  (E.g., using the :func:`shift_path_info` function from :mod:"
"`wsgiref.util`.)"
msgstr ""

#: ../Doc/library/wsgiref.rst:276
msgid ""
"Create a new WSGI server listening on *host* and *port*, accepting "
"connections for *app*.  The return value is an instance of the supplied "
"*server_class*, and will process requests using the specified "
"*handler_class*.  *app* must be a WSGI application object, as defined by :"
"pep:`333`."
msgstr ""

#: ../Doc/library/wsgiref.rst:297
msgid ""
"This function is a small but complete WSGI application that returns a text "
"page containing the message \"Hello world!\" and a list of the key/value "
"pairs provided in the *environ* parameter.  It's useful for verifying that a "
"WSGI server (such as :mod:`wsgiref.simple_server`) is able to run a simple "
"WSGI application correctly."
msgstr ""

# d4cc8e04c13e43bf877ee83d4692ed31
#: ../Doc/library/wsgiref.rst:306
msgid ""
"Create a :class:`WSGIServer` instance.  *server_address* should be a ``(host,"
"port)`` tuple, and *RequestHandlerClass* should be the subclass of :class:"
"`BaseHTTPServer.BaseHTTPRequestHandler` that will be used to process "
"requests."
msgstr ""

#: ../Doc/library/wsgiref.rst:311
msgid ""
"You do not normally need to call this constructor, as the :func:"
"`make_server` function can handle all the details for you."
msgstr ""

# 8d42b02068164fc9b94edfe40c404402
#: ../Doc/library/wsgiref.rst:314
msgid ""
":class:`WSGIServer` is a subclass of :class:`BaseHTTPServer.HTTPServer`, so "
"all of its methods (such as :meth:`serve_forever` and :meth:"
"`handle_request`) are available. :class:`WSGIServer` also provides these "
"WSGI-specific methods:"
msgstr ""

#: ../Doc/library/wsgiref.rst:321
msgid ""
"Sets the callable *application* as the WSGI application that will receive "
"requests."
msgstr ""

#: ../Doc/library/wsgiref.rst:327
msgid "Returns the currently-set application callable."
msgstr ""

#: ../Doc/library/wsgiref.rst:329
msgid ""
"Normally, however, you do not need to use these additional methods, as :meth:"
"`set_app` is normally called by :func:`make_server`, and the :meth:`get_app` "
"exists mainly for the benefit of request handler instances."
msgstr ""

#: ../Doc/library/wsgiref.rst:336
msgid ""
"Create an HTTP handler for the given *request* (i.e. a socket), "
"*client_address* (a ``(host,port)`` tuple), and *server* (:class:"
"`WSGIServer` instance)."
msgstr ""

#: ../Doc/library/wsgiref.rst:339
msgid ""
"You do not need to create instances of this class directly; they are "
"automatically created as needed by :class:`WSGIServer` objects.  You can, "
"however, subclass this class and supply it as a *handler_class* to the :func:"
"`make_server` function.  Some possibly relevant methods for overriding in "
"subclasses:"
msgstr ""

#: ../Doc/library/wsgiref.rst:348
msgid ""
"Returns a dictionary containing the WSGI environment for a request.  The "
"default implementation copies the contents of the :class:`WSGIServer` "
"object's :attr:`base_environ` dictionary attribute and then adds various "
"headers derived from the HTTP request.  Each call to this method should "
"return a new dictionary containing all of the relevant CGI environment "
"variables as specified in :pep:`333`."
msgstr ""

#: ../Doc/library/wsgiref.rst:358
msgid ""
"Return the object that should be used as the ``wsgi.errors`` stream. The "
"default implementation just returns ``sys.stderr``."
msgstr ""

#: ../Doc/library/wsgiref.rst:364
msgid ""
"Process the HTTP request.  The default implementation creates a handler "
"instance using a :mod:`wsgiref.handlers` class to implement the actual WSGI "
"application interface."
msgstr ""

#: ../Doc/library/wsgiref.rst:370
msgid ":mod:`wsgiref.validate` --- WSGI conformance checker"
msgstr ""

#: ../Doc/library/wsgiref.rst:376
msgid ""
"When creating new WSGI application objects, frameworks, servers, or "
"middleware, it can be useful to validate the new code's conformance using :"
"mod:`wsgiref.validate`.  This module provides a function that creates WSGI "
"application objects that validate communications between a WSGI server or "
"gateway and a WSGI application object, to check both sides for protocol "
"conformance."
msgstr ""

#: ../Doc/library/wsgiref.rst:383
msgid ""
"Note that this utility does not guarantee complete :pep:`333` compliance; an "
"absence of errors from this module does not necessarily mean that errors do "
"not exist.  However, if this module does produce an error, then it is "
"virtually certain that either the server or application is not 100% "
"compliant."
msgstr ""

#: ../Doc/library/wsgiref.rst:388
msgid ""
"This module is based on the :mod:`paste.lint` module from Ian Bicking's "
"\"Python Paste\" library."
msgstr ""

#: ../Doc/library/wsgiref.rst:394
msgid ""
"Wrap *application* and return a new WSGI application object.  The returned "
"application will forward all requests to the original *application*, and "
"will check that both the *application* and the server invoking it are "
"conforming to the WSGI specification and to RFC 2616."
msgstr ""

#: ../Doc/library/wsgiref.rst:399
msgid ""
"Any detected nonconformance results in an :exc:`AssertionError` being "
"raised; note, however, that how these errors are handled is server-"
"dependent.  For example, :mod:`wsgiref.simple_server` and other servers "
"based on :mod:`wsgiref.handlers` (that don't override the error handling "
"methods to do something else) will simply output a message that an error has "
"occurred, and dump the traceback to ``sys.stderr`` or some other error "
"stream."
msgstr ""

#: ../Doc/library/wsgiref.rst:406
msgid ""
"This wrapper may also generate output using the :mod:`warnings` module to "
"indicate behaviors that are questionable but which may not actually be "
"prohibited by :pep:`333`.  Unless they are suppressed using Python command-"
"line options or the :mod:`warnings` API, any such warnings will be written "
"to ``sys.stderr`` (*not* ``wsgi.errors``, unless they happen to be the same "
"object)."
msgstr ""

#: ../Doc/library/wsgiref.rst:438
msgid ":mod:`wsgiref.handlers` -- server/gateway base classes"
msgstr ""

#: ../Doc/library/wsgiref.rst:444
msgid ""
"This module provides base handler classes for implementing WSGI servers and "
"gateways.  These base classes handle most of the work of communicating with "
"a WSGI application, as long as they are given a CGI-like environment, along "
"with input, output, and error streams."
msgstr ""

#: ../Doc/library/wsgiref.rst:452
msgid ""
"CGI-based invocation via ``sys.stdin``, ``sys.stdout``, ``sys.stderr`` and "
"``os.environ``.  This is useful when you have a WSGI application and want to "
"run it as a CGI script.  Simply invoke ``CGIHandler().run(app)``, where "
"``app`` is the WSGI application object you wish to invoke."
msgstr ""

#: ../Doc/library/wsgiref.rst:457
msgid ""
"This class is a subclass of :class:`BaseCGIHandler` that sets ``wsgi."
"run_once`` to true, ``wsgi.multithread`` to false, and ``wsgi.multiprocess`` "
"to true, and always uses :mod:`sys` and :mod:`os` to obtain the necessary "
"CGI streams and environment."
msgstr ""

#: ../Doc/library/wsgiref.rst:465
msgid ""
"Similar to :class:`CGIHandler`, but instead of using the :mod:`sys` and :mod:"
"`os` modules, the CGI environment and I/O streams are specified explicitly. "
"The *multithread* and *multiprocess* values are used to set the ``wsgi."
"multithread`` and ``wsgi.multiprocess`` flags for any applications run by "
"the handler instance."
msgstr ""

#: ../Doc/library/wsgiref.rst:471
msgid ""
"This class is a subclass of :class:`SimpleHandler` intended for use with "
"software other than HTTP \"origin servers\".  If you are writing a gateway "
"protocol implementation (such as CGI, FastCGI, SCGI, etc.) that uses a "
"``Status:`` header to send an HTTP status, you probably want to subclass "
"this instead of :class:`SimpleHandler`."
msgstr ""

#: ../Doc/library/wsgiref.rst:480
msgid ""
"Similar to :class:`BaseCGIHandler`, but designed for use with HTTP origin "
"servers.  If you are writing an HTTP server implementation, you will "
"probably want to subclass this instead of :class:`BaseCGIHandler`"
msgstr ""

#: ../Doc/library/wsgiref.rst:484
msgid ""
"This class is a subclass of :class:`BaseHandler`.  It overrides the :meth:"
"`__init__`, :meth:`get_stdin`, :meth:`get_stderr`, :meth:`add_cgi_vars`, :"
"meth:`_write`, and :meth:`_flush` methods to support explicitly setting the "
"environment and streams via the constructor.  The supplied environment and "
"streams are stored in the :attr:`stdin`, :attr:`stdout`, :attr:`stderr`, "
"and :attr:`environ` attributes."
msgstr ""

#: ../Doc/library/wsgiref.rst:494
msgid ""
"This is an abstract base class for running WSGI applications.  Each instance "
"will handle a single HTTP request, although in principle you could create a "
"subclass that was reusable for multiple requests."
msgstr ""

#: ../Doc/library/wsgiref.rst:498
msgid ""
":class:`BaseHandler` instances have only one method intended for external "
"use:"
msgstr ""

#: ../Doc/library/wsgiref.rst:503
msgid "Run the specified WSGI application, *app*."
msgstr ""

#: ../Doc/library/wsgiref.rst:505
msgid ""
"All of the other :class:`BaseHandler` methods are invoked by this method in "
"the process of running the application, and thus exist primarily to allow "
"customizing the process."
msgstr ""

#: ../Doc/library/wsgiref.rst:509
msgid "The following methods MUST be overridden in a subclass:"
msgstr ""

# cab45136f01648bab010d37b69077e66
#: ../Doc/library/wsgiref.rst:514
msgid ""
"Buffer the string *data* for transmission to the client.  It's okay if this "
"method actually transmits the data; :class:`BaseHandler` just separates "
"write and flush operations for greater efficiency when the underlying system "
"actually has such a distinction."
msgstr ""

#: ../Doc/library/wsgiref.rst:522
msgid ""
"Force buffered data to be transmitted to the client.  It's okay if this "
"method is a no-op (i.e., if :meth:`_write` actually sends the data)."
msgstr ""

#: ../Doc/library/wsgiref.rst:528
msgid ""
"Return an input stream object suitable for use as the ``wsgi.input`` of the "
"request currently being processed."
msgstr ""

#: ../Doc/library/wsgiref.rst:534
msgid ""
"Return an output stream object suitable for use as the ``wsgi.errors`` of "
"the request currently being processed."
msgstr ""

#: ../Doc/library/wsgiref.rst:540
msgid ""
"Insert CGI variables for the current request into the :attr:`environ` "
"attribute."
msgstr ""

#: ../Doc/library/wsgiref.rst:542
msgid ""
"Here are some other methods and attributes you may wish to override. This "
"list is only a summary, however, and does not include every method that can "
"be overridden.  You should consult the docstrings and source code for "
"additional information before attempting to create a customized :class:"
"`BaseHandler` subclass."
msgstr ""

#: ../Doc/library/wsgiref.rst:548
msgid "Attributes and methods for customizing the WSGI environment:"
msgstr ""

#: ../Doc/library/wsgiref.rst:553
msgid ""
"The value to be used for the ``wsgi.multithread`` environment variable.  It "
"defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""

#: ../Doc/library/wsgiref.rst:560
msgid ""
"The value to be used for the ``wsgi.multiprocess`` environment variable.  It "
"defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""

#: ../Doc/library/wsgiref.rst:567
msgid ""
"The value to be used for the ``wsgi.run_once`` environment variable.  It "
"defaults to false in :class:`BaseHandler`, but :class:`CGIHandler` sets it "
"to true by default."
msgstr ""

#: ../Doc/library/wsgiref.rst:574
msgid ""
"The default environment variables to be included in every request's WSGI "
"environment.  By default, this is a copy of ``os.environ`` at the time that :"
"mod:`wsgiref.handlers` was imported, but subclasses can either create their "
"own at the class or instance level.  Note that the dictionary should be "
"considered read-only, since the default value is shared between multiple "
"classes and instances."
msgstr ""

#: ../Doc/library/wsgiref.rst:584
msgid ""
"If the :attr:`origin_server` attribute is set, this attribute's value is "
"used to set the default ``SERVER_SOFTWARE`` WSGI environment variable, and "
"also to set a default ``Server:`` header in HTTP responses.  It is ignored "
"for handlers (such as :class:`BaseCGIHandler` and :class:`CGIHandler`) that "
"are not HTTP origin servers."
msgstr ""

#: ../Doc/library/wsgiref.rst:593
msgid ""
"Return the URL scheme being used for the current request.  The default "
"implementation uses the :func:`guess_scheme` function from :mod:`wsgiref."
"util` to guess whether the scheme should be \"http\" or \"https\", based on "
"the current request's :attr:`environ` variables."
msgstr ""

#: ../Doc/library/wsgiref.rst:601
msgid ""
"Set the :attr:`environ` attribute to a fully-populated WSGI environment.  "
"The default implementation uses all of the above methods and attributes, "
"plus the :meth:`get_stdin`, :meth:`get_stderr`, and :meth:`add_cgi_vars` "
"methods and the :attr:`wsgi_file_wrapper` attribute.  It also inserts a "
"``SERVER_SOFTWARE`` key if not present, as long as the :attr:`origin_server` "
"attribute is a true value and the :attr:`server_software` attribute is set."
msgstr ""

#: ../Doc/library/wsgiref.rst:608
msgid "Methods and attributes for customizing exception handling:"
msgstr ""

#: ../Doc/library/wsgiref.rst:613
msgid ""
"Log the *exc_info* tuple in the server log.  *exc_info* is a ``(type, value, "
"traceback)`` tuple.  The default implementation simply writes the traceback "
"to the request's ``wsgi.errors`` stream and flushes it.  Subclasses can "
"override this method to change the format or retarget the output, mail the "
"traceback to an administrator, or whatever other action may be deemed "
"suitable."
msgstr ""

#: ../Doc/library/wsgiref.rst:622
msgid ""
"The maximum number of frames to include in tracebacks output by the default :"
"meth:`log_exception` method.  If ``None``, all frames are included."
msgstr ""

#: ../Doc/library/wsgiref.rst:628
msgid ""
"This method is a WSGI application to generate an error page for the user.  "
"It is only invoked if an error occurs before headers are sent to the client."
msgstr ""

#: ../Doc/library/wsgiref.rst:631
msgid ""
"This method can access the current error information using ``sys.exc_info()"
"``, and should pass that information to *start_response* when calling it (as "
"described in the \"Error Handling\" section of :pep:`333`)."
msgstr ""

#: ../Doc/library/wsgiref.rst:635
msgid ""
"The default implementation just uses the :attr:`error_status`, :attr:"
"`error_headers`, and :attr:`error_body` attributes to generate an output "
"page.  Subclasses can override this to produce more dynamic error output."
msgstr ""

#: ../Doc/library/wsgiref.rst:639
msgid ""
"Note, however, that it's not recommended from a security perspective to spit "
"out diagnostics to any old user; ideally, you should have to do something "
"special to enable diagnostic output, which is why the default implementation "
"doesn't include any."
msgstr ""

#: ../Doc/library/wsgiref.rst:647
msgid ""
"The HTTP status used for error responses.  This should be a status string as "
"defined in :pep:`333`; it defaults to a 500 code and message."
msgstr ""

#: ../Doc/library/wsgiref.rst:653
msgid ""
"The HTTP headers used for error responses.  This should be a list of WSGI "
"response headers (``(name, value)`` tuples), as described in :pep:`333`.  "
"The default list just sets the content type to ``text/plain``."
msgstr ""

#: ../Doc/library/wsgiref.rst:660
msgid ""
"The error response body.  This should be an HTTP response body string. It "
"defaults to the plain text, \"A server error occurred.  Please contact the "
"administrator.\""
msgstr ""

#: ../Doc/library/wsgiref.rst:664
msgid ""
"Methods and attributes for :pep:`333`'s \"Optional Platform-Specific File "
"Handling\" feature:"
msgstr ""

#: ../Doc/library/wsgiref.rst:670
msgid ""
"A ``wsgi.file_wrapper`` factory, or ``None``.  The default value of this "
"attribute is the :class:`FileWrapper` class from :mod:`wsgiref.util`."
msgstr ""

#: ../Doc/library/wsgiref.rst:676
msgid ""
"Override to implement platform-specific file transmission.  This method is "
"called only if the application's return value is an instance of the class "
"specified by the :attr:`wsgi_file_wrapper` attribute.  It should return a "
"true value if it was able to successfully transmit the file, so that the "
"default transmission code will not be executed. The default implementation "
"of this method just returns a false value."
msgstr ""

#: ../Doc/library/wsgiref.rst:683
msgid "Miscellaneous methods and attributes:"
msgstr ""

#: ../Doc/library/wsgiref.rst:688
msgid ""
"This attribute should be set to a true value if the handler's :meth:`_write` "
"and :meth:`_flush` are being used to communicate directly to the client, "
"rather than via a CGI-like gateway protocol that wants the HTTP status in a "
"special ``Status:`` header."
msgstr ""

#: ../Doc/library/wsgiref.rst:693
msgid ""
"This attribute's default value is true in :class:`BaseHandler`, but false "
"in :class:`BaseCGIHandler` and :class:`CGIHandler`."
msgstr ""

#: ../Doc/library/wsgiref.rst:699
msgid ""
"If :attr:`origin_server` is true, this string attribute is used to set the "
"HTTP version of the response set to the client.  It defaults to ``\"1.0\"``."
msgstr ""

#: ../Doc/library/wsgiref.rst:706
msgid "This is a working \"Hello World\" WSGI application::"
msgstr ""

#: ../Doc/library/xdrlib.rst:2
msgid ":mod:`xdrlib` --- Encode and decode XDR data"
msgstr ""

# a1de5fed7c2c4a688085f22040f9a039
#: ../Doc/library/xdrlib.rst:12
msgid "**Source code:** :source:`Lib/xdrlib.py`"
msgstr ""

#: ../Doc/library/xdrlib.rst:16
msgid ""
"The :mod:`xdrlib` module supports the External Data Representation Standard "
"as described in :rfc:`1014`, written by Sun Microsystems, Inc. June 1987.  "
"It supports most of the data types described in the RFC."
msgstr ""

#: ../Doc/library/xdrlib.rst:20
msgid ""
"The :mod:`xdrlib` module defines two classes, one for packing variables into "
"XDR representation, and another for unpacking from XDR representation.  "
"There are also two exception classes."
msgstr ""

#: ../Doc/library/xdrlib.rst:27
msgid ""
":class:`Packer` is the class for packing data into XDR representation. The :"
"class:`Packer` class is instantiated with no arguments."
msgstr ""

#: ../Doc/library/xdrlib.rst:33
msgid ""
"``Unpacker`` is the complementary class which unpacks XDR data values from a "
"string buffer.  The input buffer is given as *data*."
msgstr ""

#: ../Doc/library/xdrlib.rst:40
msgid ""
"This RFC defined the encoding of data which was XDR at the time this module "
"was originally written.  It has apparently been obsoleted by :rfc:`1832`."
msgstr ""

#: ../Doc/library/xdrlib.rst:44
msgid "Newer RFC that provides a revised definition of XDR."
msgstr ""

#: ../Doc/library/xdrlib.rst:50
msgid "Packer Objects"
msgstr ""

#: ../Doc/library/xdrlib.rst:52
msgid ":class:`Packer` instances have the following methods:"
msgstr ""

#: ../Doc/library/xdrlib.rst:57
msgid "Returns the current pack buffer as a string."
msgstr ""

#: ../Doc/library/xdrlib.rst:62
msgid "Resets the pack buffer to the empty string."
msgstr ""

#: ../Doc/library/xdrlib.rst:64
msgid ""
"In general, you can pack any of the most common XDR data types by calling "
"the appropriate ``pack_type()`` method.  Each method takes a single "
"argument, the value to pack.  The following simple data type packing methods "
"are supported: :meth:`pack_uint`, :meth:`pack_int`, :meth:`pack_enum`, :meth:"
"`pack_bool`, :meth:`pack_uhyper`, and :meth:`pack_hyper`."
msgstr ""

#: ../Doc/library/xdrlib.rst:73
msgid "Packs the single-precision floating point number *value*."
msgstr ""

#: ../Doc/library/xdrlib.rst:78
msgid "Packs the double-precision floating point number *value*."
msgstr ""

#: ../Doc/library/xdrlib.rst:80
msgid "The following methods support packing strings, bytes, and opaque data:"
msgstr ""

#: ../Doc/library/xdrlib.rst:85
msgid ""
"Packs a fixed length string, *s*.  *n* is the length of the string but it is "
"*not* packed into the data buffer.  The string is padded with null bytes if "
"necessary to guaranteed 4 byte alignment."
msgstr ""

#: ../Doc/library/xdrlib.rst:92
msgid ""
"Packs a fixed length opaque data stream, similarly to :meth:`pack_fstring`."
msgstr ""

#: ../Doc/library/xdrlib.rst:97
msgid ""
"Packs a variable length string, *s*.  The length of the string is first "
"packed as an unsigned integer, then the string data is packed with :meth:"
"`pack_fstring`."
msgstr ""

#: ../Doc/library/xdrlib.rst:104
msgid ""
"Packs a variable length opaque data string, similarly to :meth:`pack_string`."
msgstr ""

#: ../Doc/library/xdrlib.rst:109
msgid "Packs a variable length byte stream, similarly to :meth:`pack_string`."
msgstr ""

#: ../Doc/library/xdrlib.rst:111
msgid "The following methods support packing arrays and lists:"
msgstr ""

#: ../Doc/library/xdrlib.rst:116
msgid ""
"Packs a *list* of homogeneous items.  This method is useful for lists with "
"an indeterminate size; i.e. the size is not available until the entire list "
"has been walked.  For each item in the list, an unsigned integer ``1`` is "
"packed first, followed by the data value from the list.  *pack_item* is the "
"function that is called to pack the individual item.  At the end of the "
"list, an unsigned integer ``0`` is packed."
msgstr ""

#: ../Doc/library/xdrlib.rst:123
msgid ""
"For example, to pack a list of integers, the code might appear like this::"
msgstr ""

#: ../Doc/library/xdrlib.rst:132
msgid ""
"Packs a fixed length list (*array*) of homogeneous items.  *n* is the length "
"of the list; it is *not* packed into the buffer, but a :exc:`ValueError` "
"exception is raised if ``len(array)`` is not equal to *n*.  As above, "
"*pack_item* is the function used to pack each element."
msgstr ""

#: ../Doc/library/xdrlib.rst:140
msgid ""
"Packs a variable length *list* of homogeneous items.  First, the length of "
"the list is packed as an unsigned integer, then each element is packed as "
"in :meth:`pack_farray` above."
msgstr ""

#: ../Doc/library/xdrlib.rst:148
msgid "Unpacker Objects"
msgstr ""

#: ../Doc/library/xdrlib.rst:150
msgid "The :class:`Unpacker` class offers the following methods:"
msgstr ""

#: ../Doc/library/xdrlib.rst:155
msgid "Resets the string buffer with the given *data*."
msgstr ""

#: ../Doc/library/xdrlib.rst:160
msgid "Returns the current unpack position in the data buffer."
msgstr ""

#: ../Doc/library/xdrlib.rst:165
msgid ""
"Sets the data buffer unpack position to *position*.  You should be careful "
"about using :meth:`get_position` and :meth:`set_position`."
msgstr ""

#: ../Doc/library/xdrlib.rst:171
msgid "Returns the current unpack data buffer as a string."
msgstr ""

#: ../Doc/library/xdrlib.rst:176
msgid ""
"Indicates unpack completion.  Raises an :exc:`Error` exception if all of the "
"data has not been unpacked."
msgstr ""

#: ../Doc/library/xdrlib.rst:179
msgid ""
"In addition, every data type that can be packed with a :class:`Packer`, can "
"be unpacked with an :class:`Unpacker`.  Unpacking methods are of the form "
"``unpack_type()``, and take no arguments.  They return the unpacked object."
msgstr ""

#: ../Doc/library/xdrlib.rst:186
msgid "Unpacks a single-precision floating point number."
msgstr ""

#: ../Doc/library/xdrlib.rst:191
msgid ""
"Unpacks a double-precision floating point number, similarly to :meth:"
"`unpack_float`."
msgstr ""

#: ../Doc/library/xdrlib.rst:194
msgid ""
"In addition, the following methods unpack strings, bytes, and opaque data:"
msgstr ""

#: ../Doc/library/xdrlib.rst:199
msgid ""
"Unpacks and returns a fixed length string.  *n* is the number of characters "
"expected.  Padding with null bytes to guaranteed 4 byte alignment is assumed."
msgstr ""

#: ../Doc/library/xdrlib.rst:205
msgid ""
"Unpacks and returns a fixed length opaque data stream, similarly to :meth:"
"`unpack_fstring`."
msgstr ""

#: ../Doc/library/xdrlib.rst:211
msgid ""
"Unpacks and returns a variable length string.  The length of the string is "
"first unpacked as an unsigned integer, then the string data is unpacked "
"with :meth:`unpack_fstring`."
msgstr ""

#: ../Doc/library/xdrlib.rst:218
msgid ""
"Unpacks and returns a variable length opaque data string, similarly to :meth:"
"`unpack_string`."
msgstr ""

#: ../Doc/library/xdrlib.rst:224
msgid ""
"Unpacks and returns a variable length byte stream, similarly to :meth:"
"`unpack_string`."
msgstr ""

#: ../Doc/library/xdrlib.rst:227
msgid "The following methods support unpacking arrays and lists:"
msgstr ""

#: ../Doc/library/xdrlib.rst:232
msgid ""
"Unpacks and returns a list of homogeneous items.  The list is unpacked one "
"element at a time by first unpacking an unsigned integer flag.  If the flag "
"is ``1``, then the item is unpacked and appended to the list.  A flag of "
"``0`` indicates the end of the list.  *unpack_item* is the function that is "
"called to unpack the items."
msgstr ""

#: ../Doc/library/xdrlib.rst:241
msgid ""
"Unpacks and returns (as a list) a fixed length array of homogeneous items.  "
"*n* is number of list elements to expect in the buffer. As above, "
"*unpack_item* is the function used to unpack each element."
msgstr ""

#: ../Doc/library/xdrlib.rst:248
msgid ""
"Unpacks and returns a variable length *list* of homogeneous items. First, "
"the length of the list is unpacked as an unsigned integer, then each element "
"is unpacked as in :meth:`unpack_farray` above."
msgstr ""

#: ../Doc/library/xdrlib.rst:258
msgid "Exceptions in this module are coded as class instances:"
msgstr ""

# 9899cf82f5fa4633ae8b56d1f3b21735
#: ../Doc/library/xdrlib.rst:263
msgid ""
"The base exception class.  :exc:`Error` has a single public attribute :attr:"
"`msg` containing the description of the error."
msgstr ""

#: ../Doc/library/xdrlib.rst:269
msgid ""
"Class derived from :exc:`Error`.  Contains no additional instance variables."
msgstr ""

#: ../Doc/library/xdrlib.rst:271
msgid "Here is an example of how you would catch one of these exceptions::"
msgstr ""

#: ../Doc/library/xml.dom.rst:3
msgid ":mod:`xml.dom` --- The Document Object Model API"
msgstr ""

#: ../Doc/library/xml.dom.rst:13
msgid ""
"The Document Object Model, or \"DOM,\" is a cross-language API from the "
"World Wide Web Consortium (W3C) for accessing and modifying XML documents.  "
"A DOM implementation presents an XML document as a tree structure, or allows "
"client code to build such a structure from scratch.  It then gives access to "
"the structure through a set of objects which provided well-known interfaces."
msgstr ""

#: ../Doc/library/xml.dom.rst:19
msgid ""
"The DOM is extremely useful for random-access applications.  SAX only allows "
"you a view of one bit of the document at a time.  If you are looking at one "
"SAX element, you have no access to another.  If you are looking at a text "
"node, you have no access to a containing element. When you write a SAX "
"application, you need to keep track of your program's position in the "
"document somewhere in your own code.  SAX does not do it for you.  Also, if "
"you need to look ahead in the XML document, you are just out of luck."
msgstr ""

#: ../Doc/library/xml.dom.rst:27
msgid ""
"Some applications are simply impossible in an event driven model with no "
"access to a tree.  Of course you could build some sort of tree yourself in "
"SAX events, but the DOM allows you to avoid writing that code.  The DOM is a "
"standard tree representation for XML data."
msgstr ""

#: ../Doc/library/xml.dom.rst:32
msgid ""
"The Document Object Model is being defined by the W3C in stages, or \"levels"
"\" in their terminology.  The Python mapping of the API is substantially "
"based on the DOM Level 2 recommendation."
msgstr ""

#: ../Doc/library/xml.dom.rst:51
msgid ""
"DOM applications typically start by parsing some XML into a DOM.  How this "
"is accomplished is not covered at all by DOM Level 1, and Level 2 provides "
"only limited improvements: There is a :class:`DOMImplementation` object "
"class which provides access to :class:`Document` creation methods, but no "
"way to access an XML reader/parser/Document builder in an implementation-"
"independent way. There is also no well-defined way to access these methods "
"without an existing :class:`Document` object.  In Python, each DOM "
"implementation will provide a function :func:`getDOMImplementation`. DOM "
"Level 3 adds a Load/Store specification, which defines an interface to the "
"reader, but this is not yet available in the Python standard library."
msgstr ""

#: ../Doc/library/xml.dom.rst:62
msgid ""
"Once you have a DOM document object, you can access the parts of your XML "
"document through its properties and methods.  These properties are defined "
"in the DOM specification; this portion of the reference manual describes the "
"interpretation of the specification in Python."
msgstr ""

#: ../Doc/library/xml.dom.rst:67
msgid ""
"The specification provided by the W3C defines the DOM API for Java, "
"ECMAScript, and OMG IDL.  The Python mapping defined here is based in large "
"part on the IDL version of the specification, but strict compliance is not "
"required (though implementations are free to support the strict mapping from "
"IDL).  See section :ref:`dom-conformance` for a detailed discussion of "
"mapping requirements."
msgstr ""

#: ../Doc/library/xml.dom.rst:77
msgid "The W3C recommendation upon which the Python DOM API is based."
msgstr ""

#: ../Doc/library/xml.dom.rst:80 ../Doc/library/xml.dom.minidom.rst:109
msgid "The W3C recommendation for the DOM supported by :mod:`xml.dom.minidom`."
msgstr ""

#: ../Doc/library/xml.dom.rst:83
msgid "This specifies the mapping from OMG IDL to Python."
msgstr ""

#: ../Doc/library/xml.dom.rst:89
msgid "The :mod:`xml.dom` contains the following functions:"
msgstr ""

#: ../Doc/library/xml.dom.rst:94
msgid ""
"Register the *factory* function with the name *name*.  The factory function "
"should return an object which implements the :class:`DOMImplementation` "
"interface.  The factory function can return the same object every time, or a "
"new one for each call, as appropriate for the specific implementation (e.g. "
"if that implementation supports some customization)."
msgstr ""

#: ../Doc/library/xml.dom.rst:103
msgid ""
"Return a suitable DOM implementation. The *name* is either well-known, the "
"module name of a DOM implementation, or ``None``. If it is not ``None``, "
"imports the corresponding module and returns a :class:`DOMImplementation` "
"object if the import succeeds.  If no name is given, and if the environment "
"variable :envvar:`PYTHON_DOM` is set, this variable is used to find the "
"implementation."
msgstr ""

#: ../Doc/library/xml.dom.rst:109
msgid ""
"If name is not given, this examines the available implementations to find "
"one with the required feature set.  If no implementation can be found, raise "
"an :exc:`ImportError`.  The features list must be a sequence of ``(feature, "
"version)`` pairs which are passed to the :meth:`hasFeature` method on "
"available :class:`DOMImplementation` objects."
msgstr ""

#: ../Doc/library/xml.dom.rst:115
msgid "Some convenience constants are also provided:"
msgstr ""

#: ../Doc/library/xml.dom.rst:120
msgid ""
"The value used to indicate that no namespace is associated with a node in "
"the DOM.  This is typically found as the :attr:`namespaceURI` of a node, or "
"used as the *namespaceURI* parameter to a namespaces-specific method."
msgstr ""

#: ../Doc/library/xml.dom.rst:129
msgid ""
"The namespace URI associated with the reserved prefix ``xml``, as defined by "
"`Namespaces in XML <http://www.w3.org/TR/REC-xml-names/>`_ (section 4)."
msgstr ""

#: ../Doc/library/xml.dom.rst:137
msgid ""
"The namespace URI for namespace declarations, as defined by `Document Object "
"Model (DOM) Level 2 Core Specification <http://www.w3.org/TR/DOM-Level-2-"
"Core/core.html>`_ (section 1.1.8)."
msgstr ""

#: ../Doc/library/xml.dom.rst:146
msgid ""
"The URI of the XHTML namespace as defined by `XHTML 1.0: The Extensible "
"HyperText Markup Language <http://www.w3.org/TR/xhtml1/>`_ (section 3.1.1)."
msgstr ""

#: ../Doc/library/xml.dom.rst:151
msgid ""
"In addition, :mod:`xml.dom` contains a base :class:`Node` class and the DOM "
"exception classes.  The :class:`Node` class provided by this module does not "
"implement any of the methods or attributes defined by the DOM specification; "
"concrete DOM implementations must provide those.  The :class:`Node` class "
"provided as part of this module does provide the constants used for the :"
"attr:`nodeType` attribute on concrete :class:`Node` objects; they are "
"located within the class rather than at the module level to conform with the "
"DOM specifications."
msgstr ""

#: ../Doc/library/xml.dom.rst:166
msgid "Objects in the DOM"
msgstr ""

#: ../Doc/library/xml.dom.rst:168
msgid ""
"The definitive documentation for the DOM is the DOM specification from the "
"W3C."
msgstr ""

#: ../Doc/library/xml.dom.rst:170
msgid ""
"Note that DOM attributes may also be manipulated as nodes instead of as "
"simple strings.  It is fairly rare that you must do this, however, so this "
"usage is not yet documented."
msgstr ""

#: ../Doc/library/xml.dom.rst:175
msgid "Interface"
msgstr ""

#: ../Doc/library/xml.dom.rst:175
msgid "Section"
msgstr ""

#: ../Doc/library/xml.dom.rst:177
msgid ":class:`DOMImplementation`"
msgstr ""

#: ../Doc/library/xml.dom.rst:177
msgid ":ref:`dom-implementation-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:177
msgid "Interface to the underlying implementation."
msgstr ""

#: ../Doc/library/xml.dom.rst:180
msgid ":class:`Node`"
msgstr ""

#: ../Doc/library/xml.dom.rst:180
msgid ":ref:`dom-node-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:180
msgid "Base interface for most objects in a document."
msgstr ""

#: ../Doc/library/xml.dom.rst:183
msgid ":class:`NodeList`"
msgstr ""

#: ../Doc/library/xml.dom.rst:183
msgid ":ref:`dom-nodelist-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:183
msgid "Interface for a sequence of nodes."
msgstr ""

#: ../Doc/library/xml.dom.rst:186
msgid ":class:`DocumentType`"
msgstr ""

#: ../Doc/library/xml.dom.rst:186
msgid ":ref:`dom-documenttype-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:186
msgid "Information about the declarations needed to process a document."
msgstr ""

#: ../Doc/library/xml.dom.rst:190
msgid ":class:`Document`"
msgstr ""

#: ../Doc/library/xml.dom.rst:190
msgid ":ref:`dom-document-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:190
msgid "Object which represents an entire document."
msgstr ""

#: ../Doc/library/xml.dom.rst:193
msgid ":class:`Element`"
msgstr ""

#: ../Doc/library/xml.dom.rst:193
msgid ":ref:`dom-element-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:193
msgid "Element nodes in the document hierarchy."
msgstr ""

#: ../Doc/library/xml.dom.rst:196
msgid ":class:`Attr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:196
msgid ":ref:`dom-attr-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:196
msgid "Attribute value nodes on element nodes."
msgstr ""

#: ../Doc/library/xml.dom.rst:199
msgid ":class:`Comment`"
msgstr ""

#: ../Doc/library/xml.dom.rst:199
msgid ":ref:`dom-comment-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:199
msgid "Representation of comments in the source document."
msgstr ""

#: ../Doc/library/xml.dom.rst:202
msgid ":class:`Text`"
msgstr ""

#: ../Doc/library/xml.dom.rst:202
msgid ":ref:`dom-text-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:202
msgid "Nodes containing textual content from the document."
msgstr ""

#: ../Doc/library/xml.dom.rst:205
msgid ":class:`ProcessingInstruction`"
msgstr ""

#: ../Doc/library/xml.dom.rst:205
msgid ":ref:`dom-pi-objects`"
msgstr ""

#: ../Doc/library/xml.dom.rst:205
msgid "Processing instruction representation."
msgstr ""

#: ../Doc/library/xml.dom.rst:209
msgid ""
"An additional section describes the exceptions defined for working with the "
"DOM in Python."
msgstr ""

#: ../Doc/library/xml.dom.rst:216
msgid "DOMImplementation Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:218
msgid ""
"The :class:`DOMImplementation` interface provides a way for applications to "
"determine the availability of particular features in the DOM they are using. "
"DOM Level 2 added the ability to create new :class:`Document` and :class:"
"`DocumentType` objects using the :class:`DOMImplementation` as well."
msgstr ""

#: ../Doc/library/xml.dom.rst:226
msgid ""
"Return true if the feature identified by the pair of strings *feature* and "
"*version* is implemented."
msgstr ""

#: ../Doc/library/xml.dom.rst:232
msgid ""
"Return a new :class:`Document` object (the root of the DOM), with a child :"
"class:`Element` object having the given *namespaceUri* and *qualifiedName*. "
"The *doctype* must be a :class:`DocumentType` object created by :meth:"
"`createDocumentType`, or ``None``. In the Python DOM API, the first two "
"arguments can also be ``None`` in order to indicate that no :class:`Element` "
"child is to be created."
msgstr ""

#: ../Doc/library/xml.dom.rst:242
msgid ""
"Return a new :class:`DocumentType` object that encapsulates the given "
"*qualifiedName*, *publicId*, and *systemId* strings, representing the "
"information contained in an XML document type declaration."
msgstr ""

#: ../Doc/library/xml.dom.rst:250
msgid "Node Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:252
msgid ""
"All of the components of an XML document are subclasses of :class:`Node`."
msgstr ""

#: ../Doc/library/xml.dom.rst:257
msgid ""
"An integer representing the node type.  Symbolic constants for the types are "
"on the :class:`Node` object: :const:`ELEMENT_NODE`, :const:"
"`ATTRIBUTE_NODE`, :const:`TEXT_NODE`, :const:`CDATA_SECTION_NODE`, :const:"
"`ENTITY_NODE`, :const:`PROCESSING_INSTRUCTION_NODE`, :const:`COMMENT_NODE`, :"
"const:`DOCUMENT_NODE`, :const:`DOCUMENT_TYPE_NODE`, :const:`NOTATION_NODE`. "
"This is a read-only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:267
msgid ""
"The parent of the current node, or ``None`` for the document node. The value "
"is always a :class:`Node` object or ``None``.  For :class:`Element` nodes, "
"this will be the parent element, except for the root element, in which case "
"it will be the :class:`Document` object. For :class:`Attr` nodes, this is "
"always ``None``. This is a read-only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:276
msgid ""
"A :class:`NamedNodeMap` of attribute objects.  Only elements have actual "
"values for this; others provide ``None`` for this attribute. This is a read-"
"only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:283
msgid ""
"The node that immediately precedes this one with the same parent.  For "
"instance the element with an end-tag that comes just before the *self* "
"element's start-tag.  Of course, XML documents are made up of more than just "
"elements so the previous sibling could be text, a comment, or something "
"else. If this node is the first child of the parent, this attribute will be "
"``None``. This is a read-only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:293
msgid ""
"The node that immediately follows this one with the same parent.  See also :"
"attr:`previousSibling`.  If this is the last child of the parent, this "
"attribute will be ``None``. This is a read-only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:300
msgid ""
"A list of nodes contained within this node. This is a read-only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:305
msgid ""
"The first child of the node, if there are any, or ``None``. This is a read-"
"only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:311
msgid ""
"The last child of the node, if there are any, or ``None``. This is a read-"
"only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:317
msgid ""
"The part of the :attr:`tagName` following the colon if there is one, else "
"the entire :attr:`tagName`.  The value is a string."
msgstr ""

#: ../Doc/library/xml.dom.rst:323
msgid ""
"The part of the :attr:`tagName` preceding the colon if there is one, else "
"the empty string.  The value is a string, or ``None``"
msgstr ""

#: ../Doc/library/xml.dom.rst:329
msgid ""
"The namespace associated with the element name.  This will be a string or "
"``None``.  This is a read-only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:335
msgid ""
"This has a different meaning for each node type; see the DOM specification "
"for details.  You can always get the information you would get here from "
"another property such as the :attr:`tagName` property for elements or the :"
"attr:`name` property for attributes. For all node types, the value of this "
"attribute will be either a string or ``None``.  This is a read-only "
"attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:344
msgid ""
"This has a different meaning for each node type; see the DOM specification "
"for details.  The situation is similar to that with :attr:`nodeName`.  The "
"value is a string or ``None``."
msgstr ""

#: ../Doc/library/xml.dom.rst:351
msgid "Returns true if the node has any attributes."
msgstr ""

#: ../Doc/library/xml.dom.rst:356
msgid "Returns true if the node has any child nodes."
msgstr ""

#: ../Doc/library/xml.dom.rst:361
msgid ""
"Returns true if *other* refers to the same node as this node. This is "
"especially useful for DOM implementations which use any sort of proxy "
"architecture (because more than one object can refer to the same node)."
msgstr ""

#: ../Doc/library/xml.dom.rst:367
msgid ""
"This is based on a proposed DOM Level 3 API which is still in the \"working "
"draft\" stage, but this particular interface appears uncontroversial.  "
"Changes from the W3C will not necessarily affect this method in the Python "
"DOM interface (though any new W3C API for this would also be supported)."
msgstr ""

#: ../Doc/library/xml.dom.rst:375
msgid ""
"Add a new child node to this node at the end of the list of children, "
"returning *newChild*. If the node was already in in the tree, it is removed "
"first."
msgstr ""

#: ../Doc/library/xml.dom.rst:382
msgid ""
"Insert a new child node before an existing child.  It must be the case that "
"*refChild* is a child of this node; if not, :exc:`ValueError` is raised. "
"*newChild* is returned. If *refChild* is ``None``, it inserts *newChild* at "
"the end of the children's list."
msgstr ""

#: ../Doc/library/xml.dom.rst:390
msgid ""
"Remove a child node.  *oldChild* must be a child of this node; if not, :exc:"
"`ValueError` is raised.  *oldChild* is returned on success.  If *oldChild* "
"will not be used further, its :meth:`unlink` method should be called."
msgstr ""

#: ../Doc/library/xml.dom.rst:397
msgid ""
"Replace an existing node with a new node. It must be the case that  "
"*oldChild* is a child of this node; if not, :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/xml.dom.rst:403
msgid ""
"Join adjacent text nodes so that all stretches of text are stored as single :"
"class:`Text` instances.  This simplifies processing text from a DOM tree for "
"many applications."
msgstr ""

#: ../Doc/library/xml.dom.rst:412
msgid ""
"Clone this node.  Setting *deep* means to clone all child nodes as well.  "
"This returns the clone."
msgstr ""

#: ../Doc/library/xml.dom.rst:419
msgid "NodeList Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:421
msgid ""
"A :class:`NodeList` represents a sequence of nodes.  These objects are used "
"in two ways in the DOM Core recommendation:  the :class:`Element` objects "
"provides one as its list of child nodes, and the :meth:"
"`getElementsByTagName` and :meth:`getElementsByTagNameNS` methods of :class:"
"`Node` return objects with this interface to represent query results."
msgstr ""

#: ../Doc/library/xml.dom.rst:427
msgid ""
"The DOM Level 2 recommendation defines one method and one attribute for "
"these objects:"
msgstr ""

#: ../Doc/library/xml.dom.rst:433
msgid ""
"Return the *i*'th item from the sequence, if there is one, or ``None``.  The "
"index *i* is not allowed to be less then zero or greater than or equal to "
"the length of the sequence."
msgstr ""

#: ../Doc/library/xml.dom.rst:440
msgid "The number of nodes in the sequence."
msgstr ""

#: ../Doc/library/xml.dom.rst:442
msgid ""
"In addition, the Python DOM interface requires that some additional support "
"is provided to allow :class:`NodeList` objects to be used as Python "
"sequences.  All :class:`NodeList` implementations must include support for :"
"meth:`__len__` and :meth:`__getitem__`; this allows iteration over the :"
"class:`NodeList` in :keyword:`for` statements and proper support for the :"
"func:`len` built-in function."
msgstr ""

#: ../Doc/library/xml.dom.rst:449
msgid ""
"If a DOM implementation supports modification of the document, the :class:"
"`NodeList` implementation must also support the :meth:`__setitem__` and :"
"meth:`__delitem__` methods."
msgstr ""

#: ../Doc/library/xml.dom.rst:457
msgid "DocumentType Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:459
msgid ""
"Information about the notations and entities declared by a document "
"(including the external subset if the parser uses it and can provide the "
"information) is available from a :class:`DocumentType` object.  The :class:"
"`DocumentType` for a document is available from the :class:`Document` "
"object's :attr:`doctype` attribute; if there is no ``DOCTYPE`` declaration "
"for the document, the document's :attr:`doctype` attribute will be set to "
"``None`` instead of an instance of this interface."
msgstr ""

#: ../Doc/library/xml.dom.rst:467
msgid ""
":class:`DocumentType` is a specialization of :class:`Node`, and adds the "
"following attributes:"
msgstr ""

#: ../Doc/library/xml.dom.rst:473
msgid ""
"The public identifier for the external subset of the document type "
"definition. This will be a string or ``None``."
msgstr ""

#: ../Doc/library/xml.dom.rst:479
msgid ""
"The system identifier for the external subset of the document type "
"definition. This will be a URI as a string, or ``None``."
msgstr ""

#: ../Doc/library/xml.dom.rst:485
msgid ""
"A string giving the complete internal subset from the document. This does "
"not include the brackets which enclose the subset.  If the document has no "
"internal subset, this should be ``None``."
msgstr ""

#: ../Doc/library/xml.dom.rst:492
msgid ""
"The name of the root element as given in the ``DOCTYPE`` declaration, if "
"present."
msgstr ""

#: ../Doc/library/xml.dom.rst:498
msgid ""
"This is a :class:`NamedNodeMap` giving the definitions of external entities. "
"For entity names defined more than once, only the first definition is "
"provided (others are ignored as required by the XML recommendation).  This "
"may be ``None`` if the information is not provided by the parser, or if no "
"entities are defined."
msgstr ""

#: ../Doc/library/xml.dom.rst:507
msgid ""
"This is a :class:`NamedNodeMap` giving the definitions of notations. For "
"notation names defined more than once, only the first definition is provided "
"(others are ignored as required by the XML recommendation).  This may be "
"``None`` if the information is not provided by the parser, or if no "
"notations are defined."
msgstr ""

#: ../Doc/library/xml.dom.rst:517
msgid "Document Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:519
msgid ""
"A :class:`Document` represents an entire XML document, including its "
"constituent elements, attributes, processing instructions, comments etc.  "
"Remember that it inherits properties from :class:`Node`."
msgstr ""

#: ../Doc/library/xml.dom.rst:526
msgid "The one and only root element of the document."
msgstr ""

#: ../Doc/library/xml.dom.rst:531
msgid ""
"Create and return a new element node.  The element is not inserted into the "
"document when it is created.  You need to explicitly insert it with one of "
"the other methods such as :meth:`insertBefore` or :meth:`appendChild`."
msgstr ""

#: ../Doc/library/xml.dom.rst:538
msgid ""
"Create and return a new element with a namespace.  The *tagName* may have a "
"prefix.  The element is not inserted into the document when it is created.  "
"You need to explicitly insert it with one of the other methods such as :meth:"
"`insertBefore` or :meth:`appendChild`."
msgstr ""

#: ../Doc/library/xml.dom.rst:546
msgid ""
"Create and return a text node containing the data passed as a parameter.  As "
"with the other creation methods, this one does not insert the node into the "
"tree."
msgstr ""

#: ../Doc/library/xml.dom.rst:553
msgid ""
"Create and return a comment node containing the data passed as a parameter.  "
"As with the other creation methods, this one does not insert the node into "
"the tree."
msgstr ""

#: ../Doc/library/xml.dom.rst:560
msgid ""
"Create and return a processing instruction node containing the *target* and "
"*data* passed as parameters.  As with the other creation methods, this one "
"does not insert the node into the tree."
msgstr ""

#: ../Doc/library/xml.dom.rst:567
msgid ""
"Create and return an attribute node.  This method does not associate the "
"attribute node with any particular element.  You must use :meth:"
"`setAttributeNode` on the appropriate :class:`Element` object to use the "
"newly created attribute instance."
msgstr ""

#: ../Doc/library/xml.dom.rst:575
msgid ""
"Create and return an attribute node with a namespace.  The *tagName* may "
"have a prefix.  This method does not associate the attribute node with any "
"particular element.  You must use :meth:`setAttributeNode` on the "
"appropriate :class:`Element` object to use the newly created attribute "
"instance."
msgstr ""

#: ../Doc/library/xml.dom.rst:583
msgid ""
"Search for all descendants (direct children, children's children, etc.) with "
"a particular element type name."
msgstr ""

#: ../Doc/library/xml.dom.rst:589
msgid ""
"Search for all descendants (direct children, children's children, etc.) with "
"a particular namespace URI and localname.  The localname is the part of the "
"namespace after the prefix."
msgstr ""

#: ../Doc/library/xml.dom.rst:597 ../Doc/library/xml.etree.elementtree.rst:501
msgid "Element Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:599
msgid ""
":class:`Element` is a subclass of :class:`Node`, so inherits all the "
"attributes of that class."
msgstr ""

#: ../Doc/library/xml.dom.rst:605
msgid ""
"The element type name.  In a namespace-using document it may have colons in "
"it. The value is a string."
msgstr ""

#: ../Doc/library/xml.dom.rst:611 ../Doc/library/xml.dom.rst:616
msgid "Same as equivalent method in the :class:`Document` class."
msgstr ""

#: ../Doc/library/xml.dom.rst:621
msgid "Returns true if the element has an attribute named by *name*."
msgstr ""

#: ../Doc/library/xml.dom.rst:626
msgid ""
"Returns true if the element has an attribute named by *namespaceURI* and "
"*localName*."
msgstr ""

#: ../Doc/library/xml.dom.rst:632
msgid ""
"Return the value of the attribute named by *name* as a string. If no such "
"attribute exists, an empty string is returned, as if the attribute had no "
"value."
msgstr ""

#: ../Doc/library/xml.dom.rst:638
msgid "Return the :class:`Attr` node for the attribute named by *attrname*."
msgstr ""

#: ../Doc/library/xml.dom.rst:643
msgid ""
"Return the value of the attribute named by *namespaceURI* and *localName* as "
"a string. If no such attribute exists, an empty string is returned, as if "
"the attribute had no value."
msgstr ""

#: ../Doc/library/xml.dom.rst:650
msgid ""
"Return an attribute value as a node, given a *namespaceURI* and *localName*."
msgstr ""

#: ../Doc/library/xml.dom.rst:655
msgid ""
"Remove an attribute by name.  If there is no matching attribute, a :exc:"
"`NotFoundErr` is raised."
msgstr ""

#: ../Doc/library/xml.dom.rst:661
msgid ""
"Remove and return *oldAttr* from the attribute list, if present. If "
"*oldAttr* is not present, :exc:`NotFoundErr` is raised."
msgstr ""

#: ../Doc/library/xml.dom.rst:667
msgid ""
"Remove an attribute by name.  Note that it uses a localName, not a qname.  "
"No exception is raised if there is no matching attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:673
msgid "Set an attribute value from a string."
msgstr ""

#: ../Doc/library/xml.dom.rst:678
msgid ""
"Add a new attribute node to the element, replacing an existing attribute if "
"necessary if the :attr:`name` attribute matches.  If a replacement occurs, "
"the old attribute node will be returned.  If *newAttr* is already in use, :"
"exc:`InuseAttributeErr` will be raised."
msgstr ""

#: ../Doc/library/xml.dom.rst:686
msgid ""
"Add a new attribute node to the element, replacing an existing attribute if "
"necessary if the :attr:`namespaceURI` and :attr:`localName` attributes "
"match. If a replacement occurs, the old attribute node will be returned.  If "
"*newAttr* is already in use, :exc:`InuseAttributeErr` will be raised."
msgstr ""

#: ../Doc/library/xml.dom.rst:694
msgid ""
"Set an attribute value from a string, given a *namespaceURI* and a *qname*. "
"Note that a qname is the whole attribute name.  This is different than above."
msgstr ""

#: ../Doc/library/xml.dom.rst:701
msgid "Attr Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:703
msgid ""
":class:`Attr` inherits from :class:`Node`, so inherits all its attributes."
msgstr ""

#: ../Doc/library/xml.dom.rst:708
msgid ""
"The attribute name. In a namespace-using document it may include a colon."
msgstr ""

#: ../Doc/library/xml.dom.rst:714
msgid ""
"The part of the name following the colon if there is one, else the entire "
"name. This is a read-only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:721
msgid ""
"The part of the name preceding the colon if there is one, else the empty "
"string."
msgstr ""

#: ../Doc/library/xml.dom.rst:727
msgid ""
"The text value of the attribute.  This is a synonym for the :attr:"
"`nodeValue` attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:734
msgid "NamedNodeMap Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:736
msgid ":class:`NamedNodeMap` does *not* inherit from :class:`Node`."
msgstr ""

#: ../Doc/library/xml.dom.rst:741
msgid "The length of the attribute list."
msgstr ""

#: ../Doc/library/xml.dom.rst:746
msgid ""
"Return an attribute with a particular index.  The order you get the "
"attributes in is arbitrary but will be consistent for the life of a DOM.  "
"Each item is an attribute node.  Get its value with the :attr:`value` "
"attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:750
msgid ""
"There are also experimental methods that give this class more mapping "
"behavior. You can use them or you can use the standardized :meth:"
"`getAttribute\\*` family of methods on the :class:`Element` objects."
msgstr ""

#: ../Doc/library/xml.dom.rst:758
msgid "Comment Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:760
msgid ""
":class:`Comment` represents a comment in the XML document.  It is a subclass "
"of :class:`Node`, but cannot have child nodes."
msgstr ""

#: ../Doc/library/xml.dom.rst:766
msgid ""
"The content of the comment as a string.  The attribute contains all "
"characters between the leading ``<!-``\\ ``-`` and trailing ``-``\\ ``->``, "
"but does not include them."
msgstr ""

#: ../Doc/library/xml.dom.rst:774
msgid "Text and CDATASection Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:776
msgid ""
"The :class:`Text` interface represents text in the XML document.  If the "
"parser and DOM implementation support the DOM's XML extension, portions of "
"the text enclosed in CDATA marked sections are stored in :class:"
"`CDATASection` objects. These two interfaces are identical, but provide "
"different values for the :attr:`nodeType` attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:782
msgid ""
"These interfaces extend the :class:`Node` interface.  They cannot have child "
"nodes."
msgstr ""

#: ../Doc/library/xml.dom.rst:788
msgid "The content of the text node as a string."
msgstr ""

#: ../Doc/library/xml.dom.rst:792
msgid ""
"The use of a :class:`CDATASection` node does not indicate that the node "
"represents a complete CDATA marked section, only that the content of the "
"node was part of a CDATA section.  A single CDATA section may be represented "
"by more than one node in the document tree.  There is no way to determine "
"whether two adjacent :class:`CDATASection` nodes represent different CDATA "
"marked sections."
msgstr ""

#: ../Doc/library/xml.dom.rst:802
msgid "ProcessingInstruction Objects"
msgstr ""

#: ../Doc/library/xml.dom.rst:804
msgid ""
"Represents a processing instruction in the XML document; this inherits from "
"the :class:`Node` interface and cannot have child nodes."
msgstr ""

#: ../Doc/library/xml.dom.rst:810
msgid ""
"The content of the processing instruction up to the first whitespace "
"character. This is a read-only attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:816
msgid ""
"The content of the processing instruction following the first whitespace "
"character."
msgstr ""

#: ../Doc/library/xml.dom.rst:827
msgid ""
"The DOM Level 2 recommendation defines a single exception, :exc:"
"`DOMException`, and a number of constants that allow applications to "
"determine what sort of error occurred. :exc:`DOMException` instances carry "
"a :attr:`code` attribute that provides the appropriate value for the "
"specific exception."
msgstr ""

#: ../Doc/library/xml.dom.rst:832
msgid ""
"The Python DOM interface provides the constants, but also expands the set of "
"exceptions so that a specific exception exists for each of the exception "
"codes defined by the DOM.  The implementations must raise the appropriate "
"specific exception, each of which carries the appropriate value for the :"
"attr:`code` attribute."
msgstr ""

#: ../Doc/library/xml.dom.rst:841
msgid ""
"Base exception class used for all specific DOM exceptions.  This exception "
"class cannot be directly instantiated."
msgstr ""

#: ../Doc/library/xml.dom.rst:847
msgid ""
"Raised when a specified range of text does not fit into a string. This is "
"not known to be used in the Python DOM implementations, but may be received "
"from DOM implementations not written in Python."
msgstr ""

#: ../Doc/library/xml.dom.rst:854
msgid ""
"Raised when an attempt is made to insert a node where the node type is not "
"allowed."
msgstr ""

#: ../Doc/library/xml.dom.rst:860
msgid ""
"Raised when an index or size parameter to a method is negative or exceeds "
"the allowed values."
msgstr ""

#: ../Doc/library/xml.dom.rst:866
msgid ""
"Raised when an attempt is made to insert an :class:`Attr` node that is "
"already present elsewhere in the document."
msgstr ""

#: ../Doc/library/xml.dom.rst:872
msgid ""
"Raised if a parameter or an operation is not supported on the underlying "
"object."
msgstr ""

#: ../Doc/library/xml.dom.rst:877
msgid ""
"This exception is raised when a string parameter contains a character that "
"is not permitted in the context it's being used in by the XML 1.0 "
"recommendation. For example, attempting to create an :class:`Element` node "
"with a space in the element type name will cause this error to be raised."
msgstr ""

#: ../Doc/library/xml.dom.rst:885
msgid "Raised when an attempt is made to modify the type of a node."
msgstr ""

#: ../Doc/library/xml.dom.rst:890
msgid ""
"Raised when an attempt is made to use an object that is not defined or is no "
"longer usable."
msgstr ""

#: ../Doc/library/xml.dom.rst:896
msgid ""
"If an attempt is made to change any object in a way that is not permitted "
"with regard to the `Namespaces in XML <http://www.w3.org/TR/REC-xml-names/"
">`_ recommendation, this exception is raised."
msgstr ""

#: ../Doc/library/xml.dom.rst:903
msgid ""
"Exception when a node does not exist in the referenced context.  For "
"example, :meth:`NamedNodeMap.removeNamedItem` will raise this if the node "
"passed in does not exist in the map."
msgstr ""

#: ../Doc/library/xml.dom.rst:910
msgid ""
"Raised when the implementation does not support the requested type of object "
"or operation."
msgstr ""

#: ../Doc/library/xml.dom.rst:916
msgid ""
"This is raised if data is specified for a node which does not support data."
msgstr ""

#: ../Doc/library/xml.dom.rst:923
msgid ""
"Raised on attempts to modify an object where modifications are not allowed "
"(such as for read-only nodes)."
msgstr ""

#: ../Doc/library/xml.dom.rst:929
msgid "Raised when an invalid or illegal string is specified."
msgstr ""

#: ../Doc/library/xml.dom.rst:936
msgid ""
"Raised when a node is inserted in a different document than it currently "
"belongs to, and the implementation does not support migrating the node from "
"one document to the other."
msgstr ""

#: ../Doc/library/xml.dom.rst:940
msgid ""
"The exception codes defined in the DOM recommendation map to the exceptions "
"described above according to this table:"
msgstr ""

#: ../Doc/library/xml.dom.rst:944
msgid "Exception"
msgstr ""

#: ../Doc/library/xml.dom.rst:946
msgid ":const:`DOMSTRING_SIZE_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:946
msgid ":exc:`DomstringSizeErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:948
msgid ":const:`HIERARCHY_REQUEST_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:948
msgid ":exc:`HierarchyRequestErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:950
msgid ":const:`INDEX_SIZE_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:950
msgid ":exc:`IndexSizeErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:952
msgid ":const:`INUSE_ATTRIBUTE_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:952
msgid ":exc:`InuseAttributeErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:954
msgid ":const:`INVALID_ACCESS_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:954
msgid ":exc:`InvalidAccessErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:956
msgid ":const:`INVALID_CHARACTER_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:956
msgid ":exc:`InvalidCharacterErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:958
msgid ":const:`INVALID_MODIFICATION_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:958
msgid ":exc:`InvalidModificationErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:960
msgid ":const:`INVALID_STATE_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:960
msgid ":exc:`InvalidStateErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:962
msgid ":const:`NAMESPACE_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:962
msgid ":exc:`NamespaceErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:964
msgid ":const:`NOT_FOUND_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:964
msgid ":exc:`NotFoundErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:966
msgid ":const:`NOT_SUPPORTED_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:966
msgid ":exc:`NotSupportedErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:968
msgid ":const:`NO_DATA_ALLOWED_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:968
msgid ":exc:`NoDataAllowedErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:970
msgid ":const:`NO_MODIFICATION_ALLOWED_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:970
msgid ":exc:`NoModificationAllowedErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:972
msgid ":const:`SYNTAX_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:972
msgid ":exc:`SyntaxErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:974
msgid ":const:`WRONG_DOCUMENT_ERR`"
msgstr ""

#: ../Doc/library/xml.dom.rst:974
msgid ":exc:`WrongDocumentErr`"
msgstr ""

#: ../Doc/library/xml.dom.rst:981
msgid "Conformance"
msgstr ""

#: ../Doc/library/xml.dom.rst:983
msgid ""
"This section describes the conformance requirements and relationships "
"between the Python DOM API, the W3C DOM recommendations, and the OMG IDL "
"mapping for Python."
msgstr ""

#: ../Doc/library/xml.dom.rst:991
msgid "Type Mapping"
msgstr ""

#: ../Doc/library/xml.dom.rst:993
msgid ""
"The primitive IDL types used in the DOM specification are mapped to Python "
"types according to the following table."
msgstr ""

#: ../Doc/library/xml.dom.rst:997
msgid "IDL Type"
msgstr ""

#: ../Doc/library/xml.dom.rst:999
msgid "``boolean``"
msgstr ""

#: ../Doc/library/xml.dom.rst:999
msgid "``IntegerType`` (with a value of ``0`` or ``1``)"
msgstr ""

#: ../Doc/library/xml.dom.rst:1002
msgid "``int``"
msgstr ""

#: ../Doc/library/xml.dom.rst:1002 ../Doc/library/xml.dom.rst:1004
#: ../Doc/library/xml.dom.rst:1006
msgid "``IntegerType``"
msgstr ""

#: ../Doc/library/xml.dom.rst:1004
msgid "``long int``"
msgstr ""

#: ../Doc/library/xml.dom.rst:1006
msgid "``unsigned int``"
msgstr ""

# 9715745b6062428a96e8b6b310500e01
#: ../Doc/library/xml.dom.rst:1009
msgid ""
"Additionally, the :class:`DOMString` defined in the recommendation is mapped "
"to a Python string or Unicode string.  Applications should be able to handle "
"Unicode whenever a string is returned from the DOM."
msgstr ""

#: ../Doc/library/xml.dom.rst:1013
msgid ""
"The IDL ``null`` value is mapped to ``None``, which may be accepted or "
"provided by the implementation whenever ``null`` is allowed by the API."
msgstr ""

#: ../Doc/library/xml.dom.rst:1020
msgid "Accessor Methods"
msgstr ""

#: ../Doc/library/xml.dom.rst:1022
msgid ""
"The mapping from OMG IDL to Python defines accessor functions for IDL "
"``attribute`` declarations in much the way the Java mapping does. Mapping "
"the IDL declarations ::"
msgstr ""

#: ../Doc/library/xml.dom.rst:1029
msgid ""
"yields three accessor functions:  a \"get\" method for :attr:`someValue` (:"
"meth:`_get_someValue`), and \"get\" and \"set\" methods for :attr:"
"`anotherValue` (:meth:`_get_anotherValue` and :meth:`_set_anotherValue`).  "
"The mapping, in particular, does not require that the IDL attributes are "
"accessible as normal Python attributes:  ``object.someValue`` is *not* "
"required to work, and may raise an :exc:`AttributeError`."
msgstr ""

#: ../Doc/library/xml.dom.rst:1036
msgid ""
"The Python DOM API, however, *does* require that normal attribute access "
"work. This means that the typical surrogates generated by Python IDL "
"compilers are not likely to work, and wrapper objects may be needed on the "
"client if the DOM objects are accessed via CORBA. While this does require "
"some additional consideration for CORBA DOM clients, the implementers with "
"experience using DOM over CORBA from Python do not consider this a problem.  "
"Attributes that are declared ``readonly`` may not restrict write access in "
"all DOM implementations."
msgstr ""

#: ../Doc/library/xml.dom.rst:1045
msgid ""
"In the Python DOM API, accessor functions are not required.  If provided, "
"they should take the form defined by the Python IDL mapping, but these "
"methods are considered unnecessary since the attributes are accessible "
"directly from Python. \"Set\" accessors should never be provided for "
"``readonly`` attributes."
msgstr ""

#: ../Doc/library/xml.dom.rst:1050
msgid ""
"The IDL definitions do not fully embody the requirements of the W3C DOM API, "
"such as the notion of certain objects, such as the return value of :meth:"
"`getElementsByTagName`, being \"live\".  The Python DOM API does not require "
"implementations to enforce such requirements."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:2
msgid ":mod:`xml.dom.minidom` --- Lightweight DOM implementation"
msgstr ""

# 033e5d2321924d1fb11119c7d9e03eec
#: ../Doc/library/xml.dom.minidom.rst:13
msgid "**Source code:** :source:`Lib/xml/dom/minidom.py`"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:17
msgid ""
":mod:`xml.dom.minidom` is a light-weight implementation of the Document "
"Object Model interface.  It is intended to be simpler than the full DOM and "
"also significantly smaller."
msgstr ""

# 6fd7978cf45f414abd0e47783876f254
#: ../Doc/library/xml.dom.minidom.rst:23
msgid ""
"The :mod:`xml.dom.minidom` module provides an implementation of the W3C-DOM, "
"with an API similar to that in other programming languages.  Users who are "
"unfamiliar with the W3C-DOM interface or who would like to write less code "
"for processing XML files should consider using the :mod:`xml.etree."
"ElementTree` module instead."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:29
msgid ""
"DOM applications typically start by parsing some XML into a DOM.  With :mod:"
"`xml.dom.minidom`, this is done through the parse functions::"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:41
msgid ""
"The :func:`parse` function can take either a filename or an open file object."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:46
msgid ""
"Return a :class:`Document` from the given input. *filename_or_file* may be "
"either a file name, or a file-like object. *parser*, if given, must be a "
"SAX2 parser object. This function will change the document handler of the "
"parser and activate namespace support; other parser configuration (like "
"setting an entity resolver) must have been done in advance."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:52
msgid ""
"If you have XML in a string, you can use the :func:`parseString` function "
"instead:"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:58
msgid ""
"Return a :class:`Document` that represents the *string*. This method creates "
"a :class:`StringIO` object for the string and passes that on to :func:"
"`parse`."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:61
msgid ""
"Both functions return a :class:`Document` object representing the content of "
"the document."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:64
msgid ""
"What the :func:`parse` and :func:`parseString` functions do is connect an "
"XML parser with a \"DOM builder\" that can accept parse events from any SAX "
"parser and convert them into a DOM tree.  The name of the functions are "
"perhaps misleading, but are easy to grasp when learning the interfaces.  The "
"parsing of the document will be completed before these functions return; "
"it's simply that these functions do not provide a parser implementation "
"themselves."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:71
msgid ""
"You can also create a :class:`Document` by calling a method on a \"DOM "
"Implementation\" object.  You can get this object either by calling the :"
"func:`getDOMImplementation` function in the :mod:`xml.dom` package or the :"
"mod:`xml.dom.minidom` module. Using the implementation from the :mod:`xml."
"dom.minidom` module will always return a :class:`Document` instance from the "
"minidom implementation, while the version from :mod:`xml.dom` may provide an "
"alternate implementation (this is likely if you have the `PyXML package "
"<http://pyxml.sourceforge.net/>`_ installed).  Once you have a :class:"
"`Document`, you can add child nodes to it to populate the DOM::"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:90
msgid ""
"Once you have a DOM document object, you can access the parts of your XML "
"document through its properties and methods.  These properties are defined "
"in the DOM specification.  The main property of the document object is the :"
"attr:`documentElement` property.  It gives you the main element in the XML "
"document: the one that holds all others.  Here is an example program::"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:99
msgid ""
"When you are finished with a DOM tree, you may optionally call the :meth:"
"`unlink` method to encourage early cleanup of the now-unneeded objects.  :"
"meth:`unlink` is a :mod:`xml.dom.minidom`\\ -specific extension to the DOM "
"API that renders the node and its descendants are essentially useless.  "
"Otherwise, Python's garbage collector will eventually take care of the "
"objects in the tree."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:115
msgid "DOM Objects"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:117
msgid ""
"The definition of the DOM API for Python is given as part of the :mod:`xml."
"dom` module documentation.  This section lists the differences between the "
"API and :mod:`xml.dom.minidom`."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:124
msgid ""
"Break internal references within the DOM so that it will be garbage "
"collected on versions of Python without cyclic GC.  Even when cyclic GC is "
"available, using this can make large amounts of memory available sooner, so "
"calling this on DOM objects as soon as they are no longer needed is good "
"practice.  This only needs to be called on the :class:`Document` object, but "
"may be called on child nodes to discard children of that node."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:134
msgid ""
"Write XML to the writer object.  The writer should have a :meth:`write` "
"method which matches that of the file object interface.  The *indent* "
"parameter is the indentation of the current node.  The *addindent* parameter "
"is the incremental indentation to use for subnodes of the current one.  The "
"*newl* parameter specifies the string to use to terminate newlines."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:140
msgid ""
"For the :class:`Document` node, an additional keyword argument *encoding* "
"can be used to specify the encoding field of the XML header."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:154
msgid "Return the XML that the DOM represents as a string."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:156
msgid ""
"With no argument, the XML header does not specify an encoding, and the "
"result is Unicode string if the default encoding cannot represent all "
"characters in the document. Encoding this string in an encoding other than "
"UTF-8 is likely incorrect, since UTF-8 is the default encoding of XML."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:161
msgid ""
"With an explicit *encoding* [1]_ argument, the result is a byte string in "
"the specified encoding. It is recommended that this argument is always "
"specified. To avoid :exc:`UnicodeError` exceptions in case of "
"unrepresentable text data, the encoding argument should be specified as "
"\"utf-8\"."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:172
msgid ""
"Return a pretty-printed version of the document. *indent* specifies the "
"indentation string and defaults to a tabulator; *newl* specifies the string "
"emitted at the end of each line and defaults to ``\\n``."
msgstr ""

# b35b78686cca477db47fb25198cb4056
#: ../Doc/library/xml.dom.minidom.rst:181
msgid ""
"The following standard DOM methods have special considerations with :mod:"
"`xml.dom.minidom`:"
msgstr ""

# 8047fd6f01fb46f3b0f321915a7d6abe
#: ../Doc/library/xml.dom.minidom.rst:187
msgid ""
"Although this method was present in the version of :mod:`xml.dom.minidom` "
"packaged with Python 2.0, it was seriously broken.  This has been corrected "
"for subsequent releases."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:195
msgid "DOM Example"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:197
msgid ""
"This example program is a fairly realistic example of a simple program. In "
"this particular case, we do not take much advantage of the flexibility of "
"the DOM."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:206
msgid "minidom and the DOM standard"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:208
msgid ""
"The :mod:`xml.dom.minidom` module is essentially a DOM 1.0-compatible DOM "
"with some DOM 2 features (primarily namespace features)."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:211
msgid ""
"Usage of the DOM interface in Python is straight-forward.  The following "
"mapping rules apply:"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:214
msgid ""
"Interfaces are accessed through instance objects. Applications should not "
"instantiate the classes themselves; they should use the creator functions "
"available on the :class:`Document` object. Derived interfaces support all "
"operations (and attributes) from the base interfaces, plus any new "
"operations."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:219
msgid ""
"Operations are used as methods. Since the DOM uses only :keyword:`in` "
"parameters, the arguments are passed in normal order (from left to right). "
"There are no optional arguments. ``void`` operations return ``None``."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:223
msgid ""
"IDL attributes map to instance attributes. For compatibility with the OMG "
"IDL language mapping for Python, an attribute ``foo`` can also be accessed "
"through accessor methods :meth:`_get_foo` and :meth:`_set_foo`.  "
"``readonly`` attributes must not be changed; this is not enforced at runtime."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:228
msgid ""
"The types ``short int``, ``unsigned int``, ``unsigned long long``, and "
"``boolean`` all map to Python integer objects."
msgstr ""

# fca950abc59f48cf993a00ec7a5ba69b
#: ../Doc/library/xml.dom.minidom.rst:231
msgid ""
"The type ``DOMString`` maps to Python strings. :mod:`xml.dom.minidom` "
"supports either byte or Unicode strings, but will normally produce Unicode "
"strings. Values of type ``DOMString`` may also be ``None`` where allowed to "
"have the IDL ``null`` value by the DOM specification from the W3C."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:236
msgid ""
"``const`` declarations map to variables in their respective scope (e.g. "
"``xml.dom.minidom.Node.PROCESSING_INSTRUCTION_NODE``); they must not be "
"changed."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:239
msgid ""
"``DOMException`` is currently not supported in :mod:`xml.dom.minidom`. "
"Instead, :mod:`xml.dom.minidom` uses standard Python exceptions such as :exc:"
"`TypeError` and :exc:`AttributeError`."
msgstr ""

# be368b8cc825432d8203463041a60a45
#: ../Doc/library/xml.dom.minidom.rst:243
msgid ""
":class:`NodeList` objects are implemented using Python's built-in list type. "
"Starting with Python 2.2, these objects provide the interface defined in the "
"DOM specification, but with earlier versions of Python they do not support "
"the official API.  They are, however, much more \"Pythonic\" than the "
"interface defined in the W3C recommendations."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:249
msgid ""
"The following interfaces have no implementation in :mod:`xml.dom.minidom`:"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:251
msgid ":class:`DOMTimeStamp`"
msgstr ""

# 90cb74014ae044508b8dfcdb8b61c55c
#: ../Doc/library/xml.dom.minidom.rst:253
msgid ":class:`DocumentType` (added in Python 2.1)"
msgstr ""

# 77bf8cf45aa74688b25ee45336346763
#: ../Doc/library/xml.dom.minidom.rst:255
msgid ":class:`DOMImplementation` (added in Python 2.1)"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:257
msgid ":class:`CharacterData`"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:259
msgid ":class:`CDATASection`"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:261
msgid ":class:`Notation`"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:263
msgid ":class:`Entity`"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:265
msgid ":class:`EntityReference`"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:267
msgid ":class:`DocumentFragment`"
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:269
msgid ""
"Most of these reflect information in the XML document that is not of general "
"utility to most DOM users."
msgstr ""

#: ../Doc/library/xml.dom.pulldom.rst:2
msgid ":mod:`xml.dom.pulldom` --- Support for building partial DOM trees"
msgstr ""

# 729d2f39d2db4ec0a0b7b8f48ecc9fdb
#: ../Doc/library/xml.dom.pulldom.rst:11
msgid "**Source code:** :source:`Lib/xml/dom/pulldom.py`"
msgstr ""

#: ../Doc/library/xml.dom.pulldom.rst:15
msgid ""
":mod:`xml.dom.pulldom` allows building only selected portions of a Document "
"Object Model representation of a document from SAX events."
msgstr ""

#: ../Doc/library/xml.dom.pulldom.rst:21 ../Doc/library/xml.dom.pulldom.rst:31
msgid ":class:`xml.sax.handler.ContentHandler` implementation that ..."
msgstr ""

#: ../Doc/library/xml.dom.pulldom.rst:26 ../Doc/library/xml.dom.pulldom.rst:36
#: ../Doc/library/xml.dom.pulldom.rst:41 ../Doc/library/xml.dom.pulldom.rst:61
#: ../Doc/library/xml.dom.pulldom.rst:66 ../Doc/library/xml.dom.pulldom.rst:71
msgid "..."
msgstr ""

#: ../Doc/library/xml.dom.pulldom.rst:46
msgid "Default value for the *bufsize* parameter to :func:`parse`."
msgstr ""

#: ../Doc/library/xml.dom.pulldom.rst:56
msgid "DOMEventStream Objects"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:2
msgid ":mod:`xml.etree.ElementTree` --- The ElementTree XML API"
msgstr ""

# d48bce9e04ec4a7a8376c364746ccf1f
#: ../Doc/library/xml.etree.elementtree.rst:11
msgid "**Source code:** :source:`Lib/xml/etree/ElementTree.py`"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:15
msgid ""
"The :class:`Element` type is a flexible container object, designed to store "
"hierarchical data structures in memory.  The type can be described as a "
"cross between a list and a dictionary."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:19
msgid "Each element has a number of properties associated with it:"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:21
msgid ""
"a tag which is a string identifying what kind of data this element "
"represents (the element type, in other words)."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:24
msgid "a number of attributes, stored in a Python dictionary."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:26
msgid "a text string."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:28
msgid "an optional tail string."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:30
msgid "a number of child elements, stored in a Python sequence"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:32
msgid ""
"To create an element instance, use the :class:`Element` constructor or the :"
"func:`SubElement` factory function."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:35
msgid ""
"The :class:`ElementTree` class can be used to wrap an element structure, and "
"convert it from and to XML."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:38
msgid ""
"A C implementation of this API is available as :mod:`xml.etree.cElementTree`."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:40
msgid ""
"See http://effbot.org/zone/element-index.htm for tutorials and links to "
"other docs.  Fredrik Lundh's page is also the location of the development "
"version of the xml.etree.ElementTree."
msgstr ""

# 408878343be24855969a4eea5dd59531
#: ../Doc/library/xml.etree.elementtree.rst:52
msgid ""
"This is a short tutorial for using :mod:`xml.etree.ElementTree` (``ET`` in "
"short).  The goal is to demonstrate some of the building blocks and basic "
"concepts of the module."
msgstr ""

# acb832308eac4c3d9746298fafd7865f
#: ../Doc/library/xml.etree.elementtree.rst:57
msgid "XML tree and elements"
msgstr ""

# 891fbc9e8fde49ce8bc1464e46c08275
#: ../Doc/library/xml.etree.elementtree.rst:59
msgid ""
"XML is an inherently hierarchical data format, and the most natural way to "
"represent it is with a tree.  ``ET`` has two classes for this purpose - :"
"class:`ElementTree` represents the whole XML document as a tree, and :class:"
"`Element` represents a single node in this tree.  Interactions with the "
"whole document (reading and writing to/from files) are usually done on the :"
"class:`ElementTree` level.  Interactions with a single XML element and its "
"sub-elements are done on the :class:`Element` level."
msgstr ""

# d9cffac0f79440249d894ad9ca840c7a
#: ../Doc/library/xml.etree.elementtree.rst:70
msgid "Parsing XML"
msgstr ""

# 908b862d5c49425eb35ba1547fd842f3
#: ../Doc/library/xml.etree.elementtree.rst:72
msgid ""
"We'll be using the following XML document as the sample data for this "
"section:"
msgstr ""

# 41a4241976ac4d61a622651d3cd7a94d
#: ../Doc/library/xml.etree.elementtree.rst:100
msgid ""
"We have a number of ways to import the data.  Reading the file from disk::"
msgstr ""

# 478586b22ba34e509cec4fc765ee5981
#: ../Doc/library/xml.etree.elementtree.rst:106
msgid "Reading the data from a string::"
msgstr ""

# df37849cf6234255a42d621906a17c40
#: ../Doc/library/xml.etree.elementtree.rst:110
msgid ""
":func:`fromstring` parses XML from a string directly into an :class:"
"`Element`, which is the root element of the parsed tree.  Other parsing "
"functions may create an :class:`ElementTree`.  Check the documentation to be "
"sure."
msgstr ""

# 8bf66bf1a6f043cfb0f961e0b9fa241a
#: ../Doc/library/xml.etree.elementtree.rst:114
msgid ""
"As an :class:`Element`, ``root`` has a tag and a dictionary of attributes::"
msgstr ""

# 81dff4f85ccf451a8fcdfc6ac8bf502f
#: ../Doc/library/xml.etree.elementtree.rst:121
msgid "It also has children nodes over which we can iterate::"
msgstr ""

# c4ba2d34d6804bddb73dce3ea7c40a90
#: ../Doc/library/xml.etree.elementtree.rst:130
msgid "Children are nested, and we can access specific child nodes by index::"
msgstr ""

# 72d59f38bcb1403289ef8ac261373942
#: ../Doc/library/xml.etree.elementtree.rst:136
msgid "Finding interesting elements"
msgstr ""

# 1a56676d05ff4583bedd9ea953525f92
#: ../Doc/library/xml.etree.elementtree.rst:138
msgid ""
":class:`Element` has some useful methods that help iterate recursively over "
"all the sub-tree below it (its children, their children, and so on).  For "
"example, :meth:`Element.iter`::"
msgstr ""

# 622a266d21f3407ab95181d17dc77e44
#: ../Doc/library/xml.etree.elementtree.rst:151
msgid ""
":meth:`Element.findall` finds only elements with a tag which are direct "
"children of the current element.  :meth:`Element.find` finds the *first* "
"child with a particular tag, and :meth:`Element.text` accesses the element's "
"text content.  :meth:`Element.get` accesses the element's attributes::"
msgstr ""

# a924ed65590c4e2ca9cc2074ba1973c2
#: ../Doc/library/xml.etree.elementtree.rst:165
msgid ""
"More sophisticated specification of which elements to look for is possible "
"by using :ref:`XPath <elementtree-xpath>`."
msgstr ""

# 9cf09590daa64a7ea441c3ba78e73752
#: ../Doc/library/xml.etree.elementtree.rst:169
msgid "Modifying an XML File"
msgstr ""

# 0df8673ee63e4aeabd2bc4b5ab45e13a
#: ../Doc/library/xml.etree.elementtree.rst:171
msgid ""
":class:`ElementTree` provides a simple way to build XML documents and write "
"them to files. The :meth:`ElementTree.write` method serves this purpose."
msgstr ""

# a33c691e039b4864bffc2719a829d9e2
#: ../Doc/library/xml.etree.elementtree.rst:174
msgid ""
"Once created, an :class:`Element` object may be manipulated by directly "
"changing its fields (such as :attr:`Element.text`), adding and modifying "
"attributes (:meth:`Element.set` method), as well as adding new children (for "
"example with :meth:`Element.append`)."
msgstr ""

# d31c74b1859640d4b2c50526db6c9a24
#: ../Doc/library/xml.etree.elementtree.rst:179
msgid ""
"Let's say we want to add one to each country's rank, and add an ``updated`` "
"attribute to the rank element::"
msgstr ""

# 953b6048a4b1496da2d7e8edfc161f57
# 1e228cc03fa34bd5bcd17c7ce025decf
#: ../Doc/library/xml.etree.elementtree.rst:189
#: ../Doc/library/xml.etree.elementtree.rst:227
msgid "Our XML now looks like this:"
msgstr ""

# 4551561ba99f4953b66b57bb34a8ff5a
#: ../Doc/library/xml.etree.elementtree.rst:217
msgid ""
"We can remove elements using :meth:`Element.remove`.  Let's say we want to "
"remove all countries with a rank higher than 50::"
msgstr ""

# f5f5c172ca3c4412afebfecb10f3c072
#: ../Doc/library/xml.etree.elementtree.rst:249
msgid "Building XML documents"
msgstr ""

# a7cd27b8c2b64ad9ae65c292e7eff738
#: ../Doc/library/xml.etree.elementtree.rst:251
msgid ""
"The :func:`SubElement` function also provides a convenient way to create new "
"sub-elements for a given element::"
msgstr ""

# 2ea16c47b3794a0e9268896547984ee4
#: ../Doc/library/xml.etree.elementtree.rst:262
msgid "Additional resources"
msgstr ""

# d43b54e38ff34a05a42cc718dcb6b1d6
#: ../Doc/library/xml.etree.elementtree.rst:264
msgid ""
"See http://effbot.org/zone/element-index.htm for tutorials and links to "
"other docs."
msgstr ""

# 299680f329ea4c5ca6dd9f3ae3c256b0
#: ../Doc/library/xml.etree.elementtree.rst:270
msgid "XPath support"
msgstr ""

# 17f924166c0d4d54bfd7727f0f600b95
#: ../Doc/library/xml.etree.elementtree.rst:272
msgid ""
"This module provides limited support for `XPath expressions <http://www.w3."
"org/TR/xpath>`_ for locating elements in a tree.  The goal is to support a "
"small subset of the abbreviated syntax; a full XPath engine is outside the "
"scope of the module."
msgstr ""

# 6b786fc42cbd444c898296276f755f8a
#: ../Doc/library/xml.etree.elementtree.rst:280
msgid ""
"Here's an example that demonstrates some of the XPath capabilities of the "
"module.  We'll be using the ``countrydata`` XML document from the :ref:"
"`Parsing XML <elementtree-parsing-xml>` section::"
msgstr ""

# 19022b2d9163456f99075186c544ee6e
#: ../Doc/library/xml.etree.elementtree.rst:305
msgid "Supported XPath syntax"
msgstr ""

# 24476f4d19254250b2212dd832ba6791
#: ../Doc/library/xml.etree.elementtree.rst:310
msgid "``tag``"
msgstr ""

# 211dee87131f4e0c92c642898ad24030
#: ../Doc/library/xml.etree.elementtree.rst:310
msgid ""
"Selects all child elements with the given tag. For example, ``spam`` selects "
"all child elements named ``spam``, ``spam/egg`` selects all grandchildren "
"named ``egg`` in all children named ``spam``."
msgstr ""

# 5d34b6a6676544d8bf909bc20cca7fcc
#: ../Doc/library/xml.etree.elementtree.rst:316
msgid ""
"Selects all child elements.  For example, ``*/egg`` selects all "
"grandchildren named ``egg``."
msgstr ""

# 09213562535c4d15a88793120a6ad546
#: ../Doc/library/xml.etree.elementtree.rst:319
msgid ""
"Selects the current node.  This is mostly useful at the beginning of the "
"path, to indicate that it's a relative path."
msgstr ""

# f341cabb7f0f4f6cb03eea11f08684a6
#: ../Doc/library/xml.etree.elementtree.rst:323
msgid "``//``"
msgstr ""

# b560d5d87e4a4a099f6b5dd605bd5244
#: ../Doc/library/xml.etree.elementtree.rst:323
msgid ""
"Selects all subelements, on all levels beneath the current  element.  For "
"example, ``.//egg`` selects all ``egg`` elements in the entire tree."
msgstr ""

# 8686ada8e7414fa4b058dcb9f14c466b
#: ../Doc/library/xml.etree.elementtree.rst:327
msgid "``..``"
msgstr ""

# d4df191f567e44fd809d9650169718ba
#: ../Doc/library/xml.etree.elementtree.rst:327
msgid "Selects the parent element."
msgstr ""

# 0c7d516ddd104d5b96bd02373e63e65b
#: ../Doc/library/xml.etree.elementtree.rst:329
msgid "``[@attrib]``"
msgstr ""

# f33ce2ffc44143289665be76ff0cc27a
#: ../Doc/library/xml.etree.elementtree.rst:329
msgid "Selects all elements that have the given attribute."
msgstr ""

# 834f9e361ad749eaa524adb0723caf19
#: ../Doc/library/xml.etree.elementtree.rst:331
msgid "``[@attrib='value']``"
msgstr ""

# ac63440637474b55bf7c6bd1a2d9716e
#: ../Doc/library/xml.etree.elementtree.rst:331
msgid ""
"Selects all elements for which the given attribute has the given value.  The "
"value cannot contain quotes."
msgstr ""

# 7e397b70b9c14070a7e958ee6a803728
#: ../Doc/library/xml.etree.elementtree.rst:335
msgid "``[tag]``"
msgstr ""

# aea44cac54114d06bd71b1fa382d10d4
#: ../Doc/library/xml.etree.elementtree.rst:335
msgid ""
"Selects all elements that have a child named ``tag``.  Only immediate "
"children are supported."
msgstr ""

# 01ddadfd61a04062b697a45cc445e606
#: ../Doc/library/xml.etree.elementtree.rst:338
msgid "``[position]``"
msgstr ""

# 8fc1dfebd3c04c6bb7d6c231632543ae
#: ../Doc/library/xml.etree.elementtree.rst:338
msgid ""
"Selects all elements that are located at the given position.  The position "
"can be either an integer (1 is the first position), the expression ``last()"
"`` (for the last position), or a position relative to the last position (e."
"g. ``last()-1``)."
msgstr ""

# 1007eed7aaba408f91cfb46ed43c7e3f
#: ../Doc/library/xml.etree.elementtree.rst:345
msgid ""
"Predicates (expressions within square brackets) must be preceded by a tag "
"name, an asterisk, or another predicate.  ``position`` predicates must be "
"preceded by a tag name."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:360
msgid ""
"Comment element factory.  This factory function creates a special element "
"that will be serialized as an XML comment by the standard serializer.  The "
"comment string can be either a bytestring or a Unicode string.  *text* is a "
"string containing the comment string.  Returns an element instance "
"representing a comment."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:369
msgid ""
"Writes an element tree or element structure to sys.stdout.  This function "
"should be used for debugging only."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:372
msgid ""
"The exact output format is implementation dependent.  In this version, it's "
"written as an ordinary XML file."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:375
msgid "*elem* is an element tree or an individual element."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:380
msgid ""
"Parses an XML section from a string constant.  Same as :func:`XML`.  *text* "
"is a string containing XML data.  Returns an :class:`Element` instance."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:386
msgid ""
"Parses an XML document from a sequence of string fragments.  *sequence* is a "
"list or other sequence containing XML data fragments.  *parser* is an "
"optional parser instance.  If not given, the standard :class:`XMLParser` "
"parser is used.  Returns an :class:`Element` instance."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:396
msgid ""
"Checks if an object appears to be a valid element object.  *element* is an "
"element instance.  Returns a true value if this is an element object."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:402
msgid ""
"Parses an XML section into an element tree incrementally, and reports what's "
"going on to the user.  *source* is a filename or file object containing XML "
"data.  *events* is a list of events to report back.  If omitted, only \"end"
"\" events are reported.  *parser* is an optional parser instance.  If not "
"given, the standard :class:`XMLParser` parser is used.  Returns an :term:"
"`iterator` providing ``(event, elem)`` pairs."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:411
msgid ""
":func:`iterparse` only guarantees that it has seen the \">\" character of a "
"starting tag when it emits a \"start\" event, so the attributes are defined, "
"but the contents of the text and tail attributes are undefined at that "
"point.  The same applies to the element children; they may or may not be "
"present."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:417
msgid "If you need a fully populated element, look for \"end\" events instead."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:422
msgid ""
"Parses an XML section into an element tree.  *source* is a filename or file "
"object containing XML data.  *parser* is an optional parser instance.  If "
"not given, the standard :class:`XMLParser` parser is used.  Returns an :"
"class:`ElementTree` instance."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:430
msgid ""
"PI element factory.  This factory function creates a special element that "
"will be serialized as an XML processing instruction.  *target* is a string "
"containing the PI target.  *text* is a string containing the PI contents, if "
"given.  Returns an element instance, representing a processing instruction."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:438
msgid ""
"Registers a namespace prefix.  The registry is global, and any existing "
"mapping for either the given prefix or the namespace URI will be removed. "
"*prefix* is a namespace prefix.  *uri* is a namespace uri.  Tags and "
"attributes in this namespace will be serialized with the given prefix, if at "
"all possible."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:449
msgid ""
"Subelement factory.  This function creates an element instance, and appends "
"it to an existing element."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:452
msgid ""
"The element name, attribute names, and attribute values can be either "
"bytestrings or Unicode strings.  *parent* is the parent element.  *tag* is "
"the subelement name.  *attrib* is an optional dictionary, containing element "
"attributes.  *extra* contains additional attributes, given as keyword "
"arguments.  Returns an element instance."
msgstr ""

# fea159bf96504ceeb587a02ebcfaa368
#: ../Doc/library/xml.etree.elementtree.rst:461
msgid ""
"Generates a string representation of an XML element, including all "
"subelements.  *element* is an :class:`Element` instance.  *encoding* [1]_ is "
"the output encoding (default is US-ASCII).  *method* is either ``\"xml\"``, "
"``\"html\"`` or ``\"text\"`` (default is ``\"xml\"``).  Returns an encoded "
"string containing the XML data."
msgstr ""

# 26aff80be3824c86818ec02bacd7a662
#: ../Doc/library/xml.etree.elementtree.rst:470
msgid ""
"Generates a string representation of an XML element, including all "
"subelements.  *element* is an :class:`Element` instance.  *encoding* [1]_ is "
"the output encoding (default is US-ASCII).   *method* is either ``\"xml\"``, "
"``\"html\"`` or ``\"text\"`` (default is ``\"xml\"``).  Returns a list of "
"encoded strings containing the XML data.  It does not guarantee any specific "
"sequence, except that ``\"\".join(tostringlist(element)) == tostring(element)"
"``."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:483
msgid ""
"Parses an XML section from a string constant.  This function can be used to "
"embed \"XML literals\" in Python code.  *text* is a string containing XML "
"data.  *parser* is an optional parser instance.  If not given, the standard :"
"class:`XMLParser` parser is used.  Returns an :class:`Element` instance."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:491
msgid ""
"Parses an XML section from a string constant, and also returns a dictionary "
"which maps from element id:s to elements.  *text* is a string containing XML "
"data.  *parser* is an optional parser instance.  If not given, the standard :"
"class:`XMLParser` parser is used.  Returns a tuple containing an :class:"
"`Element` instance and a dictionary."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:505
msgid ""
"Element class.  This class defines the Element interface, and provides a "
"reference implementation of this interface."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:508
msgid ""
"The element name, attribute names, and attribute values can be either "
"bytestrings or Unicode strings.  *tag* is the element name.  *attrib* is an "
"optional dictionary, containing element attributes.  *extra* contains "
"additional attributes, given as keyword arguments."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:516
msgid ""
"A string identifying what kind of data this element represents (the element "
"type, in other words)."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:522
msgid ""
"The *text* attribute can be used to hold additional data associated with the "
"element.  As the name implies this attribute is usually a string but may be "
"any application-specific object.  If the element is created from an XML file "
"the attribute will contain any text found between the element tags."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:531
msgid ""
"The *tail* attribute can be used to hold additional data associated with the "
"element.  This attribute is usually a string but may be any application-"
"specific object.  If the element is created from an XML file the attribute "
"will contain any text found after the element's end tag and before the next "
"tag."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:540
msgid ""
"A dictionary containing the element's attributes.  Note that while the "
"*attrib* value is always a real mutable Python dictionary, an ElementTree "
"implementation may choose to use another internal representation, and create "
"the dictionary only if someone asks for it.  To take advantage of such "
"implementations, use the dictionary methods below whenever possible."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:546
msgid "The following dictionary-like methods work on the element attributes."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:551
msgid ""
"Resets an element.  This function removes all subelements, clears all "
"attributes, and sets the text and tail attributes to None."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:557
msgid "Gets the element attribute named *key*."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:559
msgid ""
"Returns the attribute value, or *default* if the attribute was not found."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:564
msgid ""
"Returns the element attributes as a sequence of (name, value) pairs.  The "
"attributes are returned in an arbitrary order."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:570
msgid ""
"Returns the elements attribute names as a list.  The names are returned in "
"an arbitrary order."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:576
msgid "Set the attribute *key* on the element to *value*."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:578
msgid "The following methods work on the element's children (subelements)."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:583
msgid ""
"Adds the element *subelement* to the end of this elements internal list of "
"subelements."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:589
msgid ""
"Appends *subelements* from a sequence object with zero or more elements. "
"Raises :exc:`AssertionError` if a subelement is not a valid object."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:597
msgid ""
"Finds the first subelement matching *match*.  *match* may be a tag name or "
"path.  Returns an element instance or ``None``."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:603
msgid ""
"Finds all matching subelements, by tag name or path.  Returns a list "
"containing all matching elements in document order."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:609
msgid ""
"Finds text for the first subelement matching *match*.  *match* may be a tag "
"name or path.  Returns the text content of the first matching element, or "
"*default* if no element was found.  Note that if the matching element has no "
"text content an empty string is returned."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:629
msgid "Inserts a subelement at the given position in this element."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:634
msgid ""
"Creates a tree :term:`iterator` with the current element as the root. The "
"iterator iterates over this element and all elements below it, in document "
"(depth first) order.  If *tag* is not ``None`` or ``'*'``, only elements "
"whose tag equals *tag* are returned from the iterator.  If the tree "
"structure is modified during iteration, the result is undefined."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:645
msgid ""
"Finds all matching subelements, by tag name or path.  Returns an iterable "
"yielding all matching elements in document order."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:653
msgid ""
"Creates a text iterator.  The iterator loops over this element and all "
"subelements, in document order, and returns all inner text."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:661
msgid ""
"Creates a new element object of the same type as this element.  Do not call "
"this method, use the :func:`SubElement` factory function instead."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:667
msgid ""
"Removes *subelement* from the element.  Unlike the find\\* methods this "
"method compares elements based on the instance identity, not on tag value or "
"contents."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:671
msgid ""
":class:`Element` objects also support the following sequence type methods "
"for working with subelements: :meth:`__delitem__`, :meth:`__getitem__`, :"
"meth:`__setitem__`, :meth:`__len__`."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:675
msgid ""
"Caution: Elements with no subelements will test as ``False``.  This behavior "
"will change in future versions.  Use specific ``len(elem)`` or ``elem is "
"None`` test instead. ::"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:691
msgid "ElementTree Objects"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:696
msgid ""
"ElementTree wrapper class.  This class represents an entire element "
"hierarchy, and adds some extra support for serialization to and from "
"standard XML."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:700
msgid ""
"*element* is the root element.  The tree is initialized with the contents of "
"the XML *file* if given."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:706
msgid ""
"Replaces the root element for this tree.  This discards the current contents "
"of the tree, and replaces it with the given element.  Use with care.  "
"*element* is an element instance."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:713
msgid ""
"Finds the first toplevel element matching *match*.  *match* may be a tag "
"name or path.  Same as getroot().find(match).  Returns the first matching "
"element, or ``None`` if no element was found."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:720
msgid ""
"Finds all matching subelements, by tag name or path.  Same as getroot()."
"findall(match).  *match* may be a tag name or path.  Returns a list "
"containing all matching elements, in document order."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:727
msgid ""
"Finds the element text for the first toplevel element with given tag. Same "
"as getroot().findtext(match).  *match* may be a tag name or path. *default* "
"is the value to return if the element was not found.  Returns the text "
"content of the first matching element, or the default value no element was "
"found.  Note that if the element is found, but has no text content, this "
"method returns an empty string."
msgstr ""

# 86f061c3247649e7877da26bf1b3e3dd
#: ../Doc/library/xml.etree.elementtree.rst:743
msgid "Returns the root element for this tree."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:748
msgid ""
"Creates and returns a tree iterator for the root element.  The iterator "
"loops over all elements in this tree, in section order.  *tag* is the tag to "
"look for (default is to return all elements)"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:755
msgid ""
"Finds all matching subelements, by tag name or path.  Same as getroot()."
"iterfind(match). Returns an iterable yielding all matching elements in "
"document order."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:764
msgid ""
"Loads an external XML section into this element tree.  *source* is a file "
"name or file object.  *parser* is an optional parser instance.  If not "
"given, the standard XMLParser parser is used.  Returns the section root "
"element."
msgstr ""

# 170b7be9bf4446aea95a70c35117feff
#: ../Doc/library/xml.etree.elementtree.rst:772
msgid ""
"Writes the element tree to a file, as XML.  *file* is a file name, or a file "
"object opened for writing.  *encoding* [1]_ is the output encoding (default "
"is US-ASCII).  *xml_declaration* controls if an XML declaration should be "
"added to the file.  Use False for never, True for always, None for only if "
"not US-ASCII or UTF-8 (default is None).  *method* is either ``\"xml\"``, ``"
"\"html\"`` or ``\"text\"`` (default is ``\"xml\"``).  Returns an encoded "
"string."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:780
msgid "This is the XML file that is going to be manipulated::"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:792
msgid ""
"Example of changing the attribute \"target\" of every link in first "
"paragraph::"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:811
msgid "QName Objects"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:816
msgid ""
"QName wrapper.  This can be used to wrap a QName attribute value, in order "
"to get proper namespace handling on output.  *text_or_uri* is a string "
"containing the QName value, in the form {uri}local, or, if the tag argument "
"is given, the URI part of a QName.  If *tag* is given, the first argument is "
"interpreted as an URI, and this argument is interpreted as a local name. :"
"class:`QName` instances are opaque."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:827
msgid "TreeBuilder Objects"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:832
msgid ""
"Generic element structure builder.  This builder converts a sequence of "
"start, data, and end method calls to a well-formed element structure.  You "
"can use this class to build an element structure using a custom XML parser, "
"or a parser for some other XML-like format.  The *element_factory* is called "
"to create new :class:`Element` instances when given."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:841
msgid ""
"Flushes the builder buffers, and returns the toplevel document element.  "
"Returns an :class:`Element` instance."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:847
msgid ""
"Adds text to the current element.  *data* is a string.  This should be "
"either a bytestring, or a Unicode string."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:853
msgid ""
"Closes the current element.  *tag* is the element name.  Returns the closed "
"element."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:859
msgid ""
"Opens a new element.  *tag* is the element name.  *attrs* is a dictionary "
"containing element attributes.  Returns the opened element."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:863
msgid ""
"In addition, a custom :class:`TreeBuilder` object can provide the following "
"method:"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:868
msgid ""
"Handles a doctype declaration.  *name* is the doctype name.  *pubid* is the "
"public identifier.  *system* is the system identifier.  This method does not "
"exist on the default :class:`TreeBuilder` class."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:883
msgid ""
":class:`Element` structure builder for XML source data, based on the expat "
"parser.  *html* are predefined HTML entities.  This flag is not supported by "
"the current implementation.  *target* is the target object.  If omitted, the "
"builder uses an instance of the standard TreeBuilder class.  *encoding* [1]_ "
"is optional.  If given, the value overrides the encoding specified in the "
"XML file."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:893
msgid "Finishes feeding data to the parser.  Returns an element structure."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:905
msgid "Feeds data to the parser.  *data* is encoded data."
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:907
msgid ""
":meth:`XMLParser.feed` calls *target*\\'s :meth:`start` method for each "
"opening tag, its :meth:`end` method for each closing tag, and data is "
"processed by method :meth:`data`.  :meth:`XMLParser.close` calls *target*"
"\\'s method :meth:`close`. :class:`XMLParser` can be used not only for "
"building a tree structure. This is an example of counting the maximum depth "
"of an XML file::"
msgstr ""

#: ../Doc/library/xml.etree.elementtree.rst:949
msgid ""
"The encoding string included in XML output should conform to the appropriate "
"standards.  For example, \"UTF-8\" is valid, but \"UTF8\" is not.  See "
"http://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl and http://www."
"iana.org/assignments/character-sets."
msgstr ""

#: ../Doc/library/xml.sax.rst:3
msgid ":mod:`xml.sax` --- Support for SAX2 parsers"
msgstr ""

#: ../Doc/library/xml.sax.rst:14
msgid ""
"The :mod:`xml.sax` package provides a number of modules which implement the "
"Simple API for XML (SAX) interface for Python.  The package itself provides "
"the SAX exceptions and the convenience functions which will be most used by "
"users of the SAX API."
msgstr ""

#: ../Doc/library/xml.sax.rst:19
msgid "The convenience functions are:"
msgstr ""

#: ../Doc/library/xml.sax.rst:24
msgid ""
"Create and return a SAX :class:`XMLReader` object.  The first parser found "
"will be used.  If *parser_list* is provided, it must be a sequence of "
"strings which name modules that have a function named :func:"
"`create_parser`.  Modules listed in *parser_list* will be used before "
"modules in the default list of parsers."
msgstr ""

#: ../Doc/library/xml.sax.rst:32
msgid ""
"Create a SAX parser and use it to parse a document.  The document, passed in "
"as *filename_or_stream*, can be a filename or a file object.  The *handler* "
"parameter needs to be a SAX :class:`ContentHandler` instance.  If "
"*error_handler* is given, it must be a SAX :class:`ErrorHandler` instance; "
"if omitted,  :exc:`SAXParseException` will be raised on all errors.  There "
"is no return value; all work must be done by the *handler* passed in."
msgstr ""

#: ../Doc/library/xml.sax.rst:42
msgid ""
"Similar to :func:`parse`, but parses from a buffer *string* received as a "
"parameter."
msgstr ""

#: ../Doc/library/xml.sax.rst:45
msgid ""
"A typical SAX application uses three kinds of objects: readers, handlers and "
"input sources.  \"Reader\" in this context is another term for parser, i.e. "
"some piece of code that reads the bytes or characters from the input source, "
"and produces a sequence of events. The events then get distributed to the "
"handler objects, i.e. the reader invokes a method on the handler.  A SAX "
"application must therefore obtain a reader object, create or open the input "
"sources, create the handlers, and connect these objects all together.  As "
"the final step of preparation, the reader is called to parse the input. "
"During parsing, methods on the handler objects are called based on "
"structural and syntactic events from the input data."
msgstr ""

#: ../Doc/library/xml.sax.rst:56
msgid ""
"For these objects, only the interfaces are relevant; they are normally not "
"instantiated by the application itself.  Since Python does not have an "
"explicit notion of interface, they are formally introduced as classes, but "
"applications may use implementations which do not inherit from the provided "
"classes.  The :class:`InputSource`, :class:`Locator`, :class:`Attributes`, :"
"class:`AttributesNS`, and :class:`XMLReader` interfaces are defined in the "
"module :mod:`xml.sax.xmlreader`.  The handler interfaces are defined in :mod:"
"`xml.sax.handler`.  For convenience, :class:`InputSource` (which is often "
"instantiated directly) and the handler classes are also available from :mod:"
"`xml.sax`.  These interfaces are described below."
msgstr ""

#: ../Doc/library/xml.sax.rst:67
msgid ""
"In addition to these classes, :mod:`xml.sax` provides the following "
"exception classes."
msgstr ""

#: ../Doc/library/xml.sax.rst:73
msgid ""
"Encapsulate an XML error or warning.  This class can contain basic error or "
"warning information from either the XML parser or the application: it can be "
"subclassed to provide additional functionality or to add localization.  Note "
"that although the handlers defined in the :class:`ErrorHandler` interface "
"receive instances of this exception, it is not required to actually raise "
"the exception --- it is also useful as a container for information."
msgstr ""

#: ../Doc/library/xml.sax.rst:80
msgid ""
"When instantiated, *msg* should be a human-readable description of the "
"error. The optional *exception* parameter, if given, should be ``None`` or "
"an exception that was caught by the parsing code and is being passed along "
"as information."
msgstr ""

#: ../Doc/library/xml.sax.rst:84
msgid "This is the base class for the other SAX exception classes."
msgstr ""

#: ../Doc/library/xml.sax.rst:89
msgid ""
"Subclass of :exc:`SAXException` raised on parse errors. Instances of this "
"class are passed to the methods of the SAX :class:`ErrorHandler` interface "
"to provide information about the parse error.  This class supports the SAX :"
"class:`Locator` interface as well as the :class:`SAXException` interface."
msgstr ""

#: ../Doc/library/xml.sax.rst:97
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX :class:`XMLReader` is "
"confronted with an unrecognized feature or property.  SAX applications and "
"extensions may use this class for similar purposes."
msgstr ""

#: ../Doc/library/xml.sax.rst:104
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX :class:`XMLReader` is "
"asked to enable a feature that is not supported, or to set a property to a "
"value that the implementation does not support.  SAX applications and "
"extensions may use this class for similar purposes."
msgstr ""

#: ../Doc/library/xml.sax.rst:113
msgid ""
"This site is the focal point for the definition of the SAX API.  It provides "
"a Java implementation and online documentation.  Links to implementations "
"and historical information are also available."
msgstr ""

#: ../Doc/library/xml.sax.rst:118
msgid "Definitions of the interfaces for application-provided objects."
msgstr ""

#: ../Doc/library/xml.sax.rst:121
msgid "Convenience functions for use in SAX applications."
msgstr ""

#: ../Doc/library/xml.sax.rst:124
msgid "Definitions of the interfaces for parser-provided objects."
msgstr ""

#: ../Doc/library/xml.sax.rst:130
msgid "SAXException Objects"
msgstr ""

#: ../Doc/library/xml.sax.rst:132
msgid ""
"The :class:`SAXException` exception class supports the following methods:"
msgstr ""

#: ../Doc/library/xml.sax.rst:137
msgid "Return a human-readable message describing the error condition."
msgstr ""

#: ../Doc/library/xml.sax.rst:142
msgid "Return an encapsulated exception object, or ``None``."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:3
msgid ":mod:`xml.sax.handler` --- Base classes for SAX handlers"
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:13
msgid ""
"The SAX API defines four kinds of handlers: content handlers, DTD handlers, "
"error handlers, and entity resolvers. Applications normally only need to "
"implement those interfaces whose events they are interested in; they can "
"implement the interfaces in a single object or in multiple objects. Handler "
"implementations should inherit from the base classes provided in the module :"
"mod:`xml.sax.handler`, so that all methods get default implementations."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:23
msgid ""
"This is the main callback interface in SAX, and the one most important to "
"applications. The order of events in this interface mirrors the order of the "
"information in the document."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:30
msgid "Handle DTD events."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:32
msgid ""
"This interface specifies only those DTD events required for basic parsing "
"(unparsed entities and attributes)."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:38
msgid ""
"Basic interface for resolving entities. If you create an object implementing "
"this interface, then register the object with your Parser, the parser will "
"call the method in your object to resolve all external entities."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:45
msgid ""
"Interface used by the parser to present error and warning messages to the "
"application.  The methods of this object control whether errors are "
"immediately converted to exceptions or are handled in some other way."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:49
msgid ""
"In addition to these classes, :mod:`xml.sax.handler` provides symbolic "
"constants for the feature and property names."
msgstr ""

# c0eee3071cfc44b0b63d55644e0657ca
#: ../Doc/library/xml.sax.handler.rst:55
msgid "value: ``\"http://xml.org/sax/features/namespaces\"``"
msgstr ""

# 2f05efb30beb465cbab433f8764b44cc
#: ../Doc/library/xml.sax.handler.rst:56
msgid "true: Perform Namespace processing."
msgstr ""

# d75b0daf3c3b4c0cb76b6e5831a8b67d
#: ../Doc/library/xml.sax.handler.rst:58
msgid ""
"false: Optionally do not perform Namespace processing (implies namespace-"
"prefixes; default)."
msgstr ""

# f84184af97bb493098fcaf0573eef859
# f1dcf154c8a64c8da3d7f3b5e78e7f25
# 9221d45f9bf2452f9db96f96564b2d3f
# a2ae6c70665548379fc0fa7ed020c327
# 4eb914dfb0734f9d826f485e09ce288e
# 1630008771ae4b9ca190e7f349231231
# 9d0199cf40034fb2bea65babb41d9dee
#: ../Doc/library/xml.sax.handler.rst:59 ../Doc/library/xml.sax.handler.rst:69
#: ../Doc/library/xml.sax.handler.rst:78 ../Doc/library/xml.sax.handler.rst:87
#: ../Doc/library/xml.sax.handler.rst:95
#: ../Doc/library/xml.sax.handler.rst:105
#: ../Doc/library/xml.sax.handler.rst:137
msgid "access: (parsing) read-only; (not parsing) read/write"
msgstr ""

# cd968d37669a487fbe07ddebf7ba7774
#: ../Doc/library/xml.sax.handler.rst:64
msgid "value: ``\"http://xml.org/sax/features/namespace-prefixes\"``"
msgstr ""

# 8b8d301942a9471397a0b6b88652ae9e
#: ../Doc/library/xml.sax.handler.rst:66
msgid ""
"true: Report the original prefixed names and attributes used for Namespace "
"declarations."
msgstr ""

# c344c4ff29454adea944d328db5fdfd4
#: ../Doc/library/xml.sax.handler.rst:68
msgid ""
"false: Do not report attributes used for Namespace declarations, and "
"optionally do not report original prefixed names (default)."
msgstr ""

# 2ba523227fce4d7da6a04941192bc8e5
#: ../Doc/library/xml.sax.handler.rst:74
msgid "value: ``\"http://xml.org/sax/features/string-interning\"``"
msgstr ""

# 69ceeeb2654b496a9240c4184fae1e69
#: ../Doc/library/xml.sax.handler.rst:76
msgid ""
"true: All element names, prefixes, attribute names, Namespace URIs, and "
"local names are interned using the built-in intern function."
msgstr ""

# 57a25db976314e1aa5c9458c91b69552
#: ../Doc/library/xml.sax.handler.rst:77
msgid ""
"false: Names are not necessarily interned, although they may be (default)."
msgstr ""

# 5bb5b2be3b404344895fabc1c99d9953
#: ../Doc/library/xml.sax.handler.rst:83
msgid "value: ``\"http://xml.org/sax/features/validation\"``"
msgstr ""

# 33b181321eeb4a4b8fb311ceba4ab884
#: ../Doc/library/xml.sax.handler.rst:85
msgid ""
"true: Report all validation errors (implies external-general-entities and "
"external-parameter-entities)."
msgstr ""

# a7d15a55fc3145f5b474272478c7c21a
#: ../Doc/library/xml.sax.handler.rst:86
msgid "false: Do not report validation errors."
msgstr ""

# 4bcd1c5f25af479a87edab55c0289b62
#: ../Doc/library/xml.sax.handler.rst:92
msgid "value: ``\"http://xml.org/sax/features/external-general-entities\"``"
msgstr ""

# d9d9bf0e136a47f4b555729d7fd4228e
#: ../Doc/library/xml.sax.handler.rst:93
msgid "true: Include all external general (text) entities."
msgstr ""

# e2b1ddca6f1d433e9099297245abebc9
#: ../Doc/library/xml.sax.handler.rst:94
msgid "false: Do not include external general entities."
msgstr ""

# ad732970b4a24e079e70aeffdacefb4c
#: ../Doc/library/xml.sax.handler.rst:100
msgid "value: ``\"http://xml.org/sax/features/external-parameter-entities\"``"
msgstr ""

# e98148dcce5d4dfe94bebc477d62e879
#: ../Doc/library/xml.sax.handler.rst:102
msgid ""
"true: Include all external parameter entities, including the external DTD "
"subset."
msgstr ""

# f00c728be4df47d9a729f37b3334c6f5
#: ../Doc/library/xml.sax.handler.rst:104
msgid ""
"false: Do not include any external parameter entities, even the external DTD "
"subset."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:110
msgid "List of all features."
msgstr ""

# 130f217877a1482cb4982bce9823520a
#: ../Doc/library/xml.sax.handler.rst:115
msgid "value: ``\"http://xml.org/sax/properties/lexical-handler\"``"
msgstr ""

# 700715abf35143c5bb4567e0276b640a
#: ../Doc/library/xml.sax.handler.rst:116
msgid "data type: xml.sax.sax2lib.LexicalHandler (not supported in Python 2)"
msgstr ""

# c06316e8f3634fa1ae3476432503e9a8
#: ../Doc/library/xml.sax.handler.rst:118
msgid ""
"description: An optional extension handler for lexical events like comments."
msgstr ""

# d77eeb65c1404122bcf2ce1f4406c0c7
# 9a1a2ef5e8be4607a33f59dcf76f06fd
#: ../Doc/library/xml.sax.handler.rst:119
#: ../Doc/library/xml.sax.handler.rst:128
msgid "access: read/write"
msgstr ""

# 6d2fb747275f42cc80057bc23367004c
#: ../Doc/library/xml.sax.handler.rst:124
msgid "value: ``\"http://xml.org/sax/properties/declaration-handler\"``"
msgstr ""

# 24104520eafe4d799d8662726c1285fb
#: ../Doc/library/xml.sax.handler.rst:125
msgid "data type: xml.sax.sax2lib.DeclHandler (not supported in Python 2)"
msgstr ""

# ee1edd26eca94887aadc9864fd55dd83
#: ../Doc/library/xml.sax.handler.rst:127
msgid ""
"description: An optional extension handler for DTD-related events other than "
"notations and unparsed entities."
msgstr ""

# 1754129d1ed740d6a38969fa35bb32a2
#: ../Doc/library/xml.sax.handler.rst:133
msgid "value: ``\"http://xml.org/sax/properties/dom-node\"``"
msgstr ""

# 6b4efe0880ec4c6290ad138dc86c5737
#: ../Doc/library/xml.sax.handler.rst:134
msgid "data type: org.w3c.dom.Node (not supported in Python 2)"
msgstr ""

# 8696c2be973f483ba7778233fc8f330d
#: ../Doc/library/xml.sax.handler.rst:136
msgid ""
"description: When parsing, the current DOM node being visited if this is a "
"DOM iterator; when not parsing, the root DOM node for iteration."
msgstr ""

# 8769207fab8e41989e4bb9321b6bfc9d
#: ../Doc/library/xml.sax.handler.rst:142
msgid "value: ``\"http://xml.org/sax/properties/xml-string\"``"
msgstr ""

# d16e93af9126470db4e6b3ba5710ea52
#: ../Doc/library/xml.sax.handler.rst:143
msgid "data type: String"
msgstr ""

# d6252d4e1ab1458facd010c8f415cbd3
#: ../Doc/library/xml.sax.handler.rst:145
msgid ""
"description: The literal string of characters that was the source for the "
"current event."
msgstr ""

# 354d5c9789d54a56a5aee15a6a8e7437
#: ../Doc/library/xml.sax.handler.rst:146
msgid "access: read-only"
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:151
msgid "List of all known property names."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:157
msgid "ContentHandler Objects"
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:159
msgid ""
"Users are expected to subclass :class:`ContentHandler` to support their "
"application.  The following methods are called by the parser on the "
"appropriate events in the input document:"
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:166
msgid ""
"Called by the parser to give the application a locator for locating the "
"origin of document events."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:169
msgid ""
"SAX parsers are strongly encouraged (though not absolutely required) to "
"supply a locator: if it does so, it must supply the locator to the "
"application by invoking this method before invoking any of the other methods "
"in the DocumentHandler interface."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:174
msgid ""
"The locator allows the application to determine the end position of any "
"document-related event, even if the parser is not reporting an error. "
"Typically, the application will use this information for reporting its own "
"errors (such as character content that does not match an application's "
"business rules). The information returned by the locator is probably not "
"sufficient for use with a search engine."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:181
msgid ""
"Note that the locator will return correct information only during the "
"invocation of the events in this interface. The application should not "
"attempt to use it at any other time."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:188
msgid "Receive notification of the beginning of a document."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:190
msgid ""
"The SAX parser will invoke this method only once, before any other methods "
"in this interface or in DTDHandler (except for :meth:`setDocumentLocator`)."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:196
msgid "Receive notification of the end of a document."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:198
msgid ""
"The SAX parser will invoke this method only once, and it will be the last "
"method invoked during the parse. The parser shall not invoke this method "
"until it has either abandoned parsing (because of an unrecoverable error) or "
"reached the end of input."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:206
msgid "Begin the scope of a prefix-URI Namespace mapping."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:208
msgid ""
"The information from this event is not necessary for normal Namespace "
"processing: the SAX XML reader will automatically replace prefixes for "
"element and attribute names when the ``feature_namespaces`` feature is "
"enabled (the default)."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:213
msgid ""
"There are cases, however, when applications need to use prefixes in "
"character data or in attribute values, where they cannot safely be expanded "
"automatically; the :meth:`startPrefixMapping` and :meth:`endPrefixMapping` "
"events supply the information to the application to expand prefixes in those "
"contexts itself, if necessary."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:221
msgid ""
"Note that :meth:`startPrefixMapping` and :meth:`endPrefixMapping` events are "
"not guaranteed to be properly nested relative to each-other: all :meth:"
"`startPrefixMapping` events will occur before the corresponding :meth:"
"`startElement` event, and all :meth:`endPrefixMapping` events will occur "
"after the corresponding :meth:`endElement` event, but their order is not "
"guaranteed."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:231
msgid "End the scope of a prefix-URI mapping."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:233
msgid ""
"See :meth:`startPrefixMapping` for details. This event will always occur "
"after the corresponding :meth:`endElement` event, but the order of :meth:"
"`endPrefixMapping` events is not otherwise guaranteed."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:240
msgid "Signals the start of an element in non-namespace mode."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:242
msgid ""
"The *name* parameter contains the raw XML 1.0 name of the element type as a "
"string and the *attrs* parameter holds an object of the :class:`Attributes` "
"interface (see :ref:`attributes-objects`) containing the attributes of the "
"element.  The object passed as *attrs* may be re-used by the parser; holding "
"on to a reference to it is not a reliable way to keep a copy of the "
"attributes. To keep a copy of the attributes, use the :meth:`copy` method of "
"the *attrs* object."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:253
msgid "Signals the end of an element in non-namespace mode."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:255
msgid ""
"The *name* parameter contains the name of the element type, just as with "
"the :meth:`startElement` event."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:261
msgid "Signals the start of an element in namespace mode."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:263
msgid ""
"The *name* parameter contains the name of the element type as a ``(uri, "
"localname)`` tuple, the *qname* parameter contains the raw XML 1.0 name used "
"in the source document, and the *attrs* parameter holds an instance of the :"
"class:`AttributesNS` interface (see :ref:`attributes-ns-objects`) containing "
"the attributes of the element.  If no namespace is associated with the "
"element, the *uri* component of *name* will be ``None``.  The object passed "
"as *attrs* may be re-used by the parser; holding on to a reference to it is "
"not a reliable way to keep a copy of the attributes.  To keep a copy of the "
"attributes, use the :meth:`copy` method of the *attrs* object."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:273
msgid ""
"Parsers may set the *qname* parameter to ``None``, unless the "
"``feature_namespace_prefixes`` feature is activated."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:279
msgid "Signals the end of an element in namespace mode."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:281
msgid ""
"The *name* parameter contains the name of the element type, just as with "
"the :meth:`startElementNS` method, likewise the *qname* parameter."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:287
msgid "Receive notification of character data."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:289
msgid ""
"The Parser will call this method to report each chunk of character data. SAX "
"parsers may return all contiguous character data in a single chunk, or they "
"may split it into several chunks; however, all of the characters in any "
"single event must come from the same external entity so that the Locator "
"provides useful information."
msgstr ""

# c34921a2acba45ceba4215570fb2d85a
#: ../Doc/library/xml.sax.handler.rst:295
msgid ""
"*content* may be a Unicode string or a byte string; the ``expat`` reader "
"module produces always Unicode strings."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:300
msgid ""
"The earlier SAX 1 interface provided by the Python XML Special Interest "
"Group used a more Java-like interface for this method.  Since most parsers "
"used from Python did not take advantage of the older interface, the simpler "
"signature was chosen to replace it.  To convert old code to the new "
"interface, use *content* instead of slicing content with the old *offset* "
"and *length* parameters."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:309
msgid "Receive notification of ignorable whitespace in element content."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:311
msgid ""
"Validating Parsers must use this method to report each chunk of ignorable "
"whitespace (see the W3C XML 1.0 recommendation, section 2.10): non-"
"validating parsers may also use this method if they are capable of parsing "
"and using content models."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:316
msgid ""
"SAX parsers may return all contiguous whitespace in a single chunk, or they "
"may split it into several chunks; however, all of the characters in any "
"single event must come from the same external entity, so that the Locator "
"provides useful information."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:324
msgid "Receive notification of a processing instruction."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:326
msgid ""
"The Parser will invoke this method once for each processing instruction "
"found: note that processing instructions may occur before or after the main "
"document element."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:330
msgid ""
"A SAX parser should never report an XML declaration (XML 1.0, section 2.8) "
"or a text declaration (XML 1.0, section 4.3.1) using this method."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:336
msgid "Receive notification of a skipped entity."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:338
msgid ""
"The Parser will invoke this method once for each entity skipped. Non-"
"validating processors may skip entities if they have not seen the "
"declarations (because, for example, the entity was declared in an external "
"DTD subset). All processors may skip external entities, depending on the "
"values of the ``feature_external_ges`` and the ``feature_external_pes`` "
"properties."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:348
msgid "DTDHandler Objects"
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:350
msgid ":class:`DTDHandler` instances provide the following methods:"
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:355
msgid "Handle a notation declaration event."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:360
msgid "Handle an unparsed entity declaration event."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:366
msgid "EntityResolver Objects"
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:371
msgid ""
"Resolve the system identifier of an entity and return either the system "
"identifier to read from as a string, or an InputSource to read from. The "
"default implementation returns *systemId*."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:379
msgid "ErrorHandler Objects"
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:381
msgid ""
"Objects with this interface are used to receive error and warning "
"information from the :class:`XMLReader`.  If you create an object that "
"implements this interface, then register the object with your :class:"
"`XMLReader`, the parser will call the methods in your object to report all "
"warnings and errors. There are three levels of errors available: warnings, "
"(possibly) recoverable errors, and unrecoverable errors.  All methods take "
"a :exc:`SAXParseException` as the only parameter.  Errors and warnings may "
"be converted to an exception by raising the passed-in exception object."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:393
msgid ""
"Called when the parser encounters a recoverable error.  If this method does "
"not raise an exception, parsing may continue, but further document "
"information should not be expected by the application.  Allowing the parser "
"to continue may allow additional errors to be discovered in the input "
"document."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:401
msgid ""
"Called when the parser encounters an error it cannot recover from; parsing "
"is expected to terminate when this method returns."
msgstr ""

#: ../Doc/library/xml.sax.handler.rst:407
msgid ""
"Called when the parser presents minor warning information to the "
"application. Parsing is expected to continue when this method returns, and "
"document information will continue to be passed to the application. Raising "
"an exception in this method will cause parsing to end."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:3
msgid ":mod:`xml.sax.xmlreader` --- Interface for XML parsers"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:13
msgid ""
"SAX parsers implement the :class:`XMLReader` interface. They are implemented "
"in a Python module, which must provide a function :func:`create_parser`. "
"This function is invoked by  :func:`xml.sax.make_parser` with no arguments "
"to create a new  parser object."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:21
msgid "Base class which can be inherited by SAX parsers."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:26
msgid ""
"In some cases, it is desirable not to parse an input source at once, but to "
"feed chunks of the document as they get available. Note that the reader will "
"normally not read the entire file, but read it in chunks as well; still :"
"meth:`parse` won't return until the entire document is processed. So these "
"interfaces should be used if the blocking behaviour of :meth:`parse` is not "
"desirable."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:32
msgid ""
"When the parser is instantiated it is ready to begin accepting data from the "
"feed method immediately. After parsing has been finished with a call to "
"close the reset method must be called to make the parser ready to accept new "
"data, either from feed or using the parse method."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:37
msgid ""
"Note that these methods must *not* be called during parsing, that is, after "
"parse has been called and before it returns."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:40
msgid ""
"By default, the class also implements the parse method of the XMLReader "
"interface using the feed, close and reset methods of the IncrementalParser "
"interface as a convenience to SAX 2.0 driver writers."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:47
msgid ""
"Interface for associating a SAX event with a document location. A locator "
"object will return valid results only during calls to DocumentHandler "
"methods; at any other time, the results are unpredictable. If information is "
"not available, methods may return ``None``."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:55
msgid ""
"Encapsulation of the information needed by the :class:`XMLReader` to read "
"entities."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:58
msgid ""
"This class may include information about the public identifier, system "
"identifier, byte stream (possibly with character encoding information) and/"
"or the character stream of an entity."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:62
msgid ""
"Applications will create objects of this class for use in the :meth:"
"`XMLReader.parse` method and for returning from EntityResolver.resolveEntity."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:66
msgid ""
"An :class:`InputSource` belongs to the application, the :class:`XMLReader` "
"is not allowed to modify :class:`InputSource` objects passed to it from the "
"application, although it may make copies and modify those."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:73
msgid ""
"This is an implementation of the :class:`Attributes` interface (see section :"
"ref:`attributes-objects`).  This is a dictionary-like object which "
"represents the element attributes in a :meth:`startElement` call. In "
"addition to the most useful dictionary operations, it supports a number of "
"other methods as described by the interface. Objects of this class should be "
"instantiated by readers; *attrs* must be a dictionary-like object containing "
"a mapping from attribute names to attribute values."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:84
msgid ""
"Namespace-aware variant of :class:`AttributesImpl`, which will be passed to :"
"meth:`startElementNS`. It is derived from :class:`AttributesImpl`, but "
"understands attribute names as two-tuples of *namespaceURI* and *localname*. "
"In addition, it provides a number of methods expecting qualified names as "
"they appear in the original document.  This class implements the :class:"
"`AttributesNS` interface (see section :ref:`attributes-ns-objects`)."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:95
msgid "XMLReader Objects"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:97
msgid "The :class:`XMLReader` interface supports the following methods:"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:102
msgid ""
"Process an input source, producing SAX events. The *source* object can be a "
"system identifier (a string identifying the input source -- typically a file "
"name or an URL), a file-like object, or an :class:`InputSource` object. "
"When :meth:`parse` returns, the input is completely processed, and the "
"parser object can be discarded or reset. As a limitation, the current "
"implementation only accepts byte streams; processing of character streams is "
"for further study."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:112
msgid "Return the current :class:`ContentHandler`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:117
msgid ""
"Set the current :class:`ContentHandler`.  If no :class:`ContentHandler` is "
"set, content events will be discarded."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:123
msgid "Return the current :class:`DTDHandler`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:128
msgid ""
"Set the current :class:`DTDHandler`.  If no :class:`DTDHandler` is set, DTD "
"events will be discarded."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:134
msgid "Return the current :class:`EntityResolver`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:139
msgid ""
"Set the current :class:`EntityResolver`.  If no :class:`EntityResolver` is "
"set, attempts to resolve an external entity will result in opening the "
"system identifier for the entity, and fail if it is not available."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:146
msgid "Return the current :class:`ErrorHandler`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:151
msgid ""
"Set the current error handler.  If no :class:`ErrorHandler` is set, errors "
"will be raised as exceptions, and warnings will be printed."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:157
msgid "Allow an application to set the locale for errors and warnings."
msgstr ""

# 894a8a2f86fd4c6e85d4fd30caaf727a
#: ../Doc/library/xml.sax.reader.rst:159
msgid ""
"SAX parsers are not required to provide localization for errors and "
"warnings; if they cannot support the requested locale, however, they must "
"raise a SAX exception.  Applications may request a locale change in the "
"middle of a parse."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:166
msgid ""
"Return the current setting for feature *featurename*.  If the feature is not "
"recognized, :exc:`SAXNotRecognizedException` is raised. The well-known "
"featurenames are listed in the module :mod:`xml.sax.handler`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:173
msgid ""
"Set the *featurename* to *value*. If the feature is not recognized, :exc:"
"`SAXNotRecognizedException` is raised. If the feature or its setting is not "
"supported by the parser, *SAXNotSupportedException* is raised."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:180
msgid ""
"Return the current setting for property *propertyname*. If the property is "
"not recognized, a :exc:`SAXNotRecognizedException` is raised. The well-known "
"propertynames are listed in the module :mod:`xml.sax.handler`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:187
msgid ""
"Set the *propertyname* to *value*. If the property is not recognized, :exc:"
"`SAXNotRecognizedException` is raised. If the property or its setting is not "
"supported by the parser, *SAXNotSupportedException* is raised."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:195
msgid "IncrementalParser Objects"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:197
msgid ""
"Instances of :class:`IncrementalParser` offer the following additional "
"methods:"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:202
msgid "Process a chunk of *data*."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:207
msgid ""
"Assume the end of the document. That will check well-formedness conditions "
"that can be checked only at the end, invoke handlers, and may clean up "
"resources allocated during parsing."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:214
msgid ""
"This method is called after close has been called to reset the parser so "
"that it is ready to parse new documents. The results of calling parse or "
"feed after close without calling reset are undefined."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:222
msgid "Locator Objects"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:224
msgid "Instances of :class:`Locator` provide these methods:"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:229
msgid "Return the column number where the current event ends."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:234
msgid "Return the line number where the current event ends."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:239
msgid "Return the public identifier for the current event."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:244
msgid "Return the system identifier for the current event."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:250
msgid "InputSource Objects"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:255
msgid "Sets the public identifier of this :class:`InputSource`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:260
msgid "Returns the public identifier of this :class:`InputSource`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:265
msgid "Sets the system identifier of this :class:`InputSource`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:270
msgid "Returns the system identifier of this :class:`InputSource`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:275
msgid "Sets the character encoding of this :class:`InputSource`."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:277
msgid ""
"The encoding must be a string acceptable for an XML encoding declaration "
"(see section 4.3.3 of the XML recommendation)."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:280
msgid ""
"The encoding attribute of the :class:`InputSource` is ignored if the :class:"
"`InputSource` also contains a character stream."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:286
msgid "Get the character encoding of this InputSource."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:291
msgid ""
"Set the byte stream (a Python file-like object which does not perform byte-"
"to-character conversion) for this input source."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:294
msgid ""
"The SAX parser will ignore this if there is also a character stream "
"specified, but it will use a byte stream in preference to opening a URI "
"connection itself."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:297
msgid ""
"If the application knows the character encoding of the byte stream, it "
"should set it with the setEncoding method."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:303
msgid "Get the byte stream for this input source."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:305
msgid ""
"The getEncoding method will return the character encoding for this byte "
"stream, or None if unknown."
msgstr ""

# 688cd056e6904b72881639ae175e110c
#: ../Doc/library/xml.sax.reader.rst:311
msgid ""
"Set the character stream for this input source. (The stream must be a Python "
"1.6 Unicode-wrapped file-like that performs conversion to Unicode strings.)"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:314
msgid ""
"If there is a character stream specified, the SAX parser will ignore any "
"byte stream and will not attempt to open a URI connection to the system "
"identifier."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:320
msgid "Get the character stream for this input source."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:326
msgid "The :class:`Attributes` Interface"
msgstr ""

# ee8fce83df054ecdbcc51d455dad7de4
#: ../Doc/library/xml.sax.reader.rst:328
msgid ""
":class:`Attributes` objects implement a portion of the mapping protocol, "
"including the methods :meth:`copy`, :meth:`get`, :meth:`has_key`, :meth:"
"`items`, :meth:`keys`, and :meth:`values`.  The following methods are also "
"provided:"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:335
msgid "Return the number of attributes."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:340
msgid "Return the names of the attributes."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:345
msgid ""
"Returns the type of the attribute *name*, which is normally ``'CDATA'``."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:350
msgid "Return the value of attribute *name*."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:359
msgid "The :class:`AttributesNS` Interface"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:361
msgid ""
"This interface is a subtype of the :class:`Attributes` interface (see "
"section :ref:`attributes-objects`).  All methods supported by that interface "
"are also available on :class:`AttributesNS` objects."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:365
msgid "The following methods are also available:"
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:370
msgid "Return the value for a qualified name."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:375
msgid "Return the ``(namespace, localname)`` pair for a qualified *name*."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:380
msgid "Return the qualified name for a ``(namespace, localname)`` pair."
msgstr ""

#: ../Doc/library/xml.sax.reader.rst:385
msgid "Return the qualified names of all attributes."
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:3
msgid ":mod:`xml.sax.saxutils` --- SAX Utilities"
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:13
msgid ""
"The module :mod:`xml.sax.saxutils` contains a number of classes and "
"functions that are commonly useful when creating SAX applications, either in "
"direct use, or as base classes."
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:20
msgid "Escape ``'&'``, ``'<'``, and ``'>'`` in a string of data."
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:22
msgid ""
"You can escape other strings of data by passing a dictionary as the optional "
"*entities* parameter.  The keys and values must all be strings; each key "
"will be replaced with its corresponding value.  The characters ``'&'``, "
"``'<'`` and ``'>'`` are always escaped, even if *entities* is provided."
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:30
msgid "Unescape ``'&amp;'``, ``'&lt;'``, and ``'&gt;'`` in a string of data."
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:32
msgid ""
"You can unescape other strings of data by passing a dictionary as the "
"optional *entities* parameter.  The keys and values must all be strings; "
"each key will be replaced with its corresponding value.  ``'&amp'``, "
"``'&lt;'``, and ``'&gt;'`` are always unescaped, even if *entities* is "
"provided."
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:42
msgid ""
"Similar to :func:`escape`, but also prepares *data* to be used as an "
"attribute value.  The return value is a quoted version of *data* with any "
"additional required replacements. :func:`quoteattr` will select a quote "
"character based on the content of *data*, attempting to avoid encoding any "
"quote characters in the string.  If both single- and double-quote characters "
"are already in *data*, the double-quote characters will be encoded and "
"*data* will be wrapped in double-quotes.  The resulting string can be used "
"directly as an attribute value::"
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:54
msgid ""
"This function is useful when generating attribute values for HTML or any "
"SGML using the reference concrete syntax."
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:62
msgid ""
"This class implements the :class:`ContentHandler` interface by writing SAX "
"events back into an XML document. In other words, using an :class:"
"`XMLGenerator` as the content handler will reproduce the original document "
"being parsed. *out* should be a file-like object which will default to *sys."
"stdout*. *encoding* is the encoding of the output stream which defaults to "
"``'iso-8859-1'``."
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:71
msgid ""
"This class is designed to sit between an :class:`XMLReader` and the client "
"application's event handlers.  By default, it does nothing but pass requests "
"up to the reader and events on to the handlers unmodified, but subclasses "
"can override specific methods to modify the event stream or the "
"configuration requests as they pass through."
msgstr ""

#: ../Doc/library/xml.sax.utils.rst:80
msgid ""
"This function takes an input source and an optional base URL and returns a "
"fully resolved :class:`InputSource` object ready for reading.  The input "
"source can be given as a string, a file-like object, or an :class:"
"`InputSource` object; parsers will use this function to implement the "
"polymorphic *source* argument to their :meth:`parse` method."
msgstr ""

# ced49f79f14d45d9bcd4605e69e0ed1b
#: ../Doc/library/xmlrpclib.rst:2
msgid ":mod:`xmlrpclib` --- XML-RPC client access"
msgstr ""

# 3a8077c78448493eb088e093214efd4a
#: ../Doc/library/xmlrpclib.rst:10
msgid ""
"The :mod:`xmlrpclib` module has been renamed to :mod:`xmlrpc.client` in "
"Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ""

# 5dbe43283bd540ba972a9bae27a797f7
#: ../Doc/library/xmlrpclib.rst:20
msgid "**Source code:** :source:`Lib/xmlrpclib.py`"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:24
msgid ""
"XML-RPC is a Remote Procedure Call method that uses XML passed via HTTP as a "
"transport.  With it, a client can call methods with parameters on a remote "
"server (the server is named by a URI) and get back structured data.  This "
"module supports writing XML-RPC client code; it handles all the details of "
"translating between conformable Python objects and XML on the wire."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:33
msgid ""
"A :class:`ServerProxy` instance is an object that manages communication with "
"a remote XML-RPC server.  The required first argument is a URI (Uniform "
"Resource Indicator), and will normally be the URL of the server.  The "
"optional second argument is a transport factory instance; by default it is "
"an internal :class:`SafeTransport` instance for https: URLs and an internal "
"HTTP :class:`Transport` instance otherwise.  The optional third argument is "
"an encoding, by default UTF-8. The optional fourth argument is a debugging "
"flag. If *allow_none* is true,  the Python constant ``None`` will be "
"translated into XML; the default behaviour is for ``None`` to raise a :exc:"
"`TypeError`. This is a commonly-used extension to the XML-RPC specification, "
"but isn't supported by all clients and servers; see http://ontosys.com/xml-"
"rpc/extensions.php for a description.  The *use_datetime* flag can be used "
"to cause date/time values to be presented as :class:`datetime.datetime` "
"objects; this is false by default. :class:`datetime.datetime` objects may be "
"passed to calls."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:48
msgid ""
"Both the HTTP and HTTPS transports support the URL syntax extension for HTTP "
"Basic Authentication: ``http://user:pass@host:port/path``.  The  ``user:"
"pass`` portion will be base64-encoded as an HTTP 'Authorization' header, and "
"sent to the remote server as part of the connection process when invoking an "
"XML-RPC method.  You only need to use this if the remote server requires a "
"Basic Authentication user and password."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:55
msgid ""
"The returned instance is a proxy object with methods that can be used to "
"invoke corresponding RPC calls on the remote server.  If the remote server "
"supports the introspection API, the proxy can also be used to query the "
"remote server for the methods it supports (service discovery) and fetch "
"other server-associated metadata."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:61
msgid ""
":class:`ServerProxy` instance methods take Python basic types and objects as "
"arguments and return Python basic types and classes.  Types that are "
"conformable (e.g. that can be marshalled through XML), include the following "
"(and except where noted, they are unmarshalled as the same Python type):"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:69
msgid ":const:`boolean`"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:69
msgid "The :const:`True` and :const:`False` constants"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:72
msgid ":const:`integers`"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:72 ../Doc/library/xmlrpclib.rst:74
#: ../Doc/library/xmlrpclib.rst:76
msgid "Pass in directly"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:74
msgid ":const:`floating-point numbers`"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:76
msgid ":const:`strings`"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:78
msgid ":const:`arrays`"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:78
msgid ""
"Any Python sequence type containing conformable elements. Arrays are "
"returned as lists"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:82
msgid ":const:`structures`"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:82
msgid ""
"A Python dictionary. Keys must be strings, values may be any conformable "
"type. Objects of user-defined classes can be passed in; only their "
"*__dict__* attribute is transmitted."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:88
msgid ":const:`dates`"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:88
msgid ""
"in seconds since the epoch (pass in an instance of the :class:`DateTime` "
"class) or a :class:`datetime.datetime` instance."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:92
msgid ":const:`binary data`"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:92
msgid "pass in an instance of the :class:`Binary` wrapper class"
msgstr ""

# 17c4d80dd6624e0b9572ee675220e777
#: ../Doc/library/xmlrpclib.rst:96
msgid ""
"This is the full set of data types supported by XML-RPC.  Method calls may "
"also raise a special :exc:`Fault` instance, used to signal XML-RPC server "
"errors, or :exc:`ProtocolError` used to signal an error in the HTTP/HTTPS "
"transport layer. Both :exc:`Fault` and :exc:`ProtocolError` derive from a "
"base class called :exc:`Error`.  Note that even though starting with Python "
"2.2 you can subclass built-in types, the xmlrpclib module currently does not "
"marshal instances of such subclasses."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:104
msgid ""
"When passing strings, characters special to XML such as ``<``, ``>``, and "
"``&`` will be automatically escaped.  However, it's the caller's "
"responsibility to ensure that the string is free of characters that aren't "
"allowed in XML, such as the control characters with ASCII values between 0 "
"and 31 (except, of course, tab, newline and carriage return); failing to do "
"this will result in an XML-RPC request that isn't well-formed XML.  If you "
"have to pass arbitrary strings via XML-RPC, use the :class:`Binary` wrapper "
"class described below."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:112
msgid ""
":class:`Server` is retained as an alias for :class:`ServerProxy` for "
"backwards compatibility.  New code should use :class:`ServerProxy`."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:127
msgid ""
"A good description of XML-RPC operation and client software in several "
"languages. Contains pretty much everything an XML-RPC client developer needs "
"to know."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:131
msgid "Describes the XML-RPC protocol extension for introspection."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:134
msgid "The official specification."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:137
msgid ""
"Fredrik Lundh's \"unofficial errata, intended to clarify certain details in "
"the XML-RPC specification, as well as hint at 'best practices' to use when "
"designing your own XML-RPC implementations.\""
msgstr ""

#: ../Doc/library/xmlrpclib.rst:145
msgid "ServerProxy Objects"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:147
msgid ""
"A :class:`ServerProxy` instance has a method corresponding to each remote "
"procedure call accepted by the XML-RPC server.  Calling the method performs "
"an RPC, dispatched by both name and argument signature (e.g. the same method "
"name can be overloaded with multiple argument signatures).  The RPC finishes "
"by returning a value, which may be either returned data in a conformant type "
"or a :class:`Fault` or :class:`ProtocolError` object indicating an error."
msgstr ""

# 4f9f78a04db24be5a4c4b21507c50628
#: ../Doc/library/xmlrpclib.rst:154
msgid ""
"Servers that support the XML introspection API support some common methods "
"grouped under the reserved :attr:`system` attribute:"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:160
msgid ""
"This method returns a list of strings, one for each (non-system) method "
"supported by the XML-RPC server."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:166
msgid ""
"This method takes one parameter, the name of a method implemented by the XML-"
"RPC server. It returns an array of possible signatures for this method. A "
"signature is an array of types. The first of these types is the return type "
"of the method, the rest are parameters."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:171
msgid ""
"Because multiple signatures (ie. overloading) is permitted, this method "
"returns a list of signatures rather than a singleton."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:174
msgid ""
"Signatures themselves are restricted to the top level parameters expected by "
"a method. For instance if a method expects one array of structs as a "
"parameter, and it returns a string, its signature is simply \"string, array"
"\". If it expects three integers and returns a string, its signature is "
"\"string, int, int, int\"."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:179
msgid ""
"If no signature is defined for the method, a non-array value is returned. In "
"Python this means that the type of the returned  value will be something "
"other than list."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:186
msgid ""
"This method takes one parameter, the name of a method implemented by the XML-"
"RPC server.  It returns a documentation string describing the use of that "
"method. If no such string is available, an empty string is returned. The "
"documentation string may contain HTML markup."
msgstr ""

# 782a76c7cfd54cd38e062649a15515de
#: ../Doc/library/xmlrpclib.rst:195
msgid "Boolean Objects"
msgstr ""

# dc539c8effa64c4495d7bdd3e9009ee7
#: ../Doc/library/xmlrpclib.rst:197
msgid ""
"This class may be initialized from any Python value; the instance returned "
"depends only on its truth value.  It supports various Python operators "
"through :meth:`__cmp__`, :meth:`__repr__`, :meth:`__int__`, and :meth:"
"`__nonzero__` methods, all implemented in the obvious ways."
msgstr ""

# ee7680ff3cc8435a94371fe44c5f69e9
#: ../Doc/library/xmlrpclib.rst:202
msgid ""
"It also has the following method, supported mainly for internal use by the "
"unmarshalling code:"
msgstr ""

# 433100ada5764fe08e7e25bc3460169d
#: ../Doc/library/xmlrpclib.rst:208
msgid ""
"Write the XML-RPC encoding of this Boolean item to the out stream object."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:210 ../Doc/library/xmlrpclib.rst:255
msgid "A working example follows. The server code::"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:223 ../Doc/library/xmlrpclib.rst:270
#: ../Doc/library/xmlrpclib.rst:376 ../Doc/library/xmlrpclib.rst:482
msgid "The client code for the preceding server::"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:234
msgid "DateTime Objects"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:236
msgid ""
"This class may be initialized with seconds since the epoch, a time tuple, an "
"ISO 8601 time/date string, or a :class:`datetime.datetime` instance.  It has "
"the following methods, supported mainly for internal use by the marshalling/"
"unmarshalling code:"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:244
msgid "Accept a string as the instance's new time value."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:249
msgid ""
"Write the XML-RPC encoding of this :class:`DateTime` item to the *out* "
"stream object."
msgstr ""

# ba30214015154c04820dda00ed39eebe
#: ../Doc/library/xmlrpclib.rst:252
msgid ""
"It also supports certain of Python's built-in operators through  :meth:"
"`__cmp__` and :meth:`__repr__` methods."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:285
msgid "Binary Objects"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:287
msgid ""
"This class may be initialized from string data (which may include NULs). The "
"primary access to the content of a :class:`Binary` object is provided by an "
"attribute:"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:294
msgid ""
"The binary data encapsulated by the :class:`Binary` instance.  The data is "
"provided as an 8-bit string."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:297
msgid ""
":class:`Binary` objects have the following methods, supported mainly for "
"internal use by the marshalling/unmarshalling code:"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:303
msgid "Accept a base64 string and decode it as the instance's new data."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:308
msgid ""
"Write the XML-RPC base 64 encoding of this binary item to the out stream "
"object."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:310
msgid ""
"The encoded data will have newlines every 76 characters as per `RFC 2045 "
"section 6.8 <http://tools.ietf.org/html/rfc2045#section-6.8>`_, which was "
"the de facto standard base64 specification when the XML-RPC spec was written."
msgstr ""

# b39f99dd91704e3ea0ed83062adb1f42
#: ../Doc/library/xmlrpclib.rst:315
msgid ""
"It also supports certain of Python's built-in operators through a :meth:"
"`__cmp__` method."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:318
msgid ""
"Example usage of the binary objects.  We're going to transfer an image over "
"XMLRPC::"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:334
msgid "The client gets the image and saves it to a file::"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:345
msgid "Fault Objects"
msgstr ""

# 37fde0ad959d4d96a01e1b256de91fa1
#: ../Doc/library/xmlrpclib.rst:347
msgid ""
"A :class:`Fault` object encapsulates the content of an XML-RPC fault tag. "
"Fault objects have the following attributes:"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:353
msgid "A string indicating the fault type."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:358
msgid "A string containing a diagnostic message associated with the fault."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:360
msgid ""
"In the following example we're going to intentionally cause a :exc:`Fault` "
"by returning a complex type object.  The server code::"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:393
msgid "ProtocolError Objects"
msgstr ""

# 0b2aa14b51d04e2e9ad12e7b2a895156
#: ../Doc/library/xmlrpclib.rst:395
msgid ""
"A :class:`ProtocolError` object describes a protocol error in the underlying "
"transport layer (such as a 404 'not found' error if the server named by the "
"URI does not exist).  It has the following attributes:"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:402
msgid "The URI or URL that triggered the error."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:407
msgid "The error code."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:412
msgid "The error message or diagnostic string."
msgstr ""

# 4792f53c406a4397b2fa85848aac3add
#: ../Doc/library/xmlrpclib.rst:417
msgid ""
"A string containing the headers of the HTTP/HTTPS request that triggered the "
"error."
msgstr ""

# b9d700f1f50c4e818229327db183f9c0
#: ../Doc/library/xmlrpclib.rst:420
msgid ""
"In the following example we're going to intentionally cause a :exc:"
"`ProtocolError` by providing an URI that doesn't point to an XMLRPC server::"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:438
msgid "MultiCall Objects"
msgstr ""

# fa2e004f0dab401a91a608fe1543db1b
#: ../Doc/library/xmlrpclib.rst:442
msgid ""
"The :class:`MultiCall` object provides a way to encapsulate multiple calls "
"to a remote server into a single request [#]_."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:448
msgid ""
"Create an object used to boxcar method calls. *server* is the eventual "
"target of the call. Calls can be made to the result object, but they will "
"immediately return ``None``, and only store the call name and parameters in "
"the :class:`MultiCall` object. Calling the object itself causes all stored "
"calls to be transmitted as a single ``system.multicall`` request. The result "
"of this call is a :term:`generator`; iterating over this generator yields "
"the individual results."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:456
msgid "A usage example of this class follows.  The server code ::"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:498
msgid "Convenience Functions"
msgstr ""

# 4db5020f8e404517805c632f7c34bb1e
#: ../Doc/library/xmlrpclib.rst:503
msgid ""
"Convert any Python value to one of the XML-RPC Boolean constants, ``True`` "
"or ``False``."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:509
msgid ""
"Convert *params* into an XML-RPC request. or into a response if "
"*methodresponse* is true. *params* can be either a tuple of arguments or an "
"instance of the :exc:`Fault` exception class.  If *methodresponse* is true, "
"only a single value can be returned, meaning that *params* must be of length "
"1. *encoding*, if supplied, is the encoding to use in the generated XML; the "
"default is UTF-8. Python's :const:`None` value cannot be used in standard "
"XML-RPC; to allow using it via an extension,  provide a true value for "
"*allow_none*."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:520
msgid ""
"Convert an XML-RPC request or response into Python objects, a ``(params, "
"methodname)``.  *params* is a tuple of argument; *methodname* is a string, "
"or ``None`` if no method name is present in the packet. If the XML-RPC "
"packet represents a fault condition, this function will raise a :exc:`Fault` "
"exception. The *use_datetime* flag can be used to cause date/time values to "
"be presented as :class:`datetime.datetime` objects; this is false by default."
msgstr ""

#: ../Doc/library/xmlrpclib.rst:534
msgid "Example of Client Usage"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:551
msgid ""
"To access an XML-RPC server through a proxy, you need to define  a custom "
"transport.  The following example shows how:"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:579
msgid "Example of Client and Server Usage"
msgstr ""

#: ../Doc/library/xmlrpclib.rst:581
msgid "See :ref:`simplexmlrpcserver-example`."
msgstr ""

# 5c3f90c53e08411ea48d00fe2de644ba
#: ../Doc/library/xmlrpclib.rst:586
msgid ""
"This approach has been first presented in `a discussion on xmlrpc.com "
"<http://web.archive.org/web/20060624230303/http://www.xmlrpc.com/discuss/"
"msgReader$1208?mode=topic>`_."
msgstr ""

#: ../Doc/library/zipfile.rst:2
msgid ":mod:`zipfile` --- Work with ZIP archives"
msgstr ""

# fa2d6d582f564ce9b7c669f774c83aa2
#: ../Doc/library/zipfile.rst:11
msgid "**Source code:** :source:`Lib/zipfile.py`"
msgstr ""

#: ../Doc/library/zipfile.rst:15
msgid ""
"The ZIP file format is a common archive and compression standard. This "
"module provides tools to create, read, write, append, and list a ZIP file.  "
"Any advanced use of this module will require an understanding of the format, "
"as defined in `PKZIP Application Note <http://www.pkware.com/documents/"
"casestudies/APPNOTE.TXT>`_."
msgstr ""

# 05ed2a924fbc421aa70a55035b04cf3f
#: ../Doc/library/zipfile.rst:21
msgid ""
"This module does not currently handle multi-disk ZIP files. It can handle "
"ZIP files that use the ZIP64 extensions (that is ZIP files that are more "
"than 4 GByte in size).  It supports decryption of encrypted files in ZIP "
"archives, but it currently cannot create an encrypted file.  Decryption is "
"extremely slow as it is implemented in native Python rather than C."
msgstr ""

#: ../Doc/library/zipfile.rst:32
msgid "The error raised for bad ZIP files (old name: ``zipfile.error``)."
msgstr ""

#: ../Doc/library/zipfile.rst:37
msgid ""
"The error raised when a ZIP file would require ZIP64 functionality but that "
"has not been enabled."
msgstr ""

#: ../Doc/library/zipfile.rst:44
msgid ""
"The class for reading and writing ZIP files.  See section :ref:`zipfile-"
"objects` for constructor details."
msgstr ""

#: ../Doc/library/zipfile.rst:50
msgid "Class for creating ZIP archives containing Python libraries."
msgstr ""

#: ../Doc/library/zipfile.rst:55
msgid ""
"Class used to represent information about a member of an archive. Instances "
"of this class are returned by the :meth:`getinfo` and :meth:`infolist` "
"methods of :class:`ZipFile` objects.  Most users of the :mod:`zipfile` "
"module will not need to create these, but only use those created by this "
"module. *filename* should be the full name of the archive member, and "
"*date_time* should be a tuple containing six fields which describe the time "
"of the last modification to the file; the fields are described in section :"
"ref:`zipinfo-objects`."
msgstr ""

# 12ffe3e6042347cf84dd56804f0dd754
#: ../Doc/library/zipfile.rst:67
msgid ""
"Returns ``True`` if *filename* is a valid ZIP file based on its magic "
"number, otherwise returns ``False``.  *filename* may be a file or file-like "
"object too."
msgstr ""

#: ../Doc/library/zipfile.rst:75
msgid "The numeric constant for an uncompressed archive member."
msgstr ""

#: ../Doc/library/zipfile.rst:80
msgid ""
"The numeric constant for the usual ZIP compression method.  This requires "
"the zlib module.  No other compression methods are currently supported."
msgstr ""

#: ../Doc/library/zipfile.rst:87 ../Doc/library/zipimport.rst:41
msgid ""
"Documentation on the ZIP file format by Phil Katz, the creator of the format "
"and algorithms used."
msgstr ""

#: ../Doc/library/zipfile.rst:91
msgid ""
"Information about the Info-ZIP project's ZIP archive programs and "
"development libraries."
msgstr ""

#: ../Doc/library/zipfile.rst:98
msgid "ZipFile Objects"
msgstr ""

# 070c109711f74680a9a907848d12b462
#: ../Doc/library/zipfile.rst:103
msgid ""
"Open a ZIP file, where *file* can be either a path to a file (a string) or a "
"file-like object.  The *mode* parameter should be ``'r'`` to read an "
"existing file, ``'w'`` to truncate and write a new file, or ``'a'`` to "
"append to an existing file.  If *mode* is ``'a'`` and *file* refers to an "
"existing ZIP file, then additional files are added to it.  If *file* does "
"not refer to a ZIP file, then a new ZIP archive is appended to the file.  "
"This is meant for adding a ZIP archive to another file (such as :file:"
"`python.exe`)."
msgstr ""

# 505ad3e0837844549b5ffa467b34e20a
#: ../Doc/library/zipfile.rst:114
msgid ""
"*compression* is the ZIP compression method to use when writing the archive, "
"and should be :const:`ZIP_STORED` or :const:`ZIP_DEFLATED`; unrecognized "
"values will cause :exc:`RuntimeError` to be raised.  If :const:"
"`ZIP_DEFLATED` is specified but the :mod:`zlib` module is not available, :"
"exc:`RuntimeError` is also raised. The default is :const:`ZIP_STORED`.  If "
"*allowZip64* is ``True`` zipfile will create ZIP files that use the ZIP64 "
"extensions when the zipfile is larger than 2 GB. If it is  false (the "
"default) :mod:`zipfile` will raise an exception when the ZIP file would "
"require ZIP64 extensions. ZIP64 extensions are disabled by default because "
"the default :program:`zip` and :program:`unzip` commands on Unix (the "
"InfoZIP utilities) don't support these extensions."
msgstr ""

#: ../Doc/library/zipfile.rst:131
msgid ""
"ZipFile is also a context manager and therefore supports the :keyword:`with` "
"statement.  In the example, *myzip* is closed after the :keyword:`with` "
"statement's suite is finished---even if an exception occurs::"
msgstr ""

#: ../Doc/library/zipfile.rst:144
msgid ""
"Close the archive file.  You must call :meth:`close` before exiting your "
"program or essential records will not be written."
msgstr ""

#: ../Doc/library/zipfile.rst:150
msgid ""
"Return a :class:`ZipInfo` object with information about the archive member "
"*name*.  Calling :meth:`getinfo` for a name not currently contained in the "
"archive will raise a :exc:`KeyError`."
msgstr ""

#: ../Doc/library/zipfile.rst:157
msgid ""
"Return a list containing a :class:`ZipInfo` object for each member of the "
"archive.  The objects are in the same order as their entries in the actual "
"ZIP file on disk if an existing archive was opened."
msgstr ""

#: ../Doc/library/zipfile.rst:164
msgid "Return a list of archive members by name."
msgstr ""

# 3351059899ce4adfb3c29e20cb5d1f5c
#: ../Doc/library/zipfile.rst:172
msgid ""
"Extract a member from the archive as a file-like object (ZipExtFile). *name* "
"is the name of the file in the archive, or a :class:`ZipInfo` object. The "
"*mode* parameter, if included, must be one of the following: ``'r'`` (the "
"default), ``'U'``, or ``'rU'``. Choosing ``'U'`` or  ``'rU'`` will enable :"
"term:`universal newline <universal newlines>` support in the read-only "
"object. *pwd* is the password used for encrypted files. Calling  :meth:"
"`open` on a closed ZipFile will raise a  :exc:`RuntimeError`."
msgstr ""

# 6824549ae0634626ad534630d5fe22f3
#: ../Doc/library/zipfile.rst:182
msgid ""
"The file-like object is read-only and provides the following methods: :meth:"
"`!read`, :meth:`!readline`, :meth:`!readlines`, :meth:`!__iter__`, :meth:`!"
"next`."
msgstr ""

#: ../Doc/library/zipfile.rst:188
msgid ""
"If the ZipFile was created by passing in a file-like object as the  first "
"argument to the constructor, then the object returned by :meth:`.open` "
"shares the ZipFile's file pointer.  Under these  circumstances, the object "
"returned by :meth:`.open` should not  be used after any additional "
"operations are performed on the  ZipFile object.  If the ZipFile was created "
"by passing in a string (the filename) as the first argument to the "
"constructor, then  :meth:`.open` will create a new file object that will be "
"held by the ZipExtFile, allowing it to operate independently of the  ZipFile."
msgstr ""

#: ../Doc/library/zipfile.rst:199
msgid ""
"The :meth:`open`, :meth:`read` and :meth:`extract` methods can take a "
"filename or a :class:`ZipInfo` object.  You will appreciate this when trying "
"to read a ZIP file that contains members with duplicate names."
msgstr ""

#: ../Doc/library/zipfile.rst:208
msgid ""
"Extract a member from the archive to the current working directory; *member* "
"must be its full name or a :class:`ZipInfo` object).  Its file information "
"is extracted as accurately as possible.  *path* specifies a different "
"directory to extract to.  *member* can be a filename or a :class:`ZipInfo` "
"object. *pwd* is the password used for encrypted files."
msgstr ""

#: ../Doc/library/zipfile.rst:219
msgid ""
"Extract all members from the archive to the current working directory.  "
"*path* specifies a different directory to extract to.  *members* is optional "
"and must be a subset of the list returned by :meth:`namelist`.  *pwd* is the "
"password used for encrypted files."
msgstr ""

#: ../Doc/library/zipfile.rst:236
msgid "Print a table of contents for the archive to ``sys.stdout``."
msgstr ""

#: ../Doc/library/zipfile.rst:241
msgid "Set *pwd* as default password to extract encrypted files."
msgstr ""

#: ../Doc/library/zipfile.rst:248
msgid ""
"Return the bytes of the file *name* in the archive.  *name* is the name of "
"the file in the archive, or a :class:`ZipInfo` object.  The archive must be "
"open for read or append. *pwd* is the password used for encrypted  files "
"and, if specified, it will override the default password set with :meth:"
"`setpassword`.  Calling :meth:`read` on a closed ZipFile  will raise a :exc:"
"`RuntimeError`."
msgstr ""

#: ../Doc/library/zipfile.rst:260
msgid ""
"Read all the files in the archive and check their CRC's and file headers. "
"Return the name of the first bad file, or else return ``None``. Calling :"
"meth:`testzip` on a closed ZipFile will raise a :exc:`RuntimeError`."
msgstr ""

#: ../Doc/library/zipfile.rst:267
msgid ""
"Write the file named *filename* to the archive, giving it the archive name "
"*arcname* (by default, this will be the same as *filename*, but without a "
"drive letter and with leading path separators removed).  If given, "
"*compress_type* overrides the value given for the *compression* parameter to "
"the constructor for the new entry.  The archive must be open with mode "
"``'w'`` or ``'a'`` -- calling :meth:`write` on a ZipFile created with mode "
"``'r'`` will raise a :exc:`RuntimeError`.  Calling  :meth:`write` on a "
"closed ZipFile will raise a :exc:`RuntimeError`."
msgstr ""

#: ../Doc/library/zipfile.rst:278
msgid ""
"There is no official file name encoding for ZIP files. If you have unicode "
"file names, you must convert them to byte strings in your desired encoding "
"before passing them to :meth:`write`. WinZip interprets all file names as "
"encoded in CP437, also known as DOS Latin."
msgstr ""

#: ../Doc/library/zipfile.rst:285
msgid ""
"Archive names should be relative to the archive root, that is, they should "
"not start with a path separator."
msgstr ""

#: ../Doc/library/zipfile.rst:290
msgid ""
"If ``arcname`` (or ``filename``, if ``arcname`` is  not given) contains a "
"null byte, the name of the file in the archive will be truncated at the null "
"byte."
msgstr ""

#: ../Doc/library/zipfile.rst:296
msgid ""
"Write the string *bytes* to the archive; *zinfo_or_arcname* is either the "
"file name it will be given in the archive, or a :class:`ZipInfo` instance.  "
"If it's an instance, at least the filename, date, and time must be given.  "
"If it's a name, the date and time is set to the current date and time. The "
"archive must be opened with mode ``'w'`` or ``'a'`` -- calling  :meth:"
"`writestr` on a ZipFile created with mode ``'r'``  will raise a :exc:"
"`RuntimeError`.  Calling :meth:`writestr` on a closed ZipFile will raise a :"
"exc:`RuntimeError`."
msgstr ""

#: ../Doc/library/zipfile.rst:304
msgid ""
"If given, *compress_type* overrides the value given for the *compression* "
"parameter to the constructor for the new entry, or in the *zinfo_or_arcname* "
"(if that is a :class:`ZipInfo` instance)."
msgstr ""

# db6500f5db2d49c5b96ab77ac696ce89
#: ../Doc/library/zipfile.rst:310
msgid ""
"When passing a :class:`ZipInfo` instance as the *zinfo_or_arcname* "
"parameter, the compression method used will be that specified in the "
"*compress_type* member of the given :class:`ZipInfo` instance.  By default, "
"the :class:`ZipInfo` constructor sets this member to :const:`ZIP_STORED`."
msgstr ""

#: ../Doc/library/zipfile.rst:318
msgid "The following data attributes are also available:"
msgstr ""

#: ../Doc/library/zipfile.rst:323
msgid ""
"The level of debug output to use.  This may be set from ``0`` (the default, "
"no output) to ``3`` (the most output).  Debugging information is written to "
"``sys.stdout``."
msgstr ""

#: ../Doc/library/zipfile.rst:329
msgid ""
"The comment text associated with the ZIP file.  If assigning a comment to a :"
"class:`ZipFile` instance created with mode 'a' or 'w', this should be a "
"string no longer than 65535 bytes.  Comments longer than this will be "
"truncated in the written archive when :meth:`ZipFile.close` is called."
msgstr ""

#: ../Doc/library/zipfile.rst:337
msgid "PyZipFile Objects"
msgstr ""

#: ../Doc/library/zipfile.rst:339
msgid ""
"The :class:`PyZipFile` constructor takes the same parameters as the :class:"
"`ZipFile` constructor.  Instances have one method in addition to those of :"
"class:`ZipFile` objects."
msgstr ""

#: ../Doc/library/zipfile.rst:346
msgid ""
"Search for files :file:`\\*.py` and add the corresponding file to the "
"archive. The corresponding file is a :file:`\\*.pyo` file if available, else "
"a :file:`\\*.pyc` file, compiling if necessary.  If the pathname is a file, "
"the filename must end with :file:`.py`, and just the (corresponding :file:`"
"\\*.py[co]`) file is added at the top level (no path information).  If the "
"pathname is a file that does not end with :file:`.py`, a :exc:`RuntimeError` "
"will be raised.  If it is a directory, and the directory is not a package "
"directory, then all the files :file:`\\*.py[co]` are added at the top "
"level.  If the directory is a package directory, then all :file:`\\*.py[co]` "
"are added under the package name as a file path, and if any subdirectories "
"are package directories, all of these are added recursively.  *basename* is "
"intended for internal use only.  The :meth:`writepy` method makes archives "
"with file names like this::"
msgstr ""

#: ../Doc/library/zipfile.rst:370
msgid "ZipInfo Objects"
msgstr ""

#: ../Doc/library/zipfile.rst:372
msgid ""
"Instances of the :class:`ZipInfo` class are returned by the :meth:`getinfo` "
"and :meth:`infolist` methods of :class:`ZipFile` objects.  Each object "
"stores information about a single member of the ZIP archive."
msgstr ""

#: ../Doc/library/zipfile.rst:376
msgid "Instances have the following attributes:"
msgstr ""

#: ../Doc/library/zipfile.rst:381
msgid "Name of the file in the archive."
msgstr ""

#: ../Doc/library/zipfile.rst:386
msgid ""
"The time and date of the last modification to the archive member.  This is a "
"tuple of six values:"
msgstr ""

# 375e5382cc804106b9ba8e1021f8794d
#: ../Doc/library/zipfile.rst:392
msgid "Year (>= 1980)"
msgstr ""

#: ../Doc/library/zipfile.rst:394
msgid "Month (one-based)"
msgstr ""

#: ../Doc/library/zipfile.rst:396
msgid "Day of month (one-based)"
msgstr ""

#: ../Doc/library/zipfile.rst:398
msgid "Hours (zero-based)"
msgstr ""

#: ../Doc/library/zipfile.rst:400
msgid "Minutes (zero-based)"
msgstr ""

#: ../Doc/library/zipfile.rst:402
msgid "Seconds (zero-based)"
msgstr ""

# 4cdec185064d423694139b7ed6c0bcfe
#: ../Doc/library/zipfile.rst:407
msgid "The ZIP file format does not support timestamps before 1980."
msgstr ""

#: ../Doc/library/zipfile.rst:412
msgid "Type of compression for the archive member."
msgstr ""

#: ../Doc/library/zipfile.rst:417
msgid "Comment for the individual archive member."
msgstr ""

#: ../Doc/library/zipfile.rst:422
msgid ""
"Expansion field data.  The `PKZIP Application Note <http://www.pkware.com/"
"documents/casestudies/APPNOTE.TXT>`_ contains some comments on the internal "
"structure of the data contained in this string."
msgstr ""

#: ../Doc/library/zipfile.rst:429
msgid "System which created ZIP archive."
msgstr ""

#: ../Doc/library/zipfile.rst:434
msgid "PKZIP version which created ZIP archive."
msgstr ""

#: ../Doc/library/zipfile.rst:439
msgid "PKZIP version needed to extract archive."
msgstr ""

#: ../Doc/library/zipfile.rst:444
msgid "Must be zero."
msgstr ""

#: ../Doc/library/zipfile.rst:449
msgid "ZIP flag bits."
msgstr ""

#: ../Doc/library/zipfile.rst:454
msgid "Volume number of file header."
msgstr ""

#: ../Doc/library/zipfile.rst:459
msgid "Internal attributes."
msgstr ""

#: ../Doc/library/zipfile.rst:464
msgid "External file attributes."
msgstr ""

#: ../Doc/library/zipfile.rst:469
msgid "Byte offset to the file header."
msgstr ""

#: ../Doc/library/zipfile.rst:474
msgid "CRC-32 of the uncompressed file."
msgstr ""

#: ../Doc/library/zipfile.rst:479
msgid "Size of the compressed data."
msgstr ""

#: ../Doc/library/zipfile.rst:484
msgid "Size of the uncompressed file."
msgstr ""

#: ../Doc/library/zipimport.rst:3
msgid ":mod:`zipimport` --- Import modules from Zip archives"
msgstr ""

# b39761e218934283b35e292fb2bd51c9
#: ../Doc/library/zipimport.rst:12
msgid ""
"This module adds the ability to import Python modules (:file:`\\*.py`, :file:"
"`\\*.py[co]`) and packages from ZIP-format archives. It is usually not "
"needed to use the :mod:`zipimport` module explicitly; it is automatically "
"used by the built-in :keyword:`import` mechanism for :data:`sys.path` items "
"that are paths to ZIP archives."
msgstr ""

# 1d239299a4884d70a8a9de8155f8e233
#: ../Doc/library/zipimport.rst:18
msgid ""
"Typically, :data:`sys.path` is a list of directory names as strings.  This "
"module also allows an item of :data:`sys.path` to be a string naming a ZIP "
"file archive. The ZIP archive can contain a subdirectory structure to "
"support package imports, and a path within the archive can be specified to "
"only import from a subdirectory.  For example, the path :file:`/tmp/example."
"zip/lib/` would only import from the :file:`lib/` subdirectory within the "
"archive."
msgstr ""

#: ../Doc/library/zipimport.rst:25
msgid ""
"Any files may be present in the ZIP archive, but only files :file:`.py` and :"
"file:`.py[co]` are available for import.  ZIP import of dynamic modules (:"
"file:`.pyd`, :file:`.so`) is disallowed. Note that if an archive only "
"contains :file:`.py` files, Python will not attempt to modify the archive by "
"adding the corresponding :file:`.pyc` or :file:`.pyo` file, meaning that if "
"a ZIP archive doesn't contain :file:`.pyc` files, importing may be rather "
"slow."
msgstr ""

# c4305538535d41dfbed777c8533c5296
#: ../Doc/library/zipimport.rst:32
msgid ""
"Using the built-in :func:`reload` function will fail if called on a module "
"loaded from a ZIP archive; it is unlikely that :func:`reload` would be "
"needed, since this would imply that the ZIP has been altered during runtime."
msgstr ""

#: ../Doc/library/zipimport.rst:36
msgid "ZIP archives with an archive comment are currently not supported."
msgstr ""

#: ../Doc/library/zipimport.rst:45
msgid ""
"Written by James C. Ahlstrom, who also provided an implementation. Python "
"2.3 follows the specification in PEP 273, but uses an implementation written "
"by Just van Rossum that uses the import hooks described in PEP 302."
msgstr ""

#: ../Doc/library/zipimport.rst:50
msgid "The PEP to add the import hooks that help this module work."
msgstr ""

#: ../Doc/library/zipimport.rst:53
msgid "This module defines an exception:"
msgstr ""

#: ../Doc/library/zipimport.rst:57
msgid ""
"Exception raised by zipimporter objects. It's a subclass of :exc:"
"`ImportError`, so it can be caught as :exc:`ImportError`, too."
msgstr ""

#: ../Doc/library/zipimport.rst:64
msgid "zipimporter Objects"
msgstr ""

#: ../Doc/library/zipimport.rst:66
msgid ":class:`zipimporter` is the class for importing ZIP files."
msgstr ""

#: ../Doc/library/zipimport.rst:70
msgid ""
"Create a new zipimporter instance. *archivepath* must be a path to a ZIP "
"file, or to a specific path within a ZIP file.  For example, an "
"*archivepath* of :file:`foo/bar.zip/lib` will look for modules in the :file:"
"`lib` directory inside the ZIP file :file:`foo/bar.zip` (provided that it "
"exists)."
msgstr ""

#: ../Doc/library/zipimport.rst:75
msgid ""
":exc:`ZipImportError` is raised if *archivepath* doesn't point to a valid "
"ZIP archive."
msgstr ""

#: ../Doc/library/zipimport.rst:80
msgid ""
"Search for a module specified by *fullname*. *fullname* must be the fully "
"qualified (dotted) module name. It returns the zipimporter instance itself "
"if the module was found, or :const:`None` if it wasn't. The optional *path* "
"argument is ignored---it's there for compatibility with the importer "
"protocol."
msgstr ""

#: ../Doc/library/zipimport.rst:89
msgid ""
"Return the code object for the specified module. Raise :exc:`ZipImportError` "
"if the module couldn't be found."
msgstr ""

#: ../Doc/library/zipimport.rst:95
msgid ""
"Return the data associated with *pathname*. Raise :exc:`IOError` if the file "
"wasn't found."
msgstr ""

#: ../Doc/library/zipimport.rst:101
msgid ""
"Return the value ``__file__`` would be set to if the specified module was "
"imported. Raise :exc:`ZipImportError` if the module couldn't be found."
msgstr ""

#: ../Doc/library/zipimport.rst:110
msgid ""
"Return the source code for the specified module. Raise :exc:`ZipImportError` "
"if the module couldn't be found, return :const:`None` if the archive does "
"contain the module, but has no source for it."
msgstr ""

#: ../Doc/library/zipimport.rst:118
msgid ""
"Return True if the module specified by *fullname* is a package. Raise :exc:"
"`ZipImportError` if the module couldn't be found."
msgstr ""

#: ../Doc/library/zipimport.rst:124
msgid ""
"Load the module specified by *fullname*. *fullname* must be the fully "
"qualified (dotted) module name. It returns the imported module, or raises :"
"exc:`ZipImportError` if it wasn't found."
msgstr ""

#: ../Doc/library/zipimport.rst:131
msgid ""
"The file name of the importer's associated ZIP file, without a possible "
"subpath."
msgstr ""

#: ../Doc/library/zipimport.rst:137
msgid ""
"The subpath within the ZIP file where modules are searched.  This is the "
"empty string for zipimporter objects which point to the root of the ZIP file."
msgstr ""

#: ../Doc/library/zipimport.rst:141
msgid ""
"The :attr:`archive` and :attr:`prefix` attributes, when combined with a "
"slash, equal the original *archivepath* argument given to the :class:"
"`zipimporter` constructor."
msgstr ""

#: ../Doc/library/zipimport.rst:151
msgid ""
"Here is an example that imports a module from a ZIP archive - note that the :"
"mod:`zipimport` module is not explicitly used. ::"
msgstr ""

#: ../Doc/library/zlib.rst:3
msgid ":mod:`zlib` --- Compression compatible with :program:`gzip`"
msgstr ""

#: ../Doc/library/zlib.rst:10
msgid ""
"For applications that require data compression, the functions in this module "
"allow compression and decompression, using the zlib library. The zlib "
"library has its own home page at http://www.zlib.net.   There are known "
"incompatibilities between the Python module and versions of the zlib library "
"earlier than 1.1.3; 1.1.3 has a security vulnerability, so we recommend "
"using 1.1.4 or later."
msgstr ""

#: ../Doc/library/zlib.rst:17
msgid ""
"zlib's functions have many options and often need to be used in a particular "
"order.  This documentation doesn't attempt to cover all of the permutations; "
"consult the zlib manual at http://www.zlib.net/manual.html for authoritative "
"information."
msgstr ""

# 9bf6796e1fa0462b967e6e34b7722609
#: ../Doc/library/zlib.rst:22
msgid "For reading and writing ``.gz`` files see the :mod:`gzip` module."
msgstr ""

#: ../Doc/library/zlib.rst:24
msgid "The available exception and functions in this module are:"
msgstr ""

#: ../Doc/library/zlib.rst:29
msgid "Exception raised on compression and decompression errors."
msgstr ""

#: ../Doc/library/zlib.rst:34
msgid ""
"Computes a Adler-32 checksum of *data*.  (An Adler-32 checksum is almost as "
"reliable as a CRC32 but can be computed much more quickly.)  If *value* is "
"present, it is used as the starting value of the checksum; otherwise, a "
"fixed default value is used.  This allows computing a running checksum over "
"the concatenation of several inputs.  The algorithm is not cryptographically "
"strong, and should not be used for authentication or digital signatures.  "
"Since the algorithm is designed for use as a checksum algorithm, it is not "
"suitable for use as a general hash algorithm."
msgstr ""

# 96bd0871a6a84d2b9f2bd88504e1ff54
# 91dbbf4887fb443897f3bb1b26cdaaff
#: ../Doc/library/zlib.rst:43 ../Doc/library/zlib.rst:93
msgid "This function always returns an integer object."
msgstr ""

#: ../Doc/library/zlib.rst:46
msgid ""
"To generate the same numeric value across all Python versions and platforms "
"use adler32(data) & 0xffffffff.  If you are only using the checksum in "
"packed binary format this is not necessary as the return value is the "
"correct 32bit binary representation regardless of sign."
msgstr ""

#: ../Doc/library/zlib.rst:64
msgid ""
"Compresses the data in *string*, returning a string contained compressed "
"data. *level* is an integer from ``1`` to ``9`` controlling the level of "
"compression; ``1`` is fastest and produces the least compression, ``9`` is "
"slowest and produces the most.  The default value is ``6``.  Raises the :exc:"
"`error` exception if any error occurs."
msgstr ""

#: ../Doc/library/zlib.rst:73
msgid ""
"Returns a compression object, to be used for compressing data streams that "
"won't fit into memory at once.  *level* is an integer from ``1`` to ``9`` "
"controlling the level of compression; ``1`` is fastest and produces the "
"least compression, ``9`` is slowest and produces the most.  The default "
"value is ``6``."
msgstr ""

#: ../Doc/library/zlib.rst:85
msgid ""
"Computes a CRC (Cyclic Redundancy Check)  checksum of *data*. If *value* is "
"present, it is used as the starting value of the checksum; otherwise, a "
"fixed default value is used.  This allows computing a running checksum over "
"the concatenation of several inputs.  The algorithm is not cryptographically "
"strong, and should not be used for authentication or digital signatures.  "
"Since the algorithm is designed for use as a checksum algorithm, it is not "
"suitable for use as a general hash algorithm."
msgstr ""

#: ../Doc/library/zlib.rst:114
msgid ""
"Decompresses the data in *string*, returning a string containing the "
"uncompressed data.  The *wbits* parameter controls the size of the window "
"buffer, and is discussed further below. If *bufsize* is given, it is used as "
"the initial size of the output buffer.  Raises the :exc:`error` exception if "
"any error occurs."
msgstr ""

#: ../Doc/library/zlib.rst:120
msgid ""
"The absolute value of *wbits* is the base two logarithm of the size of the "
"history buffer (the \"window size\") used when compressing data.  Its "
"absolute value should be between 8 and 15 for the most recent versions of "
"the zlib library, larger values resulting in better compression at the "
"expense of greater memory usage.  When decompressing a stream, *wbits* must "
"not be smaller than the size originally used to compress the stream; using a "
"too-small value will result in an exception. The default value is therefore "
"the highest value, 15.  When *wbits* is negative, the standard :program:"
"`gzip` header is suppressed."
msgstr ""

# c8441fa2be7c420a90d1f39011f4e268
#: ../Doc/library/zlib.rst:130
msgid ""
"*bufsize* is the initial size of the buffer used to hold decompressed data.  "
"If more space is required, the buffer size will be increased as needed, so "
"you don't have to get this value exactly right; tuning it will only save a "
"few calls to :c:func:`malloc`.  The default size is 16384."
msgstr ""

#: ../Doc/library/zlib.rst:138
msgid ""
"Returns a decompression object, to be used for decompressing data streams "
"that won't fit into memory at once.  The *wbits* parameter controls the size "
"of the window buffer."
msgstr ""

#: ../Doc/library/zlib.rst:142
msgid "Compression objects support the following methods:"
msgstr ""

#: ../Doc/library/zlib.rst:147
msgid ""
"Compress *string*, returning a string containing compressed data for at "
"least part of the data in *string*.  This data should be concatenated to the "
"output produced by any preceding calls to the :meth:`compress` method.  Some "
"input may be kept in internal buffers for later processing."
msgstr ""

#: ../Doc/library/zlib.rst:155
msgid ""
"All pending input is processed, and a string containing the remaining "
"compressed output is returned.  *mode* can be selected from the constants :"
"const:`Z_SYNC_FLUSH`,  :const:`Z_FULL_FLUSH`,  or  :const:`Z_FINISH`, "
"defaulting to :const:`Z_FINISH`.  :const:`Z_SYNC_FLUSH` and :const:"
"`Z_FULL_FLUSH` allow compressing further strings of data, while :const:"
"`Z_FINISH` finishes the compressed stream and  prevents compressing any more "
"data.  After calling :meth:`flush` with *mode* set to :const:`Z_FINISH`, "
"the :meth:`compress` method cannot be called again; the only realistic "
"action is to delete the object."
msgstr ""

#: ../Doc/library/zlib.rst:168
msgid ""
"Returns a copy of the compression object.  This can be used to efficiently "
"compress a set of data that share a common initial prefix."
msgstr ""

#: ../Doc/library/zlib.rst:173
msgid ""
"Decompression objects support the following methods, and two attributes:"
msgstr ""

#: ../Doc/library/zlib.rst:178
msgid ""
"A string which contains any bytes past the end of the compressed data. That "
"is, this remains ``\"\"`` until the last byte that contains compression data "
"is available.  If the whole string turned out to contain compressed data, "
"this is ``\"\"``, the empty string."
msgstr ""

#: ../Doc/library/zlib.rst:183
msgid ""
"The only way to determine where a string of compressed data ends is by "
"actually decompressing it.  This means that when compressed data is "
"contained part of a larger file, you can only find the end of it by reading "
"data and feeding it followed by some non-empty string into a decompression "
"object's :meth:`decompress` method until the :attr:`unused_data` attribute "
"is no longer the empty string."
msgstr ""

#: ../Doc/library/zlib.rst:193
msgid ""
"A string that contains any data that was not consumed by the last :meth:"
"`decompress` call because it exceeded the limit for the uncompressed data "
"buffer.  This data has not yet been seen by the zlib machinery, so you must "
"feed it (possibly with further data concatenated to it) back to a "
"subsequent :meth:`decompress` method call in order to get correct output."
msgstr ""

#: ../Doc/library/zlib.rst:202
msgid ""
"Decompress *string*, returning a string containing the uncompressed data "
"corresponding to at least part of the data in *string*.  This data should be "
"concatenated to the output produced by any preceding calls to the :meth:"
"`decompress` method.  Some of the input data may be preserved in internal "
"buffers for later processing."
msgstr ""

#: ../Doc/library/zlib.rst:208
msgid ""
"If the optional parameter *max_length* is supplied then the return value "
"will be no longer than *max_length*. This may mean that not all of the "
"compressed input can be processed; and unconsumed data will be stored in the "
"attribute :attr:`unconsumed_tail`. This string must be passed to a "
"subsequent call to :meth:`decompress` if decompression is to continue.  If "
"*max_length* is not supplied then the whole input is decompressed, and :attr:"
"`unconsumed_tail` is an empty string."
msgstr ""

#: ../Doc/library/zlib.rst:219
msgid ""
"All pending input is processed, and a string containing the remaining "
"uncompressed output is returned.  After calling :meth:`flush`, the :meth:"
"`decompress` method cannot be called again; the only realistic action is to "
"delete the object."
msgstr ""

#: ../Doc/library/zlib.rst:224
msgid ""
"The optional parameter *length* sets the initial size of the output buffer."
msgstr ""

#: ../Doc/library/zlib.rst:229
msgid ""
"Returns a copy of the decompression object.  This can be used to save the "
"state of the decompressor midway through the data stream in order to speed "
"up random seeks into the stream at a future point."
msgstr ""

#: ../Doc/library/zlib.rst:239
msgid "Reading and writing :program:`gzip`\\ -format files."
msgstr ""

#: ../Doc/library/zlib.rst:242
msgid "The zlib library home page."
msgstr ""

#: ../Doc/library/zlib.rst:245
msgid ""
"The zlib manual explains  the semantics and usage of the library's many "
"functions."
msgstr ""

#~ msgid ""
#~ "def greet(name):     print \"Hello, {0}!\".format(name) print \"What's "
#~ "your name?\" name = raw_input() greet(name)"
#~ msgstr ""
#~ "def greet(name):     print \"Bonjour, {0}!\".format(name) print \"Quel "
#~ "est ton nom ?\" name = raw_input() greet(name)"

#~ msgid "$ 2to3 example.py"
#~ msgstr "$ 2to3 example.py"

#~ msgid "$ 2to3 -w example.py"
#~ msgstr "$ 2to3 -w example.py"

#~ msgid ""
#~ "def greet(name):     print(\"Hello, {0}!\".format(name)) print(\"What's "
#~ "your name?\") name = input() greet(name)"
#~ msgstr ""
#~ "def greet(name):     print(\"Bonjour, {0}!\".format(name)) print(\"Quel "
#~ "est ton nom ?\") name = input() greet(name)"
