# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2015, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-20 13:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# 8ab963b410814d58a039b203ef941b47
#: install/index.rst:7
msgid "Installing Python Modules"
msgstr "installation des modules python"

# d254d59ad32e4d13bf243c16450f6fc9
#: install/index.rst:9
msgid "Greg Ward"
msgstr "Greg Ward"

# 75505401c21848e8bdd80915b74421a6
#: install/index.rst:25
msgid ""
"This document describes the Python Distribution Utilities (\"Distutils\") "
"from the end-user's point-of-view, describing how to extend the capabilities "
"of a standard Python installation by building and installing third-party "
"Python modules and extensions."
msgstr ""
"Ce document décrit les utilitaires de distribution de Python (\"Distutils\") "
"du point de vue de l'utilisateur final, décrivant comment étendre les "
"capacités d'une installation standard de python en construisant et "
"installant des modules python tiers et des extensions."

# 0a5f0d211f254e5ab9f227cb58d1c269
#: install/index.rst:34
msgid "Introduction"
msgstr "introduction"

# eef0729508954767b9b5cab68959aef2
#: install/index.rst:36
msgid ""
"Although Python's extensive standard library covers many programming needs, "
"there often comes a time when you need to add some new functionality to your "
"Python installation in the form of third-party modules.  This might be "
"necessary to support your own programming, or to support an application that "
"you want to use and that happens to be written in Python."
msgstr ""
"Bien que la vaste bibliothèque standard de Python comble beaucoup de besoins "
"en programmation, il arrive souvent un moment où vous avez besoin d'ajouter "
"de nouvelles fonctionnalités à votre installation de Python, via des modules "
"tiers. Cela peut être nécessaire pour vous aider à écrire vos programmes ou "
"pour prendre en charge une application écrite en Python que vous souhaitez "
"utiliser."

# b7a1082e9f134645b4d80d9585802f0f
#: install/index.rst:42
msgid ""
"In the past, there has been little support for adding third-party modules to "
"an existing Python installation.  With the introduction of the Python "
"Distribution Utilities (Distutils for short) in Python 2.0, this changed."
msgstr ""
"Dans le passé, il y a eu peu de prise d'aide à l'ajout de modules tiers sur "
"une installation existante de Python. Avec l'introduction des utilitaires de "
"distribution de Python (Distutils pour faire plus court) dans Python 2.0, "
"ceci a changé."

# 22246202335d487995601320c3bb0528
#: install/index.rst:46
msgid ""
"This document is aimed primarily at the people who need to install third-"
"party Python modules: end-users and system administrators who just need to "
"get some Python application running, and existing Python programmers who "
"want to add some new goodies to their toolbox.  You don't need to know "
"Python to read this document; there will be some brief forays into using "
"Python's interactive mode to explore your installation, but that's it.  If "
"you're looking for information on how to distribute your own Python modules "
"so that others may use them, see the :ref:`distutils-index` manual."
msgstr ""

# ea5399c88cbd4cf1892e9e06a0f3a41e
#: install/index.rst:59
msgid "Best case: trivial installation"
msgstr "Le meilleur des cas : l'installation simple"

# 479150058d7a4975afd6e1c19147d781
#: install/index.rst:61
msgid ""
"In the best case, someone will have prepared a special version of the module "
"distribution you want to install that is targeted specifically at your "
"platform and is installed just like any other software on your platform.  "
"For example, the module developer might make an executable installer "
"available for Windows users, an RPM package for users of RPM-based Linux "
"systems (Red Hat, SuSE, Mandrake, and many others), a Debian package for "
"users of Debian-based Linux systems, and so forth."
msgstr ""
"Dans le meilleur des cas, quelqu'un aura préparé une version spéciale de la "
"distribution du module que vous souhaitez installer qui est destiné "
"spécifiquement à votre plateforme et elle va s'installer comme n'importe "
"quel autre logiciel sur votre plateforme. Par exemple, le développeur du "
"module pourrait faire un installeur exécutable disponible pour les "
"utilisateurs Windows, un paquetage RPM pour les utilisateurs de systèmes "
"Linux basés sur RPM (Red Hat, SuSE, Mandrake et bien d'autres), un paquet "
"Debian pour les utilisateurs de Linux basé sur le système Debian et ainsi de "
"suite."

# 25d4f15c630a4c86b391eb40d979bbc8
#: install/index.rst:69
msgid ""
"In that case, you would download the installer appropriate to your platform "
"and do the obvious thing with it: run it if it's an executable installer, "
"``rpm --install`` it if it's an RPM, etc.  You don't need to run Python or a "
"setup script, you don't need to compile anything---you might not even need "
"to read any instructions (although it's always a good idea to do so anyway)."
msgstr ""
"Dans ce cas, vous devez télécharger le programme d'installation approprié à "
"votre plateforme et faire d'elle ce qui vous semble évident : l'exécuter "
"s'il s'agit d'un exécutable d'installation,  ``rpm --install`` si c'est un "
"RPM, etc. Vous n'avez même pas besoin d'exécuter Python ou un script "
"d'installation, vous n'avez pas besoin de compiler quoi que ce soit -- vous "
"devriez même pas avoir besoin de lire toutes les instructions (même si c'est "
"toujours une bonne idée de le faire)."

# 6ce58e844bf240b9bd34aaab6d96dc6f
#: install/index.rst:75
msgid ""
"Of course, things will not always be that easy.  You might be interested in "
"a module distribution that doesn't have an easy-to-use installer for your "
"platform.  In that case, you'll have to start with the source distribution "
"released by the module's author/maintainer.  Installing from a source "
"distribution is not too hard, as long as the modules are packaged in the "
"standard way.  The bulk of this document is about building and installing "
"modules from standard source distributions."
msgstr ""
"Bien sûr, les choses ne seront pas toujours aussi simple que cela. Vous "
"pourriez être intéressés par une distribution d'un module qui n'a pas de "
"programme d'installation facile à utiliser pour votre plateforme. Dans ce "
"cas, vous allez devoir repartir des fichiers sources publiés par l'auteur/"
"mainteneur du module. L'installation à partir des sources n'est pas très "
"difficile, du moment que les modules en question sont packagés de façon "
"standard. Le cœur de ce document explique comment configurer et installer "
"des modules à partir des sources."

# 7c263f1faa0e4d379f5a0abea0a89503
#: install/index.rst:87
msgid "The new standard: Distutils"
msgstr "Le nouveau standard: Distutils"

# edbdb7a926864ab485beb08ad7e066fb
#: install/index.rst:89
msgid ""
"If you download a module source distribution, you can tell pretty quickly if "
"it was packaged and distributed in the standard way, i.e. using the "
"Distutils. First, the distribution's name and version number will be "
"featured prominently in the name of the downloaded archive, e.g. :file:"
"`foo-1.0.tar.gz` or :file:`widget-0.9.7.zip`.  Next, the archive will unpack "
"into a similarly-named directory: :file:`foo-1.0` or :file:`widget-0.9.7`.  "
"Additionally, the distribution will contain a setup script :file:`setup.py`, "
"and a file named :file:`README.txt` or possibly just :file:`README`, which "
"should explain that building and installing the module distribution is a "
"simple matter of running one command from a terminal::"
msgstr ""
"Si vous téléchargez une distribution source du module, vous pouvez dire "
"assez rapidement s'il a été packagé et distribué de la façon standard, c'est "
"à dire en utilisant Distutils. Premièrement, le nom et le numéro de version "
"de la distribution seront affichés en bonne place dans le nom de l'archive "
"téléchargée, par exemple :file:`foo-1.0.tar.gz` ou :file:`widget-0.9.7.zip`. "
"Ensuite, l'archive va se décompresser dans un répertoire du même nom : :file:"
"`foo-1.0` ou :file:`widget-0.9.7`. En outre, la distribution va contenir un "
"script d'installation :file:`setup.py` et un fichier nommé :file:`README."
"txt` ou éventuellement juste :file:`README`, qui doit expliquer que la "
"construction et l'installation de la distribution du module se fait "
"simplement en exécutant ceci ::"

# 09efa7617fdb443cb6ef73bfcf2c2232
#: install/index.rst:102
msgid ""
"For Windows, this command should be run from a command prompt window (:"
"menuselection:`Start --> Accessories`)::"
msgstr ""

# 8cb796dfeca7479aa6cf98406696a6c0
#: install/index.rst:107
msgid ""
"If all these things are true, then you already know how to build and install "
"the modules you've just downloaded:  Run the command above. Unless you need "
"to install things in a non-standard way or customize the build process, you "
"don't really need this manual.  Or rather, the above command is everything "
"you need to get out of this manual."
msgstr ""
"Si toutes ces choses sont vérifiées, alors vous savez déjà comment "
"construire et installer le module que vous venez de télécharger : en "
"exécutant la commande ci-dessus. Sauf si vous avez besoin d'installer les "
"choses d'une manière non standard ou de personnaliser le processus de "
"construction, vous n'avez pas vraiment besoin de ce manuel. Ou plutôt, la "
"commande ci-dessus est tout ce dont vous avez besoin de sortir de ce manuel."

# 71bc92a7ea3c4d78b46fdb34d6286bcd
#: install/index.rst:117
msgid "Standard Build and Install"
msgstr "Construction standard et installation"

# 1807f28bd2604d7db03cfe53b91e2339
#: install/index.rst:119
msgid ""
"As described in section :ref:`inst-new-standard`, building and installing a "
"module distribution using the Distutils is usually one simple command to run "
"from a terminal::"
msgstr ""
"Comme décrit dans la section :ref:`inst-new-standard`, la construction et "
"l'installation d'une distribution d'un module en utilisant Distutils est "
"habituellement fait avec la commande ::"

# 93541968e01b4038b30f605d0d5590b1
#: install/index.rst:129
msgid "Platform variations"
msgstr "Différences selon les plateformes"

# f396c7eb191047ea93aed8106487482c
#: install/index.rst:131
msgid ""
"You should always run the setup command from the distribution root "
"directory, i.e. the top-level subdirectory that the module source "
"distribution unpacks into.  For example, if you've just downloaded a module "
"source distribution :file:`foo-1.0.tar.gz` onto a Unix system, the normal "
"thing to do is::"
msgstr ""
"Vous devez toujours exécuter la commande \"setup\" à partir du répertoire "
"racine de la distribution, à savoir le sous-répertoire de niveau supérieur à "
"celui où se sont décompressées les sources de la distribution du module. Par "
"exemple, si vous venez de télécharger les sources d'une distribution du "
"module :file:`foo-1.0.tar.gz` sous un système Unix, la méthode normale "
"consiste à faire ::"

# 2da60e6d5cf04ff59ba2bf9ba2a05dee
#: install/index.rst:140
msgid ""
"On Windows, you'd probably download :file:`foo-1.0.zip`.  If you downloaded "
"the archive file to :file:`C:\\\\Temp`, then it would unpack into :file:`C:\\"
"\\Temp\\\\foo-1.0`; you can use either a archive manipulator with a "
"graphical user interface (such as WinZip) or a command-line tool (such as :"
"program:`unzip` or :program:`pkunzip`) to unpack the archive.  Then, open a "
"command prompt window and run::"
msgstr ""
"Sous Windows, vous avez probablement téléchargé :file:`foo-1.0.zip`. Si vous "
"avez téléchargé le fichier d'archive dans :file:`C:\\Temp`, il se "
"décompressera alors dans :file:`C:\\Temp\\foo-1.0` ; vous pouvez utiliser "
"soit un manipulateur d'archive avec une interface graphique (comme WinZip) "
"soit un outil de ligne de commande (telles que :program:`unzip` ou :program:"
"`pkunzip`) pour décompresser l'archive. Ensuite, ouvrez une fenêtre d'invite "
"de commandes (\"fenêtre DOS\") et exécutez ::"

# 5e405020cdf64ffb9db21854c2968241
#: install/index.rst:154
msgid "Splitting the job up"
msgstr "Fractionnement du travail"

# e9dba3fca396425cb6a30410375567e8
#: install/index.rst:156
msgid ""
"Running ``setup.py install`` builds and installs all modules in one run.  If "
"you prefer to work incrementally---especially useful if you want to "
"customize the build process, or if things are going wrong---you can use the "
"setup script to do one thing at a time.  This is particularly helpful when "
"the build and install will be done by different users---for example, you "
"might want to build a module distribution and hand it off to a system "
"administrator for installation (or do it yourself, with super-user "
"privileges)."
msgstr ""
"Exécuter ``setup.py install`` construit et installe tous les modules en un "
"seul coup. Si vous préférez travailler progressivement -- ce qui est "
"particulièrement utile si vous souhaitez personnaliser le processus de "
"construction, ou si les choses vont mal -- vous pouvez utiliser le script de "
"configuration pour faire une chose à la fois. Cela est particulièrement "
"utile lorsque la construction et l'installation doit être faite par "
"différents utilisateurs -- par exemple, vous pouvez vouloir construire une "
"distribution d'un module et la transférer à un administrateur système pour "
"l'installation (ou le faire vous-même, avec les privilèges de super-"
"utilisateur)."

# 9d26802243544d9eb7f6f034e46cbe71
#: install/index.rst:164
msgid ""
"For example, you can build everything in one step, and then install "
"everything in a second step, by invoking the setup script twice::"
msgstr ""
"Par exemple, vous pouvez construire tout en une seule étape et ensuite "
"installer le tout dans une deuxième étape, en invoquant le script "
"d'installation deux fois ::"

# 4b931383fea44f7a82152adf4e4423aa
#: install/index.rst:170
msgid ""
"If you do this, you will notice that running the :command:`install` command "
"first runs the :command:`build` command, which---in this case---quickly "
"notices that it has nothing to do, since everything in the :file:`build` "
"directory is up-to-date."
msgstr ""
"Si vous faites cela, vous remarquerez que l'exécution de la commande :"
"command:`install` lance d'abord la commande :command:`build`, qui, dans ce "
"cas, s'aperçoit vite qu'il n'a rien à faire, puisque tout dans le dossier :"
"file:`build` est à jour."

# f3ccc7e50b5745f8bc2c4dae58572f4e
#: install/index.rst:175
msgid ""
"You may not need this ability to break things down often if all you do is "
"install modules downloaded off the 'net, but it's very handy for more "
"advanced tasks.  If you get into distributing your own Python modules and "
"extensions, you'll run lots of individual Distutils commands on their own."
msgstr ""
"Il se peut que vous n'ayez pas souvent besoin de cette capacité à découper "
"les étapes si tout ce que vous faite est d'installer les modules téléchargés "
"sur le Net, mais c'est très pratique pour des tâches plus avancées. Si vous "
"en venez à distribuer vos propres modules et extensions Python, vous allez "
"exécuter beaucoup de commandes individuelles de Distutils, indépendamment "
"les unes des autres."

# be1036025c1a4abd99f317ff5d0bf54c
#: install/index.rst:184
msgid "How building works"
msgstr "Comment fonctionne une construction"

# 0f91a81ddcb44e89a01f956c1fd2cf7e
#: install/index.rst:186
msgid ""
"As implied above, the :command:`build` command is responsible for putting "
"the files to install into a *build directory*.  By default, this is :file:"
"`build` under the distribution root; if you're excessively concerned with "
"speed, or want to keep the source tree pristine, you can change the build "
"directory with the :option:`--build-base` option. For example::"
msgstr ""
"Comme sous-entendu ci-dessus, la commande :command:`build` est chargé de "
"mettre les fichiers à installer dans un *répertoire de travail*. Par défaut, "
"c'est :file:`build` sous la racine de la distribution ; si vous êtes très "
"préoccupés par la vitesse, ou si vous voulez conserver l'arborescence des "
"sources d'origine, vous pouvez changer le répertoire de construction avec "
"l'option :option:`--build-base`. Par exemple ::"

# 883a387eca2e4a29ab89bd7af7a8ee56
#: install/index.rst:194
msgid ""
"(Or you could do this permanently with a directive in your system or "
"personal Distutils configuration file; see section :ref:`inst-config-"
"files`.)  Normally, this isn't necessary."
msgstr ""
"(Ou vous pourriez le faire de façon permanente avec une directive dans votre "
"système ou dans le fichier de configuration personnelle de Distutils ; voir "
"la section :ref:`inst-config-files`.) Normalement, ce n'est pas nécessaire."

# 149f0490325f4d21b96adf26c48a4b71
#: install/index.rst:198
msgid "The default layout for the build tree is as follows::"
msgstr ""
"La mise en page par défaut pour l'arbre de compilation se présente comme "
"suit ::"

# 2430fb44f78045d3b8be14127584f7e9
#: install/index.rst:205
msgid ""
"where ``<plat>`` expands to a brief description of the current OS/hardware "
"platform and Python version.  The first form, with just a :file:`lib` "
"directory, is used for \"pure module distributions\"---that is, module "
"distributions that include only pure Python modules.  If a module "
"distribution contains any extensions (modules written in C/C++), then the "
"second form, with two ``<plat>`` directories, is used.  In that case, the :"
"file:`temp.{plat}` directory holds temporary files generated by the compile/"
"link process that don't actually get installed.  In either case, the :file:"
"`lib` (or :file:`lib.{plat}`) directory contains all Python modules (pure "
"Python and extensions) that will be installed."
msgstr ""
"où ``<plat>`` représente une brève description de l'actuel système "
"d'exploitation / plateforme matérielle et la version Python. La première "
"forme, avec juste un dossier :file:`lib` est utilisé pour les «distributions "
"de modules purs\" -- c'est-à-dire des distributions de module qui ne "
"incorporent que des modules en Python. Si un module de la distribution "
"contient au moins une extension (modules écrits en C/C++), alors il faut "
"utiliser la deuxième forme, avec deux dossiers ``<plat>``. Dans ce cas, le "
"répertoire :file:`temp.{plat}` contient les fichiers temporaires générés par "
"le processus de compilation et de lien qui ne seront pas installés. Dans les "
"deux cas, le dossier :file:`lib` (ou :file:`lib.{plat}`) contient tous les "
"modules Python (Python pur et extensions) qui seront installés."

# 26a033e63a9346e99993002ffea78d95
#: install/index.rst:215
msgid ""
"In the future, more directories will be added to handle Python scripts, "
"documentation, binary executables, and whatever else is needed to handle the "
"job of installing Python modules and applications."
msgstr ""
"Dans l'avenir, d'autres répertoires seront ajoutés pour gérer les scripts "
"Python, de la documentation, des exécutables binaires et tout ce qui est "
"nécessaire pour gérer le travail de l'installation de modules et "
"d'applications Python."

# 478e57a02d524b54b8008f8d65f18cb3
#: install/index.rst:223
msgid "How installation works"
msgstr "Comment fonctionne l'installation"

# dea55d0602cf41fca8d09f26c373a77e
#: install/index.rst:225
msgid ""
"After the :command:`build` command runs (whether you run it explicitly, or "
"the :command:`install` command does it for you), the work of the :command:"
"`install` command is relatively simple: all it has to do is copy everything "
"under :file:`build/lib` (or :file:`build/lib.{plat}`) to your chosen "
"installation directory."
msgstr ""
"Après l'exécution de la commande :command:`build` (que vous l'ayez exécutez "
"explicitement ou que la commande :command:`install` l'ai fait pour vous), le "
"travail de la commande :command:`install` est relativement simple : tout ce "
"qu'il a à faire est de copier tout ce qui est sous :file:`build/lib` (ou :"
"file:`build/lib.{plat}`) dans le répertoire que vous avez choisi pour "
"l'installation."

# b654b2c02c454d6e8b7a77b57fd58679
#: install/index.rst:231
msgid ""
"If you don't choose an installation directory---i.e., if you just run "
"``setup.py install``\\ ---then the :command:`install` command installs to "
"the standard location for third-party Python modules.  This location varies "
"by platform and by how you built/installed Python itself.  On Unix (and Mac "
"OS X, which is also Unix-based), it also depends on whether the module "
"distribution being installed is pure Python or contains extensions (\"non-"
"pure\"):"
msgstr ""
"Si vous ne choisissez aucun répertoire d'installation -- c'est-à-dire, si "
"vous lancez simplement ``setup.py install``\\ -- alors la commande :command:"
"`install` installe à l'emplacement standard pour les modules tiers de "
"Python. Cet emplacement varie selon la plateforme et selon la façon dont "
"vous avez construit et/ou installés Python lui-même. Sous Unix (et Mac OS X, "
"qui est également basé sur Unix), il dépend aussi de savoir si le module de "
"la distribution en cours d'installation est en pur Python ou contient des "
"extensions (\"non-pur\"):"

# 7eb32c6147ea4a4fb821f5bcac142cdc
#: install/index.rst:239
msgid "Platform"
msgstr "Plateforme"

# d6ee7fa6541e4810ba6de9795838ebe2
#: install/index.rst:239
msgid "Standard installation location"
msgstr "Emplacement standard de l'installation"

# b36322d11c3040abbe0289dbaf267b53
#: install/index.rst:239
msgid "Default value"
msgstr "Valeur par défaut"

# a2da259589d54d6bafdb543fe05984c6
# 8625631d5cfa4390a30a1c9cd0c1d3db
# 45618b7c2c8641949e24211c9c60ae12
#: install/index.rst:239 install/index.rst:752 install/index.rst:764
msgid "Notes"
msgstr "Notes"

# fe445cadeba348ad80e645fbe5a5d78b
#: install/index.rst:241
msgid "Unix (pure)"
msgstr "Unix (pur)"

# 717f76e098e34d00ae627ccf514a4a4c
# befadebdd68942a88a0aba48d525e6fd
#: install/index.rst:241 install/index.rst:452
msgid ":file:`{prefix}/lib/python{X.Y}/site-packages`"
msgstr ":file:`{prefix}/lib/python{X.Y}/site-packages`"

# f2b1e3fe120e40688e821e6a7b70d788
# bd1d7a9a377d46da986c2dabe85140b8
#: install/index.rst:241 install/index.rst:243
msgid ":file:`/usr/local/lib/python{X.Y}/site-packages`"
msgstr ":file:`/usr/local/lib/python{X.Y}/site-packages`"

# 204a46f20f454cedaaf73e92c8d5004c
# fc971586510b4c6594faa48bb24091a0
# a6e10ef9d644471bbbff27bccb1a23d6
#: install/index.rst:241 install/index.rst:243 install/index.rst:754
msgid "\\(1)"
msgstr "\\(1)"

# 8e3270c5fec9424a8b53f739b5d98d65
#: install/index.rst:243
msgid "Unix (non-pure)"
msgstr "Unix (non-pur)"

# fef8692da4f24b0d9927ae73c72f082d
# 4dd3c4b168164db39c895f6660131501
#: install/index.rst:243 install/index.rst:453
msgid ":file:`{exec-prefix}/lib/python{X.Y}/site-packages`"
msgstr ":file:`{exec-prefix}/lib/python{X.Y}/site-packages`"

# 761a4cd1fb1646078f231f0c7dfc6166
#: install/index.rst:245
msgid "Windows"
msgstr "Windows"

# ee93ec7458ab434dbf5f08d299289e79
# 3eca8720ac8f4755b71e36ecf53307f7
#: install/index.rst:245 install/index.rst:504
msgid ":file:`{prefix}\\\\Lib\\\\site-packages`"
msgstr ":file:`{prefix}/lib/python{X.Y}/site-packages`"

# ed6096a4ec2449c7b06df38480253d37
#: install/index.rst:245
msgid ":file:`C:\\\\Python{XY}\\\\Lib\\\\site-packages`"
msgstr ":file:`{prefix}/lib/python{X.Y}/site-packages`"

# f480286b970c400dbb87f3eded35123b
# e1f2a06c5ae04e989561f9a46b650e24
#: install/index.rst:245 install/index.rst:756
msgid "\\(2)"
msgstr "\\(2)"

# 40dc3370881849dea99aec00e7512c81
# 44d1bcdd19244ea68563aadf447e851d
#: install/index.rst:248 install/index.rst:776
msgid "Notes:"
msgstr "Notes:"

# e95555653a1d475bae9952afd11c29f0
#: install/index.rst:251
msgid ""
"Most Linux distributions include Python as a standard part of the system, "
"so :file:`{prefix}` and :file:`{exec-prefix}` are usually both :file:`/usr` "
"on Linux.  If you build Python yourself on Linux (or any Unix-like system), "
"the default :file:`{prefix}` and :file:`{exec-prefix}` are :file:`/usr/"
"local`."
msgstr ""
"La plupart des distributions Linux incluent Python comme un élément de base "
"du système, donc : file: `{prefix}` et : ​​file: `{exec-prefix}` sont "
"généralement tous les deux : file: `/ usr` sous Linux. Si vous construisez "
"vous-même Python sous Linux (ou tout autre système de type Unix), les "
"valeurs par défaut de : file: `{prefix}` et: ​​file: `{exec-prefix}` sont "
"souvent : file: `/ usr /` locales."

# 77919050195244f984b7bd64519ce2e8
#: install/index.rst:257
msgid ""
"The default installation directory on Windows was :file:`C:\\\\Program Files"
"\\\\Python` under Python 1.6a1, 1.5.2, and earlier."
msgstr ""
"Sous Windows, le dossier d'installation par défaut était : :file:`C:"
"\\Program Files\\Python` sous Python 1.6a1, 1.5.2 et avant."

# 12487e61eadf4a248890aa167184d685
#: install/index.rst:260
msgid ""
":file:`{prefix}` and :file:`{exec-prefix}` stand for the directories that "
"Python is installed to, and where it finds its libraries at run-time.  They "
"are always the same under Windows, and very often the same under Unix and "
"Mac OS X.  You can find out what your Python installation uses for :file:"
"`{prefix}` and :file:`{exec-prefix}` by running Python in interactive mode "
"and typing a few simple commands. Under Unix, just type ``python`` at the "
"shell prompt.  Under Windows, choose :menuselection:`Start --> Programs --> "
"Python X.Y --> Python (command line)`.   Once the interpreter is started, "
"you type Python code at the prompt.  For example, on my Linux system, I type "
"the three Python statements shown below, and get the output as shown, to "
"find out my :file:`{prefix}` and :file:`{exec-prefix}`::"
msgstr ""
":file:`{prefix}` et :file:`{exec-prefix}` désignent les répertoires dans "
"lesquels Python est installé et où il trouve les librairies lors de "
"l'exécution. Ils sont toujours identiques sous Windows et très souvent les "
"mêmes sous Unix et Mac OS X. Vous pouvez trouver ce que votre installation "
"de Python utilise pour :file:`{prefix}` et :file:`{exec-prefix}` en "
"exécutant Python en mode interactif et en tapant quelques commandes simples. "
"Sous Unix,  taper seulement ``python`` à l'invite du shell. Sous Windows, "
"sélectionner :menuselection:`Démarrer --> Programmes --> Python X.Y --> "
"Python (ligne de commande)`. Un fois l'interpréteur démarré, vous taper du "
"code Python à l'invite de commande. Par exemple, sur mon système Linux, je "
"tape les trois instructions ci-dessous et obtient la sortie comme indiqué "
"pour trouver mes  :file:`{prefix}` et :file:`{exec-prefix}`::"

# f68ec1a99a674a67a80229a69899dbe2
#: install/index.rst:280
msgid ""
"A few other placeholders are used in this document: :file:`{X.Y}` stands for "
"the version of Python, for example ``3.2``; :file:`{abiflags}` will be "
"replaced by the value of :data:`sys.abiflags` or the empty string for "
"platforms which don't define ABI flags; :file:`{distname}` will be replaced "
"by the name of the module distribution being installed.  Dots and "
"capitalization are important in the paths; for example, a value that uses "
"``python3.2`` on UNIX will typically use ``Python32`` on Windows."
msgstr ""

# 49050a0c90444aeca94c31f8c2f39c49
#: install/index.rst:288
msgid ""
"If you don't want to install modules to the standard location, or if you "
"don't have permission to write there, then you need to read about alternate "
"installations in section :ref:`inst-alt-install`.  If you want to customize "
"your installation directories more heavily, see section :ref:`inst-custom-"
"install` on custom installations."
msgstr ""
"Si vous ne voulez pas installer des modules à l'emplacement standard, ou si "
"vous n'avez pas la permission d'écrire là-bas, alors vous avez besoin de "
"lire la section ref: `inst-alt-installer` sur les alternatives "
"d'installation. Si vous souhaitez personnaliser vos répertoires "
"d'installation plus fortement, allez voir la section ref: `inst-sur-install` "
"sur les installations personnalisées."

# 1cf4d1b696b74c18904cc20442f68527
#: install/index.rst:298
msgid "Alternate Installation"
msgstr ""

# 0e2bbebab045445b801f0e748fd0fec6
#: install/index.rst:300
msgid ""
"Often, it is necessary or desirable to install modules to a location other "
"than the standard location for third-party Python modules.  For example, on "
"a Unix system you might not have permission to write to the standard third-"
"party module directory.  Or you might wish to try out a module before making "
"it a standard part of your local Python installation.  This is especially "
"true when upgrading a distribution already present: you want to make sure "
"your existing base of scripts still works with the new version before "
"actually upgrading."
msgstr ""

# 63c4c0228c95463496722c3fffe4f22b
#: install/index.rst:308
msgid ""
"The Distutils :command:`install` command is designed to make installing "
"module distributions to an alternate location simple and painless.  The "
"basic idea is that you supply a base directory for the installation, and "
"the :command:`install` command picks a set of directories (called an "
"*installation scheme*) under this base directory in which to install files.  "
"The details differ across platforms, so read whichever of the following "
"sections applies to you."
msgstr ""

# 99cfa1338c2d49b884e97803e3d63ca2
#: install/index.rst:316
msgid ""
"Note that the various alternate installation schemes are mutually exclusive: "
"you can pass ``--user``, or ``--home``, or ``--prefix`` and ``--exec-"
"prefix``, or ``--install-base`` and ``--install-platbase``, but you can't "
"mix from these groups."
msgstr ""

# c029819695bb469688a2d60fdf87ff22
#: install/index.rst:325
msgid "Alternate installation: the user scheme"
msgstr ""

# 97c1af23e7534c329ae1a2b8d83859d5
#: install/index.rst:327
msgid ""
"This scheme is designed to be the most convenient solution for users that "
"don't have write permission to the global site-packages directory or don't "
"want to install into it.  It is enabled with a simple option::"
msgstr ""

# 47d0bf511d274b2682f016ab70f7bf76
#: install/index.rst:333
msgid ""
"Files will be installed into subdirectories of :data:`site.USER_BASE` "
"(written as :file:`{userbase}` hereafter).  This scheme installs pure Python "
"modules and extension modules in the same location (also known as :data:"
"`site.USER_SITE`). Here are the values for UNIX, including Mac OS X:"
msgstr ""

# 81043e6e0fa7498299d9a03497ef9efd
# a0c2b7808b054a1e8438d62d78632686
# 7fdfe3938aba4cbfb8d58d772a3072f9
# 90c5a029448b46c6af2b77104f665e51
# 8eb80060eab544059d7f784fd131b502
# ee6d11f7429943e28f5a4a7e378cb975
# fc7a53c4b53748ce948a1803b4439274
# 872e34bfcf79456c88c64eddc66de0fd
#: install/index.rst:339 install/index.rst:350 install/index.rst:401
#: install/index.rst:450 install/index.rst:502 install/index.rst:527
#: install/index.rst:752 install/index.rst:764
msgid "Type of file"
msgstr ""

# f01d0cc52f0c45eb9b71c57b3fb7d0b3
# 4d832563279444269f9d209517e17869
# 2387ba7ded574732b5fd4abad9555313
# ae29407d709643fb91114d47e46b7447
# 8e7cfad06e6a446e829e933e170e1b56
#: install/index.rst:339 install/index.rst:350 install/index.rst:401
#: install/index.rst:450 install/index.rst:502
msgid "Installation directory"
msgstr "Comment fonctionne l'installation"

# d7b42ea368e64c4887ff15394810df3e
# 1c7a471911234920ba361284343150f8
# fb2f7f75775341219d30ca6324da8e69
# 82469bcb8afc4a0899d355f72c46f487
#: install/index.rst:341 install/index.rst:352 install/index.rst:403
#: install/index.rst:504
msgid "modules"
msgstr ""

# 8a12da57f05641f3a02d74b68a9b545b
#: install/index.rst:341
msgid ":file:`{userbase}/lib/python{X.Y}/site-packages`"
msgstr ":file:`{prefix}/lib/python{X.Y}/site-packages`"

# f33f0ad0948148de9e6be591891a1f0b
# 045ef5bf84a74ee991d1f9a350369e3f
# e655f4f62e9f4945bfe376d5518e78b4
# 1304cd05ec8b4801aae06e1f91f5fb31
# 622d111b97234de7b49e70333c0d4d0e
# 229c5d7604544e5d8b6ed6aac5b0f502
#: install/index.rst:342 install/index.rst:353 install/index.rst:404
#: install/index.rst:454 install/index.rst:505 install/index.rst:532
msgid "scripts"
msgstr ""

# 43df5fd78091431c84aac38af8aa3576
#: install/index.rst:342
msgid ":file:`{userbase}/bin`"
msgstr ":file:`{prefix}`"

# aa3da0f9424e472d94c2e709bca7a4c8
# 4386dd14ce8d427ea558973c04e06cc6
# 6bdce49c161f4db48dae6126090e8c2a
# c8a924ba6d2340dcbf61eaefd00bece7
# 6380db5939bb4e068d9f9bd6cbdc881d
# d8a8fa1a48614206a9f8c9f3b00237fc
#: install/index.rst:343 install/index.rst:354 install/index.rst:405
#: install/index.rst:455 install/index.rst:506 install/index.rst:533
msgid "data"
msgstr ""

# fc49997d73124d0ea793ee88b897a796
# 7b6aef39571d4629b34516231d2237c1
#: install/index.rst:343 install/index.rst:354
msgid ":file:`{userbase}`"
msgstr ":file:`{prefix}`"

# 318715bdfb4540349c5850c913ce13e8
# e81857713c8842d38e6f0ded01948add
# d3ff80fe4e6342cf9980038aa64d6b90
# 9c9711ad89d943f994d55d6329f9d7bc
# f8a4133886da47b6ae693974814f6e85
# 87a72e872ab54ce7bc8522c7c8bdc1d4
#: install/index.rst:344 install/index.rst:355 install/index.rst:406
#: install/index.rst:456 install/index.rst:507 install/index.rst:534
msgid "C headers"
msgstr ""

# 4e488a92a1b6402eb996e3246582f9b5
#: install/index.rst:344
msgid ":file:`{userbase}/include/python{X.Y}{abiflags}/{distname}`"
msgstr ":file:`{prefix}/lib/python{X.Y}/site-packages`"

# 02b54a65cf764b219e56739e68d73cba
#: install/index.rst:347
msgid "And here are the values used on Windows:"
msgstr ""

# ae7a88028b3046cdbb1f56d644629f3c
#: install/index.rst:352
msgid ":file:`{userbase}\\\\Python{XY}\\\\site-packages`"
msgstr ":file:`{prefix}/lib/python{X.Y}/site-packages`"

# f9b8e8d0b15c4c32ac0910fca58220f9
#: install/index.rst:353
msgid ":file:`{userbase}\\\\Scripts`"
msgstr ""

# b44f8d52071b4ca58cff8a3c4e052fd8
#: install/index.rst:355
msgid ":file:`{userbase}\\\\Python{XY}\\\\Include\\\\{distname}`"
msgstr ""

# 2e232ba4248d4b3f9c705e0152845d2e
#: install/index.rst:358
msgid ""
"The advantage of using this scheme compared to the other ones described "
"below is that the user site-packages directory is under normal conditions "
"always included in :data:`sys.path` (see :mod:`site` for more information), "
"which means that there is no additional step to perform after running the :"
"file:`setup.py` script to finalize the installation."
msgstr ""

# 4c5406d22c16455d980ae3b149334376
#: install/index.rst:364
msgid ""
"The :command:`build_ext` command also has a ``--user`` option to add :file:"
"`{userbase}/include` to the compiler search path for header files and :file:"
"`{userbase}/lib` to the compiler search path for libraries as well as to the "
"runtime search path for shared C libraries (rpath)."
msgstr ""

# 20e2992f8a4c49f5af083a6b9a8e55d9
#: install/index.rst:373
msgid "Alternate installation: the home scheme"
msgstr ""

# 9357c6e88fd640968253fddadbce2df3
#: install/index.rst:375
msgid ""
"The idea behind the \"home scheme\" is that you build and maintain a "
"personal stash of Python modules.  This scheme's name is derived from the "
"idea of a \"home\" directory on Unix, since it's not unusual for a Unix user "
"to make their home directory have a layout similar to :file:`/usr/` or :file:"
"`/usr/local/`. This scheme can be used by anyone, regardless of the "
"operating system they are installing for."
msgstr ""

# d41dd0eecbea4ddf8ee2598d7474272f
#: install/index.rst:382
msgid "Installing a new module distribution is as simple as ::"
msgstr ""

# 33ea0248570444e3b56f287e9b144473
#: install/index.rst:386
msgid ""
"where you can supply any directory you like for the :option:`--home` "
"option.  On Unix, lazy typists can just type a tilde (``~``); the :command:"
"`install` command will expand this to your home directory::"
msgstr ""

# 8a062ca08f5d4ff983a6afdc8f7686d2
#: install/index.rst:392
msgid ""
"To make Python find the distributions installed with this scheme, you may "
"have to :ref:`modify Python's search path <inst-search-path>` or edit :mod:"
"`sitecustomize` (see :mod:`site`) to call :func:`site.addsitedir` or edit :"
"data:`sys.path`."
msgstr ""

# 19619453009d4612a2374cfd77957c73
#: install/index.rst:397
msgid ""
"The :option:`--home` option defines the installation base directory.  Files "
"are installed to the following directories under the installation base as "
"follows:"
msgstr ""

# db6ffb2229f24b349afa9b6db264107b
#: install/index.rst:403
msgid ":file:`{home}/lib/python`"
msgstr ""

# bd3f8781e9724ee58b0d5cef8e54a71c
#: install/index.rst:404
msgid ":file:`{home}/bin`"
msgstr ""

# fb522f1e39e24dc39cb2a051a66eb046
#: install/index.rst:405
msgid ":file:`{home}`"
msgstr ":file:`{prefix}`"

# 4de2a2ed25844cd78fe44b9971639e03
#: install/index.rst:406
msgid ":file:`{home}/include/python/{distname}`"
msgstr ""

# b6db6e79e4a54cf29a8a9054fd0874ef
#: install/index.rst:409
msgid "(Mentally replace slashes with backslashes if you're on Windows.)"
msgstr ""

# 3f94efd01e1e417585efcdccbbcac7a5
#: install/index.rst:415
msgid "Alternate installation: Unix (the prefix scheme)"
msgstr ""

# 8c642407eb3b4f91ab3ca3ef5bb22752
#: install/index.rst:417
msgid ""
"The \"prefix scheme\" is useful when you wish to use one Python installation "
"to perform the build/install (i.e., to run the setup script), but install "
"modules into the third-party module directory of a different Python "
"installation (or something that looks like a different Python "
"installation).  If this sounds a trifle unusual, it is---that's why the user "
"and home schemes come before.  However, there are at least two known cases "
"where the prefix scheme will be useful."
msgstr ""

# 6413e422ccfe4cb2aa69cc967f285188
#: install/index.rst:424
msgid ""
"First, consider that many Linux distributions put Python in :file:`/usr`, "
"rather than the more traditional :file:`/usr/local`.  This is entirely "
"appropriate, since in those cases Python is part of \"the system\" rather "
"than a local add-on. However, if you are installing Python modules from "
"source, you probably want them to go in :file:`/usr/local/lib/python2.{X}` "
"rather than :file:`/usr/lib/python2.{X}`.  This can be done with ::"
msgstr ""

# 411c7d6840004314a72d6bbbfbc1a821
#: install/index.rst:433
msgid ""
"Another possibility is a network filesystem where the name used to write to "
"a remote directory is different from the name used to read it: for example, "
"the Python interpreter accessed as :file:`/usr/local/bin/python` might "
"search for modules in :file:`/usr/local/lib/python2.{X}`, but those modules "
"would have to be installed to, say, :file:`/mnt/{@server}/export/lib/python2."
"{X}`.  This could be done with ::"
msgstr ""

# 9c15828b07f044aeaafaee41bb697bf5
#: install/index.rst:442
msgid ""
"In either case, the :option:`--prefix` option defines the installation base, "
"and the :option:`--exec-prefix` option defines the platform-specific "
"installation base, which is used for platform-specific files.  (Currently, "
"this just means non-pure module distributions, but could be expanded to C "
"libraries, binary executables, etc.)  If :option:`--exec-prefix` is not "
"supplied, it defaults to :option:`--prefix`.  Files are installed as follows:"
msgstr ""

# d03dc83b6b414185a74b614d1de5fe1d
# c877945b72d94afbaf23f8f890df1abe
#: install/index.rst:452 install/index.rst:529
msgid "Python modules"
msgstr "installation des modules python"

# 4fbb99cc1aaa426586e5b9b8de38de16
# cabe1e5472914f598f6b89fe29d1df0a
#: install/index.rst:453 install/index.rst:530
msgid "extension modules"
msgstr ""

# 5dd0b51f145c49f58daf3d01faf5af8a
#: install/index.rst:454
msgid ":file:`{prefix}/bin`"
msgstr ""

# 08847b6b2f6a4728966a29b5ab1aa3ae
# 4ab6e6a91d8548b0a22e7abd2e94cba3
#: install/index.rst:455 install/index.rst:506
msgid ":file:`{prefix}`"
msgstr ":file:`{prefix}`"

# 0f1c3a7d60e34e34a59e4ab2a583fd6e
#: install/index.rst:456
msgid ":file:`{prefix}/include/python{X.Y}{abiflags}/{distname}`"
msgstr ":file:`{prefix}/lib/python{X.Y}/site-packages`"

# 29e85a18b21d46e1af6edeff6f9131f9
#: install/index.rst:459
msgid ""
"There is no requirement that :option:`--prefix` or :option:`--exec-prefix` "
"actually point to an alternate Python installation; if the directories "
"listed above do not already exist, they are created at installation time."
msgstr ""

# ab11a500836b451984fc8d153dfc281c
#: install/index.rst:463
msgid ""
"Incidentally, the real reason the prefix scheme is important is simply that "
"a standard Unix installation uses the prefix scheme, but with :option:`--"
"prefix` and :option:`--exec-prefix` supplied by Python itself as ``sys."
"prefix`` and ``sys.exec_prefix``.  Thus, you might think you'll never use "
"the prefix scheme, but every time you run ``python setup.py install`` "
"without any other options, you're using it."
msgstr ""

# 67162cbf35b44deab27ec30ce2c60272
#: install/index.rst:470
msgid ""
"Note that installing extensions to an alternate Python installation has no "
"effect on how those extensions are built: in particular, the Python header "
"files (:file:`Python.h` and friends) installed with the Python interpreter "
"used to run the setup script will be used in compiling extensions.  It is "
"your responsibility to ensure that the interpreter used to run extensions "
"installed in this way is compatible with the interpreter used to build "
"them.  The best way to do this is to ensure that the two interpreters are "
"the same version of Python (possibly different builds, or possibly copies of "
"the same build).  (Of course, if your :option:`--prefix` and :option:`--exec-"
"prefix` don't even point to an alternate Python installation, this is "
"immaterial.)"
msgstr ""

# 7cdf56afb79849e688549cd0c43463cf
#: install/index.rst:485
msgid "Alternate installation: Windows (the prefix scheme)"
msgstr ""

# c6b7039b2c374deebbd44083bff1a072
#: install/index.rst:487
msgid ""
"Windows has no concept of a user's home directory, and since the standard "
"Python installation under Windows is simpler than under Unix, the :option:`--"
"prefix` option has traditionally been used to install additional packages in "
"separate locations on Windows. ::"
msgstr ""

# 484988f963564a308019b9dec09afe6d
#: install/index.rst:494
msgid ""
"to install modules to the :file:`\\\\Temp\\\\Python` directory on the "
"current drive."
msgstr ""

# 37a3348072014c649a1d4ca7623ad959
#: install/index.rst:496
msgid ""
"The installation base is defined by the :option:`--prefix` option; the :"
"option:`--exec-prefix` option is not supported under Windows, which means "
"that pure Python modules and extension modules are installed into the same "
"location. Files are installed as follows:"
msgstr ""

# 82dfa5d3818a41029b121cf500f124a7
#: install/index.rst:505
msgid ":file:`{prefix}\\\\Scripts`"
msgstr ""

# 34c64fd15e5b407aa0f5af97c9c1991e
#: install/index.rst:507
msgid ":file:`{prefix}\\\\Include\\\\{distname}`"
msgstr ":file:`{prefix}`"

# 184832f5bffa4d15a9a4177dbded15ab
#: install/index.rst:514
msgid "Custom Installation"
msgstr ""

# 32cc1187e1a54fa8833ea34f5240b342
#: install/index.rst:516
msgid ""
"Sometimes, the alternate installation schemes described in section :ref:"
"`inst-alt-install` just don't do what you want.  You might want to tweak "
"just one or two directories while keeping everything under the same base "
"directory, or you might want to completely redefine the installation "
"scheme.  In either case, you're creating a *custom installation scheme*."
msgstr ""

# 8f1da4adcb7b4232973b3a2352c4cfb7
#: install/index.rst:522
msgid ""
"To create a custom installation scheme, you start with one of the alternate "
"schemes and override some of the installation directories used for the "
"various types of files, using these options:"
msgstr ""

# d0de2fb6dc564d09ad8e81192b399669
#: install/index.rst:527
msgid "Override option"
msgstr ""

# 63268f15f63b4531b4b4ce4e4ffe3472
#: install/index.rst:529
msgid "``--install-purelib``"
msgstr ""

# cb6d4ebb6da3427c9b906494474064b5
#: install/index.rst:530
msgid "``--install-platlib``"
msgstr ""

# 4e9a9d8a06f449f7b4c66a0ca45f58f0
#: install/index.rst:531
msgid "all modules"
msgstr ""

# d7ff392253044bf59a6d917a2a67462b
#: install/index.rst:531
msgid "``--install-lib``"
msgstr ""

# 701116cef5b54e2d8b743e8381378f0b
#: install/index.rst:532
msgid "``--install-scripts``"
msgstr ""

# ac33034ee79246168582d64c96273359
#: install/index.rst:533
msgid "``--install-data``"
msgstr ""

# 726fae3470bb4fd294ac804d68c54008
#: install/index.rst:534
msgid "``--install-headers``"
msgstr ""

# a486242eadd548f486210ebfe8c4a08d
#: install/index.rst:537
msgid ""
"These override options can be relative, absolute, or explicitly defined in "
"terms of one of the installation base directories. (There are two "
"installation base directories, and they are normally the same--- they only "
"differ when you use the Unix \"prefix scheme\" and supply different ``--"
"prefix`` and ``--exec-prefix`` options; using ``--install-lib`` will "
"override values computed or given for ``--install-purelib`` and ``--install-"
"platlib``, and is recommended for schemes that don't make a difference "
"between Python and extension modules.)"
msgstr ""

# 756f1b8ee84e4457bcb2967edf3b6736
#: install/index.rst:546
msgid ""
"For example, say you're installing a module distribution to your home "
"directory under Unix---but you want scripts to go in :file:`~/scripts` "
"rather than :file:`~/bin`. As you might expect, you can override this "
"directory with the :option:`--install-scripts` option; in this case, it "
"makes most sense to supply a relative path, which will be interpreted "
"relative to the installation base directory (your home directory, in this "
"case)::"
msgstr ""

# c16f4d002bcb4917bd6754cb74a7699c
#: install/index.rst:555
msgid ""
"Another Unix example: suppose your Python installation was built and "
"installed with a prefix of :file:`/usr/local/python`, so under a standard  "
"installation scripts will wind up in :file:`/usr/local/python/bin`.  If you "
"want them in :file:`/usr/local/bin` instead, you would supply this absolute "
"directory for the :option:`--install-scripts` option::"
msgstr ""

# 30665d563b624f7380b50ea366a4fec4
#: install/index.rst:563
msgid ""
"(This performs an installation using the \"prefix scheme,\" where the prefix "
"is whatever your Python interpreter was installed with--- :file:`/usr/local/"
"python` in this case.)"
msgstr ""

# 394a7b8ce0394ae38f0b01ef9210a229
#: install/index.rst:567
msgid ""
"If you maintain Python on Windows, you might want third-party modules to "
"live in a subdirectory of :file:`{prefix}`, rather than right in :file:"
"`{prefix}` itself.  This is almost as easy as customizing the script "
"installation directory ---you just have to remember that there are two types "
"of modules to worry about, Python and extension modules, which can "
"conveniently be both controlled by one option::"
msgstr ""

# 916989f7c847452d8301118bfac60abe
#: install/index.rst:576
msgid ""
"The specified installation directory is relative to :file:`{prefix}`.  Of "
"course, you also have to ensure that this directory is in Python's module "
"search path, such as by putting a :file:`.pth` file in a site directory "
"(see :mod:`site`).  See section :ref:`inst-search-path` to find out how to "
"modify Python's search path."
msgstr ""

# e48b59a62c54455781bde67bdc008c42
#: install/index.rst:582
msgid ""
"If you want to define an entire installation scheme, you just have to supply "
"all of the installation directory options.  The recommended way to do this "
"is to supply relative paths; for example, if you want to maintain all Python "
"module-related files under :file:`python` in your home directory, and you "
"want a separate directory for each platform that you use your home directory "
"from, you might define the following installation scheme::"
msgstr ""

# f1a6cb2a94844506a0cf7b103231e6c1
# 375316ae27e34efe85eb67363ec3c4da
#: install/index.rst:595 install/index.rst:618
msgid "or, equivalently, ::"
msgstr ""

# 4e81d7a8f3524d0383ab8aea58e5f747
#: install/index.rst:603
msgid ""
"``$PLAT`` is not (necessarily) an environment variable---it will be expanded "
"by the Distutils as it parses your command line options, just as it does "
"when parsing your configuration file(s)."
msgstr ""

# dc8dd23c8aa743be8ca6a7a029765459
#: install/index.rst:607
msgid ""
"Obviously, specifying the entire installation scheme every time you install "
"a new module distribution would be very tedious.  Thus, you can put these "
"options into your Distutils config file (see section :ref:`inst-config-"
"files`)::"
msgstr ""

# 123675718e2443188ab7440e55f7ce66
#: install/index.rst:627
msgid ""
"Note that these two are *not* equivalent if you supply a different "
"installation base directory when you run the setup script.  For example, ::"
msgstr ""

# cdb8ba911b6a48e3a2b283c3e8f3c1b0
#: install/index.rst:632
msgid ""
"would install pure modules to :file:`/tmp/python/lib` in the first case, and "
"to :file:`/tmp/lib` in the second case.  (For the second case, you probably "
"want to supply an installation base of :file:`/tmp/python`.)"
msgstr ""

# 57202a37d85f45e89dfc56eac32e7d4e
#: install/index.rst:636
msgid ""
"You probably noticed the use of ``$HOME`` and ``$PLAT`` in the sample "
"configuration file input.  These are Distutils configuration variables, "
"which bear a strong resemblance to environment variables. In fact, you can "
"use environment variables in config files on platforms that have such a "
"notion but the Distutils additionally define a few extra variables that may "
"not be in your environment, such as ``$PLAT``.  (And of course, on systems "
"that don't have environment variables, such as Mac OS 9, the configuration "
"variables supplied by the Distutils are the only ones you can use.) See "
"section :ref:`inst-config-files` for details."
msgstr ""

# 24fbd43a4d32408087a106340467d127
#: install/index.rst:655
msgid "Modifying Python's Search Path"
msgstr ""

# 6825a72ec1114ef4884f50ec9377d433
#: install/index.rst:657
msgid ""
"When the Python interpreter executes an :keyword:`import` statement, it "
"searches for both Python code and extension modules along a search path.  A "
"default value for the path is configured into the Python binary when the "
"interpreter is built. You can determine the path by importing the :mod:`sys` "
"module and printing the value of ``sys.path``.   ::"
msgstr ""

# 9d82865e7a09429cb8e11d6cb05d5372
#: install/index.rst:674
msgid ""
"The null string in ``sys.path`` represents the current working directory."
msgstr ""

# 7b4adc875d1a40f48114fe57aaf460b6
#: install/index.rst:676
msgid ""
"The expected convention for locally installed packages is to put them in "
"the :file:`{...}/site-packages/` directory, but you may want to install "
"Python modules into some arbitrary directory.  For example, your site may "
"have a convention of keeping all software related to the web server under :"
"file:`/www`. Add-on Python modules might then belong in :file:`/www/python`, "
"and in order to import them, this directory must be added to ``sys.path``.  "
"There are several different ways to add the directory."
msgstr ""

# 6124f7c0b3a94fb0996a2dcb429b286a
#: install/index.rst:684
msgid ""
"The most convenient way is to add a path configuration file to a directory "
"that's already on Python's path, usually to the :file:`.../site-packages/` "
"directory.  Path configuration files have an extension of :file:`.pth`, and "
"each line must contain a single path that will be appended to ``sys.path``.  "
"(Because the new paths are appended to ``sys.path``, modules in the added "
"directories will not override standard modules.  This means you can't use "
"this mechanism for installing fixed versions of standard modules.)"
msgstr ""

# 4733b80fe05a47e08070527cb22263ac
#: install/index.rst:692
msgid ""
"Paths can be absolute or relative, in which case they're relative to the "
"directory containing the :file:`.pth` file.  See the documentation of the :"
"mod:`site` module for more information."
msgstr ""

# a5a51501a35840a7a2cb90d558a9d654
#: install/index.rst:696
msgid ""
"A slightly less convenient way is to edit the :file:`site.py` file in "
"Python's standard library, and modify ``sys.path``.  :file:`site.py` is "
"automatically imported when the Python interpreter is executed, unless the :"
"option:`-S` switch is supplied to suppress this behaviour.  So you could "
"simply edit :file:`site.py` and add two lines to it::"
msgstr ""

# 810e0da4aa7b4c099191739767ca559d
#: install/index.rst:705
msgid ""
"However, if you reinstall the same major version of Python (perhaps when "
"upgrading from 2.2 to 2.2.2, for example) :file:`site.py` will be "
"overwritten by the stock version.  You'd have to remember that it was "
"modified and save a copy before doing the installation."
msgstr ""

# 86847b4988f14464833bc741f93d635a
#: install/index.rst:710
msgid ""
"There are two environment variables that can modify ``sys.path``. :envvar:"
"`PYTHONHOME` sets an alternate value for the prefix of the Python "
"installation.  For example, if :envvar:`PYTHONHOME` is set to ``/www/"
"python``, the search path will be set to ``['', '/www/python/lib/pythonX."
"Y/', '/www/python/lib/pythonX.Y/plat-linux2', ...]``."
msgstr ""

# ef70001651084a9ba205ac02f87add11
#: install/index.rst:716
msgid ""
"The :envvar:`PYTHONPATH` variable can be set to a list of paths that will be "
"added to the beginning of ``sys.path``.  For example, if :envvar:"
"`PYTHONPATH` is set to ``/www/python:/opt/py``, the search path will begin "
"with ``['/www/python', '/opt/py']``.  (Note that directories must exist in "
"order to be added to ``sys.path``; the :mod:`site` module removes paths that "
"don't exist.)"
msgstr ""

# d2282f3f1a7f4b43a98c5699212e15eb
#: install/index.rst:723
msgid ""
"Finally, ``sys.path`` is just a regular Python list, so any Python "
"application can modify it by adding or removing entries."
msgstr ""

# fe638edf6a6c49c3afa42fb98bbbdef8
#: install/index.rst:730
msgid "Distutils Configuration Files"
msgstr ""

# 225e635107b84e2f8fabb87489744223
#: install/index.rst:732
msgid ""
"As mentioned above, you can use Distutils configuration files to record "
"personal or site preferences for any Distutils options.  That is, any option "
"to any command can be stored in one of two or three (depending on your "
"platform) configuration files, which will be consulted before the command-"
"line is parsed. This means that configuration files will override default "
"values, and the command-line will in turn override configuration files.  "
"Furthermore, if multiple configuration files apply, values from \"earlier\" "
"files are overridden by \"later\" files."
msgstr ""

# 335efbed1ed442018762a66e811187f6
#: install/index.rst:745
msgid "Location and names of config files"
msgstr ""

# 67b54ba615fe402aa35922942fb13df1
#: install/index.rst:747
msgid ""
"The names and locations of the configuration files vary slightly across "
"platforms.  On Unix and Mac OS X, the three configuration files (in the "
"order they are processed) are:"
msgstr ""

# 1190e24cb8124b378b9b3cf51131ad9b
# 9e338ee89fdb489a89814e40703f6010
#: install/index.rst:752 install/index.rst:764
msgid "Location and filename"
msgstr ""

# 51e9ef214ee84a86bcc7a1d89b5c42f5
# 6f5f9c88a9dc4ca5b142cf949dc98113
#: install/index.rst:754 install/index.rst:766
msgid "system"
msgstr ""

# 726c59f36a154aeca164c214d45ad57c
#: install/index.rst:754
msgid ":file:`{prefix}/lib/python{ver}/distutils/distutils.cfg`"
msgstr ""

# f9b7cbc4b614426fa80963e81aa3bf09
# 7e712df26c784626919511bbfad52735
#: install/index.rst:756 install/index.rst:768
msgid "personal"
msgstr ""

# 3b7b2d5ced764a259a1c14ff697e1830
#: install/index.rst:756
msgid ":file:`$HOME/.pydistutils.cfg`"
msgstr ""

# 3772f137171d44219f20ed84bce6558d
# 7d6283bc16b6456eb711a0b5ab9b7ed4
#: install/index.rst:758 install/index.rst:770
msgid "local"
msgstr ""

# 135f6d758866418897f185a3aeb90a39
# ded422367e56467cbd694ea724c633e8
#: install/index.rst:758 install/index.rst:770
msgid ":file:`setup.cfg`"
msgstr ""

# 2fd1a04d0c87435792189425a190eae7
# 07f5091cff7f48d5a1680e7df28674e7
#: install/index.rst:758 install/index.rst:770
msgid "\\(3)"
msgstr "\\(3)"

# c381729f48ab4741b05a301aebaec213
#: install/index.rst:761
msgid "And on Windows, the configuration files are:"
msgstr ""

# e7b87be951344f9d854145d2591e8e8a
#: install/index.rst:766
msgid ":file:`{prefix}\\\\Lib\\\\distutils\\\\distutils.cfg`"
msgstr ""

# bb421a205f2a4ba594531452dfe42103
#: install/index.rst:766
msgid "\\(4)"
msgstr ""

# f96d7d84b9194a7f826daad5137de34d
#: install/index.rst:768
msgid ":file:`%HOME%\\\\pydistutils.cfg`"
msgstr ""

# 2edb95ea4d6d452d927c5516cd520397
#: install/index.rst:768
msgid "\\(5)"
msgstr ""

# 24b7ccee65a74304879c7771be3a54fb
#: install/index.rst:773
msgid ""
"On all platforms, the \"personal\" file can be temporarily disabled by "
"passing the `--no-user-cfg` option."
msgstr ""

# 2150ada6ac3d45a89c12a1bb28a2797a
#: install/index.rst:779
msgid ""
"Strictly speaking, the system-wide configuration file lives in the directory "
"where the Distutils are installed; under Python 1.6 and later on Unix, this "
"is as shown. For Python 1.5.2, the Distutils will normally be installed to :"
"file:`{prefix}/lib/python1.5/site-packages/distutils`, so the system "
"configuration file should be put there under Python 1.5.2."
msgstr ""

# 085d1fdb89a9486cbf9d75a5570f75dc
#: install/index.rst:786
msgid ""
"On Unix, if the :envvar:`HOME` environment variable is not defined, the "
"user's home directory will be determined with the :func:`getpwuid` function "
"from the standard :mod:`pwd` module. This is done by the :func:`os.path."
"expanduser` function used by Distutils."
msgstr ""

# 410d4d0d53d64b8581e97fbc0658882a
#: install/index.rst:792
msgid ""
"I.e., in the current directory (usually the location of the setup script)."
msgstr ""

# abffe80763dd46b1ab186380e1caf144
#: install/index.rst:795
msgid ""
"(See also note (1).)  Under Python 1.6 and later, Python's default "
"\"installation prefix\" is :file:`C:\\\\Python`, so the system configuration "
"file is normally :file:`C:\\\\Python\\\\Lib\\\\distutils\\\\distutils.cfg`. "
"Under Python 1.5.2, the default prefix was :file:`C:\\\\Program Files\\"
"\\Python`, and the Distutils were not part of the standard library---so the "
"system configuration file would be :file:`C:\\\\Program Files\\\\Python\\"
"\\distutils\\\\distutils.cfg` in a standard Python 1.5.2 installation under "
"Windows."
msgstr ""

# 531830b7cd4741a58e12a567df462521
#: install/index.rst:804
msgid ""
"On Windows, if the :envvar:`HOME` environment variable is not defined, :"
"envvar:`USERPROFILE` then :envvar:`HOMEDRIVE` and :envvar:`HOMEPATH` will be "
"tried. This is done by the :func:`os.path.expanduser` function used by "
"Distutils."
msgstr ""

# 35b2fbdeee4c4f338cb1595d8f0075f1
#: install/index.rst:813
msgid "Syntax of config files"
msgstr ""

# 5baa349d093649d7add18ae4c13a0f71
#: install/index.rst:815
msgid ""
"The Distutils configuration files all have the same syntax.  The config "
"files are grouped into sections.  There is one section for each Distutils "
"command, plus a ``global`` section for global options that affect every "
"command.  Each section consists of one option per line, specified as "
"``option=value``."
msgstr ""

# a4e93c067191469089f8f0d90e40a66b
#: install/index.rst:820
msgid ""
"For example, the following is a complete config file that just forces all "
"commands to run quietly by default::"
msgstr ""

# 5caeb7ce095b402dbdfa92956edbe90b
#: install/index.rst:826
msgid ""
"If this is installed as the system config file, it will affect all "
"processing of any Python module distribution by any user on the current "
"system.  If it is installed as your personal config file (on systems that "
"support them), it will affect only module distributions processed by you.  "
"And if it is used as the :file:`setup.cfg` for a particular module "
"distribution, it affects only that distribution."
msgstr ""

# 2cc99e7662c94b069bf6f326a7b2b534
#: install/index.rst:833
msgid ""
"You could override the default \"build base\" directory and make the :"
"command:`build\\*` commands always forcibly rebuild all files with the "
"following::"
msgstr ""

# 9aababbdc23f4ff388001e75dddacf12
#: install/index.rst:841
msgid "which corresponds to the command-line arguments ::"
msgstr ""

# 782b058c0a0b428b98a03ff787ac6991
#: install/index.rst:845
msgid ""
"except that including the :command:`build` command on the command-line means "
"that command will be run.  Including a particular command in config files "
"has no such implication; it only means that if the command is run, the "
"options in the config file will apply.  (Or if other commands that derive "
"values from it are run, they will use the values in the config file.)"
msgstr ""

# aa0173cff2ed4b91b0d4e184d9318f3a
#: install/index.rst:851
msgid ""
"You can find out the complete list of options for any command using the :"
"option:`--help` option, e.g.::"
msgstr ""

# 7316e1a1979c4f5198c1027fe99fc82b
#: install/index.rst:856
msgid ""
"and you can find out the complete list of global options by using :option:`--"
"help` without a command::"
msgstr ""

# 6b5af3871cd84c8aa0a99b6a45471fa1
#: install/index.rst:861
msgid ""
"See also the \"Reference\" section of the \"Distributing Python Modules\" "
"manual."
msgstr ""

# 69cba7f96c9944019bf2a189148520a8
#: install/index.rst:867
msgid "Building Extensions: Tips and Tricks"
msgstr ""

# b315f9ad359541c59e2f56c31954838d
#: install/index.rst:869
msgid ""
"Whenever possible, the Distutils try to use the configuration information "
"made available by the Python interpreter used to run the :file:`setup.py` "
"script. For example, the same compiler and linker flags used to compile "
"Python will also be used for compiling extensions.  Usually this will work "
"well, but in complicated situations this might be inappropriate.  This "
"section discusses how to override the usual Distutils behaviour."
msgstr ""

# f63db25d7c0741938a7611fd7e3921b5
#: install/index.rst:880
msgid "Tweaking compiler/linker flags"
msgstr ""

# 941b33bdaec84c398ad376817d080f7e
#: install/index.rst:882
msgid ""
"Compiling a Python extension written in C or C++ will sometimes require "
"specifying custom flags for the compiler and linker in order to use a "
"particular library or produce a special kind of object code. This is "
"especially true if the extension hasn't been tested on your platform, or if "
"you're trying to cross-compile Python."
msgstr ""

# 0340b11b4cd34696a7756cfaf49e75d6
#: install/index.rst:888
msgid ""
"In the most general case, the extension author might have foreseen that "
"compiling the extensions would be complicated, and provided a :file:`Setup` "
"file for you to edit.  This will likely only be done if the module "
"distribution contains many separate extension modules, or if they often "
"require elaborate sets of compiler flags in order to work."
msgstr ""

# ddba10e2b62548dc92d343b865dbfa80
#: install/index.rst:894
msgid ""
"A :file:`Setup` file, if present, is parsed in order to get a list of "
"extensions to build.  Each line in a :file:`Setup` describes a single "
"module.  Lines have the following structure::"
msgstr ""

# 08ea9e581f7049e097937f8459bf6641
#: install/index.rst:901
msgid "Let's examine each of the fields in turn."
msgstr ""

# 2d10ac1ef9cc4ae19fb0c09cb41f60fd
#: install/index.rst:903
msgid ""
"*module* is the name of the extension module to be built, and should be a "
"valid Python identifier.  You can't just change this in order to rename a "
"module (edits to the source code would also be needed), so this should be "
"left alone."
msgstr ""

# 4ef14745b4c947ce80a8e36563de2c64
#: install/index.rst:907
msgid ""
"*sourcefile* is anything that's likely to be a source code file, at least "
"judging by the filename.  Filenames ending in :file:`.c` are assumed to be "
"written in C, filenames ending in :file:`.C`, :file:`.cc`, and :file:`.c++` "
"are assumed to be C++, and filenames ending in :file:`.m` or :file:`.mm` are "
"assumed to be in Objective C."
msgstr ""

# 96f56e84f2cd4647b7936a3b80a8cfa1
#: install/index.rst:913
msgid ""
"*cpparg* is an argument for the C preprocessor,  and is anything starting "
"with :option:`-I`, :option:`-D`, :option:`-U` or :option:`-C`."
msgstr ""

# 24a2a11509cc4b44b933c32b9977eae9
#: install/index.rst:916
msgid ""
"*library* is anything ending in :file:`.a` or beginning with :option:`-l` "
"or :option:`-L`."
msgstr ""

# 27132f0ad6544266bad3dd335b8a206c
#: install/index.rst:919
msgid ""
"If a particular platform requires a special library on your platform, you "
"can add it by editing the :file:`Setup` file and running ``python setup.py "
"build``. For example, if the module defined by the line ::"
msgstr ""

# 4c4d2311144941adae02f7eda8ddbc28
#: install/index.rst:925
msgid ""
"must be linked with the math library :file:`libm.a` on your platform, simply "
"add :option:`-lm` to the line::"
msgstr ""

# ee1579abaa904a62bf30a742bbcb60db
#: install/index.rst:930
msgid ""
"Arbitrary switches intended for the compiler or the linker can be supplied "
"with the :option:`-Xcompiler` *arg* and :option:`-Xlinker` *arg* options::"
msgstr ""

# 10ebcf34fb774480815b38b90b5cb8a1
#: install/index.rst:935
msgid ""
"The next option after :option:`-Xcompiler` and :option:`-Xlinker` will be "
"appended to the proper command line, so in the above example the compiler "
"will be passed the :option:`-o32` option, and the linker will be passed :"
"option:`-shared`.  If a compiler option requires an argument, you'll have to "
"supply multiple :option:`-Xcompiler` options; for example, to pass ``-x c+"
"+`` the :file:`Setup` file would have to contain ``-Xcompiler -x -Xcompiler c"
"++``."
msgstr ""

# 68ab31313b654826a2ee3b682c8346be
#: install/index.rst:942
msgid ""
"Compiler flags can also be supplied through setting the :envvar:`CFLAGS` "
"environment variable.  If set, the contents of :envvar:`CFLAGS` will be "
"added to the compiler flags specified in the  :file:`Setup` file."
msgstr ""

# 35168fcb54434839bfc03e717e57df90
#: install/index.rst:950
msgid "Using non-Microsoft compilers on Windows"
msgstr ""

# 14264129e988482fba0beffeea3fce19
#: install/index.rst:957
msgid "Borland/CodeGear C++"
msgstr ""

# df66090f5f7d49baa72061256356e7cb
#: install/index.rst:959
msgid ""
"This subsection describes the necessary steps to use Distutils with the "
"Borland C++ compiler version 5.5.  First you have to know that Borland's "
"object file format (OMF) is different from the format used by the Python "
"version you can download from the Python or ActiveState Web site.  (Python "
"is built with Microsoft Visual C++, which uses COFF as the object file "
"format.) For this reason you have to convert Python's library :file:"
"`python25.lib` into the Borland format.  You can do this as follows:"
msgstr ""

# 778731d1cf7a445195ce7ca724ceb48d
#: install/index.rst:974
msgid ""
"The :file:`coff2omf` program comes with the Borland compiler.  The file :"
"file:`python25.lib` is in the :file:`Libs` directory of your Python "
"installation.  If your extension uses other libraries (zlib, ...) you have "
"to convert them too."
msgstr ""

# f1e8916286504f56b4e9870710b25a2b
#: install/index.rst:979
msgid ""
"The converted files have to reside in the same directories as the normal "
"libraries."
msgstr ""

# ef2b8ecb944448ecad1e4bb9de616b00
#: install/index.rst:982
msgid ""
"How does Distutils manage to use these libraries with their changed names?  "
"If the extension needs a library (eg. :file:`foo`) Distutils checks first if "
"it finds a library with suffix :file:`_bcpp` (eg. :file:`foo_bcpp.lib`) and "
"then uses this library.  In the case it doesn't find such a special library "
"it uses the default name (:file:`foo.lib`.) [#]_"
msgstr ""

# 402f3f4ea844491699f85c2e00886210
#: install/index.rst:988
msgid ""
"To let Distutils compile your extension with Borland C++ you now have to "
"type::"
msgstr ""

# 06f4aedf97da4c1faa4880b7707628a4
#: install/index.rst:992
msgid ""
"If you want to use the Borland C++ compiler as the default, you could "
"specify this in your personal or system-wide configuration file for "
"Distutils (see section :ref:`inst-config-files`.)"
msgstr ""

# de1ad9b7b4f940648bcfa88497db517c
#: install/index.rst:1001
msgid ""
"`C++Builder Compiler <http://www.codegear.com/downloads/free/cppbuilder>`_"
msgstr ""

# 67beb0e83b8240c8a27ce54940570d67
#: install/index.rst:1000
msgid ""
"Information about the free C++ compiler from Borland, including links to the "
"download pages."
msgstr ""

# bf2171506b83472eb87e488002495ab7
#: install/index.rst:1004
msgid ""
"`Creating Python Extensions Using Borland's Free Compiler <http://www."
"cyberus.ca/~g_will/pyExtenDL.shtml>`_"
msgstr ""

# c0c62221b4014788ab81bafdb0eaa634
#: install/index.rst:1004
msgid ""
"Document describing how to use Borland's free command-line C++ compiler to "
"build Python."
msgstr ""

# 2e98fc8b50814ce8b040565ead1c5ab3
#: install/index.rst:1009
msgid "GNU C / Cygwin / MinGW"
msgstr ""

# 2ac8bb86f58847f88fbc64d2ba295f60
#: install/index.rst:1011
msgid ""
"This section describes the necessary steps to use Distutils with the GNU C/C+"
"+ compilers in their Cygwin and MinGW distributions. [#]_ For a Python "
"interpreter that was built with Cygwin, everything should work without any "
"of these following steps."
msgstr ""

# 1bc79ab27e70436fb1691fde1a8563c9
#: install/index.rst:1016
msgid ""
"Not all extensions can be built with MinGW or Cygwin, but many can.  "
"Extensions most likely to not work are those that use C++ or depend on "
"Microsoft Visual C extensions."
msgstr ""

# 785e9c0cc33d41aa84a14071be032393
#: install/index.rst:1020
msgid "To let Distutils compile your extension with Cygwin you have to type::"
msgstr ""

# 97352e7d07714afbaf767c865ae496d8
#: install/index.rst:1024
msgid "and for Cygwin in no-cygwin mode [#]_ or for MinGW type::"
msgstr ""

# 11a522ebdc5440f2a3075878dc92ed85
#: install/index.rst:1028
msgid ""
"If you want to use any of these options/compilers as default, you should "
"consider writing it in your personal or system-wide configuration file for "
"Distutils (see section :ref:`inst-config-files`.)"
msgstr ""

# 02dcf1fc14784415bce7eb5c695433c1
#: install/index.rst:1033
msgid "Older Versions of Python and MinGW"
msgstr ""

# 6c75f3042a4f4f35b2eb3f1590434768
#: install/index.rst:1034
msgid ""
"The following instructions only apply if you're using a version of Python "
"inferior to 2.4.1 with a MinGW inferior to 3.0.0 (with "
"binutils-2.13.90-20030111-1)."
msgstr ""

# 56ebf792c0254b2aae8f805da71a8a11
#: install/index.rst:1038
msgid ""
"These compilers require some special libraries.  This task is more complex "
"than for Borland's C++, because there is no program to convert the library.  "
"First you have to create a list of symbols which the Python DLL exports. "
"(You can find a good program for this task at http://www.emmestech.com/"
"software/pexports-0.43/download_pexports.html)."
msgstr ""

# 9c4b9677f6544a8a87bd45645bf083eb
#: install/index.rst:1051
msgid ""
"The location of an installed :file:`python25.dll` will depend on the "
"installation options and the version and language of Windows.  In a \"just "
"for me\" installation, it will appear in the root of the installation "
"directory.  In a shared installation, it will be located in the system "
"directory."
msgstr ""

# d119faa28e814cdb84c17beda06a285f
#: install/index.rst:1056
msgid ""
"Then you can create from these information an import library for gcc. ::"
msgstr ""

# 494d4aee4fb14b78b8f74fe48c9724c5
#: install/index.rst:1060
msgid ""
"The resulting library has to be placed in the same directory as :file:"
"`python25.lib`. (Should be the :file:`libs` directory under your Python "
"installation directory.)"
msgstr ""

# 790a839d43804e2886e743d318cb6dc0
#: install/index.rst:1064
msgid ""
"If your extension uses other libraries (zlib,...) you might  have to convert "
"them too. The converted files have to reside in the same directories as the "
"normal libraries do."
msgstr ""

# a7f5bf9eb53245baa69514c6d51caee4
#: install/index.rst:1071
msgid ""
"`Building Python modules on MS Windows platform with MinGW <http://www.zope."
"org/Members/als/tips/win32_mingw_modules>`_"
msgstr ""

# 5e681927d9f9419fa095a8d99b7ab5a5
#: install/index.rst:1072
msgid ""
"Information about building the required libraries for the MinGW environment."
msgstr ""

# 16580783ec1b4839b951c44c13029a47
#: install/index.rst:1076
msgid "Footnotes"
msgstr "Notes"

# 212d1223d91c46f1849e278ee3dffcf4
#: install/index.rst:1077
msgid ""
"This also means you could replace all existing COFF-libraries with OMF-"
"libraries of the same name."
msgstr ""

# 26c3f398de3b4818846303293b35cc7d
#: install/index.rst:1080
msgid ""
"Check http://sources.redhat.com/cygwin/ and http://www.mingw.org/ for more "
"information"
msgstr ""

# f36e8dba8d93400da33b7a5a3d886b2e
#: install/index.rst:1083
msgid ""
"Then you have no POSIX emulation available, but you also don't need :file:"
"`cygwin1.dll`."
msgstr ""
