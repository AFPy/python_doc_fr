# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2015, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-20 13:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# 172afef1734f491a9a0c7f41fbe48fd8
#: distutils/apiref.rst:5
msgid "API Reference"
msgstr "Référence de l'API"

# 27b3495eb0a846e98c9a1fb2183203e6
#: distutils/apiref.rst:9
msgid ":mod:`distutils.core` --- Core Distutils functionality"
msgstr ""

# 3ee21479feab4c609ac79da30528d177
#: distutils/apiref.rst:15
msgid ""
"The :mod:`distutils.core` module is the only module that needs to be "
"installed to use the Distutils. It provides the :func:`setup` (which is "
"called from the setup script). Indirectly provides the  :class:`distutils."
"dist.Distribution` and :class:`distutils.cmd.Command` class."
msgstr ""
"Le module :mod:`distutils.core` est le seul module qui a besoin d'être "
"installé pour utiliser Distutils. Il fournit le :func:`setup` (qui est "
"appelé par le script de setup). Il fournit indirectement les classes :class:"
"`distutils.dist.Distribution` et :class:`distutils.cmd.Command`."

# fe9e78da272541e881b399a5188be78c
#: distutils/apiref.rst:23
msgid ""
"The basic do-everything function that does most everything you could ever "
"ask for from a Distutils method."
msgstr ""
"La fonction de base à tout faire qui fait presque tout ce dont vous pourriez "
"attendre d'une méthode Distutils. Voir XXXXX"

# ecf06a9913024cc099588ecf13930982
#: distutils/apiref.rst:26
msgid ""
"The setup function takes a large number of arguments. These are laid out in "
"the following table."
msgstr ""
"La fonction setup prend un grand nombre d'arguments. Ils sont présentés dans "
"le tableau suivant."

# d2b888ca12f844b2b1ede777c5df6ec1
# 42ca91259fa24e53ad4807222d69a8c8
#: distutils/apiref.rst:30 distutils/apiref.rst:169
msgid "argument name"
msgstr "nom de l'argument"

# 1dcfe066d69348308b66874dc8bf697c
# cc5b020251ba45d6b95dc394816e3db7
# 7c927ea7803a45fa8704806a4984b91c
#: distutils/apiref.rst:30 distutils/apiref.rst:129 distutils/apiref.rst:169
msgid "value"
msgstr "valeur"

# 58305b6af6d04f0aa05befc6f5657564
# 7625d90465ab471dacd25a6c1281926f
#: distutils/apiref.rst:30 distutils/apiref.rst:169
msgid "type"
msgstr "type"

# ff6fbc6364484c6aad990e3a84e8e3c7
# ea35177d0b674a51a01c18878e4ced70
#: distutils/apiref.rst:32 distutils/apiref.rst:171
msgid "*name*"
msgstr "*name*"

# 5c9002b5880649b39288ed71dda71ea5
#: distutils/apiref.rst:32
msgid "The name of the package"
msgstr "Le nom du paquet"

# 0b3b791ed5f0440d88558ccddb4c7507
# 0038780e4da14e1f9ad93937491ec335
# b5e769997fca476aada9bc8519022850
# e70f2ad7e58044caa1077663e845644d
# 57d86c77ddaf49978715e992d83649ee
# 7a77c309641548d1b8676268f2481544
# 6a0da7f2376c422b84a7b044455f0945
# 09ac98d350794671b9b87ca5e208f397
# 04dcb08112b64bb2847bd1d192c38b84
# 2bb9b88c698a4affae008a3e9473b534
# f0a50fc331c24d54b8ddeaf6deb267e8
# 8eeaa187c78f452386137f83e61c2710
# bb9155edfbd9404eaaa9f9d7121c157a
# 6137242f5f6e43da9bb82ba2573a7226
#: distutils/apiref.rst:32 distutils/apiref.rst:34 distutils/apiref.rst:38
#: distutils/apiref.rst:41 distutils/apiref.rst:44 distutils/apiref.rst:46
#: distutils/apiref.rst:49 distutils/apiref.rst:56 distutils/apiref.rst:60
#: distutils/apiref.rst:63 distutils/apiref.rst:84 distutils/apiref.rst:94
#: distutils/apiref.rst:171 distutils/apiref.rst:261
msgid "a string"
msgstr "une chaîne de caractères"

# dcf710e8bdc4489bb9890eb40bc9a26a
#: distutils/apiref.rst:34
msgid "*version*"
msgstr "*version*"

# 2621c1214f884b4d8eaf06f2bf5aff1d
#: distutils/apiref.rst:34
msgid "The version number of the package; see :mod:`distutils.version`"
msgstr "Le numéro de version du paquet"

# 097b26d32a584c01b4f19512e85b5066
#: distutils/apiref.rst:38
msgid "*description*"
msgstr "*description*"

# 3087a4dacbcf45be904723ba36ccb5e6
#: distutils/apiref.rst:38
msgid "A single line describing the package"
msgstr "Une ligne unique décrivant le paquet"

# 4bbbf746d8c84510bad417d0a3b699a6
#: distutils/apiref.rst:41
msgid "*long_description*"
msgstr "*long_description*"

# 795d26d5ee434f2caa54cd10bd53d9d8
#: distutils/apiref.rst:41
msgid "Longer description of the package"
msgstr "Une description plus longue du paquet"

# 5dcc172aa70a48a3858ded7ebef8f4e3
#: distutils/apiref.rst:44
msgid "*author*"
msgstr "*author*"

# 16e6e171eb104b5a933dfc43f30bdaec
#: distutils/apiref.rst:44
msgid "The name of the package author"
msgstr "Le nom de l'auteur du paquet"

# d2d631edeeeb4fe09d46dc5c5769d766
#: distutils/apiref.rst:46
msgid "*author_email*"
msgstr "*author_email*"

# 0a0b2328fe5046f3bc2199714ae1637a
#: distutils/apiref.rst:46
msgid "The email address of the package author"
msgstr "L'adresse e-mail de l'auteur du paquet"

# 9c89d240aebc4e69bac27d66bbb670ed
#: distutils/apiref.rst:49
msgid "*maintainer*"
msgstr "*maintainer*"

# 40082c4fa84743a299f06539c856f13e
#: distutils/apiref.rst:49
msgid ""
"The name of the current maintainer, if different from the author. Note that "
"if the maintainer is provided, distutils will use it as the author in :file:"
"`PKG-INFO`"
msgstr ""

# 6a8d58d4b08b4633a34d35f8839ccaa8
#: distutils/apiref.rst:56
msgid "*maintainer_email*"
msgstr "*maintainer_email*"

# 88d72d1a36b2409ba94b5392c85c668b
#: distutils/apiref.rst:56
msgid ""
"The email address of the current maintainer, if different from the author"
msgstr "L'adresse email de l'actuel mainteneur, si différent de l'auteur"

# 633f3a67f18441fca9038ebd88a552e8
#: distutils/apiref.rst:60
msgid "*url*"
msgstr "*url*"

# 51b7eeffb11041ac982e04990a963849
#: distutils/apiref.rst:60
msgid "A URL for the package (homepage)"
msgstr "Une URL pour le paquet (page d'accueil)"

# d91f9bc89ca347a1a54b0ca1dd28460b
#: distutils/apiref.rst:63
msgid "*download_url*"
msgstr "*download_url*"

# 1ab613227293442c8a7c7ca113247cd6
#: distutils/apiref.rst:63
msgid "A URL to download the package"
msgstr "Une URL pour télécharger le paquet"

# 2e04c5c145214a44a13cb47a0213404c
#: distutils/apiref.rst:65
msgid "*packages*"
msgstr "*packages*"

# 6b97a59882054b5c916743733c79b223
#: distutils/apiref.rst:65
msgid "A list of Python packages that distutils will manipulate"
msgstr "Une liste des paquets Python que distutils va manipuler"

# 32426b04712947dbadad042376ff6a70
# 611b8eb5c8704873a0713eb5e6efe782
# c070c1954e6a43c88e4224bc132d80b2
# cb9993e0835b4522bbb2c4ad17cb49ab
# efda21fdf96c427796d0fc2f3a15c783
# f1545928377a4e1e861969373ed5cbcf
# 08c582765dee4462a93b0ed337bbbbe6
# 3b9ee29da84b4272854ec36d033b31bf
# 5c35e0ff29fa40399d11e222fc9f9cc9
# 3e4260303cc549749854f8bef927a313
# 264bba29f1184a9287d37f607a560397
# 26fb946d4dfe43e6b8deea455e5c67f9
# 24db3e05f37c474db3e43da478bc9b20
# 21a6e43453a04e7d84b2bfa6e40ad39a
# cd400b23f5f74f8cbb3f0c048360ae5a
#: distutils/apiref.rst:65 distutils/apiref.rst:68 distutils/apiref.rst:71
#: distutils/apiref.rst:88 distutils/apiref.rst:177 distutils/apiref.rst:190
#: distutils/apiref.rst:206 distutils/apiref.rst:209 distutils/apiref.rst:213
#: distutils/apiref.rst:217 distutils/apiref.rst:223 distutils/apiref.rst:230
#: distutils/apiref.rst:241 distutils/apiref.rst:250 distutils/apiref.rst:258
msgid "a list of strings"
msgstr "une liste de chaînes"

# 480549d4cb054e0e8329092e738120c1
#: distutils/apiref.rst:68
msgid "*py_modules*"
msgstr "*py_modules*"

# f541ba1a5b89432899b803a44cf4130f
#: distutils/apiref.rst:68
msgid "A list of Python modules that distutils will manipulate"
msgstr "Une liste de modules Python que distutils va manipuler"

# 787efe9990374bb8989c4850b6934eed
#: distutils/apiref.rst:71
msgid "*scripts*"
msgstr "*scripts*"

# 20d9a3d1784845b08d693ca32a707b1e
#: distutils/apiref.rst:71
msgid "A list of standalone script files to be built and installed"
msgstr "Une liste de scripts autonomes à construire et à installer"

# 07954b3f212f41dda91c28e576ed75aa
#: distutils/apiref.rst:75
msgid "*ext_modules*"
msgstr "*ext_modules*"

# 93b7c1d946d74eb595404d3a8dca7c9e
#: distutils/apiref.rst:75
msgid "A list of Python extensions to be built"
msgstr "Une liste des extensions Python à construire"

# d53bfaf8f8a74d2eb726b9c9dc2c5c29
#: distutils/apiref.rst:75
msgid "a list of instances of :class:`distutils.core.Extension`"
msgstr "Une liste d'instances de :class:`distutils.core.Extension'"

# ed87004e8e3d4a6fa58a1304c01996a8
#: distutils/apiref.rst:78
msgid "*classifiers*"
msgstr "*classifiers*"

# 0e6d131000414cbab61345130cff1d49
#: distutils/apiref.rst:78
msgid "A list of categories for the package"
msgstr "Une liste de catégories pour le paquet"

# 7c25ff026f004575bc77d995489a8195
#: distutils/apiref.rst:78
msgid ""
"a list of strings; valid classifiers are listed on `PyPI <http://pypi.python."
"org/pypi?:action=list_classifiers>`_."
msgstr ""

# 55cb260fb3ee46c5a92a81be8719e639
#: distutils/apiref.rst:81
msgid "*distclass*"
msgstr "*distclass*"

# 5b4a5cdd67ae432ba446f6506dd35ef3
#: distutils/apiref.rst:81
msgid "the :class:`Distribution` class to use"
msgstr "la classe :class:`Distribution` à utiliser"

# 0f97eb084ae743c29463989a4170728d
#: distutils/apiref.rst:81
msgid "a subclass of :class:`distutils.core.Distribution`"
msgstr "Une sous classe de :class:`distutils.core.Distribution`"

# 9d0a1f421cc14f83b850a8bb77acf9be
#: distutils/apiref.rst:84
msgid "*script_name*"
msgstr "*script_name*"

# ea52679762c642a5817b69acf7c86c5c
#: distutils/apiref.rst:84
msgid "The name of the setup.py script - defaults to ``sys.argv[0]``"
msgstr ""

# c9278a3821a04617aa5f18a97aba754e
#: distutils/apiref.rst:88
msgid "*script_args*"
msgstr "*script_args*"

# 2cdd9f23ce5942c3a47da23d5f50b526
#: distutils/apiref.rst:88
msgid "Arguments to supply to the setup script"
msgstr "Arguments à fournir au script d'installation"

# ca8271fded1a4d1db51cc64da1ba7524
#: distutils/apiref.rst:91
msgid "*options*"
msgstr "*options*"

# d2dd836d549645f28c1e2dc1f3579405
#: distutils/apiref.rst:91
msgid "default options for the setup script"
msgstr "options par défaut pour le script d'installation"

# 3a8b1220063e45b8bf7105056cedf68a
# e511dc90c2b64ae6b19ed4168e7a15a3
# ddd6b9830c6b4036a8f9cc764936e348
#: distutils/apiref.rst:91 distutils/apiref.rst:101 distutils/apiref.rst:107
msgid "a dictionary"
msgstr "un dictionnaire"

# 4cdb7e0e59fc4d828a217db49fad2439
#: distutils/apiref.rst:94
msgid "*license*"
msgstr "*license*"

# 113dac6ffba5404ea587f488f2c902ec
#: distutils/apiref.rst:94
msgid "The license for the package"
msgstr "La licence pour le paquet"

# 5d7075bc017e470285d8e5f678e22836
#: distutils/apiref.rst:96
msgid "*keywords*"
msgstr "*keywords*"

# 07bc755880f34f04819dd004fe7b5572
#: distutils/apiref.rst:96
msgid "Descriptive meta-data, see :pep:`314`"
msgstr "Méta-données descriptives, voir :pep:`314`"

# 9c6f5e92af97464a93a37f511741661c
# f22c7e3ab4d940fc897b566c4adf107f
#: distutils/apiref.rst:96 distutils/apiref.rst:99
msgid "a list of strings or a comma-separated string"
msgstr ""

# 37a1ca063a504233b5fb4862482f785f
#: distutils/apiref.rst:99
msgid "*platforms*"
msgstr "*platforms*"

# 8b93af62dd3b4f9e92bd4e52a8c4023d
#: distutils/apiref.rst:101
msgid "*cmdclass*"
msgstr "*cmdclass*"

# 0fd4f8e2719b463f936638480b12ccdf
#: distutils/apiref.rst:101
msgid "A mapping of command names to :class:`Command` subclasses"
msgstr "Un mapping des noms de commandes et des sous-classes :class:`Command`"

# 8d4461263c094fc4bbc93315aa6975a0
#: distutils/apiref.rst:104
msgid "*data_files*"
msgstr "*data_files*"

# 737322fe58f34553896617a43d00a6ac
#: distutils/apiref.rst:104
msgid "A list of data files to install"
msgstr "Une liste de fichiers de données à installer"

# a1888aa3104942e2b14b16d5e0362574
#: distutils/apiref.rst:104
msgid "a list"
msgstr "une liste"

# 1b39767cadc549ba8c16a9aa87dbd720
#: distutils/apiref.rst:107
msgid "*package_dir*"
msgstr "*package_dir*"

# 11d3d6c73bb94a72a323c2e10ad89713
#: distutils/apiref.rst:107
msgid "A mapping of package to directory names"
msgstr "Un mapping des paquets et des noms de dossiers"

# bacb42d0931f4b6cb6fa3ae8763bc3d6
#: distutils/apiref.rst:115
msgid ""
"Run a setup script in a somewhat controlled environment, and return  the :"
"class:`distutils.dist.Distribution` instance that drives things.   This is "
"useful if you need to find out the distribution meta-data  (passed as "
"keyword args from *script* to :func:`setup`), or  the contents of the config "
"files or command-line."
msgstr ""

# 24815670b83242cd8b14e751c2e58514
#: distutils/apiref.rst:121
msgid ""
"*script_name* is a file that will be read and run with :func:`exec`.  ``sys."
"argv[0]`` will be replaced with *script* for the duration of the call.  "
"*script_args* is a list of strings; if supplied, ``sys.argv[1:]`` will be "
"replaced by *script_args* for the duration  of the call."
msgstr ""
"*script_name* est un fichier qui sera lu et exécuté avec :func:`exec`. ``sys."
"argv[0]`` sera remplacé par *script* par la durée de l'appel. *script_args* "
"est une liste de chaînes; si fourni, ``sys.argv[1:]`` sera remplacé par "
"*script_args* pour la durée de l'appel."

# f91bb3699e78458e94ae5130e26f7dcc
#: distutils/apiref.rst:126
msgid ""
"*stop_after* tells :func:`setup` when to stop processing; possible  values:"
msgstr "*stop_after* dit à :func:`setup` quand s'arrêter; valeurs possibles:"

# 9a0a121d25a74d5c8da837adf3f18052
# b30ad88cb35a496b8e25406e35dc2ba9
# 892121616e0b4b79ad3520317aeae2cb
#: distutils/apiref.rst:129 distutils/apiref.rst:536 distutils/apiref.rst:1567
msgid "description"
msgstr "description"

# f487a9f34409465287e1f9f4bb25cf30
#: distutils/apiref.rst:131
msgid "*init*"
msgstr "*init*"

# e3c3695ea1274e2a89e387f141c87945
#: distutils/apiref.rst:131
msgid ""
"Stop after the :class:`Distribution` instance has been created  and "
"populated with the keyword arguments to :func:`setup`"
msgstr ""
"S'arrête une fois que l'instance :class:`Distribution` a été créée et "
"renseignée avec les arguments-clés de :func:`setup`"

# cd653ec9b591437eb87f833c2e249445
#: distutils/apiref.rst:135
msgid "*config*"
msgstr "*config*"

# 1be996f80b624b0591b3811d0ddcc548
#: distutils/apiref.rst:135
msgid ""
"Stop after config files have been parsed (and their data stored in the :"
"class:`Distribution` instance)"
msgstr ""
"S'arrête une fois que les fichiers de configuration ont été parcouru (et que "
"leurs données ont été stockées dans l'instance :class:`Distribution`)"

# 5e1c3bce214a435986535a3705d51eae
#: distutils/apiref.rst:139
msgid "*commandline*"
msgstr "*commandline*"

# 4f799d0a45384aa1a53a7f2f981da4fe
#: distutils/apiref.rst:139
msgid ""
"Stop after the command-line (``sys.argv[1:]`` or  *script_args*) have been "
"parsed (and the data stored in the :class:`Distribution` instance.)"
msgstr ""
"S'arrête une fois que la ligne de commande (``sys.argv[1:]`` ou "
"*script_args*) a été parcouru (et les données stockées dans l'instance :"
"class:`Distribution`)"

# d85d3217f65146d3aaed8db47d8e8359
#: distutils/apiref.rst:144
msgid "*run*"
msgstr "*run*"

# ec9876cf0b554b94a1eade37a17bfa02
#: distutils/apiref.rst:144
msgid ""
"Stop after all commands have been run (the same as  if :func:`setup` had "
"been called in the usual way). This is the default value."
msgstr ""
"S'arrête une fois que toutes les commandes ont été exécutées (comme si :func:"
"`setup` fût appelé de la manière habituelle). Ceci est la valeur par défaut."

# 041c0cced54948c7a9acb3481aa173a2
#: distutils/apiref.rst:150
msgid ""
"In addition, the :mod:`distutils.core` module exposed a number of  classes "
"that live elsewhere."
msgstr ""
"De plus, le module :mod:`distutils.core` a exposé un nombre de classe qui "
"existent ailleurs."

# 53a57db8b30647449025388edec69ae0
#: distutils/apiref.rst:153
msgid ":class:`~distutils.extension.Extension` from :mod:`distutils.extension`"
msgstr ":class:`Extension` de :mod:`distutils.extension`"

# 1f5abaed439846919601a9d3b1711028
#: distutils/apiref.rst:155
msgid ":class:`~distutils.cmd.Command` from :mod:`distutils.cmd`"
msgstr ":class:`Command` de :mod:`distutils.cmd`"

# e50d2a2c1ded43179ec7c4966f2351eb
#: distutils/apiref.rst:157
msgid ":class:`~distutils.dist.Distribution` from :mod:`distutils.dist`"
msgstr ":class:`Distribution` de :mod:`distutils.dist`"

# ad451459067e43ef8b57b84c58d13540
#: distutils/apiref.rst:159
msgid ""
"A short description of each of these follows, but see the relevant module "
"for the full reference."
msgstr ""
"Une courte description de chacune d'elle suit, mais consultez le module "
"concerné pour une référence complète."

# 475442e7bf4d40f48442ae97d5a94ad7
#: distutils/apiref.rst:165
msgid ""
"The Extension class describes a single C or C++extension module in a setup "
"script. It accepts the following keyword arguments in its constructor"
msgstr ""
"La class Extension décrit un seul module d'extension C ou C++ dans un script "
"d'installation. Elle accepte dans son constructeur les arguments-clés "
"suivants"

# b903da9407fa485593b41b42d580fe36
#: distutils/apiref.rst:171
msgid ""
"the full name of the extension, including any packages --- ie. *not* a "
"filename or pathname, but Python dotted name"
msgstr ""
"le nom complet de l'extension, incluant n'importe quel paquet --- c-à-d "
"*pas* un nom de fichier ou de chemin mais un nom Python séparé par des points"

# 5a259e1e58d94ec8ac1f0e4fe3750bc0
#: distutils/apiref.rst:177
msgid "*sources*"
msgstr "*sources*"

# 7d2997ff1b8d478aa350a8567a045b90
#: distutils/apiref.rst:177
msgid ""
"list of source filenames, relative to the distribution root (where the setup "
"script lives), in Unix form (slash- separated) for portability. Source files "
"may be C, C++, SWIG (.i), platform-specific resource files, or whatever else "
"is recognized by the :command:`build_ext` command as source for a Python "
"extension."
msgstr ""
"listes des noms de fichier des sources, relatifs à la racine de la "
"distribution (où est placé le script setup), dans un format Unix (séparé par "
"des slashs) dans un souci de portabilité. Les fichiers de code source "
"peuvent être du C, C++, SWIG (.i), des fichiers de ressources spécifiques à "
"la plateforme ou tout autre reconnu par la commande :command:`build_ext` "
"comme source d'une extension Python"

# 44828e21fae24a67bfdbe916461024db
#: distutils/apiref.rst:190
msgid "*include_dirs*"
msgstr ""

# 7f9eb7bbb7f04e57987e9292d64a6509
#: distutils/apiref.rst:190
msgid ""
"list of directories to search for C/C++ header files (in Unix form for "
"portability)"
msgstr ""
"liste des répertoires où chercher les fichiers d'entêtes C/C++ (en format "
"Unix dans un souci de portabilité)"

# 3e74837d882448bbbc608c5bfeff69f1
#: distutils/apiref.rst:194
msgid "*define_macros*"
msgstr "*define_macros*"

# af9732ba71474669864ec2e949d16928
#: distutils/apiref.rst:194
msgid ""
"list of macros to define; each macro is defined using a 2-tuple ``(name, "
"value)``, where *value* is either the string to define it to or ``None`` to "
"define it without a particular value (equivalent of ``#define FOO`` in "
"source or :option:`-DFOO` on Unix C compiler command line)"
msgstr ""

# af5f64dd0e4b4341b61c43513a1bc3b3
#: distutils/apiref.rst:194
msgid "a list of tuples"
msgstr "une liste de chaînes"

# 38aff3b2ec8b4ba9b506e99b13365784
#: distutils/apiref.rst:206
msgid "*undef_macros*"
msgstr "*undef_macros*"

# f26fdcb54ef04626b84d2189da3f3ffe
#: distutils/apiref.rst:206
msgid "list of macros to undefine explicitly"
msgstr ""

# fa1c54c11eb04de39f61ec959c7d38b0
#: distutils/apiref.rst:209
msgid "*library_dirs*"
msgstr ""

# 443edc93476e49d7ae65581996b271db
#: distutils/apiref.rst:209
msgid "list of directories to search for C/C++ libraries at link time"
msgstr ""

# 181a712befda4b82b6e83c53f8dbc88e
#: distutils/apiref.rst:213
msgid "*libraries*"
msgstr ""

# d41009be1d8f41e79f031becdf77d7a7
#: distutils/apiref.rst:213
msgid "list of library names (not filenames or paths) to link against"
msgstr ""

# 87342378a70549d1b4be316fc71f21b7
#: distutils/apiref.rst:217
msgid "*runtime_library_dirs*"
msgstr ""

# 28c5e936c87041eb8296d57af0737147
#: distutils/apiref.rst:217
msgid ""
"list of directories to search for C/C++ libraries at run time (for shared "
"extensions, this is when the extension is loaded)"
msgstr ""

# 6f5ca5fcb69b4cabbeee1fbc41438cbb
#: distutils/apiref.rst:223
msgid "*extra_objects*"
msgstr ""

# 9eecae203509438d9f473b02778a098e
#: distutils/apiref.rst:223
msgid ""
"list of extra files to link with (eg. object files not implied by 'sources', "
"static library that must be explicitly specified, binary resource files, "
"etc.)"
msgstr ""

# 4cec6ee7daa044f485969b4ed55be441
#: distutils/apiref.rst:230
msgid "*extra_compile_args*"
msgstr ""

# 8a05b32f087a408092e122d432f0551d
#: distutils/apiref.rst:230
msgid ""
"any extra platform- and compiler-specific information to use when compiling "
"the source files in 'sources'. For platforms and compilers where a command "
"line makes sense, this is typically a list of command-line arguments, but "
"for other platforms it could be anything."
msgstr ""

# d8a0a3883aa64958b0cbe45f01fd6202
#: distutils/apiref.rst:241
msgid "*extra_link_args*"
msgstr ""

# 93d78cde6d3f4d1f959aaaa11c3e5e78
#: distutils/apiref.rst:241
msgid ""
"any extra platform- and compiler-specific information to use when linking "
"object files together to create the extension (or to create a new static "
"Python interpreter). Similar interpretation as for 'extra_compile_args'."
msgstr ""

# db9c6a4eb7d74ba0a25bbbb814175b99
#: distutils/apiref.rst:250
msgid "*export_symbols*"
msgstr ""

# 0cfa74821331457f8ea89d5480db4b3e
#: distutils/apiref.rst:250
msgid ""
"list of symbols to be exported from a shared extension. Not used on all "
"platforms, and not generally necessary for Python extensions, which "
"typically export exactly one symbol: ``init`` + extension_name."
msgstr ""

# 1597f14a32c148d1bad111af21c956f5
#: distutils/apiref.rst:258
msgid "*depends*"
msgstr ""

# 0dc18d48f1824b9bbd7471a4b8b495ef
#: distutils/apiref.rst:258
msgid "list of files that the extension depends on"
msgstr "liste des fichiers dont dépend l'extension"

# c230eac28a0245859e4cb755f7d29527
#: distutils/apiref.rst:261
msgid "*language*"
msgstr ""

# db0cb715b7c7417b95611e6866652740
#: distutils/apiref.rst:261
msgid ""
"extension language (i.e. ``'c'``, ``'c++'``, ``'objc'``). Will be detected "
"from the source extensions if not provided."
msgstr ""
"langage de l'extension (par exemple ``'c'``, ``'c++'``, ``'objc'``). Il sera "
"détecté selon l'extension de la source s'il n'est pas précisé."

# b050d10070f346559db135e5eb2633dd
#: distutils/apiref.rst:267
msgid "*optional*"
msgstr "*options*"

# d3bdcae492564b588282e60964fa471d
#: distutils/apiref.rst:267
msgid ""
"specifies that a build failure in the extension should not abort the build "
"process, but simply skip the extension."
msgstr ""

# c86666828a894ee187465852c2534e04
#: distutils/apiref.rst:267
msgid "a boolean"
msgstr ""

# 29bd22dbfa9043b08f0a48c05695955a
#: distutils/apiref.rst:276
msgid ""
"A :class:`Distribution` describes how to build, install and package up a "
"Python software package."
msgstr ""

# ecfc62ed132047d1820e500afac30b9b
#: distutils/apiref.rst:279
msgid ""
"See the :func:`setup` function for a list of keyword arguments accepted  by "
"the Distribution constructor. :func:`setup` creates a Distribution instance."
msgstr ""

# 91b5261d201243028548c9e71d2f14cc
#: distutils/apiref.rst:285
msgid ""
"A :class:`Command` class (or rather, an instance of one of its subclasses) "
"implement a single distutils command."
msgstr ""

# c6feafdd2b2346f3bc711aa02525d893
#: distutils/apiref.rst:290
msgid ":mod:`distutils.ccompiler` --- CCompiler base class"
msgstr ""

# 248fb394b7ff46f88ad5acf35e29cd6f
#: distutils/apiref.rst:296
msgid ""
"This module provides the abstract base class for the :class:`CCompiler` "
"classes.  A :class:`CCompiler` instance can be used for all the compile  and "
"link steps needed to build a single project. Methods are provided to  set "
"options for the compiler --- macro definitions, include directories,  link "
"path, libraries and the like."
msgstr ""

# 54621204a7d24f368534ba9a4c6b7322
#: distutils/apiref.rst:302
msgid "This module provides the following functions."
msgstr "Ce module fournit les fonctions suivantes."

# 8a81e6f7b4804e27a89cffa80d9f4b9f
#: distutils/apiref.rst:307
msgid ""
"Generate linker options for searching library directories and linking with "
"specific libraries.  *libraries* and *library_dirs* are, respectively, lists "
"of library names (not filenames!) and search directories.  Returns a list of "
"command-line options suitable for use with some compiler (depending on the "
"two format strings passed in)."
msgstr ""

# bef5ec1b35504158bc8c7eae32d2552a
#: distutils/apiref.rst:316
msgid ""
"Generate C pre-processor options (:option:`-D`, :option:`-U`, :option:`-I`) "
"as used by at least two types of compilers: the typical Unix compiler and "
"Visual C++. *macros* is the usual thing, a list of 1- or 2-tuples, where "
"``(name,)`` means undefine (:option:`-U`) macro *name*, and ``(name, "
"value)`` means define (:option:`-D`) macro *name* to *value*.  "
"*include_dirs* is just a list of directory names to be added to the header "
"file search path (:option:`-I`). Returns a list of command-line options "
"suitable for either Unix compilers or Visual C++."
msgstr ""

# 4d3ce5c514e94397a260acce0aa799c0
#: distutils/apiref.rst:328
msgid "Determine the default compiler to use for the given platform."
msgstr ""
"Détermine le compilateur par défaut a utiliser par une plateforme donnée"

# 438b8686f10d442498712d790ef14f4b
#: distutils/apiref.rst:330
msgid ""
"*osname* should be one of the standard Python OS names (i.e. the ones "
"returned by ``os.name``) and *platform* the common value returned by ``sys."
"platform`` for the platform in question."
msgstr ""

# 73d09d8218704975aee9e0ef93ba6abf
#: distutils/apiref.rst:334
msgid ""
"The default values are ``os.name`` and ``sys.platform`` in case the "
"parameters are not given."
msgstr ""
"Les valeurs par défaut sont ``os.name`` et ``sys.platform`` si les "
"paramètres ne sont pas fournis."

# c8a3d4adc4f04fb4b07f52a009a36951
#: distutils/apiref.rst:340
msgid ""
"Factory function to generate an instance of some CCompiler subclass for the "
"supplied platform/compiler combination. *plat* defaults to ``os.name`` (eg. "
"``'posix'``, ``'nt'``), and *compiler*  defaults to the default compiler for "
"that platform. Currently only ``'posix'`` and ``'nt'`` are supported, and "
"the default compilers are \"traditional Unix interface\" (:class:"
"`UnixCCompiler` class) and Visual C++ (:class:`MSVCCompiler` class).  Note "
"that it's perfectly possible to ask for a Unix compiler object under "
"Windows, and a Microsoft compiler object under Unix---if you supply a value "
"for *compiler*, *plat* is ignored."
msgstr ""

# 6a9445f34fc942fb98b7ee5f9c9787f8
#: distutils/apiref.rst:356
msgid ""
"Print list of available compilers (used by the :option:`--help-compiler` "
"options to :command:`build`, :command:`build_ext`, :command:`build_clib`)."
msgstr ""

# 4ede7c44fffc41f7ad7701de34319de0
#: distutils/apiref.rst:362
msgid ""
"The abstract base class :class:`CCompiler` defines the interface that  must "
"be implemented by real compiler classes.  The class also has  some utility "
"methods used by several compiler classes."
msgstr ""

# 6b398c71d631426c9f952f9ddbf085df
#: distutils/apiref.rst:366
msgid ""
"The basic idea behind a compiler abstraction class is that each instance can "
"be used for all the compile/link steps in building a single project.  Thus, "
"attributes common to all of those compile and link steps --- include "
"directories, macros to define, libraries to link against, etc. --- are "
"attributes of the compiler instance.  To allow for variability in how "
"individual files are treated, most of those attributes may be varied on a "
"per-compilation or per-link basis."
msgstr ""

# 1bdd1ce7d3124016a5e9387735afe61c
#: distutils/apiref.rst:374
msgid ""
"The constructor for each subclass creates an instance of the Compiler "
"object. Flags are *verbose* (show verbose output), *dry_run* (don't actually "
"execute the steps) and *force* (rebuild everything, regardless of "
"dependencies). All of these flags default to ``0`` (off). Note that you "
"probably don't want to instantiate :class:`CCompiler` or one of its "
"subclasses directly - use the :func:`distutils.CCompiler.new_compiler` "
"factory function instead."
msgstr ""

# 7ebe40ddd53446298f870bf0901c84cb
#: distutils/apiref.rst:381
msgid ""
"The following methods allow you to manually alter compiler options for  the "
"instance of the Compiler class."
msgstr ""

# 081ec8e949714a6ca3d7917f06f85b40
#: distutils/apiref.rst:387
msgid ""
"Add *dir* to the list of directories that will be searched for header files. "
"The compiler is instructed to search directories in the order in which they "
"are supplied by successive calls to :meth:`add_include_dir`."
msgstr ""

# 9ea45abf29b74acfbe9c59b59502bdc8
#: distutils/apiref.rst:394
msgid ""
"Set the list of directories that will be searched to *dirs* (a list of "
"strings). Overrides any preceding calls to :meth:`add_include_dir`; "
"subsequent calls to :meth:`add_include_dir` add to the list passed to :meth:"
"`set_include_dirs`. This does not affect any list of standard include "
"directories that the compiler may search by default."
msgstr ""

# bccb9a0e17354691bc7a54ae575abc07
#: distutils/apiref.rst:403
msgid ""
"Add *libname* to the list of libraries that will be included in all links "
"driven by this compiler object.  Note that *libname* should \\*not\\* be the "
"name of a file containing a library, but the name of the library itself: the "
"actual filename will be inferred by the linker, the compiler, or the "
"compiler class (depending on the platform)."
msgstr ""

# 25aa282b2cdf4df38eb75619e409c26d
#: distutils/apiref.rst:409
msgid ""
"The linker will be instructed to link against libraries in the order they "
"were supplied to :meth:`add_library` and/or :meth:`set_libraries`.  It is "
"perfectly valid to duplicate library names; the linker will be instructed to "
"link against libraries as many times as they are mentioned."
msgstr ""

# cc37f1f815da4ebd92ae143807a1c346
#: distutils/apiref.rst:417
msgid ""
"Set the list of libraries to be included in all links driven by this "
"compiler object to *libnames* (a list of strings).  This does not affect any "
"standard system libraries that the linker may include by default."
msgstr ""

# 4dd6df3f8cd4406495515a2cf20683f6
#: distutils/apiref.rst:424
msgid ""
"Add *dir* to the list of directories that will be searched for libraries "
"specified to :meth:`add_library` and :meth:`set_libraries`.  The linker will "
"be instructed to search for libraries in the order they are supplied to :"
"meth:`add_library_dir` and/or :meth:`set_library_dirs`."
msgstr ""

# 20eed30cf7674b5c8ea906e10796a652
#: distutils/apiref.rst:432
msgid ""
"Set the list of library search directories to *dirs* (a list of strings).  "
"This does not affect any standard library search path that the linker may "
"search by default."
msgstr ""

# ea55378cd81d43a585064a151dc944a3
#: distutils/apiref.rst:439
msgid ""
"Add *dir* to the list of directories that will be searched for shared "
"libraries at runtime."
msgstr ""

# 38d9a08818c84c93b94e62ce0c58c3eb
#: distutils/apiref.rst:445
msgid ""
"Set the list of directories to search for shared libraries at runtime to "
"*dirs* (a list of strings).  This does not affect any standard search path "
"that the runtime linker may search by default."
msgstr ""

# 3c6efa2420c347bda177fa0a4cd43f5c
#: distutils/apiref.rst:452
msgid ""
"Define a preprocessor macro for all compilations driven by this compiler "
"object. The optional parameter *value* should be a string; if it is not "
"supplied, then the macro will be defined without an explicit value and the "
"exact outcome depends on the compiler used."
msgstr ""

# 84dbd9989b1a44baa8810dd5deffb3fc
#: distutils/apiref.rst:462
msgid ""
"Undefine a preprocessor macro for all compilations driven by this compiler "
"object.  If the same macro is defined by :meth:`define_macro` and undefined "
"by :meth:`undefine_macro` the last call takes precedence (including multiple "
"redefinitions or undefinitions).  If the macro is redefined/undefined on a "
"per-compilation basis (ie. in the call to :meth:`compile`), then that takes "
"precedence."
msgstr ""

# d753b333891544f6a6da33ac10cecb85
#: distutils/apiref.rst:472
msgid ""
"Add *object* to the list of object files (or analogues, such as explicitly "
"named library files or the output of \"resource compilers\") to be included "
"in every link driven by this compiler object."
msgstr ""

# 541d2b8d4ce04f09a9891b7bf7994548
#: distutils/apiref.rst:479
msgid ""
"Set the list of object files (or analogues) to be included in every link to "
"*objects*.  This does not affect any standard object files that the linker "
"may include by default (such as system libraries)."
msgstr ""

# 8a705d00abca4b57a2ad3aab7f23aa7f
#: distutils/apiref.rst:483
msgid ""
"The following methods implement methods for autodetection of compiler  "
"options, providing some functionality similar to GNU :program:`autoconf`."
msgstr ""

# d242fe1f872a4a7aaf130df4ba50f761
#: distutils/apiref.rst:489
msgid ""
"Detect the language of a given file, or list of files. Uses the  instance "
"attributes :attr:`language_map` (a dictionary), and  :attr:`language_order` "
"(a list) to do the job."
msgstr ""

# 56adf4cea6924f9abc57b76f9fd7c120
#: distutils/apiref.rst:496
msgid ""
"Search the specified list of directories for a static or shared library file "
"*lib* and return the full path to that file.  If *debug* is true, look for a "
"debugging version (if that makes sense on the current platform).  Return "
"``None`` if *lib* wasn't found in any of the specified directories."
msgstr ""

# 8a93ba24e92d47b5b4021d4c5681d143
#: distutils/apiref.rst:504
msgid ""
"Return a boolean indicating whether *funcname* is supported on the current "
"platform.  The optional arguments can be used to augment the compilation "
"environment by providing additional include files and paths and libraries "
"and paths."
msgstr ""

# c40e86a00c1a4c8f8ca3fa9e62794b9e
#: distutils/apiref.rst:512
msgid ""
"Return the compiler option to add *dir* to the list of directories searched "
"for libraries."
msgstr ""

# 0db1611a0e204d9ca50759339d2207d6
#: distutils/apiref.rst:518
msgid ""
"Return the compiler option to add *dir* to the list of libraries linked into "
"the shared library or executable."
msgstr ""

# 88fbd60b930a4ab683ed271b6877fb3b
#: distutils/apiref.rst:524
msgid ""
"Return the compiler option to add *dir* to the list of directories searched "
"for runtime libraries."
msgstr ""

# cac21d0c0f394230bb491c6c2c955909
#: distutils/apiref.rst:530
msgid ""
"Define the executables (and options for them) that will be run to perform "
"the various stages of compilation.  The exact set of executables that may be "
"specified here depends on the compiler class (via the 'executables' class "
"attribute), but most will have:"
msgstr ""

# 294c66459a5d48f09a9eedaf52dd9662
#: distutils/apiref.rst:536
msgid "attribute"
msgstr ""

# c2699266a1684af3a7488c6b2fdc32f0
#: distutils/apiref.rst:538
msgid "*compiler*"
msgstr ""

# 19d497bc049444259a914e84e1da6284
#: distutils/apiref.rst:538
msgid "the C/C++ compiler"
msgstr ""

# 8447946ce3d84df580e5eb32a34f6f73
#: distutils/apiref.rst:540
msgid "*linker_so*"
msgstr ""

# effb8820584541f78800c566c7eab4c3
#: distutils/apiref.rst:540
msgid "linker used to create shared objects and libraries"
msgstr ""

# 3fa62523d5244cc7909238fa0a16a152
#: distutils/apiref.rst:543
msgid "*linker_exe*"
msgstr ""

# 8995f5d1eaef4fcb9758420e9df300e7
#: distutils/apiref.rst:543
msgid "linker used to create binary executables"
msgstr ""

# bc1f1514d7664abc8a98bbadeea90b3b
#: distutils/apiref.rst:545
msgid "*archiver*"
msgstr ""

# 360b43ee64494ed59f79465f650f43f0
#: distutils/apiref.rst:545
msgid "static library creator"
msgstr ""

# bcfaf558f0cf43b890d66f10e79fc646
#: distutils/apiref.rst:548
msgid ""
"On platforms with a command-line (Unix, DOS/Windows), each of these is a "
"string that will be split into executable name and (optional) list of "
"arguments. (Splitting the string is done similarly to how Unix shells "
"operate: words are delimited by spaces, but quotes and backslashes can "
"override this.  See :func:`distutils.util.split_quoted`.)"
msgstr ""

# 0879436c53fd4eeb8ac00abb62810d36
#: distutils/apiref.rst:554
msgid "The following methods invoke stages in the build process."
msgstr ""

# 22cb4297e1504c94bf6e92248cd00e8a
#: distutils/apiref.rst:559
msgid ""
"Compile one or more source files. Generates object files (e.g.  transforms "
"a :file:`.c` file to a :file:`.o` file.)"
msgstr ""

# db37795d7f054d2a900051281c66687f
#: distutils/apiref.rst:562
msgid ""
"*sources* must be a list of filenames, most likely C/C++ files, but in "
"reality anything that can be handled by a particular compiler and compiler "
"class (eg. :class:`MSVCCompiler` can handle resource files in *sources*).  "
"Return a list of object filenames, one per source filename in *sources*.  "
"Depending on the implementation, not all source files will necessarily be "
"compiled, but all corresponding object filenames will be returned."
msgstr ""

# 45ce6238733944bca97c27da6a2690cd
#: distutils/apiref.rst:569
msgid ""
"If *output_dir* is given, object files will be put under it, while retaining "
"their original path component.  That is, :file:`foo/bar.c` normally compiles "
"to :file:`foo/bar.o` (for a Unix implementation); if *output_dir* is "
"*build*, then it would compile to :file:`build/foo/bar.o`."
msgstr ""

# ed5b1699be4848879ff9904a6fda3115
#: distutils/apiref.rst:574
msgid ""
"*macros*, if given, must be a list of macro definitions.  A macro definition "
"is either a ``(name, value)`` 2-tuple or a ``(name,)`` 1-tuple. The former "
"defines a macro; if the value is ``None``, the macro is defined without an "
"explicit value.  The 1-tuple case undefines a macro.  Later definitions/"
"redefinitions/undefinitions take precedence."
msgstr ""

# 7f5a415dae1c465aa890e9f49fd0a0b0
#: distutils/apiref.rst:580
msgid ""
"*include_dirs*, if given, must be a list of strings, the directories to add "
"to the default include file search path for this compilation only."
msgstr ""

# b8cb4468a5fd40929c7673efff1089cc
#: distutils/apiref.rst:583
msgid ""
"*debug* is a boolean; if true, the compiler will be instructed to output "
"debug symbols in (or alongside) the object file(s)."
msgstr ""

# 513df22992bf489db2539182bae64635
#: distutils/apiref.rst:586
msgid ""
"*extra_preargs* and *extra_postargs* are implementation-dependent. On "
"platforms that have the notion of a command-line (e.g. Unix, DOS/Windows), "
"they are most likely lists of strings: extra command-line arguments to "
"prepend/append to the compiler command line.  On other platforms, consult "
"the implementation class documentation.  In any event, they are intended as "
"an escape hatch for those occasions when the abstract compiler framework "
"doesn't cut the mustard."
msgstr ""

# 5d1deebbaa9d4274b70e8727052d4024
#: distutils/apiref.rst:593
msgid ""
"*depends*, if given, is a list of filenames that all targets depend on.  If "
"a source file is older than any file in depends, then the source file will "
"be recompiled.  This supports dependency tracking, but only at a coarse "
"granularity."
msgstr ""

# 814487486d2549818d84c40d178c2b9a
#: distutils/apiref.rst:598
msgid "Raises :exc:`CompileError` on failure."
msgstr ""

# 9452ea54d6ad4cf18565911806121e3a
#: distutils/apiref.rst:603
msgid ""
"Link a bunch of stuff together to create a static library file. The \"bunch "
"of stuff\" consists of the list of object files supplied as *objects*, the "
"extra object files supplied to :meth:`add_link_object` and/or :meth:"
"`set_link_objects`, the libraries supplied to :meth:`add_library` and/or :"
"meth:`set_libraries`, and the libraries supplied as *libraries* (if any)."
msgstr ""

# 0e88c23aa3c7437da53b22cb3ee1b5b4
#: distutils/apiref.rst:609
msgid ""
"*output_libname* should be a library name, not a filename; the filename will "
"be inferred from the library name.  *output_dir* is the directory where the "
"library file will be put."
msgstr ""

# 8c8b44d77540484b9dad6c8516c87d62
#: distutils/apiref.rst:615
msgid ""
"*debug* is a boolean; if true, debugging information will be included in the "
"library (note that on most platforms, it is the compile step where this "
"matters: the *debug* flag is included here just for consistency)."
msgstr ""

# 272e773bdca446fdaca837308bfbd173
# 0c7a4d5e6e734bbc876965efb3af35c2
#: distutils/apiref.rst:619 distutils/apiref.rst:661
msgid ""
"*target_lang* is the target language for which the given objects are being "
"compiled. This allows specific linkage time treatment of certain languages."
msgstr ""

# 93ee072160524bc2a11dd5fc13dfc144
#: distutils/apiref.rst:622
msgid "Raises :exc:`LibError` on failure."
msgstr ""

# fa970f60027941e2bf4da5f7554e3f53
#: distutils/apiref.rst:627
msgid ""
"Link a bunch of stuff together to create an executable or shared library "
"file."
msgstr ""

# 3b7153029e724cd599bedde227585fe4
#: distutils/apiref.rst:629
msgid ""
"The \"bunch of stuff\" consists of the list of object files supplied as "
"*objects*. *output_filename* should be a filename.  If *output_dir* is "
"supplied, *output_filename* is relative to it (i.e. *output_filename* can "
"provide directory components if needed)."
msgstr ""

# d2ed188058eb4252a8e640b922e78c2d
#: distutils/apiref.rst:634
msgid ""
"*libraries* is a list of libraries to link against.  These are library "
"names, not filenames, since they're translated into filenames in a platform-"
"specific way (eg. *foo* becomes :file:`libfoo.a` on Unix and :file:`foo.lib` "
"on DOS/Windows).  However, they can include a directory component, which "
"means the linker will look in that specific directory rather than searching "
"all the normal locations."
msgstr ""

# 5b640a9988d2441aa47e5e9596cc0e4a
#: distutils/apiref.rst:641
msgid ""
"*library_dirs*, if supplied, should be a list of directories to search for "
"libraries that were specified as bare library names (ie. no directory "
"component).  These are on top of the system default and those supplied to :"
"meth:`add_library_dir` and/or :meth:`set_library_dirs`.  "
"*runtime_library_dirs* is a list of directories that will be embedded into "
"the shared library and used to search for other shared libraries that \\*it"
"\\* depends on at run-time.  (This may only be relevant on Unix.)"
msgstr ""

# b77efe8c7dc144fb87126b15b320b95e
#: distutils/apiref.rst:649
msgid ""
"*export_symbols* is a list of symbols that the shared library will export. "
"(This appears to be relevant only on Windows.)"
msgstr ""

# 16bab96d6fa8450cbc831d3a1696abf5
#: distutils/apiref.rst:652
msgid ""
"*debug* is as for :meth:`compile` and :meth:`create_static_lib`,  with the "
"slight distinction that it actually matters on most platforms (as opposed "
"to :meth:`create_static_lib`, which includes a *debug* flag mostly for "
"form's sake)."
msgstr ""

# a27882d333f649eb83f10df1931442e4
#: distutils/apiref.rst:657
msgid ""
"*extra_preargs* and *extra_postargs* are as for :meth:`compile`  (except of "
"course that they supply command-line arguments for the particular linker "
"being used)."
msgstr ""

# 013803381ce740738fdebd689fdb5bad
#: distutils/apiref.rst:664
msgid "Raises :exc:`LinkError` on failure."
msgstr ""

# 31a07ae7bd604ec7b7f0057ce01310d9
#: distutils/apiref.rst:669
msgid ""
"Link an executable.  *output_progname* is the name of the file executable, "
"while *objects* are a list of object filenames to link in. Other arguments  "
"are as for the :meth:`link` method."
msgstr ""

# 0879ed0e46f845c0af0ff583263c5f97
#: distutils/apiref.rst:676
msgid ""
"Link a shared library. *output_libname* is the name of the output  library, "
"while *objects* is a list of object filenames to link in.  Other arguments "
"are as for the :meth:`link` method."
msgstr ""

# 7d279589cf004aaa88b9c024717c09fd
#: distutils/apiref.rst:683
msgid ""
"Link a shared object. *output_filename* is the name of the shared object "
"that will be created, while *objects* is a list of object filenames  to link "
"in. Other arguments are as for the :meth:`link` method."
msgstr ""

# 3cab103d07d0403da21ac792cff3cad3
#: distutils/apiref.rst:690
msgid ""
"Preprocess a single C/C++ source file, named in *source*. Output will be "
"written to file named *output_file*, or *stdout* if *output_file* not "
"supplied. *macros* is a list of macro definitions as for :meth:`compile`, "
"which will augment the macros set with :meth:`define_macro` and :meth:"
"`undefine_macro`. *include_dirs* is a list of directory names that will be "
"added to the  default list, in the same way as :meth:`add_include_dir`."
msgstr ""

# 7da88e226ec04ee8807d95be8e2d4bd4
#: distutils/apiref.rst:697
msgid "Raises :exc:`PreprocessError` on failure."
msgstr ""

# 683a86c0f96b4078b722059641e812b6
#: distutils/apiref.rst:699
msgid ""
"The following utility methods are defined by the :class:`CCompiler` class, "
"for use by the various concrete subclasses."
msgstr ""

# 8050c013e8654c25971befc0d371ce0f
#: distutils/apiref.rst:705
msgid ""
"Returns the filename of the executable for the given *basename*.  Typically "
"for non-Windows platforms this is the same as the basename,  while Windows "
"will get a :file:`.exe` added."
msgstr ""

# d30e95ba11bc4700bbf94ef06480c441
#: distutils/apiref.rst:712
msgid ""
"Returns the filename for the given library name on the current platform. On "
"Unix a library with *lib_type* of ``'static'`` will typically  be of the "
"form :file:`liblibname.a`, while a *lib_type* of ``'dynamic'``  will be of "
"the form :file:`liblibname.so`."
msgstr ""

# dd5727024e124a6a9578f2a0ed625087
#: distutils/apiref.rst:720
msgid ""
"Returns the name of the object files for the given source files. "
"*source_filenames* should be a list of filenames."
msgstr ""

# ffc281bf7a0044e38e1f1490c37b6998
#: distutils/apiref.rst:726
msgid ""
"Returns the name of a shared object file for the given file name *basename*."
msgstr ""

# 7c7babfdd41c4f758b34260c073f23b7
#: distutils/apiref.rst:731
msgid ""
"Invokes :func:`distutils.util.execute` This method invokes a  Python "
"function *func* with the given arguments *args*, after  logging and taking "
"into account the *dry_run* flag."
msgstr ""

# eec1bf5525884ee185371486f1c3cdfe
#: distutils/apiref.rst:738
msgid ""
"Invokes :func:`distutils.util.spawn`. This invokes an external  process to "
"run the given command."
msgstr ""

# 1368c95b78e74047b2e5e6c48234f56d
#: distutils/apiref.rst:744
msgid ""
"Invokes :func:`distutils.dir_util.mkpath`. This creates a directory  and any "
"missing ancestor directories."
msgstr ""

# e21b2478ef354871983f09d0f6fceb4c
#: distutils/apiref.rst:750
msgid "Invokes :meth:`distutils.file_util.move_file`. Renames *src* to  *dst*."
msgstr ""

# 01e63fdb253842a5bfea8179a4cf8da3
#: distutils/apiref.rst:755
msgid "Write a message using :func:`distutils.log.debug`."
msgstr ""

# cae4a6c95cab474b9c149b70eabf774b
#: distutils/apiref.rst:760
msgid "Write a warning message *msg* to standard error."
msgstr ""

# 9186d61b166d4816a3612fb7099b57c2
#: distutils/apiref.rst:765
msgid ""
"If the *debug* flag is set on this :class:`CCompiler` instance, print  *msg* "
"to standard output, otherwise do nothing."
msgstr ""

# 0ae3a83871084f109f497a5528de37fe
#: distutils/apiref.rst:777
msgid ":mod:`distutils.unixccompiler` --- Unix C Compiler"
msgstr ""

# f46dd47a53954b2890d9f15bb1300713
#: distutils/apiref.rst:783
msgid ""
"This module provides the :class:`UnixCCompiler` class, a subclass of :class:"
"`CCompiler` that handles the typical Unix-style command-line  C compiler:"
msgstr ""

# d7bebda0461e4b57860a05bbbbeb5ee9
#: distutils/apiref.rst:786
msgid "macros defined with :option:`-Dname[=value]`"
msgstr ""

# 1484650a0cf8433fb5b5c6bcac9b552c
#: distutils/apiref.rst:788
msgid "macros undefined with :option:`-Uname`"
msgstr ""

# 63c5717020ec4932aaefb2d4242501a8
#: distutils/apiref.rst:790
msgid "include search directories specified with :option:`-Idir`"
msgstr ""

# 2ceeba12dcd140e88d132d4f990db1a6
#: distutils/apiref.rst:792
msgid "libraries specified with :option:`-llib`"
msgstr ""

# f0e9a8179f5c41d6852811a61da308f0
#: distutils/apiref.rst:794
msgid "library search directories specified with :option:`-Ldir`"
msgstr ""

# c70694c806c548e5948791cd5707f2e0
#: distutils/apiref.rst:796
msgid ""
"compile handled by :program:`cc` (or similar) executable with :option:`-c` "
"option: compiles :file:`.c` to :file:`.o`"
msgstr ""

# c623181220724ce986ce6eafe26ee691
#: distutils/apiref.rst:799
msgid ""
"link static library handled by :program:`ar` command (possibly with :program:"
"`ranlib`)"
msgstr ""

# 64ba93164def482b9efd64b8c1e166bb
#: distutils/apiref.rst:802
msgid "link shared library handled by :program:`cc` :option:`-shared`"
msgstr ""

# 8b4d6ae6d1a34027991b4e6e64b99cc2
#: distutils/apiref.rst:806
msgid ":mod:`distutils.msvccompiler` --- Microsoft Compiler"
msgstr ""

# b71efc93c70243e887c22e3b0e00e7cc
#: distutils/apiref.rst:812
msgid ""
"This module provides :class:`MSVCCompiler`, an implementation of the "
"abstract :class:`CCompiler` class for Microsoft Visual Studio. Typically, "
"extension modules need to be compiled with the same compiler that was used "
"to compile Python. For Python 2.3 and earlier, the compiler was Visual "
"Studio 6. For Python 2.4 and 2.5, the compiler is Visual Studio .NET 2003. "
"The AMD64 and Itanium binaries are created using the Platform SDK."
msgstr ""

# 87952a2657b44d3f8103e0104aa9106f
#: distutils/apiref.rst:819
msgid ""
":class:`MSVCCompiler` will normally choose the right compiler, linker etc. "
"on its own. To override this choice, the environment variables "
"*DISTUTILS_USE_SDK* and *MSSdk* must be both set. *MSSdk* indicates that the "
"current environment has been setup by the SDK's ``SetEnv.Cmd`` script, or "
"that the environment variables had been registered when the SDK was "
"installed; *DISTUTILS_USE_SDK* indicates that the distutils user has made an "
"explicit choice to override the compiler selection by :class:`MSVCCompiler`."
msgstr ""

# 6d0918da6b1a45148eb1639a66bc8f42
#: distutils/apiref.rst:829
msgid ":mod:`distutils.bcppcompiler` --- Borland Compiler"
msgstr ""

# d77da06d52dc43108b1472bfa1b28801
#: distutils/apiref.rst:834
msgid ""
"This module provides :class:`BorlandCCompiler`, an subclass of the abstract :"
"class:`CCompiler` class for the Borland C++ compiler."
msgstr ""

# d7d5973399514a9f9825b6e57fb32d69
#: distutils/apiref.rst:839
msgid ":mod:`distutils.cygwincompiler` --- Cygwin Compiler"
msgstr ""

# b9ef15c83988464983a0207d51f2ad2f
#: distutils/apiref.rst:844
msgid ""
"This module provides the :class:`CygwinCCompiler` class, a subclass of :"
"class:`UnixCCompiler` that handles the Cygwin port of the GNU C compiler to "
"Windows.  It also contains the Mingw32CCompiler class which handles the "
"mingw32 port of GCC (same as cygwin in no-cygwin mode)."
msgstr ""

# 8db7dab1b6964ee7bd7f39528c209bc5
#: distutils/apiref.rst:851
msgid ":mod:`distutils.emxccompiler` --- OS/2 EMX Compiler"
msgstr ""

# 3c631ebf4da642249801de87e3fcbadf
#: distutils/apiref.rst:857
msgid ""
"This module provides the EMXCCompiler class, a subclass of :class:"
"`UnixCCompiler` that handles the EMX port of the GNU C compiler to OS/2."
msgstr ""

# e7901aa7a32343be99865c7f362c4998
#: distutils/apiref.rst:862
msgid ":mod:`distutils.archive_util` ---  Archiving utilities"
msgstr ""

# 6014689c1447448888c9b9fbe783ecb4
#: distutils/apiref.rst:868
msgid ""
"This module provides a few functions for creating archive files, such as "
"tarballs or zipfiles."
msgstr ""

# 6bfa3b8c154343948f8f2b6fe42351b3
#: distutils/apiref.rst:874
msgid ""
"Create an archive file (eg. ``zip`` or ``tar``).  *base_name*  is the name "
"of the file to create, minus any format-specific extension;  *format* is the "
"archive format: one of ``zip``, ``tar``,  ``ztar``, or ``gztar``. *root_dir* "
"is a directory that will be the root directory of the archive; ie. we "
"typically ``chdir`` into *root_dir* before  creating the archive.  "
"*base_dir* is the directory where we start  archiving from; ie. *base_dir* "
"will be the common prefix of all files and directories in the archive.  "
"*root_dir* and *base_dir* both default to the current directory.  Returns "
"the name of the archive file."
msgstr ""

# 4644b699e7d34d52a2d676f0e6fe54e4
#: distutils/apiref.rst:886
msgid ""
"'Create an (optional compressed) archive as a tar file from all files in and "
"under *base_dir*. *compress* must be ``'gzip'`` (the default),  "
"``'compress'``, ``'bzip2'``, or ``None``.  Both :program:`tar` and the "
"compression utility named by *compress* must be on the  default program "
"search path, so this is probably Unix-specific.  The  output tar file will "
"be named :file:`base_dir.tar`, possibly plus the appropriate compression "
"extension (:file:`.gz`, :file:`.bz2` or :file:`.Z`).  Return the output "
"filename."
msgstr ""

# b1ecb8cf4f8040218b533a323eefd2d9
#: distutils/apiref.rst:897
msgid ""
"Create a zip file from all files in and under *base_dir*.  The output zip "
"file will be named *base_name* + :file:`.zip`.  Uses either the  :mod:"
"`zipfile` Python module (if available) or the InfoZIP :file:`zip`  utility "
"(if installed and found on the default search path).  If neither  tool is "
"available, raises :exc:`DistutilsExecError`.   Returns the name of the "
"output zip file."
msgstr ""

# 7061b41fa8344c778c0b234d6ba67f7f
#: distutils/apiref.rst:905
msgid ":mod:`distutils.dep_util` --- Dependency checking"
msgstr ""

# 1b968659cc40439e890dbee9db9ae88b
#: distutils/apiref.rst:911
msgid ""
"This module provides functions for performing simple, timestamp-based "
"dependency of files and groups of files; also, functions based entirely  on "
"such timestamp dependency analysis."
msgstr ""

# befb81d2f1414c8bb10f459a22582c19
#: distutils/apiref.rst:918
msgid ""
"Return true if *source* exists and is more recently modified than *target*, "
"or if *source* exists and *target* doesn't. Return false if both exist and "
"*target* is the same age or newer  than *source*. Raise :exc:"
"`DistutilsFileError` if *source* does not exist."
msgstr ""

# cc4153190da140508777e56f099e7b70
#: distutils/apiref.rst:926
msgid ""
"Walk two filename lists in parallel, testing if each source is newer than "
"its corresponding target.  Return a pair of lists (*sources*, *targets*) "
"where source is newer than target, according to the semantics of :func:"
"`newer`"
msgstr ""

# 93d8689faa8140d78c8ea3d048d5f1f4
#: distutils/apiref.rst:935
msgid ""
"Return true if *target* is out-of-date with respect to any file listed in "
"*sources*  In other words, if *target* exists and is newer than every file "
"in *sources*, return false; otherwise return true. *missing* controls what "
"we do when a source file is missing; the default (``'error'``) is to blow up "
"with an :exc:`OSError` from  inside :func:`os.stat`; if it is ``'ignore'``, "
"we silently drop any missing source files; if it is ``'newer'``, any missing "
"source files make us assume that *target* is out-of-date (this is handy in "
"\"dry-run\" mode: it'll make you pretend to carry out commands that wouldn't "
"work because inputs are missing, but that doesn't matter because you're not "
"actually going to run the commands)."
msgstr ""

# a46908be24f74c27818b0163a22b8924
#: distutils/apiref.rst:948
msgid ":mod:`distutils.dir_util` --- Directory tree operations"
msgstr ""

# 3bad28361d25494681cbd35a568d4ce9
#: distutils/apiref.rst:954
msgid ""
"This module provides functions for operating on directories and trees of "
"directories."
msgstr ""

# 76fa2c848a7d4de5a5866e88cc0f4cee
#: distutils/apiref.rst:960
msgid ""
"Create a directory and any missing ancestor directories.  If the directory "
"already exists (or if *name* is the empty string, which means the current "
"directory, which of course exists), then do nothing.  Raise :exc:"
"`DistutilsFileError` if unable to create some directory along the way (eg. "
"some sub-path exists, but is a file rather than a directory).  If *verbose* "
"is true, print a one-line summary of each mkdir to stdout.  Return the list "
"of directories actually created."
msgstr ""

# d7c8c8e758c24959b0c05213d9791768
#: distutils/apiref.rst:971
msgid ""
"Create all the empty directories under *base_dir* needed to put *files* "
"there. *base_dir* is just the a name of a directory which doesn't "
"necessarily exist yet; *files* is a list of filenames to be interpreted "
"relative to *base_dir*. *base_dir* + the directory portion of every file in "
"*files* will be created if it doesn't already exist.  *mode*, *verbose* and "
"*dry_run* flags  are as for :func:`mkpath`."
msgstr ""

# 8689706671aa430dba4c2c1dfb6f1c60
#: distutils/apiref.rst:981
msgid ""
"Copy an entire directory tree *src* to a new location *dst*.  Both *src* and "
"*dst* must be directory names.  If *src* is not a directory, raise :exc:"
"`DistutilsFileError`.  If *dst* does  not exist, it is created with :func:"
"`mkpath`.  The end result of the  copy is that every file in *src* is copied "
"to *dst*, and  directories under *src* are recursively copied to *dst*. "
"Return the list of files that were copied or might have been copied, using "
"their output name. The return value is unaffected by *update* or *dry_run*: "
"it is simply the list of all files under *src*, with the names changed to be "
"under *dst*."
msgstr ""

# a3b49e1c49f9446c8a8fb59635ce397e
#: distutils/apiref.rst:991
msgid ""
"*preserve_mode* and *preserve_times* are the same as for :func:`copy_file` "
"in :mod:`distutils.file_util`; note that they only apply to regular files, "
"not to directories.  If *preserve_symlinks* is true, symlinks will be copied "
"as symlinks (on platforms that support them!); otherwise (the default), the "
"destination of the symlink will be copied.  *update* and *verbose* are the "
"same as for :func:`copy_file`."
msgstr ""

# 044dd618e85e4c45b3946aef228efeea
#: distutils/apiref.rst:998
msgid ""
"Files in *src* that begin with :file:`.nfs` are skipped (more information on "
"these files is available in answer D2 of the `NFS FAQ page <http://nfs."
"sourceforge.net/#section_d>`_."
msgstr ""

# f43c016f93e84d8abce9cc976302144d
#: distutils/apiref.rst:1007
msgid ""
"Recursively remove *directory* and all files and directories underneath it. "
"Any errors are ignored (apart from being reported to ``sys.stdout`` if "
"*verbose* is true)."
msgstr ""

# 0621658548ba4f218eb3d0758ed08364
#: distutils/apiref.rst:1013
msgid ":mod:`distutils.file_util` --- Single file operations"
msgstr ""

# d6d35601ac834c4694bd0b1947c7d60f
#: distutils/apiref.rst:1019
msgid ""
"This module contains some utility functions for operating on individual "
"files."
msgstr ""

# ccb543ea0f65475ba1f207bec3e72367
#: distutils/apiref.rst:1024
msgid ""
"Copy file *src* to *dst*. If *dst* is a directory, then *src* is copied "
"there with the same name; otherwise, it must be a filename. (If the file "
"exists, it will be ruthlessly clobbered.) If *preserve_mode* is true (the "
"default), the file's mode (type and permission bits, or whatever is "
"analogous on the current platform) is copied. If *preserve_times* is true "
"(the default), the last-modified and last-access times are copied as well. "
"If *update* is true, *src* will only be copied if *dst* does not exist, or "
"if *dst* does exist but is older than *src*."
msgstr ""

# cc92e282324e4bd6a767736ac35a5187
#: distutils/apiref.rst:1033
msgid ""
"*link* allows you to make hard links (using :func:`os.link`) or symbolic "
"links (using :func:`os.symlink`) instead of copying: set it to ``'hard'`` or "
"``'sym'``; if it is ``None`` (the default), files are copied. Don't set "
"*link* on systems that don't support it: :func:`copy_file` doesn't check if "
"hard or symbolic linking is available.  It uses :func:`_copy_file_contents` "
"to copy file contents."
msgstr ""

# 049f587de46241b39ee241aea9f3772f
#: distutils/apiref.rst:1040
msgid ""
"Return a tuple ``(dest_name, copied)``: *dest_name* is the actual  name of "
"the output file, and *copied* is true if the file was copied  (or would have "
"been copied, if *dry_run* true)."
msgstr ""

# 2d55a104949f448bacdd1356979aa8ca
#: distutils/apiref.rst:1054
msgid ""
"Move file *src* to *dst*. If *dst* is a directory, the file will be moved "
"into it with the same name; otherwise, *src* is just renamed to *dst*.  "
"Returns the new full name of the file."
msgstr ""

# 88df6f982dfb4098ba077dd6935cb680
#: distutils/apiref.rst:1060
msgid ""
"Handles cross-device moves on Unix using :func:`copy_file`.  What about "
"other systems?"
msgstr ""

# 5f353e2cc74343ba89531c0cc9a4feac
#: distutils/apiref.rst:1066
msgid ""
"Create a file called *filename* and write *contents* (a sequence of strings "
"without line terminators) to it."
msgstr ""

# 0bd674f91b9e4f27baf1941af83681f6
#: distutils/apiref.rst:1071
msgid ":mod:`distutils.util` --- Miscellaneous other utility functions"
msgstr ""

# c65fb19d4b8743e697e60b7a29ec01f3
#: distutils/apiref.rst:1077
msgid ""
"This module contains other assorted bits and pieces that don't fit into  any "
"other utility module."
msgstr ""

# 247235d0071d43da8858018ed34e5067
#: distutils/apiref.rst:1083
msgid ""
"Return a string that identifies the current platform.  This is used mainly "
"to distinguish platform-specific build directories and platform-specific "
"built distributions.  Typically includes the OS name and version and the "
"architecture (as supplied by 'os.uname()'), although the exact information "
"included depends on the OS; eg. for IRIX the architecture isn't particularly "
"important (IRIX only runs on SGI hardware), but for Linux the kernel version "
"isn't particularly important."
msgstr ""

# 9c934a92c19344e7b6e6c49d90459973
#: distutils/apiref.rst:1091
msgid "Examples of returned values:"
msgstr ""

# 422ab318726e43bebba19fe23f3a407f
#: distutils/apiref.rst:1093
msgid "``linux-i586``"
msgstr ""

# cee1eaf39a0d497aa7b16ff12c2ba5f4
#: distutils/apiref.rst:1094
msgid "``linux-alpha``"
msgstr ""

# 7203139e1c384946862eaff3092c4983
#: distutils/apiref.rst:1095
msgid "``solaris-2.6-sun4u``"
msgstr ""

# bf45a4a3eb8448c2b9b749f3d91e3463
#: distutils/apiref.rst:1096
msgid "``irix-5.3``"
msgstr ""

# fa01769e5a9b4f388e982dadbb5e0a0f
#: distutils/apiref.rst:1097
msgid "``irix64-6.2``"
msgstr ""

# 45098dd4cdd04fb48b11ef585cc4f80f
#: distutils/apiref.rst:1099
msgid "For non-POSIX platforms, currently just returns ``sys.platform``."
msgstr ""

# 7394183badb14ec4aabe5a33f5262747
#: distutils/apiref.rst:1101
msgid ""
"For Mac OS X systems the OS version reflects the minimal version on which "
"binaries will run (that is, the value of ``MACOSX_DEPLOYMENT_TARGET`` during "
"the build of Python), not the OS version of the current system."
msgstr ""

# 8f6a57b6806145e4ac5e039af13f3508
#: distutils/apiref.rst:1105
msgid ""
"For universal binary builds on Mac OS X the architecture value reflects the "
"univeral binary status instead of the architecture of the current processor. "
"For 32-bit universal binaries the architecture is ``fat``, for 64-bit "
"universal binaries the architecture is ``fat64``, and for 4-way universal "
"binaries the architecture is ``universal``. Starting from Python 2.7 and "
"Python 3.2 the architecture ``fat3`` is used for a 3-way universal build "
"(ppc, i386, x86_64) and ``intel`` is used for a univeral build with the i386 "
"and x86_64 architectures"
msgstr ""

# 5a02849b986242d2b883e0497d784778
#: distutils/apiref.rst:1114
msgid "Examples of returned values on Mac OS X:"
msgstr ""

# 7df181a5c9fd421f8692eacb63fe4149
#: distutils/apiref.rst:1116
msgid "``macosx-10.3-ppc``"
msgstr ""

# 037e0bdda5ae41f7bb1ae7a2fbd08b2b
#: distutils/apiref.rst:1118
msgid "``macosx-10.3-fat``"
msgstr ""

# aaf3262a9a4144b5854e2db4c369ab4e
#: distutils/apiref.rst:1120
msgid "``macosx-10.5-universal``"
msgstr ""

# 631113286e6e435db4c12cdaf4a99a31
#: distutils/apiref.rst:1122
msgid "``macosx-10.6-intel``"
msgstr ""

# 8acb155861bc4e86b5a6d4a540461030
#: distutils/apiref.rst:1127
msgid ""
"Return 'pathname' as a name that will work on the native filesystem, i.e. "
"split it on '/' and put it back together again using the current directory "
"separator. Needed because filenames in the setup script are always supplied "
"in Unix style, and have to be converted to the local convention before we "
"can actually use them in the filesystem.  Raises :exc:`ValueError` on non-"
"Unix-ish systems if *pathname* either  starts or ends with a slash."
msgstr ""

# 5a701d49eab34b599a5174f97238e648
#: distutils/apiref.rst:1137
msgid ""
"Return *pathname* with *new_root* prepended.  If *pathname* is relative, "
"this is equivalent to ``os.path.join(new_root,pathname)`` Otherwise, it "
"requires making *pathname* relative and then joining the two, which is "
"tricky on DOS/Windows."
msgstr ""

# 7e73cb042f454da8b313e520b6f9ee00
#: distutils/apiref.rst:1144
msgid ""
"Ensure that 'os.environ' has all the environment variables we guarantee that "
"users can use in config files, command-line options, etc.  Currently this "
"includes:"
msgstr ""

# 90b9795af7bf421ab9b8d490e555dae1
#: distutils/apiref.rst:1148
msgid ":envvar:`HOME` - user's home directory (Unix only)"
msgstr ""

# 55893418d9334e269afb69459d1362fb
#: distutils/apiref.rst:1149
msgid ""
":envvar:`PLAT` - description of the current platform, including hardware and "
"OS (see :func:`get_platform`)"
msgstr ""

# 3b55889b296d41d5b581a23c9f284ca3
#: distutils/apiref.rst:1155
msgid ""
"Perform shell/Perl-style variable substitution on *s*.  Every occurrence of "
"``$`` followed by a name is considered a variable, and variable is "
"substituted by the value found in the *local_vars* dictionary, or in ``os."
"environ`` if it's not in *local_vars*. *os.environ* is first checked/"
"augmented to guarantee that it contains certain values: see :func:"
"`check_environ`.  Raise :exc:`ValueError` for any variables not found in "
"either *local_vars* or ``os.environ``."
msgstr ""

# 58c9d75c704748f59024250c18f659be
#: distutils/apiref.rst:1162
msgid ""
"Note that this is not a fully-fledged string interpolation function. A valid "
"``$variable`` can consist only of upper and lower case letters, numbers and "
"an underscore. No { } or ( ) style quoting is available."
msgstr ""

# fb8160b9de094b398c831594a4fd27e0
#: distutils/apiref.rst:1169
msgid ""
"Generate a useful error message from an :exc:`EnvironmentError`  (:exc:"
"`IOError` or :exc:`OSError`) exception object.   Handles Python 1.5.1 and "
"later styles, and does what it can to deal with  exception objects that "
"don't have a filename (which happens when the error  is due to a two-file "
"operation, such as :func:`rename` or  :func:`link`).  Returns the error "
"message as a string prefixed  with *prefix*."
msgstr ""

# 93995d5c385f448a9e55495a5a365c93
#: distutils/apiref.rst:1179
msgid ""
"Split a string up according to Unix shell-like rules for quotes and "
"backslashes. In short: words are delimited by spaces, as long as those "
"spaces are not escaped by a backslash, or inside a quoted string. Single and "
"double quotes are equivalent, and the quote characters can be backslash-"
"escaped.  The backslash is stripped from any two-character escape sequence, "
"leaving only the escaped character.  The quote characters are stripped from "
"any quoted string.  Returns a list of words."
msgstr ""

# e78d86819b304ba1abb557770852134c
#: distutils/apiref.rst:1192
msgid ""
"Perform some action that affects the outside world (for instance, writing to "
"the filesystem).  Such actions are special because they are disabled by the "
"*dry_run* flag.  This method takes  care of all that bureaucracy for you; "
"all you have to do is supply the function to call and an argument tuple for "
"it (to embody the \"external action\" being performed), and an optional "
"message to print."
msgstr ""

# 4aa7c421a66c46a88e2ab8e6db4d108c
#: distutils/apiref.rst:1201
msgid "Convert a string representation of truth to true (1) or false (0)."
msgstr ""

# 1cfb1fad5b604677b3a7880ee2bb0ea5
#: distutils/apiref.rst:1203
msgid ""
"True values are ``y``, ``yes``, ``t``, ``true``, ``on``  and ``1``; false "
"values are ``n``, ``no``, ``f``, ``false``,  ``off`` and ``0``.  Raises :exc:"
"`ValueError` if *val*  is anything else."
msgstr ""

# ce9ac2cb2114406588d26333a7c2b44b
#: distutils/apiref.rst:1210
msgid ""
"Byte-compile a collection of Python source files to either :file:`.pyc` or :"
"file:`.pyo` files in a :file:`__pycache__` subdirectory (see :pep:`3147`). "
"*py_files* is a list of files to compile; any files that don't end in :file:"
"`.py` are silently skipped.  *optimize* must be one of the following:"
msgstr ""

# 297c96568c7b409489b4f4b2e20ab227
#: distutils/apiref.rst:1215
msgid "``0`` - don't optimize (generate :file:`.pyc`)"
msgstr ""

# a858a773550f4c1f85a4d78671936e18
#: distutils/apiref.rst:1216
msgid "``1`` - normal optimization (like ``python -O``)"
msgstr ""

# 3f23d48e8dd1408e908b3427004eaabf
#: distutils/apiref.rst:1217
msgid "``2`` - extra optimization (like ``python -OO``)"
msgstr ""

# ae70fb3a953a4ed58e4fc884798b2384
#: distutils/apiref.rst:1219
msgid "If *force* is true, all files are recompiled regardless of timestamps."
msgstr ""

# 201396d8849e44d497aace152a37b7fe
#: distutils/apiref.rst:1221
msgid ""
"The source filename encoded in each :term:`bytecode` file defaults to the "
"filenames listed in *py_files*; you can modify these with *prefix* and "
"*basedir*. *prefix* is a string that will be stripped off of each source "
"filename, and *base_dir* is a directory name that will be prepended (after "
"*prefix* is stripped).  You can supply either or both (or neither) of "
"*prefix* and *base_dir*, as you wish."
msgstr ""

# 18be2846b2be48cc90604f4d287f6e37
#: distutils/apiref.rst:1228
msgid ""
"If *dry_run* is true, doesn't actually do anything that would affect the "
"filesystem."
msgstr ""

# 25126917fb71433ba2fb300433c7d2dc
#: distutils/apiref.rst:1231
msgid ""
"Byte-compilation is either done directly in this interpreter process with "
"the standard :mod:`py_compile` module, or indirectly by writing a temporary "
"script and executing it.  Normally, you should let :func:`byte_compile` "
"figure out to use direct compilation or not (see the source for details).  "
"The *direct* flag is used by the script generated in indirect mode; unless "
"you know what you're doing, leave it set to ``None``."
msgstr ""

# b1947f77ff85463ea6625d52f9a48865
#: distutils/apiref.rst:1246
msgid ""
"Return a version of *header* escaped for inclusion in an :rfc:`822` header, "
"by ensuring there are 8 spaces space after each newline. Note that it does "
"no other modification of the string."
msgstr ""

# 93688b76abf649c48ae3c36b25c1ec44
#: distutils/apiref.rst:1256
msgid ":mod:`distutils.dist` --- The Distribution class"
msgstr ""

# e19c276070184a819b048b33e2ba3517
#: distutils/apiref.rst:1263
msgid ""
"This module provides the :class:`Distribution` class, which represents the "
"module distribution being built/installed/distributed."
msgstr ""

# 6b35630bdeed4489bb2a59bc56e9c2e6
#: distutils/apiref.rst:1268
msgid ":mod:`distutils.extension` --- The Extension class"
msgstr ""

# d631ff0ddffb40fd84bba9338cc29196
#: distutils/apiref.rst:1275
msgid ""
"This module provides the :class:`Extension` class, used to describe C/C++ "
"extension modules in setup scripts."
msgstr ""

# 5094b12d024b40829bec1f2bea7a7745
#: distutils/apiref.rst:1283
msgid ":mod:`distutils.debug` --- Distutils debug mode"
msgstr ""

# ea6116498bf948f8ae71972ff05cc02f
#: distutils/apiref.rst:1289
msgid "This module provides the DEBUG flag."
msgstr ""

# 285183af6ec84b6c8c4a250057e821b2
#: distutils/apiref.rst:1293
msgid ":mod:`distutils.errors` --- Distutils exceptions"
msgstr ""

# 1cf7be4be56f490d8cecb27a33885e85
#: distutils/apiref.rst:1299
msgid ""
"Provides exceptions used by the Distutils modules.  Note that Distutils "
"modules may raise standard exceptions; in particular, SystemExit is usually "
"raised for errors that are obviously the end-user's fault (eg. bad command-"
"line arguments)."
msgstr ""

# ded2104079ed476c9f42fe623be1fc6c
#: distutils/apiref.rst:1303
msgid ""
"This module is safe to use in ``from ... import *`` mode; it only exports "
"symbols whose names start with ``Distutils`` and end with ``Error``."
msgstr ""

# 25416051a3304154be465aa25792e47d
#: distutils/apiref.rst:1308
msgid ""
":mod:`distutils.fancy_getopt` --- Wrapper around the standard getopt module"
msgstr ""

# fabea3b6abb44e5ca0da93960809cc8e
#: distutils/apiref.rst:1314
msgid ""
"This module provides a wrapper around the standard :mod:`getopt`  module "
"that provides the following additional features:"
msgstr ""

# f02db8abdc58443ab6bf19e87bca6b34
#: distutils/apiref.rst:1317
msgid "short and long options are tied together"
msgstr ""

# 4efe8b6adfe24d56be3bfb29cc4e6b2b
#: distutils/apiref.rst:1319
msgid ""
"options have help strings, so :func:`fancy_getopt` could potentially  create "
"a complete usage summary"
msgstr ""

# c30ff7d608354230ba748afa770e409c
#: distutils/apiref.rst:1322
msgid "options set attributes of a passed-in object"
msgstr ""

# 44d4288ffd21468c80e9844396dee1bf
#: distutils/apiref.rst:1324
msgid ""
"boolean options can have \"negative aliases\" --- eg. if :option:`--quiet` "
"is the \"negative alias\" of :option:`--verbose`, then :option:`--quiet` on "
"the command line sets *verbose* to false."
msgstr ""

# e5ec50fba3fd4244955102753f4e4e31
#: distutils/apiref.rst:1330
msgid ""
"Wrapper function. *options* is a list of ``(long_option, short_option, "
"help_string)`` 3-tuples as described in the constructor for :class:"
"`FancyGetopt`. *negative_opt* should be a dictionary mapping option names to "
"option names, both the key and value should be in the *options* list. "
"*object* is an object which will be used to store values (see the :meth:"
"`getopt` method of the :class:`FancyGetopt` class). *args* is the argument "
"list. Will use ``sys.argv[1:]`` if you  pass ``None`` as *args*."
msgstr ""

# 90ce295e8d6f432691e8c0f5307c80be
#: distutils/apiref.rst:1341
msgid "Wraps *text* to less than *width* wide."
msgstr ""

# afabeeb41a2e4b51ad632b54c87f87f5
#: distutils/apiref.rst:1346
msgid ""
"The option_table is a list of 3-tuples: ``(long_option, short_option, "
"help_string)``"
msgstr ""

# e7dae3d852d840e789158ee3aa7d390d
#: distutils/apiref.rst:1349
msgid ""
"If an option takes an argument, its *long_option* should have ``'='`` "
"appended; *short_option* should just be a single character, no ``':'`` in "
"any case. *short_option* should be ``None`` if a *long_option*  doesn't have "
"a corresponding *short_option*. All option tuples must have long options."
msgstr ""

# 442e3228e03f499ab78bfadfc40c1f45
#: distutils/apiref.rst:1354
msgid "The :class:`FancyGetopt` class provides the following methods:"
msgstr ""

# 18e948d2c0bd4a798b1fae1167d68242
#: distutils/apiref.rst:1359
msgid "Parse command-line options in args. Store as attributes on *object*."
msgstr ""

# bfa3933246df49b7adf220208aee1fdf
#: distutils/apiref.rst:1361
msgid ""
"If *args* is ``None`` or not supplied, uses ``sys.argv[1:]``.  If *object* "
"is ``None`` or not supplied, creates a new :class:`OptionDummy` instance, "
"stores option values there, and returns a tuple ``(args, object)``.  If "
"*object* is supplied, it is modified in place and :func:`getopt` just "
"returns *args*; in both cases, the returned *args* is a modified copy of the "
"passed-in *args* list, which is left untouched."
msgstr ""

# 89e423e0fdbb4c68a60134d51a109d4c
#: distutils/apiref.rst:1373
msgid ""
"Returns the list of ``(option, value)`` tuples processed by the previous run "
"of :meth:`getopt`  Raises :exc:`RuntimeError` if :meth:`getopt` hasn't been "
"called yet."
msgstr ""

# e5f76f419a5145f9a9375c5b0b6dfa52
#: distutils/apiref.rst:1380
msgid ""
"Generate help text (a list of strings, one per suggested line of output) "
"from the option table for this :class:`FancyGetopt` object."
msgstr ""

# 848cbd618b4641a0b02f8bd17f49a042
#: distutils/apiref.rst:1383
msgid "If supplied, prints the supplied *header* at the top of the help."
msgstr ""

# 66ed421b87964d849722673363efc172
#: distutils/apiref.rst:1387
msgid ":mod:`distutils.filelist` --- The FileList class"
msgstr ""

# ba186572e87545f6960994e4749c8497
#: distutils/apiref.rst:1394
msgid ""
"This module provides the :class:`FileList` class, used for poking about the "
"filesystem and building lists of files."
msgstr ""

# e983379ae0af4406b5b9a1c0614fd955
#: distutils/apiref.rst:1399
msgid ":mod:`distutils.log` --- Simple PEP 282-style logging"
msgstr ""

# 4527bb2b23944bd89af755ee1d13ee5b
#: distutils/apiref.rst:1406
msgid ":mod:`distutils.spawn` --- Spawn a sub-process"
msgstr ""

# 98fb5d01879b42d59dfc06cb50b682ff
#: distutils/apiref.rst:1412
msgid ""
"This module provides the :func:`spawn` function, a front-end to  various "
"platform-specific functions for launching another program in a  sub-process. "
"Also provides :func:`find_executable` to search the path for a given "
"executable name."
msgstr ""

# c5913948790240628dd0700d5ea569c6
#: distutils/apiref.rst:1419
msgid ":mod:`distutils.sysconfig` --- System configuration information"
msgstr ""

# 721db0d560574ed18baaca43e6e1e418
#: distutils/apiref.rst:1428
msgid ""
"The :mod:`distutils.sysconfig` module provides access to Python's low-level "
"configuration information.  The specific configuration variables available "
"depend heavily on the platform and configuration. The specific variables "
"depend on the build process for the specific version of Python being run; "
"the variables are those found in the :file:`Makefile` and configuration "
"header that are installed with Python on Unix systems.  The configuration "
"header is called :file:`pyconfig.h` for Python versions starting with 2.2, "
"and :file:`config.h` for earlier versions of Python."
msgstr ""

# 4d3d7356df40476e9e7fa35372f9971e
#: distutils/apiref.rst:1437
msgid ""
"Some additional functions are provided which perform some useful "
"manipulations for other parts of the :mod:`distutils` package."
msgstr ""

# 5a3c0117377d4d5dbf6402cfeddfbce8
#: distutils/apiref.rst:1443
msgid "The result of ``os.path.normpath(sys.prefix)``."
msgstr ""

# f9c06ae9d31c4050aeb5ee32d3f5e70f
#: distutils/apiref.rst:1448
msgid "The result of ``os.path.normpath(sys.exec_prefix)``."
msgstr ""

# f5ce312fe9024a5698a255d820b97002
#: distutils/apiref.rst:1453
msgid ""
"Return the value of a single variable.  This is equivalent to "
"``get_config_vars().get(name)``."
msgstr ""

# 58c9affb815c4faeb5f31bb24ed3f43a
#: distutils/apiref.rst:1459
msgid ""
"Return a set of variable definitions.  If there are no arguments, this "
"returns a dictionary mapping names of configuration variables to values.  If "
"arguments are provided, they should be strings, and the return value will be "
"a sequence giving the associated values. If a given name does not have a "
"corresponding value, ``None`` will be included for that variable."
msgstr ""

# 61dd90ccd09c4ebaa4ccc91dcd543e3c
#: distutils/apiref.rst:1468
msgid ""
"Return the full path name of the configuration header.  For Unix, this will "
"be the header generated by the :program:`configure` script; for other "
"platforms the header will have been supplied directly by the Python source "
"distribution.  The file is a platform-specific text file."
msgstr ""

# 4142eccfffe94df4a0fb71e901f8d8f5
#: distutils/apiref.rst:1476
msgid ""
"Return the full path name of the :file:`Makefile` used to build Python.  For "
"Unix, this will be a file generated by the :program:`configure` script; the "
"meaning for other platforms will vary.  The file is a platform-specific text "
"file, if it exists. This function is only useful on POSIX platforms."
msgstr ""

# fd8cf5a144b5472d99860f97474be1ea
#: distutils/apiref.rst:1484
msgid ""
"Return the directory for either the general or platform-dependent C include "
"files.  If *plat_specific* is true, the platform-dependent include directory "
"is returned; if false or omitted, the platform-independent directory is "
"returned. If *prefix* is given, it is used as either the prefix instead of :"
"const:`PREFIX`, or as the exec-prefix instead of :const:`EXEC_PREFIX` if "
"*plat_specific* is true."
msgstr ""

# eb34b0351f9544f0a535060072a3b16e
#: distutils/apiref.rst:1494
msgid ""
"Return the directory for either the general or platform-dependent library "
"installation.  If *plat_specific* is true, the platform-dependent include "
"directory is returned; if false or omitted, the platform-independent "
"directory is returned.  If *prefix* is given, it is used as either the "
"prefix instead of :const:`PREFIX`, or as the exec-prefix instead of :const:"
"`EXEC_PREFIX` if *plat_specific* is true.  If *standard_lib* is true, the "
"directory for the standard library is returned rather than the directory for "
"the installation of third-party extensions."
msgstr ""

# 7cb9b06f590f44e38abae9ba2180d8b8
#: distutils/apiref.rst:1503
msgid ""
"The following function is only intended for use within the :mod:`distutils` "
"package."
msgstr ""

# 3b0dcf6fc85248a68869af45438743b0
#: distutils/apiref.rst:1509
msgid ""
"Do any platform-specific customization of a :class:`distutils.ccompiler."
"CCompiler` instance."
msgstr ""

# b1e214f7210e43828edd3cf2f521139a
#: distutils/apiref.rst:1512
msgid ""
"This function is only needed on Unix at this time, but should be called "
"consistently to support forward-compatibility.  It inserts the information "
"that varies across Unix flavors and is stored in Python's :file:`Makefile`.  "
"This information includes the selected compiler, compiler and linker "
"options, and the extension used by the linker for shared objects."
msgstr ""

# 9ab0905c914f4cec818cacd8d873f167
#: distutils/apiref.rst:1518
msgid ""
"This function is even more special-purpose, and should only be used from "
"Python's own build procedures."
msgstr ""

# 47983e586dcd4664a059291392fa74bf
#: distutils/apiref.rst:1524
msgid ""
"Inform the :mod:`distutils.sysconfig` module that it is being used as part "
"of the build process for Python.  This changes a lot of relative locations "
"for files, allowing them to be located in the build area rather than in an "
"installed Python."
msgstr ""

# 8ca4823ceef8400eb8bc94a08c355dd8
#: distutils/apiref.rst:1531
msgid ":mod:`distutils.text_file` --- The TextFile class"
msgstr ""

# 4d2f8b0754654e939d7217d75653b388
#: distutils/apiref.rst:1537
msgid ""
"This module provides the :class:`TextFile` class, which gives an interface  "
"to text files that (optionally) takes care of stripping comments, ignoring  "
"blank lines, and joining lines with backslashes."
msgstr ""

# e89a08a5792c45fb8cae9eeec2877e9a
#: distutils/apiref.rst:1544
msgid ""
"This class provides a file-like object that takes care of all  the things "
"you commonly want to do when processing a text file  that has some line-by-"
"line syntax: strip comments (as long as ``#``  is your comment character), "
"skip blank lines, join adjacent lines by escaping the newline (ie. backslash "
"at end of line), strip leading and/or trailing whitespace.  All of these are "
"optional and independently controllable."
msgstr ""

# 76bbf075dbd1415eaecf7e899c779826
#: distutils/apiref.rst:1551
msgid ""
"The class provides a :meth:`warn` method so you can generate  warning "
"messages that report physical line number, even if the  logical line in "
"question spans multiple physical lines.  Also  provides :meth:`unreadline` "
"for implementing line-at-a-time lookahead."
msgstr ""

# 8aa83435de2545f5ab2c58206195083b
#: distutils/apiref.rst:1556
msgid ""
":class:`TextFile` instances are create with either *filename*, *file*, or "
"both. :exc:`RuntimeError` is raised if both are ``None``. *filename* should "
"be a string, and *file* a file object (or something that provides :meth:"
"`readline` and :meth:`close`  methods).  It is recommended that you supply "
"at least *filename*,  so that :class:`TextFile` can include it in warning "
"messages.  If *file* is not supplied, :class:`TextFile` creates its own "
"using the :func:`open` built-in function."
msgstr ""

# 91f6c0c436d94e8b9a49f52de54df359
#: distutils/apiref.rst:1564
msgid ""
"The options are all boolean, and affect the values returned by :meth:"
"`readline`"
msgstr ""

# b35690a54ae1440ea7dad9d3ef984df0
#: distutils/apiref.rst:1567
msgid "option name"
msgstr ""

# af548d61329b4ebe84cb66508bc36e16
#: distutils/apiref.rst:1567
msgid "default"
msgstr ""

# f8e644c5018043dc92980f553ea4bd7f
#: distutils/apiref.rst:1569
msgid "*strip_comments*"
msgstr ""

# 541a30cd1b5f4f07bca2022d7ee7156f
#: distutils/apiref.rst:1569
msgid ""
"strip from ``'#'`` to end-of- line, as well as any whitespace leading up to "
"the ``'#'``\\ ---unless it is escaped by a backslash"
msgstr ""

# 909e94d2d2a04246953c8def0c8b90e8
# aae65818245743348c2a9d906a0e3fff
# a0927014596148649d0316d05f9ccc43
#: distutils/apiref.rst:1569 distutils/apiref.rst:1578
#: distutils/apiref.rst:1583
msgid "true"
msgstr ""

# d77188f6494e47e3bbe041a1eb8fe318
#: distutils/apiref.rst:1575
msgid "*lstrip_ws*"
msgstr ""

# 8ce6406984864a6082e59113d5536cfb
#: distutils/apiref.rst:1575
msgid "strip leading whitespace from each line before returning it"
msgstr ""

# 808d2f8d4b454102aa8e01a02c67a780
# 489b5a3df3ad45739b4449c4ae8f7da2
# aa564363e3ca40869efda365b9498f99
#: distutils/apiref.rst:1575 distutils/apiref.rst:1593
#: distutils/apiref.rst:1604
msgid "false"
msgstr ""

# 38703fb1cf6844f8b1e52f64e70ed16b
#: distutils/apiref.rst:1578
msgid "*rstrip_ws*"
msgstr ""

# 4fa9e31d3d9e4c6195d0b62effc3e23e
#: distutils/apiref.rst:1578
msgid ""
"strip trailing whitespace (including line terminator!) from each line before "
"returning it."
msgstr ""

# b525efb640d14d58a59c79e92960873d
#: distutils/apiref.rst:1583
msgid "*skip_blanks*"
msgstr ""

# 8f0528e9892a4609a997d1c4c9ecf99d
#: distutils/apiref.rst:1583
msgid ""
"skip lines that are empty \\*after\\* stripping comments and whitespace.  "
"(If both lstrip_ws and rstrip_ws are false, then some lines may consist of "
"solely whitespace: these will \\*not\\* be skipped, even if *skip_blanks* is "
"true.)"
msgstr ""

# 7e6818e3cb974d4a98b6c0638bf6b72e
#: distutils/apiref.rst:1593
msgid "*join_lines*"
msgstr ""

# d666c3d2567941f692791521a709bcec
#: distutils/apiref.rst:1593
msgid ""
"if a backslash is the last non-newline character on a line after stripping "
"comments and whitespace, join the following line to it to form one logical "
"line; if N consecutive lines end with a backslash, then N+1 physical lines "
"will be joined to form one logical line."
msgstr ""

# d4b85db0222f41699221778782c083fb
#: distutils/apiref.rst:1604
msgid "*collapse_join*"
msgstr ""

# f5919986ce994d46b5a16436797e545b
#: distutils/apiref.rst:1604
msgid ""
"strip leading whitespace from lines that are joined to their predecessor; "
"only matters if ``(join_lines and not lstrip_ws)``"
msgstr ""

# dec3f56602e44985a042abe675f934c7
#: distutils/apiref.rst:1611
msgid ""
"Note that since *rstrip_ws* can strip the trailing newline, the semantics "
"of :meth:`readline` must differ from those of the built-in file object's :"
"meth:`readline` method!  In particular, :meth:`readline`  returns ``None`` "
"for end-of-file: an empty string might just be a  blank line (or an all-"
"whitespace line), if *rstrip_ws* is true  but *skip_blanks* is not."
msgstr ""

# 78cd6ccddecd4be7adc5068d93f29b00
#: distutils/apiref.rst:1620
msgid ""
"Open a new file *filename*.  This overrides any *file* or *filename* "
"constructor arguments."
msgstr ""

# 28a10c1d89724fd0a9716037d711179a
#: distutils/apiref.rst:1626
msgid ""
"Close the current file and forget everything we know about it (including the "
"filename and the current line number)."
msgstr ""

# 9404bb8cbb3944b08c2a878d907e34ce
#: distutils/apiref.rst:1632
msgid ""
"Print (to stderr) a warning message tied to the current logical line in the "
"current file.  If the current logical line in the file spans multiple "
"physical lines, the warning refers to the whole range, such as ``\"lines "
"3-5\"``.  If *line* is supplied,  it overrides the current line number; it "
"may be a list or tuple  to indicate a range of physical lines, or an integer "
"for a  single physical line."
msgstr ""

# 574d26ebbabb478fb5fd61c2b9a255b2
#: distutils/apiref.rst:1642
msgid ""
"Read and return a single logical line from the current file (or from an "
"internal buffer if lines have previously been \"unread\" with :meth:"
"`unreadline`).  If the *join_lines* option  is true, this may involve "
"reading multiple physical lines concatenated into a single string.  Updates "
"the current line number,  so calling :meth:`warn` after :meth:`readline` "
"emits a warning  about the physical line(s) just read.  Returns ``None`` on "
"end-of-file,  since the empty string can occur if *rstrip_ws* is true but  "
"*strip_blanks* is not."
msgstr ""

# ae4bb500025e4e40868a0d9a2ad0e0ca
#: distutils/apiref.rst:1653
msgid ""
"Read and return the list of all logical lines remaining in the current file. "
"This updates the current line number to the last line of the file."
msgstr ""

# 87c2274264074508912fcff8d83228dd
#: distutils/apiref.rst:1659
msgid ""
"Push *line* (a string) onto an internal buffer that will be checked by "
"future :meth:`readline` calls.  Handy for implementing a parser with line-at-"
"a-time lookahead. Note that lines that are \"unread\" with :meth:"
"`unreadline` are not subsequently re-cleansed (whitespace  stripped, or "
"whatever) when read with :meth:`readline`. If multiple calls are made to :"
"meth:`unreadline` before a call to :meth:`readline`, the lines will be "
"returned most in most recent first order."
msgstr ""

# dfd29cd149a34cc8ad3008fa178b5830
#: distutils/apiref.rst:1668
msgid ":mod:`distutils.version` --- Version number classes"
msgstr ""

# 9ee0e54a63da4e07af26e800e329b110
#: distutils/apiref.rst:1683
msgid ":mod:`distutils.cmd` --- Abstract base class for Distutils commands"
msgstr ""

# e5f1667db94e4a15a88128b90e46cf79
#: distutils/apiref.rst:1690
msgid "This module supplies the abstract base class :class:`Command`."
msgstr ""

# cd20a32a410641068acc57afb41003eb
#: distutils/apiref.rst:1695
msgid ""
"Abstract base class for defining command classes, the \"worker bees\" of the "
"Distutils.  A useful analogy for command classes is to think of them as "
"subroutines with local variables called *options*.  The options are declared "
"in :meth:`initialize_options` and defined (given their final values) in :"
"meth:`finalize_options`, both of which must be defined by every command "
"class.  The distinction between the two is necessary because option values "
"might come from the outside world (command line, config file, ...), and any "
"options dependent on other options must be computed after these outside "
"influences have been processed --- hence :meth:`finalize_options`.  The body "
"of the subroutine, where it does all its work based on the values of its "
"options, is the :meth:`run` method, which must also be implemented by every "
"command class."
msgstr ""

# 33bb4b0c634e4835b9363461f2457b9c
#: distutils/apiref.rst:1708
msgid ""
"The class constructor takes a single argument *dist*, a :class:"
"`Distribution` instance."
msgstr ""

# 17878a8c1bc145a1ae61aed39050caf3
#: distutils/apiref.rst:1713
msgid "Creating a new Distutils command"
msgstr ""

# 569d94a1d4f343ab95f76c1ee4cd2508
#: distutils/apiref.rst:1715
msgid "This section outlines the steps to create a new Distutils command."
msgstr ""

# 95376f0ee70f433e9af7e4936d084de7
#: distutils/apiref.rst:1717
msgid ""
"A new command lives in a module in the :mod:`distutils.command` package. "
"There is a sample template in that directory called :file:"
"`command_template`.  Copy this file to a new module with the same name as "
"the new command you're implementing.  This module should implement a class "
"with the same name as the module (and the command).  So, for instance, to "
"create the command ``peel_banana`` (so that users can run ``setup.py "
"peel_banana``), you'd copy :file:`command_template` to :file:`distutils/"
"command/peel_banana.py`, then edit it so that it's implementing the class :"
"class:`peel_banana`, a subclass of :class:`distutils.cmd.Command`."
msgstr ""

# 9bc13ea61a1f448da71025218898715b
#: distutils/apiref.rst:1727
msgid "Subclasses of :class:`Command` must define the following methods."
msgstr ""

# 6b723b1597a24a3caac2347aa01258c7
#: distutils/apiref.rst:1731
msgid ""
"Set default values for all the options that this command supports.  Note "
"that these defaults may be overridden by other commands, by the setup "
"script, by config files, or by the command-line.  Thus, this is not the "
"place to code dependencies between options; generally, :meth:"
"`initialize_options` implementations are just a bunch of ``self.foo = None`` "
"assignments."
msgstr ""

# 3b1e176f41ba40b1b6f96e94e8826573
#: distutils/apiref.rst:1740
msgid ""
"Set final values for all the options that this command supports. This is "
"always called as late as possible, ie.  after any option assignments from "
"the command-line or from other commands have been done.  Thus, this is the "
"place to code option dependencies: if *foo* depends on *bar*, then it is "
"safe to set *foo* from *bar* as long as *foo* still has the same value it "
"was assigned in :meth:`initialize_options`."
msgstr ""

# aa016a810bde44659bdd822dedcd6653
#: distutils/apiref.rst:1750
msgid ""
"A command's raison d'etre: carry out the action it exists to perform, "
"controlled by the options initialized in :meth:`initialize_options`, "
"customized by other commands, the setup script, the command-line, and config "
"files, and finalized in :meth:`finalize_options`.  All terminal output and "
"filesystem interaction should be done by :meth:`run`."
msgstr ""

# da1808168b78485d9e4c0d7cd7b52887
#: distutils/apiref.rst:1759
msgid ""
"*sub_commands* formalizes the notion of a \"family\" of commands, e.g. "
"``install`` as the parent with sub-commands ``install_lib``, "
"``install_headers``, etc.  The parent of a family of commands defines "
"*sub_commands* as a class attribute; it's a list of 2-tuples "
"``(command_name, predicate)``, with *command_name* a string and *predicate* "
"a function, a string or ``None``.  *predicate* is a method of the parent "
"command that determines whether the corresponding command is applicable in "
"the current situation.  (E.g. ``install_headers`` is only applicable if we "
"have any C header files to install.)  If *predicate* is ``None``, that "
"command is always applicable."
msgstr ""

# ce179eb46bb842eb8108958f934f2c6a
#: distutils/apiref.rst:1770
msgid ""
"*sub_commands* is usually defined at the *end* of a class, because "
"predicates can be methods of the class, so they must already have been "
"defined.  The canonical example is the :command:`install` command."
msgstr ""

# d045cac4e3ef42609d0add1753f0534b
#: distutils/apiref.rst:1776
msgid ":mod:`distutils.command` --- Individual Distutils commands"
msgstr ""

# 6fa761304ed04f548d7765793500f774
#: distutils/apiref.rst:1787
msgid ":mod:`distutils.command.bdist` --- Build a binary installer"
msgstr ""

# 5c15467f754749c5a396615395dc6b60
#: distutils/apiref.rst:1797
msgid ""
":mod:`distutils.command.bdist_packager` --- Abstract base class for packagers"
msgstr ""

# 79861965f0f94b3d9c1ddb29edb047c0
#: distutils/apiref.rst:1807
msgid ":mod:`distutils.command.bdist_dumb` --- Build a \"dumb\" installer"
msgstr ""

# 8815c99eadc548bdb89ac0aa87f210c5
#: distutils/apiref.rst:1817
msgid ""
":mod:`distutils.command.bdist_msi` --- Build a Microsoft Installer binary "
"package"
msgstr ""

# 518efaafaf6240b4b17aeac657837e5c
#: distutils/apiref.rst:1824
msgid "Builds a `Windows Installer`_ (.msi) binary package."
msgstr ""

# 95dca582dc2e46f6a09017fd0207f530
#: distutils/apiref.rst:1828
msgid ""
"In most cases, the ``bdist_msi`` installer is a better choice than the "
"``bdist_wininst`` installer, because it provides better support for Win64 "
"platforms, allows administrators to perform non-interactive installations, "
"and allows installation through group policies."
msgstr ""

# 97c4eacb8df74beebf577493ef10a4dc
#: distutils/apiref.rst:1835
msgid ""
":mod:`distutils.command.bdist_rpm` --- Build a binary distribution as a "
"Redhat RPM and SRPM"
msgstr ""

# b48bb7fe73244e868738ad52ae7bb0f8
#: distutils/apiref.rst:1845
msgid ":mod:`distutils.command.bdist_wininst` --- Build a Windows installer"
msgstr ""

# c3ee0317f3d9446a91e0b2be9a51bbb2
#: distutils/apiref.rst:1855
msgid ":mod:`distutils.command.sdist` --- Build a source distribution"
msgstr ""

# 80dfc676cb34485b8e3ed9199fc4f42f
#: distutils/apiref.rst:1865
msgid ":mod:`distutils.command.build` --- Build all files of a package"
msgstr ""

# f8011bc0e269421a89c06d50d46eedda
#: distutils/apiref.rst:1875
msgid ""
":mod:`distutils.command.build_clib` --- Build any C libraries in a package"
msgstr ""

# acf55ca3d1d94b16b9c2216183552d4f
#: distutils/apiref.rst:1885
msgid ""
":mod:`distutils.command.build_ext` --- Build any extensions in a package"
msgstr ""

# 99d8803c284c4d489f9d420e95c7140b
#: distutils/apiref.rst:1895
msgid ""
":mod:`distutils.command.build_py` --- Build the .py/.pyc files of a package"
msgstr ""

# d8290a0d8a6b4dbfaa837e53a82f82e3
#: distutils/apiref.rst:1905
msgid ""
"Alternative implementation of build_py which also runs the 2to3 conversion "
"library on each .py file that is going to be installed. To use this in a "
"setup.py file for a distribution that is designed to run with both Python 2."
"x and 3.x, add::"
msgstr ""

# bd002bd10b664969a09bbe30171963d0
#: distutils/apiref.rst:1915
msgid "to your setup.py, and later::"
msgstr ""

# 52b092de4f264d0682ab6663cf36c3ee
#: distutils/apiref.rst:1919
msgid "to the invocation of setup()."
msgstr ""

# b181e1211c19475e9dddcc7448d44c3b
#: distutils/apiref.rst:1923
msgid ""
":mod:`distutils.command.build_scripts` --- Build the scripts of a package"
msgstr ""

# d3823c5a3bb84c42aa5b75ffbe1466e7
#: distutils/apiref.rst:1933
msgid ":mod:`distutils.command.clean` --- Clean a package build area"
msgstr ""

# edc61963788c45969bf670fca9a7e8f7
#: distutils/apiref.rst:1943
msgid ":mod:`distutils.command.config` --- Perform package configuration"
msgstr ""

# c6d5b6ad2c074b77b48e8a56ee4ab0a7
#: distutils/apiref.rst:1953
msgid ":mod:`distutils.command.install` --- Install a package"
msgstr ""

# 3cbe83dc7c074a6194ed50c3c64381a4
#: distutils/apiref.rst:1963
msgid ""
":mod:`distutils.command.install_data` --- Install data files from a package"
msgstr ""

# 093ff7df17f54c439c4faf2902b846c9
#: distutils/apiref.rst:1973
msgid ""
":mod:`distutils.command.install_headers` --- Install C/C++ header files from "
"a package"
msgstr ""

# d1b680dbb7414b839975bc5a9b0c3e28
#: distutils/apiref.rst:1983
msgid ""
":mod:`distutils.command.install_lib` --- Install library files from a package"
msgstr ""

# 071b653d7cca45e3b364f1c4efd11534
#: distutils/apiref.rst:1993
msgid ""
":mod:`distutils.command.install_scripts` --- Install script files from a "
"package"
msgstr ""

# 1b8141afbcd94abca4c83d8db09b95b6
#: distutils/apiref.rst:2003
msgid ""
":mod:`distutils.command.register` --- Register a module with the Python "
"Package Index"
msgstr ""

# c06441444cc8443a905039d43f5862bf
#: distutils/apiref.rst:2009
msgid ""
"The ``register`` command registers the package with the Python Package  "
"Index. This is described in more detail in :pep:`301`."
msgstr ""

# 8e6ca73e7cfa40a99d801f4da5b73970
#: distutils/apiref.rst:2016
msgid ":mod:`distutils.command.check` --- Check the meta-data of a package"
msgstr ""

# 030ed5c67a72497f95f5eb925c2c812d
#: distutils/apiref.rst:2022
msgid ""
"The ``check`` command performs some tests on the meta-data of a package. For "
"example, it verifies that all required meta-data are provided as the "
"arguments passed to the :func:`setup` function."
msgstr ""

# 0baa3d7ff7f54df89ebe12292e902d4a
#: distutils/builtdist.rst:5
msgid "Creating Built Distributions"
msgstr ""

# 0d96c33e52bd45ff873f06fe53d54314
#: distutils/builtdist.rst:7
msgid ""
"A \"built distribution\" is what you're probably used to thinking of either "
"as a \"binary package\" or an \"installer\" (depending on your background).  "
"It's not necessarily binary, though, because it might contain only Python "
"source code and/or byte-code; and we don't call it a package, because that "
"word is already spoken for in Python.  (And \"installer\" is a term specific "
"to the world of mainstream desktop systems.)"
msgstr ""

# cd48940cf5de43439a9f13c73ebcc685
#: distutils/builtdist.rst:14
msgid ""
"A built distribution is how you make life as easy as possible for installers "
"of your module distribution: for users of RPM-based Linux systems, it's a "
"binary RPM; for Windows users, it's an executable installer; for Debian-"
"based Linux users, it's a Debian package; and so forth.  Obviously, no one "
"person will be able to create built distributions for every platform under "
"the sun, so the Distutils are designed to enable module developers to "
"concentrate on their specialty---writing code and creating source "
"distributions---while an intermediary species called *packagers* springs up "
"to turn source distributions into built distributions for as many platforms "
"as there are packagers."
msgstr ""

# 4366c49eef87491ca3efce0a67d1053f
#: distutils/builtdist.rst:24
msgid ""
"Of course, the module developer could be his own packager; or the packager "
"could be a volunteer \"out there\" somewhere who has access to a platform "
"which the original developer does not; or it could be software periodically "
"grabbing new source distributions and turning them into built distributions "
"for as many platforms as the software has access to.  Regardless of who they "
"are, a packager uses the setup script and the :command:`bdist` command "
"family to generate built distributions."
msgstr ""

# dda65de1869d452d9f46db32b0031244
#: distutils/builtdist.rst:32
msgid ""
"As a simple example, if I run the following command in the Distutils source "
"tree::"
msgstr ""

# a4fff3461ac7414393d2c0a65fe6e1c6
#: distutils/builtdist.rst:37
msgid ""
"then the Distutils builds my module distribution (the Distutils itself in "
"this case), does a \"fake\" installation (also in the :file:`build` "
"directory), and creates the default type of built distribution for my "
"platform.  The default format for built distributions is a \"dumb\" tar file "
"on Unix, and a simple executable installer on Windows.  (That tar file is "
"considered \"dumb\" because it has to be unpacked in a specific location to "
"work.)"
msgstr ""

# 4bbbb4c1fb0b45068e6f7a022266129a
#: distutils/builtdist.rst:44
msgid ""
"Thus, the above command on a Unix system creates :file:`Distutils-1.0.{plat}."
"tar.gz`; unpacking this tarball from the right place installs the Distutils "
"just as though you had downloaded the source distribution and run ``python "
"setup.py install``.  (The \"right place\" is either the root of the "
"filesystem or  Python's :file:`{prefix}` directory, depending on the options "
"given to the :command:`bdist_dumb` command; the default is to make dumb "
"distributions relative to :file:`{prefix}`.)"
msgstr ""

# b06e3f33293d408b922fe40662724aa1
#: distutils/builtdist.rst:52
msgid ""
"Obviously, for pure Python distributions, this isn't any simpler than just "
"running ``python setup.py install``\\ ---but for non-pure distributions, "
"which include extensions that would need to be compiled, it can mean the "
"difference between someone being able to use your extensions or not.  And "
"creating \"smart\" built distributions, such as an RPM package or an "
"executable installer for Windows, is far more convenient for users even if "
"your distribution doesn't include any extensions."
msgstr ""

# aa3054f659e1407ea10c38f76fc8f7ba
#: distutils/builtdist.rst:60
msgid ""
"The :command:`bdist` command has a :option:`--formats` option, similar to "
"the :command:`sdist` command, which you can use to select the types of built "
"distribution to generate: for example, ::"
msgstr ""

# a64a2ae79dea43f38a1f748f28ea3f65
#: distutils/builtdist.rst:66
msgid ""
"would, when run on a Unix system, create :file:`Distutils-1.0.{plat}.zip`\\ "
"---again, this archive would be unpacked from the root directory to install "
"the Distutils."
msgstr ""

# a47e2886773f48279c6cf7f1a9c2081a
#: distutils/builtdist.rst:70
msgid "The available formats for built distributions are:"
msgstr ""

# 02582dcafbd44c9e922e67ad1d9e6da8
# b2acbd69d1754662aafc1ebfc8a6a7be
#: distutils/builtdist.rst:73 distutils/sourcedist.rst:25
msgid "Format"
msgstr ""

# 0ec10c5435ac4939a007524ade3e818c
# a90c23f8b6e9477a9c1b3309a5ed764a
# 7492f7e7cfc547e9b5dbbc658f5a4b7e
# 4fc8cd3d0de24fcf90957cddb65333a3
#: distutils/builtdist.rst:73 distutils/commandref.rst:61
#: distutils/setupscript.rst:560 distutils/sourcedist.rst:25
msgid "Description"
msgstr ""

# 37eefc217f7f424089678735387ef9a5
# 1c996279305944f2b2e564a4eb450b94
# 8b4c78b30b3b4331a04907f635a3503b
#: distutils/builtdist.rst:73 distutils/setupscript.rst:560
#: distutils/sourcedist.rst:25
msgid "Notes"
msgstr "Notes"

# 0fc5290b5b164a70b9a5e0f9902ff6ae
# 8e01b957b1a34742b69f58e066885969
#: distutils/builtdist.rst:75 distutils/sourcedist.rst:29
msgid "``gztar``"
msgstr ""

# ad852b20df1c46c9b98e6af043e35d55
#: distutils/builtdist.rst:75
msgid "gzipped tar file (:file:`.tar.gz`)"
msgstr ""

# 16bbfb643a474de389a22f7fd03b73f3
# 7ee6c541b79f4bb0a35b9583c39db612
#: distutils/builtdist.rst:75 distutils/sourcedist.rst:27
msgid "(1),(3)"
msgstr ""

# b60103f365dc47eb8b92dfeb4b46aa14
# 5f0831f340ea49a9991fce7f187ac1bc
#: distutils/builtdist.rst:78 distutils/sourcedist.rst:35
msgid "``ztar``"
msgstr ""

# 5250f77993644bd69eaac5fa63b320d7
# 192b4ad81482425785d7963680556f8d
#: distutils/builtdist.rst:78 distutils/sourcedist.rst:35
msgid "compressed tar file (:file:`.tar.Z`)"
msgstr ""

# 577580c553274ebe9b2ce7fefedc74dd
# 19975bfb130b49d4aeb8221453be9478
# 96eb72ac95934f38afbe51b060e67a47
# a93c044e8d0c44c595efaee225a7a79f
# 669c50438e3b43b5a3d5848674584e9c
# eed02bb3dad340429615b183923309d2
#: distutils/builtdist.rst:78 distutils/builtdist.rst:81
#: distutils/setupscript.rst:566 distutils/setupscript.rst:568
#: distutils/setupscript.rst:571 distutils/setupscript.rst:573
msgid "\\(3)"
msgstr "\\(3)"

# 445b7d51686f47a1b313737add3f9b63
# cff96191c7074f82ab1d6aa732f0b84e
#: distutils/builtdist.rst:81 distutils/sourcedist.rst:38
msgid "``tar``"
msgstr ""

# eea1de3ead004b9391a625e6c55d7858
# 0a2628ef05ef4bbaae462e710a09fbfd
#: distutils/builtdist.rst:81 distutils/sourcedist.rst:38
msgid "tar file (:file:`.tar`)"
msgstr ""

# 0222c3c81a2e4883bc549b6eb7b3ccf3
# b76ce6b21b2e4ab28b37f2187bb71cce
#: distutils/builtdist.rst:83 distutils/sourcedist.rst:27
msgid "``zip``"
msgstr ""

# a58d808a631046beb173308e79ee1a94
# 1ea544757f994ee09f7004050d8e4c4f
#: distutils/builtdist.rst:83 distutils/sourcedist.rst:27
msgid "zip file (:file:`.zip`)"
msgstr ""

# 278cf85a162947b6bc45228e5cc45ee8
# c333d6d6dedb47f9ad9a51a9a0acfc09
#: distutils/builtdist.rst:83 distutils/sourcedist.rst:29
msgid "(2),(4)"
msgstr ""

# 2f872bf2b17f4a2e87bda41abc268ba5
#: distutils/builtdist.rst:85
msgid "``rpm``"
msgstr ""

# 4226c59be031479e935fd469a65c0c2a
#: distutils/builtdist.rst:85
msgid "RPM"
msgstr ""

# a3ba5b1f42314188a3553d14b32f9f7f
# f8dd686693a04b829000df99ce97caae
#: distutils/builtdist.rst:85 distutils/setupscript.rst:582
msgid "\\(5)"
msgstr ""

# 293a8f1c6abf47e2b08581c9c510bffa
#: distutils/builtdist.rst:87
msgid "``pkgtool``"
msgstr ""

# f2416313bdf64bdc9df31fc76b2692ff
#: distutils/builtdist.rst:87
msgid "Solaris :program:`pkgtool`"
msgstr ""

# 4baa62a1a7d6408898bf5b5a53b42505
#: distutils/builtdist.rst:89
msgid "``sdux``"
msgstr ""

# e6389c6b447947d398076e8c443591be
#: distutils/builtdist.rst:89
msgid "HP-UX :program:`swinstall`"
msgstr ""

# e5574c44f3374f0896d35e8f036b06bd
#: distutils/builtdist.rst:91
msgid "``wininst``"
msgstr ""

# be113af224684aaea5bcda9e35f56e1e
#: distutils/builtdist.rst:91
msgid "self-extracting ZIP file for Windows"
msgstr ""

# 20c15e3d0520476fafa3b7246ce2460c
# 3915747586214aa4a8ef2e6a20ae9d3d
# 133b41d84c464adf89305f76e44fff66
# 2e97a93d356f4e31bc5a8417269bb09c
# cbe56ef2cda64edbad826f8197f484f4
# 7c3093c70d324225b959539f91400137
#: distutils/builtdist.rst:91 distutils/setupscript.rst:585
#: distutils/setupscript.rst:588 distutils/sourcedist.rst:32
#: distutils/sourcedist.rst:35 distutils/sourcedist.rst:38
msgid "\\(4)"
msgstr ""

# 40a298b167b74c2a882a2d6abc20ea0b
#: distutils/builtdist.rst:94
msgid "``msi``"
msgstr ""

# 897def148c1946bfb63429a015e8ec41
#: distutils/builtdist.rst:94
msgid "Microsoft Installer."
msgstr ""

# 689d0af25ac84c81842f8bdf924a89db
# b12056ccfebf49adaf0fcd88dab027f8
# a974116f21844544899bf1cfc31abbd6
#: distutils/builtdist.rst:98 distutils/setupscript.rst:595
#: distutils/sourcedist.rst:41
msgid "Notes:"
msgstr "Notes : "

# f40cda2a890d47c8a23ec61e78c1bdb4
# aca0cf25ca174119aed5eeba33f54faf
#: distutils/builtdist.rst:101 distutils/sourcedist.rst:47
msgid "default on Unix"
msgstr ""

# 5f6e7bcf3632441288e924bcfe2310d2
# f4160b21071249dea0e76ef7c239844c
#: distutils/builtdist.rst:104 distutils/sourcedist.rst:44
msgid "default on Windows"
msgstr ""

# 8038eb9049ba4daaa2c2c51654f37d83
# 6dc042b851914cb69caab46d714b0067
#: distutils/builtdist.rst:107 distutils/sourcedist.rst:54
msgid ""
"requires external utilities: :program:`tar` and possibly one of :program:"
"`gzip`, :program:`bzip2`, or :program:`compress`"
msgstr ""

# bad30dfcf5b1403690e3979be0d87761
# e302d11beda24628a7024da3b1054998
#: distutils/builtdist.rst:111 distutils/sourcedist.rst:50
msgid ""
"requires either external :program:`zip` utility or :mod:`zipfile` module "
"(part of the standard Python library since Python 1.6)"
msgstr ""

# 982871af10264466a64892945f69efdb
#: distutils/builtdist.rst:115
msgid ""
"requires external :program:`rpm` utility, version 3.0.4 or better (use ``rpm "
"--version`` to find out which version you have)"
msgstr ""

# c00fb9f3fbb148f2aab141482fcb40df
#: distutils/builtdist.rst:118
msgid ""
"You don't have to use the :command:`bdist` command with the :option:`--"
"formats` option; you can also use the command that directly implements the "
"format you're interested in.  Some of these :command:`bdist` \"sub-commands"
"\" actually generate several similar formats; for instance, the :command:"
"`bdist_dumb` command generates all the \"dumb\" archive formats (``tar``, "
"``ztar``, ``gztar``, and ``zip``), and :command:`bdist_rpm` generates both "
"binary and source RPMs.  The :command:`bdist` sub-commands, and the formats "
"generated by each, are:"
msgstr ""

# 377499c6183e46e0a77cd3cd23b84976
# b0c026da5b914788a4fc0553703404fe
#: distutils/builtdist.rst:127 distutils/commandref.rst:61
msgid "Command"
msgstr ""

# 44ba90ba8fa84790830360ddb9270184
#: distutils/builtdist.rst:127
msgid "Formats"
msgstr ""

# 6fb3185f759b4030b49015df0f7fb040
#: distutils/builtdist.rst:129
msgid ":command:`bdist_dumb`"
msgstr ""

# 71cc95494e5d4e8584dbab53f477b07a
#: distutils/builtdist.rst:129
msgid "tar, ztar, gztar, zip"
msgstr ""

# 41609f291caa421db8ed10b3ef66ab95
#: distutils/builtdist.rst:131
msgid ":command:`bdist_rpm`"
msgstr ""

# 325e25b4a09542cdabfd43c855d60911
#: distutils/builtdist.rst:131
msgid "rpm, srpm"
msgstr ""

# 60f6ab586bee4dfca34e98b504d12d31
#: distutils/builtdist.rst:133
msgid ":command:`bdist_wininst`"
msgstr ""

# 163dac68b2b64b9db3b83eef92425ae6
#: distutils/builtdist.rst:133
msgid "wininst"
msgstr ""

# 04e661e470924ac49ffd612babdc9146
#: distutils/builtdist.rst:135
msgid ":command:`bdist_msi`"
msgstr ""

# 12d3274dbe4b4398a99676abda66d9da
#: distutils/builtdist.rst:135
msgid "msi"
msgstr ""

# 75df2389565c4d389f37c45c7beed3b1
#: distutils/builtdist.rst:138
msgid ""
"The following sections give details on the individual :command:`bdist_\\*` "
"commands."
msgstr ""

# 5f021a4dfc6646beb22ecfb56367a24b
#: distutils/builtdist.rst:154
msgid "Creating RPM packages"
msgstr ""

# 2808bfe2c6874eda9f6e99d08dc8bce5
#: distutils/builtdist.rst:156
msgid ""
"The RPM format is used by many popular Linux distributions, including Red "
"Hat, SuSE, and Mandrake.  If one of these (or any of the other RPM-based "
"Linux distributions) is your usual environment, creating RPM packages for "
"other users of that same distribution is trivial. Depending on the "
"complexity of your module distribution and differences between Linux "
"distributions, you may also be able to create RPMs that work on different "
"RPM-based distributions."
msgstr ""

# 07a8cd2b23f04c1a9209de628657cf46
#: distutils/builtdist.rst:163
msgid ""
"The usual way to create an RPM of your module distribution is to run the :"
"command:`bdist_rpm` command::"
msgstr ""

# 53e09b64394f492cb0136196e76fe377
#: distutils/builtdist.rst:168
msgid "or the :command:`bdist` command with the :option:`--format` option::"
msgstr ""

# 956029044c324fdab2fe0986c73f8aff
#: distutils/builtdist.rst:172
msgid ""
"The former allows you to specify RPM-specific options; the latter allows  "
"you to easily specify multiple formats in one run.  If you need to do both, "
"you can explicitly specify multiple :command:`bdist_\\*` commands and their "
"options::"
msgstr ""

# 120cf8c6cc554c69b4fb932c508a1c64
#: distutils/builtdist.rst:179
msgid ""
"Creating RPM packages is driven by a :file:`.spec` file, much as using the "
"Distutils is driven by the setup script.  To make your life easier, the :"
"command:`bdist_rpm` command normally creates a :file:`.spec` file based on "
"the information you supply in the setup script, on the command line, and in "
"any Distutils configuration files.  Various options and sections in the :"
"file:`.spec` file are derived from options in the setup script as follows:"
msgstr ""

# 5d297563f1724f8db46acff0542be97c
# c3b2a4984d474999848238430311f57c
#: distutils/builtdist.rst:187 distutils/builtdist.rst:211
msgid "RPM :file:`.spec` file option or section"
msgstr ""

# 309b876c7a1b40c79dd50dae14b13472
#: distutils/builtdist.rst:187
msgid "Distutils setup script option"
msgstr ""

# e8eebd088c7c4b089cb402b98d378db6
#: distutils/builtdist.rst:189
msgid "Name"
msgstr "Nom"

# 24ea1e4f80d94bad874475f13aa73186
#: distutils/builtdist.rst:189
msgid ":option:`name`"
msgstr ""

# 08201e92a106491ebb3720d7a67bf90f
#: distutils/builtdist.rst:191
msgid "Summary (in preamble)"
msgstr ""

# bb4a986c682f443582d14c8918c3c088
#: distutils/builtdist.rst:191
msgid ":option:`description`"
msgstr ""

# a659bc88cd0a43089e6aceedba830921
#: distutils/builtdist.rst:193
msgid "Version"
msgstr ""

# 0d2f4344cf9a4de2a033cd95e10beed1
#: distutils/builtdist.rst:193
msgid ":option:`version`"
msgstr ""

# bf1ac933f0604616af3f9e3438b2471f
# 24dd987c81bd45fb88de557966cb46c8
#: distutils/builtdist.rst:195 distutils/builtdist.rst:218
msgid "Vendor"
msgstr ""

# 896a4ceb9d734efd91192f3abad6ecfa
#: distutils/builtdist.rst:195
msgid ""
":option:`author` and :option:`author_email`, or  --- & :option:`maintainer` "
"and :option:`maintainer_email`"
msgstr ""

# 57a9e4805b594adcba3ca694a6be01de
#: distutils/builtdist.rst:199
msgid "Copyright"
msgstr ""

# 9dc7696b0d03443491a588b3a830d794
#: distutils/builtdist.rst:199
msgid ":option:`license`"
msgstr ""

# 24896e33bc274c3a9bf9012714a873f4
#: distutils/builtdist.rst:201
msgid "Url"
msgstr ""

# 00d168587fd64f938a6c7a6a4f3f3b59
#: distutils/builtdist.rst:201
msgid ":option:`url`"
msgstr ""

# 63c454ff88924c778a792a69fe10bddc
#: distutils/builtdist.rst:203
msgid "%description (section)"
msgstr ""

# 1cfb6489459849edb7189b57054fb45f
#: distutils/builtdist.rst:203
msgid ":option:`long_description`"
msgstr ""

# a23f012057a5464da268f9479a995751
#: distutils/builtdist.rst:206
msgid ""
"Additionally, there are many options in :file:`.spec` files that don't have "
"corresponding options in the setup script.  Most of these are handled "
"through options to the :command:`bdist_rpm` command as follows:"
msgstr ""

# 96048ced3639420dbcace6140fd8710a
#: distutils/builtdist.rst:211
msgid ":command:`bdist_rpm` option"
msgstr ""

# c6c89a3b635c408dbdf23f95030ab91a
#: distutils/builtdist.rst:211
msgid "default value"
msgstr ""

# b5206a1298324dd39df373b0a7c8aefc
#: distutils/builtdist.rst:214
msgid "Release"
msgstr "Publication"

# a54289a78dc0439b9734eca7aeede197
#: distutils/builtdist.rst:214
msgid ":option:`release`"
msgstr ""

# 03839cea7c364b41bb42f88b21d0c56d
#: distutils/builtdist.rst:214
msgid "\"1\""
msgstr ""

# a64080775216425cbe3738f99ea80452
#: distutils/builtdist.rst:216
msgid "Group"
msgstr ""

# 26b37c04ff514c1a9c322d5f2baae1ef
#: distutils/builtdist.rst:216
msgid ":option:`group`"
msgstr ""

# 37bf588cb86c4fe5b3a76362b9202275
#: distutils/builtdist.rst:216
msgid "\"Development/Libraries\""
msgstr ""

# 48e14479c4d14800a1413efbce3edac9
#: distutils/builtdist.rst:218
msgid ":option:`vendor`"
msgstr ""

# 6debcc23aabe488d99254cb1afb9f28b
#: distutils/builtdist.rst:218
msgid "(see above)"
msgstr ""

# 7b5838f93c024529a9377efc0a907c70
#: distutils/builtdist.rst:220
msgid "Packager"
msgstr ""

# 1ae28d68f6b34883acd53a2ab9b222cd
#: distutils/builtdist.rst:220
msgid ":option:`packager`"
msgstr ""

# 95a3c8d823dc4a99be11ffb6dc2d8ab7
# c51c4e75227a4a5ab53f2eebd83ec04b
# 803fd69e6ced4b10be92066c964020ee
# 2a2472b7f53446018d6fcbb652fcb498
# 563afb665443431cb39a156f9ee23e17
# 95c40aacbfc84b23b976d4c0957d134f
# 3fa385bebd8b496594fab38c891b17f0
# 3ce586753874486bb3c4705c4d270575
#: distutils/builtdist.rst:220 distutils/builtdist.rst:222
#: distutils/builtdist.rst:224 distutils/builtdist.rst:226
#: distutils/builtdist.rst:228 distutils/builtdist.rst:230
#: distutils/builtdist.rst:232 distutils/builtdist.rst:234
msgid "(none)"
msgstr ""

# 0b995b172124459eabea2e4f7001b02d
#: distutils/builtdist.rst:222
msgid "Provides"
msgstr ""

# a980e6785e844d168d951e1355145f91
#: distutils/builtdist.rst:222
msgid ":option:`provides`"
msgstr ""

# f0c03a11b27c4cdb9840e5569291e304
#: distutils/builtdist.rst:224
msgid "Requires"
msgstr ""

# b57217e04bc0439f8fd3ee9a8587f6be
#: distutils/builtdist.rst:224
msgid ":option:`requires`"
msgstr ""

# 6bbcb5373af8464ea9f5789508291c9e
#: distutils/builtdist.rst:226
msgid "Conflicts"
msgstr ""

# 292ddd40bced42ebaff2fd74ee702001
#: distutils/builtdist.rst:226
msgid ":option:`conflicts`"
msgstr ""

# f71fb25f69114a9f9bbea2e5d26df606
#: distutils/builtdist.rst:228
msgid "Obsoletes"
msgstr ""

# 2c6681d4006342e089609827249aa004
#: distutils/builtdist.rst:228
msgid ":option:`obsoletes`"
msgstr ""

# b9ec77bd642b4a35b078e2986cf172b8
#: distutils/builtdist.rst:230
msgid "Distribution"
msgstr ""

# 3e6a6122f1224f199cf9ac509f88577d
#: distutils/builtdist.rst:230
msgid ":option:`distribution_name`"
msgstr ""

# 33de5202e5fa48e79b3810b330e286dd
#: distutils/builtdist.rst:232
msgid "BuildRequires"
msgstr ""

# ca89dbd027e84e8c965783a46a42552d
#: distutils/builtdist.rst:232
msgid ":option:`build_requires`"
msgstr ""

# 7585b0b8ed154ad69e707a2893aded75
#: distutils/builtdist.rst:234
msgid "Icon"
msgstr ""

# a330fcfb0cad4d19b0c71ed5da8f977e
#: distutils/builtdist.rst:234
msgid ":option:`icon`"
msgstr ""

# 0fd298bb290d4755beafd798c1ce3de2
#: distutils/builtdist.rst:237
msgid ""
"Obviously, supplying even a few of these options on the command-line would "
"be tedious and error-prone, so it's usually best to put them in the setup "
"configuration file, :file:`setup.cfg`\\ ---see section :ref:`setup-config`.  "
"If you distribute or package many Python module distributions, you might "
"want to put options that apply to all of them in your personal Distutils "
"configuration file (:file:`~/.pydistutils.cfg`)."
msgstr ""

# 3bd2cc7edf6a4df3a140533b834aabca
#: distutils/builtdist.rst:244
msgid ""
"There are three steps to building a binary RPM package, all of which are "
"handled automatically by the Distutils:"
msgstr ""

# 8c1ffdcd38f34e7f904af00b536f31e7
#: distutils/builtdist.rst:247
msgid ""
"create a :file:`.spec` file, which describes the package (analogous  to the "
"Distutils setup script; in fact, much of the information in the  setup "
"script winds up in the :file:`.spec` file)"
msgstr ""

# 5dca84fe8fcb4a3096db3779687f0db0
#: distutils/builtdist.rst:251
msgid "create the source RPM"
msgstr ""

# 69f184bbc9fc44de97a70785b61d9775
#: distutils/builtdist.rst:253
msgid ""
"create the \"binary\" RPM (which may or may not contain binary code, "
"depending on whether your module distribution contains Python extensions)"
msgstr ""

# 283747728fc144b4b1908ff47e85b4ac
#: distutils/builtdist.rst:256
msgid ""
"Normally, RPM bundles the last two steps together; when you use the "
"Distutils, all three steps are typically bundled together."
msgstr ""

# 18657afe2a4a42219ece92179ac7d29b
#: distutils/builtdist.rst:259
msgid ""
"If you wish, you can separate these three steps.  You can use the :option:`--"
"spec-only` option to make :command:`bdist_rpm` just create the :file:`.spec` "
"file and exit; in this case, the :file:`.spec` file will be written to the "
"\"distribution directory\"---normally :file:`dist/`, but customizable with "
"the :option:`--dist-dir` option.  (Normally, the :file:`.spec` file winds up "
"deep in the \"build tree,\" in a temporary directory created by :command:"
"`bdist_rpm`.)"
msgstr ""

# 97fccba7d7464f2b8768e0423cee2938
#: distutils/builtdist.rst:287
msgid "Creating Windows Installers"
msgstr ""

# 42c331566eac49cc8d8c0e6174fd4f06
#: distutils/builtdist.rst:289
msgid ""
"Executable installers are the natural format for binary distributions on "
"Windows.  They display a nice graphical user interface, display some "
"information about the module distribution to be installed taken from the "
"metadata in the setup script, let the user select a few options, and start "
"or cancel the installation."
msgstr ""

# b051982dade34f76ae6db1e7839b9eed
#: distutils/builtdist.rst:295
msgid ""
"Since the metadata is taken from the setup script, creating Windows "
"installers is usually as easy as running::"
msgstr ""

# f7ae0a53b24a41738c4cce4ae5e9d9d3
#: distutils/builtdist.rst:300
msgid "or the :command:`bdist` command with the :option:`--formats` option::"
msgstr ""

# bf29c61523024851bdb2dbaaa4ea93bc
#: distutils/builtdist.rst:304
msgid ""
"If you have a pure module distribution (only containing pure Python modules "
"and packages), the resulting installer will be version independent and have "
"a name like :file:`foo-1.0.win32.exe`.  These installers can even be created "
"on Unix platforms or Mac OS X."
msgstr ""

# 61eca1cb30894d1b8f3307627b6b8d4b
#: distutils/builtdist.rst:309
msgid ""
"If you have a non-pure distribution, the extensions can only be created on a "
"Windows platform, and will be Python version dependent. The installer "
"filename will reflect this and now has the form :file:`foo-1.0.win32-py2.0."
"exe`.  You have to create a separate installer for every Python version you "
"want to support."
msgstr ""

# ce829515fe884d96b81eb55142b9de1f
#: distutils/builtdist.rst:315
msgid ""
"The installer will try to compile pure modules into :term:`bytecode` after "
"installation on the target system in normal and optimizing mode.  If you "
"don't want this to happen for some reason, you can run the :command:"
"`bdist_wininst` command with the :option:`--no-target-compile` and/or the :"
"option:`--no-target-optimize` option."
msgstr ""

# 4d825bc5fb6f45ca984ee58d194b56eb
#: distutils/builtdist.rst:321
msgid ""
"By default the installer will display the cool \"Python Powered\" logo when "
"it is run, but you can also supply your own 152x261 bitmap which must be a "
"Windows :file:`.bmp` file with the :option:`--bitmap` option."
msgstr ""

# 5a040846e16449b58435416ae662b5c6
#: distutils/builtdist.rst:325
msgid ""
"The installer will also display a large title on the desktop background "
"window when it is run, which is constructed from the name of your "
"distribution and the version number.  This can be changed to another text by "
"using the :option:`--title` option."
msgstr ""

# 9ad2edacf63543058a74a8e4c01b3be4
#: distutils/builtdist.rst:330
msgid ""
"The installer file will be written to the \"distribution directory\" --- "
"normally :file:`dist/`, but customizable with the :option:`--dist-dir` "
"option."
msgstr ""

# b486e4307fb14017b809f45dc4a7f338
#: distutils/builtdist.rst:336
msgid "Cross-compiling on Windows"
msgstr ""

# b29f4128a1b44ec899d8cf61d47acc81
#: distutils/builtdist.rst:338
msgid ""
"Starting with Python 2.6, distutils is capable of cross-compiling between "
"Windows platforms.  In practice, this means that with the correct tools "
"installed, you can use a 32bit version of Windows to create 64bit extensions "
"and vice-versa."
msgstr ""

# 89a92e75ba724b069b72f350f5641c08
#: distutils/builtdist.rst:343
msgid ""
"To build for an alternate platform, specify the :option:`--plat-name` option "
"to the build command.  Valid values are currently 'win32', 'win-amd64' and "
"'win-ia64'.  For example, on a 32bit version of Windows, you could execute::"
msgstr ""

# 04424980458945c2901fe2210854a800
#: distutils/builtdist.rst:349
msgid ""
"to build a 64bit version of your extension.  The Windows Installers also "
"support this option, so the command::"
msgstr ""

# 9a8c16cd7c494ae6ac31bf2c47dfa592
#: distutils/builtdist.rst:354
msgid ""
"would create a 64bit installation executable on your 32bit version of "
"Windows."
msgstr ""

# d766b6b9763b456481f3c326fd2c80b1
#: distutils/builtdist.rst:356
msgid ""
"To cross-compile, you must download the Python source code and cross-compile "
"Python itself for the platform you are targetting - it is not possible from "
"a binary installation of Python (as the .lib etc file for other platforms "
"are not included.)  In practice, this means the user of a 32 bit operating "
"system will need to use Visual Studio 2008 to open the :file:`PCBuild/"
"PCbuild.sln` solution in the Python source tree and build the \"x64\" "
"configuration of the 'pythoncore' project before cross-compiling extensions "
"is possible."
msgstr ""

# b926afbc06294092ac6ed63f6478a6cf
#: distutils/builtdist.rst:365
msgid ""
"Note that by default, Visual Studio 2008 does not install 64bit compilers or "
"tools.  You may need to reexecute the Visual Studio setup process and select "
"these tools (using Control Panel->[Add/Remove] Programs is a convenient way "
"to check or modify your existing install.)"
msgstr ""

# 25ebc6bda477430cb7a743f5fb820b28
#: distutils/builtdist.rst:373
msgid "The Postinstallation script"
msgstr ""

# 224f40812ca9444f9c991bca5f2480a0
#: distutils/builtdist.rst:375
msgid ""
"Starting with Python 2.3, a postinstallation script can be specified with "
"the :option:`--install-script` option.  The basename of the script must be "
"specified, and the script filename must also be listed in the scripts "
"argument to the setup function."
msgstr ""

# 9e17dafbc5854a7e95476546e30574f3
#: distutils/builtdist.rst:380
msgid ""
"This script will be run at installation time on the target system after all "
"the files have been copied, with ``argv[1]`` set to :option:`-install`, and "
"again at uninstallation time before the files are removed with ``argv[1]`` "
"set to :option:`-remove`."
msgstr ""

# 523e2938df8b49fb83b9ce2a7033d390
#: distutils/builtdist.rst:385
msgid ""
"The installation script runs embedded in the windows installer, every output "
"(``sys.stdout``, ``sys.stderr``) is redirected into a buffer and will be "
"displayed in the GUI after the script has finished."
msgstr ""

# a80d00c2d75047289a7f1315100abded
#: distutils/builtdist.rst:389
msgid ""
"Some functions especially useful in this context are available as additional "
"built-in functions in the installation script."
msgstr ""

# 75a5a13c39f14081b398dc550c63ebc5
#: distutils/builtdist.rst:396
msgid ""
"These functions should be called when a directory or file is created by the "
"postinstall script at installation time.  It will register *path* with the "
"uninstaller, so that it will be removed when the distribution is "
"uninstalled. To be safe, directories are only removed if they are empty."
msgstr ""

# 5cba9da469204e4582cc08436c0ef22a
#: distutils/builtdist.rst:404
msgid ""
"This function can be used to retrieve special folder locations on Windows "
"like the Start Menu or the Desktop.  It returns the full path to the folder. "
"*csidl_string* must be one of the following strings::"
msgstr ""

# e1fa90e705a442c78ba30f2330b7d054
#: distutils/builtdist.rst:424
msgid "If the folder cannot be retrieved, :exc:`OSError` is raised."
msgstr ""

# f11ec48d8b404976bc6bba7193e265ae
#: distutils/builtdist.rst:426
msgid ""
"Which folders are available depends on the exact Windows version, and "
"probably also the configuration.  For details refer to Microsoft's "
"documentation of the :c:func:`SHGetSpecialFolderPath` function."
msgstr ""

# c3330bdaeda94acfaaa9126d48ecb435
#: distutils/builtdist.rst:433
msgid ""
"This function creates a shortcut. *target* is the path to the program to be "
"started by the shortcut. *description* is the description of the shortcut. "
"*filename* is the title of the shortcut that the user will see. *arguments* "
"specifies the command line arguments, if any. *workdir* is the working "
"directory for the program. *iconpath* is the file containing the icon for "
"the shortcut, and *iconindex* is the index of the icon in the file "
"*iconpath*.  Again, for details consult the Microsoft documentation for the :"
"class:`IShellLink` interface."
msgstr ""

# a5bb1dcd939c448ebe78ecc697ae21f3
#: distutils/builtdist.rst:444
msgid "Vista User Access Control (UAC)"
msgstr ""

# 9716de89873e4c54896273728405d0f5
#: distutils/builtdist.rst:446
msgid ""
"Starting with Python 2.6, bdist_wininst supports a :option:`--user-access-"
"control` option.  The default is 'none' (meaning no UAC handling is done), "
"and other valid values are 'auto' (meaning prompt for UAC elevation if "
"Python was installed for all users) and 'force' (meaning always prompt for "
"elevation)."
msgstr ""

# e988b5e03f2f444ba6a315a58290cbba
#: distutils/commandref.rst:5
msgid "Command Reference"
msgstr ""

# 38cc7489b9484c77a302230f1dc96712
#: distutils/commandref.rst:22
msgid "Installing modules: the :command:`install` command family"
msgstr ""

# f8c07c3e9b6e4c47960c2bd835f33df7
#: distutils/commandref.rst:24
msgid ""
"The install command ensures that the build commands have been run and then "
"runs the subcommands :command:`install_lib`, :command:`install_data` and :"
"command:`install_scripts`."
msgstr ""

# 9357d5a6e9cb411d94641d79a65f8abe
#: distutils/commandref.rst:35
msgid ":command:`install_data`"
msgstr ""

# 59b245063c094d99b07e4009b38a9182
#: distutils/commandref.rst:37
msgid "This command installs all data files provided with the distribution."
msgstr ""

# 04adf1e3973441388eaa60a503347e41
#: distutils/commandref.rst:43
msgid ":command:`install_scripts`"
msgstr ""

# 6f20e2a7e66d4b0198bd37f121086b46
#: distutils/commandref.rst:45
msgid "This command installs all (Python) scripts in the distribution."
msgstr ""

# fae3ea7d6d164505afdfebd8ae8d8d90
#: distutils/commandref.rst:54
msgid "Creating a source distribution: the :command:`sdist` command"
msgstr ""

# 5c77b11d71284d7f8954f2037795064d
#: distutils/commandref.rst:58
msgid "The manifest template commands are:"
msgstr ""

# d1aae48b7f884caeaf00b1adb5604e4a
#: distutils/commandref.rst:63
msgid ":command:`include pat1 pat2 ...`"
msgstr ""

# a2c40857b8ca49a5a0befa8d3ec66619
#: distutils/commandref.rst:63
msgid "include all files matching any of the listed patterns"
msgstr ""

# 874b935855e04987b57dff1e8adcf89d
#: distutils/commandref.rst:66
msgid ":command:`exclude pat1 pat2 ...`"
msgstr ""

# 97b8ce6537154a95947e96446d8d5390
#: distutils/commandref.rst:66
msgid "exclude all files matching any of the listed patterns"
msgstr ""

# 374be0005b66407c957fd40dd3e109de
#: distutils/commandref.rst:69
msgid ":command:`recursive-include dir pat1 pat2 ...`"
msgstr ""

# 4c523eb71c49416c896e76a140a7245b
#: distutils/commandref.rst:69
msgid "include all files under *dir* matching any of the listed patterns"
msgstr ""

# 28fee79001994284bed9cf015ddd25e3
#: distutils/commandref.rst:72
msgid ":command:`recursive-exclude dir pat1 pat2 ...`"
msgstr ""

# 159240e4d68d4e50bf956dc71f6fd919
#: distutils/commandref.rst:72
msgid "exclude all files under *dir* matching any of the listed patterns"
msgstr ""

# 50939e8698844f208a5192f5311f5c2f
#: distutils/commandref.rst:75
msgid ":command:`global-include pat1 pat2 ...`"
msgstr ""

# b1926a02c6e04fc2acaae7f4bd9884d1
#: distutils/commandref.rst:75
msgid ""
"include all files anywhere in the source tree matching --- & any of the "
"listed patterns"
msgstr ""

# 3619ca6511234b2ba87a163647be9abd
#: distutils/commandref.rst:78
msgid ":command:`global-exclude pat1 pat2 ...`"
msgstr ""

# 658e2d70566a400c8130d035dcf2a875
#: distutils/commandref.rst:78
msgid ""
"exclude all files anywhere in the source tree matching --- & any of the "
"listed patterns"
msgstr ""

# b4484eda867040a89f9e5e0c7e6ff66c
#: distutils/commandref.rst:81
msgid ":command:`prune dir`"
msgstr ""

# a2bb9e03adde40cf90d2e2b344d83aee
#: distutils/commandref.rst:81
msgid "exclude all files under *dir*"
msgstr ""

# c7abae33cd034cababdf0db9965262d9
#: distutils/commandref.rst:83
msgid ":command:`graft dir`"
msgstr ""

# 6dbc3583a85240c8ba85fa30754db00c
#: distutils/commandref.rst:83
msgid "include all files under *dir*"
msgstr ""

# 4deb1e9336564bd088e734b7b3024de5
#: distutils/commandref.rst:86
msgid ""
"The patterns here are Unix-style \"glob\" patterns: ``*`` matches any "
"sequence of regular filename characters, ``?`` matches any single regular "
"filename character, and ``[range]`` matches any of the characters in *range* "
"(e.g., ``a-z``, ``a-zA-Z``, ``a-f0-9_.``).  The definition of \"regular "
"filename character\" is platform-specific: on Unix it is anything except "
"slash; on Windows anything except backslash or colon."
msgstr ""

# 2f6e9be3103847e4ae3363f18cc9d55d
#: distutils/configfile.rst:5
msgid "Writing the Setup Configuration File"
msgstr ""

# cfde366aa2eb416ab747a82c790cdfa1
#: distutils/configfile.rst:7
msgid ""
"Often, it's not possible to write down everything needed to build a "
"distribution *a priori*: you may need to get some information from the user, "
"or from the user's system, in order to proceed.  As long as that information "
"is fairly simple---a list of directories to search for C header files or "
"libraries, for example---then providing a configuration file, :file:`setup."
"cfg`, for users to edit is a cheap and easy way to solicit it.  "
"Configuration files also let you provide default values for any command "
"option, which the installer can then override either on the command-line or "
"by editing the config file."
msgstr ""

# 87631dbb56fa493fa0353a6b9db517a5
#: distutils/configfile.rst:16
msgid ""
"The setup configuration file is a useful middle-ground between the setup "
"script ---which, ideally, would be opaque to installers [#]_---and the "
"command-line to the setup script, which is outside of your control and "
"entirely up to the installer.  In fact, :file:`setup.cfg` (and any other "
"Distutils configuration files present on the target system) are processed "
"after the contents of the setup script, but before the command-line.  This "
"has  several useful consequences:"
msgstr ""

# 444fb94264124a189682b8a7fbf0630f
#: distutils/configfile.rst:30
msgid ""
"installers can override some of what you put in :file:`setup.py` by editing :"
"file:`setup.cfg`"
msgstr ""

# 8afc3a7ef0f04a11a6d772145b0c464c
#: distutils/configfile.rst:33
msgid ""
"you can provide non-standard defaults for options that are not easily set "
"in :file:`setup.py`"
msgstr ""

# 73cfb9fee3bb43f3921daf622700824c
#: distutils/configfile.rst:36
msgid ""
"installers can override anything in :file:`setup.cfg` using the command-line "
"options to :file:`setup.py`"
msgstr ""

# ebdb73dbbc4d4285ba894acd33bfdfa0
#: distutils/configfile.rst:39
msgid "The basic syntax of the configuration file is simple::"
msgstr ""

# 4720467fcf8e495a9047a79ead62ec61
#: distutils/configfile.rst:45
msgid ""
"where *command* is one of the Distutils commands (e.g. :command:`build_py`, :"
"command:`install`), and *option* is one of the options that command "
"supports. Any number of options can be supplied for each command, and any "
"number of command sections can be included in the file.  Blank lines are "
"ignored, as are comments, which run from a ``'#'`` character until the end "
"of the line.  Long option values can be split across multiple lines simply "
"by indenting the continuation lines."
msgstr ""

# e684f2cae5924734899419bea613d3c0
#: distutils/configfile.rst:53
msgid ""
"You can find out the list of options supported by a particular command with "
"the universal :option:`--help` option, e.g. ::"
msgstr ""

# 07565e00f1e94a2ea749814bb9f5c3f3
#: distutils/configfile.rst:69
msgid ""
"Note that an option spelled :option:`--foo-bar` on the command-line  is "
"spelled :option:`foo_bar` in configuration files."
msgstr ""

# 26f9d1003fb349dc961f1cd6d13caee4
#: distutils/configfile.rst:72
msgid ""
"For example, say you want your extensions to be built \"in-place\"---that "
"is, you have an extension :mod:`pkg.ext`, and you want the compiled "
"extension file (:file:`ext.so` on Unix, say) to be put in the same source "
"directory as your pure Python modules :mod:`pkg.mod1` and :mod:`pkg.mod2`.  "
"You can always use the :option:`--inplace` option on the command-line to "
"ensure this::"
msgstr ""

# df62b8775aa74055bd91b9d829d46506
#: distutils/configfile.rst:80
msgid ""
"But this requires that you always specify the :command:`build_ext` command "
"explicitly, and remember to provide :option:`--inplace`. An easier way is to "
"\"set and forget\" this option, by encoding it in :file:`setup.cfg`, the "
"configuration file for this distribution::"
msgstr ""

# 5d257de011d644d28c55accb4c360651
#: distutils/configfile.rst:88
msgid ""
"This will affect all builds of this module distribution, whether or not you "
"explicitly specify :command:`build_ext`.  If you include :file:`setup.cfg` "
"in your source distribution, it will also affect end-user builds---which is "
"probably a bad idea for this option, since always building extensions in-"
"place would break installation of the module distribution.  In certain "
"peculiar cases, though, modules are built right in their installation "
"directory, so this is conceivably a useful ability.  (Distributing "
"extensions that expect to be built in their installation directory is almost "
"always a bad idea, though.)"
msgstr ""

# b534c98ffc4d443f89794aea26a6bb49
#: distutils/configfile.rst:97
msgid ""
"Another example: certain commands take a lot of options that don't change "
"from run to run; for example, :command:`bdist_rpm` needs to know everything "
"required to generate a \"spec\" file for creating an RPM distribution.  Some "
"of this information comes from the setup script, and some is automatically "
"generated by the Distutils (such as the list of files installed).  But some "
"of it has to be supplied as options to :command:`bdist_rpm`, which would be "
"very tedious to do on the command-line for every run.  Hence, here is a "
"snippet from the Distutils' own :file:`setup.cfg`::"
msgstr ""

# 258a1a691f5245edaf6881029c4d2911
#: distutils/configfile.rst:115
msgid ""
"Note that the :option:`doc_files` option is simply a whitespace-separated "
"string split across multiple lines for readability."
msgstr ""

# da3d6c3d2f8d4179856a0a43726ec073
#: distutils/configfile.rst:122
msgid ":ref:`inst-config-syntax` in \"Installing Python Modules\""
msgstr ""

# 6e54c2d61f504f6a9e3bd8c53da3066a
#: distutils/configfile.rst:122
msgid ""
"More information on the configuration files is available in the manual for "
"system administrators."
msgstr ""

# 25a2f96519614f80a7d77861ed0466f0
#: distutils/configfile.rst:127
msgid "Footnotes"
msgstr ""

# c7527531837d4bbbb14cce173d49961b
#: distutils/configfile.rst:128
msgid ""
"This ideal probably won't be achieved until auto-configuration is fully "
"supported by the Distutils."
msgstr ""

# b8dfc06112cb42219ddc1ab7ccbc2edf
#: distutils/examples.rst:5
msgid "Examples"
msgstr ""

# 7d32e13ce30440b793ef806877934b8d
#: distutils/examples.rst:7
msgid ""
"This chapter provides a number of basic examples to help get started with "
"distutils.  Additional information about using distutils can be found in the "
"Distutils Cookbook."
msgstr ""

# 5c1ad2dd37ae40e0a62f06f0fe17d588
#: distutils/examples.rst:14
msgid "`Distutils Cookbook <http://wiki.python.org/moin/Distutils/Cookbook>`_"
msgstr ""

# 7e564fa128d747f1bfdd305589e386d0
#: distutils/examples.rst:15
msgid ""
"Collection of recipes showing how to achieve more control over distutils."
msgstr ""

# fbcb8fe166934103a92043de8ed05bb6
#: distutils/examples.rst:21
msgid "Pure Python distribution (by module)"
msgstr ""

# 0e3acc2f6b084399a8e73f2a344675e9
#: distutils/examples.rst:23
msgid ""
"If you're just distributing a couple of modules, especially if they don't "
"live in a particular package, you can specify them individually using the :"
"option:`py_modules` option in the setup script."
msgstr ""

# 1fa7d4ff80b04e98aa21cfb0acb4016c
#: distutils/examples.rst:27
msgid ""
"In the simplest case, you'll have two files to worry about: a setup script "
"and the single module you're distributing, :file:`foo.py` in this example::"
msgstr ""

# b86151d3fe334d22bb5b453c8c653ee9
#: distutils/examples.rst:34
msgid ""
"(In all diagrams in this section, *<root>* will refer to the distribution "
"root directory.)  A minimal setup script to describe this situation would "
"be::"
msgstr ""

# a569f8817a8f4eb6bd556ecba1f59cde
#: distutils/examples.rst:43
msgid ""
"Note that the name of the distribution is specified independently with the :"
"option:`name` option, and there's no rule that says it has to be the same as "
"the name of the sole module in the distribution (although that's probably a "
"good convention to follow).  However, the distribution name is used to "
"generate filenames, so you should stick to letters, digits, underscores, and "
"hyphens."
msgstr ""

# 1b27d698f85e4d2f9af2e42d32baee4b
#: distutils/examples.rst:49
msgid ""
"Since :option:`py_modules` is a list, you can of course specify multiple "
"modules, eg. if you're distributing modules :mod:`foo` and :mod:`bar`, your "
"setup might look like this::"
msgstr ""

# 8286a3d09bcf47a2a448dd8388008453
#: distutils/examples.rst:58
msgid "and the setup script might be  ::"
msgstr ""

# b089a330d3b6477db2e2f0a8447c51ff
#: distutils/examples.rst:66
msgid ""
"You can put module source files into another directory, but if you have "
"enough modules to do that, it's probably easier to specify modules by "
"package rather than listing them individually."
msgstr ""

# 25134f8b87b94206b66b9db03f83271d
#: distutils/examples.rst:74
msgid "Pure Python distribution (by package)"
msgstr ""

# 859edd643def4e299a87aa037227805f
#: distutils/examples.rst:76
msgid ""
"If you have more than a couple of modules to distribute, especially if they "
"are in multiple packages, it's probably easier to specify whole packages "
"rather than individual modules.  This works even if your modules are not in "
"a package; you can just tell the Distutils to process modules from the root "
"package, and that works the same as any other package (except that you don't "
"have to have an :file:`__init__.py` file)."
msgstr ""

# 63a6804bd1d54cdea1289abd16019cfa
#: distutils/examples.rst:83
msgid "The setup script from the last example could also be written as  ::"
msgstr ""

# c4ab647e8baa472c8968f4bf7647297d
#: distutils/examples.rst:91
msgid "(The empty string stands for the root package.)"
msgstr ""

# fe54effe83d041098dee5c3cc7915d0e
#: distutils/examples.rst:93
msgid ""
"If those two files are moved into a subdirectory, but remain in the root "
"package, e.g.::"
msgstr ""

# f0536672aeb3490c962001afe2b29f60
#: distutils/examples.rst:101
msgid ""
"then you would still specify the root package, but you have to tell the "
"Distutils where source files in the root package live::"
msgstr ""

# 7ac180c7b5b04bcf8ffdbb35fbea9afd
#: distutils/examples.rst:111
msgid ""
"More typically, though, you will want to distribute multiple modules in the "
"same package (or in sub-packages).  For example, if the :mod:`foo`  and :mod:"
"`bar` modules belong in package :mod:`foobar`, one way to layout your source "
"tree is ::"
msgstr ""

# fa04302b5dc54c88a10760ea6f3ddd6a
#: distutils/examples.rst:123
msgid ""
"This is in fact the default layout expected by the Distutils, and the one "
"that requires the least work to describe in your setup script::"
msgstr ""

# 97824761d224449b9b1118be57ffbf2a
#: distutils/examples.rst:132
msgid ""
"If you want to put modules in directories not named for their package, then "
"you need to use the :option:`package_dir` option again.  For example, if "
"the :file:`src` directory holds modules in the :mod:`foobar` package::"
msgstr ""

# 1201b5eb278a4ae899dc7ee562ecd0fc
#: distutils/examples.rst:143
msgid "an appropriate setup script would be  ::"
msgstr ""

# 8166dcb51bdd4197ac05ed4fab1993fb
#: distutils/examples.rst:152
msgid ""
"Or, you might put modules from your main package right in the distribution "
"root::"
msgstr ""

# f68ee370b01e47489c575a9e2722ae67
#: distutils/examples.rst:161
msgid "in which case your setup script would be  ::"
msgstr ""

# bddd122251454afbb25428d471990474
#: distutils/examples.rst:170
msgid "(The empty string also stands for the current directory.)"
msgstr ""

# 676e5597d67547fbb19dbe608c71a85a
#: distutils/examples.rst:172
msgid ""
"If you have sub-packages, they must be explicitly listed in :option:"
"`packages`, but any entries in :option:`package_dir` automatically extend to "
"sub-packages. (In other words, the Distutils does *not* scan your source "
"tree, trying to figure out which directories correspond to Python packages "
"by looking for :file:`__init__.py` files.)  Thus, if the default layout "
"grows a sub-package::"
msgstr ""

# 9129c0a340764058be631ec8ff4c6316
#: distutils/examples.rst:188
msgid "then the corresponding setup script would be  ::"
msgstr ""

# a5b542d1ce0a463bbafb7c94ba1a9042
#: distutils/examples.rst:196
msgid ""
"(Again, the empty string in :option:`package_dir` stands for the current "
"directory.)"
msgstr ""

# bf0c60592f5144098676fbec301998bf
#: distutils/examples.rst:203
msgid "Single extension module"
msgstr ""

# 033e04df96c84974a6320ec62eccb336
#: distutils/examples.rst:205
msgid ""
"Extension modules are specified using the :option:`ext_modules` option. :"
"option:`package_dir` has no effect on where extension source files are "
"found; it only affects the source for pure Python modules.  The simplest  "
"case, a single extension module in a single C source file, is::"
msgstr ""

# dfeea55c5f0a48d9861259eb95cfaf4f
#: distutils/examples.rst:214
msgid ""
"If the :mod:`foo` extension belongs in the root package, the setup script "
"for this could be  ::"
msgstr ""

# dacf70b80c5d4fd3b21d774177dc82d2
#: distutils/examples.rst:224
msgid "If the extension actually belongs in a package, say :mod:`foopkg`, then"
msgstr ""

# 1dff94e007f34768a943d1b3e9250f21
#: distutils/examples.rst:226
msgid ""
"With exactly the same source tree layout, this extension can be put in the :"
"mod:`foopkg` package simply by changing the name of the extension::"
msgstr ""

# b67df1941fbe4edbbe926fabb7c80d01
#: distutils/examples.rst:237
msgid "Checking a package"
msgstr ""

# 86f1c409a0b144a9afc84e2159ad0103
#: distutils/examples.rst:239
msgid ""
"The ``check`` command allows you to verify if your package meta-data meet "
"the minimum requirements to build a distribution."
msgstr ""

# 1fb2805637654505b03d3d944aa51e6a
#: distutils/examples.rst:242
msgid ""
"To run it, just call it using your :file:`setup.py` script. If something is "
"missing, ``check`` will display a warning."
msgstr ""

# 72963b87ed784ee0829ae5cd60b34cba
#: distutils/examples.rst:245
msgid "Let's take an example with a simple script::"
msgstr ""

# 96ad364c37a84bf893bc4c027550c90b
#: distutils/examples.rst:251
msgid "Running the ``check`` command will display some warnings::"
msgstr ""

# b24488c91a2c45fb91f9f4047c7aa4e5
#: distutils/examples.rst:260
msgid ""
"If you use the reStructuredText syntax in the ``long_description`` field and "
"`docutils`_  is installed you can check if the syntax is fine with the "
"``check`` command, using the ``restructuredtext`` option."
msgstr ""

# b5eb00e6614d41ffa3d599f99f60d4b0
#: distutils/examples.rst:264
msgid "For example, if the :file:`setup.py` script is changed like this::"
msgstr ""

# b8fa070f54de46348334f3b3d88619e3
#: distutils/examples.rst:279
msgid ""
"Where the long description is broken, ``check`` will be able to detect it by "
"using the :mod:`docutils` parser::"
msgstr ""

# 7ac8d46a141b4b47b88d7715f060cfba
#: distutils/extending.rst:5
msgid "Extending Distutils"
msgstr ""

# e9acb4de61014118b553288c632c6925
#: distutils/extending.rst:7
msgid ""
"Distutils can be extended in various ways.  Most extensions take the form of "
"new commands or replacements for existing commands.  New commands may be "
"written to support new types of platform-specific packaging, for example, "
"while replacements for existing commands may be made to modify details of "
"how the command operates on a package."
msgstr ""

# 22ae005bf6ef4c5cb0fb228bc36f8f3f
#: distutils/extending.rst:13
msgid ""
"Most extensions of the distutils are made within :file:`setup.py` scripts "
"that want to modify existing commands; many simply add a few file extensions "
"that should be copied into packages in addition to :file:`.py` files as a "
"convenience."
msgstr ""

# 9ef92d4ed9f24e0c8159583f851f56db
#: distutils/extending.rst:18
msgid ""
"Most distutils command implementations are subclasses of the :class:"
"`distutils.cmd.Command` class.  New commands may directly inherit from :"
"class:`Command`, while replacements often derive from :class:`Command` "
"indirectly, directly subclassing the command they are replacing.  Commands "
"are required to derive from :class:`Command`."
msgstr ""

# e8ef57a8b69541978a18d8f5c967c19e
#: distutils/extending.rst:33
msgid "Integrating new commands"
msgstr ""

# 0bedc7c1f126460b8222834d40a7d953
#: distutils/extending.rst:35
msgid ""
"There are different ways to integrate new command implementations into "
"distutils.  The most difficult is to lobby for the inclusion of the new "
"features in distutils itself, and wait for (and require) a version of Python "
"that provides that support.  This is really hard for many reasons."
msgstr ""

# 2a11c855cd8b404ea3fd33461c23caeb
#: distutils/extending.rst:40
msgid ""
"The most common, and possibly the most reasonable for most needs, is to "
"include the new implementations with your :file:`setup.py` script, and cause "
"the :func:`distutils.core.setup` function use them::"
msgstr ""

# f680adfa7e6046cc9266c664c94d5a9a
#: distutils/extending.rst:55
msgid ""
"This approach is most valuable if the new implementations must be used to "
"use a particular package, as everyone interested in the package will need to "
"have the new command implementation."
msgstr ""

# 5d6f88e75e0e4edd8fb0387059acab41
#: distutils/extending.rst:59
msgid ""
"Beginning with Python 2.4, a third option is available, intended to allow "
"new commands to be added which can support existing :file:`setup.py` scripts "
"without requiring modifications to the Python installation.  This is "
"expected to allow third-party extensions to provide support for additional "
"packaging systems, but the commands can be used for anything distutils "
"commands can be used for.  A new configuration option, :option:"
"`command_packages` (command-line option :option:`--command-packages`), can "
"be used to specify additional packages to be searched for modules "
"implementing commands.  Like all distutils options, this can be specified on "
"the command line or in a configuration file.  This option can only be set in "
"the ``[global]`` section of a configuration file, or before any commands on "
"the command line.  If set in a configuration file, it can be overridden from "
"the command line; setting it to an empty string on the command line causes "
"the default to be used.  This should never be set in a configuration file "
"provided with a package."
msgstr ""

# 8119f71e2c0f47d69809875eed79c70d
#: distutils/extending.rst:74
msgid ""
"This new option can be used to add any number of packages to the list of "
"packages searched for command implementations; multiple package names should "
"be separated by commas.  When not specified, the search is only performed in "
"the :mod:`distutils.command` package.  When :file:`setup.py` is run with the "
"option :option:`--command-packages` :option:`distcmds,buildcmds`, however, "
"the packages :mod:`distutils.command`, :mod:`distcmds`, and :mod:`buildcmds` "
"will be searched in that order.  New commands are expected to be implemented "
"in modules of the same name as the command by classes sharing the same "
"name.  Given the example command line option above, the command :command:"
"`bdist_openpkg` could be implemented by the class :class:`distcmds."
"bdist_openpkg.bdist_openpkg` or :class:`buildcmds.bdist_openpkg."
"bdist_openpkg`."
msgstr ""

# 0c6dbf4f447940e9813ab830eb69767f
#: distutils/extending.rst:88
msgid "Adding new distribution types"
msgstr ""

# 804be154c45d4845a6e2c177aa68f901
#: distutils/extending.rst:90
msgid ""
"Commands that create distributions (files in the :file:`dist/` directory) "
"need to add ``(command, filename)`` pairs to ``self.distribution."
"dist_files`` so that :command:`upload` can upload it to PyPI.  The "
"*filename* in the pair contains no path information, only the name of the "
"file itself.  In dry-run mode, pairs should still be added to represent what "
"would have been created."
msgstr ""

# 5d10edfd8df743d28d5394ccab09bc19
#: distutils/index.rst:5
msgid "Distributing Python Modules"
msgstr ""

# 61da7b17dd6640bf9c367f676b7bb527
#: distutils/index.rst:7
msgid "Greg Ward, Anthony Baxter"
msgstr ""

# f628be6fd7194698a698e4a5b941022d
#: distutils/index.rst:8
msgid "distutils-sig@python.org"
msgstr ""

# 2b7be301cc7147608cb80a77c676a88e
#: distutils/index.rst:10
msgid ""
"This document describes the Python Distribution Utilities (\"Distutils\") "
"from the module developer's point of view, describing how to use the "
"Distutils to make Python modules and extensions easily available to a wider "
"audience with very little overhead for build/release/install mechanics."
msgstr ""

# cd936793d3704c05b21f078e3188a27a
#: distutils/introduction.rst:5
msgid "An Introduction to Distutils"
msgstr ""

# ef4cd877c7774566916572f51ac5cb7d
#: distutils/introduction.rst:7
msgid ""
"This document covers using the Distutils to distribute your Python modules, "
"concentrating on the role of developer/distributor: if you're looking for "
"information on installing Python modules, you should refer to the :ref:"
"`install-index` chapter."
msgstr ""

# 99b110ac000d4ab8b61ae0fe05819f5f
#: distutils/introduction.rst:16
msgid "Concepts & Terminology"
msgstr ""

# 12d4cd418bb145caafff69d2844861e1
#: distutils/introduction.rst:18
msgid ""
"Using the Distutils is quite simple, both for module developers and for "
"users/administrators installing third-party modules.  As a developer, your "
"responsibilities (apart from writing solid, well-documented and well-tested "
"code, of course!) are:"
msgstr ""

# d2baff2f5c9240bea151f0676183fb5a
#: distutils/introduction.rst:23
msgid "write a setup script (:file:`setup.py` by convention)"
msgstr ""

# f902c3900ac14358bfbba157b1d201fb
#: distutils/introduction.rst:25
msgid "(optional) write a setup configuration file"
msgstr ""

# 682f885d327e4e7b9650f59bd2978e39
#: distutils/introduction.rst:27
msgid "create a source distribution"
msgstr ""

# a8bf4e3baa404a4695a459956b0b6b43
#: distutils/introduction.rst:29
msgid "(optional) create one or more built (binary) distributions"
msgstr ""

# da17a25d775047baaf8d1f367ee131c9
#: distutils/introduction.rst:31
msgid "Each of these tasks is covered in this document."
msgstr ""

# facf1af838944637b1a04350fb94724f
#: distutils/introduction.rst:33
msgid ""
"Not all module developers have access to a multitude of platforms, so it's "
"not always feasible to expect them to create a multitude of built "
"distributions.  It is hoped that a class of intermediaries, called "
"*packagers*, will arise to address this need.  Packagers will take source "
"distributions released by module developers, build them on one or more "
"platforms, and release the resulting built distributions.  Thus, users on "
"the most popular platforms will be able to install most popular Python "
"module distributions in the most natural way for their platform, without "
"having to run a single setup script or compile a line of code."
msgstr ""

# d635de6dcdc24aef86072e30d6662261
#: distutils/introduction.rst:47
msgid "A Simple Example"
msgstr "Un exemple simple"

# c6e6629fdb434a2e839732182c18614d
#: distutils/introduction.rst:49
msgid ""
"The setup script is usually quite simple, although since it's written in "
"Python, there are no arbitrary limits to what you can do with it, though you "
"should be careful about putting arbitrarily expensive operations in your "
"setup script. Unlike, say, Autoconf-style configure scripts, the setup "
"script may be run multiple times in the course of building and installing "
"your module distribution."
msgstr ""

# ec1aa98b6c6a48b3b04a136cc15a6a36
#: distutils/introduction.rst:56
msgid ""
"If all you want to do is distribute a module called :mod:`foo`, contained in "
"a file :file:`foo.py`, then your setup script can be as simple as this::"
msgstr ""

# 5974af5f34664c39860552adbf50fef0
#: distutils/introduction.rst:65
msgid "Some observations:"
msgstr ""

# dbd949702d6249879b0029097bc8a3b6
#: distutils/introduction.rst:67
msgid ""
"most information that you supply to the Distutils is supplied as keyword "
"arguments to the :func:`setup` function"
msgstr ""

# a2052950d3bd4f6d809685c7321cb2f9
#: distutils/introduction.rst:70
msgid ""
"those keyword arguments fall into two categories: package metadata (name, "
"version number) and information about what's in the package (a list of pure "
"Python modules, in this case)"
msgstr ""

# e5a0f29a4c704e5dbd0036751af2c047
#: distutils/introduction.rst:74
msgid ""
"modules are specified by module name, not filename (the same will hold true "
"for packages and extensions)"
msgstr ""

# 3b63993bf16743f689b7d16f1ac97d84
#: distutils/introduction.rst:77
msgid ""
"it's recommended that you supply a little more metadata, in particular your "
"name, email address and a URL for the project (see section :ref:`setup-"
"script` for an example)"
msgstr ""

# 0333d905aba745c1b38d0a95b87b8f85
#: distutils/introduction.rst:81
msgid ""
"To create a source distribution for this module, you would create a setup "
"script, :file:`setup.py`, containing the above code, and run this command "
"from a terminal::"
msgstr ""

# 4e87526551864dc498092053a81c2a61
#: distutils/introduction.rst:87
msgid ""
"For Windows, open a command prompt window (:menuselection:`Start --> "
"Accessories`) and change the command to::"
msgstr ""

# 8149fd36d18a4514a20ba71dd5766fd4
#: distutils/introduction.rst:92
msgid ""
":command:`sdist` will create an archive file (e.g., tarball on Unix, ZIP "
"file on Windows) containing your setup script :file:`setup.py`, and your "
"module :file:`foo.py`. The archive file will be named :file:`foo-1.0.tar.gz` "
"(or :file:`.zip`), and will unpack into a directory :file:`foo-1.0`."
msgstr ""

# 49fe5e02be9e485f9e955697ee0d69a4
#: distutils/introduction.rst:97
msgid ""
"If an end-user wishes to install your :mod:`foo` module, all she has to do "
"is download :file:`foo-1.0.tar.gz` (or :file:`.zip`), unpack it, and---from "
"the :file:`foo-1.0` directory---run ::"
msgstr ""

# 04e2f1ff8f4d448dac2bba10d96ceec0
#: distutils/introduction.rst:103
msgid ""
"which will ultimately copy :file:`foo.py` to the appropriate directory for "
"third-party modules in their Python installation."
msgstr ""

# 7d6a2e1408894785a93aca0ed5910047
#: distutils/introduction.rst:106
msgid ""
"This simple example demonstrates some fundamental concepts of the Distutils. "
"First, both developers and installers have the same basic user interface, i."
"e. the setup script.  The difference is which Distutils *commands* they use: "
"the :command:`sdist` command is almost exclusively for module developers, "
"while :command:`install` is more often for installers (although most "
"developers will want to install their own code occasionally)."
msgstr ""

# c798d92ee21443c7921222abb40f39e5
#: distutils/introduction.rst:113
msgid ""
"If you want to make things really easy for your users, you can create one or "
"more built distributions for them.  For instance, if you are running on a "
"Windows machine, and want to make things easy for other Windows users, you "
"can create an executable installer (the most appropriate type of built "
"distribution for this platform) with the :command:`bdist_wininst` command.  "
"For example::"
msgstr ""

# 3af572375b454090b9bd45147c6dcaa6
#: distutils/introduction.rst:121
msgid ""
"will create an executable installer, :file:`foo-1.0.win32.exe`, in the "
"current directory."
msgstr ""

# ebf41531ae2246d3b53a9feef0bf31b6
#: distutils/introduction.rst:124
msgid ""
"Other useful built distribution formats are RPM, implemented by the :command:"
"`bdist_rpm` command, Solaris :program:`pkgtool` (:command:`bdist_pkgtool`), "
"and HP-UX :program:`swinstall` (:command:`bdist_sdux`).  For example, the "
"following command will create an RPM file called :file:`foo-1.0.noarch.rpm`::"
msgstr ""

# 1b7d6b4207814d39a8e9c4902e7de36c
#: distutils/introduction.rst:132
msgid ""
"(The :command:`bdist_rpm` command uses the :command:`rpm` executable, "
"therefore this has to be run on an RPM-based system such as Red Hat Linux, "
"SuSE Linux, or Mandrake Linux.)"
msgstr ""

# 74f47541e005487a9492d068ea8e612b
#: distutils/introduction.rst:136
msgid ""
"You can find out what distribution formats are available at any time by "
"running ::"
msgstr ""

# d143d1ec45ad428bb7f75eaa4c31d699
#: distutils/introduction.rst:145
msgid "General Python terminology"
msgstr ""

# b075186f3da743f5b915aef50fbe4305
#: distutils/introduction.rst:147
msgid ""
"If you're reading this document, you probably have a good idea of what "
"modules, extensions, and so forth are.  Nevertheless, just to be sure that "
"everyone is operating from a common starting point, we offer the following "
"glossary of common Python terms:"
msgstr ""

# 1401622346824e38bf483c6e0881351d
#: distutils/introduction.rst:155
msgid "module"
msgstr "*py_modules*"

# c18a0870c9ca41cfa666ac129d3e5bb5
#: distutils/introduction.rst:153
msgid ""
"the basic unit of code reusability in Python: a block of code imported by "
"some other code.  Three types of modules concern us here: pure Python "
"modules, extension modules, and packages."
msgstr ""

# f5d25ed907e9497eb84abe5f8bcaf7a3
#: distutils/introduction.rst:160
msgid "pure Python module"
msgstr ""

# 68a9f9bfab7c41d48b2169da5ee74672
#: distutils/introduction.rst:158
msgid ""
"a module written in Python and contained in a single :file:`.py` file (and "
"possibly associated :file:`.pyc` and/or :file:`.pyo` files).  Sometimes "
"referred to as a \"pure module.\""
msgstr ""

# bd786f91f249497bbe73246666d23fe2
#: distutils/introduction.rst:168
msgid "extension module"
msgstr "*ext_modules*"

# efcbc20da19d41db8cbeaacbc4a3cedb
#: distutils/introduction.rst:163
msgid ""
"a module written in the low-level language of the Python implementation: C/C+"
"+ for Python, Java for Jython. Typically contained in a single dynamically "
"loadable pre-compiled file, e.g. a shared object (:file:`.so`) file for "
"Python extensions on Unix, a DLL (given the :file:`.pyd` extension) for "
"Python extensions on Windows, or a Java class file for Jython extensions.  "
"(Note that currently, the Distutils only handles C/C++ extensions for "
"Python.)"
msgstr ""

# 9e7e8ecacf794f52a6b8b3d8c1784f1b
#: distutils/introduction.rst:173
msgid "package"
msgstr "*packages*"

# 6e50147b674842289c56560c5605c3ca
#: distutils/introduction.rst:171
msgid ""
"a module that contains other modules; typically contained in a directory in "
"the filesystem and distinguished from other directories by the presence of a "
"file :file:`__init__.py`."
msgstr ""

# ecf23fa967594ac29d1a9bf08841a389
#: distutils/introduction.rst:183
msgid "root package"
msgstr "*packages*"

# 833823eae8f54c51ab6e5a8e2c022cdd
#: distutils/introduction.rst:176
msgid ""
"the root of the hierarchy of packages.  (This isn't really a package, since "
"it doesn't have an :file:`__init__.py` file.  But we have to call it "
"something.) The vast majority of the standard library is in the root "
"package, as are many small, standalone third-party modules that don't belong "
"to a larger module collection. Unlike regular packages, modules in the root "
"package can be found in many directories: in fact, every directory listed in "
"``sys.path`` contributes modules to the root package."
msgstr ""

# 5df1eca048b64129817a51e58a3a0477
#: distutils/introduction.rst:188
msgid "Distutils-specific terminology"
msgstr ""

# 81156c2ebcdf4d9391be6c1a8ef5bb9c
#: distutils/introduction.rst:190
msgid ""
"The following terms apply more specifically to the domain of distributing "
"Python modules using the Distutils:"
msgstr ""

# 597ac937c2f74c639e5a92e63d5e739d
#: distutils/introduction.rst:199
msgid "module distribution"
msgstr "description"

# 832fcb4a1c7a41dcbe3018b14b53386f
#: distutils/introduction.rst:194
msgid ""
"a collection of Python modules distributed together as a single downloadable "
"resource and meant to be installed *en masse*.  Examples of some well-known "
"module distributions are NumPy, SciPy, PIL (the Python Imaging Library), or "
"mxBase.  (This would be called a *package*, except that term is already "
"taken in the Python context: a single module distribution may contain zero, "
"one, or many Python packages.)"
msgstr ""

# f19c59d65470493697cf23c2ea19ba8e
#: distutils/introduction.rst:203
msgid "pure module distribution"
msgstr ""

# 4d9de092f64649509c057f47e160b4c2
#: distutils/introduction.rst:202
msgid ""
"a module distribution that contains only pure Python modules and packages. "
"Sometimes referred to as a \"pure distribution.\""
msgstr ""

# 5e267a78c52345e0940061cc1f9047f2
#: distutils/introduction.rst:207
msgid "non-pure module distribution"
msgstr ""

# 42cc4188f9454968b8604b787f0dc298
#: distutils/introduction.rst:206
msgid ""
"a module distribution that contains at least one extension module.  "
"Sometimes referred to as a \"non-pure distribution.\""
msgstr ""

# 7c70735e23cb4174bf134a8515df39b5
#: distutils/introduction.rst:213
msgid "distribution root"
msgstr ""

# 352fc460323b454bafe8e50fdc3547a4
#: distutils/introduction.rst:210
msgid ""
"the top-level directory of your source tree (or  source distribution); the "
"directory where :file:`setup.py` exists.  Generally  :file:`setup.py` will "
"be run from this directory."
msgstr ""

# 81e9541aa7954c4bbca1656776a3a9d4
#: distutils/packageindex.rst:9
msgid "The Python Package Index (PyPI)"
msgstr ""

# 91b56c6f43874b749125a3a192af9495
#: distutils/packageindex.rst:11
msgid ""
"The `Python Package Index (PyPI)`_ holds :ref:`meta-data <meta-data>` "
"describing distributions packaged with distutils, as well as package data "
"like distribution files if the package author wishes."
msgstr ""

# 827f516a647445079b02c73bf37f6543
#: distutils/packageindex.rst:15
msgid ""
"Distutils exposes two commands for submitting package data to PyPI: the :ref:"
"`register <package-register>` command for submitting meta-data to PyPI and "
"the :ref:`upload <package-upload>` command for submitting distribution "
"files.  Both commands read configuration data from a special file called "
"the :ref:`.pypirc file <pypirc>`.  PyPI :ref:`displays a home page <package-"
"display>` for each package created from the ``long_description`` submitted "
"by the :command:`register` command."
msgstr ""

# 631b0386c89a4871bf36ae7212cf4526
#: distutils/packageindex.rst:27
msgid "Registering Packages"
msgstr ""

# 8878f8a426e541968b4e4dcc05b93323
#: distutils/packageindex.rst:29
msgid ""
"The distutils command :command:`register` is used to submit your "
"distribution's meta-data to the index. It is invoked as follows::"
msgstr ""

# 6607027f25c3414390456e68b383ea86
#: distutils/packageindex.rst:34
msgid "Distutils will respond with the following prompt::"
msgstr ""

# 0022b43f6d1f484bb28466842d286166
#: distutils/packageindex.rst:44
msgid ""
"Note: if your username and password are saved locally, you will not see this "
"menu."
msgstr ""

# 0f5fa24f67b54650807549a48a0210c9
#: distutils/packageindex.rst:47
msgid ""
"If you have not registered with PyPI, then you will need to do so now. You "
"should choose option 2, and enter your details as required. Soon after "
"submitting your details, you will receive an email which will be used to "
"confirm your registration."
msgstr ""

# feefdbfefc8d4f25a12e26d41d711e9b
#: distutils/packageindex.rst:52
msgid ""
"Once you are registered, you may choose option 1 from the menu. You will be "
"prompted for your PyPI username and password, and :command:`register` will "
"then submit your meta-data to the index."
msgstr ""

# 5587677349764b5e811fbbfa7c73e620
#: distutils/packageindex.rst:56
msgid ""
"You may submit any number of versions of your distribution to the index. If "
"you alter the meta-data for a particular version, you may submit it again "
"and the index will be updated."
msgstr ""

# e93c14ca75eb49ff92c4365be0a0c1b8
#: distutils/packageindex.rst:60
msgid ""
"PyPI holds a record for each (name, version) combination submitted. The "
"first user to submit information for a given name is designated the Owner of "
"that name. They may submit changes through the :command:`register` command "
"or through the web interface. They may also designate other users as Owners "
"or Maintainers. Maintainers may edit the package information, but not "
"designate other Owners or Maintainers."
msgstr ""

# 5c88e671989b42f8ac8bbc7340db34d6
#: distutils/packageindex.rst:67
msgid ""
"By default PyPI displays only the newest version of a given package. The web "
"interface lets one change this default behavior and manually select which "
"versions to display and hide."
msgstr ""

# 122863836b794f9f9b4fd4a1faa16814
#: distutils/packageindex.rst:75
msgid "Uploading Packages"
msgstr ""

# 817792c974ae4b589d6913dd2c81764f
#: distutils/packageindex.rst:77
msgid ""
"The distutils command :command:`upload` pushes the distribution files to "
"PyPI."
msgstr ""

# 91c7f5c91ae34fba92379cbd859f8d25
#: distutils/packageindex.rst:79
msgid ""
"The command is invoked immediately after building one or more distribution "
"files.  For example, the command ::"
msgstr ""

# f3afb92a7c5c46d9a29c08f2fc361018
#: distutils/packageindex.rst:84
msgid ""
"will cause the source distribution and the Windows installer to be uploaded "
"to PyPI.  Note that these will be uploaded even if they are built using an "
"earlier invocation of :file:`setup.py`, but that only distributions named on "
"the command line for the invocation including the :command:`upload` command "
"are uploaded."
msgstr ""

# d48d71d9d6d44470a077bd9a4db69415
#: distutils/packageindex.rst:89
msgid ""
"The :command:`upload` command uses the username, password, and repository "
"URL from the :file:`$HOME/.pypirc` file (see section :ref:`pypirc` for more "
"on this file). If a :command:`register` command was previously called in the "
"same command, and if the password was entered in the prompt, :command:"
"`upload` will reuse the entered password. This is useful if you do not want "
"to store a clear text password in the :file:`$HOME/.pypirc` file."
msgstr ""

# 4b40bbc47d0a45b3a89aacbaeb1995e4
#: distutils/packageindex.rst:96
msgid ""
"You can specify another PyPI server with the ``--repository=url`` option::"
msgstr ""

# f2aa37ee959c47648076a410efa845a3
#: distutils/packageindex.rst:100
msgid "See section :ref:`pypirc` for more on defining several servers."
msgstr ""

# ecfe02542742460f91c2861cc0b56006
#: distutils/packageindex.rst:102
msgid ""
"You can use the ``--sign`` option to tell :command:`upload` to sign each "
"uploaded file using GPG (GNU Privacy Guard).  The  :program:`gpg` program "
"must be available for execution on the system :envvar:`PATH`.  You can also "
"specify which key to use for signing using the ``--identity=name`` option."
msgstr ""

# 98562fecc48a437bb858fd8320793812
#: distutils/packageindex.rst:107
msgid ""
"Other :command:`upload` options include ``--repository=url`` or ``--"
"repository=section`` where *url* is the url of the server and *section* the "
"name of the section in :file:`$HOME/.pypirc`, and ``--show-response`` (which "
"displays the full response text from the PyPI server for help in debugging "
"upload problems)."
msgstr ""

# 0d51244948bf45e598c40e4513802880
#: distutils/packageindex.rst:121
msgid "The .pypirc file"
msgstr ""

# ca81218af5dd44d2959248a25e426f6f
#: distutils/packageindex.rst:123
msgid "The format of the :file:`.pypirc` file is as follows::"
msgstr ""

# 61c5630ed1614d22a003716f78453ca0
#: distutils/packageindex.rst:134
msgid ""
"The *distutils* section defines a *index-servers* variable that lists the "
"name of all sections describing a repository."
msgstr ""

# 5ee44c6ed633401bb057be1ee0288a31
#: distutils/packageindex.rst:137
msgid "Each section describing a repository defines three variables:"
msgstr ""

# 6090abdc60fa4905b642c9d587367439
#: distutils/packageindex.rst:139
msgid "*repository*, that defines the url of the PyPI server. Defaults to"
msgstr ""

# 0b1a7f6d7f8f4d91ad7076e22a9dd371
#: distutils/packageindex.rst:140
msgid "``http://www.python.org/pypi``."
msgstr ""

# f60f482b3c30407a89ec71a66e836cbc
#: distutils/packageindex.rst:141
msgid "*username*, which is the registered username on the PyPI server."
msgstr ""

# 5d3a4d0c94b147ae8119912955b3f95a
#: distutils/packageindex.rst:143
msgid "*password*, that will be used to authenticate. If omitted the user"
msgstr ""

# b7ca180d2cc1412e98530f7d261eb20f
#: distutils/packageindex.rst:143
msgid "will be prompt to type it when needed."
msgstr ""

# 832306c5577b4836aee42ea660738a09
#: distutils/packageindex.rst:145
msgid ""
"If you want to define another server a new section can be created and listed "
"in the *index-servers* variable::"
msgstr ""

# 32ac89311df646d188cb156c625abfc4
#: distutils/packageindex.rst:163
msgid ""
":command:`register` can then be called with the -r option to point the "
"repository to work with::"
msgstr ""

# a690f2b84e634f2bbfcb7c00bb317b54
#: distutils/packageindex.rst:168
msgid ""
"For convenience, the name of the section that describes the repository may "
"also be used::"
msgstr ""

# 130b7688466243b4ba9b0ff3062fd795
#: distutils/packageindex.rst:177
msgid "PyPI package display"
msgstr ""

# 69ebb8f061a743418d7730824de36c90
#: distutils/packageindex.rst:179
msgid ""
"The ``long_description`` field plays a special role at PyPI. It is used by "
"the server to display a home page for the registered package."
msgstr ""

# 9a26772297534f7fa82d54da3fb3c788
#: distutils/packageindex.rst:182
msgid ""
"If you use the `reStructuredText <http://docutils.sourceforge.net/rst."
"html>`_ syntax for this field, PyPI will parse it and display an HTML output "
"for the package home page."
msgstr ""

# 2895bf00422243c99073d7f9f90682a3
#: distutils/packageindex.rst:186
msgid ""
"The ``long_description`` field can be attached to a text file located in the "
"package::"
msgstr ""

# ae083d3c45424919b774776efa2301b5
#: distutils/packageindex.rst:197
msgid ""
"In that case, :file:`README.txt` is a regular reStructuredText text file "
"located in the root of the package besides :file:`setup.py`."
msgstr ""

# 4652d7f67fc64b6893ae3fda62098f5e
#: distutils/packageindex.rst:200
msgid ""
"To prevent registering broken reStructuredText content, you can use the :"
"program:`rst2html` program that is provided by the :mod:`docutils` package "
"and check the ``long_description`` from the command line::"
msgstr ""

# 68df7bfa4cf6463dab1c98b2f796a47c
#: distutils/packageindex.rst:206
msgid ""
":mod:`docutils` will display a warning if there's something wrong with your "
"syntax.  Because PyPI applies additional checks (e.g. by passing ``--no-"
"raw`` to ``rst2html.py`` in the command above), being able to run the "
"command above without warnings does not guarantee that PyPI will convert the "
"content successfully."
msgstr ""

# 9e268c54f6b347f0911d60b1cfc17bc4
#: distutils/setupscript.rst:5
msgid "Writing the Setup Script"
msgstr ""

# 1a107a7e47134f6da54294863a530099
#: distutils/setupscript.rst:7
msgid ""
"The setup script is the centre of all activity in building, distributing, "
"and installing modules using the Distutils.  The main purpose of the setup "
"script is to describe your module distribution to the Distutils, so that the "
"various commands that operate on your modules do the right thing.  As we saw "
"in section :ref:`distutils-simple-example` above, the setup script consists "
"mainly of a call to :func:`setup`, and most information supplied to the "
"Distutils by the module developer is supplied as keyword arguments to :func:"
"`setup`."
msgstr ""

# 93aa0059480e4eb8883a919b79b4f13e
#: distutils/setupscript.rst:15
msgid ""
"Here's a slightly more involved example, which we'll follow for the next "
"couple of sections: the Distutils' own setup script.  (Keep in mind that "
"although the Distutils are included with Python 1.6 and later, they also "
"have an independent existence so that Python 1.5.2 users can use them to "
"install other module distributions.  The Distutils' own setup script, shown "
"here, is used to install the package into Python 1.5.2.) ::"
msgstr ""

# cc203a6ffc984a098413b101bbb8efa1
#: distutils/setupscript.rst:35
msgid ""
"There are only two differences between this and the trivial one-file "
"distribution presented in section :ref:`distutils-simple-example`: more "
"metadata, and the specification of pure Python modules by package, rather "
"than by module.  This is important since the Distutils consist of a couple "
"of dozen modules split into (so far) two packages; an explicit list of every "
"module would be tedious to generate and difficult to maintain.  For more "
"information on the additional meta-data, see section :ref:`meta-data`."
msgstr ""

# 89c7553f8f2d4884b0e08c8f4e50260a
#: distutils/setupscript.rst:43
msgid ""
"Note that any pathnames (files or directories) supplied in the setup script "
"should be written using the Unix convention, i.e. slash-separated.  The "
"Distutils will take care of converting this platform-neutral representation "
"into whatever is appropriate on your current platform before actually using "
"the pathname.  This makes your setup script portable across operating "
"systems, which of course is one of the major goals of the Distutils.  In "
"this spirit, all pathnames in this document are slash-separated."
msgstr ""

# 588a21b81cf44858aa23f2abefb13ec9
#: distutils/setupscript.rst:51
msgid ""
"This, of course, only applies to pathnames given to Distutils functions.  If "
"you, for example, use standard Python functions such as :func:`glob.glob` "
"or :func:`os.listdir` to specify files, you should be careful to write "
"portable code instead of hardcoding path separators::"
msgstr ""

# aef007aa88cc4b37854b94d000d6af6e
#: distutils/setupscript.rst:63
msgid "Listing whole packages"
msgstr ""

# d61f4770959748708277258104d58014
#: distutils/setupscript.rst:65
msgid ""
"The :option:`packages` option tells the Distutils to process (build, "
"distribute, install, etc.) all pure Python modules found in each package "
"mentioned in the :option:`packages` list.  In order to do this, of course, "
"there has to be a correspondence between package names and directories in "
"the filesystem.  The default correspondence is the most obvious one, i.e. "
"package :mod:`distutils` is found in the directory :file:`distutils` "
"relative to the distribution root. Thus, when you say ``packages = ['foo']`` "
"in your setup script, you are promising that the Distutils will find a file :"
"file:`foo/__init__.py` (which might be spelled differently on your system, "
"but you get the idea) relative to the directory where your setup script "
"lives.  If you break this promise, the Distutils will issue a warning but "
"still process the broken package anyway."
msgstr ""

# e5965cd8688946129288e515950dcce2
#: distutils/setupscript.rst:77
msgid ""
"If you use a different convention to lay out your source directory, that's "
"no problem: you just have to supply the :option:`package_dir` option to tell "
"the Distutils about your convention.  For example, say you keep all Python "
"source under :file:`lib`, so that modules in the \"root package\" (i.e., not "
"in any package at all) are in :file:`lib`, modules in the :mod:`foo` package "
"are in :file:`lib/foo`, and so forth.  Then you would put ::"
msgstr ""

# f4cd6befc3754833a8c8d6a95a4bd79d
#: distutils/setupscript.rst:86
msgid ""
"in your setup script.  The keys to this dictionary are package names, and an "
"empty package name stands for the root package.  The values are directory "
"names relative to your distribution root.  In this case, when you say "
"``packages = ['foo']``, you are promising that the file :file:`lib/foo/"
"__init__.py` exists."
msgstr ""

# 98874e940dd04a178235aef6cd47a0a1
#: distutils/setupscript.rst:91
msgid ""
"Another possible convention is to put the :mod:`foo` package right in :file:"
"`lib`, the :mod:`foo.bar` package in :file:`lib/bar`, etc.  This would be "
"written in the setup script as ::"
msgstr ""

# 07e96d614b7d497080b01d20b80a8690
#: distutils/setupscript.rst:97
msgid ""
"A ``package: dir`` entry in the :option:`package_dir` dictionary implicitly "
"applies to all packages below *package*, so the :mod:`foo.bar` case is "
"automatically handled here.  In this example, having ``packages = ['foo', "
"'foo.bar']`` tells the Distutils to look for :file:`lib/__init__.py` and :"
"file:`lib/bar/__init__.py`.  (Keep in mind that although :option:"
"`package_dir` applies recursively, you must explicitly list all packages in :"
"option:`packages`: the Distutils will *not* recursively scan your source "
"tree looking for any directory with an :file:`__init__.py` file.)"
msgstr ""

# 8068a38a48cf42a39df0af46903e4536
#: distutils/setupscript.rst:110
msgid "Listing individual modules"
msgstr ""

# 2966c29d29e8414baa327f8e279c00c6
#: distutils/setupscript.rst:112
msgid ""
"For a small module distribution, you might prefer to list all modules rather "
"than listing packages---especially the case of a single module that goes in "
"the \"root package\" (i.e., no package at all).  This simplest case was "
"shown in section :ref:`distutils-simple-example`; here is a slightly more "
"involved example::"
msgstr ""

# 8610784615144f9398690562ec5a07f8
#: distutils/setupscript.rst:119
msgid ""
"This describes two modules, one of them in the \"root\" package, the other "
"in the :mod:`pkg` package.  Again, the default package/directory layout "
"implies that these two modules can be found in :file:`mod1.py` and :file:"
"`pkg/mod2.py`, and that :file:`pkg/__init__.py` exists as well. And again, "
"you can override the package/directory correspondence using the :option:"
"`package_dir` option."
msgstr ""

# fd14b26cb3d747e3aa25be256269cb55
#: distutils/setupscript.rst:129
msgid "Describing extension modules"
msgstr ""

# 1bd4e60d021a419281cb7c5d3e58b62d
#: distutils/setupscript.rst:131
msgid ""
"Just as writing Python extension modules is a bit more complicated than "
"writing pure Python modules, describing them to the Distutils is a bit more "
"complicated. Unlike pure modules, it's not enough just to list modules or "
"packages and expect the Distutils to go out and find the right files; you "
"have to specify the extension name, source file(s), and any compile/link "
"requirements (include directories, libraries to link with, etc.)."
msgstr ""

# 07e1cd7464154d0b8e4ca77ec276c3c8
#: distutils/setupscript.rst:140
msgid ""
"All of this is done through another keyword argument to :func:`setup`, the :"
"option:`ext_modules` option.  :option:`ext_modules` is just a list of :class:"
"`Extension` instances, each of which describes a single extension module. "
"Suppose your distribution includes a single extension, called :mod:`foo` and "
"implemented by :file:`foo.c`.  If no additional instructions to the compiler/"
"linker are needed, describing this extension is quite simple::"
msgstr ""

# 3a9adcd08bed4da7a9b6f3a7bc11ce31
#: distutils/setupscript.rst:149
msgid ""
"The :class:`Extension` class can be imported from :mod:`distutils.core` "
"along with :func:`setup`.  Thus, the setup script for a module distribution "
"that contains only this one extension and nothing else might be::"
msgstr ""

# 6e77d411ed2d4bce9ded1ced3cfdc311
#: distutils/setupscript.rst:159
msgid ""
"The :class:`Extension` class (actually, the underlying extension-building "
"machinery implemented by the :command:`build_ext` command) supports a great "
"deal of flexibility in describing Python extensions, which is explained in "
"the following sections."
msgstr ""

# 680f8a3f87f746528839e68a2b1cee98
#: distutils/setupscript.rst:166
msgid "Extension names and packages"
msgstr ""

# b833eadb6b004798bd154375119372ea
#: distutils/setupscript.rst:168
msgid ""
"The first argument to the :class:`Extension` constructor is always the name "
"of the extension, including any package names.  For example, ::"
msgstr ""

# 3c1dedc091184b1bb012bbd890b3ae72
#: distutils/setupscript.rst:173
msgid "describes an extension that lives in the root package, while ::"
msgstr ""

# 90af6223a2854c8a8540f9423cfa518c
#: distutils/setupscript.rst:177
msgid ""
"describes the same extension in the :mod:`pkg` package.  The source files "
"and resulting object code are identical in both cases; the only difference "
"is where in the filesystem (and therefore where in Python's namespace "
"hierarchy) the resulting extension lives."
msgstr ""

# d8307abdfea742c1bf8471893a356cf5
#: distutils/setupscript.rst:182
msgid ""
"If you have a number of extensions all in the same package (or all under the "
"same base package), use the :option:`ext_package` keyword argument to :func:"
"`setup`.  For example, ::"
msgstr ""

# 2d7926a5191a46ca89e5ad6c76cbd681
#: distutils/setupscript.rst:192
msgid ""
"will compile :file:`foo.c` to the extension :mod:`pkg.foo`, and :file:`bar."
"c` to :mod:`pkg.subpkg.bar`."
msgstr ""

# 21cd278bf1bc4877a5c1d126ff623da5
#: distutils/setupscript.rst:197
msgid "Extension source files"
msgstr ""

# 69e41f88980c4656a09c87b3c137b4d5
#: distutils/setupscript.rst:199
msgid ""
"The second argument to the :class:`Extension` constructor is a list of "
"source files.  Since the Distutils currently only support C, C++, and "
"Objective-C extensions, these are normally C/C++/Objective-C source files.  "
"(Be sure to use appropriate extensions to distinguish C++\\ source files: :"
"file:`.cc` and :file:`.cpp` seem to be recognized by both Unix and Windows "
"compilers.)"
msgstr ""

# 4eb78f7252d243b08f6ad927b7c9d03b
#: distutils/setupscript.rst:205
msgid ""
"However, you can also include SWIG interface (:file:`.i`) files in the list; "
"the :command:`build_ext` command knows how to deal with SWIG extensions: it "
"will run SWIG on the interface file and compile the resulting C/C++ file "
"into your extension."
msgstr ""

# ed8ca925c5ae42ffb470dd86a5553635
#: distutils/setupscript.rst:212
msgid ""
"This warning notwithstanding, options to SWIG can be currently passed like "
"this::"
msgstr ""

# dea56612c998443bb1263fa940ef3db6
#: distutils/setupscript.rst:221
msgid "Or on the commandline like this::"
msgstr ""

# 5c53cc2aee724963bd7ef8828be6ca42
#: distutils/setupscript.rst:225
msgid ""
"On some platforms, you can include non-source files that are processed by "
"the compiler and included in your extension.  Currently, this just means "
"Windows message text (:file:`.mc`) files and resource definition (:file:`."
"rc`) files for Visual C++. These will be compiled to binary resource (:file:"
"`.res`) files and linked into the executable."
msgstr ""

# c8d648c8c99f4e698a8356dbc0e8e651
#: distutils/setupscript.rst:233
msgid "Preprocessor options"
msgstr ""

# 1c8194fcf45445298a82a6eb2dd6286e
#: distutils/setupscript.rst:235
msgid ""
"Three optional arguments to :class:`Extension` will help if you need to "
"specify include directories to search or preprocessor macros to define/"
"undefine: ``include_dirs``, ``define_macros``, and ``undef_macros``."
msgstr ""

# cf1748787bf7413ca6421c3a742fa232
#: distutils/setupscript.rst:239
msgid ""
"For example, if your extension requires header files in the :file:`include` "
"directory under your distribution root, use the ``include_dirs`` option::"
msgstr ""

# f6e19411e8bc4ab88dbad87c09cee7a3
#: distutils/setupscript.rst:244
msgid ""
"You can specify absolute directories there; if you know that your extension "
"will only be built on Unix systems with X11R6 installed to :file:`/usr`, you "
"can get away with ::"
msgstr ""

# 699e0545bb5a4f39a196321479a8dc59
#: distutils/setupscript.rst:250
msgid ""
"You should avoid this sort of non-portable usage if you plan to distribute "
"your code: it's probably better to write C code like  ::"
msgstr ""

# 5b3d4346bf104435abb50f0eb466f050
#: distutils/setupscript.rst:255
msgid ""
"If you need to include header files from some other Python extension, you "
"can take advantage of the fact that header files are installed in a "
"consistent way by the Distutils :command:`install_headers` command.  For "
"example, the Numerical Python header files are installed (on a standard Unix "
"installation) to :file:`/usr/local/include/python1.5/Numerical`. (The exact "
"location will differ according to your platform and Python installation.)  "
"Since the Python include directory---\\ :file:`/usr/local/include/python1.5` "
"in this case---is always included in the search path when building Python "
"extensions, the best approach is to write C code like  ::"
msgstr ""

# 9edaaec06ca94d1fadf4a6641970917a
#: distutils/setupscript.rst:267
msgid ""
"If you must put the :file:`Numerical` include directory right into your "
"header search path, though, you can find that directory using the Distutils :"
"mod:`distutils.sysconfig` module::"
msgstr ""

# 1b6950a4653f444eb72482f52e04841f
#: distutils/setupscript.rst:277
msgid ""
"Even though this is quite portable---it will work on any Python "
"installation, regardless of platform---it's probably easier to just write "
"your C code in the sensible way."
msgstr ""

# 860ea778bf284d04afe404aef778c249
#: distutils/setupscript.rst:281
msgid ""
"You can define and undefine pre-processor macros with the ``define_macros`` "
"and ``undef_macros`` options. ``define_macros`` takes a list of ``(name, "
"value)`` tuples, where ``name`` is the name of the macro to define (a "
"string) and ``value`` is its value: either a string or ``None``.  (Defining "
"a macro ``FOO`` to ``None`` is the equivalent of a bare ``#define FOO`` in "
"your C source: with most compilers, this sets ``FOO`` to the string ``1``.)  "
"``undef_macros`` is just a list of macros to undefine."
msgstr ""

# cffc9a2c4f904031b5b5e6b009ed4a6a
#: distutils/setupscript.rst:289
msgid "For example::"
msgstr ""

# 3419ab79afeb494b9bb543f5a01cf714
#: distutils/setupscript.rst:296
msgid "is the equivalent of having this at the top of every C source file::"
msgstr ""

# 08e44d39b9f242ec9d4dba7c7decc60f
#: distutils/setupscript.rst:305
msgid "Library options"
msgstr ""

# 82083446b0ff4dc88c361d125f1f0bc1
#: distutils/setupscript.rst:307
msgid ""
"You can also specify the libraries to link against when building your "
"extension, and the directories to search for those libraries.  The "
"``libraries`` option is a list of libraries to link against, "
"``library_dirs`` is a list of directories to search for libraries at  link-"
"time, and ``runtime_library_dirs`` is a list of directories to  search for "
"shared (dynamically loaded) libraries at run-time."
msgstr ""

# 983220766cc0452e87887c293f85d437
#: distutils/setupscript.rst:313
msgid ""
"For example, if you need to link against libraries known to be in the "
"standard library search path on target systems ::"
msgstr ""

# 0627955053d74668a804a357fd178125
#: distutils/setupscript.rst:319
msgid ""
"If you need to link with libraries in a non-standard location, you'll have "
"to include the location in ``library_dirs``::"
msgstr ""

# 860940b3954b48ffa33008e0d7a2d4c2
#: distutils/setupscript.rst:326
msgid ""
"(Again, this sort of non-portable construct should be avoided if you intend "
"to distribute your code.)"
msgstr ""

# 696beaa07fe34923ba9de106eceb0066
#: distutils/setupscript.rst:333
msgid "Other options"
msgstr ""

# 43d150969b9e49a09fb9b533657951ae
#: distutils/setupscript.rst:335
msgid ""
"There are still some other options which can be used to handle special cases."
msgstr ""

# 5b7b7e5d9c204106b4392676087a5763
#: distutils/setupscript.rst:337
msgid ""
"The :option:`optional` option is a boolean; if it is true, a build failure "
"in the extension will not abort the build process, but instead simply not "
"install the failing extension."
msgstr ""

# 8e8ce91e3b744d73a5bd180a074e7e7e
#: distutils/setupscript.rst:341
msgid ""
"The :option:`extra_objects` option is a list of object files to be passed to "
"the linker. These files must not have extensions, as the default extension "
"for the compiler is used."
msgstr ""

# d978816e7fd0434baa298b844a3ea343
#: distutils/setupscript.rst:345
msgid ""
":option:`extra_compile_args` and :option:`extra_link_args` can be used to "
"specify additional command line options for the respective compiler and "
"linker command lines."
msgstr ""

# cdcae7b12115469da07c2e6923f1ec49
#: distutils/setupscript.rst:349
msgid ""
":option:`export_symbols` is only useful on Windows.  It can contain a list "
"of symbols (functions or variables) to be exported. This option is not "
"needed when building compiled extensions: Distutils  will automatically add "
"``initmodule`` to the list of exported symbols."
msgstr ""

# a7aee3579f174a1780394effdc2d5871
#: distutils/setupscript.rst:354
msgid ""
"The :option:`depends` option is a list of files that the extension depends "
"on (for example header files). The build command will call the compiler on "
"the sources to rebuild extension if any on this files has been modified "
"since the previous build."
msgstr ""

# 2e68a2ac20b5436e8f01633d789da53e
#: distutils/setupscript.rst:360
msgid "Relationships between Distributions and Packages"
msgstr ""

# 7374da4d84da4a5991fc6315811b2917
#: distutils/setupscript.rst:362
msgid "A distribution may relate to packages in three specific ways:"
msgstr ""

# a1d416d9a9d140dd95847eeef69011fb
#: distutils/setupscript.rst:364
msgid "It can require packages or modules."
msgstr ""

# 01adea59ce9c4993bfbb307dc353eb0e
#: distutils/setupscript.rst:366
msgid "It can provide packages or modules."
msgstr ""

# 4e23369b891d4e22a0df9e649443d7d4
#: distutils/setupscript.rst:368
msgid "It can obsolete packages or modules."
msgstr ""

# e4f794fa607444b5ac642c3a9c33fd63
#: distutils/setupscript.rst:370
msgid ""
"These relationships can be specified using keyword arguments to the :func:"
"`distutils.core.setup` function."
msgstr ""

# 4121ed523bef45559d1d081a2f09bfc2
#: distutils/setupscript.rst:373
msgid ""
"Dependencies on other Python modules and packages can be specified by "
"supplying the *requires* keyword argument to :func:`setup`. The value must "
"be a list of strings.  Each string specifies a package that is required, and "
"optionally what versions are sufficient."
msgstr ""

# ea79a6199aab475590554952c30f5514
#: distutils/setupscript.rst:378
msgid ""
"To specify that any version of a module or package is required, the string "
"should consist entirely of the module or package name. Examples include "
"``'mymodule'`` and ``'xml.parsers.expat'``."
msgstr ""

# 710f4f54fc7e4d4a980064137e136807
#: distutils/setupscript.rst:382
msgid ""
"If specific versions are required, a sequence of qualifiers can be supplied "
"in parentheses.  Each qualifier may consist of a comparison operator and a "
"version number.  The accepted comparison operators are::"
msgstr ""

# 823d2d5375d14443887e4a2a1903365e
#: distutils/setupscript.rst:389
msgid ""
"These can be combined by using multiple qualifiers separated by commas (and "
"optional whitespace).  In this case, all of the qualifiers must be matched; "
"a logical AND is used to combine the evaluations."
msgstr ""

# 05600a81eea443208302c5efd6f94fc4
#: distutils/setupscript.rst:393
msgid "Let's look at a bunch of examples:"
msgstr ""

# 0db981adaf2646b488414d7bde4fb4c8
#: distutils/setupscript.rst:396
msgid "Requires Expression"
msgstr ""

# 3d3154dd510649feba1d10ce4e3490af
# 0e3cb12131be4810ba964fbdbbdbb77d
#: distutils/setupscript.rst:396 distutils/setupscript.rst:414
msgid "Explanation"
msgstr ""

# bbb95f1822464ea8a36284009c54771a
#: distutils/setupscript.rst:398
msgid "``==1.0``"
msgstr ""

# 511ee4b3dbc8425890ef88b36bbea3fd
#: distutils/setupscript.rst:398
msgid "Only version ``1.0`` is compatible"
msgstr ""

# 933c1c925a1e43dd987d24f0f20441af
#: distutils/setupscript.rst:400
msgid "``>1.0, !=1.5.1, <2.0``"
msgstr ""

# 95ae042a2c514e2d89d63fbf7b32397e
#: distutils/setupscript.rst:400
msgid ""
"Any version after ``1.0`` and before ``2.0`` is compatible, except ``1.5.1``"
msgstr ""

# a10a473b22914969b388a68aaf4e5075
#: distutils/setupscript.rst:404
msgid ""
"Now that we can specify dependencies, we also need to be able to specify "
"what we provide that other distributions can require.  This is done using "
"the *provides* keyword argument to :func:`setup`. The value for this keyword "
"is a list of strings, each of which names a Python module or package, and "
"optionally identifies the version.  If the version is not specified, it is "
"assumed to match that of the distribution."
msgstr ""

# 2b276f0312e84de9a848d3576a70e47f
#: distutils/setupscript.rst:411
msgid "Some examples:"
msgstr ""

# a497abecf8224f26a8137db4bc3a7cd2
#: distutils/setupscript.rst:414
msgid "Provides Expression"
msgstr ""

# 1805680f7fd44350834e0e0b6809fb1c
#: distutils/setupscript.rst:416
msgid "``mypkg``"
msgstr ""

# ef39c0993cf94ae5a31ace1172fb0124
#: distutils/setupscript.rst:416
msgid "Provide ``mypkg``, using the distribution version"
msgstr ""

# 88b812d698384b9ca1bf57f7dbf449ed
#: distutils/setupscript.rst:419
msgid "``mypkg (1.1)``"
msgstr ""

# b8b11cb894a742bb9e559aff13debdf3
#: distutils/setupscript.rst:419
msgid "Provide ``mypkg`` version 1.1, regardless of the distribution version"
msgstr ""

# 1ef8ae99cf3c4f4d918ad0ead62d479c
#: distutils/setupscript.rst:423
msgid ""
"A package can declare that it obsoletes other packages using the *obsoletes* "
"keyword argument.  The value for this is similar to that of the *requires* "
"keyword: a list of strings giving module or package specifiers.  Each "
"specifier consists of a module or package name optionally followed by one or "
"more version qualifiers.  Version qualifiers are given in parentheses after "
"the module or package name."
msgstr ""

# 0bdc98881d344a599e2e6c316074a370
#: distutils/setupscript.rst:430
msgid ""
"The versions identified by the qualifiers are those that are obsoleted by "
"the distribution being described.  If no qualifiers are given, all versions "
"of the named module or package are understood to be obsoleted."
msgstr ""

# 77393c60432b4e6294c19e74c4619b50
#: distutils/setupscript.rst:437
msgid "Installing Scripts"
msgstr ""

# 25b9a8455bcc4df0a4667ba269203f35
#: distutils/setupscript.rst:439
msgid ""
"So far we have been dealing with pure and non-pure Python modules, which are "
"usually not run by themselves but imported by scripts."
msgstr ""

# e99932410a474e1f8e1471efc7b03e4d
#: distutils/setupscript.rst:442
msgid ""
"Scripts are files containing Python source code, intended to be started from "
"the command line.  Scripts don't require Distutils to do anything very "
"complicated. The only clever feature is that if the first line of the script "
"starts with ``#!`` and contains the word \"python\", the Distutils will "
"adjust the first line to refer to the current interpreter location. By "
"default, it is replaced with the current interpreter location.  The :option:"
"`--executable` (or :option:`-e`) option will allow the interpreter path to "
"be explicitly overridden."
msgstr ""

# ae75084929a94f9e803c65a7a4012243
#: distutils/setupscript.rst:450
msgid ""
"The :option:`scripts` option simply is a list of files to be handled in this "
"way.  From the PyXML setup script::"
msgstr ""

# ef9911da343e4de59eede4df0c68d5c3
#: distutils/setupscript.rst:465
msgid "Installing Package Data"
msgstr ""

# 59dffe7793244069a414efec0c71197a
#: distutils/setupscript.rst:467
msgid ""
"Often, additional files need to be installed into a package.  These files "
"are often data that's closely related to the package's implementation, or "
"text files containing documentation that might be of interest to programmers "
"using the package.  These files are called :dfn:`package data`."
msgstr ""

# f8ff81044d0843ceb00882eec6de37e4
#: distutils/setupscript.rst:472
msgid ""
"Package data can be added to packages using the ``package_data`` keyword "
"argument to the :func:`setup` function.  The value must be a mapping from "
"package name to a list of relative path names that should be copied into the "
"package.  The paths are interpreted as relative to the directory containing "
"the package (information from the ``package_dir`` mapping is used if "
"appropriate); that is, the files are expected to be part of the package in "
"the source directories. They may contain glob patterns as well."
msgstr ""

# 4c945279b3564d4f8aa9b18089458066
#: distutils/setupscript.rst:480
msgid ""
"The path names may contain directory portions; any necessary directories "
"will be created in the installation."
msgstr ""

# 705eec70e5da4943937699d8ffd4fb83
#: distutils/setupscript.rst:483
msgid ""
"For example, if a package should contain a subdirectory with several data "
"files, the files can be arranged like this in the source tree::"
msgstr ""

# 93c87f6dff2a483991af203c75fcc920
#: distutils/setupscript.rst:496
msgid "The corresponding call to :func:`setup` might be::"
msgstr ""

# d8345c18ddc649a59945831afd76d40b
#: distutils/setupscript.rst:513
msgid "Installing Additional Files"
msgstr ""

# b2450413586947c19e2212cc30289d76
#: distutils/setupscript.rst:515
msgid ""
"The :option:`data_files` option can be used to specify additional files "
"needed by the module distribution: configuration files, message catalogs, "
"data files, anything which doesn't fit in the previous categories."
msgstr ""

# ce508b9e11ab48519cf689edfee4eab5
#: distutils/setupscript.rst:519
msgid ""
":option:`data_files` specifies a sequence of (*directory*, *files*) pairs in "
"the following way::"
msgstr ""

# 485731afd01d49378b867ff4cb683beb
#: distutils/setupscript.rst:528
msgid ""
"Note that you can specify the directory names where the data files will be "
"installed, but you cannot rename the data files themselves."
msgstr ""

# 694ba199c6cf4586ae2cf629b6782355
#: distutils/setupscript.rst:531
msgid ""
"Each (*directory*, *files*) pair in the sequence specifies the installation "
"directory and the files to install there.  If *directory* is a relative "
"path, it is interpreted relative to the installation prefix (Python's ``sys."
"prefix`` for pure-Python packages, ``sys.exec_prefix`` for packages that "
"contain extension modules).  Each file name in *files* is interpreted "
"relative to the :file:`setup.py` script at the top of the package source "
"distribution.  No directory information from *files* is used to determine "
"the final location of the installed file; only the name of the file is used."
msgstr ""

# 440556b9467f469584febe0dbd2cce77
#: distutils/setupscript.rst:540
msgid ""
"You can specify the :option:`data_files` options as a simple sequence of "
"files without specifying a target directory, but this is not recommended, "
"and the :command:`install` command will print a warning in this case. To "
"install data files directly in the target directory, an empty string should "
"be given as the directory."
msgstr ""

# 1541708f3dc84c1b8aca3af5ca924510
#: distutils/setupscript.rst:554
msgid "Additional meta-data"
msgstr ""

# 9b3f32e8b110462f8e661a92adac37b7
#: distutils/setupscript.rst:556
msgid ""
"The setup script may include additional meta-data beyond the name and "
"version. This information includes:"
msgstr ""

# a4d61d68f4984e61ad492570597bb134
#: distutils/setupscript.rst:560
msgid "Meta-Data"
msgstr ""

# c6f55c9035cc44018244607fd7cbc744
#: distutils/setupscript.rst:560
msgid "Value"
msgstr ""

# 1605f4f0ffee45f7acc5a4e2fe4e96e5
#: distutils/setupscript.rst:562
msgid "``name``"
msgstr ""

# 4c23bfa491994077988fa4c9101173e8
#: distutils/setupscript.rst:562
msgid "name of the package"
msgstr ""

# e7ff086725424d4e9d6042af2fedf0d4
# 3f4a232442c7486e932ee8a34519c676
# 502f77e3da964c7e83226e7d5611f7f1
# 4b232b63ea2c47e7bfc97017e78b8ea5
# be8aa67ca56444568bf36568f42c6add
# 9577a6f56e5b40969728d1ad5ab1680a
#: distutils/setupscript.rst:562 distutils/setupscript.rst:564
#: distutils/setupscript.rst:566 distutils/setupscript.rst:571
#: distutils/setupscript.rst:578 distutils/setupscript.rst:592
msgid "short string"
msgstr ""

# 231d08c42ea848be8f0e84e86222e6d7
# 742486f8adb6408493bc2dc8054bf94f
#: distutils/setupscript.rst:562 distutils/setupscript.rst:576
msgid "\\(1)"
msgstr "\\(1)"

# 18e737ce770f457589f4ca85dacde439
#: distutils/setupscript.rst:564
msgid "``version``"
msgstr ""

# f52f66f6949c4421b65b340004b61d93
#: distutils/setupscript.rst:564
msgid "version of this release"
msgstr ""

# 98d0d7129bed434daff7c383158a5b3c
#: distutils/setupscript.rst:564
msgid "(1)(2)"
msgstr ""

# 2b259761056f4c7baa5124d5bb34636b
#: distutils/setupscript.rst:566
msgid "``author``"
msgstr ""

# 83cd9fb675cf48c0834167d57674cc79
#: distutils/setupscript.rst:566
msgid "package author's name"
msgstr ""

# a87cd663283c4b6aaa02788f91341b49
#: distutils/setupscript.rst:568
msgid "``author_email``"
msgstr ""

# bcf1a5aded974f12a56b671800314608
#: distutils/setupscript.rst:568
msgid "email address of the package author"
msgstr ""

# 84c0e01f63c64ae2a93d0ac91afe2e9a
# 44c87893ff9a48be8abe183604b630b5
#: distutils/setupscript.rst:568 distutils/setupscript.rst:573
msgid "email address"
msgstr ""

# c23e21ccd66c4106b33af93e3448a732
#: distutils/setupscript.rst:571
msgid "``maintainer``"
msgstr ""

# 0b521cab63564280a34eb264b197c117
#: distutils/setupscript.rst:571
msgid "package maintainer's name"
msgstr ""

# 5f1e194626c04e1a9b1b4c78c80c3c2c
#: distutils/setupscript.rst:573
msgid "``maintainer_email``"
msgstr ""

# 749f52f672bf418d9484d2a5e1c94320
#: distutils/setupscript.rst:573
msgid "email address of the package maintainer"
msgstr ""

# a4e9864051e94883817244522678ad8e
#: distutils/setupscript.rst:576
msgid "``url``"
msgstr ""

# 5847e5d5169c4d02b1d3c1f15e944714
#: distutils/setupscript.rst:576
msgid "home page for the package"
msgstr ""

# f8d0dd9d6d624f64b6989a204276b66f
# e09901f9577e4809bfd79c5335b6b210
#: distutils/setupscript.rst:576 distutils/setupscript.rst:585
msgid "URL"
msgstr ""

# 491de7ea99304a95b5d273b50e8a79e4
#: distutils/setupscript.rst:578
msgid "``description``"
msgstr ""

# 61e40821d01e4a48a0a116c95576b140
#: distutils/setupscript.rst:578
msgid "short, summary description of the package"
msgstr ""

# f9d46a6378474b22ada64d76eab3dcf8
#: distutils/setupscript.rst:582
msgid "``long_description``"
msgstr ""

# 676c4f7a93824e97ae85aeac943eddef
#: distutils/setupscript.rst:582
msgid "longer description of the package"
msgstr ""

# a4f58dd1c209419299b644e281d9153a
#: distutils/setupscript.rst:582
msgid "long string"
msgstr ""

# f884a46c403f4d309b2c04c772a7eb37
#: distutils/setupscript.rst:585
msgid "``download_url``"
msgstr ""

# 65eb2cb19e86413da67d274c7bc6b143
#: distutils/setupscript.rst:585
msgid "location where the package may be downloaded"
msgstr ""

# 1346d58cc6804a16b7280eed1ddab4fc
#: distutils/setupscript.rst:588
msgid "``classifiers``"
msgstr ""

# 3911d647a91940de9f574e92501cfb8b
#: distutils/setupscript.rst:588
msgid "a list of classifiers"
msgstr ""

# 31dd428b832f405aa75a24030d91d69c
# 7db9fedc074a419ab6b6c9b0467a7a65
#: distutils/setupscript.rst:588 distutils/setupscript.rst:590
msgid "list of strings"
msgstr ""

# 4cb375df6f8f4a8bb050082587295e8e
#: distutils/setupscript.rst:590
msgid "``platforms``"
msgstr ""

# fc283a58f3c748c4a2c449c56fb94a3f
#: distutils/setupscript.rst:590
msgid "a list of platforms"
msgstr ""

# ceababc3a4e44b71901d726e9badc825
#: distutils/setupscript.rst:592
msgid "``license``"
msgstr ""

# 400ad9d575c4428e8cff9293f0ff1cff
#: distutils/setupscript.rst:592
msgid "license for the package"
msgstr ""

# 37c13ce9a91c4e338d774a602f3072d2
#: distutils/setupscript.rst:592
msgid "\\(6)"
msgstr ""

# f49ac8226b3f44549d2af1060acca79d
#: distutils/setupscript.rst:598
msgid "These fields are required."
msgstr ""

# b31a29174153499cb7f23bcde623b3c7
#: distutils/setupscript.rst:601
msgid ""
"It is recommended that versions take the form *major.minor[.patch[.sub]]*."
msgstr ""

# 96627b71a29b455693a47db1bf36e241
#: distutils/setupscript.rst:604
msgid ""
"Either the author or the maintainer must be identified. If maintainer is "
"provided, distutils lists it as the author in :file:`PKG-INFO`."
msgstr ""

# 530f4537b2544553a025d032249bc510
#: distutils/setupscript.rst:608
msgid ""
"These fields should not be used if your package is to be compatible with "
"Python versions prior to 2.2.3 or 2.3.  The list is available from the `PyPI "
"website <http://pypi.python.org/pypi>`_."
msgstr ""

# fa2d808b515545e9b92e6349eddf91f3
#: distutils/setupscript.rst:613
msgid ""
"The ``long_description`` field is used by PyPI when you are :ref:"
"`registering <package-register>` a package, to :ref:`build its home page "
"<package-display>`."
msgstr ""

# 5412f11e68b84f609306e9aad0dac334
#: distutils/setupscript.rst:618
msgid ""
"The ``license`` field is a text indicating the license covering the package "
"where the license is not a selection from the \"License\" Trove classifiers. "
"See the ``Classifier`` field. Notice that there's a ``licence`` distribution "
"option which is deprecated but still acts as an alias for ``license``."
msgstr ""

# 5d947ce54ee444798498a47cd4997191
#: distutils/setupscript.rst:625
msgid "'short string'"
msgstr "une chaîne de caractères"

# c8a9308ad5ae4b08ae1ab58214a93c19
#: distutils/setupscript.rst:625
msgid "A single line of text, not more than 200 characters."
msgstr ""

# cbbf41cb0eb246f1be9270f385c65a92
#: distutils/setupscript.rst:629
msgid "'long string'"
msgstr "une chaîne de caractères"

# e340bbf5fadd4c08871e96cd4daacd70
#: distutils/setupscript.rst:628
msgid ""
"Multiple lines of plain text in reStructuredText format (see http://docutils."
"sf.net/)."
msgstr ""

# f2fe6962e79645f0a4838c2e39362fc8
#: distutils/setupscript.rst:632
msgid "'list of strings'"
msgstr "une liste de chaînes"

# 1b252145a50d49d7a4f5aaaab3ca0154
#: distutils/setupscript.rst:632
msgid "See below."
msgstr ""

# e0a00952624f4473be72d38ec8d5d834
#: distutils/setupscript.rst:634
msgid ""
"Encoding the version information is an art in itself. Python packages "
"generally adhere to the version format *major.minor[.patch][sub]*. The major "
"number is 0 for initial, experimental releases of software. It is "
"incremented for releases that represent major milestones in a package. The "
"minor number is incremented when important new features are added to the "
"package. The patch number increments when bug-fix releases are made. "
"Additional trailing version information is sometimes used to indicate sub-"
"releases.  These are \"a1,a2,...,aN\" (for alpha releases, where "
"functionality and API may change), \"b1,b2,...,bN\" (for beta releases, "
"which only fix bugs) and \"pr1,pr2,...,prN\" (for final pre-release release "
"testing). Some examples:"
msgstr ""

# cf84a695d16042f5a8a267ec630c301e
#: distutils/setupscript.rst:646
msgid "0.1.0"
msgstr ""

# 179f0c510cb34f81b94871a85786de30
#: distutils/setupscript.rst:646
msgid "the first, experimental release of a package"
msgstr ""

# fbc04870b3304445b039511ee0649a3a
#: distutils/setupscript.rst:649
msgid "1.0.1a2"
msgstr ""

# c1a3d344b2524c34bc1f71ab8a143121
#: distutils/setupscript.rst:649
msgid "the second alpha release of the first patch version of 1.0"
msgstr ""

# 1db6231a125f4fa4ac459ff7c93a98e9
#: distutils/setupscript.rst:651
msgid ":option:`classifiers` are specified in a Python list::"
msgstr ""

# b89f0ac0c9c74edc8d8dc6e3e638b8d4
#: distutils/setupscript.rst:672
msgid ""
"If you wish to include classifiers in your :file:`setup.py` file and also "
"wish to remain backwards-compatible with Python releases prior to 2.2.3, "
"then you can include the following code fragment in your :file:`setup.py` "
"before the :func:`setup` call. ::"
msgstr ""

# 4f0d5566e1634d479cb0dc9e56680496
#: distutils/setupscript.rst:687
msgid "Debugging the setup script"
msgstr ""

# 21c93ed1a01c4dad9323b5f5c1fe68ef
#: distutils/setupscript.rst:689
msgid ""
"Sometimes things go wrong, and the setup script doesn't do what the "
"developer wants."
msgstr ""

# af7f51772cbb4e0d9e3687a02f08b7d8
#: distutils/setupscript.rst:692
msgid ""
"Distutils catches any exceptions when running the setup script, and print a "
"simple error message before the script is terminated.  The motivation for "
"this behaviour is to not confuse administrators who don't know much about "
"Python and are trying to install a package.  If they get a big long "
"traceback from deep inside the guts of Distutils, they may think the package "
"or the Python installation is broken because they don't read all the way "
"down to the bottom and see that it's a permission problem."
msgstr ""

# e27068dc53054f36bd946b63e7ccb314
#: distutils/setupscript.rst:700
msgid ""
"On the other hand, this doesn't help the developer to find the cause of the "
"failure. For this purpose, the DISTUTILS_DEBUG environment variable can be "
"set to anything except an empty string, and distutils will now print "
"detailed information what it is doing, and prints the full traceback in case "
"an exception occurs."
msgstr ""

# e5319756e2944d1083d0291b084f4d2c
#: distutils/sourcedist.rst:5
msgid "Creating a Source Distribution"
msgstr ""

# 456a02a929d8443ead3bba0f2b88bd1c
#: distutils/sourcedist.rst:7
msgid ""
"As shown in section :ref:`distutils-simple-example`, you use the :command:"
"`sdist` command to create a source distribution.  In the simplest case, ::"
msgstr ""

# d1fa5096149746d888fdea66768ab88f
#: distutils/sourcedist.rst:12
msgid ""
"(assuming you haven't specified any :command:`sdist` options in the setup "
"script or config file), :command:`sdist` creates the archive of the default "
"format for the current platform.  The default format is a gzip'ed tar file (:"
"file:`.tar.gz`) on Unix, and ZIP file on Windows."
msgstr ""

# 7770a89e58984b43a67ce1fd6bc09993
#: distutils/sourcedist.rst:17
msgid ""
"You can specify as many formats as you like using the :option:`--formats` "
"option, for example::"
msgstr ""

# 5a7fbe7990c141b9a5d4a9058d3831bc
#: distutils/sourcedist.rst:22
msgid "to create a gzipped tarball and a zip file.  The available formats are:"
msgstr ""

# 94eae01ebe6842f488380b16e8a4d5c2
#: distutils/sourcedist.rst:29
msgid "gzip'ed tar file (:file:`.tar.gz`)"
msgstr ""

# 79c5297dc073456e9a4fa2e006f88270
#: distutils/sourcedist.rst:32
msgid "``bztar``"
msgstr ""

# 10609dba3768435cb76fafc0a62bd8de
#: distutils/sourcedist.rst:32
msgid "bzip2'ed tar file (:file:`.tar.bz2`)"
msgstr ""

# 7d81462a4cd04a63a1dded610cc345ae
#: distutils/sourcedist.rst:61
msgid "Specifying the files to distribute"
msgstr ""

# 33185aa875204962a4c22715782e16aa
#: distutils/sourcedist.rst:63
msgid ""
"If you don't supply an explicit list of files (or instructions on how to "
"generate one), the :command:`sdist` command puts a minimal default set into "
"the source distribution:"
msgstr ""

# f81a35e657814c169a71a5b6b22fc245
#: distutils/sourcedist.rst:67
msgid ""
"all Python source files implied by the :option:`py_modules` and :option:"
"`packages` options"
msgstr ""

# 9b9284c6f1984a1c955162c0e046848f
#: distutils/sourcedist.rst:70
msgid ""
"all C source files mentioned in the :option:`ext_modules` or :option:"
"`libraries` options ("
msgstr ""

# 3ed2c87ed6e041b3a248640d67b774c9
#: distutils/sourcedist.rst:76
msgid ""
"scripts identified by the :option:`scripts` option See :ref:`distutils-"
"installing-scripts`."
msgstr ""

# 1fb79db6b23d42e2be5fc5f065b90274
#: distutils/sourcedist.rst:79
msgid ""
"anything that looks like a test script: :file:`test/test\\*.py` (currently, "
"the Distutils don't do anything with test scripts except include them in "
"source distributions, but in the future there will be a standard for testing "
"Python module distributions)"
msgstr ""

# 4b5a9bcce34f4116802d7d5a5634cf62
#: distutils/sourcedist.rst:84
msgid ""
":file:`README.txt` (or :file:`README`), :file:`setup.py` (or whatever  you "
"called your setup script), and :file:`setup.cfg`"
msgstr ""

# 32c8c9ad0d0d43a48e25fd63951001c5
#: distutils/sourcedist.rst:87
msgid ""
"all files that matches the ``package_data`` metadata. See :ref:`distutils-"
"installing-package-data`."
msgstr ""

# 0f5db4f97e784039b18359fa438cd8c5
#: distutils/sourcedist.rst:90
msgid ""
"all files that matches the ``data_files`` metadata. See :ref:`distutils-"
"additional-files`."
msgstr ""

# 1e123b7f43f4407abd8797e16afa49ab
#: distutils/sourcedist.rst:93
msgid ""
"Sometimes this is enough, but usually you will want to specify additional "
"files to distribute.  The typical way to do this is to write a *manifest "
"template*, called :file:`MANIFEST.in` by default.  The manifest template is "
"just a list of instructions for how to generate your manifest file, :file:"
"`MANIFEST`, which is the exact list of files to include in your source "
"distribution.  The :command:`sdist` command processes this template and "
"generates a manifest based on its instructions and what it finds in the "
"filesystem."
msgstr ""

# 74580e21b47843a8bbbd78d6b50a99fb
#: distutils/sourcedist.rst:101
msgid ""
"If you prefer to roll your own manifest file, the format is simple: one "
"filename per line, regular files (or symlinks to them) only.  If you do "
"supply your own :file:`MANIFEST`, you must specify everything: the default "
"set of files described above does not apply in this case."
msgstr ""

# 0fc5e6e56dd64f04aca1195a2ea0b9c2
#: distutils/sourcedist.rst:120
msgid ""
"The manifest template has one command per line, where each command specifies "
"a set of files to include or exclude from the source distribution.  For an "
"example, again we turn to the Distutils' own manifest template::"
msgstr ""

# 722c2702013a4efebfe21ef31b2f9e97
#: distutils/sourcedist.rst:128
msgid ""
"The meanings should be fairly clear: include all files in the distribution "
"root matching :file:`\\*.txt`, all files anywhere under the :file:`examples` "
"directory matching :file:`\\*.txt` or :file:`\\*.py`, and exclude all "
"directories matching :file:`examples/sample?/build`.  All of this is done "
"*after* the standard include set, so you can exclude files from the standard "
"set with explicit instructions in the manifest template.  (Or, you can use "
"the :option:`--no-defaults` option to disable the standard set entirely.)  "
"There are several other commands available in the manifest template mini-"
"language; see section :ref:`sdist-cmd`."
msgstr ""

# 5cbfec3858c943d1808453f9478a0ef4
#: distutils/sourcedist.rst:138
msgid ""
"The order of commands in the manifest template matters: initially, we have "
"the list of default files as described above, and each command in the "
"template adds to or removes from that list of files.  Once we have fully "
"processed the manifest template, we remove files that should not be included "
"in the source distribution:"
msgstr ""

# 9487a017bfc944349cf0349d194c9c82
#: distutils/sourcedist.rst:144
msgid "all files in the Distutils \"build\" tree (default :file:`build/`)"
msgstr ""

# eedc9810f2cb4db8b736064fbe1198e1
#: distutils/sourcedist.rst:146
msgid ""
"all files in directories named :file:`RCS`, :file:`CVS`, :file:`.svn`, :file:"
"`.hg`, :file:`.git`, :file:`.bzr` or :file:`_darcs`"
msgstr ""

# 3836334a6d2d4bd79400b42dc7a40eea
#: distutils/sourcedist.rst:149
msgid ""
"Now we have our complete list of files, which is written to the manifest for "
"future reference, and then used to build the source distribution archive(s)."
msgstr ""

# befb2a0669194bccb90f22246b68a78e
#: distutils/sourcedist.rst:152
msgid ""
"You can disable the default set of included files with the :option:`--no-"
"defaults` option, and you can disable the standard exclude set with :option:"
"`--no-prune`."
msgstr ""

# 03c41f48d5d9471e9855fc918a0370af
#: distutils/sourcedist.rst:156
msgid ""
"Following the Distutils' own manifest template, let's trace how the :command:"
"`sdist` command builds the list of files to include in the Distutils source "
"distribution:"
msgstr ""

# c670108c02a644b29f8a0d44cad60a41
#: distutils/sourcedist.rst:160
msgid ""
"include all Python source files in the :file:`distutils` and :file:"
"`distutils/command` subdirectories (because packages corresponding to those "
"two directories were mentioned in the :option:`packages` option in the setup "
"script---see section :ref:`setup-script`)"
msgstr ""

# e46c11277bd84ba3a0bf67d789a4e097
#: distutils/sourcedist.rst:165
msgid ""
"include :file:`README.txt`, :file:`setup.py`, and :file:`setup.cfg` "
"(standard files)"
msgstr ""

# f389634e9f2f4657b9e5ca5db2d82fa9
#: distutils/sourcedist.rst:168
msgid "include :file:`test/test\\*.py` (standard files)"
msgstr ""

# 6d0070e3e1294e86b3901d96cdb8eb3b
#: distutils/sourcedist.rst:170
msgid ""
"include :file:`\\*.txt` in the distribution root (this will find :file:"
"`README.txt` a second time, but such redundancies are weeded out later)"
msgstr ""

# 8fd040b5b1dc47a6b5771b0569434954
#: distutils/sourcedist.rst:173
msgid ""
"include anything matching :file:`\\*.txt` or :file:`\\*.py` in the sub-tree "
"under :file:`examples`,"
msgstr ""

# 7b724e63e27347a482ed6cf68878f8d3
#: distutils/sourcedist.rst:176
msgid ""
"exclude all files in the sub-trees starting at directories matching :file:"
"`examples/sample?/build`\\ ---this may exclude files included by the "
"previous two steps, so it's important that the ``prune`` command in the "
"manifest template comes after the ``recursive-include`` command"
msgstr ""

# 0616902b17c9427090eb006b89d74087
#: distutils/sourcedist.rst:181
msgid ""
"exclude the entire :file:`build` tree, and any :file:`RCS`, :file:`CVS`, :"
"file:`.svn`, :file:`.hg`, :file:`.git`, :file:`.bzr` and :file:`_darcs` "
"directories"
msgstr ""

# d591dca4b8594893869a2ffc69c0aa31
#: distutils/sourcedist.rst:185
msgid ""
"Just like in the setup script, file and directory names in the manifest "
"template should always be slash-separated; the Distutils will take care of "
"converting them to the standard representation on your platform. That way, "
"the manifest template is portable across operating systems."
msgstr ""

# d0410b37c853471d95f034d778b3f4c5
#: distutils/sourcedist.rst:194
msgid "Manifest-related options"
msgstr ""

# 68a58e760c004fd2b02ccc7500ea2918
#: distutils/sourcedist.rst:196
msgid ""
"The normal course of operations for the :command:`sdist` command is as "
"follows:"
msgstr ""

# 0ac1323b19a8472ebed145b803f6a2de
#: distutils/sourcedist.rst:198
msgid ""
"if the manifest file (:file:`MANIFEST` by default) exists and the first line "
"does not have a comment indicating it is generated from :file:`MANIFEST.in`, "
"then it is used as is, unaltered"
msgstr ""

# f75173f80bb84272b23f48fd1b06c8fe
#: distutils/sourcedist.rst:202
msgid ""
"if the manifest file doesn't exist or has been previously automatically "
"generated, read :file:`MANIFEST.in` and create the manifest"
msgstr ""

# caea29a881244af6b184c537deb87b9e
#: distutils/sourcedist.rst:205
msgid ""
"if neither :file:`MANIFEST` nor :file:`MANIFEST.in` exist, create a manifest "
"with just the default file set"
msgstr ""

# 3cdded952a1047b89f7f823767d4036e
#: distutils/sourcedist.rst:208
msgid ""
"use the list of files now in :file:`MANIFEST` (either just generated or read "
"in) to create the source distribution archive(s)"
msgstr ""

# bf4f1e8a52674519a6b552b1a5d2c8a4
#: distutils/sourcedist.rst:211
msgid ""
"There are a couple of options that modify this behaviour.  First, use the :"
"option:`--no-defaults` and :option:`--no-prune` to disable the standard "
"\"include\" and \"exclude\" sets."
msgstr ""

# 3365278462e740e48deac20bfc63a360
#: distutils/sourcedist.rst:215
msgid ""
"Second, you might just want to (re)generate the manifest, but not create a "
"source distribution::"
msgstr ""

# 4597443e1c4a4b7ba91168b61dd6e24c
#: distutils/sourcedist.rst:220
msgid ":option:`-o` is a shortcut for :option:`--manifest-only`."
msgstr ""

# 6a7a9c9d13eb4ea8aaa3b88ab790dde2
#: distutils/uploading.rst:5
msgid "Uploading Packages to the Package Index"
msgstr ""

# 2127a3566340474d9852fafe334c29b1
#: distutils/uploading.rst:7
msgid ""
"The contents of this page have moved to the section :ref:`package-index`."
msgstr ""
