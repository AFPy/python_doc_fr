# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/uuid.rst:2
msgid ":mod:`uuid` --- UUID objects according to RFC 4122"
msgstr ""

#: ../Doc/library/uuid.rst:9
msgid "**Source code:** :source:`Lib/uuid.py`"
msgstr ""

#: ../Doc/library/uuid.rst:13
msgid ""
"This module provides immutable :class:`UUID` objects (the :class:`UUID` "
"class) and the functions :func:`uuid1`, :func:`uuid3`, :func:`uuid4`, :func:"
"`uuid5` for generating version 1, 3, 4, and 5 UUIDs as specified in :rfc:"
"`4122`."
msgstr ""

#: ../Doc/library/uuid.rst:17
msgid ""
"If all you want is a unique ID, you should probably call :func:`uuid1` or :"
"func:`uuid4`.  Note that :func:`uuid1` may compromise privacy since it "
"creates a UUID containing the computer's network address.  :func:`uuid4` "
"creates a random UUID."
msgstr ""

#: ../Doc/library/uuid.rst:25
msgid ""
"Create a UUID from either a string of 32 hexadecimal digits, a string of 16 "
"bytes as the *bytes* argument, a string of 16 bytes in little-endian order "
"as the *bytes_le* argument, a tuple of six integers (32-bit *time_low*, 16-"
"bit *time_mid*, 16-bit *time_hi_version*, 8-bit *clock_seq_hi_variant*, 8-"
"bit *clock_seq_low*, 48-bit *node*) as the *fields* argument, or a single "
"128-bit integer as the *int* argument.  When a string of hex digits is "
"given, curly braces, hyphens, and a URN prefix are all optional.  For "
"example, these expressions all yield the same UUID::"
msgstr ""

#: ../Doc/library/uuid.rst:43
msgid ""
"Exactly one of *hex*, *bytes*, *bytes_le*, *fields*, or *int* must be given. "
"The *version* argument is optional; if given, the resulting UUID will have "
"its variant and version number set according to RFC 4122, overriding bits in "
"the given *hex*, *bytes*, *bytes_le*, *fields*, or *int*."
msgstr ""

#: ../Doc/library/uuid.rst:49
msgid ":class:`UUID` instances have these read-only attributes:"
msgstr ""

#: ../Doc/library/uuid.rst:53
msgid ""
"The UUID as a 16-byte string (containing the six integer fields in big-"
"endian byte order)."
msgstr ""

#: ../Doc/library/uuid.rst:59
msgid ""
"The UUID as a 16-byte string (with *time_low*, *time_mid*, and "
"*time_hi_version* in little-endian byte order)."
msgstr ""

#: ../Doc/library/uuid.rst:65
msgid ""
"A tuple of the six integer fields of the UUID, which are also available as "
"six individual attributes and two derived attributes:"
msgstr ""

#: ../Doc/library/uuid.rst:69
msgid "Field"
msgstr ""

#: ../Doc/library/uuid.rst:69
msgid "Meaning"
msgstr "Signification"

#: ../Doc/library/uuid.rst:71
msgid ":attr:`time_low`"
msgstr ":attr:`time_low`"

#: ../Doc/library/uuid.rst:71
msgid "the first 32 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:73
msgid ":attr:`time_mid`"
msgstr ":attr:`time_mid`"

#: ../Doc/library/uuid.rst:73 ../Doc/library/uuid.rst:75
msgid "the next 16 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:75
msgid ":attr:`time_hi_version`"
msgstr ":attr:`time_hi_version`"

#: ../Doc/library/uuid.rst:77
msgid ":attr:`clock_seq_hi_variant`"
msgstr ":attr:`clock_seq_hi_variant`"

#: ../Doc/library/uuid.rst:77 ../Doc/library/uuid.rst:79
msgid "the next 8 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:79
msgid ":attr:`clock_seq_low`"
msgstr ":attr:`clock_seq_low`"

#: ../Doc/library/uuid.rst:81
msgid ":attr:`node`"
msgstr ":attr:`node`"

#: ../Doc/library/uuid.rst:81
msgid "the last 48 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:83
msgid ":attr:`time`"
msgstr ":attr:`time`"

#: ../Doc/library/uuid.rst:83
msgid "the 60-bit timestamp"
msgstr ""

#: ../Doc/library/uuid.rst:85
msgid ":attr:`clock_seq`"
msgstr ":attr:`clock_seq`"

#: ../Doc/library/uuid.rst:85
msgid "the 14-bit sequence number"
msgstr ""

#: ../Doc/library/uuid.rst:91
msgid "The UUID as a 32-character hexadecimal string."
msgstr ""

#: ../Doc/library/uuid.rst:96
msgid "The UUID as a 128-bit integer."
msgstr ""

#: ../Doc/library/uuid.rst:101
msgid "The UUID as a URN as specified in RFC 4122."
msgstr ""

#: ../Doc/library/uuid.rst:106
msgid ""
"The UUID variant, which determines the internal layout of the UUID. This "
"will be one of the integer constants :const:`RESERVED_NCS`, :const:"
"`RFC_4122`, :const:`RESERVED_MICROSOFT`, or :const:`RESERVED_FUTURE`."
msgstr ""

#: ../Doc/library/uuid.rst:113
msgid ""
"The UUID version number (1 through 5, meaningful only when the variant is :"
"const:`RFC_4122`)."
msgstr ""

#: ../Doc/library/uuid.rst:116
msgid "The :mod:`uuid` module defines the following functions:"
msgstr ""

#: ../Doc/library/uuid.rst:121
msgid ""
"Get the hardware address as a 48-bit positive integer.  The first time this "
"runs, it may launch a separate program, which could be quite slow.  If all "
"attempts to obtain the hardware address fail, we choose a random 48-bit "
"number with its eighth bit set to 1 as recommended in RFC 4122.  \"Hardware "
"address\" means the MAC address of a network interface, and on a machine "
"with multiple network interfaces the MAC address of any one of them may be "
"returned."
msgstr ""

#: ../Doc/library/uuid.rst:133
msgid ""
"Generate a UUID from a host ID, sequence number, and the current time. If "
"*node* is not given, :func:`getnode` is used to obtain the hardware address. "
"If *clock_seq* is given, it is used as the sequence number; otherwise a "
"random 14-bit sequence number is chosen."
msgstr ""

#: ../Doc/library/uuid.rst:143
msgid ""
"Generate a UUID based on the MD5 hash of a namespace identifier (which is a "
"UUID) and a name (which is a string)."
msgstr ""

#: ../Doc/library/uuid.rst:151
msgid "Generate a random UUID."
msgstr ""

#: ../Doc/library/uuid.rst:158
msgid ""
"Generate a UUID based on the SHA-1 hash of a namespace identifier (which is "
"a UUID) and a name (which is a string)."
msgstr ""

#: ../Doc/library/uuid.rst:163
msgid ""
"The :mod:`uuid` module defines the following namespace identifiers for use "
"with :func:`uuid3` or :func:`uuid5`."
msgstr ""

#: ../Doc/library/uuid.rst:169
msgid ""
"When this namespace is specified, the *name* string is a fully-qualified "
"domain name."
msgstr ""

#: ../Doc/library/uuid.rst:175
msgid "When this namespace is specified, the *name* string is a URL."
msgstr ""

#: ../Doc/library/uuid.rst:180
msgid "When this namespace is specified, the *name* string is an ISO OID."
msgstr ""

#: ../Doc/library/uuid.rst:185
msgid ""
"When this namespace is specified, the *name* string is an X.500 DN in DER or "
"a text output format."
msgstr ""

#: ../Doc/library/uuid.rst:188
msgid ""
"The :mod:`uuid` module defines the following constants for the possible "
"values of the :attr:`variant` attribute:"
msgstr ""

#: ../Doc/library/uuid.rst:194
msgid "Reserved for NCS compatibility."
msgstr ""

#: ../Doc/library/uuid.rst:199
msgid "Specifies the UUID layout given in :rfc:`4122`."
msgstr ""

#: ../Doc/library/uuid.rst:204
msgid "Reserved for Microsoft compatibility."
msgstr ""

#: ../Doc/library/uuid.rst:209
msgid "Reserved for future definition."
msgstr ""

#: ../Doc/library/uuid.rst:215
msgid ":rfc:`4122` - A Universally Unique IDentifier (UUID) URN Namespace"
msgstr ""

#: ../Doc/library/uuid.rst:215
msgid ""
"This specification defines a Uniform Resource Name namespace for UUIDs, the "
"internal format of UUIDs, and methods of generating UUIDs."
msgstr ""

#: ../Doc/library/uuid.rst:222
msgid "Example"
msgstr "Exemple"

#: ../Doc/library/uuid.rst:224
msgid "Here are some examples of typical usage of the :mod:`uuid` module::"
msgstr ""
