# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/using/scripts.rst:4
msgid "Additional Tools and Scripts"
msgstr ""

#: ../Doc/using/scripts.rst:9
msgid "pyvenv - Creating virtual environments"
msgstr ""

#: ../Doc/using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"``pyvenv`` script::"
msgstr ""

#: ../Doc/using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it "
"with a ``home`` key pointing to the Python installation the command was run "
"from.  It also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory "
"containing a copy of the ``python`` binary (or binaries, in the case of "
"Windows).  It also creates an (initially empty) ``lib/pythonX.Y/site-"
"packages`` subdirectory (on Windows, this is ``Lib\\site-packages``)."
msgstr ""

#: ../Doc/using/venv-create.inc:16
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/en/latest/installing/#creating-virtual-"
"environments>`__"
msgstr ""

#: ../Doc/using/venv-create.inc:21
msgid ""
"On Windows, you may have to invoke the ``pyvenv`` script as follows, if you "
"don't have the relevant PATH and PATHEXT settings::"
msgstr ""

#: ../Doc/using/venv-create.inc:26
msgid "or equivalently::"
msgstr ""

#: ../Doc/using/venv-create.inc:30
msgid "The command, if run with ``-h``, will show the available options::"
msgstr ""

#: ../Doc/using/venv-create.inc:56
msgid ""
"Depending on how the ``venv`` functionality has been invoked, the usage "
"message may vary slightly, e.g. referencing ``pyvenv`` rather than ``venv``."
msgstr ""

#: ../Doc/using/venv-create.inc:59
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr ""

#: ../Doc/using/venv-create.inc:63
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided. Now, if "
"an existing directory is specified, its contents are removed and the "
"directory is processed as if it had been newly created."
msgstr ""

#: ../Doc/using/venv-create.inc:69
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr ""

#: ../Doc/using/venv-create.inc:73
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr ""

#: ../Doc/using/venv-create.inc:76
msgid ""
"Multiple paths can be given to ``pyvenv``, in which case an identical "
"virtualenv will be created, according to the given options, at each provided "
"path."
msgstr ""

#: ../Doc/using/venv-create.inc:80
msgid ""
"Once a venv has been created, it can be \"activated\" using a script in the "
"venv's binary directory. The invocation of the script is platform-specific:"
msgstr ""

#: ../Doc/using/venv-create.inc:84
msgid "Platform"
msgstr "Plateforme"

#: ../Doc/using/venv-create.inc:84
msgid "Shell"
msgstr ""

#: ../Doc/using/venv-create.inc:84
msgid "Command to activate virtual environment"
msgstr "Commande pour activer l'environnement virtuel"

#: ../Doc/using/venv-create.inc:86
msgid "Posix"
msgstr "Posix"

#: ../Doc/using/venv-create.inc:86
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../Doc/using/venv-create.inc:86
msgid "$ source <venv>/bin/activate"
msgstr "$ source <venv>/bin/activate"

#: ../Doc/using/venv-create.inc:88
msgid "fish"
msgstr "fish"

#: ../Doc/using/venv-create.inc:88
msgid "$ . <venv>/bin/activate.fish"
msgstr "$ . <venv>/bin/activate.fish"

#: ../Doc/using/venv-create.inc:90
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../Doc/using/venv-create.inc:90
msgid "$ source <venv>/bin/activate.csh"
msgstr "$ source <venv>/bin/activate.csh"

#: ../Doc/using/venv-create.inc:92
msgid "Windows"
msgstr "Windows"

#: ../Doc/using/venv-create.inc:92
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../Doc/using/venv-create.inc:92
msgid "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"
msgstr ""

#: ../Doc/using/venv-create.inc:94
msgid "PowerShell"
msgstr "PowerShell"

#: ../Doc/using/venv-create.inc:94
msgid "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"
msgstr ""

#: ../Doc/using/venv-create.inc:97
msgid ""
"You don't specifically *need* to activate an environment; activation just "
"prepends the venv's binary directory to your path, so that \"python\" "
"invokes the venv's Python interpreter and you can run installed scripts "
"without having to use their full path. However, all scripts installed in a "
"venv should be runnable without activating it, and run with the venv's "
"Python automatically."
msgstr ""

#: ../Doc/using/venv-create.inc:103
msgid ""
"You can deactivate a venv by typing \"deactivate\" in your shell. The exact "
"mechanism is platform-specific: for example, the Bash activation script "
"defines a \"deactivate\" function, whereas on Windows there are separate "
"scripts called ``deactivate.bat`` and ``Deactivate.ps1`` which are installed "
"when the venv is created."
msgstr ""

#: ../Doc/using/venv-create.inc:109
msgid "``fish`` and ``csh`` activation scripts."
msgstr ""
