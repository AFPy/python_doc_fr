# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/gl.rst:2
msgid ":mod:`gl` --- *Graphics Library* interface"
msgstr ""

#: ../Doc/library/gl.rst:10
msgid "The :mod:`gl` module has been removed in Python 3."
msgstr ""

#: ../Doc/library/gl.rst:14
msgid ""
"This module provides access to the Silicon Graphics *Graphics Library*. It "
"is available only on Silicon Graphics machines."
msgstr ""

#: ../Doc/library/gl.rst:19
msgid ""
"Some illegal calls to the GL library cause the Python interpreter to dump "
"core.  In particular, the use of most GL calls is unsafe before the first "
"window is opened."
msgstr ""

#: ../Doc/library/gl.rst:23
msgid ""
"The module is too large to document here in its entirety, but the following "
"should help you to get started. The parameter conventions for the C "
"functions are translated to Python as follows:"
msgstr ""

#: ../Doc/library/gl.rst:27
msgid ""
"All (short, long, unsigned) int values are represented by Python integers."
msgstr ""

#: ../Doc/library/gl.rst:29
msgid ""
"All float and double values are represented by Python floating point "
"numbers. In most cases, Python integers are also allowed."
msgstr ""

#: ../Doc/library/gl.rst:32
msgid ""
"All arrays are represented by one-dimensional Python lists. In most cases, "
"tuples are also allowed."
msgstr ""

#: ../Doc/library/gl.rst:35
msgid ""
"All string and character arguments are represented by Python strings, for "
"instance, ``winopen('Hi There!')`` and ``rotate(900, 'z')``."
msgstr ""

#: ../Doc/library/gl.rst:38
msgid ""
"All (short, long, unsigned) integer arguments or return values that are only "
"used to specify the length of an array argument are omitted. For example, "
"the C call ::"
msgstr ""

#: ../Doc/library/gl.rst:44 ../Doc/library/gl.rst:56
msgid "is translated to Python as ::"
msgstr ""

#: ../Doc/library/gl.rst:48
msgid ""
"Output arguments are omitted from the argument list; they are transmitted as "
"function return values instead. If more than one value must be returned, the "
"return value is a tuple. If the C function has both a regular return value "
"(that is not omitted because of the previous rule) and an output argument, "
"the return value comes first in the tuple. Examples: the C call ::"
msgstr ""

#: ../Doc/library/gl.rst:60
msgid ""
"The following functions are non-standard or have special argument "
"conventions:"
msgstr ""

#: ../Doc/library/gl.rst:65
msgid ""
"Equivalent to but faster than a number of ``v3d()`` calls. The *argument* is "
"a list (or tuple) of points. Each point must be a tuple of coordinates ``(x, "
"y, z)`` or ``(x, y)``. The points may be 2- or 3-dimensional but must all "
"have the same dimension. Float and int values may be mixed however. The "
"points are always converted to 3D double precision points by assuming ``z = "
"0.0`` if necessary (as indicated in the man page), and for each point "
"``v3d()`` is called."
msgstr ""

#: ../Doc/library/gl.rst:77
msgid ""
"Equivalent to but faster than a number of ``n3f`` and ``v3f`` calls. The "
"argument is an array (list or tuple) of pairs of normals and points. Each "
"pair is a tuple of a point and a normal for that point. Each point or normal "
"must be a tuple of coordinates ``(x, y, z)``. Three coordinates must be "
"given. Float and int values may be mixed. For each pair, ``n3f()`` is called "
"for the normal, and then ``v3f()`` is called for the point."
msgstr ""

#: ../Doc/library/gl.rst:87
msgid ""
"Similar to  ``nvarray()`` but the pairs have the point first and the normal "
"second."
msgstr ""

#: ../Doc/library/gl.rst:93
msgid ""
"Defines a nurbs surface. The dimensions of ``ctl[][]`` are computed as "
"follows: ``[len(s_k) - s_ord]``, ``[len(t_k) - t_ord]``."
msgstr ""

#: ../Doc/library/gl.rst:101
msgid ""
"Defines a nurbs curve. The length of ctlpoints is ``len(knots) - order``."
msgstr ""

#: ../Doc/library/gl.rst:106
msgid ""
"Defines a piecewise-linear curve. *points* is a list of points. *type* must "
"be ``N_ST``."
msgstr ""

#: ../Doc/library/gl.rst:113
msgid ""
"The only argument to these functions specifies the desired size of the pick "
"or select buffer."
msgstr ""

#: ../Doc/library/gl.rst:120
msgid ""
"These functions have no arguments. They return a list of integers "
"representing the used part of the pick/select buffer. No method is provided "
"to detect buffer overrun."
msgstr ""

#: ../Doc/library/gl.rst:124
msgid "Here is a tiny but complete example GL program in Python::"
msgstr ""

#: ../Doc/library/gl.rst:157
msgid ""
"`PyOpenGL: The Python OpenGL Binding <http://pyopengl.sourceforge.net/>`_"
msgstr ""

#: ../Doc/library/gl.rst:156
msgid ""
"An interface to OpenGL is also available; see information about the "
"**PyOpenGL** project online at http://pyopengl.sourceforge.net/.  This may "
"be a better option if support for SGI hardware from before about 1996 is not "
"required."
msgstr ""

#: ../Doc/library/gl.rst:162
msgid ":mod:`DEVICE` --- Constants used with the :mod:`gl` module"
msgstr ""

#: ../Doc/library/gl.rst:170
msgid "The :mod:`DEVICE` module has been removed in Python 3."
msgstr ""

#: ../Doc/library/gl.rst:174
msgid ""
"This modules defines the constants used by the Silicon Graphics *Graphics "
"Library* that C programmers find in the header file ``<gl/device.h>``. Read "
"the module source file for details."
msgstr ""

#: ../Doc/library/gl.rst:180
msgid ":mod:`GL` --- Constants used with the :mod:`gl` module"
msgstr ""

#: ../Doc/library/gl.rst:188
msgid "The :mod:`GL` module has been removed in Python 3."
msgstr ""

#: ../Doc/library/gl.rst:191
msgid ""
"This module contains constants used by the Silicon Graphics *Graphics "
"Library* from the C header file ``<gl/gl.h>``. Read the module source file "
"for details."
msgstr ""
