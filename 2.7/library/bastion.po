# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/bastion.rst:3
msgid ":mod:`Bastion` --- Restricting access to objects"
msgstr ""

#: ../Doc/library/bastion.rst:9
msgid "The :mod:`Bastion` module has been removed in Python 3."
msgstr ""

#: ../Doc/library/bastion.rst:15
msgid "Disabled module."
msgstr ""

#: ../Doc/library/bastion.rst:20
msgid ""
"The documentation has been left in place to help in reading old code that "
"uses the module."
msgstr ""

#: ../Doc/library/bastion.rst:23
msgid ""
"According to the dictionary, a bastion is \"a fortified area or position\", "
"or \"something that is considered a stronghold.\"  It's a suitable name for "
"this module, which provides a way to forbid access to certain attributes of "
"an object.  It must always be used with the :mod:`rexec` module, in order to "
"allow restricted-mode programs access to certain safe attributes of an "
"object, while denying access to other, unsafe attributes."
msgstr ""

#: ../Doc/library/bastion.rst:39
msgid ""
"Protect the object *object*, returning a bastion for the object.  Any "
"attempt to access one of the object's attributes will have to be approved by "
"the *filter* function; if the access is denied an :exc:`AttributeError` "
"exception will be raised."
msgstr ""

#: ../Doc/library/bastion.rst:44
msgid ""
"If present, *filter* must be a function that accepts a string containing an "
"attribute name, and returns true if access to that attribute will be "
"permitted; if *filter* returns false, the access is denied.  The default "
"filter denies access to any function beginning with an underscore "
"(``'_'``).  The bastion's string representation will be ``<Bastion for "
"name>`` if a value for *name* is provided; otherwise, ``repr(object)`` will "
"be used."
msgstr ""

#: ../Doc/library/bastion.rst:51
msgid ""
"*class*, if present, should be a subclass of :class:`BastionClass`;  see the "
"code in :file:`bastion.py` for the details.  Overriding the default :class:"
"`BastionClass` will rarely be required."
msgstr ""

#: ../Doc/library/bastion.rst:58
msgid ""
"Class which actually implements bastion objects.  This is the default class "
"used by :func:`Bastion`.  The *getfunc* parameter is a function which "
"returns the value of an attribute which should be exposed to the restricted "
"execution environment when called with the name of the attribute as the only "
"parameter. *name* is used to construct the :func:`repr` of the :class:"
"`BastionClass` instance."
msgstr ""
