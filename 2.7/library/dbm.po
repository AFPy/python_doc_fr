# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/dbm.rst:2
msgid ":mod:`dbm` --- Simple \"database\" interface"
msgstr ""

#: ../Doc/library/dbm.rst:9
msgid ""
"The :mod:`dbm` module has been renamed to :mod:`dbm.ndbm` in Python 3.  The :"
"term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

#: ../Doc/library/dbm.rst:14
msgid ""
"The :mod:`dbm` module provides an interface to the Unix \"(n)dbm\" library.  "
"Dbm objects behave like mappings (dictionaries), except that keys and values "
"are always strings. Printing a dbm object doesn't print the keys and values, "
"and the :meth:`items` and :meth:`values` methods are not supported."
msgstr ""

#: ../Doc/library/dbm.rst:19
msgid ""
"This module can be used with the \"classic\" ndbm interface, the BSD DB "
"compatibility interface, or the GNU GDBM compatibility interface. On Unix, "
"the :program:`configure` script will attempt to locate the appropriate "
"header file to simplify building this module."
msgstr ""

#: ../Doc/library/dbm.rst:24
msgid "The module defines the following:"
msgstr "Le module d√©finit :"

#: ../Doc/library/dbm.rst:29
msgid ""
"Raised on dbm-specific errors, such as I/O errors. :exc:`KeyError` is raised "
"for general mapping errors like specifying an incorrect key."
msgstr ""

#: ../Doc/library/dbm.rst:35
msgid "Name of the ``ndbm`` implementation library used."
msgstr ""

#: ../Doc/library/dbm.rst:40
msgid ""
"Open a dbm database and return a dbm object.  The *filename* argument is the "
"name of the database file (without the :file:`.dir` or :file:`.pag` "
"extensions; note that the BSD DB implementation of the interface will append "
"the extension :file:`.db` and only create one file)."
msgstr ""

#: ../Doc/library/dbm.rst:45
msgid "The optional *flag* argument must be one of these values:"
msgstr ""

#: ../Doc/library/dbm.rst:48
msgid "Value"
msgstr "Valeur"

#: ../Doc/library/dbm.rst:48
msgid "Meaning"
msgstr "Signification"

#: ../Doc/library/dbm.rst:50
msgid "``'r'``"
msgstr "``'r'``"

#: ../Doc/library/dbm.rst:50
msgid "Open existing database for reading only (default)"
msgstr ""

#: ../Doc/library/dbm.rst:53
msgid "``'w'``"
msgstr "``'w'``"

#: ../Doc/library/dbm.rst:53
msgid "Open existing database for reading and writing"
msgstr ""

#: ../Doc/library/dbm.rst:56
msgid "``'c'``"
msgstr "``'c'``"

#: ../Doc/library/dbm.rst:56
msgid "Open database for reading and writing, creating it if it doesn't exist"
msgstr ""

#: ../Doc/library/dbm.rst:59
msgid "``'n'``"
msgstr "``'n'``"

#: ../Doc/library/dbm.rst:59
msgid "Always create a new, empty database, open for reading and writing"
msgstr ""

#: ../Doc/library/dbm.rst:63
msgid ""
"The optional *mode* argument is the Unix mode of the file, used only when "
"the database has to be created.  It defaults to octal ``0666`` (and will be "
"modified by the prevailing umask)."
msgstr ""

#: ../Doc/library/dbm.rst:67
msgid ""
"In addition to the dictionary-like methods, ``dbm`` objects provide the "
"following method:"
msgstr ""

#: ../Doc/library/dbm.rst:73
msgid "Close the ``dbm`` database."
msgstr ""

#: ../Doc/library/dbm.rst:79
msgid "Module :mod:`anydbm`"
msgstr ""

#: ../Doc/library/dbm.rst:79
msgid "Generic interface to ``dbm``\\ -style databases."
msgstr ""

#: ../Doc/library/dbm.rst:82
msgid "Module :mod:`gdbm`"
msgstr ""

#: ../Doc/library/dbm.rst:82
msgid "Similar interface to the GNU GDBM library."
msgstr ""

#: ../Doc/library/dbm.rst:84
msgid "Module :mod:`whichdb`"
msgstr ""

#: ../Doc/library/dbm.rst:85
msgid "Utility module used to determine the type of an existing database."
msgstr ""
