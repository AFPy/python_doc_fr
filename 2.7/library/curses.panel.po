# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/curses.panel.rst:2
msgid ":mod:`curses.panel` --- A panel stack extension for curses"
msgstr ""

#: ../Doc/library/curses.panel.rst:9
msgid ""
"Panels are windows with the added feature of depth, so they can be stacked "
"on top of each other, and only the visible portions of each window will be "
"displayed.  Panels can be added, moved up or down in the stack, and removed."
msgstr ""

#: ../Doc/library/curses.panel.rst:17
msgid "Functions"
msgstr "Fonctions"

#: ../Doc/library/curses.panel.rst:19
msgid "The module :mod:`curses.panel` defines the following functions:"
msgstr ""

#: ../Doc/library/curses.panel.rst:24
msgid "Returns the bottom panel in the panel stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:29
msgid ""
"Returns a panel object, associating it with the given window *win*. Be aware "
"that you need to keep the returned panel object referenced explicitly.  If "
"you don't, the panel object is garbage collected and removed from the panel "
"stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:36
msgid "Returns the top panel in the panel stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:41
msgid ""
"Updates the virtual screen after changes in the panel stack. This does not "
"call :func:`curses.doupdate`, so you'll have to do this yourself."
msgstr ""

#: ../Doc/library/curses.panel.rst:48
msgid "Panel Objects"
msgstr ""

#: ../Doc/library/curses.panel.rst:50
msgid ""
"Panel objects, as returned by :func:`new_panel` above, are windows with a "
"stacking order. There's always a window associated with a panel which "
"determines the content, while the panel methods are responsible for the "
"window's depth in the panel stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:55
msgid "Panel objects have the following methods:"
msgstr ""

#: ../Doc/library/curses.panel.rst:60
msgid "Returns the panel above the current panel."
msgstr ""

#: ../Doc/library/curses.panel.rst:65
msgid "Returns the panel below the current panel."
msgstr ""

#: ../Doc/library/curses.panel.rst:70
msgid "Push the panel to the bottom of the stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:75
msgid "Returns true if the panel is hidden (not visible), false otherwise."
msgstr ""

#: ../Doc/library/curses.panel.rst:80
msgid ""
"Hide the panel. This does not delete the object, it just makes the window on "
"screen invisible."
msgstr ""

#: ../Doc/library/curses.panel.rst:86
msgid "Move the panel to the screen coordinates ``(y, x)``."
msgstr ""

#: ../Doc/library/curses.panel.rst:91
msgid "Change the window associated with the panel to the window *win*."
msgstr ""

#: ../Doc/library/curses.panel.rst:96
msgid ""
"Set the panel's user pointer to *obj*. This is used to associate an "
"arbitrary piece of data with the panel, and can be any Python object."
msgstr ""

#: ../Doc/library/curses.panel.rst:102
msgid "Display the panel (which might have been hidden)."
msgstr ""

#: ../Doc/library/curses.panel.rst:107
msgid "Push panel to the top of the stack."
msgstr ""

#: ../Doc/library/curses.panel.rst:112
msgid ""
"Returns the user pointer for the panel.  This might be any Python object."
msgstr ""

#: ../Doc/library/curses.panel.rst:117
msgid "Returns the window object associated with the panel."
msgstr ""
