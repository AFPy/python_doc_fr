# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/mutex.rst:3
msgid ":mod:`mutex` --- Mutual exclusion support"
msgstr ""

#: ../Doc/library/mutex.rst:9
msgid "The :mod:`mutex` module has been removed in Python 3."
msgstr ""

#: ../Doc/library/mutex.rst:15
msgid ""
"The :mod:`mutex` module defines a class that allows mutual-exclusion via "
"acquiring and releasing locks. It does not require (or imply) :mod:"
"`threading` or multi-tasking, though it could be useful for those purposes."
msgstr ""

#: ../Doc/library/mutex.rst:20
msgid "The :mod:`mutex` module defines the following class:"
msgstr ""

#: ../Doc/library/mutex.rst:25
msgid "Create a new (unlocked) mutex."
msgstr ""

#: ../Doc/library/mutex.rst:27
msgid ""
"A mutex has two pieces of state --- a \"locked\" bit and a queue. When the "
"mutex is not locked, the queue is empty. Otherwise, the queue contains zero "
"or more ``(function, argument)`` pairs representing functions (or methods) "
"waiting to acquire the lock. When the mutex is unlocked while the queue is "
"not empty, the first queue entry is removed and its  ``function(argument)`` "
"pair called, implying it now has the lock."
msgstr ""

#: ../Doc/library/mutex.rst:34
msgid ""
"Of course, no multi-threading is implied -- hence the funny interface for :"
"meth:`lock`, where a function is called once the lock is acquired."
msgstr ""

#: ../Doc/library/mutex.rst:41
msgid "Mutex Objects"
msgstr ""

#: ../Doc/library/mutex.rst:43
msgid ":class:`mutex` objects have following methods:"
msgstr ""

#: ../Doc/library/mutex.rst:48
msgid "Check whether the mutex is locked."
msgstr ""

#: ../Doc/library/mutex.rst:53
msgid ""
"\"Atomic\" test-and-set, grab the lock if it is not set, and return "
"``True``, otherwise, return ``False``."
msgstr ""

#: ../Doc/library/mutex.rst:59
msgid ""
"Execute ``function(argument)``, unless the mutex is locked. In the case it "
"is locked, place the function and argument on the queue. See :meth:`unlock` "
"for explanation of when ``function(argument)`` is executed in that case."
msgstr ""

#: ../Doc/library/mutex.rst:66
msgid ""
"Unlock the mutex if queue is empty, otherwise execute the first element in "
"the queue."
msgstr ""
