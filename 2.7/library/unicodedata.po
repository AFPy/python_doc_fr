# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/unicodedata.rst:3
msgid ":mod:`unicodedata` --- Unicode Database"
msgstr ""

#: ../Doc/library/unicodedata.rst:17
msgid ""
"This module provides access to the Unicode Character Database which defines "
"character properties for all Unicode characters. The data in this database "
"is based on the :file:`UnicodeData.txt` file version 5.2.0 which is publicly "
"available from ftp://ftp.unicode.org/."
msgstr ""

#: ../Doc/library/unicodedata.rst:22
msgid ""
"The module uses the same names and symbols as defined by the UnicodeData "
"File Format 5.2.0 (see http://www.unicode.org/reports/tr44/tr44-4.html). It "
"defines the following functions:"
msgstr ""

#: ../Doc/library/unicodedata.rst:29
msgid ""
"Look up character by name.  If a character with the given name is found, "
"return the corresponding Unicode character.  If not found, :exc:`KeyError` "
"is raised."
msgstr ""

#: ../Doc/library/unicodedata.rst:35
msgid ""
"Returns the name assigned to the Unicode character *unichr* as a string. If "
"no name is defined, *default* is returned, or, if not given, :exc:"
"`ValueError` is raised."
msgstr ""

#: ../Doc/library/unicodedata.rst:42
msgid ""
"Returns the decimal value assigned to the Unicode character *unichr* as "
"integer. If no such value is defined, *default* is returned, or, if not "
"given, :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/unicodedata.rst:49
msgid ""
"Returns the digit value assigned to the Unicode character *unichr* as "
"integer. If no such value is defined, *default* is returned, or, if not "
"given, :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/unicodedata.rst:56
msgid ""
"Returns the numeric value assigned to the Unicode character *unichr* as "
"float. If no such value is defined, *default* is returned, or, if not "
"given, :exc:`ValueError` is raised."
msgstr ""

#: ../Doc/library/unicodedata.rst:63
msgid ""
"Returns the general category assigned to the Unicode character *unichr* as "
"string."
msgstr ""

#: ../Doc/library/unicodedata.rst:69
msgid ""
"Returns the bidirectional class assigned to the Unicode character *unichr* "
"as string. If no such value is defined, an empty string is returned."
msgstr ""

#: ../Doc/library/unicodedata.rst:75
msgid ""
"Returns the canonical combining class assigned to the Unicode character "
"*unichr* as integer. Returns ``0`` if no combining class is defined."
msgstr ""

#: ../Doc/library/unicodedata.rst:81
msgid ""
"Returns the east asian width assigned to the Unicode character *unichr* as "
"string."
msgstr ""

#: ../Doc/library/unicodedata.rst:89
msgid ""
"Returns the mirrored property assigned to the Unicode character *unichr* as "
"integer. Returns ``1`` if the character has been identified as a \"mirrored"
"\" character in bidirectional text, ``0`` otherwise."
msgstr ""

#: ../Doc/library/unicodedata.rst:96
msgid ""
"Returns the character decomposition mapping assigned to the Unicode "
"character *unichr* as string. An empty string is returned in case no such "
"mapping is defined."
msgstr ""

#: ../Doc/library/unicodedata.rst:103
msgid ""
"Return the normal form *form* for the Unicode string *unistr*. Valid values "
"for *form* are 'NFC', 'NFKC', 'NFD', and 'NFKD'."
msgstr ""

#: ../Doc/library/unicodedata.rst:106
msgid ""
"The Unicode standard defines various normalization forms of a Unicode "
"string, based on the definition of canonical equivalence and compatibility "
"equivalence. In Unicode, several characters can be expressed in various way. "
"For example, the character U+00C7 (LATIN CAPITAL LETTER C WITH CEDILLA) can "
"also be expressed as the sequence U+0043 (LATIN CAPITAL LETTER C) U+0327 "
"(COMBINING CEDILLA)."
msgstr ""

#: ../Doc/library/unicodedata.rst:112
msgid ""
"For each character, there are two normal forms: normal form C and normal "
"form D. Normal form D (NFD) is also known as canonical decomposition, and "
"translates each character into its decomposed form. Normal form C (NFC) "
"first applies a canonical decomposition, then composes pre-combined "
"characters again."
msgstr ""

#: ../Doc/library/unicodedata.rst:117
msgid ""
"In addition to these two forms, there are two additional normal forms based "
"on compatibility equivalence. In Unicode, certain characters are supported "
"which normally would be unified with other characters. For example, U+2160 "
"(ROMAN NUMERAL ONE) is really the same thing as U+0049 (LATIN CAPITAL LETTER "
"I). However, it is supported in Unicode for compatibility with existing "
"character sets (e.g. gb2312)."
msgstr ""

#: ../Doc/library/unicodedata.rst:124
msgid ""
"The normal form KD (NFKD) will apply the compatibility decomposition, i.e. "
"replace all compatibility characters with their equivalents. The normal form "
"KC (NFKC) first applies the compatibility decomposition, followed by the "
"canonical composition."
msgstr ""

#: ../Doc/library/unicodedata.rst:129
msgid ""
"Even if two unicode strings are normalized and look the same to a human "
"reader, if one has combining characters and the other doesn't, they may not "
"compare equal."
msgstr ""

#: ../Doc/library/unicodedata.rst:135
msgid "In addition, the module exposes the following constant:"
msgstr ""

#: ../Doc/library/unicodedata.rst:140
msgid "The version of the Unicode database used in this module."
msgstr ""

#: ../Doc/library/unicodedata.rst:147
msgid ""
"This is an object that has the same methods as the entire module, but uses "
"the Unicode database version 3.2 instead, for applications that require this "
"specific version of the Unicode database (such as IDNA)."
msgstr ""

#: ../Doc/library/unicodedata.rst:153
msgid "Examples:"
msgstr "Exemples : ::"
