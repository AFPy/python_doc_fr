# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/aetools.rst:3
msgid ":mod:`aetools` --- OSA client support"
msgstr ""

#: ../Doc/library/aetools.rst:12
msgid ""
"The :mod:`aetools` module contains the basic functionality on which Python "
"AppleScript client support is built. It also imports and re-exports the core "
"functionality of the :mod:`aetypes` and :mod:`aepack` modules. The stub "
"packages generated by :mod:`gensuitemodule` import the relevant portions of :"
"mod:`aetools`, so usually you do not need to import it yourself. The "
"exception to this is when you cannot use a generated suite package and need "
"lower-level access to scripting."
msgstr ""

#: ../Doc/library/aetools.rst:20
msgid ""
"The :mod:`aetools` module itself uses the AppleEvent support provided by "
"the :mod:`Carbon.AE` module. This has one drawback: you need access to the "
"window manager, see section :ref:`osx-gui-scripts` for details. This "
"restriction may be lifted in future releases."
msgstr ""

#: ../Doc/library/aetools.rst:27
msgid "This module has been removed in Python 3.x."
msgstr ""

#: ../Doc/library/aetools.rst:30
msgid "The :mod:`aetools` module defines the following functions:"
msgstr ""

#: ../Doc/library/aetools.rst:35
msgid ""
"Stores parameters and attributes in a pre-created ``Carbon.AE.AEDesc`` "
"object. ``parameters`` and ``attributes`` are  dictionaries mapping 4-"
"character OSA parameter keys to Python objects. The objects are packed using "
"``aepack.pack()``."
msgstr ""

#: ../Doc/library/aetools.rst:43
msgid ""
"Recursively unpacks a ``Carbon.AE.AEDesc`` event to Python objects. The "
"function returns the parameter dictionary and the attribute dictionary. The "
"``formodulename`` argument is used by generated stub packages to control "
"where AppleScript classes are looked up."
msgstr ""

#: ../Doc/library/aetools.rst:51
msgid ""
"Converts a Python keyword argument dictionary ``arguments`` to the format "
"required by ``packevent`` by replacing the keys, which are Python "
"identifiers, by the four-character OSA keys according to the mapping "
"specified in ``keydict``. Used by the generated suite packages."
msgstr ""

#: ../Doc/library/aetools.rst:59
msgid ""
"If the ``arguments`` dictionary contains an entry for ``key`` convert the "
"value for that entry according to dictionary ``edict``. This converts human-"
"readable Python enumeration names to the OSA 4-character codes. Used by the "
"generated suite packages."
msgstr ""

#: ../Doc/library/aetools.rst:64
msgid "The :mod:`aetools` module defines the following class:"
msgstr ""

#: ../Doc/library/aetools.rst:69
msgid ""
"Base class for the proxy used to talk to an application. ``signature`` "
"overrides the class attribute ``_signature`` (which is usually set by "
"subclasses) and is the 4-char creator code defining the application to talk "
"to. ``start`` can be set to true to enable running the application on class "
"instantiation. ``timeout`` can be specified to change the default timeout "
"used while waiting for an AppleEvent reply."
msgstr ""

#: ../Doc/library/aetools.rst:79
msgid ""
"Test whether the application is running, and attempt to start it if not."
msgstr ""

#: ../Doc/library/aetools.rst:84
msgid ""
"Create the AppleEvent ``Carbon.AE.AEDesc`` for the verb with the OSA "
"designation ``code, subcode`` (which are the usual 4-character strings), "
"pack the ``parameters`` and ``attributes`` into it, send it to the target "
"application, wait for the reply, unpack the reply with ``unpackevent`` and "
"return the reply appleevent, the unpacked return values as a dictionary and "
"the return attributes."
msgstr ""
