# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/gensuitemodule.rst:3
msgid ":mod:`gensuitemodule` --- Generate OSA stub packages"
msgstr ""

#: ../Doc/library/gensuitemodule.rst:11
msgid ""
"The :mod:`gensuitemodule` module creates a Python package implementing stub "
"code for the AppleScript suites that are implemented by a specific "
"application, according to its AppleScript dictionary."
msgstr ""

#: ../Doc/library/gensuitemodule.rst:15
msgid ""
"It is usually invoked by the user through the :program:`PythonIDE`, but it "
"can also be run as a script from the command line (pass :option:`--help` for "
"help on the options) or imported from Python code. For an example of its use "
"see :file:`Mac/scripts/genallsuites.py` in a source distribution, which "
"generates the stub packages that are included in the standard library."
msgstr ""

#: ../Doc/library/gensuitemodule.rst:21
msgid "It defines the following public functions:"
msgstr ""

#: ../Doc/library/gensuitemodule.rst:26
msgid ""
"Returns true if ``application``, which should be passed as a pathname, "
"appears to be scriptable. Take the return value with a grain of salt: :"
"program:`Internet Explorer` appears not to be scriptable but definitely is."
msgstr ""

#: ../Doc/library/gensuitemodule.rst:33
msgid ""
"Create a stub package for ``application``, which should be passed as a full "
"pathname. For a :file:`.app` bundle this is the pathname to the bundle, not "
"to the executable inside the bundle; for an unbundled CFM application you "
"pass the filename of the application binary."
msgstr ""

#: ../Doc/library/gensuitemodule.rst:38
msgid ""
"This function asks the application for its OSA terminology resources, "
"decodes these resources and uses the resultant data to create the Python "
"code for the package implementing the client stubs."
msgstr ""

#: ../Doc/library/gensuitemodule.rst:42
msgid ""
"``output`` is the pathname where the resulting package is stored, if not "
"specified a standard \"save file as\" dialog is presented to the user. "
"``basepkgname`` is the base package on which this package will build, and "
"defaults to :mod:`StdSuites`. Only when generating :mod:`StdSuites` itself "
"do you need to specify this. ``edit_modnames`` is a dictionary that can be "
"used to change modulenames that are too ugly after name mangling. "
"``creator_signature`` can be used to override the 4-char creator code, which "
"is normally obtained from the :file:`PkgInfo` file in the package or from "
"the CFM file creator signature. When ``dump`` is given it should refer to a "
"file object, and ``processfile`` will stop after decoding the resources and "
"dump the Python representation of the terminology resources to this file. "
"``verbose`` should also be a file object, and specifying it will cause "
"``processfile`` to tell you what it is doing."
msgstr ""

#: ../Doc/library/gensuitemodule.rst:58
msgid ""
"This function does the same as ``processfile``, except that it uses a "
"different method to get the terminology resources. It opens ``application`` "
"as a resource file and reads all ``\"aete\"`` and ``\"aeut\"`` resources "
"from this file."
msgstr ""
