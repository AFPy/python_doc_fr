# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/new.rst:2
msgid ":mod:`new` --- Creation of runtime internal objects"
msgstr ""

#: ../Doc/library/new.rst:8
msgid ""
"The :mod:`new` module has been removed in Python 3.  Use the :mod:`types` "
"module's classes instead."
msgstr ""

#: ../Doc/library/new.rst:15
msgid ""
"The :mod:`new` module allows an interface to the interpreter object creation "
"functions. This is for use primarily in marshal-type functions, when a new "
"object needs to be created \"magically\" and not by using the regular "
"creation functions. This module provides a low-level interface to the "
"interpreter, so care must be exercised when using this module. It is "
"possible to supply non-sensical arguments which crash the interpreter when "
"the object is used."
msgstr ""

#: ../Doc/library/new.rst:22
msgid "The :mod:`new` module defines the following functions:"
msgstr ""

#: ../Doc/library/new.rst:27
msgid ""
"This function creates an instance of *class* with dictionary *dict* without "
"calling the :meth:`__init__` constructor.  If *dict* is omitted or ``None``, "
"a new, empty dictionary is created for the new instance.  Note that there "
"are no guarantees that the object will be in a consistent state."
msgstr ""

#: ../Doc/library/new.rst:35
msgid ""
"This function will return a method object, bound to *instance*, or unbound "
"if *instance* is ``None``.  *function* must be callable."
msgstr ""

#: ../Doc/library/new.rst:41
msgid ""
"Returns a (Python) function with the given code and globals. If *name* is "
"given, it must be a string or ``None``.  If it is a string, the function "
"will have the given name, otherwise the function name will be taken from "
"``code.co_name``.  If *argdefs* is given, it must be a tuple and will be "
"used to determine the default values of parameters.  If *closure* is given, "
"it must be ``None`` or a tuple of cell objects containing objects to bind to "
"the names in ``code.co_freevars``."
msgstr ""

#: ../Doc/library/new.rst:51
msgid "This function is an interface to the :c:func:`PyCode_New` C function."
msgstr ""

#: ../Doc/library/new.rst:58
msgid ""
"This function returns a new module object with name *name*. *name* must be a "
"string. The optional *doc* argument can have any type."
msgstr ""

#: ../Doc/library/new.rst:64
msgid ""
"This function returns a new class object, with name *name*, derived from "
"*baseclasses* (which should be a tuple of classes) and with namespace *dict*."
msgstr ""
