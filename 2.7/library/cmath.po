# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr "Fonctions mathématiques pour nombres complexes --- :mod:`cmath`"

#: ../Doc/library/cmath.rst:8
msgid ""
"This module is always available.  It provides access to mathematical "
"functions for complex numbers.  The functions in this module accept "
"integers, floating-point numbers or complex numbers as arguments. They will "
"also accept any Python object that has either a :meth:`__complex__` or a :"
"meth:`__float__` method: these methods are used to convert the object to a "
"complex or floating-point number, respectively, and the function is then "
"applied to the result of the conversion."
msgstr ""
"Ce module est toujours disponible. Il fournit l'accès aux fonctions "
"mathématiques pour les nombres complexes.Les fonctions de ce module "
"acceptent les entiers, les nombres flottants ou les nombres complexes comme "
"arguments. Elles accepteront également tout objet Python ayant une méthode :"
"meth:`__complex__` ou :meth:`__float__` : ces méthodes sont utilisées pour "
"convertir l'objet en un nombre complexe ou respectivement un nombre "
"flottant, et la fonction est ensuite appliquée sur le résultat de la "
"conversion."

#: ../Doc/library/cmath.rst:18
msgid ""
"On platforms with hardware and system-level support for signed zeros, "
"functions involving branch cuts are continuous on *both* sides of the branch "
"cut: the sign of the zero distinguishes one side of the branch cut from the "
"other.  On platforms that do not support signed zeros the continuity is as "
"specified below."
msgstr ""
"Sur les plate-formes  avec un support système et matériel des zéros signés, "
"les fonctions incluant une coupure complexe sont continues *de chaque* côté "
"de la coupure : le signe du zéro distingue les deux extrémités de la "
"coupure. Sur les plate-formes ne supportant pas les zéros signés, la "
"continuité est spécifiée en-dessous."

#: ../Doc/library/cmath.rst:26
msgid "Conversions to and from polar coordinates"
msgstr "Conversion vers et à partir de coordonnées polaires"

#: ../Doc/library/cmath.rst:28
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""
"Un nombre complexe Python ``z`` est stocké de manière interne en coordonnées "
"*cartésiennes*. Il est entièrement défini par sa *partie réelle* ``z.real`` "
"et sa *partie complexe* ``z.imag``. En d'autres termes : ::"

#: ../Doc/library/cmath.rst:35
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"Les *coordonnées polaires* donnent une manière alternative de représenter un "
"nombre complexe. En coordonnées polaires, un nombre complexe *z* est défini "
"par son module *r* et par son argument (*angle de phase*) *phi*. Le module "
"*r* est la distance entre *z* et l'origine, alors que l'argument *phi* est "
"l'angle (dans le sens anti-horlogique, ou trigonométrique), mesuré en "
"radians, à partir de l'axe X positif, et vers le segment de droite joignant "
"*z* à l'origine."

#: ../Doc/library/cmath.rst:42
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"Les fonctions suivantes peuvent être utilisées pour convertir à partir des "
"coordonnées rectangulaires natives vers les coordonnées polaires, et vice-"
"versa."

#: ../Doc/library/cmath.rst:47
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float.  "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-π, π], and the branch cut for this operation lies along "
"the negative real axis, continuous from above.  On systems with support for "
"signed zeros (which includes most systems in current use), this means that "
"the sign of the result is the same as the sign of ``x.imag``, even when ``x."
"imag`` is zero::"
msgstr ""
"Retourne l'argument de *x*, dans un nombre flottant. ``phase(x)`` est "
"équivalent à ``math.atan2(x.imag, x.real)``. Le résultat se situe dans "
"l'intervalle [-π, +π], et la coupure par cette opération se situe sur l'axe "
"X négatif, continue par au-dessus. Sur les systèmes supportant les zéros "
"signés (ce qui inclut la plupart des systèmes utilisés actuellement), cela "
"signifie que le signe du résultat est le même que ``x.imag`` même quand ``x."
"imag`` vaut zéro : ::"

#: ../Doc/library/cmath.rst:66
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""
"Le module (valeur absolue) d'un nombre complexe *x* peut être calculé en "
"utilisant la primitive :func:`abs`. Il n'y a pas de fonction spéciale du "
"module :mod:`cmath` pour cette opération."

#: ../Doc/library/cmath.rst:73
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""
"Retourne la représentation de *x* en coordonnées polaires. Retourne une "
"paire ``(r, phi)`` où *r* est le module de *x* et phi est l'argument de *x*. "
"``polar(x)`` est équivalent à ``(abs(x), phase(x))``."

#: ../Doc/library/cmath.rst:83
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""
"Retourne le nombre complexe *x* dont les coordonnées polaires sont *r* et "
"*phi*. Équivalent à ``r * (math.cos(phi) + math.sin(phi)*1j)``."

#: ../Doc/library/cmath.rst:90
msgid "Power and logarithmic functions"
msgstr "Fonctions logarithme et exponentielle"

#: ../Doc/library/cmath.rst:94
msgid "Return the exponential value ``e**x``."
msgstr "Retourne la valeur exponentielle ``e**x``."

#: ../Doc/library/cmath.rst:99
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞, continuous from above."
msgstr ""
"Retourne le logarithme de *x* dans la *base* précisée. Si la *base* n'est "
"pas spécifiée, le logarithme *naturel* (népérien) de *x* est retourné. Il y "
"a une coupure, partant de 0 sur l'axe réel négatif et vers -∞, continue par "
"au-dessus."

#: ../Doc/library/cmath.rst:103
msgid "*base* argument added."
msgstr ""

#: ../Doc/library/cmath.rst:109
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr ""
"Retourne le logarithme en base 10 de *x*. Elle a la même coupure que :func:"
"`log`."

#: ../Doc/library/cmath.rst:115
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr ""
"Retourne la racine carrée de *x*. Elle a la même coupure que :func:`log`."

#: ../Doc/library/cmath.rst:119
msgid "Trigonometric functions"
msgstr "Fonctions trigonométriques"

#: ../Doc/library/cmath.rst:123
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞, continuous from below. The other extends "
"left from -1 along the real axis to -∞, continuous from above."
msgstr ""
"Retourne l'arc cosinus de *x*. Il y a deux coupures : une allant de 1 sur "
"l'axe réel vers ∞, continue par en-dessous ; l'autre allant de -1 sur l'axe "
"réel vers -∞, continue par au-dessus."

#: ../Doc/library/cmath.rst:130
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr ""
"Retourne l'arc sinus de *x*. Elle a les mêmes coupures que :func:`acos`."

#: ../Doc/library/cmath.rst:135
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``, continuous from the right. The "
"other extends from ``-1j`` along the imaginary axis to ``-∞j``, continuous "
"from the left."
msgstr ""
"Retourne la tangente de *x*. l y a deux coupures : une allant de ``1j`` sur "
"l'axe imaginaire vers ``∞j``, continue par la droite ; l'autre allant de "
"``-1j`` sur l'axe imaginaire vers ``-∞j``, continue par la gauche."

#: ../Doc/library/cmath.rst:140
msgid "direction of continuity of upper cut reversed"
msgstr ""

#: ../Doc/library/cmath.rst:146
msgid "Return the cosine of *x*."
msgstr "Retourne le cosinus de *x*."

#: ../Doc/library/cmath.rst:151
msgid "Return the sine of *x*."
msgstr "Retourne le sinus de *x*."

#: ../Doc/library/cmath.rst:156
msgid "Return the tangent of *x*."
msgstr "Retourne la tangente de *x*."

#: ../Doc/library/cmath.rst:160
msgid "Hyperbolic functions"
msgstr "Fonctions hyperboliques"

#: ../Doc/library/cmath.rst:164
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞, continuous from above."
msgstr ""
"Retourne l'arc cosinus hyperbolique de *x*. Il y a une coupure, allant de 1 "
"sur l'axe réel vers -∞, continue par au-dessus."

#: ../Doc/library/cmath.rst:170
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``, continuous from the "
"right.  The other extends from ``-1j`` along the imaginary axis to ``-∞j``, "
"continuous from the left."
msgstr ""
"Retourne l'arc sinus hyperbolique de *x*. Il y a deux coupures : une allant "
"de ``1j`` sur l'axe imaginaire vers ``∞j``, continue par la droite ; l'autre "
"allant de ``-1j`` sur l'axe imaginaire vers ``∞j``, continue par la gauche."

#: ../Doc/library/cmath.rst:175
msgid "branch cuts moved to match those recommended by the C99 standard"
msgstr ""

#: ../Doc/library/cmath.rst:181
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``, continuous from below. The "
"other extends from ``-1`` along the real axis to ``-∞``, continuous from "
"above."
msgstr ""
"Retourne l'arc tangente hyperbolique de *x*. Il y a deux coupures : une "
"allant de ``1`` sur l'axe réel allant vers ``∞``, continue par en-dessous ; "
"l'autre allant de ``-1`` sur l'axe réel vers ``-∞``, continue par au-dessus."

#: ../Doc/library/cmath.rst:186
msgid "direction of continuity of right cut reversed"
msgstr ""

#: ../Doc/library/cmath.rst:192
msgid "Return the hyperbolic cosine of *x*."
msgstr "Retourne le cosinus hyperbolique de *x*."

#: ../Doc/library/cmath.rst:197
msgid "Return the hyperbolic sine of *x*."
msgstr "Retourne le sinus hyperbolique de *x*."

#: ../Doc/library/cmath.rst:202
msgid "Return the hyperbolic tangent of *x*."
msgstr "Retourne la tangente hyperbolique de *x*."

#: ../Doc/library/cmath.rst:206
msgid "Classification functions"
msgstr "Fonctions de classifications"

#: ../Doc/library/cmath.rst:210
msgid ""
"Return ``True`` if the real or the imaginary part of x is positive or "
"negative infinity."
msgstr ""

#: ../Doc/library/cmath.rst:218
msgid ""
"Return ``True`` if the real or imaginary part of x is not a number (NaN)."
msgstr ""

#: ../Doc/library/cmath.rst:224
msgid "Constants"
msgstr ""

#: ../Doc/library/cmath.rst:229
msgid "The mathematical constant *π*, as a float."
msgstr "La constante mathématique *π*, en tant que flottant."

#: ../Doc/library/cmath.rst:234
msgid "The mathematical constant *e*, as a float."
msgstr "La constante mathématique *e*, en tant que flottant."

#: ../Doc/library/cmath.rst:238
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
"Notez que la sélection de fonctions est similaire - mais pas identique  - à "
"celles du module :mod:`math`. La raison d'avoir deux modules est que "
"certains utilisateurs ne sont pas intéressés par les nombres complexes, et "
"peut-être ne savent même pas ce qu'ils sont. Ils préféreraient alors que "
"``math.sqrt(-1)`` lève une exception au lieu de retourner un nombre "
"complexe. Également, notez que les fonctions définies dans :mod:`cmath` "
"retournent toujours un nombre complexe, même si le résultat peut être "
"exprimé à l'aide d'un nombre réel (en quel cas la partie imaginaire du "
"complexe vaut zéro)."

#: ../Doc/library/cmath.rst:246
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"Une note sur les *coupures* : ce sont des courbes sur lesquelles la fonction "
"n'est pas continue. Ce sont des caractéristiques nécessaires de beaucoup de "
"fonctions complexes. Il est supposé que si vous avez besoin d'utiliser des "
"fonctions complexes, vous comprendrez ce que sont les coupures. Consultez "
"n'importe quel livre (pas trop élémentaire) sur les variables complexes pour "
"plus d'informations. Pour des informations sur les choix des coupures à des "
"fins numériques, voici une bonne référence :"

#: ../Doc/library/cmath.rst:256
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165-211."
msgstr ""
