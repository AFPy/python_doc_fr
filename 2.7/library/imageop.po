# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/imageop.rst:3
msgid ":mod:`imageop` --- Manipulate raw image data"
msgstr ""

#: ../Doc/library/imageop.rst:9
msgid "The :mod:`imageop` module has been removed in Python 3."
msgstr ""

#: ../Doc/library/imageop.rst:12
msgid ""
"The :mod:`imageop` module contains some useful operations on images. It "
"operates on images consisting of 8 or 32 bit pixels stored in Python "
"strings.  This is the same format as used by :func:`gl.lrectwrite` and the :"
"mod:`imgfile` module."
msgstr ""

#: ../Doc/library/imageop.rst:16
msgid "The module defines the following variables and functions:"
msgstr ""

#: ../Doc/library/imageop.rst:21
msgid ""
"This exception is raised on all errors, such as unknown number of bits per "
"pixel, etc."
msgstr ""

#: ../Doc/library/imageop.rst:27
msgid ""
"Return the selected part of *image*, which should be *width* by *height* in "
"size and consist of pixels of *psize* bytes. *x0*, *y0*, *x1* and *y1* are "
"like the :func:`gl.lrectread` parameters, i.e. the boundary is included in "
"the new image. The new boundaries need not be inside the picture.  Pixels "
"that fall outside the old image will have their value set to zero.  If *x0* "
"is bigger than *x1* the new image is mirrored.  The same holds for the y "
"coordinates."
msgstr ""

#: ../Doc/library/imageop.rst:37
msgid ""
"Return *image* scaled to size *newwidth* by *newheight*. No interpolation is "
"done, scaling is done by simple-minded pixel duplication or removal.  "
"Therefore, computer-generated images or dithered images will not look nice "
"after scaling."
msgstr ""

#: ../Doc/library/imageop.rst:44
msgid ""
"Run a vertical low-pass filter over an image.  It does so by computing each "
"destination pixel as the average of two vertically-aligned source pixels.  "
"The main use of this routine is to forestall excessive flicker if the image "
"is displayed on a video device that uses interlacing, hence the name."
msgstr ""

#: ../Doc/library/imageop.rst:52
msgid ""
"Convert an 8-bit deep greyscale image to a 1-bit deep image by thresholding "
"all the pixels.  The resulting image is tightly packed and is probably only "
"useful as an argument to :func:`mono2grey`."
msgstr ""

#: ../Doc/library/imageop.rst:59
msgid ""
"Convert an 8-bit greyscale image to a 1-bit monochrome image using a (simple-"
"minded) dithering algorithm."
msgstr ""

#: ../Doc/library/imageop.rst:65
msgid ""
"Convert a 1-bit monochrome image to an 8 bit greyscale or color image. All "
"pixels that are zero-valued on input get value *p0* on output and all one-"
"value input pixels get value *p1* on output.  To convert a monochrome black-"
"and-white image to greyscale pass the values ``0`` and ``255`` respectively."
msgstr ""

#: ../Doc/library/imageop.rst:73
msgid ""
"Convert an 8-bit greyscale image to a 4-bit greyscale image without "
"dithering."
msgstr ""

#: ../Doc/library/imageop.rst:78
msgid ""
"Convert an 8-bit greyscale image to a 2-bit greyscale image without "
"dithering."
msgstr ""

#: ../Doc/library/imageop.rst:83
msgid ""
"Convert an 8-bit greyscale image to a 2-bit greyscale image with dithering.  "
"As for :func:`dither2mono`, the dithering algorithm is currently very simple."
msgstr ""

#: ../Doc/library/imageop.rst:89
msgid "Convert a 4-bit greyscale image to an 8-bit greyscale image."
msgstr ""

#: ../Doc/library/imageop.rst:94
msgid "Convert a 2-bit greyscale image to an 8-bit greyscale image."
msgstr ""

#: ../Doc/library/imageop.rst:99
msgid ""
"If set to 0, the functions in this module use a non-backward compatible way "
"of representing multi-byte pixels on little-endian systems.  The SGI for "
"which this module was originally written is a big-endian system, so setting "
"this variable will have no effect. However, the code wasn't originally "
"intended to run on anything else, so it made assumptions about byte order "
"which are not universal.  Setting this variable to 0 will cause the byte "
"order to be reversed on little-endian systems, so that it then is the same "
"as on big-endian systems."
msgstr ""
