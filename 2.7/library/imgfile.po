# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/imgfile.rst:3
msgid ":mod:`imgfile` --- Support for SGI imglib files"
msgstr ""

#: ../Doc/library/imgfile.rst:10
msgid "The :mod:`imgfile` module has been removed in Python 3."
msgstr ""

#: ../Doc/library/imgfile.rst:15
msgid ""
"The :mod:`imgfile` module allows Python programs to access SGI imglib image "
"files (also known as :file:`.rgb` files).  The module is far from complete, "
"but is provided anyway since the functionality that there is enough in some "
"cases. Currently, colormap files are not supported."
msgstr ""

#: ../Doc/library/imgfile.rst:20
msgid "The module defines the following variables and functions:"
msgstr ""

#: ../Doc/library/imgfile.rst:25
msgid ""
"This exception is raised on all errors, such as unsupported file type, etc."
msgstr ""

#: ../Doc/library/imgfile.rst:30
msgid ""
"This function returns a tuple ``(x, y, z)`` where *x* and *y* are the size "
"of the image in pixels and *z* is the number of bytes per pixel. Only 3 byte "
"RGB pixels and 1 byte greyscale pixels are currently supported."
msgstr ""

#: ../Doc/library/imgfile.rst:37
msgid ""
"This function reads and decodes the image on the specified file, and returns "
"it as a Python string. The string has either 1 byte greyscale pixels or 4 "
"byte RGBA pixels. The bottom left pixel is the first in the string. This "
"format is suitable to pass to :func:`gl.lrectwrite`, for instance."
msgstr ""

#: ../Doc/library/imgfile.rst:45
msgid ""
"This function is identical to read but it returns an image that is scaled to "
"the given *x* and *y* sizes. If the *filter* and *blur* parameters are "
"omitted scaling is done by simply dropping or duplicating pixels, so the "
"result will be less than perfect, especially for computer-generated images."
msgstr ""

#: ../Doc/library/imgfile.rst:50
msgid ""
"Alternatively, you can specify a filter to use to smooth the image after "
"scaling. The filter forms supported are ``'impulse'``, ``'box'``, "
"``'triangle'``, ``'quadratic'`` and ``'gaussian'``. If a filter is specified "
"*blur* is an optional parameter specifying the blurriness of the filter. It "
"defaults to ``1.0``."
msgstr ""

#: ../Doc/library/imgfile.rst:56
msgid ""
":func:`readscaled` makes no attempt to keep the aspect ratio correct, so "
"that is the users' responsibility."
msgstr ""

#: ../Doc/library/imgfile.rst:62
msgid ""
"This function sets a global flag which defines whether the scan lines of the "
"image are read or written from bottom to top (flag is zero, compatible with "
"SGI GL) or from top to bottom(flag is one, compatible with X).  The default "
"is zero."
msgstr ""

#: ../Doc/library/imgfile.rst:69
msgid ""
"This function writes the RGB or greyscale data in *data* to image file "
"*file*. *x* and *y* give the size of the image, *z* is 1 for 1 byte "
"greyscale images or 3 for RGB images (which are stored as 4 byte values of "
"which only the lower three bytes are used). These are the formats returned "
"by :func:`gl.lrectread`."
msgstr ""
