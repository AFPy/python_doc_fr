# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/bz2.rst:3
msgid ":mod:`bz2` --- Compression compatible with :program:`bzip2`"
msgstr ""

#: ../Doc/library/bz2.rst:13
msgid ""
"This module provides a comprehensive interface for the bz2 compression "
"library. It implements a complete file interface, one-shot (de)compression "
"functions, and types for sequential (de)compression."
msgstr ""

#: ../Doc/library/bz2.rst:17
msgid "Here is a summary of the features offered by the bz2 module:"
msgstr ""

#: ../Doc/library/bz2.rst:19
msgid ""
":class:`BZ2File` class implements a complete file interface, including :meth:"
"`~BZ2File.readline`, :meth:`~BZ2File.readlines`, :meth:`~BZ2File."
"writelines`, :meth:`~BZ2File.seek`, etc;"
msgstr ""

#: ../Doc/library/bz2.rst:23
msgid ""
":class:`BZ2File` class implements emulated :meth:`~BZ2File.seek` support;"
msgstr ""

#: ../Doc/library/bz2.rst:25
msgid ":class:`BZ2File` class implements universal newline support;"
msgstr ""

#: ../Doc/library/bz2.rst:27
msgid ""
":class:`BZ2File` class offers an optimized line iteration using the "
"readahead algorithm borrowed from file objects;"
msgstr ""

#: ../Doc/library/bz2.rst:30
msgid ""
"Sequential (de)compression supported by :class:`BZ2Compressor` and :class:"
"`BZ2Decompressor` classes;"
msgstr ""

#: ../Doc/library/bz2.rst:33
msgid ""
"One-shot (de)compression supported by :func:`compress` and :func:"
"`decompress` functions;"
msgstr ""

#: ../Doc/library/bz2.rst:36
msgid "Thread safety uses individual locking mechanism."
msgstr ""

#: ../Doc/library/bz2.rst:40
msgid "(De)compression of files"
msgstr "(Dé)compression de fichiers"

#: ../Doc/library/bz2.rst:42
msgid "Handling of compressed files is offered by the :class:`BZ2File` class."
msgstr ""

#: ../Doc/library/bz2.rst:50
msgid ""
"Open a bz2 file. Mode can be either ``'r'`` or ``'w'``, for reading "
"(default) or writing. When opened for writing, the file will be created if "
"it doesn't exist, and truncated otherwise. If *buffering* is given, ``0`` "
"means unbuffered, and larger numbers specify the buffer size; the default is "
"``0``. If *compresslevel* is given, it must be a number between ``1`` and "
"``9``; the default is ``9``. Add a ``'U'`` to mode to open the file for "
"input in :term:`universal newlines` mode. Any line ending in the input file "
"will be seen as a ``'\\n'`` in Python.  Also, a file so opened gains the "
"attribute :attr:`newlines`; the value for this attribute is one of ``None`` "
"(no newline read yet), ``'\\r'``, ``'\\n'``, ``'\\r\\n'`` or a tuple "
"containing all the newline types seen. Universal newlines are available only "
"when reading. Instances support iteration in the same way as normal :class:"
"`file` instances."
msgstr ""

#: ../Doc/library/bz2.rst:64
msgid ":class:`BZ2File` supports the :keyword:`with` statement."
msgstr ""

#: ../Doc/library/bz2.rst:66
msgid "Support for the :keyword:`with` statement was added."
msgstr ""

#: ../Doc/library/bz2.rst:72
msgid ""
"This class does not support input files containing multiple streams (such as "
"those produced by the :program:`pbzip2` tool). When reading such an input "
"file, only the first stream will be accessible. If you require support for "
"multi-stream files, consider using the third-party :mod:`bz2file` module "
"(available from `PyPI <https://pypi.python.org/pypi/bz2file>`_). This module "
"provides a backport of Python 3.3's :class:`BZ2File` class, which does "
"support multi-stream files."
msgstr ""

#: ../Doc/library/bz2.rst:84
msgid ""
"Close the file. Sets data attribute :attr:`closed` to true. A closed file "
"cannot be used for further I/O operations. :meth:`close` may be called more "
"than once without error."
msgstr ""

#: ../Doc/library/bz2.rst:91
msgid ""
"Read at most *size* uncompressed bytes, returned as a string. If the *size* "
"argument is negative or omitted, read until EOF is reached."
msgstr ""

#: ../Doc/library/bz2.rst:97
msgid ""
"Return the next line from the file, as a string, retaining newline. A non-"
"negative *size* argument limits the maximum number of bytes to return (an "
"incomplete line may be returned then). Return an empty string at EOF."
msgstr ""

#: ../Doc/library/bz2.rst:104
msgid ""
"Return a list of lines read. The optional *size* argument, if given, is an "
"approximate bound on the total number of bytes in the lines returned."
msgstr ""

#: ../Doc/library/bz2.rst:110
msgid ""
"For backward compatibility. :class:`BZ2File` objects now include the "
"performance optimizations previously implemented in the :mod:`xreadlines` "
"module."
msgstr ""

#: ../Doc/library/bz2.rst:114
msgid ""
"This exists only for compatibility with the method by this name on :class:"
"`file` objects, which is deprecated.  Use ``for line in file`` instead."
msgstr ""

#: ../Doc/library/bz2.rst:122
msgid ""
"Move to new file position. Argument *offset* is a byte count. Optional "
"argument *whence* defaults to ``os.SEEK_SET`` or ``0`` (offset from start of "
"file; offset should be ``>= 0``); other values are ``os.SEEK_CUR`` or ``1`` "
"(move relative to current position; offset can be positive or negative), and "
"``os.SEEK_END`` or ``2`` (move relative to end of file; offset is usually "
"negative, although many platforms allow seeking beyond the end of a file)."
msgstr ""

#: ../Doc/library/bz2.rst:130
msgid ""
"Note that seeking of bz2 files is emulated, and depending on the parameters "
"the operation may be extremely slow."
msgstr ""

#: ../Doc/library/bz2.rst:136
msgid "Return the current file position, an integer (may be a long integer)."
msgstr ""

#: ../Doc/library/bz2.rst:141
msgid ""
"Write string *data* to file. Note that due to buffering, :meth:`close` may "
"be needed before the file on disk reflects the data written."
msgstr ""

#: ../Doc/library/bz2.rst:147
msgid ""
"Write the sequence of strings to the file. Note that newlines are not added. "
"The sequence can be any iterable object producing strings. This is "
"equivalent to calling write() for each string."
msgstr ""

#: ../Doc/library/bz2.rst:153
msgid "Sequential (de)compression"
msgstr ""

#: ../Doc/library/bz2.rst:155
msgid ""
"Sequential compression and decompression is done using the classes :class:"
"`BZ2Compressor` and :class:`BZ2Decompressor`."
msgstr ""

#: ../Doc/library/bz2.rst:161
msgid ""
"Create a new compressor object. This object may be used to compress data "
"sequentially. If you want to compress data in one shot, use the :func:"
"`compress` function instead. The *compresslevel* parameter, if given, must "
"be a number between ``1`` and ``9``; the default is ``9``."
msgstr ""

#: ../Doc/library/bz2.rst:169
msgid ""
"Provide more data to the compressor object. It will return chunks of "
"compressed data whenever possible. When you've finished providing data to "
"compress, call the :meth:`flush` method to finish the compression process, "
"and return what is left in internal buffers."
msgstr ""

#: ../Doc/library/bz2.rst:177
msgid ""
"Finish the compression process and return what is left in internal buffers. "
"You must not use the compressor object after calling this method."
msgstr ""

#: ../Doc/library/bz2.rst:183
msgid ""
"Create a new decompressor object. This object may be used to decompress data "
"sequentially. If you want to decompress data in one shot, use the :func:"
"`decompress` function instead."
msgstr ""

#: ../Doc/library/bz2.rst:190
msgid ""
"Provide more data to the decompressor object. It will return chunks of "
"decompressed data whenever possible. If you try to decompress data after the "
"end of stream is found, :exc:`EOFError` will be raised. If any data was "
"found after the end of stream, it'll be ignored and saved in :attr:"
"`unused_data` attribute."
msgstr ""

#: ../Doc/library/bz2.rst:198
msgid "One-shot (de)compression"
msgstr "(Dé)compression en une fois"

#: ../Doc/library/bz2.rst:200
msgid ""
"One-shot compression and decompression is provided through the :func:"
"`compress` and :func:`decompress` functions."
msgstr ""

#: ../Doc/library/bz2.rst:206
msgid ""
"Compress *data* in one shot. If you want to compress data sequentially, use "
"an instance of :class:`BZ2Compressor` instead. The *compresslevel* "
"parameter, if given, must be a number between ``1`` and ``9``; the default "
"is ``9``."
msgstr ""

#: ../Doc/library/bz2.rst:213
msgid ""
"Decompress *data* in one shot. If you want to decompress data sequentially, "
"use an instance of :class:`BZ2Decompressor` instead."
msgstr ""
