# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/stringprep.rst:3
msgid ":mod:`stringprep` --- Internet String Preparation"
msgstr ""

#: ../Doc/library/stringprep.rst:13
msgid ""
"When identifying things (such as host names) in the internet, it is often "
"necessary to compare such identifications for \"equality\". Exactly how this "
"comparison is executed may depend on the application domain, e.g. whether it "
"should be case-insensitive or not. It may be also necessary to restrict the "
"possible identifications, to allow only identifications consisting of "
"\"printable\" characters."
msgstr ""

#: ../Doc/library/stringprep.rst:20
msgid ""
":rfc:`3454` defines a procedure for \"preparing\" Unicode strings in "
"internet protocols. Before passing strings onto the wire, they are processed "
"with the preparation procedure, after which they have a certain normalized "
"form. The RFC defines a set of tables, which can be combined into profiles. "
"Each profile must define which tables it uses, and what other optional parts "
"of the ``stringprep`` procedure are part of the profile. One example of a "
"``stringprep`` profile is ``nameprep``, which is used for internationalized "
"domain names."
msgstr ""

#: ../Doc/library/stringprep.rst:28
msgid ""
"The module :mod:`stringprep` only exposes the tables from RFC 3454. As these "
"tables would be very large to represent them as dictionaries or lists, the "
"module uses the Unicode character database internally. The module source "
"code itself was generated using the ``mkstringprep.py`` utility."
msgstr ""

#: ../Doc/library/stringprep.rst:33
msgid ""
"As a result, these tables are exposed as functions, not as data structures. "
"There are two kinds of tables in the RFC: sets and mappings. For a set, :mod:"
"`stringprep` provides the \"characteristic function\", i.e. a function that "
"returns true if the parameter is part of the set. For mappings, it provides "
"the mapping function: given the key, it returns the associated value. Below "
"is a list of all functions available in the module."
msgstr ""

#: ../Doc/library/stringprep.rst:43
msgid ""
"Determine whether *code* is in tableA.1 (Unassigned code points in Unicode "
"3.2)."
msgstr ""

#: ../Doc/library/stringprep.rst:48
msgid "Determine whether *code* is in tableB.1 (Commonly mapped to nothing)."
msgstr ""

#: ../Doc/library/stringprep.rst:53
msgid ""
"Return the mapped value for *code* according to tableB.2 (Mapping for case-"
"folding used with NFKC)."
msgstr ""

#: ../Doc/library/stringprep.rst:59
msgid ""
"Return the mapped value for *code* according to tableB.3 (Mapping for case-"
"folding used with no normalization)."
msgstr ""

#: ../Doc/library/stringprep.rst:65
msgid "Determine whether *code* is in tableC.1.1  (ASCII space characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:70
msgid ""
"Determine whether *code* is in tableC.1.2  (Non-ASCII space characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:75
msgid ""
"Determine whether *code* is in tableC.1  (Space characters, union of C.1.1 "
"and C.1.2)."
msgstr ""

#: ../Doc/library/stringprep.rst:81
msgid "Determine whether *code* is in tableC.2.1  (ASCII control characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:86
msgid ""
"Determine whether *code* is in tableC.2.2  (Non-ASCII control characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:91
msgid ""
"Determine whether *code* is in tableC.2  (Control characters, union of C.2.1 "
"and C.2.2)."
msgstr ""

#: ../Doc/library/stringprep.rst:97
msgid "Determine whether *code* is in tableC.3  (Private use)."
msgstr ""

#: ../Doc/library/stringprep.rst:102
msgid "Determine whether *code* is in tableC.4  (Non-character code points)."
msgstr ""

#: ../Doc/library/stringprep.rst:107
msgid "Determine whether *code* is in tableC.5  (Surrogate codes)."
msgstr ""

#: ../Doc/library/stringprep.rst:112
msgid ""
"Determine whether *code* is in tableC.6  (Inappropriate for plain text)."
msgstr ""

#: ../Doc/library/stringprep.rst:117
msgid ""
"Determine whether *code* is in tableC.7  (Inappropriate for canonical "
"representation)."
msgstr ""

#: ../Doc/library/stringprep.rst:123
msgid ""
"Determine whether *code* is in tableC.8  (Change display properties or are "
"deprecated)."
msgstr ""

#: ../Doc/library/stringprep.rst:129
msgid "Determine whether *code* is in tableC.9  (Tagging characters)."
msgstr ""

#: ../Doc/library/stringprep.rst:134
msgid ""
"Determine whether *code* is in tableD.1  (Characters with bidirectional "
"property \"R\" or \"AL\")."
msgstr ""

#: ../Doc/library/stringprep.rst:140
msgid ""
"Determine whether *code* is in tableD.2  (Characters with bidirectional "
"property \"L\")."
msgstr ""
