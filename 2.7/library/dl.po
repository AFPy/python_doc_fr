# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/dl.rst:3
msgid ":mod:`dl` --- Call C functions in shared objects"
msgstr ""

#: ../Doc/library/dl.rst:10
msgid ""
"The :mod:`dl` module has been removed in Python 3. Use the :mod:`ctypes` "
"module instead."
msgstr ""

#: ../Doc/library/dl.rst:16
msgid ""
"The :mod:`dl` module defines an interface to the :c:func:`dlopen` function, "
"which is the most common interface on Unix platforms for handling "
"dynamically linked libraries. It allows the program to call arbitrary "
"functions in such a library."
msgstr ""

#: ../Doc/library/dl.rst:22
msgid ""
"The :mod:`dl` module bypasses the Python type system and  error handling. If "
"used incorrectly it may cause segmentation faults, crashes or other "
"incorrect behaviour."
msgstr ""

#: ../Doc/library/dl.rst:28
msgid ""
"This module will not work unless ``sizeof(int) == sizeof(long) == "
"sizeof(char *)`` If this is not the case, :exc:`SystemError` will be raised "
"on import."
msgstr ""

#: ../Doc/library/dl.rst:31
msgid "The :mod:`dl` module defines the following function:"
msgstr ""

#: ../Doc/library/dl.rst:36
msgid ""
"Open a shared object file, and return a handle. Mode signifies late binding "
"(:const:`RTLD_LAZY`) or immediate binding (:const:`RTLD_NOW`). Default is :"
"const:`RTLD_LAZY`. Note that some systems do not support :const:`RTLD_NOW`."
msgstr ""

#: ../Doc/library/dl.rst:40
msgid "Return value is a :class:`dlobject`."
msgstr ""

#: ../Doc/library/dl.rst:42
msgid "The :mod:`dl` module defines the following constants:"
msgstr ""

#: ../Doc/library/dl.rst:47
msgid "Useful as an argument to :func:`.open`."
msgstr ""

#: ../Doc/library/dl.rst:52
msgid ""
"Useful as an argument to :func:`.open`.  Note that on systems which do not "
"support immediate binding, this constant will not appear in the module. For "
"maximum portability, use :func:`hasattr` to determine if the system supports "
"immediate binding."
msgstr ""

#: ../Doc/library/dl.rst:57
msgid "The :mod:`dl` module defines the following exception:"
msgstr ""

#: ../Doc/library/dl.rst:62
msgid ""
"Exception raised when an error has occurred inside the dynamic loading and "
"linking routines."
msgstr ""

#: ../Doc/library/dl.rst:65
msgid "Example::"
msgstr "ExemplesÂ ::"

#: ../Doc/library/dl.rst:72
msgid ""
"This example was tried on a Debian GNU/Linux system, and is a good example "
"of the fact that using this module is usually a bad alternative."
msgstr ""

#: ../Doc/library/dl.rst:79
msgid "Dl Objects"
msgstr ""

#: ../Doc/library/dl.rst:81
msgid ""
"Dl objects, as returned by :func:`.open` above, have the following methods:"
msgstr ""

#: ../Doc/library/dl.rst:86
msgid "Free all resources, except the memory."
msgstr ""

#: ../Doc/library/dl.rst:91
msgid ""
"Return the pointer for the function named *name*, as a number, if it exists "
"in the referenced shared object, otherwise ``None``. This is useful in code "
"like::"
msgstr ""

#: ../Doc/library/dl.rst:99
msgid ""
"(Note that this function will return a non-zero number, as zero is the "
"*NULL* pointer)"
msgstr ""

#: ../Doc/library/dl.rst:105
msgid ""
"Call the function named *name* in the referenced shared object. The "
"arguments must be either Python integers, which will be  passed as is, "
"Python strings, to which a pointer will be passed,  or ``None``, which will "
"be passed as *NULL*. Note that  strings should only be passed to functions "
"as :c:type:`const char\\*`, as Python will not like its string mutated."
msgstr ""

#: ../Doc/library/dl.rst:111
msgid ""
"There must be at most 10 arguments, and arguments not given will be treated "
"as ``None``. The function's return value must be a C :c:type:`long`, which "
"is a Python integer."
msgstr ""
