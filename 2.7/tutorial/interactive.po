# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/tutorial/interactive.rst:5
msgid "Interactive Input Editing and History Substitution"
msgstr "Édition interactive des entrées et substitution d'historique"

#: ../Doc/tutorial/interactive.rst:7
msgid ""
"Some versions of the Python interpreter support editing of the current input "
"line and history substitution, similar to facilities found in the Korn shell "
"and the GNU Bash shell.  This is implemented using the `GNU Readline`_ "
"library, which supports Emacs-style and vi-style editing.  This library has "
"its own documentation which I won't duplicate here; however, the basics are "
"easily explained.  The interactive editing and history described here are "
"optionally available in the Unix and Cygwin versions of the interpreter."
msgstr ""
"Certaines versions de l'interpréteur Python prennent en charge l'édition de "
"la ligne d'entrée courante et la substitution d'historique, similaires aux "
"facilités que l'on trouve dans le shell Korn et dans le shell GNU Bash. "
"C'est implémenté en utilisant la bibliothèque `GNU Readline`_, qui supporte "
"l'édition en style Emacs et en style Vi. La bibliothèque a sa propre "
"documentation qui ne va pas être dupliquée ici ; toutefois, les bases seront "
"expliquées rapidement. L'éditeur interactif et la gestion d'historique "
"décrits ici sont disponibles en option sous les versions Unix et Cygwin de "
"l'interpréteur."

#: ../Doc/tutorial/interactive.rst:15
msgid ""
"This chapter does *not* document the editing facilities of Mark Hammond's "
"PythonWin package or the Tk-based environment, IDLE, distributed with "
"Python. The command line history recall which operates within DOS boxes on "
"NT and some other DOS and Windows flavors  is yet another beast."
msgstr ""
"Ce chapitre *ne décrit pas* les possibilités d'édition du paquet PythonWin "
"de Mark Hammond ou de l'environnement basé sur Tk, IDLE, distribué avec "
"Python. Le rappel d'historique des lignes de commandes qui fonctionne dans "
"des fenêtres DOS sous NT ou d'autres variétés de Windows est encore une "
"autre histoire."

#: ../Doc/tutorial/interactive.rst:24
msgid "Line Editing"
msgstr "Édition de ligne"

#: ../Doc/tutorial/interactive.rst:26
msgid ""
"If supported, input line editing is active whenever the interpreter prints a "
"primary or secondary prompt.  The current line can be edited using the "
"conventional Emacs control characters.  The most important of these are: :"
"kbd:`C-A` (Control-A) moves the cursor to the beginning of the line, :kbd:`C-"
"E` to the end, :kbd:`C-B` moves it one position to the left, :kbd:`C-F` to "
"the right.  Backspace erases the character to the left of the cursor, :kbd:"
"`C-D` the character to its right. :kbd:`C-K` kills (erases) the rest of the "
"line to the right of the cursor, :kbd:`C-Y` yanks back the last killed "
"string. :kbd:`C-underscore` undoes the last change you made; it can be "
"repeated for cumulative effect."
msgstr ""
"Si elle est supportée, l'édition de la ligne d'entrée est active lorsque "
"l'interpréteur affiche une invite primaire ou secondaire. La ligne courante "
"peut être éditée en utilisant les caractères de contrôles traditionnels "
"d'Emacs. Les plus importants d'entre eux sont : :kbd:`C-A` (Contrôle-A) "
"déplace le curseur au début de la ligne, :kbd:`C-E` à la fin, :kbd:`C-B` "
"d'un caractère vers la gauche, :kbd:`C-F` d'un caractère vers la droite. La "
"touche retour arrière efface le caractère à la gauche du curseur, :kbd:`C-D` "
"le caractère à sa droite. :kbd:`C-K` supprime le reste de la ligne à la "
"droite du curseur, :kbd:`C-Y` rappelle la dernière chaîne supprimée. :kbd:`C-"
"tiret bas` annule la dernière modification ; cette commande peut être "
"répétée pour cumuler ses effets."

#: ../Doc/tutorial/interactive.rst:41
msgid "History Substitution"
msgstr "Substitution d'historique"

#: ../Doc/tutorial/interactive.rst:43
msgid ""
"History substitution works as follows.  All non-empty input lines issued are "
"saved in a history buffer, and when a new prompt is given you are positioned "
"on a new line at the bottom of this buffer. :kbd:`C-P` moves one line up "
"(back) in the history buffer, :kbd:`C-N` moves one down.  Any line in the "
"history buffer can be edited; an asterisk appears in front of the prompt to "
"mark a line as modified.  Pressing the :kbd:`Return` key passes the current "
"line to the interpreter.  :kbd:`C-R` starts an incremental reverse search; :"
"kbd:`C-S` starts a forward search."
msgstr ""
"La substitution d'historique fonctionne comme ceci. Toutes les lignes non "
"vides reçues sont enregistrées dans un tampon d'historique et, à chaque fois "
"qu'une invite est affichée, vous êtes positionné sur une nouvelle ligne à la "
"fin de ce tampon. :kbd:`C-P` remonte d'une ligne (en arrière) dans ce "
"tampon, :kbd:`C-N` descend d'une ligne. Chaque ligne présente dans le tampon "
"d'historique peut être éditée ; un astérisque apparaît en face de l'invite "
"pour indiquer qu'une ligne a été modifiée. Presser la touche :kbd:`Entrée` "
"envoie la ligne en cours à l'interpréteur. :kbd:`C-R` démarre une recherche "
"incrémentale en arrière ; :kbd:`C-S` démarre une recherche en avant."

#: ../Doc/tutorial/interactive.rst:56
msgid "Key Bindings"
msgstr "Raccourcis clavier"

#: ../Doc/tutorial/interactive.rst:58
msgid ""
"The key bindings and some other parameters of the Readline library can be "
"customized by placing commands in an initialization file called :file:`~/."
"inputrc`.  Key bindings have the form ::"
msgstr ""
"Les raccourcis clavier ainsi que d'autres paramètres de la bibliothèque "
"Readline peuvent être personnalisés en inscrivant des commandes dans un "
"fichier d'initialisation appelé :file:`~/.inputrc`. Les raccourcis sont de "
"la forme ::"

#: ../Doc/tutorial/interactive.rst:64
msgid "or ::"
msgstr "ou : ::"

#: ../Doc/tutorial/interactive.rst:68
msgid "and options can be set with ::"
msgstr "et les options peuvent être définies avec ::"

#: ../Doc/tutorial/interactive.rst:72
msgid "For example::"
msgstr "Par exemple : ::"

#: ../Doc/tutorial/interactive.rst:85
msgid ""
"Note that the default binding for :kbd:`Tab` in Python is to insert a :kbd:"
"`Tab` character instead of Readline's default filename completion function.  "
"If you insist, you can override this by putting ::"
msgstr ""
"Notez que le raccourci par défaut pour la touche :kbd:`Tab` en Python est "
"d'insérer un caractère de tabulation au lieu de la fonction par défaut de "
"complétion des noms de fichiers de la bibliothèque Readline. Si vous y "
"tenez, vous pouvez surcharger ce comportement en indiquant ::"

#: ../Doc/tutorial/interactive.rst:91
msgid ""
"in your :file:`~/.inputrc`.  (Of course, this makes it harder to type "
"indented continuation lines if you're accustomed to using :kbd:`Tab` for "
"that purpose.)"
msgstr ""
"dans votre fichier :file:`~/.inputrc` (bien sûr, avec cela il devient plus "
"difficile d'entrer des lignes de continuation indentées si vous êtes habitué "
"à utiliser :kbd:`Tab` dans ce but)."

#: ../Doc/tutorial/interactive.rst:98
msgid ""
"Automatic completion of variable and module names is optionally available.  "
"To enable it in the interpreter's interactive mode, add the following to "
"your startup file: [#]_  ::"
msgstr ""
"La complétude automatique des noms de variables et de modules est disponible "
"de manière optionnelle. Pour l'activer dans le mode interactif de "
"l'interpréteur, ajoutez les lignes suivantes à votre fichier de démarrage : "
"[#]_ ::"

#: ../Doc/tutorial/interactive.rst:105
msgid ""
"This binds the :kbd:`Tab` key to the completion function, so hitting the :"
"kbd:`Tab` key twice suggests completions; it looks at Python statement "
"names, the current local variables, and the available module names.  For "
"dotted expressions such as ``string.a``, it will evaluate the expression up "
"to the final ``'.'`` and then suggest completions from the attributes of the "
"resulting object.  Note that this may execute application-defined code if an "
"object with a :meth:`__getattr__` method is part of the expression."
msgstr ""
"Ceci lie la touche :kbd:`Tab` à la fonction de complétude, donc taper la "
"touche :kbd:`Tab` deux fois de suite suggère les options disponibles ; la "
"recherche s'effectue dans les noms d'instructions Python, les noms des "
"variables locales et les noms de modules disponibles. Pour les expressions "
"pointées telles que ``string.a``, l'expression est évaluée jusqu'au dernier "
"``'.'`` avant de suggérer les options disponibles à partir des attributs de "
"l'objet résultant de cette évaluation. Notez bien que ceci peut exécuter une "
"partie du code de l'application si un objet disposant d'une méthode :meth:"
"`__getattr__` fait partie de l'expression."

#: ../Doc/tutorial/interactive.rst:113
msgid ""
"A more capable startup file might look like this example.  Note that this "
"deletes the names it creates once they are no longer needed; this is done "
"since the startup file is executed in the same namespace as the interactive "
"commands, and removing the names avoids creating side effects in the "
"interactive environment.  You may find it convenient to keep some of the "
"imported modules, such as :mod:`os`, which turn out to be needed in most "
"sessions with the interpreter. ::"
msgstr ""
"Un fichier de démarrage plus complet peut ressembler à cet exemple. Notez "
"que celui-ci supprime les noms qu'il crée dès qu'ils ne sont plus "
"nécessaires ; ceci est possible car le fichier de démarrage est exécuté dans "
"le même espace de noms que les commandes interactives, et supprimer les noms "
"évite de générer des effets de bord dans l'environnement interactif. Vous "
"pouvez trouver pratique de conserver certains des modules importés, tels "
"que :mod:`os`, qui s'avère nécessaire dans la plupart des sessions avec "
"l'interpréteur."

#: ../Doc/tutorial/interactive.rst:149
msgid "Alternatives to the Interactive Interpreter"
msgstr "Alternatives à l'interpréteur interactif"

#: ../Doc/tutorial/interactive.rst:151
msgid ""
"This facility is an enormous step forward compared to earlier versions of "
"the interpreter; however, some wishes are left: It would be nice if the "
"proper indentation were suggested on continuation lines (the parser knows if "
"an indent token is required next).  The completion mechanism might use the "
"interpreter's symbol table.  A command to check (or even suggest) matching "
"parentheses, quotes, etc., would also be useful."
msgstr ""
"Cette facilité constitue un énorme pas en avant comparé aux versions "
"précédentes de l'interpréteur ; toutefois, certains souhaits sont laissés de "
"côté : ce serait bien si une indentation correcte était proposée sur les "
"lignes de continuation (l'analyseur sait si une indentation doit suivre). Le "
"mécanisme de complétion devrait utiliser la table de symboles de "
"l'interpréteur. Une commande pour vérifier (ou même suggérer) les "
"correspondances de parenthèses, de guillemets..., serait également utile."

#: ../Doc/tutorial/interactive.rst:158
msgid ""
"One alternative enhanced interactive interpreter that has been around for "
"quite some time is IPython_, which features tab completion, object "
"exploration and advanced history management.  It can also be thoroughly "
"customized and embedded into other applications.  Another similar enhanced "
"interactive environment is bpython_."
msgstr ""
"Une alternative améliorée de l'interpréteur interactif qui a été développée "
"depuis maintenant quelques temps est IPython_, qui fournit la complétude, "
"l'exploration d'objets et une gestion avancée de l'historique. Il peut "
"également être personnalisé en profondeur et embarqué dans d'autres "
"applications. Un autre environnement interactif amélioré similaire est "
"bpython_."

#: ../Doc/tutorial/interactive.rst:166
msgid "Footnotes"
msgstr "Notes"

#: ../Doc/tutorial/interactive.rst:167
msgid ""
"Python will execute the contents of a file identified by the :envvar:"
"`PYTHONSTARTUP` environment variable when you start an interactive "
"interpreter.  To customize Python even for non-interactive mode, see :ref:"
"`tut-customize`."
msgstr ""
"Python exécute le contenu d'un fichier identifié par la variable "
"d'environnement :envvar:`PYTHONSTARTUP` lorsque vous démarrez un "
"interpréteur interactif. Pour personnaliser Python y compris en mode non "
"interactif, consultez :ref:`tut-customize`."
