# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2010, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2010-06-30 14:00\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.7.0\n"

msgid "Command line and environment"
msgstr "Ligne de commande et environnement"

msgid "The CPython interpreter scans the command line and the environment for various settings."
msgstr ""
"L'interpréteur CPython analyse la ligne de commande et l'environnement à la "
"recherche de différents paramètres/"

# We’re speaking about the command line of other Python implementations, not other implementatons of command lines.
msgid "Other implementations' command line schemes may differ.  See :ref:`implementations` for further resources."
msgstr ""
"Le format des lignes de commandes utilisées par d'autres implémentations "
"peut être différent. Voir :ref:`implementations` pour plus d'informations."

msgid "Command line"
msgstr "Ligne de commande"

msgid "When invoking Python, you may specify any of these options::"
msgstr ""
"Quand vous invoquez Python, vous pouvez spécifier n’importe laquelle de ces "
"options :"

msgid "python [-bBdEhiOsSuvVWx?] [-c command | -m module-name | script | - ] [args]"
msgstr ""
"python [-bBdEhiOsSuvVWx?] [-c commande | -m nom-de-module | script | - ] "
"[arguments]"

msgid "The most common use case is, of course, a simple invocation of a script::"
msgstr ""
"Le cas d'utilisation le plus courant est, bien entendu, la simple invocation "
"d'un script ::"

msgid "python myscript.py"
msgstr "python monscript.py"

msgid "Interface options"
msgstr "Options de l'interface"

msgid "The interpreter interface resembles that of the UNIX shell, but provides some additional methods of invocation:"
msgstr ""
"L'interface de l’interpréteur ressemble à celle du shell UNIX, mais fournit "
"quelques méthodes d'invocation supplémentaires :"

msgid "When called with standard input connected to a tty device, it prompts for commands and executes them until an EOF (an end-of-file character, you can produce that with *Ctrl-D* on UNIX or *Ctrl-Z, Enter* on Windows) is read."
msgstr ""
"Quand l'interpréteur est appelé avec l'entrée standard connectée à un "
"périphérique tty, il lit les lignes de commande et les exécute jusqu'à ce "
"qu'un caractère EOF (un caractère fin de fichier, que vous pouvez produire "
"avec *Ctrl-D* sous UNIX ou *Ctrl-Z, Entrée* sous Windows) soit lu."

msgid "When called with a file name argument or with a file as standard input, it reads and executes a script from that file."
msgstr ""
"Quand l'interpréteur est appelé avec argument correspondant à un nom de "
"fichier ou avec un fichier comme entrée standard, il lit et exécute le "
"script contenu dans ce fichier."

msgid "When called with a directory name argument, it reads and executes an appropriately named script from that directory."
msgstr ""
"Quand l'interpréteur est appelé avec un argument correspondant à un "
"répertoire, il lit et exécute un script nommé d’une certaine façon depuis ce "
"répertoire."

msgid "When called with ``-c command``, it executes the Python statement(s) given as *command*.  Here *command* may contain multiple statements separated by newlines. Leading whitespace is significant in Python statements!"
msgstr ""
"Quand l'interpréteur est appelé avec l'option ``-c commande``, il exécute la "
"ou les instructions Python données comme *commande*. Ici *commande* peut "
"contenir plusieurs instructions séparées par des fins de ligne. Les blancs "
"en début de ligne ne sont pas ignorés dans les instructions Python !"

msgid "When called with ``-m module-name``, the given module is located on the Python module path and executed as a script."
msgstr ""
"Quand l'interpréteur est appelé avec l'option ``-m nom-de-module``, le "
"module donné est recherché dans le chemin des modules Python et est exécuté "
"en tant que script."

msgid "In non-interactive mode, the entire input is parsed before it is executed."
msgstr ""
"En mode non-interactif, toute l’entrée est analysée avant d’être exécutée. "

msgid "An interface option terminates the list of options consumed by the interpreter, all consecutive arguments will end up in :data:`sys.argv` -- note that the first element, subscript zero (``sys.argv[0]``), is a string reflecting the program's source."
msgstr ""
"Une option d'interface termine la listes des options consommées par "
"l'interpréteur ; tous les arguments échoueront dans :data:`sys.argv` — notez "
"que le premier élément, à l'indice zéro (``sys.argv|0]``), est une chaîne "
"de caractères indiquant la source du programme."

msgid "Execute the Python code in *command*.  *command* can be one ore more statements separated by newlines, with significant leading whitespace as in normal module code."
msgstr ""
"Exécute le code Python dans *commande*. *commande* peut être une ou "
"plusieurs instructions, séparées par des fins de ligne, avec des blancs en "
"début de ligne qui ne sont pas ignorés, comme dans le code d’un module."

msgid "If this option is given, the first element of :data:`sys.argv` will be ``\"-c\"`` and the current directory will be added to the start of :data:`sys.path` (allowing modules in that directory to be imported as top level modules)."
msgstr ""
"Si cette option est donnée, le premier élément de :data: `sys.argv` sera "
"``\"-c\"`` et le répertoire courant sera ajouté au début de :data: `sys.path` "
"(permettant aux modules de ce répertoire d'être importé comme des modules de "
"premier niveau)."

msgid "Search :data:`sys.path` for the named module and execute its contents as the :mod:`__main__` module."
msgstr ""
"Parcourir :data:`sys.path` à la recherche du module donné et exécuter son "
"contenu en tant que module :mod:`__main__`."

msgid "Since the argument is a *module* name, you must not give a file extension (``.py``).  The ``module-name`` should be a valid Python module name, but the implementation may not always enforce this (e.g. it may allow you to use a name that includes a hyphen)."
msgstr ""
"L'argument étant un nom de *module*, vous ne devez pas fournir d’extension "
"de fichier (``.py``). Le ``nom-du-module` devrait être un nom de module "
"Python valide, mais l'implémentation n’est pas tenue de le vérifier (par "
"exemple, l'utilisation d'un trait d'union peut être autorisée)."

msgid "Package names are also permitted. When a package name is supplied instead of a normal module, the interpreter will execute ``<pkg>.__main__`` as the main module. This behaviour is deliberately similar to the handling of directories and zipfiles that are passed to the interpreter as the script argument."
msgstr ""
"Les noms de paquets sont aussi autorisés. Quand un nom de paquet est donné à "
"la place d'un module habituel, l'interpréteur exécutera ``<pkg>.__main`` "
"comme module principal. Ce comportement est délibérement identique que pour "
"un répertoire on un fichier zip donné à l'interpréteur comme argument à "
"exécuter."

msgid "This option cannot be used with built-in modules and extension modules written in C, since they do not have Python module files. However, it can still be used for precompiled modules, even if the original source file is not available."
msgstr ""
"Cette option ne peut pas être utilisée avec les modules intégrés et les "
"modules d'extension écrits en C, étant donné qu'il ne possèdent pas de "
"fichiers modules en Python. Cependant, elle peut toujours être utilisées "
"pour les modules pré-complilés, même si le fichier source original n'est pas "
"disponible."

msgid "If this option is given, the first element of :data:`sys.argv` will be the full path to the module file. As with the :option:`-c` option, the current directory will be added to the start of :data:`sys.path`."
msgstr ""
"Si cette option est donnée, le premier élément de :data:`sys.argv` sera le "
"chemin complet d'accès au fichier du module. Comme pour l'option "
":option:`-c`, le répertoire courant sera ajouté au début de "
":data:`sys.path`."

msgid "Many standard library modules contain code that is invoked on their execution as a script.  An example is the :mod:`timeit` module::"
msgstr ""
"De nombreux modules de la bibliothèque standard contiennent du code qui est "
"invoqué quand ils sont exécutés comme scripts. Un exemple est le module "
":mod:`timeit`\\ ::"

msgid "python -mtimeit -s 'setup here' 'benchmarked code here' python -mtimeit -h # for details"
msgstr ""
"python -mtimeit -s 'préparation ici' 'code à chronométrer ici'python "
"-mtimeit -h # pour les détails"

msgid "See also"
msgstr "Voir aussi"

msgid ":pep:`338` -- Executing modules as scripts"
msgstr ":pep:`338` --  Exécuter des modules en tant que scripts"

msgid "Read commands from standard input (:data:`sys.stdin`).  If standard input is a terminal, :option:`-i` is implied."
msgstr ""
"Lit les commandes depuis l'entrée standard (:data:`sys.stdin`). Si l'entrée "
"standard est un terminal, l':option:`-i` est activée implicitement."

#, fuzzy
msgid "If this option is given, the first element of :data:`sys.argv` will be ``\"-\"`` and the current directory will be added to the start of :data:`sys.path`."
msgstr ""
"Si cette option est donnée, le premier élément de :data:`sys.argv` sera "
"``\"-\"`` et le répertoire courant sera ajouté au début de :data:`sys.path`."

msgid "Execute the Python code contained in *script*, which must be a filesystem path (absolute or relative) referring to either a Python file, a directory containing a ``__main__.py`` file, or a zipfile containing a ``__main__.py`` file."
msgstr ""
"Exécute le code Python contenu dans *script*, qui doit être un chemin "
"d'accès au fichier (absolu ou relatif), se référant à un fichier Python, à "
"un répertoire contenant un fichier ``__main__.py`` ou à un fichier zip "
"contenant un fichier ``__main__.py``."

msgid "If this option is given, the first element of :data:`sys.argv` will be the script name as given on the command line."
msgstr ""
"Si cette option est donnée, le premier élément de :data:`sys.argv` sera le "
"nom du script comme donné sur la ligne de commande."

#, fuzzy
msgid "If the script name refers directly to a Python file, the directory containing that file is added to the start of :data:`sys.path`, and the file is executed as the :mod:`__main__` module."
msgstr ""
"Si le nom du script se réfère directement à un fichier Python, le répertoire "
"contenant ce fichier est ajouté au début de :data:`sys.path`, et le fichier "
"est exécuté en tant que module :mod:`__main__`."

#, fuzzy
msgid "If the script name refers to a directory or zipfile, the script name is added to the start of :data:`sys.path` and the ``__main__.py`` file in that location is executed as the :mod:`__main__` module."
msgstr ""
"Si le nom du script fait référence à un répertoire ou un fichier zip, le nom "
"du script est ajouté au début de :data:`sys.path` et le fichier "
"``__main__.py`` à cet endroit est exécuté en tant que module "
":mod:`__main__`."

#, fuzzy
msgid "If no interface option is given, :option:`-i` is implied, ``sys.argv[0]`` is an empty string (``\"\"``) and the current directory will be added to the start of :data:`sys.path`."
msgstr ""
"Si aucune option d'interface est donnée, :option:`-i` est implicite, "
"``sys.argv[0]`` est une chaine vide (``\"\"``) et le répertoire courant sera "
"ajouté au début de :data:`sys.path`."

#, fuzzy
msgid "Generic options"
msgstr "Options génériques"

#, fuzzy
msgid "Print a short description of all command line options."
msgstr ""
"Affiche une brève description de toutes les options de ligne de commande."

#, fuzzy
msgid "Print the Python version number and exit.  Example output could be::"
msgstr ""
"Imprimer le numéro de version de Python et termine. Exemple de sortie ::"

#, fuzzy
msgid "Python 3.0"
msgstr "Python 3.0"

#, fuzzy
msgid "Miscellaneous options"
msgstr "Options diverses"

msgid "Issue a warning when comparing str and bytes. Issue an error when the option is given twice (:option:`-bb`)."
msgstr ""
"Émettre un avertissement lorsque l'on compare un str et un bytes. Émettre "
"une erreur lorsque l'option est donné deux fois (:option:`-bb`)."

msgid "If given, Python won't try to write ``.pyc`` or ``.pyo`` files on the import of source modules.  See also :envvar:`PYTHONDONTWRITEBYTECODE`."
msgstr ""
"Si donné, Python ne tentera pas d'écrire de fichier ``.pyc``` ou ``.pyo`` à "
"l'importation des modules source. Voir aussi "
":envvar:`PYTHONDONTWRITEBYTECODE`."

msgid "Turn on parser debugging output (for wizards only, depending on compilation options).  See also :envvar:`PYTHONDEBUG`."
msgstr ""
"Activer la sortie de l'analyseur de débogage (pour les magiciens uniquement, "
"en fonction des options de compilation). Voir aussi :envvar:`PYTHONDEBUG`."

msgid "Ignore all :envvar:`PYTHON*` environment variables, e.g. :envvar:`PYTHONPATH` and :envvar:`PYTHONHOME`, that might be set."
msgstr ""
"Ignorer toutes les variables d'environnement :envvar:`PYTHON*`, par exemple, "
":envvar:`PYTHONPATH` et :envvar:`PYTHONHOME`, qui pourraient être définies."

msgid "When a script is passed as first argument or the :option:`-c` option is used, enter interactive mode after executing the script or the command, even when :data:`sys.stdin` does not appear to be a terminal.  The :envvar:`PYTHONSTARTUP` file is not read."
msgstr ""
"Quand un script est passé comme premier argument ou que l'option "
":option:`-c` est utilisée, entrer en mode interactif après avoir exécuté le "
"script ou la commande, même lorsque :data:`sys.stdin` ne semble pas être un "
"terminal. Le fichier :envvar:`PYTHONSTARTUP` n'est pas lu."

msgid "This can be useful to inspect global variables or a stack trace when a script raises an exception.  See also :envvar:`PYTHONINSPECT`."
msgstr ""
"Cela peut être utile pour examiner les variables globales ou une trace de la "
"pile lorsque le script lève une exception. Voir aussi "
":envvar:`PYTHONINSPECT`."

msgid "Turn on basic optimizations.  This changes the filename extension for compiled (:term:`bytecode`) files from ``.pyc`` to ``.pyo``.  See also :envvar:`PYTHONOPTIMIZE`."
msgstr ""
"Activer les optimisations de base. Cela modifie l'extension du fichier pour "
"les fichiers compilés (:term:`bytecode`) de ``.pyc`` à ``.pyo``. Voir aussi "
":envvar:`PYTHONOPTIMIZE`."

msgid "Discard docstrings in addition to the :option:`-O` optimizations."
msgstr ""
"Supprimer les docstrings en plus des optimisations réalisés par "
":option:`-O`."

# I’m creating terminology here; where’s the mailing list to discuss such stuff?
msgid "Don't add user site directory to sys.path"
msgstr "Ne pas ajouter le répertoire spécifique de l’utilisateur à sys.path"

#, fuzzy
msgid ":pep:`370` -- Per user site-packages directory"
msgstr ":pep:`370` --  Répertoire site-packages par utilisateur "

msgid "Disable the import of the module :mod:`site` and the site-dependent manipulations of :data:`sys.path` that it entails."
msgstr ""
"Désactiver l’importation du module :mod:`site` et les modifications de "
":data:`sys.path` spécifiques au site qu’elle implique."

#, fuzzy
msgid "Force the binary layer of the stdin, stdout and stderr streams (which is available as their ``buffer`` attribute) to be unbuffered.  The text I/O layer will still be line-buffered."
msgstr ""
"Force la couche binaire des flux stdin, stdout and stderr (disponible comme "
"leur attribut ``buffer``) à ne pas mettre de données en tampon. La couche "
"d’entrée-sortie en mode texte continuera de mettre une ligne en tampon."

msgid "See also :envvar:`PYTHONUNBUFFERED`."
msgstr "Voir aussi :envvar:`PYTHONUNBUFFERED`."

msgid "Print a message each time a module is initialized, showing the place (filename or built-in module) from which it is loaded.  When given twice (:option:`-vv`), print a message for each file that is checked for when searching for a module.  Also provides information on module cleanup at exit. See also :envvar:`PYTHONVERBOSE`."
msgstr ""

msgid "Warning control.  Python's warning machinery by default prints warning messages to :data:`sys.stderr`.  A typical warning message has the following form::"
msgstr ""

msgid "file:line: category: message"
msgstr "file:line: category: message"

#, fuzzy
msgid "By default, each warning is printed once for each source line where it occurs.  This option controls how often warnings are printed."
msgstr ""
"Par défaut, chaque avertissement est afficher une fois pour chaque ligne de "
"source où elle se trouve. Cette option définit la fréquence d'affichage des "
"avertissements."

msgid "Multiple :option:`-W` options may be given; when a warning matches more than one option, the action for the last matching option is performed.  Invalid :option:`-W` options are ignored (though, a warning message is printed about invalid options when the first warning is issued)."
msgstr ""

msgid "Warnings can also be controlled from within a Python program using the :mod:`warnings` module."
msgstr ""

#, fuzzy
msgid "The simplest form of argument is one of the following action strings (or a unique abbreviation):"
msgstr ""
"La forme la plus simple de l'argument est l'une des chaînes d'action "
"suivante (ou une abréviation unique):"

#, fuzzy
msgid "Ignore all warnings."
msgstr "Ignorer tous les avertissements."

msgid "Explicitly request the default behavior (printing each warning once per source line)."
msgstr ""

#, fuzzy
msgid "Print a warning each time it occurs (this may generate many messages if a warning is triggered repeatedly for the same source line, such as inside a loop)."
msgstr ""
"Affiche un avertissement à chaque fois qu'il se produit (ce qui peut générer "
"beaucoup de messages si l'avertissement est déclenchée à plusieurs reprises "
"pour la ligne du même source, comme à l'intérieur d'une boucle)."

#, fuzzy
msgid "Print each warning only the first time it occurs in each module."
msgstr ""
"Affiche chaque avertissement uniquement la première fois qu'il apparaît dans "
"chaque module."

#, fuzzy
msgid "Print each warning only the first time it occurs in the program."
msgstr ""
"Affiche chaque avertissement uniquement la première fois qu'il apparaît dans "
"le programme."

#, fuzzy
msgid "Raise an exception instead of printing a warning message."
msgstr "Déclenche une exception au lieu d'afficher un message d'avertissement."

#, fuzzy
msgid "The full form of argument is::"
msgstr "La forme complète de l'argument est le suivant::"

msgid "action:message:category:module:line"
msgstr "action:message:category:module:line"

#, fuzzy
msgid "Here, *action* is as explained above but only applies to messages that match the remaining fields.  Empty fields match all values; trailing empty fields may be omitted.  The *message* field matches the start of the warning message printed; this match is case-insensitive.  The *category* field matches the warning category.  This must be a class name; the match tests whether the actual warning category of the message is a subclass of the specified warning category.  The full class name must be given.  The *module* field matches the (fully-qualified) module name; this match is case-sensitive.  The *line* field matches the line number, where zero matches all line numbers and is thus equivalent to an omitted line number."
msgstr ""
"Ici, *action* est tel qu'expliqué ci-dessus, mais s'applique uniquement aux "
"messages qui correspondent aux champs restants. Les champs vides "
"correspondent à toutes les valeurs ; les champs vides de fin peuvent être "
"omis. Le champ *message* correspond au début du message d'avertissement "
"affiché, cette expression est insensible à la casse. Le champ *category* "
"correspond à la catégorie d'avertissement. Ce nom doit être un nom complet "
"de classe ; La règle s'applique à tous les messages d'alertes construits "
"avec une classe héritante de celle spécifiée. Le nom de la classe complète "
"doit être donnée. Le champ *module* correspond au nom (pleinement qualifié) "
"du module, cette correspondance est sensible à la casse. Le champ *line* "
"correspond au numéro de ligne, où zéro correspond à n'importe quel numéro de "
"ligne et correspond donc à l'option par défaut."

msgid ":pep:`230` -- Warning framework"
msgstr ":pep:`230` -- Gestion des alertes"

msgid ":envvar:`PYTHONWARNINGS`"
msgstr ""

msgid "Skip the first line of the source, allowing use of non-Unix forms of ``#!cmd``.  This is intended for a DOS specific hack only."
msgstr ""

#, fuzzy
msgid "The line numbers in error messages will be off by one."
msgstr ""
"Les numéros de ligne dans les messages d'erreur seront désactivés un par un."

msgid "Options you shouldn't use"
msgstr "Options que vous ne devriez pas utiliser"

#, fuzzy
msgid "Reserved for use by Jython_."
msgstr "Utilisation réservée à Jython_."

msgid "Reserved for alternative implementations of Python to use for their own purposes."
msgstr ""

msgid "Environment variables"
msgstr "Variables d'environnement"

#, fuzzy
msgid "These environment variables influence Python's behavior."
msgstr "Ces variables d'environnement influent sur le comportement de Python."

msgid "Change the location of the standard Python libraries.  By default, the libraries are searched in :file:`{prefix}/lib/python{version}` and :file:`{exec_prefix}/lib/python{version}`, where :file:`{prefix}` and :file:`{exec_prefix}` are installation-dependent directories, both defaulting to :file:`/usr/local`."
msgstr ""

msgid "When :envvar:`PYTHONHOME` is set to a single directory, its value replaces both :file:`{prefix}` and :file:`{exec_prefix}`.  To specify different values for these, set :envvar:`PYTHONHOME` to :file:`{prefix}:{exec_prefix}`."
msgstr ""

msgid "Augment the default search path for module files.  The format is the same as the shell's :envvar:`PATH`: one or more directory pathnames separated by :data:`os.pathsep` (e.g. colons on Unix or semicolons on Windows). Non-existent directories are silently ignored."
msgstr ""

msgid "In addition to normal directories, individual :envvar:`PYTHONPATH` entries may refer to zipfiles containing pure Python modules (in either source or compiled form). Extension modules cannot be imported from zipfiles."
msgstr ""

msgid "The default search path is installation dependent, but generally begins with :file:`{prefix}/lib/python{version}` (see :envvar:`PYTHONHOME` above).  It is *always* appended to :envvar:`PYTHONPATH`."
msgstr ""

msgid "An additional directory will be inserted in the search path in front of :envvar:`PYTHONPATH` as described above under :ref:`using-on-interface-options`. The search path can be manipulated from within a Python program as the variable :data:`sys.path`."
msgstr ""

msgid "If this is the name of a readable file, the Python commands in that file are executed before the first prompt is displayed in interactive mode.  The file is executed in the same namespace where interactive commands are executed so that objects defined or imported in it can be used without qualification in the interactive session.  You can also change the prompts :data:`sys.ps1` and :data:`sys.ps2` in this file."
msgstr ""

msgid "Set this to a non-empty string to cause the :mod:`time` module to require dates specified as strings to include 4-digit years, otherwise 2-digit years are converted based on rules described in the :mod:`time` module documentation."
msgstr ""

msgid "If this is set to a non-empty string it is equivalent to specifying the :option:`-O` option.  If set to an integer, it is equivalent to specifying :option:`-O` multiple times."
msgstr ""

msgid "If this is set to a non-empty string it is equivalent to specifying the :option:`-d` option.  If set to an integer, it is equivalent to specifying :option:`-d` multiple times."
msgstr ""

msgid "If this is set to a non-empty string it is equivalent to specifying the :option:`-i` option."
msgstr ""

msgid "This variable can also be modified by Python code using :data:`os.environ` to force inspect mode on program termination."
msgstr ""

msgid "If this is set to a non-empty string it is equivalent to specifying the :option:`-u` option."
msgstr ""

msgid "If this is set to a non-empty string it is equivalent to specifying the :option:`-v` option.  If set to an integer, it is equivalent to specifying :option:`-v` multiple times."
msgstr ""

msgid "If this is set, Python ignores case in :keyword:`import` statements.  This only works on Windows."
msgstr ""

msgid "If this is set, Python won't try to write ``.pyc`` or ``.pyo`` files on the import of source modules."
msgstr ""

msgid "Overrides the encoding used for stdin/stdout/stderr, in the syntax ``encodingname:errorhandler``.  The ``:errorhandler`` part is optional and has the same meaning as in :func:`str.encode`."
msgstr ""

msgid "For stderr, the ``:errorhandler`` part is ignored; the handler will always be ``'backslashreplace'``."
msgstr ""

msgid "If this is set, Python won't add the user site directory to sys.path"
msgstr ""

msgid "Sets the base directory for the user site directory"
msgstr ""

msgid "If this environment variable is set, ``sys.argv[0]`` will be set to its value instead of the value got through the C runtime.  Only works on Mac OS X."
msgstr ""

msgid "This is equivalent to the :option:`-W` option. If set to a comma separated string, it is equivalent to specifying :option:`-W` multiple times."
msgstr ""

msgid "Debug-mode variables"
msgstr ""

msgid "Setting these variables only has an effect in a debug build of Python, that is, if Python was configured with the :option:`--with-pydebug` build option."
msgstr ""

msgid "If set, Python will print threading debug info."
msgstr ""

msgid "If set, Python will dump objects and reference counts still alive after shutting down the interpreter."
msgstr ""

msgid "If set, Python will print memory allocation statistics every time a new object arena is created, and on shutdown."
msgstr ""

msgid "Using Python"
msgstr ""

msgid "This part of the documentation is devoted to general information on the setup of the Python environment on different platform, the invocation of the interpreter and things that make working with Python easier."
msgstr ""

msgid "Using Python on a Macintosh"
msgstr ""

msgid "Author"
msgstr ""

msgid "Bob Savage <bobsavage@mac.com>"
msgstr ""

msgid "Python on a Macintosh running Mac OS X is in principle very similar to Python on any other Unix platform, but there are a number of additional features such as the IDE and the Package Manager that are worth pointing out."
msgstr ""

msgid "Getting and Installing MacPython"
msgstr ""

msgid "Mac OS X 10.5 comes with Python 2.5.1 pre-installed by Apple.  If you wish, you are invited to install the most recent version of Python from the Python website (http://www.python.org).  A current \"universal binary\" build of Python, which runs natively on the Mac's new Intel and legacy PPC CPU's, is available there."
msgstr ""

msgid "What you get after installing is a number of things:"
msgstr ""

msgid "A :file:`MacPython 2.5` folder in your :file:`Applications` folder. In here you find IDLE, the development environment that is a standard part of official Python distributions; PythonLauncher, which handles double-clicking Python scripts from the Finder; and the \"Build Applet\" tool, which allows you to package Python scripts as standalone applications on your system."
msgstr ""

msgid "A framework :file:`/Library/Frameworks/Python.framework`, which includes the Python executable and libraries. The installer adds this location to your shell path. To uninstall MacPython, you can simply remove these three things. A symlink to the Python executable is placed in /usr/local/bin/."
msgstr ""

msgid "The Apple-provided build of Python is installed in :file:`/System/Library/Frameworks/Python.framework` and :file:`/usr/bin/python`, respectively. You should never modify or delete these, as they are Apple-controlled and are used by Apple- or third-party software.  Remember that if you choose to install a newer Python version from python.org, you will have two different but functional Python installations on your computer, so it will be important that your paths and usages are consistent with what you want to do."
msgstr ""

msgid "IDLE includes a help menu that allows you to access Python documentation. If you are completely new to Python you should start reading the tutorial introduction in that document."
msgstr ""

msgid "If you are familiar with Python on other Unix platforms you should read the section on running Python scripts from the Unix shell."
msgstr ""

msgid "How to run a Python script"
msgstr ""

msgid "Your best way to get started with Python on Mac OS X is through the IDLE integrated development environment, see section :ref:`ide` and use the Help menu when the IDE is running."
msgstr ""

msgid "If you want to run Python scripts from the Terminal window command line or from the Finder you first need an editor to create your script. Mac OS X comes with a number of standard Unix command line editors, :program:`vim` and :program:`emacs` among them. If you want a more Mac-like editor, :program:`BBEdit` or :program:`TextWrangler` from Bare Bones Software (see http://www.barebones.com/products/bbedit/index.shtml) are good choices, as is :program:`TextMate` (see http://macromates.com/). Other editors include :program:`Gvim` (http://macvim.org) and :program:`Aquamacs` (http://aquamacs.org/)."
msgstr ""

msgid "To run your script from the Terminal window you must make sure that :file:`/usr/local/bin` is in your shell search path."
msgstr ""

msgid "To run your script from the Finder you have two options:"
msgstr ""

msgid "Drag it to :program:`PythonLauncher`"
msgstr ""

msgid "Select :program:`PythonLauncher` as the default application to open your script (or any .py script) through the finder Info window and double-click it. :program:`PythonLauncher` has various preferences to control how your script is launched. Option-dragging allows you to change these for one invocation, or use its Preferences menu to change things globally."
msgstr ""

msgid "Running scripts with a GUI"
msgstr ""

msgid "With older versions of Python, there is one Mac OS X quirk that you need to be aware of: programs that talk to the Aqua window manager (in other words, anything that has a GUI) need to be run in a special way. Use :program:`pythonw` instead of :program:`python` to start such scripts."
msgstr ""

msgid "With Python 2.5, you can use either :program:`python` or :program:`pythonw`."
msgstr ""

msgid "Configuration"
msgstr ""

msgid "Python on OS X honors all standard Unix environment variables such as :envvar:`PYTHONPATH`, but setting these variables for programs started from the Finder is non-standard as the Finder does not read your :file:`.profile` or :file:`.cshrc` at startup. You need to create a file :file:`~ /.MacOSX/environment.plist`. See Apple's Technical Document QA1067 for details."
msgstr ""

msgid "For more information on installation Python packages in MacPython, see section :ref:`mac-package-manager`."
msgstr ""

msgid "The IDE"
msgstr ""

msgid "MacPython ships with the standard IDLE development environment. A good introduction to using IDLE can be found at http://hkn.eecs.berkeley.edu/~dyoo/python/idle_intro/index.html."
msgstr ""

msgid "Installing Additional Python Packages"
msgstr ""

msgid "There are several methods to install additional Python packages:"
msgstr ""

msgid "http://pythonmac.org/packages/ contains selected compiled packages for Python 2.5, 2.4, and 2.3."
msgstr ""

msgid "Packages can be installed via the standard Python distutils mode (``python setup.py install``)."
msgstr ""

msgid "Many packages can also be installed via the :program:`setuptools` extension."
msgstr ""

msgid "GUI Programming on the Mac"
msgstr ""

msgid "There are several options for building GUI applications on the Mac with Python."
msgstr ""

msgid "*PyObjC* is a Python binding to Apple's Objective-C/Cocoa framework, which is the foundation of most modern Mac development. Information on PyObjC is available from http://pyobjc.sourceforge.net."
msgstr ""

msgid "The standard Python GUI toolkit is :mod:`tkinter`, based on the cross-platform Tk toolkit (http://www.tcl.tk). An Aqua-native version of Tk is bundled with OS X by Apple, and the latest version can be downloaded and installed from http://www.activestate.com; it can also be built from source."
msgstr ""

msgid "*wxPython* is another popular cross-platform GUI toolkit that runs natively on Mac OS X. Packages and documentation are available from http://www.wxpython.org."
msgstr ""

msgid "*PyQt* is another popular cross-platform GUI toolkit that runs natively on Mac OS X. More information can be found at http://www.riverbankcomputing.co.uk/software/pyqt/intro."
msgstr ""

msgid "Distributing Python Applications on the Mac"
msgstr ""

msgid "The \"Build Applet\" tool that is placed in the MacPython 2.5 folder is fine for packaging small Python scripts on your own machine to run as a standard Mac application. This tool, however, is not robust enough to distribute Python applications to other users."
msgstr ""

msgid "The standard tool for deploying standalone Python applications on the Mac is :program:`py2app`. More information on installing and using py2app can be found at http://undefined.org/python/#py2app."
msgstr ""

msgid "Application Scripting"
msgstr ""

msgid "Python can also be used to script other Mac applications via Apple's Open Scripting Architecture (OSA); see http://appscript.sourceforge.net. Appscript is a high-level, user-friendly Apple event bridge that allows you to control scriptable Mac OS X applications using ordinary Python scripts. Appscript makes Python a serious alternative to Apple's own *AppleScript* language for automating your Mac. A related package, *PyOSA*, is an OSA language component for the Python scripting language, allowing Python code to be executed by any OSA-enabled application (Script Editor, Mail, iTunes, etc.). PyOSA makes Python a full peer to AppleScript."
msgstr ""

msgid "Other Resources"
msgstr ""

msgid "The MacPython mailing list is an excellent support resource for Python users and developers on the Mac:"
msgstr ""

msgid "http://www.python.org/community/sigs/current/pythonmac-sig/"
msgstr ""

msgid "Another useful resource is the MacPython wiki:"
msgstr ""

msgid "http://wiki.python.org/moin/MacPython"
msgstr ""

msgid "Using Python on Unix platforms"
msgstr ""

msgid "Getting and installing the latest version of Python"
msgstr ""

msgid "On Linux"
msgstr ""

msgid "Python comes preinstalled on most Linux distributions, and is available as a package on all others.  However there are certain features you might want to use that are not available on your distro's package.  You can easily compile the latest version of Python from source."
msgstr ""

msgid "In the event that Python doesn't come preinstalled and isn't in the repositories as well, you can easily make packages for your own distro.  Have a look at the following links:"
msgstr ""

msgid "for Debian users"
msgstr ""

msgid "for OpenSuse users"
msgstr ""

msgid "for Fedora users"
msgstr ""

msgid "for Slackware users"
msgstr ""

msgid "On FreeBSD and OpenBSD"
msgstr ""

msgid "FreeBSD users, to add the package use::"
msgstr ""

msgid "pkg_add -r python"
msgstr ""

msgid "OpenBSD users use::"
msgstr ""

msgid "pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.2/packages/<insert your architecture here>/python-<version>.tgz"
msgstr ""

msgid "For example i386 users get the 2.5.1 version of Python using::"
msgstr ""

msgid "pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.2/packages/i386/python-2.5.1p2.tgz"
msgstr ""

msgid "On OpenSolaris"
msgstr ""

msgid "To install the newest Python versions on OpenSolaris, install blastwave (http://www.blastwave.org/howto.html) and type \"pkg_get -i python\" at the prompt."
msgstr ""

msgid "Building Python"
msgstr ""

msgid "If you want to compile CPython yourself, first thing you should do is get the `source <http://python.org/download/source/>`_. You can download either the latest release's source or just grab a fresh `checkout <http://www.python.org/dev/faq/#how-do-i-get-a-checkout-of-the-repository-read-only-and-read-write>`_."
msgstr ""

msgid "The build process consists the usual ::"
msgstr ""

msgid "./configure make make install"
msgstr ""

msgid "invocations. Configuration options and caveats for specific Unix platforms are extensively documented in the :file:`README` file in the root of the Python source tree."
msgstr ""

msgid "``make install`` can overwrite or masquerade the :file:`python` binary. ``make altinstall`` is therefore recommended instead of ``make install`` since it only installs :file:`{exec_prefix}/bin/python{version}`."
msgstr ""

msgid "Python-related paths and files"
msgstr ""

msgid "These are subject to difference depending on local installation conventions; :envvar:`prefix` (``${prefix}``) and :envvar:`exec_prefix` (``${exec_prefix}``) are installation-dependent and should be interpreted as for GNU software; they may be the same."
msgstr ""

msgid "For example, on most Linux systems, the default for both is :file:`/usr`."
msgstr ""

msgid "File/directory"
msgstr ""

msgid "Meaning"
msgstr ""

msgid ":file:`{exec_prefix}/bin/python`"
msgstr ""

msgid "Recommended location of the interpreter."
msgstr ""

msgid ":file:`{prefix}/lib/python{version}`, :file:`{exec_prefix}/lib/python{version}`"
msgstr ""

msgid "Recommended locations of the directories containing the standard modules."
msgstr ""

msgid ":file:`{prefix}/include/python{version}`, :file:`{exec_prefix}/include/python{version}`"
msgstr ""

msgid "Recommended locations of the directories containing the include files needed for developing Python extensions and embedding the interpreter."
msgstr ""

msgid ":file:`~/.pythonrc.py`"
msgstr ""

msgid "User-specific initialization file loaded by the user module; not used by default or by most applications."
msgstr ""

msgid "Miscellaneous"
msgstr ""

msgid "To easily use Python scripts on Unix, you need to make them executable, e.g. with ::"
msgstr ""

msgid "$ chmod +x script"
msgstr ""

msgid "and put an appropriate Shebang line at the top of the script.  A good choice is usually ::"
msgstr ""

msgid "#!/usr/bin/env python"
msgstr ""

msgid "which searches for the Python interpreter in the whole :envvar:`PATH`.  However, some Unices may not have the :program:`env` command, so you may need to hardcode ``/usr/bin/python`` as the interpreter path."
msgstr ""

msgid "To use shell commands in your Python scripts, look at the :mod:`subprocess` module."
msgstr ""

msgid "Editors"
msgstr ""

msgid "Vim and Emacs are excellent editors which support Python very well.  For more information on how to code in Python in these editors, look at:"
msgstr ""

msgid "http://www.vim.org/scripts/script.php?script_id=790"
msgstr ""

msgid "http://sourceforge.net/projects/python-mode"
msgstr ""

msgid "Geany is an excellent IDE with support for a lot of languages. For more information, read: http://geany.uvena.de/"
msgstr ""

msgid "Komodo edit is another extremely good IDE.  It also has support for a lot of languages. For more information, read: http://www.activestate.com/store/productdetail.aspx?prdGuid=20f4ed15-6684-4118-a78b-d37ff4058c5f"
msgstr ""

msgid "Using Python on Windows"
msgstr ""

msgid "This document aims to give an overview of Windows-specific behaviour you should know about when using Python on Microsoft Windows."
msgstr ""

msgid "Installing Python"
msgstr ""

msgid "Unlike most Unix systems and services, Windows does not require Python natively and thus does not pre-install a version of Python.  However, the CPython team has compiled Windows installers (MSI packages) with every `release <http://www.python.org/download/releases/>`_ for many years."
msgstr ""

msgid "With ongoing development of Python, some platforms that used to be supported earlier are no longer supported (due to the lack of users or developers). Check :pep:`11` for details on all unsupported platforms."
msgstr ""

msgid "Up to 2.5, Python was still compatible with Windows 95, 98 and ME (but already raised a deprecation warning on installation).  For Python 2.6 (and all following releases), this support was dropped and new releases are just expected to work on the Windows NT family."
msgstr ""

msgid "`Windows CE <http://pythonce.sourceforge.net/>`_ is still supported."
msgstr ""

msgid "The `Cygwin <http://cygwin.com/>`_ installer offers to install the `Python interpreter <http://cygwin.com/packages/python>`_ as well; it is located under \"Interpreters.\" (cf. `Cygwin package source <ftp://ftp.uni-erlangen.de/pub/pc/gnuwin32/cygwin/mirrors/cygnus/ release/python>`_, `Maintainer releases <http://www.tishler.net/jason/software/python/>`_)"
msgstr ""

msgid "See `Python for Windows (and DOS) <http://www.python.org/download/windows/>`_ for detailed information about platforms with precompiled installers."
msgstr ""

msgid "\"7 Minutes to \"Hello World!\"\" by Richard Dooling, 2006"
msgstr ""

msgid "in \"`Dive into Python: Python from novice to pro <http://diveintopython.org/index.html>`_\" by Mark Pilgrim, 2004, ISBN 1-59059-356-1"
msgstr ""

msgid "in \"Installing Python\" in \"`A Byte of Python <http://www.byteofpython.info>`_\" by Swaroop C H, 2003"
msgstr ""

msgid "Alternative bundles"
msgstr ""

msgid "Besides the standard CPython distribution, there are modified packages including additional functionality.  The following is a list of popular versions and their key features:"
msgstr ""

msgid "Installer with multi-platform compatibility, documentation, PyWin32"
msgstr ""

msgid "Popular modules (such as PyWin32) with their respective documentation, tool suite for building extensible Python applications"
msgstr ""

msgid "Notice that these packages are likely to install *older* versions of Python."
msgstr ""

msgid "Configuring Python"
msgstr ""

msgid "In order to run Python flawlessly, you might have to change certain environment settings in Windows."
msgstr ""

msgid "Excursus: Setting environment variables"
msgstr ""

msgid "Windows has a built-in dialog for changing environment variables (following guide applies to XP classical view): Right-click the icon for your machine (usually located on your Desktop and called \"My Computer\") and choose :menuselection:`Properties` there.  Then, open the :guilabel:`Advanced` tab and click the :guilabel:`Environment Variables` button."
msgstr ""

msgid "In short, your path is:"
msgstr ""

msgid ":menuselection:`My Computer --> Properties --> Advanced --> Environment Variables`"
msgstr ""

msgid "In this dialog, you can add or modify User and System variables. To change System variables, you need non-restricted access to your machine (i.e. Administrator rights)."
msgstr ""

msgid "Another way of adding variables to your environment is using the :command:`set` command::"
msgstr ""

msgid "set PYTHONPATH=%PYTHONPATH%;C:\\My_python_lib"
msgstr ""

msgid "To make this setting permanent, you could add the corresponding command line to your :file:`autoexec.bat`. :program:`msconfig` is a graphical interface to this file."
msgstr ""

msgid "Viewing environment variables can also be done more straight-forward: The command prompt will expand strings wrapped into percent signs automatically::"
msgstr ""

msgid "echo %PATH%"
msgstr ""

msgid "Consult :command:`set /?` for details on this behaviour."
msgstr ""

msgid "Environment variables in Windows NT"
msgstr ""

msgid "How To Manage Environment Variables in Windows XP"
msgstr "Comment gérer les variables d'environnement sous Windows XP"

msgid "Setting Environment variables, Louis J. Farrugia"
msgstr "Définir les variables d'environnement, Louis J. Farrugia"

#, fuzzy
msgid "Finding the Python executable"
msgstr "Trouver l'exécutable Python"

msgid "Besides using the automatically created start menu entry for the Python interpreter, you might want to start Python in the DOS prompt.  To make this work, you need to set your :envvar:`%PATH%` environment variable to include the directory of your Python distribution, delimited by a semicolon from other entries.  An example variable could look like this (assuming the first two entries are Windows' default)::"
msgstr ""

msgid "C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Python25"
msgstr "C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Python25"

msgid "Typing :command:`python` on your command prompt will now fire up the Python interpreter.  Thus, you can also execute your scripts with command line options, see :ref:`using-on-cmdline` documentation."
msgstr ""

msgid "Finding modules"
msgstr ""

msgid "Python usually stores its library (and thereby your site-packages folder) in the installation directory.  So, if you had installed Python to :file:`C:\\\\Python\\\\`, the default library would reside in :file:`C:\\\\Python\\\\Lib\\\\` and third-party modules should be stored in :file:`C:\\\\Python\\\\Lib\\\\site-packages\\\\`."
msgstr ""

msgid "You can add folders to your search path to make Python's import mechanism search in these directories as well.  Use :envvar:`PYTHONPATH`, as described in :ref:`using-on-envvars`, to modify :data:`sys.path`.  On Windows, paths are separated by semicolons, though, to distinguish them from drive identifiers (:file:`C:\\\\` etc.)."
msgstr ""

msgid "Modifying the module search path can also be done through the Windows registry under the key :file:`HKLM\\\\SOFTWARE\\\\Python\\\\PythonCore\\\\{version}\\\\PythonPath`. Subkeys which have semicolon-delimited path strings as their default value will cause each path to be searched.  Multiple subkeys can be created and are appended to the path in alphabetical order.  A convenient registry editor is :program:`regedit` (start it by typing \"regedit\" into :menuselection:`Start --> Run`)."
msgstr ""

msgid "Executing scripts"
msgstr ""

msgid "Python scripts (files with the extension ``.py``) will be executed by :program:`python.exe` by default.  This executable opens a terminal, which stays open even if the program uses a GUI.  If you do not want this to happen, use the extension ``.pyw`` which will cause the script to be executed by :program:`pythonw.exe` by default (both executables are located in the top-level of your Python installation directory).  This suppresses the terminal window on startup."
msgstr ""

msgid "You can also make all ``.py`` scripts execute with :program:`pythonw.exe`, setting this through the usual facilities, for example (might require administrative rights):"
msgstr ""

msgid "Launch a command prompt."
msgstr ""

msgid "Associate the correct file group with ``.py`` scripts::"
msgstr ""

msgid "assoc .py=Python.File"
msgstr ""

msgid "Redirect all Python files to the new executable::"
msgstr ""

msgid "ftype Python.File=C:\\Path\\to\\pythonw.exe \"%1\" %*"
msgstr ""

msgid "Additional modules"
msgstr ""

msgid "Even though Python aims to be portable among all platforms, there are features that are unique to Windows.  A couple of modules, both in the standard library and external, and snippets exist to use these features."
msgstr ""

msgid "The Windows-specific standard modules are documented in :ref:`mswin-specific-services`."
msgstr ""

msgid "PyWin32"
msgstr "PyWin32"

msgid "The `PyWin32 <http://python.net/crew/mhammond/win32/>`_ module by Mark Hammond is a collection of modules for advanced Windows-specific support.  This includes utilities for:"
msgstr ""
"Le module `PyWin32 <http://python.net/crew/mhammond/win32/>`_ de Mark "
"Hammond est une collection de modules pour un support avancé spécifique à "
"Windows.  Cela inclut les services pour :"

msgid "`Component Object Model <http://www.microsoft.com/com/>`_ (COM)"
msgstr "`Component Object Model <http://www.microsoft.com/com/>`_ (COM)"

msgid "Win32 API calls"
msgstr "Appels à l'API Win32"

#, fuzzy
msgid "Registry"
msgstr "Registre"

#, fuzzy
msgid "Event log"
msgstr "journal d'événement"

msgid "`Microsoft Foundation Classes <http://msdn.microsoft.com/en-us/library/fe1cf721%28VS.80%29.aspx>`_ (MFC) user interfaces"
msgstr ""
"`Microsoft Foundation Classes <http://msdn.microsoft.com/en-"
"us/library/fe1cf721%28VS.80%29.aspx>`_ (MFC) interfaces utilisateur"

msgid "`PythonWin <http://web.archive.org/web/20060524042422/ http://www.python.org/windows/pythonwin/>`_ is a sample MFC application shipped with PyWin32.  It is an embeddable IDE with a built-in debugger."
msgstr ""
"`PythonWin <http://web.archive.org/web/20060524042422/ "
"http://www.python.org/windows/pythonwin/>`_ est une exemple d'application "
"MFC livrée avec PyWin32. Il s'agit d'un IDE embarqué avec débogueur intégré."

msgid "by Tim Golden"
msgstr "par Tim Golden"

msgid "by David and Paul Boddie"
msgstr "par David et Paul Boddie"

msgid "Py2exe"
msgstr "Py2exe"

msgid "`Py2exe <http://www.py2exe.org/>`_ is a :mod:`distutils` extension (see :ref:`extending-distutils`) which wraps Python scripts into executable Windows programs (:file:`{*}.exe` files).  When you have done this, you can distribute your application without requiring your users to install Python."
msgstr ""

msgid "WConio"
msgstr "WConio"

msgid "Since Python's advanced terminal handling layer, :mod:`curses`, is restricted to Unix-like systems, there is a library exclusive to Windows as well: Windows Console I/O for Python."
msgstr ""

msgid "`WConio <http://newcenturycomputers.net/projects/wconio.html>`_ is a wrapper for Turbo-C's :file:`CONIO.H`, used to create text user interfaces."
msgstr ""

msgid "Compiling Python on Windows"
msgstr "Compiler Python sous Windows"

msgid "For Microsoft Visual C++, which is the compiler with which official Python releases are built, the source tree contains solutions/project files.  View the :file:`readme.txt` in their respective directories:"
msgstr ""

msgid "Directory"
msgstr "Répertoire"

msgid "MSVC version"
msgstr "version de MSVC"

msgid "Visual Studio version"
msgstr "Version de Visual Studio"

msgid ":file:`PC/VC6/`"
msgstr ":file:`PC/VC6/`"

msgid "6.0"
msgstr "6.0"

msgid "97"
msgstr "97"

msgid ":file:`PC/VS7.1/`"
msgstr ":file:`PC/VS7.1/`"

msgid "7.1"
msgstr "7.1"

msgid "2003"
msgstr "2003"

msgid ":file:`PC/VS8.0/`"
msgstr ":file:`PC/VS8.0/`"

msgid "8.0"
msgstr "8.0"

msgid "2005"
msgstr "2005"

msgid ":file:`PCbuild/`"
msgstr ":file:`PCbuild/`"

msgid "9.0"
msgstr "9.0"

msgid "2008"
msgstr "2008"

msgid "Note that not all of these build directories are fully supported.  Read the release notes to see which compiler version the official releases for your version are built with."
msgstr ""

msgid "Check :file:`PC/readme.txt` for general information on the build process."
msgstr ""
"Vérifiez :file:`PC/readme.txt` pour des informations générales sur le "
"processus de construction."

msgid "For extension modules, consult :ref:`building-on-windows`."
msgstr ""

msgid "or \"Creating Python extensions in C/C++ with SWIG and compiling them with MinGW gcc under Windows\" or \"Installing Python extension with distutils and without Microsoft Visual C++\" by Sébastien Sauvage, 2003"
msgstr ""

msgid "by Trent Apted et al, 2007"
msgstr "par Trent Apted et al, 2007"

msgid "Other resources"
msgstr "Autres ressources"

msgid "\"Help for Windows Programmers\" by Mark Hammond and Andy Robinson, O'Reilly Media, 2000, ISBN 1-56592-621-8"
msgstr ""
"\"Help for Windows Programmers\" de Mark Hammond et Andy Robinson, O'Reilly "
"Media, 2000, ISBN 1-56592-621-8"

msgid "by Amanda Birmingham, 2004"
msgstr "par Amanda Birmingham, 2004"
